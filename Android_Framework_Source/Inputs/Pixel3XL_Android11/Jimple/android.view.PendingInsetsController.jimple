public class android.view.PendingInsetsController extends java.lang.Object implements android.view.WindowInsetsController
{
    private static final int KEEP_BEHAVIOR;
    private boolean mAnimationsDisabled;
    private int mAppearance;
    private int mAppearanceMask;
    private int mBehavior;
    private int mCaptionInsetsHeight;
    private java.util.ArrayList mControllableInsetsChangedListeners;
    private final android.view.InsetsState mDummyState;
    private android.view.InsetsController mReplayedInsetsController;
    private final java.util.ArrayList mRequests;

    public void <init>()
    {
        android.view.PendingInsetsController r0;
        java.util.ArrayList $r1, $r3;
        android.view.InsetsState $r2;

        r0 := @this: android.view.PendingInsetsController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests> = $r1;

        r0.<android.view.PendingInsetsController: int mBehavior> = -1;

        $r2 = new android.view.InsetsState;

        specialinvoke $r2.<android.view.InsetsState: void <init>()>();

        r0.<android.view.PendingInsetsController: android.view.InsetsState mDummyState> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners> = $r3;

        r0.<android.view.PendingInsetsController: int mCaptionInsetsHeight> = 0;

        return;
    }

    public void addOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)
    {
        android.view.PendingInsetsController r0;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener r1;
        android.view.InsetsController r2;
        java.util.ArrayList $r3;

        r0 := @this: android.view.PendingInsetsController;

        r1 := @parameter0: android.view.WindowInsetsController$OnControllableInsetsChangedListener;

        r2 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.InsetsController: void addOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)>(r1);

        goto label2;

     label1:
        $r3 = r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        interfaceinvoke r1.<android.view.WindowInsetsController$OnControllableInsetsChangedListener: void onControllableInsetsChanged(android.view.WindowInsetsController,int)>(r0, 0);

     label2:
        return;
    }

    public void controlWindowInsetsAnimation(int, long, android.view.animation.Interpolator, android.os.CancellationSignal, android.view.WindowInsetsAnimationControlListener)
    {
        android.view.PendingInsetsController r0;
        int i0;
        long l1;
        android.view.animation.Interpolator r1;
        android.os.CancellationSignal r2;
        android.view.WindowInsetsAnimationControlListener r3;
        android.view.InsetsController r4;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.view.animation.Interpolator;

        r2 := @parameter3: android.os.CancellationSignal;

        r3 := @parameter4: android.view.WindowInsetsAnimationControlListener;

        r4 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.view.InsetsController: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,android.view.WindowInsetsAnimationControlListener)>(i0, l1, r1, r2, r3);

        goto label2;

     label1:
        interfaceinvoke r3.<android.view.WindowInsetsAnimationControlListener: void onCancelled(android.view.WindowInsetsAnimationController)>(null);

     label2:
        return;
    }

    public void detach()
    {
        android.view.PendingInsetsController r0;

        r0 := @this: android.view.PendingInsetsController;

        r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController> = null;

        return;
    }

    public android.view.InsetsState getState()
    {
        android.view.PendingInsetsController r0;
        android.view.InsetsState $r1;

        r0 := @this: android.view.PendingInsetsController;

        $r1 = r0.<android.view.PendingInsetsController: android.view.InsetsState mDummyState>;

        return $r1;
    }

    public int getSystemBarsAppearance()
    {
        android.view.PendingInsetsController r0;
        android.view.InsetsController r1;
        int $i0, $i1;

        r0 := @this: android.view.PendingInsetsController;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.view.InsetsController: int getSystemBarsAppearance()>();

        return $i1;

     label1:
        $i0 = r0.<android.view.PendingInsetsController: int mAppearance>;

        return $i0;
    }

    public int getSystemBarsBehavior()
    {
        android.view.PendingInsetsController r0;
        android.view.InsetsController r1;
        int $i0, $i1;

        r0 := @this: android.view.PendingInsetsController;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.view.InsetsController: int getSystemBarsBehavior()>();

        return $i1;

     label1:
        $i0 = r0.<android.view.PendingInsetsController: int mBehavior>;

        return $i0;
    }

    public void hide(int)
    {
        android.view.PendingInsetsController r0;
        int i0;
        android.view.InsetsController r1;
        android.view.PendingInsetsController$HideRequest $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.InsetsController: void hide(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests>;

        $r2 = new android.view.PendingInsetsController$HideRequest;

        specialinvoke $r2.<android.view.PendingInsetsController$HideRequest: void <init>(int)>(i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public boolean isRequestedVisible(int)
    {
        android.view.PendingInsetsController r0;
        int i0;
        boolean $z0;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.view.InsetsState: boolean getDefaultVisibility(int)>(i0);

        return $z0;
    }

    public void removeOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)
    {
        android.view.PendingInsetsController r0;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener r1;
        android.view.InsetsController r2;
        java.util.ArrayList $r3;

        r0 := @this: android.view.PendingInsetsController;

        r1 := @parameter0: android.view.WindowInsetsController$OnControllableInsetsChangedListener;

        r2 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.InsetsController: void removeOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)>(r1);

        goto label2;

     label1:
        $r3 = r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void replayAndAttach(android.view.InsetsController)
    {
        android.view.PendingInsetsController r0;
        android.view.InsetsController r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r9;
        java.lang.Object $r7, $r10;
        android.view.WindowInsetsController$OnControllableInsetsChangedListener $r8;
        android.view.PendingInsetsController$PendingRequest $r11;
        int $i0, i1, i2, i3, i4, i5, i6, i7;

        r0 := @this: android.view.PendingInsetsController;

        r1 := @parameter0: android.view.InsetsController;

        i1 = r0.<android.view.PendingInsetsController: int mBehavior>;

        if i1 == -1 goto label1;

        virtualinvoke r1.<android.view.InsetsController: void setSystemBarsBehavior(int)>(i1);

     label1:
        i2 = r0.<android.view.PendingInsetsController: int mAppearanceMask>;

        if i2 == 0 goto label2;

        $i0 = r0.<android.view.PendingInsetsController: int mAppearance>;

        virtualinvoke r1.<android.view.InsetsController: void setSystemBarsAppearance(int,int)>($i0, i2);

     label2:
        i3 = r0.<android.view.PendingInsetsController: int mCaptionInsetsHeight>;

        if i3 == 0 goto label3;

        virtualinvoke r1.<android.view.InsetsController: void setCaptionInsetsHeight(int)>(i3);

     label3:
        $z0 = r0.<android.view.PendingInsetsController: boolean mAnimationsDisabled>;

        if $z0 == 0 goto label4;

        virtualinvoke r1.<android.view.InsetsController: void setAnimationsDisabled(boolean)>(1);

     label4:
        $r2 = r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests>;

        i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i5 = 0;

     label5:
        if i5 >= i4 goto label6;

        $r9 = r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r11 = (android.view.PendingInsetsController$PendingRequest) $r10;

        interfaceinvoke $r11.<android.view.PendingInsetsController$PendingRequest: void replay(android.view.InsetsController)>(r1);

        i5 = i5 + 1;

        goto label5;

     label6:
        $r3 = r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        i6 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i7 = 0;

     label7:
        if i7 >= i6 goto label8;

        $r6 = r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r8 = (android.view.WindowInsetsController$OnControllableInsetsChangedListener) $r7;

        virtualinvoke r1.<android.view.InsetsController: void addOnControllableInsetsChangedListener(android.view.WindowInsetsController$OnControllableInsetsChangedListener)>($r8);

        i7 = i7 + 1;

        goto label7;

     label8:
        $r4 = r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<android.view.PendingInsetsController: java.util.ArrayList mControllableInsetsChangedListeners>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r0.<android.view.PendingInsetsController: int mBehavior> = -1;

        r0.<android.view.PendingInsetsController: int mAppearance> = 0;

        r0.<android.view.PendingInsetsController: int mAppearanceMask> = 0;

        r0.<android.view.PendingInsetsController: boolean mAnimationsDisabled> = 0;

        r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController> = r1;

        return;
    }

    public void setAnimationsDisabled(boolean)
    {
        android.view.PendingInsetsController r0;
        boolean z0;
        android.view.InsetsController r1;

        r0 := @this: android.view.PendingInsetsController;

        z0 := @parameter0: boolean;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.InsetsController: void setAnimationsDisabled(boolean)>(z0);

        goto label2;

     label1:
        r0.<android.view.PendingInsetsController: boolean mAnimationsDisabled> = z0;

     label2:
        return;
    }

    public void setCaptionInsetsHeight(int)
    {
        android.view.PendingInsetsController r0;
        int i0;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        r0.<android.view.PendingInsetsController: int mCaptionInsetsHeight> = i0;

        return;
    }

    public void setSystemBarsAppearance(int, int)
    {
        android.view.PendingInsetsController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.InsetsController r1;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.InsetsController: void setSystemBarsAppearance(int,int)>(i0, i1);

        goto label2;

     label1:
        $i2 = r0.<android.view.PendingInsetsController: int mAppearance>;

        $i4 = $i2 & i1;

        $i3 = i0 & i1;

        $i5 = $i4 | $i3;

        r0.<android.view.PendingInsetsController: int mAppearance> = $i5;

        $i6 = r0.<android.view.PendingInsetsController: int mAppearanceMask>;

        $i7 = $i6 | i1;

        r0.<android.view.PendingInsetsController: int mAppearanceMask> = $i7;

     label2:
        return;
    }

    public void setSystemBarsBehavior(int)
    {
        android.view.PendingInsetsController r0;
        int i0;
        android.view.InsetsController r1;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.InsetsController: void setSystemBarsBehavior(int)>(i0);

        goto label2;

     label1:
        r0.<android.view.PendingInsetsController: int mBehavior> = i0;

     label2:
        return;
    }

    public void show(int)
    {
        android.view.PendingInsetsController r0;
        int i0;
        android.view.InsetsController r1;
        android.view.PendingInsetsController$ShowRequest $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.view.PendingInsetsController;

        i0 := @parameter0: int;

        r1 = r0.<android.view.PendingInsetsController: android.view.InsetsController mReplayedInsetsController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.InsetsController: void show(int)>(i0);

        goto label2;

     label1:
        $r3 = r0.<android.view.PendingInsetsController: java.util.ArrayList mRequests>;

        $r2 = new android.view.PendingInsetsController$ShowRequest;

        specialinvoke $r2.<android.view.PendingInsetsController$ShowRequest: void <init>(int)>(i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.view.PendingInsetsController: int KEEP_BEHAVIOR> = -1;

        return;
    }
}
