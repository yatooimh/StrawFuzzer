public final class android.view.PointerIcon extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public static final int TYPE_ALIAS;
    public static final int TYPE_ALL_SCROLL;
    public static final int TYPE_ARROW;
    public static final int TYPE_CELL;
    public static final int TYPE_CONTEXT_MENU;
    public static final int TYPE_COPY;
    public static final int TYPE_CROSSHAIR;
    public static final int TYPE_CUSTOM;
    public static final int TYPE_DEFAULT;
    public static final int TYPE_GRAB;
    public static final int TYPE_GRABBING;
    public static final int TYPE_HAND;
    public static final int TYPE_HELP;
    public static final int TYPE_HORIZONTAL_DOUBLE_ARROW;
    public static final int TYPE_NOT_SPECIFIED;
    public static final int TYPE_NO_DROP;
    public static final int TYPE_NULL;
    private static final int TYPE_OEM_FIRST;
    public static final int TYPE_SPOT_ANCHOR;
    public static final int TYPE_SPOT_HOVER;
    public static final int TYPE_SPOT_TOUCH;
    public static final int TYPE_TEXT;
    public static final int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW;
    public static final int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW;
    public static final int TYPE_VERTICAL_DOUBLE_ARROW;
    public static final int TYPE_VERTICAL_TEXT;
    public static final int TYPE_WAIT;
    public static final int TYPE_ZOOM_IN;
    public static final int TYPE_ZOOM_OUT;
    private static final android.view.PointerIcon gNullIcon;
    private static final android.util.SparseArray gSystemIconsByDisplay;
    private static android.hardware.display.DisplayManager$DisplayListener sDisplayListener;
    private static boolean sUseLargeIcons;
    private android.graphics.Bitmap mBitmap;
    private android.graphics.Bitmap[] mBitmapFrames;
    private int mDurationPerFrame;
    private float mHotSpotX;
    private float mHotSpotY;
    private int mSystemIconResourceId;
    private final int mType;

    static void <clinit>()
    {
        android.view.PointerIcon $r0;
        android.util.SparseArray $r1;
        android.view.PointerIcon$1 $r2;

        <android.view.PointerIcon: int TYPE_ZOOM_OUT> = 1019;

        <android.view.PointerIcon: int TYPE_ZOOM_IN> = 1018;

        <android.view.PointerIcon: int TYPE_WAIT> = 1004;

        <android.view.PointerIcon: int TYPE_VERTICAL_TEXT> = 1009;

        <android.view.PointerIcon: int TYPE_VERTICAL_DOUBLE_ARROW> = 1015;

        <android.view.PointerIcon: int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW> = 1016;

        <android.view.PointerIcon: int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW> = 1017;

        <android.view.PointerIcon: int TYPE_TEXT> = 1008;

        <android.view.PointerIcon: int TYPE_SPOT_TOUCH> = 2001;

        <android.view.PointerIcon: int TYPE_SPOT_HOVER> = 2000;

        <android.view.PointerIcon: int TYPE_SPOT_ANCHOR> = 2002;

        <android.view.PointerIcon: int TYPE_OEM_FIRST> = 10000;

        <android.view.PointerIcon: int TYPE_NULL> = 0;

        <android.view.PointerIcon: int TYPE_NO_DROP> = 1012;

        <android.view.PointerIcon: int TYPE_NOT_SPECIFIED> = 1;

        <android.view.PointerIcon: int TYPE_HORIZONTAL_DOUBLE_ARROW> = 1014;

        <android.view.PointerIcon: int TYPE_HELP> = 1003;

        <android.view.PointerIcon: int TYPE_HAND> = 1002;

        <android.view.PointerIcon: int TYPE_GRABBING> = 1021;

        <android.view.PointerIcon: int TYPE_GRAB> = 1020;

        <android.view.PointerIcon: int TYPE_DEFAULT> = 1000;

        <android.view.PointerIcon: int TYPE_CUSTOM> = -1;

        <android.view.PointerIcon: int TYPE_CROSSHAIR> = 1007;

        <android.view.PointerIcon: int TYPE_COPY> = 1011;

        <android.view.PointerIcon: int TYPE_CONTEXT_MENU> = 1001;

        <android.view.PointerIcon: int TYPE_CELL> = 1006;

        <android.view.PointerIcon: int TYPE_ARROW> = 1000;

        <android.view.PointerIcon: int TYPE_ALL_SCROLL> = 1013;

        <android.view.PointerIcon: int TYPE_ALIAS> = 1010;

        <android.view.PointerIcon: java.lang.String TAG> = "PointerIcon";

        $r0 = new android.view.PointerIcon;

        specialinvoke $r0.<android.view.PointerIcon: void <init>(int)>(0);

        <android.view.PointerIcon: android.view.PointerIcon gNullIcon> = $r0;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <android.view.PointerIcon: android.util.SparseArray gSystemIconsByDisplay> = $r1;

        <android.view.PointerIcon: boolean sUseLargeIcons> = 0;

        $r2 = new android.view.PointerIcon$1;

        specialinvoke $r2.<android.view.PointerIcon$1: void <init>()>();

        <android.view.PointerIcon: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    private void <init>(int)
    {
        android.view.PointerIcon r0;
        int i0;

        r0 := @this: android.view.PointerIcon;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.PointerIcon: int mType> = i0;

        return;
    }

    void <init>(int, android.view.PointerIcon$1)
    {
        android.view.PointerIcon r0;
        int i0;
        android.view.PointerIcon$1 r1;

        r0 := @this: android.view.PointerIcon;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.PointerIcon$1;

        specialinvoke r0.<android.view.PointerIcon: void <init>(int)>(i0);

        return;
    }

    static int access$102(android.view.PointerIcon, int)
    {
        android.view.PointerIcon r0;
        int i0;

        r0 := @parameter0: android.view.PointerIcon;

        i0 := @parameter1: int;

        r0.<android.view.PointerIcon: int mSystemIconResourceId> = i0;

        return i0;
    }

    static android.util.SparseArray access$200()
    {
        android.util.SparseArray $r0;

        $r0 = <android.view.PointerIcon: android.util.SparseArray gSystemIconsByDisplay>;

        return $r0;
    }

    public static android.view.PointerIcon create(android.graphics.Bitmap, float, float)
    {
        android.graphics.Bitmap r0;
        float f0, f1;
        java.lang.IllegalArgumentException $r2;
        android.view.PointerIcon $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        if r0 == null goto label1;

        staticinvoke <android.view.PointerIcon: void validateHotSpot(android.graphics.Bitmap,float,float)>(r0, f0, f1);

        $r3 = new android.view.PointerIcon;

        specialinvoke $r3.<android.view.PointerIcon: void <init>(int)>(-1);

        $r3.<android.view.PointerIcon: android.graphics.Bitmap mBitmap> = r0;

        $r3.<android.view.PointerIcon: float mHotSpotX> = f0;

        $r3.<android.view.PointerIcon: float mHotSpotY> = f1;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bitmap must not be null");

        throw $r2;
    }

    private android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.BitmapDrawable)
    {
        android.view.PointerIcon r0;
        android.graphics.Bitmap r1, r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect $r6;
        android.graphics.RectF $r7;
        float $f0, $f1;
        android.graphics.Bitmap$Config $r8;
        android.graphics.Canvas $r9;
        android.graphics.Paint $r10;
        android.graphics.drawable.BitmapDrawable r11;

        r0 := @this: android.view.PointerIcon;

        r11 := @parameter0: android.graphics.drawable.BitmapDrawable;

        r1 = virtualinvoke r11.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        i0 = virtualinvoke r11.<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r11.<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if i0 != $i2 goto label1;

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if i1 != $i5 goto label1;

        return r1;

     label1:
        $r6 = new android.graphics.Rect;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i3, $i4);

        $r7 = new android.graphics.RectF;

        $f1 = (float) i0;

        $f0 = (float) i1;

        specialinvoke $r7.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $r8 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r8);

        $r9 = new android.graphics.Canvas;

        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r10.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        virtualinvoke $r9.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r1, $r6, $r7, $r10);

        return r3;
    }

    public static android.view.PointerIcon getDefaultIcon(android.content.Context)
    {
        android.content.Context r0;
        android.view.PointerIcon $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>(r0, 1000);

        return $r1;
    }

    public static android.view.PointerIcon getNullIcon()
    {
        android.view.PointerIcon $r0;

        $r0 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        return $r0;
    }

    public static android.view.PointerIcon getSystemIcon(android.content.Context, int)
    {
        int i0, $i1, i3, i4, i5, i6, i7;
        java.lang.IllegalArgumentException $r0;
        android.hardware.display.DisplayManager$DisplayListener $r1;
        android.util.SparseArray $r2, $r12, $r13, r16, r17;
        java.lang.Object $r3, $r4;
        boolean $z0;
        int[] $r5;
        android.view.PointerIcon $r6, $r14, r18, r21;
        android.content.res.Resources $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11;
        android.content.Context r15;
        android.content.res.TypedArray r19;

        r15 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if r15 == null goto label13;

        if i0 != 0 goto label01;

        $r14 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        return $r14;

     label01:
        $r1 = <android.view.PointerIcon: android.hardware.display.DisplayManager$DisplayListener sDisplayListener>;

        if $r1 != null goto label02;

        staticinvoke <android.view.PointerIcon: void registerDisplayListener(android.content.Context)>(r15);

     label02:
        i3 = virtualinvoke r15.<android.content.Context: int getDisplayId()>();

        $r2 = <android.view.PointerIcon: android.util.SparseArray gSystemIconsByDisplay>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r16 = (android.util.SparseArray) $r3;

        r17 = r16;

        if r16 != null goto label03;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r17 = $r12;

        $r13 = <android.view.PointerIcon: android.util.SparseArray gSystemIconsByDisplay>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>(i3, $r12);

     label03:
        $r4 = virtualinvoke r17.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r18 = (android.view.PointerIcon) $r4;

        if r18 == null goto label04;

        return r18;

     label04:
        i4 = staticinvoke <android.view.PointerIcon: int getSystemIconTypeIndex(int)>(i0);

        i5 = i4;

        if i4 != 0 goto label05;

        i5 = staticinvoke <android.view.PointerIcon: int getSystemIconTypeIndex(int)>(1000);

     label05:
        $z0 = <android.view.PointerIcon: boolean sUseLargeIcons>;

        if $z0 == 0 goto label06;

        i6 = 16974639;

        goto label07;

     label06:
        i6 = 16974647;

     label07:
        $r5 = <com.android.internal.R$styleable: int[] Pointer>;

        r19 = virtualinvoke r15.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r5, 0, i6);

        i7 = virtualinvoke r19.<android.content.res.TypedArray: int getResourceId(int,int)>(i5, -1);

        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        if i7 != -1 goto label10;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing theme resources for pointer icon type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PointerIcon", $r11);

        if i0 != 1000 goto label08;

        r21 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        goto label09;

     label08:
        r21 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>(r15, 1000);

     label09:
        return r21;

     label10:
        $r6 = new android.view.PointerIcon;

        specialinvoke $r6.<android.view.PointerIcon: void <init>(int)>(i0);

        $i1 = -16777216 & i7;

        if $i1 != 16777216 goto label11;

        $r6.<android.view.PointerIcon: int mSystemIconResourceId> = i7;

        goto label12;

     label11:
        $r7 = virtualinvoke r15.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r6.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(r15, $r7, i7);

     label12:
        virtualinvoke r17.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, $r6);

        return $r6;

     label13:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r0;
    }

    private static int getSystemIconTypeIndex(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1000: goto label27;
            case 1001: goto label26;
            case 1002: goto label25;
            case 1003: goto label24;
            case 1004: goto label23;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 1006: goto label22;
            case 1007: goto label21;
            case 1008: goto label20;
            case 1009: goto label19;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 1011: goto label18;
            case 1012: goto label17;
            case 1013: goto label16;
            case 1014: goto label15;
            case 1015: goto label14;
            case 1016: goto label13;
            case 1017: goto label12;
            case 1018: goto label11;
            case 1019: goto label10;
            case 1020: goto label09;
            case 1021: goto label08;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 2000: goto label07;
            case 2001: goto label06;
            case 2002: goto label05;
            default: goto label04;
        };

     label04:
        return 0;

     label05:
        return 13;

     label06:
        return 15;

     label07:
        return 14;

     label08:
        return 8;

     label09:
        return 7;

     label10:
        return 23;

     label11:
        return 22;

     label12:
        return 17;

     label13:
        return 18;

     label14:
        return 19;

     label15:
        return 11;

     label16:
        return 1;

     label17:
        return 12;

     label18:
        return 5;

     label19:
        return 20;

     label20:
        return 16;

     label21:
        return 6;

     label22:
        return 3;

     label23:
        return 21;

     label24:
        return 10;

     label25:
        return 9;

     label26:
        return 4;

     label27:
        return 2;
    }

    public static android.view.PointerIcon load(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        android.view.PointerIcon $r3;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r3 = new android.view.PointerIcon;

        specialinvoke $r3.<android.view.PointerIcon: void <init>(int)>(-1);

        specialinvoke $r3.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(null, r0, i0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resources must not be null");

        throw $r2;
    }

    private void loadResource(android.content.Context, android.content.res.Resources, int)
    {
        android.view.PointerIcon r0;
        android.content.res.TypedArray r1;
        float f0, f1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i9, i10, i11;
        int[] $r2;
        java.lang.IllegalArgumentException $r3, $r4, $r7, $r12, r30;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.BitmapDrawable $r5, r25;
        android.graphics.Bitmap[] $r6, $r14;
        java.lang.StringBuilder $r8;
        java.lang.String $r13;
        android.graphics.Bitmap $r15, r27;
        java.lang.Exception $r16;
        java.lang.Throwable $r17;
        android.content.Context r18;
        android.content.res.Resources r19;
        android.content.res.XmlResourceParser r20;
        android.graphics.drawable.Drawable r21, r22, r24;
        android.graphics.drawable.AnimationDrawable r23;

        r0 := @this: android.view.PointerIcon;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: android.content.res.Resources;

        i9 := @parameter2: int;

        r20 = virtualinvoke r19.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i9);

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r20, "pointer-icon");

        $r2 = <com.android.internal.R$styleable: int[] PointerIcon>;

        r1 = virtualinvoke r19.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r20, $r2);

        i10 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(1, 0.0F);

        f1 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(2, 0.0F);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

     label02:
        interfaceinvoke r20.<android.content.res.XmlResourceParser: void close()>();

        if i10 == 0 goto label11;

        if r18 != null goto label03;

        r21 = virtualinvoke r19.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i10);

        goto label04;

     label03:
        r21 = virtualinvoke r18.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i10);

     label04:
        r22 = r21;

        $z0 = r21 instanceof android.graphics.drawable.AnimationDrawable;

        if $z0 == 0 goto label09;

        r23 = (android.graphics.drawable.AnimationDrawable) r21;

        i0 = virtualinvoke r23.<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>();

        r22 = virtualinvoke r23.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>(0);

        if i0 != 1 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PointerIcon", "Animation icon with single frame -- simply treating the first frame as a normal bitmap icon.");

        goto label09;

     label05:
        $i3 = virtualinvoke r23.<android.graphics.drawable.AnimationDrawable: int getDuration(int)>(0);

        r0.<android.view.PointerIcon: int mDurationPerFrame> = $i3;

        $i4 = i0 - 1;

        $r6 = newarray (android.graphics.Bitmap)[$i4];

        r0.<android.view.PointerIcon: android.graphics.Bitmap[] mBitmapFrames> = $r6;

        i1 = virtualinvoke r22.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i2 = virtualinvoke r22.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i11 = 1;

     label06:
        if i11 >= i0 goto label09;

        r24 = virtualinvoke r23.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>(i11);

        $z1 = r24 instanceof android.graphics.drawable.BitmapDrawable;

        if $z1 == 0 goto label08;

        $i5 = virtualinvoke r24.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if $i5 != i1 goto label07;

        $i6 = virtualinvoke r24.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i6 != i2 goto label07;

        r25 = (android.graphics.drawable.BitmapDrawable) r24;

        $r14 = r0.<android.view.PointerIcon: android.graphics.Bitmap[] mBitmapFrames>;

        $i7 = i11 - 1;

        $r15 = specialinvoke r0.<android.view.PointerIcon: android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.BitmapDrawable)>(r25);

        $r14[$i7] = $r15;

        i11 = i11 + 1;

        goto label06;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The bitmap size of ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-th frame is different. All frames should have the exact same size and share the same hotspot.");

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label08:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Frame of an animated pointer icon must refer to a bitmap drawable.");

        throw $r7;

     label09:
        $z2 = r22 instanceof android.graphics.drawable.BitmapDrawable;

        if $z2 == 0 goto label10;

        $r5 = (android.graphics.drawable.BitmapDrawable) r22;

        r27 = specialinvoke r0.<android.view.PointerIcon: android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.BitmapDrawable)>($r5);

        staticinvoke <android.view.PointerIcon: void validateHotSpot(android.graphics.Bitmap,float,float)>(r27, f0, f1);

        r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap> = r27;

        r0.<android.view.PointerIcon: float mHotSpotX> = f0;

        r0.<android.view.PointerIcon: float mHotSpotY> = f1;

        return;

     label10:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("<pointer-icon> bitmap attribute must refer to a bitmap drawable.");

        throw $r4;

     label11:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("<pointer-icon> is missing bitmap attribute.");

        throw $r3;

     label12:
        $r17 := @caughtexception;

        goto label15;

     label13:
        $r16 := @caughtexception;

     label14:
        r30 = new java.lang.IllegalArgumentException;

        specialinvoke r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Exception parsing pointer icon resource.", $r16);

        throw r30;

     label15:
        interfaceinvoke r20.<android.content.res.XmlResourceParser: void close()>();

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }

    private static void registerDisplayListener(android.content.Context)
    {
        android.content.Context r0;
        android.view.PointerIcon$2 $r1;
        java.lang.Object $r2;
        android.hardware.display.DisplayManager$DisplayListener $r3;
        android.hardware.display.DisplayManager $r4;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.view.PointerIcon$2;

        specialinvoke $r1.<android.view.PointerIcon$2: void <init>()>();

        <android.view.PointerIcon: android.hardware.display.DisplayManager$DisplayListener sDisplayListener> = $r1;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        $r4 = (android.hardware.display.DisplayManager) $r2;

        $r3 = <android.view.PointerIcon: android.hardware.display.DisplayManager$DisplayListener sDisplayListener>;

        virtualinvoke $r4.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r3, null);

        return;
    }

    public static void setUseLargeIcons(boolean)
    {
        boolean z0;
        android.util.SparseArray $r0;

        z0 := @parameter0: boolean;

        <android.view.PointerIcon: boolean sUseLargeIcons> = z0;

        $r0 = <android.view.PointerIcon: android.util.SparseArray gSystemIconsByDisplay>;

        virtualinvoke $r0.<android.util.SparseArray: void clear()>();

        return;
    }

    private static void validateHotSpot(android.graphics.Bitmap, float, float)
    {
        android.graphics.Bitmap r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b2, $b3, $b5;
        java.lang.IllegalArgumentException $r1, $r2;
        int $i1, $i4;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label2;

        $i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i1;

        $b2 = f0 cmpl $f2;

        if $b2 >= 0 goto label2;

        $b3 = f1 cmpg 0.0F;

        if $b3 < 0 goto label1;

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f3 = (float) $i4;

        $b5 = f1 cmpl $f3;

        if $b5 >= 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("y hotspot lies outside of the bitmap area");

        throw $r2;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x hotspot lies outside of the bitmap area");

        throw $r1;
    }

    public int describeContents()
    {
        android.view.PointerIcon r0;

        r0 := @this: android.view.PointerIcon;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.PointerIcon r0, r4;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        android.graphics.Bitmap $r1, $r2;
        float $f0, $f1, $f2, $f3;
        byte $b4, $b5;
        java.lang.Object r3;

        r0 := @this: android.view.PointerIcon;

        r3 := @parameter0: java.lang.Object;

        if r0 != r3 goto label1;

        return 1;

     label1:
        if r3 == null goto label7;

        $z0 = r3 instanceof android.view.PointerIcon;

        if $z0 != 0 goto label2;

        goto label7;

     label2:
        r4 = (android.view.PointerIcon) r3;

        $i2 = r0.<android.view.PointerIcon: int mType>;

        $i1 = r4.<android.view.PointerIcon: int mType>;

        if $i2 != $i1 goto label6;

        i0 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        $i3 = r4.<android.view.PointerIcon: int mSystemIconResourceId>;

        if i0 == $i3 goto label3;

        goto label6;

     label3:
        if i0 != 0 goto label5;

        $r2 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        $r1 = r4.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        if $r2 != $r1 goto label4;

        $f1 = r0.<android.view.PointerIcon: float mHotSpotX>;

        $f0 = r4.<android.view.PointerIcon: float mHotSpotX>;

        $b4 = $f1 cmpl $f0;

        if $b4 != 0 goto label4;

        $f3 = r0.<android.view.PointerIcon: float mHotSpotY>;

        $f2 = r4.<android.view.PointerIcon: float mHotSpotY>;

        $b5 = $f3 cmpl $f2;

        if $b5 == 0 goto label5;

     label4:
        return 0;

     label5:
        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    public int getType()
    {
        android.view.PointerIcon r0;
        int $i0;

        r0 := @this: android.view.PointerIcon;

        $i0 = r0.<android.view.PointerIcon: int mType>;

        return $i0;
    }

    public android.view.PointerIcon load(android.content.Context)
    {
        android.view.PointerIcon r0, $r5;
        android.content.Context r1;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap $r4;
        android.content.res.Resources $r6;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: android.content.Context;

        if r1 == null goto label3;

        $i0 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i0 == 0 goto label2;

        $r4 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        if $r4 == null goto label1;

        goto label2;

     label1:
        $r5 = new android.view.PointerIcon;

        $i1 = r0.<android.view.PointerIcon: int mType>;

        specialinvoke $r5.<android.view.PointerIcon: void <init>(int)>($i1);

        $i2 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        $r5.<android.view.PointerIcon: int mSystemIconResourceId> = $i2;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        specialinvoke $r5.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(r1, $r6, $i3);

        return $r5;

     label2:
        return r0;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.PointerIcon r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Bitmap $r2;
        float $f0, $f1;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.PointerIcon: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.PointerIcon: int mType>;

        if $i2 == 0 goto label1;

        $i3 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i4 != 0 goto label1;

        $r2 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r2.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $f0 = r0.<android.view.PointerIcon: float mHotSpotX>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.PointerIcon: float mHotSpotY>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

     label1:
        return;
    }
}
