public class android.view.RenderNodeAnimator extends android.graphics.animation.RenderNodeAnimator implements android.graphics.animation.RenderNodeAnimator$ViewListener
{
    private android.view.View mViewTarget;

    public void <init>(int, float)
    {
        android.view.RenderNodeAnimator r0;
        int i0;
        float f0;

        r0 := @this: android.view.RenderNodeAnimator;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.graphics.animation.RenderNodeAnimator: void <init>(int,float)>(i0, f0);

        return;
    }

    public void <init>(int, int, float, float)
    {
        android.view.RenderNodeAnimator r0;
        int i0, i1;
        float f0, f1;

        r0 := @this: android.view.RenderNodeAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<android.graphics.animation.RenderNodeAnimator: void <init>(int,int,float,float)>(i0, i1, f0, f1);

        return;
    }

    public void <init>(android.graphics.CanvasProperty, float)
    {
        android.view.RenderNodeAnimator r0;
        android.graphics.CanvasProperty r1;
        float f0;

        r0 := @this: android.view.RenderNodeAnimator;

        r1 := @parameter0: android.graphics.CanvasProperty;

        f0 := @parameter1: float;

        specialinvoke r0.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>(r1, f0);

        return;
    }

    public void <init>(android.graphics.CanvasProperty, int, float)
    {
        android.view.RenderNodeAnimator r0;
        android.graphics.CanvasProperty r1;
        int i0;
        float f0;

        r0 := @this: android.view.RenderNodeAnimator;

        r1 := @parameter0: android.graphics.CanvasProperty;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,int,float)>(r1, i0, f0);

        return;
    }

    public void invalidateParent(boolean)
    {
        android.view.RenderNodeAnimator r0;
        boolean z0;
        android.view.View $r1;

        r0 := @this: android.view.RenderNodeAnimator;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.RenderNodeAnimator: android.view.View mViewTarget>;

        virtualinvoke $r1.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        return;
    }

    public void onAlphaAnimationStart(float)
    {
        android.view.RenderNodeAnimator r0;
        float f0;
        android.view.View $r1, $r2;

        r0 := @this: android.view.RenderNodeAnimator;

        f0 := @parameter0: float;

        $r1 = r0.<android.view.RenderNodeAnimator: android.view.View mViewTarget>;

        virtualinvoke $r1.<android.view.View: void ensureTransformationInfo()>();

        $r2 = r0.<android.view.RenderNodeAnimator: android.view.View mViewTarget>;

        virtualinvoke $r2.<android.view.View: void setAlphaInternal(float)>(f0);

        return;
    }

    public void setTarget(android.view.View)
    {
        android.view.RenderNodeAnimator r0;
        android.view.View r1, $r2;
        android.graphics.RenderNode $r3;

        r0 := @this: android.view.RenderNodeAnimator;

        r1 := @parameter0: android.view.View;

        r0.<android.view.RenderNodeAnimator: android.view.View mViewTarget> = r1;

        virtualinvoke r0.<android.view.RenderNodeAnimator: void setViewListener(android.graphics.animation.RenderNodeAnimator$ViewListener)>(r0);

        $r2 = r0.<android.view.RenderNodeAnimator: android.view.View mViewTarget>;

        $r3 = $r2.<android.view.View: android.graphics.RenderNode mRenderNode>;

        virtualinvoke r0.<android.view.RenderNodeAnimator: void setTarget(android.graphics.RenderNode)>($r3);

        return;
    }
}
