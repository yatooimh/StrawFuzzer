public class android.view.ScaleGestureDetector extends java.lang.Object
{
    private static final int ANCHORED_SCALE_MODE_DOUBLE_TAP;
    private static final int ANCHORED_SCALE_MODE_NONE;
    private static final int ANCHORED_SCALE_MODE_STYLUS;
    private static final float SCALE_FACTOR;
    private static final java.lang.String TAG;
    private static final long TOUCH_STABILIZE_TIME;
    private int mAnchoredScaleMode;
    private float mAnchoredScaleStartX;
    private float mAnchoredScaleStartY;
    private final android.content.Context mContext;
    private float mCurrSpan;
    private float mCurrSpanX;
    private float mCurrSpanY;
    private long mCurrTime;
    private boolean mEventBeforeOrAboveStartingGestureEvent;
    private float mFocusX;
    private float mFocusY;
    private android.view.GestureDetector mGestureDetector;
    private final android.os.Handler mHandler;
    private boolean mInProgress;
    private float mInitialSpan;
    private final android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier;
    private final android.view.ScaleGestureDetector$OnScaleGestureListener mListener;
    private int mMinSpan;
    private float mPrevSpan;
    private float mPrevSpanX;
    private float mPrevSpanY;
    private long mPrevTime;
    private boolean mQuickScaleEnabled;
    private int mSpanSlop;
    private boolean mStylusScaleEnabled;

    public void <init>(android.content.Context, android.view.ScaleGestureDetector$OnScaleGestureListener)
    {
        android.view.ScaleGestureDetector r0;
        android.content.Context r1;
        android.view.ScaleGestureDetector$OnScaleGestureListener r2;

        r0 := @this: android.view.ScaleGestureDetector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ScaleGestureDetector$OnScaleGestureListener;

        specialinvoke r0.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener,android.os.Handler)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, android.view.ScaleGestureDetector$OnScaleGestureListener, android.os.Handler)
    {
        android.view.ScaleGestureDetector r0;
        android.content.Context r1;
        android.os.Handler r2;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        android.view.InputEventConsistencyVerifier $r4, r6;
        android.view.ScaleGestureDetector$OnScaleGestureListener r5;
        android.view.ViewConfiguration r7;

        r0 := @this: android.view.ScaleGestureDetector;

        r1 := @parameter0: android.content.Context;

        r5 := @parameter1: android.view.ScaleGestureDetector$OnScaleGestureListener;

        r2 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode> = 0;

        $z0 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r4.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>(r0, 0);

        r6 = $r4;

        goto label2;

     label1:
        r6 = null;

     label2:
        r0.<android.view.ScaleGestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier> = r6;

        r0.<android.view.ScaleGestureDetector: android.content.Context mContext> = r1;

        r0.<android.view.ScaleGestureDetector: android.view.ScaleGestureDetector$OnScaleGestureListener mListener> = r5;

        r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i1 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $i2 = $i1 * 2;

        r0.<android.view.ScaleGestureDetector: int mSpanSlop> = $i2;

        $i3 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledMinimumScalingSpan()>();

        r0.<android.view.ScaleGestureDetector: int mMinSpan> = $i3;

        r0.<android.view.ScaleGestureDetector: android.os.Handler mHandler> = r2;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i0 <= 18 goto label3;

        virtualinvoke r0.<android.view.ScaleGestureDetector: void setQuickScaleEnabled(boolean)>(1);

     label3:
        if i0 <= 22 goto label4;

        virtualinvoke r0.<android.view.ScaleGestureDetector: void setStylusScaleEnabled(boolean)>(1);

     label4:
        return;
    }

    static float access$002(android.view.ScaleGestureDetector, float)
    {
        android.view.ScaleGestureDetector r0;
        float f0;

        r0 := @parameter0: android.view.ScaleGestureDetector;

        f0 := @parameter1: float;

        r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartX> = f0;

        return f0;
    }

    static float access$102(android.view.ScaleGestureDetector, float)
    {
        android.view.ScaleGestureDetector r0;
        float f0;

        r0 := @parameter0: android.view.ScaleGestureDetector;

        f0 := @parameter1: float;

        r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartY> = f0;

        return f0;
    }

    static int access$202(android.view.ScaleGestureDetector, int)
    {
        android.view.ScaleGestureDetector r0;
        int i0;

        r0 := @parameter0: android.view.ScaleGestureDetector;

        i0 := @parameter1: int;

        r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode> = i0;

        return i0;
    }

    private boolean inAnchoredScaleMode()
    {
        android.view.ScaleGestureDetector r0;
        int $i0;
        boolean z0;

        r0 := @this: android.view.ScaleGestureDetector;

        $i0 = r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public float getCurrentSpan()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        return $f0;
    }

    public float getCurrentSpanX()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mCurrSpanX>;

        return $f0;
    }

    public float getCurrentSpanY()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mCurrSpanY>;

        return $f0;
    }

    public long getEventTime()
    {
        android.view.ScaleGestureDetector r0;
        long $l0;

        r0 := @this: android.view.ScaleGestureDetector;

        $l0 = r0.<android.view.ScaleGestureDetector: long mCurrTime>;

        return $l0;
    }

    public float getFocusX()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mFocusX>;

        return $f0;
    }

    public float getFocusY()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mFocusY>;

        return $f0;
    }

    public float getPreviousSpan()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        return $f0;
    }

    public float getPreviousSpanX()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mPrevSpanX>;

        return $f0;
    }

    public float getPreviousSpanY()
    {
        android.view.ScaleGestureDetector r0;
        float $f0;

        r0 := @this: android.view.ScaleGestureDetector;

        $f0 = r0.<android.view.ScaleGestureDetector: float mPrevSpanY>;

        return $f0;
    }

    public float getScaleFactor()
    {
        android.view.ScaleGestureDetector r0;
        boolean z0, $z1, $z2, z3;
        byte $b0, $b1, $b2, $b4;
        float $f0, $f1, $f2, $f3, $f4, f5, $f6, $f7, $f8, $f9, $f10, f11, $f12, $f13, f14;
        int $i3;

        r0 := @this: android.view.ScaleGestureDetector;

        z0 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        f5 = 1.0F;

        if z0 == 0 goto label8;

        $z1 = r0.<android.view.ScaleGestureDetector: boolean mEventBeforeOrAboveStartingGestureEvent>;

        if $z1 == 0 goto label1;

        $f4 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        $f3 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        $b2 = $f4 cmpg $f3;

        if $b2 < 0 goto label2;

     label1:
        $z2 = r0.<android.view.ScaleGestureDetector: boolean mEventBeforeOrAboveStartingGestureEvent>;

        if $z2 != 0 goto label3;

        $f2 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        $f1 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        $b1 = $f2 cmpl $f1;

        if $b1 <= 0 goto label3;

     label2:
        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        $f6 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        $f7 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        $f8 = $f6 / $f7;

        $f9 = 1.0F - $f8;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        f11 = $f10 * 0.5F;

        $f12 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        $i3 = r0.<android.view.ScaleGestureDetector: int mSpanSlop>;

        $f13 = (float) $i3;

        $b4 = $f12 cmpg $f13;

        if $b4 > 0 goto label5;

        goto label7;

     label5:
        if z3 == 0 goto label6;

        f5 = 1.0F + f11;

        goto label7;

     label6:
        f5 = 1.0F - f11;

     label7:
        return f5;

     label8:
        f14 = r0.<android.view.ScaleGestureDetector: float mPrevSpan>;

        $b0 = f14 cmpl 0.0F;

        if $b0 <= 0 goto label9;

        $f0 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        f5 = $f0 / f14;

     label9:
        return f5;
    }

    public long getTimeDelta()
    {
        android.view.ScaleGestureDetector r0;
        long $l0, $l1, $l2;

        r0 := @this: android.view.ScaleGestureDetector;

        $l1 = r0.<android.view.ScaleGestureDetector: long mCurrTime>;

        $l0 = r0.<android.view.ScaleGestureDetector: long mPrevTime>;

        $l2 = $l1 - $l0;

        return $l2;
    }

    public boolean isInProgress()
    {
        android.view.ScaleGestureDetector r0;
        boolean $z0;

        r0 := @this: android.view.ScaleGestureDetector;

        $z0 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        return $z0;
    }

    public boolean isQuickScaleEnabled()
    {
        android.view.ScaleGestureDetector r0;
        boolean $z0;

        r0 := @this: android.view.ScaleGestureDetector;

        $z0 = r0.<android.view.ScaleGestureDetector: boolean mQuickScaleEnabled>;

        return $z0;
    }

    public boolean isStylusScaleEnabled()
    {
        android.view.ScaleGestureDetector r0;
        boolean $z0;

        r0 := @this: android.view.ScaleGestureDetector;

        $z0 = r0.<android.view.ScaleGestureDetector: boolean mStylusScaleEnabled>;

        return $z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.ScaleGestureDetector r0;
        android.view.MotionEvent r1;
        android.view.InputEventConsistencyVerifier r2;
        int i0, i1, $i3, $i4, $i5, $i9, $i11, i14, i15, i16, i17, i18;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34;
        long $l2, $l6, $l8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z15, z16, z17, z18, z19, z20, z21;
        double $d0, $d1, $d2;
        android.view.ScaleGestureDetector$OnScaleGestureListener $r3, $r4, $r5, $r6;
        byte $b7, $b10, $b12, $b13;
        android.view.GestureDetector $r7;

        r0 := @this: android.view.ScaleGestureDetector;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.ScaleGestureDetector: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if r2 == null goto label01;

        virtualinvoke r2.<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>(r1, 0);

     label01:
        $l2 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        r0.<android.view.ScaleGestureDetector: long mCurrTime> = $l2;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $z0 = r0.<android.view.ScaleGestureDetector: boolean mQuickScaleEnabled>;

        if $z0 == 0 goto label02;

        $r7 = r0.<android.view.ScaleGestureDetector: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r7.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

     label02:
        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        $i4 = $i3 & 32;

        if $i4 == 0 goto label03;

        z15 = 1;

        goto label04;

     label03:
        z15 = 0;

     label04:
        $i5 = r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode>;

        if $i5 != 2 goto label05;

        if z15 != 0 goto label05;

        z16 = 1;

        goto label06;

     label05:
        z16 = 0;

     label06:
        if i0 == 1 goto label08;

        if i0 == 3 goto label08;

        if z16 == 0 goto label07;

        goto label08;

     label07:
        z17 = 0;

        goto label09;

     label08:
        z17 = 1;

     label09:
        if i0 == 0 goto label10;

        if z17 == 0 goto label13;

     label10:
        $z1 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        if $z1 == 0 goto label11;

        $r6 = r0.<android.view.ScaleGestureDetector: android.view.ScaleGestureDetector$OnScaleGestureListener mListener>;

        interfaceinvoke $r6.<android.view.ScaleGestureDetector$OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>(r0);

        r0.<android.view.ScaleGestureDetector: boolean mInProgress> = 0;

        r0.<android.view.ScaleGestureDetector: float mInitialSpan> = 0.0F;

        r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode> = 0;

        goto label12;

     label11:
        $z2 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z2 == 0 goto label12;

        if z17 == 0 goto label12;

        r0.<android.view.ScaleGestureDetector: boolean mInProgress> = 0;

        r0.<android.view.ScaleGestureDetector: float mInitialSpan> = 0.0F;

        r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode> = 0;

     label12:
        if z17 == 0 goto label13;

        return 1;

     label13:
        $z3 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        if $z3 != 0 goto label14;

        $z12 = r0.<android.view.ScaleGestureDetector: boolean mStylusScaleEnabled>;

        if $z12 == 0 goto label14;

        $z13 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z13 != 0 goto label14;

        if z17 != 0 goto label14;

        if z15 == 0 goto label14;

        $f23 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartX> = $f23;

        $f24 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartY> = $f24;

        r0.<android.view.ScaleGestureDetector: int mAnchoredScaleMode> = 2;

        r0.<android.view.ScaleGestureDetector: float mInitialSpan> = 0.0F;

     label14:
        if i0 == 0 goto label16;

        if i0 == 6 goto label16;

        if i0 == 5 goto label16;

        if z16 == 0 goto label15;

        goto label16;

     label15:
        z18 = 0;

        goto label17;

     label16:
        z18 = 1;

     label17:
        if i0 != 6 goto label18;

        z19 = 1;

        goto label19;

     label18:
        z19 = 0;

     label19:
        if z19 == 0 goto label20;

        i14 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        goto label21;

     label20:
        i14 = -1;

     label21:
        f25 = 0.0F;

        f26 = 0.0F;

        if z19 == 0 goto label22;

        i15 = i1 - 1;

        goto label23;

     label22:
        i15 = i1;

     label23:
        $z4 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z4 == 0 goto label25;

        f27 = r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartX>;

        f28 = r0.<android.view.ScaleGestureDetector: float mAnchoredScaleStartY>;

        $f22 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $b13 = $f22 cmpg f28;

        if $b13 >= 0 goto label24;

        r0.<android.view.ScaleGestureDetector: boolean mEventBeforeOrAboveStartingGestureEvent> = 1;

        goto label30;

     label24:
        r0.<android.view.ScaleGestureDetector: boolean mEventBeforeOrAboveStartingGestureEvent> = 0;

        goto label30;

     label25:
        i16 = 0;

     label26:
        if i16 >= i1 goto label29;

        if i14 != i16 goto label27;

        goto label28;

     label27:
        $f20 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i16);

        f25 = f25 + $f20;

        $f21 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i16);

        f26 = f26 + $f21;

     label28:
        i16 = i16 + 1;

        goto label26;

     label29:
        $f1 = (float) i15;

        f27 = f25 / $f1;

        $f2 = (float) i15;

        f28 = f26 / $f2;

     label30:
        f29 = 0.0F;

        f30 = 0.0F;

        i17 = 0;

     label31:
        if i17 >= i1 goto label34;

        if i14 != i17 goto label32;

        goto label33;

     label32:
        $f14 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i17);

        $f15 = $f14 - f27;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        f29 = f29 + $f16;

        $f17 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i17);

        $f18 = $f17 - f28;

        $f19 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        f30 = f30 + $f19;

     label33:
        i17 = i17 + 1;

        goto label31;

     label34:
        $f3 = (float) i15;

        f31 = f29 / $f3;

        $f4 = (float) i15;

        f32 = f30 / $f4;

        f0 = f31 * 2.0F;

        f33 = f32 * 2.0F;

        $z5 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z5 == 0 goto label35;

        f34 = f33;

        goto label36;

     label35:
        $d1 = (double) f0;

        $d0 = (double) f33;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        f34 = (float) $d2;

     label36:
        z20 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        r0.<android.view.ScaleGestureDetector: float mFocusX> = f27;

        r0.<android.view.ScaleGestureDetector: float mFocusY> = f28;

        $z6 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z6 != 0 goto label38;

        $z11 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        if $z11 == 0 goto label38;

        $i11 = r0.<android.view.ScaleGestureDetector: int mMinSpan>;

        $f13 = (float) $i11;

        $b12 = f34 cmpg $f13;

        if $b12 < 0 goto label37;

        if z18 == 0 goto label38;

     label37:
        $r5 = r0.<android.view.ScaleGestureDetector: android.view.ScaleGestureDetector$OnScaleGestureListener mListener>;

        interfaceinvoke $r5.<android.view.ScaleGestureDetector$OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>(r0);

        r0.<android.view.ScaleGestureDetector: boolean mInProgress> = 0;

        r0.<android.view.ScaleGestureDetector: float mInitialSpan> = f34;

     label38:
        if z18 == 0 goto label39;

        r0.<android.view.ScaleGestureDetector: float mCurrSpanX> = f0;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanX> = f0;

        r0.<android.view.ScaleGestureDetector: float mCurrSpanY> = f33;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanY> = f33;

        r0.<android.view.ScaleGestureDetector: float mCurrSpan> = f34;

        r0.<android.view.ScaleGestureDetector: float mPrevSpan> = f34;

        r0.<android.view.ScaleGestureDetector: float mInitialSpan> = f34;

     label39:
        $z7 = specialinvoke r0.<android.view.ScaleGestureDetector: boolean inAnchoredScaleMode()>();

        if $z7 == 0 goto label40;

        i18 = r0.<android.view.ScaleGestureDetector: int mSpanSlop>;

        goto label41;

     label40:
        i18 = r0.<android.view.ScaleGestureDetector: int mMinSpan>;

     label41:
        $z8 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        if $z8 != 0 goto label44;

        $f8 = (float) i18;

        $b7 = f34 cmpl $f8;

        if $b7 < 0 goto label44;

        if z20 != 0 goto label43;

        $f9 = r0.<android.view.ScaleGestureDetector: float mInitialSpan>;

        $f10 = f34 - $f9;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $i9 = r0.<android.view.ScaleGestureDetector: int mSpanSlop>;

        $f12 = (float) $i9;

        $b10 = $f11 cmpl $f12;

        if $b10 <= 0 goto label42;

        goto label43;

     label42:
        goto label44;

     label43:
        r0.<android.view.ScaleGestureDetector: float mCurrSpanX> = f0;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanX> = f0;

        r0.<android.view.ScaleGestureDetector: float mCurrSpanY> = f33;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanY> = f33;

        r0.<android.view.ScaleGestureDetector: float mCurrSpan> = f34;

        r0.<android.view.ScaleGestureDetector: float mPrevSpan> = f34;

        $l8 = r0.<android.view.ScaleGestureDetector: long mCurrTime>;

        r0.<android.view.ScaleGestureDetector: long mPrevTime> = $l8;

        $r4 = r0.<android.view.ScaleGestureDetector: android.view.ScaleGestureDetector$OnScaleGestureListener mListener>;

        $z10 = interfaceinvoke $r4.<android.view.ScaleGestureDetector$OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>(r0);

        r0.<android.view.ScaleGestureDetector: boolean mInProgress> = $z10;

        goto label44;

     label44:
        if i0 != 2 goto label47;

        r0.<android.view.ScaleGestureDetector: float mCurrSpanX> = f0;

        r0.<android.view.ScaleGestureDetector: float mCurrSpanY> = f33;

        r0.<android.view.ScaleGestureDetector: float mCurrSpan> = f34;

        z21 = 1;

        $z9 = r0.<android.view.ScaleGestureDetector: boolean mInProgress>;

        if $z9 == 0 goto label45;

        $r3 = r0.<android.view.ScaleGestureDetector: android.view.ScaleGestureDetector$OnScaleGestureListener mListener>;

        z21 = interfaceinvoke $r3.<android.view.ScaleGestureDetector$OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>(r0);

     label45:
        if z21 == 0 goto label46;

        $f5 = r0.<android.view.ScaleGestureDetector: float mCurrSpanX>;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanX> = $f5;

        $f6 = r0.<android.view.ScaleGestureDetector: float mCurrSpanY>;

        r0.<android.view.ScaleGestureDetector: float mPrevSpanY> = $f6;

        $f7 = r0.<android.view.ScaleGestureDetector: float mCurrSpan>;

        r0.<android.view.ScaleGestureDetector: float mPrevSpan> = $f7;

        $l6 = r0.<android.view.ScaleGestureDetector: long mCurrTime>;

        r0.<android.view.ScaleGestureDetector: long mPrevTime> = $l6;

        goto label47;

     label46:
        goto label47;

     label47:
        return 1;
    }

    public void setQuickScaleEnabled(boolean)
    {
        android.view.ScaleGestureDetector r0;
        boolean z0;
        android.view.GestureDetector $r2, $r4;
        android.view.ScaleGestureDetector$1 $r3;
        android.os.Handler $r5;
        android.content.Context $r6;

        r0 := @this: android.view.ScaleGestureDetector;

        z0 := @parameter0: boolean;

        r0.<android.view.ScaleGestureDetector: boolean mQuickScaleEnabled> = z0;

        if z0 == 0 goto label1;

        $r2 = r0.<android.view.ScaleGestureDetector: android.view.GestureDetector mGestureDetector>;

        if $r2 != null goto label1;

        $r3 = new android.view.ScaleGestureDetector$1;

        specialinvoke $r3.<android.view.ScaleGestureDetector$1: void <init>(android.view.ScaleGestureDetector)>(r0);

        $r4 = new android.view.GestureDetector;

        $r6 = r0.<android.view.ScaleGestureDetector: android.content.Context mContext>;

        $r5 = r0.<android.view.ScaleGestureDetector: android.os.Handler mHandler>;

        specialinvoke $r4.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>($r6, $r3, $r5);

        r0.<android.view.ScaleGestureDetector: android.view.GestureDetector mGestureDetector> = $r4;

     label1:
        return;
    }

    public void setStylusScaleEnabled(boolean)
    {
        android.view.ScaleGestureDetector r0;
        boolean z0;

        r0 := @this: android.view.ScaleGestureDetector;

        z0 := @parameter0: boolean;

        r0.<android.view.ScaleGestureDetector: boolean mStylusScaleEnabled> = z0;

        return;
    }

    public static void <clinit>()
    {
        <android.view.ScaleGestureDetector: long TOUCH_STABILIZE_TIME> = 128L;

        <android.view.ScaleGestureDetector: java.lang.String TAG> = "ScaleGestureDetector";

        <android.view.ScaleGestureDetector: float SCALE_FACTOR> = 0.5F;

        <android.view.ScaleGestureDetector: int ANCHORED_SCALE_MODE_STYLUS> = 2;

        <android.view.ScaleGestureDetector: int ANCHORED_SCALE_MODE_NONE> = 0;

        <android.view.ScaleGestureDetector: int ANCHORED_SCALE_MODE_DOUBLE_TAP> = 1;

        return;
    }
}
