public class android.view.ScrollCaptureClient extends android.view.IScrollCaptureClient$Stub
{
    private static final int DEFAULT_TIMEOUT;
    private static final java.lang.String TAG;
    private final android.util.CloseGuard mCloseGuard;
    private android.view.IScrollCaptureController mController;
    private final android.os.Handler mHandler;
    private final android.graphics.Point mPositionInWindow;
    private final android.graphics.Rect mScrollBounds;
    private android.view.ScrollCaptureTarget mSelectedTarget;
    private android.view.ScrollCaptureSession mSession;
    protected android.view.Surface mSurface;
    private android.view.ScrollCaptureClient$DelayedAction mTimeoutAction;
    private int mTimeoutMillis;

    public void <init>(android.view.ScrollCaptureTarget, android.view.IScrollCaptureController)
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureTarget r1;
        android.view.View $r5, $r11;
        android.os.Handler $r6;
        android.graphics.Rect $r7, r14, r15;
        android.graphics.Point $r8, $r9;
        android.util.CloseGuard $r10;
        android.view.ScrollCaptureClient$1 $r12;
        android.view.IScrollCaptureController r13;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 := @parameter0: android.view.ScrollCaptureTarget;

        r13 := @parameter1: android.view.IScrollCaptureController;

        specialinvoke r0.<android.view.IScrollCaptureClient$Stub: void <init>()>();

        r0.<android.view.ScrollCaptureClient: int mTimeoutMillis> = 1000;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "<selectedTarget> must non-null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "<controller> must non-null");

        r14 = virtualinvoke r1.<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "target.getScrollBounds() must be non-null to construct a client");

        r15 = (android.graphics.Rect) r14;

        r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget> = r1;

        $r5 = virtualinvoke r1.<android.view.ScrollCaptureTarget: android.view.View getContainingView()>();

        $r6 = virtualinvoke $r5.<android.view.View: android.os.Handler getHandler()>();

        r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r15);

        r0.<android.view.ScrollCaptureClient: android.graphics.Rect mScrollBounds> = $r7;

        $r8 = new android.graphics.Point;

        $r9 = virtualinvoke r1.<android.view.ScrollCaptureTarget: android.graphics.Point getPositionInWindow()>();

        specialinvoke $r8.<android.graphics.Point: void <init>(android.graphics.Point)>($r9);

        r0.<android.view.ScrollCaptureClient: android.graphics.Point mPositionInWindow> = $r8;

        r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController> = r13;

        $r10 = new android.util.CloseGuard;

        specialinvoke $r10.<android.util.CloseGuard: void <init>()>();

        r0.<android.view.ScrollCaptureClient: android.util.CloseGuard mCloseGuard> = $r10;

        virtualinvoke $r10.<android.util.CloseGuard: void open(java.lang.String)>("close");

        $r11 = virtualinvoke r1.<android.view.ScrollCaptureTarget: android.view.View getContainingView()>();

        $r12 = new android.view.ScrollCaptureClient$1;

        specialinvoke $r12.<android.view.ScrollCaptureClient$1: void <init>(android.view.ScrollCaptureClient,android.view.ScrollCaptureTarget)>(r0, r1);

        virtualinvoke $r11.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r12);

        return;
    }

    private boolean cancelTimeout()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureClient$DelayedAction r1;
        boolean $z0;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction mTimeoutAction>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.ScrollCaptureClient$DelayedAction: boolean cancel()>();

        return $z0;

     label1:
        return 0;
    }

    private void checkConnected()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureTarget $r1;
        java.lang.IllegalStateException $r2;
        android.view.IScrollCaptureController $r3;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        if $r1 == null goto label1;

        $r3 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        if $r3 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This client has been disconnected.");

        throw $r2;
    }

    private void checkStarted()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureSession $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Capture session has not been started!");

        throw $r2;
    }

    private void doShutdown()
    {
        android.view.ScrollCaptureClient r0;
        android.view.IScrollCaptureController $r1, $r2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.view.ScrollCaptureClient;

     label1:
        $r1 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        if $r1 == null goto label5;

        $r2 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        interfaceinvoke $r2.<android.view.IScrollCaptureController: void onConnectionClosed()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.view.ScrollCaptureClient: void disconnect()>();

        throw $r4;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke r0.<android.view.ScrollCaptureClient: void disconnect()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean isStarted()
    {
        android.view.ScrollCaptureClient r0;
        android.view.IScrollCaptureController $r1;
        android.view.ScrollCaptureTarget $r2;
        boolean z0;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void lambda$0-SRlg7x7JtQystMp7lzoCyGfOY(android.view.ScrollCaptureClient)
    {
        android.view.ScrollCaptureClient r0;

        r0 := @parameter0: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void onStartCaptureCompleted()>();

        return;
    }

    public static void lambda$Epfw54HmxmekAnuTbczAITVw7Dg(android.view.ScrollCaptureClient)
    {
        android.view.ScrollCaptureClient r0;

        r0 := @parameter0: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void onStartCaptureTimeout()>();

        return;
    }

    public static void lambda$GYYbruHV0KM9iR0K-qw9FSo1ra8(android.view.ScrollCaptureClient)
    {
        android.view.ScrollCaptureClient r0;

        r0 := @parameter0: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void onEndCaptureCompleted()>();

        return;
    }

    public static void lambda$ViSKCOfqcLht-jEVL0NThLc_K9A(android.view.ScrollCaptureClient)
    {
        android.view.ScrollCaptureClient r0;

        r0 := @parameter0: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void onEndCaptureTimeout()>();

        return;
    }

    public static void lambda$cg6Nc5a-WzAiBUwgRjGwyrOr1MQ(android.view.ScrollCaptureClient)
    {
        android.view.ScrollCaptureClient r0;

        r0 := @parameter0: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void onRequestImageTimeout()>();

        return;
    }

    private void onEndCaptureCompleted()
    {
        android.view.ScrollCaptureClient r0;
        boolean $z0;

        r0 := @this: android.view.ScrollCaptureClient;

        $z0 = specialinvoke r0.<android.view.ScrollCaptureClient: boolean cancelTimeout()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.view.ScrollCaptureClient: void doShutdown()>();

     label1:
        return;
    }

    private void onEndCaptureTimeout()
    {
        android.view.ScrollCaptureClient r0;

        r0 := @this: android.view.ScrollCaptureClient;

        specialinvoke r0.<android.view.ScrollCaptureClient: void doShutdown()>();

        return;
    }

    private void onRequestImageTimeout()
    {
        android.view.ScrollCaptureClient r0;

        r0 := @this: android.view.ScrollCaptureClient;

        virtualinvoke r0.<android.view.ScrollCaptureClient: void endCapture()>();

        return;
    }

    private void onStartCaptureCompleted()
    {
        android.view.ScrollCaptureClient r0;
        boolean $z0;
        android.view._$$Lambda$ScrollCaptureClient$9ZUY_FVuYBZWGLMdk_bSi5wu7zg $r1;
        android.os.Handler $r2;

        r0 := @this: android.view.ScrollCaptureClient;

        $z0 = specialinvoke r0.<android.view.ScrollCaptureClient: boolean cancelTimeout()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        $r1 = new android.view._$$Lambda$ScrollCaptureClient$9ZUY_FVuYBZWGLMdk_bSi5wu7zg;

        specialinvoke $r1.<android.view._$$Lambda$ScrollCaptureClient$9ZUY_FVuYBZWGLMdk_bSi5wu7zg: void <init>(android.view.ScrollCaptureClient)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    private void onStartCaptureTimeout()
    {
        android.view.ScrollCaptureClient r0;

        r0 := @this: android.view.ScrollCaptureClient;

        virtualinvoke r0.<android.view.ScrollCaptureClient: void endCapture()>();

        return;
    }

    private void scheduleTimeout(long, java.lang.Runnable)
    {
        android.view.ScrollCaptureClient r0;
        long l0;
        java.lang.Runnable r1;
        android.view.ScrollCaptureClient$DelayedAction r2, $r3;
        android.os.Handler $r4;

        r0 := @this: android.view.ScrollCaptureClient;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.Runnable;

        r2 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction mTimeoutAction>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ScrollCaptureClient$DelayedAction: boolean cancel()>();

     label1:
        $r3 = new android.view.ScrollCaptureClient$DelayedAction;

        $r4 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        specialinvoke $r3.<android.view.ScrollCaptureClient$DelayedAction: void <init>(android.os.Handler,long,java.lang.Runnable)>($r4, l0, r1);

        r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction mTimeoutAction> = $r3;

        return;
    }

    public void disconnect()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureSession r1;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ScrollCaptureSession: void disconnect()>();

        r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession> = null;

     label1:
        r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget> = null;

        r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController> = null;

        return;
    }

    public void endCapture()
    {
        android.view.ScrollCaptureClient r0;
        boolean $z0;
        int $i0;
        android.view._$$Lambda$ScrollCaptureClient$ViSKCOfqcLht_jEVL0NThLc_K9A $r1;
        long $l1;
        android.view._$$Lambda$ScrollCaptureClient$OoPpYradNVuARe3t3TP2xK3X9iI $r2;
        android.os.Handler $r3;

        r0 := @this: android.view.ScrollCaptureClient;

        $z0 = specialinvoke r0.<android.view.ScrollCaptureClient: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<android.view.ScrollCaptureClient: int mTimeoutMillis>;

        $l1 = (long) $i0;

        $r1 = new android.view._$$Lambda$ScrollCaptureClient$ViSKCOfqcLht_jEVL0NThLc_K9A;

        specialinvoke $r1.<android.view._$$Lambda$ScrollCaptureClient$ViSKCOfqcLht_jEVL0NThLc_K9A: void <init>(android.view.ScrollCaptureClient)>(r0);

        specialinvoke r0.<android.view.ScrollCaptureClient: void scheduleTimeout(long,java.lang.Runnable)>($l1, $r1);

        $r3 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        $r2 = new android.view._$$Lambda$ScrollCaptureClient$OoPpYradNVuARe3t3TP2xK3X9iI;

        specialinvoke $r2.<android.view._$$Lambda$ScrollCaptureClient$OoPpYradNVuARe3t3TP2xK3X9iI: void <init>(android.view.ScrollCaptureClient)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.ScrollCaptureClient: void disconnect()>();

     label2:
        return;
    }

    public android.view.ScrollCaptureClient$DelayedAction getTimeoutAction()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureClient$DelayedAction $r1;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureClient$DelayedAction mTimeoutAction>;

        return $r1;
    }

    public void lambda$endCapture$4$ScrollCaptureClient()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureTarget $r1;
        android.view.ScrollCaptureCallback $r2;
        android.view._$$Lambda$ScrollCaptureClient$GYYbruHV0KM9iR0K_qw9FSo1ra8 $r3;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        $r2 = virtualinvoke $r1.<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()>();

        $r3 = new android.view._$$Lambda$ScrollCaptureClient$GYYbruHV0KM9iR0K_qw9FSo1ra8;

        specialinvoke $r3.<android.view._$$Lambda$ScrollCaptureClient$GYYbruHV0KM9iR0K_qw9FSo1ra8: void <init>(android.view.ScrollCaptureClient)>(r0);

        interfaceinvoke $r2.<android.view.ScrollCaptureCallback: void onScrollCaptureEnd(java.lang.Runnable)>($r3);

        return;
    }

    public void lambda$onRequestImageCompleted$3$ScrollCaptureClient(long, android.graphics.Rect)
    {
        android.view.ScrollCaptureClient r0;
        long l0;
        android.view.IScrollCaptureController $r1;
        android.os.RemoteException $r2;
        android.graphics.Rect r3;

        r0 := @this: android.view.ScrollCaptureClient;

        l0 := @parameter0: long;

        r3 := @parameter1: android.graphics.Rect;

     label1:
        $r1 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        interfaceinvoke $r1.<android.view.IScrollCaptureController: void onCaptureBufferSent(long,android.graphics.Rect)>(l0, r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<android.view.ScrollCaptureClient: void doShutdown()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void lambda$onStartCaptureCompleted$1$ScrollCaptureClient()
    {
        android.view.ScrollCaptureClient r0;
        android.view.IScrollCaptureController $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.view.ScrollCaptureClient;

     label1:
        $r2 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        interfaceinvoke $r2.<android.view.IScrollCaptureController: void onCaptureStarted()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.view.ScrollCaptureClient: void doShutdown()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void lambda$requestImage$2$ScrollCaptureClient(android.graphics.Rect)
    {
        android.view.ScrollCaptureClient r0;
        android.graphics.Rect r1, $r4;
        android.view.ScrollCaptureTarget $r2;
        android.view.ScrollCaptureCallback $r3;
        android.view.ScrollCaptureSession $r5;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        $r3 = virtualinvoke $r2.<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()>();

        $r5 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession>;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r1);

        interfaceinvoke $r3.<android.view.ScrollCaptureCallback: void onScrollCaptureImageRequest(android.view.ScrollCaptureSession,android.graphics.Rect)>($r5, $r4);

        return;
    }

    public void lambda$startCapture$0$ScrollCaptureClient()
    {
        android.view.ScrollCaptureClient r0;
        android.view.ScrollCaptureTarget $r1;
        android.view.ScrollCaptureCallback $r2;
        android.view._$$Lambda$ScrollCaptureClient$0_SRlg7x7JtQystMp7lzoCyGfOY $r3;
        android.view.ScrollCaptureSession $r4;

        r0 := @this: android.view.ScrollCaptureClient;

        $r1 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        $r2 = virtualinvoke $r1.<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()>();

        $r4 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession>;

        $r3 = new android.view._$$Lambda$ScrollCaptureClient$0_SRlg7x7JtQystMp7lzoCyGfOY;

        specialinvoke $r3.<android.view._$$Lambda$ScrollCaptureClient$0_SRlg7x7JtQystMp7lzoCyGfOY: void <init>(android.view.ScrollCaptureClient)>(r0);

        interfaceinvoke $r2.<android.view.ScrollCaptureCallback: void onScrollCaptureStart(android.view.ScrollCaptureSession,java.lang.Runnable)>($r4, $r3);

        return;
    }

    void onRequestImageCompleted(long, android.graphics.Rect)
    {
        android.view.ScrollCaptureClient r0;
        long l0;
        android.graphics.Rect $r1, r4;
        boolean $z0;
        android.view._$$Lambda$ScrollCaptureClient$jB_gZzHC6CVXS20ua5gOXB2VBpE $r2;
        android.os.Handler $r3;

        r0 := @this: android.view.ScrollCaptureClient;

        l0 := @parameter0: long;

        r4 := @parameter1: android.graphics.Rect;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r4);

        $z0 = specialinvoke r0.<android.view.ScrollCaptureClient: boolean cancelTimeout()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        $r2 = new android.view._$$Lambda$ScrollCaptureClient$jB_gZzHC6CVXS20ua5gOXB2VBpE;

        specialinvoke $r2.<android.view._$$Lambda$ScrollCaptureClient$jB_gZzHC6CVXS20ua5gOXB2VBpE: void <init>(android.view.ScrollCaptureClient,long,android.graphics.Rect)>(r0, l0, $r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    public void requestImage(android.graphics.Rect)
    {
        android.view.ScrollCaptureClient r0;
        android.graphics.Rect r1;
        int $i0;
        android.view._$$Lambda$ScrollCaptureClient$cg6Nc5a_WzAiBUwgRjGwyrOr1MQ $r2;
        long $l1;
        android.view._$$Lambda$ScrollCaptureClient$rf3BkY5f_J7V42O_dMJLA1rnVkM $r3;
        android.os.Handler $r4;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.view.ScrollCaptureClient: void checkConnected()>();

        specialinvoke r0.<android.view.ScrollCaptureClient: void checkStarted()>();

        $i0 = r0.<android.view.ScrollCaptureClient: int mTimeoutMillis>;

        $l1 = (long) $i0;

        $r2 = new android.view._$$Lambda$ScrollCaptureClient$cg6Nc5a_WzAiBUwgRjGwyrOr1MQ;

        specialinvoke $r2.<android.view._$$Lambda$ScrollCaptureClient$cg6Nc5a_WzAiBUwgRjGwyrOr1MQ: void <init>(android.view.ScrollCaptureClient)>(r0);

        specialinvoke r0.<android.view.ScrollCaptureClient: void scheduleTimeout(long,java.lang.Runnable)>($l1, $r2);

        $r4 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        $r3 = new android.view._$$Lambda$ScrollCaptureClient$rf3BkY5f_J7V42O_dMJLA1rnVkM;

        specialinvoke $r3.<android.view._$$Lambda$ScrollCaptureClient$rf3BkY5f_J7V42O_dMJLA1rnVkM: void <init>(android.view.ScrollCaptureClient,android.graphics.Rect)>(r0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void setTimeoutMillis(int)
    {
        android.view.ScrollCaptureClient r0;
        int i0;

        r0 := @this: android.view.ScrollCaptureClient;

        i0 := @parameter0: int;

        r0.<android.view.ScrollCaptureClient: int mTimeoutMillis> = i0;

        return;
    }

    public void startCapture(android.view.Surface) throws android.os.RemoteException
    {
        android.view.ScrollCaptureClient r0;
        android.view.Surface r1, $r6;
        int $i0;
        android.view._$$Lambda$ScrollCaptureClient$Epfw54HmxmekAnuTbczAITVw7Dg $r2;
        long $l1;
        android.view.ScrollCaptureSession $r3;
        android.graphics.Point $r4;
        android.graphics.Rect $r5;
        android.view._$$Lambda$ScrollCaptureClient$Wx8q2o_h2xkFAIBvHcSi3uj_Sm0 $r7;
        android.os.Handler $r8;

        r0 := @this: android.view.ScrollCaptureClient;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<android.view.ScrollCaptureClient: void checkConnected()>();

        r0.<android.view.ScrollCaptureClient: android.view.Surface mSurface> = r1;

        $i0 = r0.<android.view.ScrollCaptureClient: int mTimeoutMillis>;

        $l1 = (long) $i0;

        $r2 = new android.view._$$Lambda$ScrollCaptureClient$Epfw54HmxmekAnuTbczAITVw7Dg;

        specialinvoke $r2.<android.view._$$Lambda$ScrollCaptureClient$Epfw54HmxmekAnuTbczAITVw7Dg: void <init>(android.view.ScrollCaptureClient)>(r0);

        specialinvoke r0.<android.view.ScrollCaptureClient: void scheduleTimeout(long,java.lang.Runnable)>($l1, $r2);

        $r3 = new android.view.ScrollCaptureSession;

        $r6 = r0.<android.view.ScrollCaptureClient: android.view.Surface mSurface>;

        $r5 = r0.<android.view.ScrollCaptureClient: android.graphics.Rect mScrollBounds>;

        $r4 = r0.<android.view.ScrollCaptureClient: android.graphics.Point mPositionInWindow>;

        specialinvoke $r3.<android.view.ScrollCaptureSession: void <init>(android.view.Surface,android.graphics.Rect,android.graphics.Point,android.view.ScrollCaptureClient)>($r6, $r5, $r4, r0);

        r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession> = $r3;

        $r8 = r0.<android.view.ScrollCaptureClient: android.os.Handler mHandler>;

        $r7 = new android.view._$$Lambda$ScrollCaptureClient$Wx8q2o_h2xkFAIBvHcSi3uj_Sm0;

        specialinvoke $r7.<android.view._$$Lambda$ScrollCaptureClient$Wx8q2o_h2xkFAIBvHcSi3uj_Sm0: void <init>(android.view.ScrollCaptureClient)>(r0);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        return;
    }

    public java.lang.String toString()
    {
        android.view.ScrollCaptureClient r0;
        java.lang.StringBuilder $r2;
        android.view.ScrollCaptureSession $r4;
        android.view.ScrollCaptureTarget $r7;
        android.view.IScrollCaptureController $r10;
        java.lang.String $r13;

        r0 := @this: android.view.ScrollCaptureClient;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScrollCaptureClient{, session=");

        $r4 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureSession mSession>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", selectedTarget=");

        $r7 = r0.<android.view.ScrollCaptureClient: android.view.ScrollCaptureTarget mSelectedTarget>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientCallbacks=");

        $r10 = r0.<android.view.ScrollCaptureClient: android.view.IScrollCaptureController mController>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static void <clinit>()
    {
        <android.view.ScrollCaptureClient: java.lang.String TAG> = "ScrollCaptureClient";

        <android.view.ScrollCaptureClient: int DEFAULT_TIMEOUT> = 1000;

        return;
    }
}
