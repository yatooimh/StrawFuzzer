class android.view.ScrollCaptureTargetResolver$SingletonConsumer extends java.lang.Object implements java.util.function.Consumer
{
    final java.util.concurrent.atomic.AtomicReference mAtomicRef;

    void <init>(java.util.function.Consumer)
    {
        android.view.ScrollCaptureTargetResolver$SingletonConsumer r0;
        java.util.function.Consumer r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: android.view.ScrollCaptureTargetResolver$SingletonConsumer;

        r1 := @parameter0: java.util.function.Consumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(r1);

        r0.<android.view.ScrollCaptureTargetResolver$SingletonConsumer: java.util.concurrent.atomic.AtomicReference mAtomicRef> = $r2;

        return;
    }

    public void accept(java.lang.Object)
    {
        android.view.ScrollCaptureTargetResolver$SingletonConsumer r0;
        java.lang.Object r1, $r4;
        java.util.function.Consumer r2;
        java.util.concurrent.atomic.AtomicReference $r3;

        r0 := @this: android.view.ScrollCaptureTargetResolver$SingletonConsumer;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<android.view.ScrollCaptureTargetResolver$SingletonConsumer: java.util.concurrent.atomic.AtomicReference mAtomicRef>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r2 = (java.util.function.Consumer) $r4;

        if r2 == null goto label1;

        interfaceinvoke r2.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

     label1:
        return;
    }
}
