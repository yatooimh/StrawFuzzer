public class android.view.ScrollCaptureTargetResolver extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private long mDeadlineMillis;
    private boolean mFinished;
    private android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private int mPendingBoundsRequests;
    private android.view.ScrollCaptureTarget mResult;
    private boolean mStarted;
    private final java.util.Queue mTargets;
    private long mTimeLimitMillis;
    private final java.lang.Runnable mTimeoutRunnable;
    private java.util.function.Consumer mWhenComplete;

    public void <init>(java.util.Queue)
    {
        android.view.ScrollCaptureTargetResolver r0;
        java.util.Queue r1;
        java.lang.Object $r2;
        android.view.ScrollCaptureTargetResolver$1 $r3;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r1 := @parameter0: java.util.Queue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock> = $r2;

        $r3 = new android.view.ScrollCaptureTargetResolver$1;

        specialinvoke $r3.<android.view.ScrollCaptureTargetResolver$1: void <init>(android.view.ScrollCaptureTargetResolver)>(r0);

        r0.<android.view.ScrollCaptureTargetResolver: java.lang.Runnable mTimeoutRunnable> = $r3;

        r0.<android.view.ScrollCaptureTargetResolver: java.util.Queue mTargets> = r1;

        return;
    }

    static void access$000(android.view.ScrollCaptureTargetResolver, android.view.ScrollCaptureTarget)
    {
        android.view.ScrollCaptureTargetResolver r0;
        android.view.ScrollCaptureTarget r1;

        r0 := @parameter0: android.view.ScrollCaptureTargetResolver;

        r1 := @parameter1: android.view.ScrollCaptureTarget;

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void supplyResult(android.view.ScrollCaptureTarget)>(r1);

        return;
    }

    private static int area(android.graphics.Rect)
    {
        android.graphics.Rect r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.graphics.Rect;

        $i0 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i2 = $i0 * $i1;

        return $i2;
    }

    private static android.view.ScrollCaptureTarget chooseTarget(android.view.ScrollCaptureTarget, android.view.ScrollCaptureTarget)
    {
        boolean z0, $z1, $z2, $z3, z4, z5;
        android.view.View r0, r51;
        java.lang.StringBuilder $r1, $r7, $r13, $r17, $r21, $r27, $r31, $r35, $r39, $r43;
        java.lang.String $r6, $r10, $r16, $r20, $r24, $r30, $r34, $r38, $r42, $r46;
        android.graphics.Rect $r11, $r12, $r25, $r26;
        int $i5, $i6;
        android.view.ScrollCaptureTarget r47, r48;

        r47 := @parameter0: android.view.ScrollCaptureTarget;

        r48 := @parameter1: android.view.ScrollCaptureTarget;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r6);

        if r47 != null goto label01;

        if r48 != null goto label01;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (both null) return ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(null);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r46);

        return null;

     label01:
        if r47 == null goto label14;

        if r48 != null goto label02;

        goto label14;

     label02:
        $r11 = virtualinvoke r47.<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>();

        z0 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean nullOrEmpty(android.graphics.Rect)>($r11);

        $r12 = virtualinvoke r48.<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>();

        z4 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean nullOrEmpty(android.graphics.Rect)>($r12);

        if z0 != 0 goto label11;

        if z4 == 0 goto label03;

        goto label11;

     label03:
        r51 = virtualinvoke r47.<android.view.ScrollCaptureTarget: android.view.View getContainingView()>();

        r0 = virtualinvoke r48.<android.view.ScrollCaptureTarget: android.view.View getContainingView()>();

        z5 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean hasIncludeHint(android.view.View)>(r51);

        $z1 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean hasIncludeHint(android.view.View)>(r0);

        if z5 == $z1 goto label06;

        if z5 == 0 goto label04;

        goto label05;

     label04:
        r47 = r48;

     label05:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (has hint=INCLUDE) return ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r42);

        return r47;

     label06:
        $z2 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean isDescendant(android.view.View,android.view.View)>(r51, r0);

        if $z2 == 0 goto label07;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (b is descendant of a) return ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r38);

        return r48;

     label07:
        $z3 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean isDescendant(android.view.View,android.view.View)>(r0, r51);

        if $z3 == 0 goto label08;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (a is descendant of b) return ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r34);

        return r47;

     label08:
        $r25 = virtualinvoke r47.<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>();

        $i5 = staticinvoke <android.view.ScrollCaptureTargetResolver: int area(android.graphics.Rect)>($r25);

        $r26 = virtualinvoke r48.<android.view.ScrollCaptureTarget: android.graphics.Rect getScrollBounds()>();

        $i6 = staticinvoke <android.view.ScrollCaptureTargetResolver: int area(android.graphics.Rect)>($r26);

        if $i5 < $i6 goto label09;

        goto label10;

     label09:
        r47 = r48;

     label10:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: return ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r30);

        return r47;

     label11:
        if z0 == 0 goto label12;

        if z4 == 0 goto label12;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (both have empty or null bounds) return ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(null);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r24);

        return null;

     label12:
        if z0 == 0 goto label13;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (a has empty or null bounds) return ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r20);

        return r48;

     label13:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (b has empty or null bounds) return ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r16);

        return r47;

     label14:
        if r47 != null goto label15;

        r47 = r48;

        goto label15;

     label15:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseTarget: (other is null) return ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScrollCaptureTargetRes", $r10);

        return r47;
    }

    private static int findRelation(android.view.View, android.view.View)
    {
        android.view.View r0, r1;
        android.view.ViewParent r2, r3, r4;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        if r0 != r1 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        if r2 != null goto label4;

        if r3 == null goto label3;

        goto label4;

     label3:
        return 0;

     label4:
        if r2 != r3 goto label5;

        return 0;

     label5:
        if r2 != r1 goto label6;

        return 1;

     label6:
        if r3 != r0 goto label7;

        return -1;

     label7:
        r4 = r2;

        if r2 == null goto label8;

        r4 = interfaceinvoke r2.<android.view.ViewParent: android.view.ViewParent getParent()>();

     label8:
        if r3 == null goto label9;

        r3 = interfaceinvoke r3.<android.view.ViewParent: android.view.ViewParent getParent()>();

        r2 = r4;

        goto label2;

     label9:
        r2 = r4;

        goto label2;
    }

    private static boolean hasIncludeHint(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getScrollCaptureHint()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isDescendant(android.view.View, android.view.View)
    {
        android.view.View r0, r1;
        boolean z0;
        android.view.ViewParent r2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        z0 = 0;

        if r0 != r1 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        if r2 == r0 goto label3;

        if r2 == null goto label3;

        r2 = interfaceinvoke r2.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label3:
        if r2 != r0 goto label4;

        z0 = 1;

     label4:
        return z0;
    }

    private static boolean nullOrEmpty(android.graphics.Rect)
    {
        android.graphics.Rect r0;
        boolean $z0, z1;

        r0 := @parameter0: android.graphics.Rect;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private void onScrollBoundsProvided(android.view.ScrollCaptureTarget, android.graphics.Rect)
    {
        android.view.ScrollCaptureTargetResolver r0;
        int i0, $i1, $i2, $i8;
        android.view.View r1;
        boolean $z0, $z2, $z5, $z6;
        java.lang.Runnable $r2, $r14;
        android.os.Handler $r3, $r15;
        java.lang.StringBuilder $r10, $r19, $r23, $r27;
        long $l3, $l4, $l5, $l6, $l9, $l10;
        java.lang.String $r13, $r21, $r25, $r29;
        byte $b7;
        android.view.ScrollCaptureTarget r16;
        android.graphics.Rect r17;
        java.io.PrintStream r18, r22, r26, r30;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r16 := @parameter0: android.view.ScrollCaptureTarget;

        r17 := @parameter1: android.graphics.Rect;

        virtualinvoke r0.<android.view.ScrollCaptureTargetResolver: void checkThread()>();

        $z0 = r0.<android.view.ScrollCaptureTargetResolver: boolean mFinished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests>;

        $i1 = i0 - 1;

        r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests> = $i1;

        $r3 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        $r2 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Runnable mTimeoutRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $i2 = r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests>;

        if $i2 == 0 goto label3;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis>;

        $b7 = $l5 cmp $l6;

        if $b7 < 0 goto label2;

        goto label3;

     label2:
        goto label3;

     label3:
        r1 = virtualinvoke r16.<android.view.ScrollCaptureTarget: android.view.View getContainingView()>();

        $z5 = staticinvoke <android.view.ScrollCaptureTargetResolver: boolean nullOrEmpty(android.graphics.Rect)>(r17);

        if $z5 != 0 goto label4;

        $z2 = virtualinvoke r1.<android.view.View: boolean isAggregatedVisible()>();

        if $z2 == 0 goto label4;

        virtualinvoke r16.<android.view.ScrollCaptureTarget: void updatePositionInWindow()>();

        virtualinvoke r16.<android.view.ScrollCaptureTarget: void setScrollBounds(android.graphics.Rect)>(r17);

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void supplyResult(android.view.ScrollCaptureTarget)>(r16);

     label4:
        r18 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPendingBoundsRequests: ");

        $i8 = r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<java.io.PrintStream: void println(java.lang.String)>($r21);

        r22 = <java.lang.System: java.io.PrintStream err>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDeadlineMillis: ");

        $l9 = r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

        r26 = <java.lang.System: java.io.PrintStream err>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SystemClock.elapsedRealtime(): ");

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r26.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $z6 = r0.<android.view.ScrollCaptureTargetResolver: boolean mFinished>;

        if $z6 != 0 goto label5;

        r30 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We think we\'re NOT done yet and will check back at ");

        $l3 = r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        $r14 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Runnable mTimeoutRunnable>;

        $l4 = r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis>;

        virtualinvoke $r15.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>($r14, $l4);

     label5:
        return;
    }

    private void queryTarget(android.view.ScrollCaptureTarget)
    {
        android.view.ScrollCaptureTargetResolver r0;
        android.view.ScrollCaptureTarget r1;
        android.view.ScrollCaptureCallback $r2;
        android.view.ScrollCaptureTargetResolver$SingletonConsumer $r3;
        android.view._$$Lambda$ScrollCaptureTargetResolver$J9O9ShCuuF3gTNBsMj2uaRnxEtQ $r4;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r1 := @parameter0: android.view.ScrollCaptureTarget;

        virtualinvoke r0.<android.view.ScrollCaptureTargetResolver: void checkThread()>();

        $r2 = virtualinvoke r1.<android.view.ScrollCaptureTarget: android.view.ScrollCaptureCallback getCallback()>();

        $r3 = new android.view.ScrollCaptureTargetResolver$SingletonConsumer;

        $r4 = new android.view._$$Lambda$ScrollCaptureTargetResolver$J9O9ShCuuF3gTNBsMj2uaRnxEtQ;

        specialinvoke $r4.<android.view._$$Lambda$ScrollCaptureTargetResolver$J9O9ShCuuF3gTNBsMj2uaRnxEtQ: void <init>(android.view.ScrollCaptureTargetResolver,android.view.ScrollCaptureTarget)>(r0, r1);

        specialinvoke $r3.<android.view.ScrollCaptureTargetResolver$SingletonConsumer: void <init>(java.util.function.Consumer)>($r4);

        interfaceinvoke $r2.<android.view.ScrollCaptureCallback: void onScrollCaptureSearch(java.util.function.Consumer)>($r3);

        return;
    }

    private void run(long, java.util.function.Consumer)
    {
        android.view.ScrollCaptureTargetResolver r0;
        java.util.Queue $r1, $r2;
        int $i0;
        boolean $z0;
        long $l1, $l2, l3, l4;
        java.lang.Runnable $r3;
        android.os.Handler $r4;
        java.lang.Object $r5;
        android.view.ScrollCaptureTarget $r6;
        java.util.function.Consumer r7;
        java.util.Iterator r8;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        l3 := @parameter0: long;

        r7 := @parameter1: java.util.function.Consumer;

        virtualinvoke r0.<android.view.ScrollCaptureTargetResolver: void checkThread()>();

        $r1 = r0.<android.view.ScrollCaptureTargetResolver: java.util.Queue mTargets>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests> = $i0;

        $r2 = r0.<android.view.ScrollCaptureTargetResolver: java.util.Queue mTargets>;

        r8 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.view.ScrollCaptureTarget) $r5;

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void queryTarget(android.view.ScrollCaptureTarget)>($r6);

        goto label1;

     label2:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<android.view.ScrollCaptureTargetResolver: long mTimeLimitMillis>;

        l4 = $l1 + $l2;

        r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis> = l4;

        $r4 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        $r3 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Runnable mTimeoutRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>($r3, l4);

        return;
    }

    private void supplyResult(android.view.ScrollCaptureTarget)
    {
        android.view.ScrollCaptureTargetResolver r0;
        boolean $z0, z1;
        android.view.ScrollCaptureTarget $r2, $r3, $r5, r9;
        int $i0;
        java.io.PrintStream $r4;
        java.util.function.Consumer $r6;
        java.lang.Object $r7, r10;
        long $l1, $l2;
        byte $b3;
        java.lang.Throwable $r8;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r9 := @parameter0: android.view.ScrollCaptureTarget;

        virtualinvoke r0.<android.view.ScrollCaptureTargetResolver: void checkThread()>();

        $z0 = r0.<android.view.ScrollCaptureTargetResolver: boolean mFinished>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<android.view.ScrollCaptureTargetResolver: android.view.ScrollCaptureTarget mResult>;

        $r3 = staticinvoke <android.view.ScrollCaptureTargetResolver: android.view.ScrollCaptureTarget chooseTarget(android.view.ScrollCaptureTarget,android.view.ScrollCaptureTarget)>($r2, r9);

        r0.<android.view.ScrollCaptureTargetResolver: android.view.ScrollCaptureTarget mResult> = $r3;

        $i0 = r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests>;

        if $i0 == 0 goto label03;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<android.view.ScrollCaptureTargetResolver: long mDeadlineMillis>;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label02;

        goto label03;

     label02:
        z1 = 0;

        goto label04;

     label03:
        z1 = 1;

     label04:
        if z1 == 0 goto label10;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("We think we\'re done, or timed out");

        r0.<android.view.ScrollCaptureTargetResolver: int mPendingBoundsRequests> = 0;

        $r6 = r0.<android.view.ScrollCaptureTargetResolver: java.util.function.Consumer mWhenComplete>;

        $r5 = r0.<android.view.ScrollCaptureTargetResolver: android.view.ScrollCaptureTarget mResult>;

        interfaceinvoke $r6.<java.util.function.Consumer: void accept(java.lang.Object)>($r5);

        r10 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock>;

        entermonitor r10;

     label05:
        r0.<android.view.ScrollCaptureTargetResolver: boolean mFinished> = 1;

        $r7 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notify()>();

        exitmonitor r10;

     label06:
        r0.<android.view.ScrollCaptureTargetResolver: java.util.function.Consumer mWhenComplete> = null;

        goto label10;

     label07:
        $r8 := @caughtexception;

     label08:
        exitmonitor r10;

     label09:
        throw $r8;

     label10:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    void checkThread()
    {
        android.view.ScrollCaptureTargetResolver r0;
        android.os.Handler $r2;
        android.os.Looper $r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.Thread $r7;
        java.lang.String $r8, $r12;
        java.lang.IllegalStateException $r11;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        $r2 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r3 != $r4 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called from wrong thread! (");

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    public void lambda$queryTarget$2$ScrollCaptureTargetResolver(android.view.ScrollCaptureTarget, android.graphics.Rect)
    {
        android.view.ScrollCaptureTargetResolver r0;
        android.view.ScrollCaptureTarget r1;
        android.graphics.Rect r2;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r1 := @parameter0: android.view.ScrollCaptureTarget;

        r2 := @parameter1: android.graphics.Rect;

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void onScrollBoundsProvided(android.view.ScrollCaptureTarget,android.graphics.Rect)>(r1, r2);

        return;
    }

    public void lambda$queryTarget$3$ScrollCaptureTargetResolver(android.view.ScrollCaptureTarget, android.graphics.Rect)
    {
        android.view.ScrollCaptureTargetResolver r0;
        android.view.ScrollCaptureTarget r1;
        android.graphics.Rect r2;
        android.view._$$Lambda$ScrollCaptureTargetResolver$gdmLlyNUqtKoShKx1WC6kEG8ZHs $r3;
        android.os.Handler $r4;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r1 := @parameter0: android.view.ScrollCaptureTarget;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        $r3 = new android.view._$$Lambda$ScrollCaptureTargetResolver$gdmLlyNUqtKoShKx1WC6kEG8ZHs;

        specialinvoke $r3.<android.view._$$Lambda$ScrollCaptureTargetResolver$gdmLlyNUqtKoShKx1WC6kEG8ZHs: void <init>(android.view.ScrollCaptureTargetResolver,android.view.ScrollCaptureTarget,android.graphics.Rect)>(r0, r1, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void lambda$start$0$ScrollCaptureTargetResolver()
    {
        android.view.ScrollCaptureTargetResolver r0;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void supplyResult(android.view.ScrollCaptureTarget)>(null);

        return;
    }

    public void lambda$start$1$ScrollCaptureTargetResolver(long, java.util.function.Consumer)
    {
        android.view.ScrollCaptureTargetResolver r0;
        long l0;
        java.util.function.Consumer r1;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.function.Consumer;

        specialinvoke r0.<android.view.ScrollCaptureTargetResolver: void run(long,java.util.function.Consumer)>(l0, r1);

        return;
    }

    public void start(android.os.Handler, long, java.util.function.Consumer)
    {
        android.view.ScrollCaptureTargetResolver r0;
        long l0;
        java.lang.Object r1;
        android.view._$$Lambda$ScrollCaptureTargetResolver$yVQQiWyGWiKm9_d01s2pn78mS0k r2;
        boolean $z0, $z1;
        byte $b1;
        java.util.Queue $r3;
        java.lang.Throwable $r4;
        android.os.Handler r5, r7;
        java.util.function.Consumer r6;
        android.view._$$Lambda$ScrollCaptureTargetResolver$EzFCJjUw_13D2CDqIgLoFuJ5qdY r8;
        java.lang.IllegalArgumentException r9;
        java.lang.IllegalStateException r10;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r5 := @parameter0: android.os.Handler;

        l0 := @parameter1: long;

        r6 := @parameter2: java.util.function.Consumer;

        r1 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.view.ScrollCaptureTargetResolver: boolean mStarted>;

        if $z0 != 0 goto label08;

     label02:
        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label07;

     label03:
        r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler> = r5;

        r0.<android.view.ScrollCaptureTargetResolver: long mTimeLimitMillis> = l0;

        r0.<android.view.ScrollCaptureTargetResolver: java.util.function.Consumer mWhenComplete> = r6;

        $r3 = r0.<android.view.ScrollCaptureTargetResolver: java.util.Queue mTargets>;

        $z1 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        r7 = r0.<android.view.ScrollCaptureTargetResolver: android.os.Handler mHandler>;

        r8 = new android.view._$$Lambda$ScrollCaptureTargetResolver$EzFCJjUw_13D2CDqIgLoFuJ5qdY;

        specialinvoke r8.<android.view._$$Lambda$ScrollCaptureTargetResolver$EzFCJjUw_13D2CDqIgLoFuJ5qdY: void <init>(android.view.ScrollCaptureTargetResolver)>(r0);

        virtualinvoke r7.<android.os.Handler: boolean post(java.lang.Runnable)>(r8);

        exitmonitor r1;

     label04:
        return;

     label05:
        r0.<android.view.ScrollCaptureTargetResolver: boolean mStarted> = 1;

        r2 = new android.view._$$Lambda$ScrollCaptureTargetResolver$yVQQiWyGWiKm9_d01s2pn78mS0k;

        specialinvoke r2.<android.view._$$Lambda$ScrollCaptureTargetResolver$yVQQiWyGWiKm9_d01s2pn78mS0k: void <init>(android.view.ScrollCaptureTargetResolver,long,java.util.function.Consumer)>(r0, l0, r6);

        virtualinvoke r5.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

        exitmonitor r1;

     label06:
        return;

     label07:
        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time limit must be positive");

        throw r9;

     label08:
        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("already started!");

        throw r10;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.view.ScrollCaptureTarget waitForResult() throws java.lang.InterruptedException
    {
        android.view.ScrollCaptureTargetResolver r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        android.view.ScrollCaptureTarget $r3;
        java.lang.Throwable $r5;

        r0 := @this: android.view.ScrollCaptureTargetResolver;

        r1 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.view.ScrollCaptureTargetResolver: boolean mFinished>;

        if $z0 != 0 goto label3;

        $r4 = r0.<android.view.ScrollCaptureTargetResolver: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void wait()>();

     label2:
        goto label1;

     label3:
        exitmonitor r1;

     label4:
        $r3 = r0.<android.view.ScrollCaptureTargetResolver: android.view.ScrollCaptureTarget mResult>;

        return $r3;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <android.view.ScrollCaptureTargetResolver: java.lang.String TAG> = "ScrollCaptureTargetRes";

        <android.view.ScrollCaptureTargetResolver: boolean DEBUG> = 1;

        return;
    }
}
