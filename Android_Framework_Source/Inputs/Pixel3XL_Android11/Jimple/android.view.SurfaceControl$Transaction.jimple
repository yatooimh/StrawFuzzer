public class android.view.SurfaceControl$Transaction extends java.lang.Object implements java.io.Closeable, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final float[] INVALID_COLOR;
    public static final libcore.util.NativeAllocationRegistry sRegistry;
    java.lang.Runnable mFreeNativeResources;
    public long mNativeObject;
    private final android.util.ArrayMap mReparentedSurfaces;
    private final android.util.ArrayMap mResizedSurfaces;

    static void <clinit>()
    {
        libcore.util.NativeAllocationRegistry $r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        long $l0;
        float[] $r3;
        android.view.SurfaceControl$Transaction$1 $r4;

        $r0 = new libcore.util.NativeAllocationRegistry;

        $r1 = class "Landroid/view/SurfaceControl$Transaction;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $l0 = staticinvoke <android.view.SurfaceControl: long access$200()>();

        specialinvoke $r0.<libcore.util.NativeAllocationRegistry: void <init>(java.lang.ClassLoader,long,long)>($r2, $l0, 512L);

        <android.view.SurfaceControl$Transaction: libcore.util.NativeAllocationRegistry sRegistry> = $r0;

        $r3 = newarray (float)[3];

        $r3[0] = -1.0F;

        $r3[1] = -1.0F;

        $r3[2] = -1.0F;

        <android.view.SurfaceControl$Transaction: float[] INVALID_COLOR> = $r3;

        $r4 = new android.view.SurfaceControl$Transaction$1;

        specialinvoke $r4.<android.view.SurfaceControl$Transaction$1: void <init>()>();

        <android.view.SurfaceControl$Transaction: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }

    public void <init>()
    {
        android.view.SurfaceControl$Transaction r0;
        long l0;
        android.util.ArrayMap $r1, $r2;
        libcore.util.NativeAllocationRegistry $r3;
        java.lang.Runnable $r4;

        r0 := @this: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces> = $r2;

        l0 = staticinvoke <android.view.SurfaceControl: long access$400()>();

        r0.<android.view.SurfaceControl$Transaction: long mNativeObject> = l0;

        $r3 = <android.view.SurfaceControl$Transaction: libcore.util.NativeAllocationRegistry sRegistry>;

        $r4 = virtualinvoke $r3.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, l0);

        r0.<android.view.SurfaceControl$Transaction: java.lang.Runnable mFreeNativeResources> = $r4;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.Parcel r1;
        android.util.ArrayMap $r2, $r3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces> = $r3;

        specialinvoke r0.<android.view.SurfaceControl$Transaction: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.view.SurfaceControl$1)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.Parcel r1;
        android.view.SurfaceControl$1 r2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.SurfaceControl$1;

        specialinvoke r0.<android.view.SurfaceControl$Transaction: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void applyResizedSurfaces()
    {
        android.view.SurfaceControl$Transaction r0;
        android.graphics.Point r1;
        java.lang.Object r2, $r6, $r8;
        android.util.ArrayMap $r3, $r4, $r5, $r7;
        int $i0, $i1, $i3, i5;
        java.lang.Throwable $r9;
        android.view.SurfaceControl r10;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $r3 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        $i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i5 = $i0 - 1;

     label1:
        if i5 < 0 goto label7;

        $r5 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r1 = (android.graphics.Point) $r6;

        $r7 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        r10 = (android.view.SurfaceControl) $r8;

        r2 = staticinvoke <android.view.SurfaceControl: java.lang.Object access$600(android.view.SurfaceControl)>(r10);

        entermonitor r2;

     label2:
        $i1 = r1.<android.graphics.Point: int x>;

        staticinvoke <android.view.SurfaceControl: int access$702(android.view.SurfaceControl,int)>(r10, $i1);

        $i3 = r1.<android.graphics.Point: int y>;

        staticinvoke <android.view.SurfaceControl: int access$802(android.view.SurfaceControl,int)>(r10, $i3);

        exitmonitor r2;

     label3:
        i5 = i5 + -1;

        goto label1;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r9;

     label7:
        $r4 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void notifyReparentedSurfaces()
    {
        android.view.SurfaceControl$Transaction r0;
        java.lang.Object r1, $r4, $r9, $r12;
        android.util.ArrayMap $r2, $r3, $r6, $r10;
        int $i0, i1, i2, i3;
        java.util.ArrayList $r5, $r8, $r14;
        android.view.SurfaceControl$OnReparentListener $r11;
        android.view.SurfaceControl $r13, r16;
        java.lang.Throwable $r15;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $r2 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        $i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label01:
        if i1 < 0 goto label15;

        $r3 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r16 = (android.view.SurfaceControl) $r4;

        r1 = staticinvoke <android.view.SurfaceControl: java.lang.Object access$600(android.view.SurfaceControl)>(r16);

        entermonitor r1;

     label02:
        $r5 = staticinvoke <android.view.SurfaceControl: java.util.ArrayList access$900(android.view.SurfaceControl)>(r16);

        if $r5 == null goto label04;

        $r14 = staticinvoke <android.view.SurfaceControl: java.util.ArrayList access$900(android.view.SurfaceControl)>(r16);

        i2 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

     label03:
        goto label05;

     label04:
        i2 = 0;

     label05:
        i3 = 0;

     label06:
        if i3 >= i2 goto label09;

     label07:
        $r8 = staticinvoke <android.view.SurfaceControl: java.util.ArrayList access$900(android.view.SurfaceControl)>(r16);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r11 = (android.view.SurfaceControl$OnReparentListener) $r9;

        $r10 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r13 = (android.view.SurfaceControl) $r12;

        interfaceinvoke $r11.<android.view.SurfaceControl$OnReparentListener: void onReparent(android.view.SurfaceControl$Transaction,android.view.SurfaceControl)>(r0, $r13);

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        $r6 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label10:
        exitmonitor r1;

     label11:
        i1 = i1 + -1;

        goto label01;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r15;

     label15:
        return;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void readFromParcel(android.os.Parcel)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.Parcel r1;
        long l0;
        int $i1;
        libcore.util.NativeAllocationRegistry $r2;
        java.lang.Runnable $r3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.Parcel;

        r0.<android.view.SurfaceControl$Transaction: long mNativeObject> = 0L;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label1;

        l0 = staticinvoke <android.view.SurfaceControl: long access$4900(android.os.Parcel)>(r1);

        r0.<android.view.SurfaceControl$Transaction: long mNativeObject> = l0;

        $r2 = <android.view.SurfaceControl$Transaction: libcore.util.NativeAllocationRegistry sRegistry>;

        $r3 = virtualinvoke $r2.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, l0);

        r0.<android.view.SurfaceControl$Transaction: java.lang.Runnable mFreeNativeResources> = $r3;

     label1:
        return;
    }

    public void apply()
    {
        android.view.SurfaceControl$Transaction r0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void apply(boolean)>(0);

        return;
    }

    public void apply(boolean)
    {
        android.view.SurfaceControl$Transaction r0;
        boolean z0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.SurfaceControl$Transaction: void applyResizedSurfaces()>();

        specialinvoke r0.<android.view.SurfaceControl$Transaction: void notifyReparentedSurfaces()>();

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$500(long,boolean)>($l0, z0);

        return;
    }

    protected void checkPreconditions(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        staticinvoke <android.view.SurfaceControl: void access$300(android.view.SurfaceControl)>(r1);

        return;
    }

    public void close()
    {
        android.view.SurfaceControl$Transaction r0;
        android.util.ArrayMap $r1, $r2;
        java.lang.Runnable $r3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $r1 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        $r2 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        $r3 = r0.<android.view.SurfaceControl$Transaction: java.lang.Runnable mFreeNativeResources>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        r0.<android.view.SurfaceControl$Transaction: long mNativeObject> = 0L;

        return;
    }

    public android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl, android.view.SurfaceControl, long)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1, r2;
        long l0, $l2, $l3, $l4;
        byte $b1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl;

        l0 := @parameter2: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l4 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l3 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $l2 = r2.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2900(long,long,long,long)>($l4, $l3, $l2, l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction deferTransactionUntilSurface(android.view.SurfaceControl, android.view.Surface, long)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.view.Surface r2;
        long l0, $l2, $l3, $l4;
        byte $b1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.Surface;

        l0 := @parameter2: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l4 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l3 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $l2 = r2.<android.view.Surface: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3000(long,long,long,long)>($l4, $l3, $l2, l0);

        return r0;
    }

    public int describeContents()
    {
        android.view.SurfaceControl$Transaction r0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        return 0;
    }

    public android.view.SurfaceControl$Transaction detachChildren(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3300(long,long)>($l1, $l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l1, $l0, 1, 1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction merge(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceControl$Transaction r0, r1;
        android.util.ArrayMap $r2, $r3, $r4, $r5, $r6, $r7;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        if r0 != r1 goto label1;

        return r0;

     label1:
        $r3 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        $r2 = r1.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        virtualinvoke $r3.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r2);

        $r4 = r1.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        $r6 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        $r5 = r1.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        virtualinvoke $r6.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r5);

        $r7 = r1.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        virtualinvoke $r7.<android.util.ArrayMap: void clear()>();

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4700(long,long)>($l1, $l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r1, null);

        virtualinvoke r1.<android.view.SurfaceControl: void release()>();

        return r0;
    }

    public android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl, android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1, r2;
        long $l0, $l1, l2;
        android.util.ArrayMap $r3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        l2 = 0L;

        if r2 == null goto label1;

        staticinvoke <android.view.SurfaceControl: void access$300(android.view.SurfaceControl)>(r2);

        l2 = r2.<android.view.SurfaceControl: long mNativeObject>;

     label1:
        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3200(long,long,long)>($l1, $l0, l2);

        $r3 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mReparentedSurfaces>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction reparentChildren(android.view.SurfaceControl, android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1, r2;
        long $l0, $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $l0 = r2.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3100(long,long,long)>($l2, $l1, $l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl, float)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1800(long,long,float)>($l1, $l0, f0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setAnimationTransaction()
    {
        android.view.SurfaceControl$Transaction r0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4000(long)>($l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setBackgroundBlurRadius(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2700(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setBufferSize(android.view.SurfaceControl, int, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0, i1;
        android.graphics.Point $r2;
        android.util.ArrayMap $r3;
        long $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $r3 = r0.<android.view.SurfaceControl$Transaction: android.util.ArrayMap mResizedSurfaces>;

        $r2 = new android.graphics.Point;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>(i0, i1);

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1300(long,long,int,int)>($l3, $l2, i0, i1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setColor(android.view.SurfaceControl, float[])
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float[] r2;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: float[];

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3500(long,long,float[])>($l1, $l0, r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setColorSpaceAgnostic(android.view.SurfaceControl, boolean)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        boolean z0;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2400(long,long,boolean)>($l1, $l0, z0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setColorTransform(android.view.SurfaceControl, float[], float[])
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float[] r2, r3;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2300(long,long,float[],float[])>($l1, $l0, r2, r3);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setCornerRadius(android.view.SurfaceControl, float)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2600(long,long,float)>($l1, $l0, f0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setDisplayLayerStack(android.os.IBinder, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.IBinder r1;
        int i0;
        java.lang.IllegalArgumentException $r2;
        long $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3700(long,android.os.IBinder,int)>($l1, r1, i0);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("displayToken must not be null");

        throw $r2;
    }

    public android.view.SurfaceControl$Transaction setDisplayProjection(android.os.IBinder, int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.IBinder r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r2, r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;
        long $l9;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        if r1 == null goto label3;

        if r2 == null goto label2;

        if r3 == null goto label1;

        $l9 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $i8 = r2.<android.graphics.Rect: int left>;

        $i7 = r2.<android.graphics.Rect: int top>;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $i3 = r3.<android.graphics.Rect: int top>;

        $i2 = r3.<android.graphics.Rect: int right>;

        $i1 = r3.<android.graphics.Rect: int bottom>;

        staticinvoke <android.view.SurfaceControl: void access$3800(long,android.os.IBinder,int,int,int,int,int,int,int,int,int)>($l9, r1, i0, $i8, $i7, $i6, $i5, $i4, $i3, $i2, $i1);

        return r0;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("displayRect must not be null");

        throw $r6;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("layerStackRect must not be null");

        throw $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("displayToken must not be null");

        throw $r4;
    }

    public android.view.SurfaceControl$Transaction setDisplaySize(android.os.IBinder, int, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.IBinder r1;
        int i0, i1;
        java.lang.IllegalArgumentException $r2, $r3;
        long $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label2;

        if i0 <= 0 goto label1;

        if i1 <= 0 goto label1;

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3900(long,android.os.IBinder,int,int)>($l2, r1, i0, i1);

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width and height must be positive");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("displayToken must not be null");

        throw $r2;
    }

    public android.view.SurfaceControl$Transaction setDisplaySurface(android.os.IBinder, android.view.Surface)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.Surface r1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        long $l0, $l1, $l2;
        java.lang.Throwable $r4;
        android.os.IBinder r5;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r5 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.view.Surface;

        if r5 == null goto label8;

        if r1 == null goto label6;

        r2 = r1.<android.view.Surface: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.Surface: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3600(long,android.os.IBinder,long)>($l2, r5, $l1);

        exitmonitor r2;

     label2:
        goto label7;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

     label6:
        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3600(long,android.os.IBinder,long)>($l0, r5, 0L);

     label7:
        return r0;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("displayToken must not be null");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.SurfaceControl$Transaction setEarlyWakeup()
    {
        android.view.SurfaceControl$Transaction r0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4100(long)>($l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setEarlyWakeupEnd()
    {
        android.view.SurfaceControl$Transaction r0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4300(long)>($l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setEarlyWakeupStart()
    {
        android.view.SurfaceControl$Transaction r0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4200(long)>($l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setFixedTransformHint(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1400(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setFrameRate(android.view.SurfaceControl, float, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4600(long,long,float,int)>($l2, $l1, f0, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setFrameRateSelectionPriority(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        staticinvoke <android.view.SurfaceControl: void access$300(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1000(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setGeometry(android.view.SurfaceControl, android.graphics.Rect, android.graphics.Rect, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.graphics.Rect r2, r3;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $l1 = (long) i0;

        staticinvoke <android.view.SurfaceControl: void access$2100(long,long,android.graphics.Rect,android.graphics.Rect,long)>($l3, $l2, r2, r3, $l1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setInputWindowInfo(android.view.SurfaceControl, android.view.InputWindowHandle)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.view.InputWindowHandle r2;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.InputWindowHandle;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1900(long,long,android.view.InputWindowHandle)>($l1, $l0, r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setLayer(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1500(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setLayerStack(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2800(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl, float, float, float, float)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0, f1, f2, f3;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2200(long,long,float,float,float,float)>($l1, $l0, f0, f1, f2, f3);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl, android.graphics.Matrix, float[])
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.graphics.Matrix r2;
        float[] r3;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: float[];

        virtualinvoke r2.<android.graphics.Matrix: void getValues(float[])>(r3);

        $f3 = r3[0];

        $f2 = r3[3];

        $f1 = r3[1];

        $f0 = r3[4];

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,float,float,float,float)>(r1, $f3, $f2, $f1, $f0);

        $f5 = r3[2];

        $f4 = r3[5];

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>(r1, $f5, $f4);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setMetadata(android.view.SurfaceControl, int, int)
    {
        android.view.SurfaceControl$Transaction r0;
        int i0, i1;
        android.os.Parcel r1;
        java.lang.Throwable $r3;
        android.view.SurfaceControl r4;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r4 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label1:
        virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMetadata(android.view.SurfaceControl,int,android.os.Parcel)>(r4, i0, r1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.view.SurfaceControl$Transaction setMetadata(android.view.SurfaceControl, int, android.os.Parcel)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        android.os.Parcel r2;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Parcel;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4400(long,long,int,android.os.Parcel)>($l2, $l1, i0, r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setOpaque(android.view.SurfaceControl, boolean)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        boolean z0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        if z0 == 0 goto label1;

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l3, $l2, 2, 2);

        goto label2;

     label1:
        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l1, $l0, 0, 2);

     label2:
        return r0;
    }

    public android.view.SurfaceControl$Transaction setOverrideScalingMode(android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l2 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l1 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$3400(long,long,int)>($l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl, float, float)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0, f1;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1200(long,long,float,float)>($l1, $l0, f0, f1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setRelativeLayer(android.view.SurfaceControl, android.view.SurfaceControl, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1, r2;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $l1 = r2.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1600(long,long,long,int)>($l3, $l2, $l1, i0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setSecure(android.view.SurfaceControl, boolean)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        boolean z0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        if z0 == 0 goto label1;

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l3, $l2, 128, 128);

        goto label2;

     label1:
        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l1, $l0, 0, 128);

     label2:
        return r0;
    }

    public android.view.SurfaceControl$Transaction setShadowRadius(android.view.SurfaceControl, float)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float f0;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4500(long,long,float)>($l1, $l0, f0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setTransparentRegionHint(android.view.SurfaceControl, android.graphics.Region)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.graphics.Region r2;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.graphics.Region;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1700(long,long,android.graphics.Region)>($l1, $l0, r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setVisibility(android.view.SurfaceControl, boolean)
    {
        android.view.SurfaceControl$Transaction r0, $r2, $r3;
        android.view.SurfaceControl r1;
        boolean z0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r1);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>(r1);

        return $r2;
    }

    public android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl, int, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        int i0, i1;
        long $l2, $l3;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l2 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2500(long,long,int,int,int,int)>($l3, $l2, 0, 0, i0, i1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl, android.graphics.Rect)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        android.graphics.Rect r2;
        long $l0, $l1, $l6, $l7;
        int $i2, $i3, $i4, $i5;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.graphics.Rect;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        if r2 == null goto label1;

        $l7 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l6 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $i5 = r2.<android.graphics.Rect: int left>;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i3 = r2.<android.graphics.Rect: int right>;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        staticinvoke <android.view.SurfaceControl: void access$2500(long,long,int,int,int,int)>($l7, $l6, $i5, $i4, $i3, $i2);

        goto label2;

     label1:
        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2500(long,long,int,int,int,int)>($l1, $l0, 0, 0, 0, 0);

     label2:
        return r0;
    }

    public android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1100(long,long,int,int)>($l1, $l0, 0, 1);

        return r0;
    }

    public android.view.SurfaceControl$Transaction syncInputWindows()
    {
        android.view.SurfaceControl$Transaction r0;
        long $l0;

        r0 := @this: android.view.SurfaceControl$Transaction;

        $l0 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$2000(long)>($l0);

        return r0;
    }

    public android.view.SurfaceControl$Transaction unsetColor(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        float[] $r2;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        $r2 = <android.view.SurfaceControl$Transaction: float[] INVALID_COLOR>;

        staticinvoke <android.view.SurfaceControl: void access$3500(long,long,float[])>($l1, $l0, $r2);

        return r0;
    }

    public android.view.SurfaceControl$Transaction unsetFixedTransformHint(android.view.SurfaceControl)
    {
        android.view.SurfaceControl$Transaction r0;
        android.view.SurfaceControl r1;
        long $l0, $l1;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.view.SurfaceControl;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void checkPreconditions(android.view.SurfaceControl)>(r1);

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $l0 = r1.<android.view.SurfaceControl: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$1400(long,long,int)>($l1, $l0, -1);

        return r0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.SurfaceControl$Transaction r0;
        android.os.Parcel r1;
        int i0;
        long $l1, $l3;
        byte $b2;

        r0 := @this: android.view.SurfaceControl$Transaction;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

     label2:
        $l3 = r0.<android.view.SurfaceControl$Transaction: long mNativeObject>;

        staticinvoke <android.view.SurfaceControl: void access$4800(long,android.os.Parcel)>($l3, r1);

        return;
    }
}
