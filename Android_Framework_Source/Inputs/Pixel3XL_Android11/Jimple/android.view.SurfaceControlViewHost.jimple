public class android.view.SurfaceControlViewHost extends java.lang.Object
{
    private android.view.accessibility.IAccessibilityEmbeddedConnection mAccessibilityEmbeddedConnection;
    private android.view.SurfaceControl mSurfaceControl;
    private final android.view.ViewRootImpl mViewRoot;
    private android.view.WindowlessWindowManager mWm;

    public void <init>(android.content.Context, android.view.Display, android.os.IBinder)
    {
        android.view.SurfaceControlViewHost r0;
        android.view.Display r1;
        android.os.IBinder r2;
        android.view.SurfaceControl$Builder $r3, $r4, $r5, $r6;
        android.view.SurfaceControl $r7, $r11;
        android.view.WindowlessWindowManager $r8, $r13;
        android.content.res.Resources $r9;
        android.content.res.Configuration $r10;
        android.view.ViewRootImpl $r12, $r14;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r15;
        android.content.Context r16;

        r0 := @this: android.view.SurfaceControlViewHost;

        r16 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.Display;

        r2 := @parameter2: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.view.SurfaceControl$Builder;

        specialinvoke $r3.<android.view.SurfaceControl$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

        $r5 = virtualinvoke $r4.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>("SurfaceControlViewHost");

        $r6 = virtualinvoke $r5.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("SurfaceControlViewHost");

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<android.view.SurfaceControlViewHost: android.view.SurfaceControl mSurfaceControl> = $r7;

        $r8 = new android.view.WindowlessWindowManager;

        $r9 = virtualinvoke r16.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r11 = r0.<android.view.SurfaceControlViewHost: android.view.SurfaceControl mSurfaceControl>;

        specialinvoke $r8.<android.view.WindowlessWindowManager: void <init>(android.content.res.Configuration,android.view.SurfaceControl,android.os.IBinder)>($r10, $r11, r2);

        r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm> = $r8;

        $r12 = new android.view.ViewRootImpl;

        $r13 = r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm>;

        specialinvoke $r12.<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display,android.view.IWindowSession)>(r16, r1, $r13);

        r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot> = $r12;

        virtualinvoke $r12.<android.view.ViewRootImpl: void forceDisableBLAST()>();

        $r14 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        $r15 = virtualinvoke $r14.<android.view.ViewRootImpl: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()>();

        r0.<android.view.SurfaceControlViewHost: android.view.accessibility.IAccessibilityEmbeddedConnection mAccessibilityEmbeddedConnection> = $r15;

        return;
    }

    public void <init>(android.content.Context, android.view.Display, android.view.WindowlessWindowManager)
    {
        android.view.SurfaceControlViewHost r0;
        android.content.Context r1;
        android.view.Display r2;
        android.view.WindowlessWindowManager r3;

        r0 := @this: android.view.SurfaceControlViewHost;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Display;

        r3 := @parameter2: android.view.WindowlessWindowManager;

        specialinvoke r0.<android.view.SurfaceControlViewHost: void <init>(android.content.Context,android.view.Display,android.view.WindowlessWindowManager,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void <init>(android.content.Context, android.view.Display, android.view.WindowlessWindowManager, boolean)
    {
        android.view.SurfaceControlViewHost r0;
        android.view.Display r1;
        android.view.WindowlessWindowManager r2, $r4;
        boolean z0;
        android.view.ViewRootImpl $r3, $r5;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r6;
        android.content.Context r7;

        r0 := @this: android.view.SurfaceControlViewHost;

        r7 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.Display;

        r2 := @parameter2: android.view.WindowlessWindowManager;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm> = r2;

        $r3 = new android.view.ViewRootImpl;

        $r4 = r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm>;

        specialinvoke $r3.<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display,android.view.IWindowSession,boolean)>(r7, r1, $r4, z0);

        r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot> = $r3;

        virtualinvoke $r3.<android.view.ViewRootImpl: void forceDisableBLAST()>();

        $r5 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        $r6 = virtualinvoke $r5.<android.view.ViewRootImpl: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()>();

        r0.<android.view.SurfaceControlViewHost: android.view.accessibility.IAccessibilityEmbeddedConnection mAccessibilityEmbeddedConnection> = $r6;

        return;
    }

    static void lambda$relayout$0(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceControl$Transaction r0;

        r0 := @parameter0: android.view.SurfaceControl$Transaction;

        virtualinvoke r0.<android.view.SurfaceControl$Transaction: void apply()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.SurfaceControlViewHost r0;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r1.<android.view.ViewRootImpl: boolean die(boolean)>(0);

        return;
    }

    public android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()
    {
        android.view.SurfaceControlViewHost r0;
        android.view.SurfaceControl $r1, $r5;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r2, $r4;
        android.view.SurfaceControlViewHost$SurfacePackage $r3;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.SurfaceControl mSurfaceControl>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.SurfaceControlViewHost: android.view.accessibility.IAccessibilityEmbeddedConnection mAccessibilityEmbeddedConnection>;

        if $r2 == null goto label1;

        $r3 = new android.view.SurfaceControlViewHost$SurfacePackage;

        $r5 = r0.<android.view.SurfaceControlViewHost: android.view.SurfaceControl mSurfaceControl>;

        $r4 = r0.<android.view.SurfaceControlViewHost: android.view.accessibility.IAccessibilityEmbeddedConnection mAccessibilityEmbeddedConnection>;

        specialinvoke $r3.<android.view.SurfaceControlViewHost$SurfacePackage: void <init>(android.view.SurfaceControl,android.view.accessibility.IAccessibilityEmbeddedConnection)>($r5, $r4);

        return $r3;

     label1:
        return null;
    }

    public android.view.View getView()
    {
        android.view.SurfaceControlViewHost r0;
        android.view.ViewRootImpl $r1;
        android.view.View $r2;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = virtualinvoke $r1.<android.view.ViewRootImpl: android.view.View getView()>();

        return $r2;
    }

    public android.view.IWindow getWindowToken()
    {
        android.view.SurfaceControlViewHost r0;
        android.view.ViewRootImpl $r1;
        android.view.ViewRootImpl$W $r2;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$W mWindow>;

        return $r2;
    }

    public android.view.WindowlessWindowManager getWindowlessWM()
    {
        android.view.SurfaceControlViewHost r0;
        android.view.WindowlessWindowManager $r1;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm>;

        return $r1;
    }

    public void relayout(int, int)
    {
        android.view.SurfaceControlViewHost r0;
        int i0, i1;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @this: android.view.SurfaceControlViewHost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r1.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>(i0, i1, 2, 0, -2);

        virtualinvoke r0.<android.view.SurfaceControlViewHost: void relayout(android.view.WindowManager$LayoutParams)>($r1);

        return;
    }

    public void relayout(android.view.WindowManager$LayoutParams)
    {
        android.view.SurfaceControlViewHost r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.ViewRootImpl $r2, $r3, $r4;
        android.view.ViewRootImpl$W $r5;
        android.view.WindowlessWindowManager $r6;
        android.os.IBinder $r7;
        android.view.'-$$Lambda$SurfaceControlViewHost$eK8W6Rz7iopatcJwPdlT0MmkE40' $r8;
        android.view.WindowlessWindowManager$ResizeCompleteCallback r9;

        r0 := @this: android.view.SurfaceControlViewHost;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $r2 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r2.<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>(r1, 0);

        $r3 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r3.<android.view.ViewRootImpl: void setReportNextDraw()>();

        $r6 = r0.<android.view.SurfaceControlViewHost: android.view.WindowlessWindowManager mWm>;

        $r4 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.ViewRootImpl$W mWindow>;

        $r7 = virtualinvoke $r5.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        $r8 = <android.view._$$Lambda$SurfaceControlViewHost$eK8W6Rz7iopatcJwPdlT0MmkE40: android.view.'-$$Lambda$SurfaceControlViewHost$eK8W6Rz7iopatcJwPdlT0MmkE40' INSTANCE>;

        r9 = (android.view.WindowlessWindowManager$ResizeCompleteCallback) $r8;

        virtualinvoke $r6.<android.view.WindowlessWindowManager: void setCompletionCallback(android.os.IBinder,android.view.WindowlessWindowManager$ResizeCompleteCallback)>($r7, r9);

        return;
    }

    public void release()
    {
        android.view.SurfaceControlViewHost r0;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.SurfaceControlViewHost;

        $r1 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r1.<android.view.ViewRootImpl: boolean die(boolean)>(1);

        return;
    }

    public void setView(android.view.View, int, int)
    {
        android.view.SurfaceControlViewHost r0;
        android.view.View r1;
        int i0, i1, $i2, $i3;
        android.view.WindowManager$LayoutParams $r3;

        r0 := @this: android.view.SurfaceControlViewHost;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r3.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>(i0, i1, 2, 0, -2);

        $i2 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = $i2 | 16777216;

        $r3.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        virtualinvoke r0.<android.view.SurfaceControlViewHost: void setView(android.view.View,android.view.WindowManager$LayoutParams)>(r1, $r3);

        return;
    }

    public void setView(android.view.View, android.view.WindowManager$LayoutParams)
    {
        android.view.SurfaceControlViewHost r0;
        android.view.View r1;
        android.view.WindowManager$LayoutParams r2;
        android.view.ViewRootImpl $r4;

        r0 := @this: android.view.SurfaceControlViewHost;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.WindowManager$LayoutParams;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<android.view.SurfaceControlViewHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)>(r1, r2, null);

        return;
    }
}
