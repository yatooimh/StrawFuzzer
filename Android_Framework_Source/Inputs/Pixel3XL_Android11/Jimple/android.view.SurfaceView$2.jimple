class android.view.SurfaceView$2 extends java.lang.Object implements android.view.SurfaceHolder
{
    private static final java.lang.String LOG_TAG;
    final android.view.SurfaceView this$0;

    void <init>(android.view.SurfaceView)
    {
        android.view.SurfaceView$2 r0;
        android.view.SurfaceView r1;

        r0 := @this: android.view.SurfaceView$2;

        r1 := @parameter0: android.view.SurfaceView;

        r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private android.graphics.Canvas internalLockCanvas(android.graphics.Rect, boolean)
    {
        android.view.SurfaceView$2 r0;
        boolean z0, $z1;
        long l0, l1, $l2, $l4, $l5, l6;
        android.view.SurfaceView $r1, $r3, $r4, $r5, $r6, $r8, $r10, $r18, $r19;
        java.util.concurrent.locks.ReentrantLock $r2, $r20;
        byte $b3;
        android.view.SurfaceControl $r7;
        android.view.Surface $r9, $r11;
        java.lang.Throwable $r12;
        java.lang.Exception $r13;
        android.graphics.Rect r14;
        android.graphics.Canvas r15, r16;

        r0 := @this: android.view.SurfaceView$2;

        r14 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2 = $r1.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r15 = null;

        $r3 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $z1 = $r3.<android.view.SurfaceView: boolean mDrawingStopped>;

        if $z1 != 0 goto label06;

        r15 = null;

        $r6 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r7 = $r6.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r7 == null goto label06;

        if z0 == 0 goto label03;

     label01:
        $r10 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r11 = $r10.<android.view.SurfaceView: android.view.Surface mSurface>;

        r16 = virtualinvoke $r11.<android.view.Surface: android.graphics.Canvas lockHardwareCanvas()>();

     label02:
        goto label04;

     label03:
        $r8 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r9 = $r8.<android.view.SurfaceView: android.view.Surface mSurface>;

        r16 = virtualinvoke $r9.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(r14);

     label04:
        r15 = r16;

        goto label06;

     label05:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SurfaceHolder", "Exception locking surface", $r13);

        r15 = null;

     label06:
        if r15 == null goto label07;

        $r5 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5.<android.view.SurfaceView: long mLastLockTime> = $l5;

        return r15;

     label07:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $l2 = $r4.<android.view.SurfaceView: long mLastLockTime>;

        l1 = $l2 + 100L;

        l6 = l0;

        $b3 = l1 cmp l0;

        if $b3 <= 0 goto label12;

     label08:
        $l4 = l1 - l0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l4);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

     label11:
        l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label12:
        $r18 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r18.<android.view.SurfaceView: long mLastLockTime> = l6;

        $r19 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r20 = $r19.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r20.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.InterruptedException from label08 to label09 with label10;
    }

    public void addCallback(android.view.SurfaceHolder$Callback)
    {
        android.view.SurfaceView$2 r0;
        java.util.ArrayList r1, $r4, $r6;
        android.view.SurfaceView $r2, $r3, $r5;
        boolean $z0;
        java.lang.Throwable $r7;
        android.view.SurfaceHolder$Callback r8;

        r0 := @this: android.view.SurfaceView$2;

        r8 := @parameter0: android.view.SurfaceHolder$Callback;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        r1 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r3.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r8);

        if $z0 != 0 goto label2;

        $r5 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r6 = $r5.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.view.Surface getSurface()
    {
        android.view.SurfaceView$2 r0;
        android.view.SurfaceView $r1;
        android.view.Surface $r2;

        r0 := @this: android.view.SurfaceView$2;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2 = $r1.<android.view.SurfaceView: android.view.Surface mSurface>;

        return $r2;
    }

    public android.graphics.Rect getSurfaceFrame()
    {
        android.view.SurfaceView$2 r0;
        android.view.SurfaceView $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.view.SurfaceView$2;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2 = $r1.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        return $r2;
    }

    public boolean isCreating()
    {
        android.view.SurfaceView$2 r0;
        android.view.SurfaceView $r1;
        boolean $z0;

        r0 := @this: android.view.SurfaceView$2;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $z0 = $r1.<android.view.SurfaceView: boolean mIsCreating>;

        return $z0;
    }

    public void lambda$setKeepScreenOn$0$SurfaceView$2(boolean)
    {
        android.view.SurfaceView$2 r0;
        boolean z0;
        android.view.SurfaceView $r1;

        r0 := @this: android.view.SurfaceView$2;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r1.<android.view.SurfaceView: void setKeepScreenOn(boolean)>(z0);

        return;
    }

    public android.graphics.Canvas lockCanvas()
    {
        android.view.SurfaceView$2 r0;
        android.graphics.Canvas $r1;

        r0 := @this: android.view.SurfaceView$2;

        $r1 = specialinvoke r0.<android.view.SurfaceView$2: android.graphics.Canvas internalLockCanvas(android.graphics.Rect,boolean)>(null, 0);

        return $r1;
    }

    public android.graphics.Canvas lockCanvas(android.graphics.Rect)
    {
        android.view.SurfaceView$2 r0;
        android.graphics.Rect r1;
        android.graphics.Canvas $r2;

        r0 := @this: android.view.SurfaceView$2;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = specialinvoke r0.<android.view.SurfaceView$2: android.graphics.Canvas internalLockCanvas(android.graphics.Rect,boolean)>(r1, 0);

        return $r2;
    }

    public android.graphics.Canvas lockHardwareCanvas()
    {
        android.view.SurfaceView$2 r0;
        android.graphics.Canvas $r1;

        r0 := @this: android.view.SurfaceView$2;

        $r1 = specialinvoke r0.<android.view.SurfaceView$2: android.graphics.Canvas internalLockCanvas(android.graphics.Rect,boolean)>(null, 1);

        return $r1;
    }

    public void removeCallback(android.view.SurfaceHolder$Callback)
    {
        android.view.SurfaceView$2 r0;
        java.util.ArrayList r1, $r4;
        android.view.SurfaceView $r2, $r3;
        java.lang.Throwable $r5;
        android.view.SurfaceHolder$Callback r6;

        r0 := @this: android.view.SurfaceView$2;

        r6 := @parameter0: android.view.SurfaceHolder$Callback;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        r1 = $r2.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r4 = $r3.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setFixedSize(int, int)
    {
        android.view.SurfaceView$2 r0;
        int i0, i1, $i2, $i3;
        android.view.SurfaceView $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.view.SurfaceView$2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i2 = $r1.<android.view.SurfaceView: int mRequestedWidth>;

        if $i2 != i0 goto label1;

        $r5 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i3 = $r5.<android.view.SurfaceView: int mRequestedHeight>;

        if $i3 == i1 goto label2;

     label1:
        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r2.<android.view.SurfaceView: int mRequestedWidth> = i0;

        $r3 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3.<android.view.SurfaceView: int mRequestedHeight> = i1;

        $r4 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r4.<android.view.SurfaceView: void requestLayout()>();

     label2:
        return;
    }

    public void setFormat(int)
    {
        android.view.SurfaceView$2 r0;
        int i0, i1;
        android.view.SurfaceView $r1, $r2, $r4;
        android.view.SurfaceControl $r3;

        r0 := @this: android.view.SurfaceView$2;

        i0 := @parameter0: int;

        i1 = i0;

        if i0 != -1 goto label1;

        i1 = 4;

     label1:
        $r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1.<android.view.SurfaceView: int mRequestedFormat> = i1;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r3 == null goto label2;

        $r4 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r4.<android.view.SurfaceView: void updateSurface()>();

     label2:
        return;
    }

    public void setKeepScreenOn(boolean)
    {
        android.view.SurfaceView$2 r0;
        boolean z0;
        android.view._$$Lambda$SurfaceView$2$yPLKBEhjLeg2pTjLhVjBxCxl3rE $r1;
        android.view.SurfaceView $r2;

        r0 := @this: android.view.SurfaceView$2;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r1 = new android.view._$$Lambda$SurfaceView$2$yPLKBEhjLeg2pTjLhVjBxCxl3rE;

        specialinvoke $r1.<android.view._$$Lambda$SurfaceView$2$yPLKBEhjLeg2pTjLhVjBxCxl3rE: void <init>(android.view.SurfaceView$2,boolean)>(r0, z0);

        staticinvoke <android.view.SurfaceView: void access$500(android.view.SurfaceView,java.lang.Runnable)>($r2, $r1);

        return;
    }

    public void setSizeFromLayout()
    {
        android.view.SurfaceView$2 r0;
        android.view.SurfaceView r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.view.SurfaceView$2;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i0 = $r2.<android.view.SurfaceView: int mRequestedWidth>;

        if $i0 != -1 goto label1;

        $r4 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $i1 = $r4.<android.view.SurfaceView: int mRequestedHeight>;

        if $i1 == -1 goto label2;

     label1:
        r1 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        r1.<android.view.SurfaceView: int mRequestedHeight> = -1;

        r1.<android.view.SurfaceView: int mRequestedWidth> = -1;

        $r3 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        virtualinvoke $r3.<android.view.SurfaceView: void requestLayout()>();

     label2:
        return;
    }

    public void setType(int)
    {
        android.view.SurfaceView$2 r0;
        int i0;

        r0 := @this: android.view.SurfaceView$2;

        i0 := @parameter0: int;

        return;
    }

    public void unlockCanvasAndPost(android.graphics.Canvas)
    {
        android.view.SurfaceView$2 r0;
        android.graphics.Canvas r1;
        android.view.SurfaceView $r2, $r4;
        android.view.Surface $r3;
        java.util.concurrent.locks.ReentrantLock $r5;

        r0 := @this: android.view.SurfaceView$2;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r3 = $r2.<android.view.SurfaceView: android.view.Surface mSurface>;

        virtualinvoke $r3.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r1);

        $r4 = r0.<android.view.SurfaceView$2: android.view.SurfaceView this$0>;

        $r5 = $r4.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;
    }

    public static void <clinit>()
    {
        <android.view.SurfaceView$2: java.lang.String LOG_TAG> = "SurfaceHolder";

        return;
    }
}
