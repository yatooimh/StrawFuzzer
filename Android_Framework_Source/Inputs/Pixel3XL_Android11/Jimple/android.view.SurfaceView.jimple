public class android.view.SurfaceView extends android.view.View implements android.view.ViewRootImpl$SurfaceChangedCallback
{
    private static final boolean DEBUG;
    private static final boolean DEBUG_POSITION;
    private static final java.lang.String TAG;
    private boolean mAttachedToWindow;
    int mBackgroundColor;
    android.view.SurfaceControl mBackgroundControl;
    final java.util.ArrayList mCallbacks;
    boolean mClipSurfaceToBounds;
    float mCornerRadius;
    android.view.SurfaceControl mDeferredDestroySurfaceControl;
    private boolean mDisableBackgroundLayer;
    boolean mDrawFinished;
    private final android.view.ViewTreeObserver$OnPreDrawListener mDrawListener;
    boolean mDrawingStopped;
    int mFormat;
    private boolean mGlobalListenersAdded;
    boolean mHaveFrame;
    boolean mIsCreating;
    long mLastLockTime;
    int mLastSurfaceHeight;
    int mLastSurfaceWidth;
    boolean mLastWindowVisibility;
    final int[] mLocation;
    private final float[] mMatrixValues;
    private int mParentSurfaceGenerationId;
    private int mPendingReportDraws;
    private android.graphics.RenderNode$PositionUpdateListener mPositionListener;
    private android.graphics.Rect mRTLastReportedPosition;
    private android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection;
    int mRequestedFormat;
    int mRequestedHeight;
    boolean mRequestedVisible;
    int mRequestedWidth;
    android.graphics.Paint mRoundedViewportPaint;
    private volatile boolean mRtHandlingPositionUpdates;
    private volatile boolean mRtReleaseSurfaces;
    private android.view.SurfaceControl$Transaction mRtTransaction;
    private final android.graphics.Matrix mScreenMatrixForEmbeddedHierarchy;
    final android.graphics.Rect mScreenRect;
    private final android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener;
    int mSubLayer;
    final android.view.Surface mSurface;
    float mSurfaceAlpha;
    android.view.SurfaceControl mSurfaceControl;
    final java.lang.Object mSurfaceControlLock;
    boolean mSurfaceCreated;
    private int mSurfaceFlags;
    final android.graphics.Rect mSurfaceFrame;
    int mSurfaceHeight;
    private final android.view.SurfaceHolder mSurfaceHolder;
    final java.util.concurrent.locks.ReentrantLock mSurfaceLock;
    android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage;
    private final android.view.SurfaceSession mSurfaceSession;
    int mSurfaceWidth;
    private final android.graphics.Matrix mTmpMatrix;
    final android.graphics.Rect mTmpRect;
    private android.view.SurfaceControl$Transaction mTmpTransaction;
    boolean mUseAlpha;
    boolean mViewVisibility;
    boolean mVisible;
    int mWindowSpaceLeft;
    int mWindowSpaceTop;
    boolean mWindowStopped;
    boolean mWindowVisibility;

    public void <init>(android.content.Context)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int,boolean)>(r1, r2, i0, i1, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, boolean)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        boolean z0;
        java.util.ArrayList $r3;
        int[] $r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        android.view.Surface $r6;
        android.graphics.Rect $r7, $r10, $r13, $r19;
        android.view.SurfaceSession $r8;
        java.lang.Object $r9;
        android.view._$$Lambda$PYGleuqIeCxjTD1pJqqx1opFv1g $r11;
        android.view._$$Lambda$SurfaceView$w68OV7dB_zKVNsA_r0IrAUtyWas $r12;
        android.view.SurfaceControl$Transaction $r14, $r15;
        android.graphics.Matrix $r16, $r17;
        float[] $r18;
        android.view.SurfaceView$1 $r20;
        android.view.SurfaceView$2 $r21;
        android.graphics.RenderNode$PositionUpdateListener $r22;
        android.graphics.RenderNode $r23;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks> = $r3;

        $r4 = newarray (int)[2];

        r0.<android.view.SurfaceView: int[] mLocation> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock> = $r5;

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mSurface> = $r6;

        r0.<android.view.SurfaceView: boolean mDrawingStopped> = 1;

        r0.<android.view.SurfaceView: boolean mDrawFinished> = 0;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect> = $r7;

        $r8 = new android.view.SurfaceSession;

        specialinvoke $r8.<android.view.SurfaceSession: void <init>()>();

        r0.<android.view.SurfaceView: android.view.SurfaceSession mSurfaceSession> = $r8;

        r0.<android.view.SurfaceView: boolean mDisableBackgroundLayer> = 0;

        $r9 = new java.lang.Object;

        specialinvoke $r9.<java.lang.Object: void <init>()>();

        r0.<android.view.SurfaceView: java.lang.Object mSurfaceControlLock> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect> = $r10;

        r0.<android.view.SurfaceView: int mSubLayer> = -2;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        r0.<android.view.SurfaceView: boolean mRtHandlingPositionUpdates> = 0;

        r0.<android.view.SurfaceView: boolean mRtReleaseSurfaces> = 0;

        $r11 = new android.view._$$Lambda$PYGleuqIeCxjTD1pJqqx1opFv1g;

        specialinvoke $r11.<android.view._$$Lambda$PYGleuqIeCxjTD1pJqqx1opFv1g: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener> = $r11;

        $r12 = new android.view._$$Lambda$SurfaceView$w68OV7dB_zKVNsA_r0IrAUtyWas;

        specialinvoke $r12.<android.view._$$Lambda$SurfaceView$w68OV7dB_zKVNsA_r0IrAUtyWas: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener> = $r12;

        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        r0.<android.view.SurfaceView: boolean mWindowVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mLastWindowVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mViewVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mWindowStopped> = 0;

        r0.<android.view.SurfaceView: int mRequestedWidth> = -1;

        r0.<android.view.SurfaceView: int mRequestedHeight> = -1;

        r0.<android.view.SurfaceView: int mRequestedFormat> = 4;

        r0.<android.view.SurfaceView: boolean mUseAlpha> = 0;

        r0.<android.view.SurfaceView: float mSurfaceAlpha> = 1.0F;

        r0.<android.view.SurfaceView: int mBackgroundColor> = -16777216;

        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        r0.<android.view.SurfaceView: long mLastLockTime> = 0L;

        r0.<android.view.SurfaceView: boolean mVisible> = 0;

        r0.<android.view.SurfaceView: int mWindowSpaceLeft> = -1;

        r0.<android.view.SurfaceView: int mWindowSpaceTop> = -1;

        r0.<android.view.SurfaceView: int mSurfaceWidth> = -1;

        r0.<android.view.SurfaceView: int mSurfaceHeight> = -1;

        r0.<android.view.SurfaceView: int mFormat> = -1;

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame> = $r13;

        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = -1;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = -1;

        r0.<android.view.SurfaceView: int mSurfaceFlags> = 4;

        $r14 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r14.<android.view.SurfaceControl$Transaction: void <init>()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mRtTransaction> = $r14;

        $r15 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r15.<android.view.SurfaceControl$Transaction: void <init>()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction> = $r15;

        $r16 = new android.graphics.Matrix;

        specialinvoke $r16.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Matrix mScreenMatrixForEmbeddedHierarchy> = $r16;

        $r17 = new android.graphics.Matrix;

        specialinvoke $r17.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix> = $r17;

        $r18 = newarray (float)[9];

        r0.<android.view.SurfaceView: float[] mMatrixValues> = $r18;

        $r19 = new android.graphics.Rect;

        specialinvoke $r19.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mRTLastReportedPosition> = $r19;

        $r20 = new android.view.SurfaceView$1;

        specialinvoke $r20.<android.view.SurfaceView$1: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.graphics.RenderNode$PositionUpdateListener mPositionListener> = $r20;

        $r21 = new android.view.SurfaceView$2;

        specialinvoke $r21.<android.view.SurfaceView$2: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder> = $r21;

        $r23 = r0.<android.view.SurfaceView: android.graphics.RenderNode mRenderNode>;

        $r22 = r0.<android.view.SurfaceView: android.graphics.RenderNode$PositionUpdateListener mPositionListener>;

        virtualinvoke $r23.<android.graphics.RenderNode: void addPositionUpdateListener(android.graphics.RenderNode$PositionUpdateListener)>($r22);

        virtualinvoke r0.<android.view.SurfaceView: void setWillNotDraw(boolean)>(1);

        r0.<android.view.SurfaceView: boolean mDisableBackgroundLayer> = z0;

        return;
    }

    static boolean access$002(android.view.SurfaceView, boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;

        r0 := @parameter0: android.view.SurfaceView;

        z0 := @parameter1: boolean;

        r0.<android.view.SurfaceView: boolean mRtHandlingPositionUpdates> = z0;

        return z0;
    }

    static android.graphics.Rect access$100(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.graphics.Rect mRTLastReportedPosition>;

        return $r1;
    }

    static void access$200(android.view.SurfaceView, android.graphics.Rect, long)
    {
        android.view.SurfaceView r0;
        android.graphics.Rect r1;
        long l0;

        r0 := @parameter0: android.view.SurfaceView;

        r1 := @parameter1: android.graphics.Rect;

        l0 := @parameter2: long;

        specialinvoke r0.<android.view.SurfaceView: void setParentSpaceRectangle(android.graphics.Rect,long)>(r1, l0);

        return;
    }

    static android.view.SurfaceControl$Transaction access$300(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction $r1;

        r0 := @parameter0: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mRtTransaction>;

        return $r1;
    }

    static boolean access$400(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;
        boolean $z0;

        r0 := @parameter0: android.view.SurfaceView;

        $z0 = r0.<android.view.SurfaceView: boolean mRtReleaseSurfaces>;

        return $z0;
    }

    static boolean access$402(android.view.SurfaceView, boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;

        r0 := @parameter0: android.view.SurfaceView;

        z0 := @parameter1: boolean;

        r0.<android.view.SurfaceView: boolean mRtReleaseSurfaces> = z0;

        return z0;
    }

    static void access$500(android.view.SurfaceView, java.lang.Runnable)
    {
        android.view.SurfaceView r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.view.SurfaceView;

        r1 := @parameter1: java.lang.Runnable;

        specialinvoke r0.<android.view.SurfaceView: void runOnUiThread(java.lang.Runnable)>(r1);

        return;
    }

    static android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection access$600(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection $r1;

        r0 := @parameter0: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        return $r1;
    }

    static android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection access$602(android.view.SurfaceView, android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection r1;

        r0 := @parameter0: android.view.SurfaceView;

        r1 := @parameter1: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection;

        r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection> = r1;

        return r1;
    }

    private void applySurfaceTransforms(android.view.SurfaceControl, android.view.SurfaceControl$Transaction, android.graphics.Rect, long)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl r1, $r6;
        android.view.SurfaceControl$Transaction r2;
        android.graphics.Rect r3;
        long l0;
        android.view.ViewRootImpl r4;
        byte $b1;
        boolean $z0, $z1;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 := @parameter1: android.view.SurfaceControl$Transaction;

        r3 := @parameter2: android.graphics.Rect;

        l0 := @parameter3: long;

        r4 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<android.view.ViewRootImpl: boolean isDrawingToBLASTTransaction()>();

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r4.<android.view.ViewRootImpl: android.view.SurfaceControl getRenderSurfaceControl()>();

        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl,android.view.SurfaceControl,long)>(r1, $r6, l0);

     label1:
        $i2 = r3.<android.graphics.Rect: int left>;

        $i3 = r3.<android.graphics.Rect: int top>;

        $i4 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $f0 = (float) $i4;

        $i5 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $f1 = (float) $i5;

        $f2 = $f0 / $f1;

        $i6 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $f3 = (float) $i6;

        $i7 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $f4 = (float) $i7;

        $f5 = $f3 / $f4;

        virtualinvoke r0.<android.view.SurfaceView: void onSetSurfacePositionAndScaleRT(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int,int,float,float)>(r2, r1, $i2, $i3, $f2, $f5);

        $z1 = r0.<android.view.SurfaceView: boolean mViewVisibility>;

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r1);

     label2:
        return;
    }

    private void clearSurfaceViewPort(android.graphics.Canvas)
    {
        android.view.SurfaceView r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, $f5;
        byte $b0;
        android.graphics.PorterDuff$Mode $r2;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z1;
        int $i1, $i2, $i3, $i4;
        android.graphics.Paint $r11;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Canvas;

        $f5 = r0.<android.view.SurfaceView: float mCornerRadius>;

        $b0 = $f5 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $r3 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r3);

        $z1 = r0.<android.view.SurfaceView: boolean mClipSurfaceToBounds>;

        if $z1 == 0 goto label1;

        $r4 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        if $r4 == null goto label1;

        $r6 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $r5 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        virtualinvoke $r6.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r5);

     label1:
        $r7 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i1 = $r7.<android.graphics.Rect: int left>;

        f0 = (float) $i1;

        $r8 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i2 = $r8.<android.graphics.Rect: int top>;

        f1 = (float) $i2;

        $r9 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i3 = $r9.<android.graphics.Rect: int right>;

        f2 = (float) $i3;

        $r10 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i4 = $r10.<android.graphics.Rect: int bottom>;

        f3 = (float) $i4;

        f4 = r0.<android.view.SurfaceView: float mCornerRadius>;

        $r11 = r0.<android.view.SurfaceView: android.graphics.Paint mRoundedViewportPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, f4, f4, $r11);

        goto label3;

     label2:
        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r2);

     label3:
        return;
    }

    private float getFixedAlpha()
    {
        android.view.SurfaceView r0;
        boolean $z0;
        int $i0;
        byte $b1;
        float f0;

        r0 := @this: android.view.SurfaceView;

        f0 = virtualinvoke r0.<android.view.SurfaceView: float getAlpha()>();

        $z0 = r0.<android.view.SurfaceView: boolean mUseAlpha>;

        if $z0 == 0 goto label2;

        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 > 0 goto label1;

        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

     label1:
        goto label3;

     label2:
        f0 = 1.0F;

     label3:
        return f0;
    }

    private android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection getRemoteAccessibilityEmbeddedConnection()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        return $r1;
    }

    private android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()
    {
        android.view.SurfaceView r0;
        java.util.ArrayList r1, $r2, $r3;
        int $i0;
        java.lang.Throwable $r5;
        android.view.SurfaceHolder$Callback[] r6;

        r0 := @this: android.view.SurfaceView;

        r1 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r6 = newarray (android.view.SurfaceHolder$Callback)[$i0];

        $r3 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r6);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void initEmbeddedHierarchyForAccessibility(android.view.SurfaceControlViewHost$SurfacePackage)
    {
        android.view.SurfaceView r0;
        android.view.ViewRootImpl $r1;
        android.os.IBinder $r2, $r3;
        int $i0;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r4, r11;
        boolean $z0;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        android.view.SurfaceControlViewHost$SurfacePackage r10;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection r12;

        r0 := @this: android.view.SurfaceView;

        r10 := @parameter0: android.view.SurfaceControlViewHost$SurfacePackage;

        r11 = virtualinvoke r10.<android.view.SurfaceControlViewHost$SurfacePackage: android.view.accessibility.IAccessibilityEmbeddedConnection getAccessibilityEmbeddedConnection()>();

        r12 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection getRemoteAccessibilityEmbeddedConnection()>();

        if r12 == null goto label1;

        $r4 = virtualinvoke r12.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.view.accessibility.IAccessibilityEmbeddedConnection getConnection()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r11);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.SurfaceView: void setRemoteAccessibilityEmbeddedConnection(android.view.accessibility.IAccessibilityEmbeddedConnection,android.os.IBinder)>(null, null);

     label2:
        $r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        $r2 = $r1.<android.view.ViewRootImpl: android.os.IBinder mLeashToken>;

        $i0 = virtualinvoke r0.<android.view.SurfaceView: int getAccessibilityViewId()>();

        $r3 = interfaceinvoke r11.<android.view.accessibility.IAccessibilityEmbeddedConnection: android.os.IBinder associateEmbeddedHierarchy(android.os.IBinder,int)>($r2, $i0);

        specialinvoke r0.<android.view.SurfaceView: void setRemoteAccessibilityEmbeddedConnection(android.view.accessibility.IAccessibilityEmbeddedConnection,android.os.IBinder)>(r11, $r3);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while associateEmbeddedHierarchy ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SurfaceView", $r9);

     label5:
        specialinvoke r0.<android.view.SurfaceView: void updateScreenMatrixForEmbeddedHierarchy()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean isAboveParent()
    {
        android.view.SurfaceView r0;
        int $i0;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static void lambda$SyyzxOgxKwZMRgiiTGcRYbOU5JY(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;

        r0 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<android.view.SurfaceView: void onDrawFinished()>();

        return;
    }

    public static void lambda$TWz4D2u33ZlAmRtgKzbqqDue3iM(android.view.SurfaceView)
    {
        android.view.SurfaceView r0;

        r0 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<android.view.SurfaceView: void performDrawFinished()>();

        return;
    }

    private void notifySurfaceDestroyed()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceHolder$Callback[] r1;
        int i0, i1;
        android.view.Surface $r2, $r3, $r4;
        boolean $z0, $z1;
        android.view.SurfaceHolder $r5;
        android.view.SurfaceHolder$Callback $r6;

        r0 := @this: android.view.SurfaceView;

        $r2 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $z0 = virtualinvoke $r2.<android.view.Surface: boolean isValid()>();

        if $z0 == 0 goto label3;

        r1 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r1[i1];

        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r6.<android.view.SurfaceHolder$Callback: void surfaceDestroyed(android.view.SurfaceHolder)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $z1 = virtualinvoke $r3.<android.view.Surface: boolean isValid()>();

        if $z1 == 0 goto label3;

        $r4 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        virtualinvoke $r4.<android.view.Surface: void forceScopedDisconnect()>();

     label3:
        return;
    }

    private void onDrawFinished()
    {
        android.view.SurfaceView r0;
        android.view._$$Lambda$SurfaceView$TWz4D2u33ZlAmRtgKzbqqDue3iM $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = new android.view._$$Lambda$SurfaceView$TWz4D2u33ZlAmRtgKzbqqDue3iM;

        specialinvoke $r1.<android.view._$$Lambda$SurfaceView$TWz4D2u33ZlAmRtgKzbqqDue3iM: void <init>(android.view.SurfaceView)>(r0);

        specialinvoke r0.<android.view.SurfaceView: void runOnUiThread(java.lang.Runnable)>($r1);

        return;
    }

    private void performDrawFinished()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl $r2, $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0;
        android.view.ViewParent $r7;
        android.view.SurfaceControl$Transaction $r9, $r10;
        java.lang.Throwable $r11;
        java.lang.Object r12;

        r0 := @this: android.view.SurfaceView;

        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mDeferredDestroySurfaceControl>;

        if $r2 == null goto label6;

        r12 = r0.<android.view.SurfaceView: java.lang.Object mSurfaceControlLock>;

        entermonitor r12;

     label1:
        $r9 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r8 = r0.<android.view.SurfaceView: android.view.SurfaceControl mDeferredDestroySurfaceControl>;

        $r10 = virtualinvoke $r9.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r8);

        virtualinvoke $r10.<android.view.SurfaceControl$Transaction: void apply()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControl mDeferredDestroySurfaceControl> = null;

        exitmonitor r12;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r12;

     label5:
        throw $r11;

     label6:
        $i0 = r0.<android.view.SurfaceView: int mPendingReportDraws>;

        if $i0 <= 0 goto label7;

        r0.<android.view.SurfaceView: boolean mDrawFinished> = 1;

        $z0 = r0.<android.view.SurfaceView: boolean mAttachedToWindow>;

        if $z0 == 0 goto label8;

        $r7 = r0.<android.view.SurfaceView: android.view.ViewParent mParent>;

        interfaceinvoke $r7.<android.view.ViewParent: void requestTransparentRegion(android.view.View)>(r0);

        virtualinvoke r0.<android.view.SurfaceView: void notifyDrawFinished()>();

        virtualinvoke r0.<android.view.SurfaceView: void invalidate()>();

        goto label8;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished drawing but no pending report draw (extra call to draw completion runnable?)");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SurfaceView", $r6);

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void releaseSurfaces()
    {
        android.view.SurfaceView r0;
        java.lang.Object r1;
        android.view.Surface $r3;
        boolean $z0;
        android.view.SurfaceControl $r4, $r5, $r7, $r10;
        android.view.SurfaceControl$Transaction $r6, $r8, $r11;
        java.lang.Throwable $r13;

        r0 := @this: android.view.SurfaceView;

        r0.<android.view.SurfaceView: float mSurfaceAlpha> = 1.0F;

        r1 = r0.<android.view.SurfaceView: java.lang.Object mSurfaceControlLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        virtualinvoke $r3.<android.view.Surface: void release()>();

        $z0 = r0.<android.view.SurfaceView: boolean mRtHandlingPositionUpdates>;

        if $z0 == 0 goto label3;

        r0.<android.view.SurfaceView: boolean mRtReleaseSurfaces> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r4 == null goto label4;

        $r11 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r10 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r11.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r10);

        r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl> = null;

     label4:
        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        if $r5 == null goto label5;

        $r8 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r7 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        virtualinvoke $r8.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r7);

        r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl> = null;

     label5:
        $r6 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        virtualinvoke $r6.<android.view.SurfaceControl$Transaction: void apply()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void reparentSurfacePackage(android.view.SurfaceControl$Transaction, android.view.SurfaceControlViewHost$SurfacePackage)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1, $r3;
        android.view.SurfaceControl $r2, r6;
        android.view.SurfaceControlViewHost$SurfacePackage r5;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r5 := @parameter1: android.view.SurfaceControlViewHost$SurfacePackage;

        specialinvoke r0.<android.view.SurfaceView: void initEmbeddedHierarchyForAccessibility(android.view.SurfaceControlViewHost$SurfacePackage)>(r5);

        r6 = virtualinvoke r5.<android.view.SurfaceControlViewHost$SurfacePackage: android.view.SurfaceControl getSurfaceControl()>();

        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r3 = virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r6, $r2);

        virtualinvoke $r3.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r6);

        return;
    }

    private void runOnUiThread(java.lang.Runnable)
    {
        android.view.SurfaceView r0;
        java.lang.Runnable r1;
        android.os.Handler r2;
        android.os.Looper $r3, $r4;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: java.lang.Runnable;

        r2 = virtualinvoke r0.<android.view.SurfaceView: android.os.Handler getHandler()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r3 == $r4 goto label1;

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        goto label2;

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        return;
    }

    private void setParentSpaceRectangle(android.graphics.Rect, long)
    {
        android.view.SurfaceView r0;
        android.graphics.Rect r1;
        long l0;
        android.view.ViewRootImpl r2;
        boolean z0;
        android.view.SurfaceControl $r3;
        android.view.Surface $r4;
        android.view.SurfaceControl$Transaction r5;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Rect;

        l0 := @parameter1: long;

        r2 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        z0 = virtualinvoke r2.<android.view.ViewRootImpl: boolean isDrawingToBLASTTransaction()>();

        if z0 == 0 goto label1;

        r5 = virtualinvoke r2.<android.view.ViewRootImpl: android.view.SurfaceControl$Transaction getBLASTSyncTransaction()>();

        goto label2;

     label1:
        r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mRtTransaction>;

     label2:
        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        specialinvoke r0.<android.view.SurfaceView: void applySurfaceTransforms(android.view.SurfaceControl,android.view.SurfaceControl$Transaction,android.graphics.Rect,long)>($r3, r5, r1, l0);

        $r4 = r2.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        virtualinvoke r0.<android.view.SurfaceView: void applyChildSurfaceTransaction_renderWorker(android.view.SurfaceControl$Transaction,android.view.Surface,long)>(r5, $r4, l0);

        if z0 != 0 goto label3;

        virtualinvoke r5.<android.view.SurfaceControl$Transaction: void apply()>();

     label3:
        return;
    }

    private void setRemoteAccessibilityEmbeddedConnection(android.view.accessibility.IAccessibilityEmbeddedConnection, android.os.IBinder)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection r1, $r2, $r3, $r5;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r4, r11;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        android.os.IBinder r12;

        r0 := @this: android.view.SurfaceView;

        r11 := @parameter0: android.view.accessibility.IAccessibilityEmbeddedConnection;

        r12 := @parameter1: android.os.IBinder;

     label1:
        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        if $r2 == null goto label2;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        $r4 = virtualinvoke $r3.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.view.accessibility.IAccessibilityEmbeddedConnection getConnection()>();

        interfaceinvoke $r4.<android.view.accessibility.IAccessibilityEmbeddedConnection: void disassociateEmbeddedHierarchy()>();

        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        virtualinvoke $r5.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: void unlinkToDeath()>();

        r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection> = null;

     label2:
        if r11 == null goto label4;

        if r12 == null goto label4;

     label3:
        r1 = new android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection;

        specialinvoke r1.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: void <init>(android.view.SurfaceView,android.view.accessibility.IAccessibilityEmbeddedConnection,android.os.IBinder)>(r0, r11, r12);

        r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection> = r1;

        virtualinvoke r1.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: void linkToDeath()>();

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while setRemoteEmbeddedConnection ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SurfaceView", $r10);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void setWindowStopped(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        r0.<android.view.SurfaceView: boolean mWindowStopped> = z0;

        specialinvoke r0.<android.view.SurfaceView: void updateRequestedVisibility()>();

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        return;
    }

    private android.view.SurfaceControl$Transaction updateBackgroundColor(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        float f0, f1, f2, $f3, $f4, $f5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float[] $r2;
        android.view.SurfaceControl $r3;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $i0 = r0.<android.view.SurfaceView: int mBackgroundColor>;

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $f3 = (float) $i1;

        f0 = $f3 / 255.0F;

        $i2 = r0.<android.view.SurfaceView: int mBackgroundColor>;

        $i3 = staticinvoke <android.graphics.Color: int green(int)>($i2);

        $f4 = (float) $i3;

        f1 = $f4 / 255.0F;

        $i4 = r0.<android.view.SurfaceView: int mBackgroundColor>;

        $i5 = staticinvoke <android.graphics.Color: int blue(int)>($i4);

        $f5 = (float) $i5;

        f2 = $f5 / 255.0F;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        $r2 = newarray (float)[3];

        $r2[0] = f0;

        $r2[1] = f1;

        $r2[2] = f2;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setColor(android.view.SurfaceControl,float[])>($r3, $r2);

        return r1;
    }

    private void updateBackgroundVisibility(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2, $r5;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        if r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 >= 0 goto label2;

        $i1 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label2;

        $z0 = r0.<android.view.SurfaceView: boolean mDisableBackgroundLayer>;

        if $z0 != 0 goto label2;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>(r2);

        goto label3;

     label2:
        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r5);

     label3:
        return;
    }

    private void updateOpaqueFlag()
    {
        android.view.SurfaceView r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: android.view.SurfaceView;

        $i0 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        $z0 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i0);

        if $z0 != 0 goto label1;

        $i3 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i4 = $i3 | 1024;

        r0.<android.view.SurfaceView: int mSurfaceFlags> = $i4;

        goto label2;

     label1:
        $i1 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i2 = $i1 & -1025;

        r0.<android.view.SurfaceView: int mSurfaceFlags> = $i2;

     label2:
        return;
    }

    private void updateRelativeZ(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2, $r4, r7;
        int $i0;
        android.view.ViewRootImpl r6;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r6 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r6 != null goto label1;

        return;

     label1:
        r7 = virtualinvoke r6.<android.view.ViewRootImpl: android.view.SurfaceControl getSurfaceControl()>();

        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setRelativeLayer(android.view.SurfaceControl,android.view.SurfaceControl,int)>($r2, r7, -2147483648);

        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setRelativeLayer(android.view.SurfaceControl,android.view.SurfaceControl,int)>($r4, r7, $i0);

        return;
    }

    private void updateRequestedVisibility()
    {
        android.view.SurfaceView r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.view.SurfaceView;

        $z0 = r0.<android.view.SurfaceView: boolean mViewVisibility>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        if $z1 == 0 goto label1;

        $z2 = r0.<android.view.SurfaceView: boolean mWindowStopped>;

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = z3;

        return;
    }

    private void updateScreenMatrixForEmbeddedHierarchy()
    {
        android.view.SurfaceView r0;
        android.graphics.Rect $r2, $r4, $r5, $r7, $r9;
        android.graphics.Matrix $r3, $r6, $r8, $r10, $r11, $r12, $r14, $r17, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z1, $z2;
        float[] $r13, $r16;
        android.view.accessibility.IAccessibilityEmbeddedConnection $r15;
        android.os.RemoteException $r19;
        java.lang.StringBuilder $r20;
        java.lang.String $r23;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection r24;

        r0 := @this: android.view.SurfaceView;

        $r2 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        virtualinvoke r0.<android.view.SurfaceView: void getBoundsOnScreen(android.graphics.Rect)>($r2);

        $r3 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void reset()>();

        $r6 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        $r4 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i0 = $r4.<android.graphics.Rect: int left>;

        $f1 = (float) $i0;

        $r5 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i1 = $r5.<android.graphics.Rect: int top>;

        $f0 = (float) $i1;

        virtualinvoke $r6.<android.graphics.Matrix: void setTranslate(float,float)>($f1, $f0);

        $r8 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        $r7 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i2 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $f3 = (float) $i2;

        $i3 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $f2 = (float) $i3;

        $f4 = $f3 / $f2;

        $r9 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i4 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $f6 = (float) $i4;

        $i5 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $f5 = (float) $i5;

        $f7 = $f6 / $f5;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postScale(float,float)>($f4, $f7);

        $r10 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        $z1 = virtualinvoke $r10.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 != 0 goto label7;

        $r12 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        $r11 = r0.<android.view.SurfaceView: android.graphics.Matrix mScreenMatrixForEmbeddedHierarchy>;

        $z2 = virtualinvoke $r12.<android.graphics.Matrix: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label1;

        goto label7;

     label1:
        r24 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection getRemoteAccessibilityEmbeddedConnection()>();

     label2:
        if r24 != null goto label3;

        return;

     label3:
        $r14 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        $r13 = r0.<android.view.SurfaceView: float[] mMatrixValues>;

        virtualinvoke $r14.<android.graphics.Matrix: void getValues(float[])>($r13);

        $r15 = virtualinvoke r24.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.view.accessibility.IAccessibilityEmbeddedConnection getConnection()>();

        $r16 = r0.<android.view.SurfaceView: float[] mMatrixValues>;

        interfaceinvoke $r15.<android.view.accessibility.IAccessibilityEmbeddedConnection: void setScreenMatrix(float[])>($r16);

        $r18 = r0.<android.view.SurfaceView: android.graphics.Matrix mScreenMatrixForEmbeddedHierarchy>;

        $r17 = r0.<android.view.SurfaceView: android.graphics.Matrix mTmpMatrix>;

        virtualinvoke $r18.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r17);

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while setScreenMatrix ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SurfaceView", $r23);

     label6:
        return;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void updateSurfaceAlpha()
    {
        android.view.SurfaceView r0;
        android.view.Surface r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i4;
        android.view.SurfaceControl $r2, $r3;
        float $f0, f1, f2;
        byte $b1, $b2, $b3;
        android.view.SurfaceControl$Transaction $r4, $r5;
        android.view._$$Lambda$SurfaceView$DKSyxzWn62XKbC15Dh1hMSfxKQg $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        android.view.ViewRootImpl r12;

        r0 := @this: android.view.SurfaceView;

        $z0 = r0.<android.view.SurfaceView: boolean mUseAlpha>;

        if $z0 != 0 goto label01;

        return;

     label01:
        f1 = virtualinvoke r0.<android.view.SurfaceView: float getAlpha()>();

        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 >= 0 goto label02;

        $b2 = 0.0F cmpg f1;

        if $b2 >= 0 goto label02;

        $b3 = f1 cmpg 1.0F;

        if $b3 >= 0 goto label02;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" updateSurfaceAlpha: translucent color is not supported for a surface placed z-below.");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceView", $r10);

     label02:
        $z4 = r0.<android.view.SurfaceView: boolean mHaveFrame>;

        if $z4 != 0 goto label03;

        return;

     label03:
        r12 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r12 != null goto label04;

        return;

     label04:
        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r2 != null goto label05;

        return;

     label05:
        r1 = r12.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        if r1 == null goto label10;

        $z1 = virtualinvoke r1.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label06;

        goto label10;

     label06:
        f2 = specialinvoke r0.<android.view.SurfaceView: float getFixedAlpha()>();

        $f0 = r0.<android.view.SurfaceView: float mSurfaceAlpha>;

        $b1 = f2 cmpl $f0;

        if $b1 == 0 goto label09;

        $z2 = virtualinvoke r0.<android.view.SurfaceView: boolean isHardwareAccelerated()>();

        if $z2 == 0 goto label07;

        $r6 = new android.view._$$Lambda$SurfaceView$DKSyxzWn62XKbC15Dh1hMSfxKQg;

        $z3 = virtualinvoke r12.<android.view.ViewRootImpl: boolean useBLAST()>();

        specialinvoke $r6.<android.view._$$Lambda$SurfaceView$DKSyxzWn62XKbC15Dh1hMSfxKQg: void <init>(android.view.SurfaceView,boolean,android.view.ViewRootImpl,android.view.Surface,float)>(r0, $z3, r12, r1, f2);

        virtualinvoke r12.<android.view.ViewRootImpl: void registerRtFrameCallback(android.graphics.HardwareRenderer$FrameDrawingCallback)>($r6);

        virtualinvoke r0.<android.view.SurfaceView: void damageInParent()>();

        goto label08;

     label07:
        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r5 = virtualinvoke $r4.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl,float)>($r3, f2);

        virtualinvoke $r5.<android.view.SurfaceControl$Transaction: void apply()>();

     label08:
        r0.<android.view.SurfaceView: float mSurfaceAlpha> = f2;

     label09:
        return;

     label10:
        return;
    }

    protected void applyChildSurfaceTransaction_renderWorker(android.view.SurfaceControl$Transaction, android.view.Surface, long)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.Surface r2;
        long l0;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.Surface;

        l0 := @parameter2: long;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.view.SurfaceView r0;
        android.graphics.Canvas r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.view.SurfaceView: boolean mDrawFinished>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean isAboveParent()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i1 = $i0 & 128;

        if $i1 != 128 goto label1;

        specialinvoke r0.<android.view.SurfaceView: void clearSurfaceViewPort(android.graphics.Canvas)>(r1);

     label1:
        specialinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.view.SurfaceView r0;
        android.graphics.Canvas r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.view.SurfaceView: boolean mDrawFinished>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean isAboveParent()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i1 = $i0 & 128;

        if $i1 != 0 goto label1;

        specialinvoke r0.<android.view.SurfaceView: void clearSurfaceViewPort(android.graphics.Canvas)>(r1);

     label1:
        specialinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.view.SurfaceView r0;
        android.graphics.Region r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        int[] r2, $r3;
        boolean $z1, $z2, $z3, z5, $z6;
        android.graphics.Region$Op $r4;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Region;

        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean isAboveParent()>();

        if $z1 != 0 goto label5;

        $z3 = r0.<android.view.SurfaceView: boolean mDrawFinished>;

        if $z3 != 0 goto label1;

        goto label5;

     label1:
        $i4 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i5 = $i4 & 128;

        if $i5 != 0 goto label2;

        z5 = specialinvoke r0.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>(r1);

        goto label3;

     label2:
        z5 = 1;

        if r1 == null goto label3;

        i0 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        i1 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        z5 = 1;

        if i0 <= 0 goto label3;

        z5 = 1;

        if i1 <= 0 goto label3;

        $r3 = r0.<android.view.SurfaceView: int[] mLocation>;

        virtualinvoke r0.<android.view.SurfaceView: void getLocationInWindow(int[])>($r3);

        r2 = r0.<android.view.SurfaceView: int[] mLocation>;

        i2 = r2[0];

        i3 = r2[1];

        $i7 = i2 + i0;

        $i6 = i3 + i1;

        $r4 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r1.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>(i2, i3, $i7, $i6, $r4);

        z5 = 1;

     label3:
        $i8 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        $z6 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i8);

        if $z6 == 0 goto label4;

        z5 = 0;

     label4:
        return z5;

     label5:
        $z2 = specialinvoke r0.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>(r1);

        return $z2;
    }

    public float getCornerRadius()
    {
        android.view.SurfaceView r0;
        float $f0;

        r0 := @this: android.view.SurfaceView;

        $f0 = r0.<android.view.SurfaceView: float mCornerRadius>;

        return $f0;
    }

    public android.view.SurfaceHolder getHolder()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceHolder $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        return $r1;
    }

    public android.os.IBinder getHostToken()
    {
        android.view.SurfaceView r0;
        android.view.ViewRootImpl r1;
        android.os.IBinder $r2;

        r0 := @this: android.view.SurfaceView;

        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.view.ViewRootImpl: android.os.IBinder getInputToken()>();

        return $r2;
    }

    public int getImportantForAccessibility()
    {
        android.view.SurfaceView r0;
        int i0;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection $r1;

        r0 := @this: android.view.SurfaceView;

        i0 = specialinvoke r0.<android.view.View: int getImportantForAccessibility()>();

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection mRemoteAccessibilityEmbeddedConnection>;

        if $r1 == null goto label2;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        return i0;
    }

    public android.view.SurfaceControl getSurfaceControl()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    public android.graphics.Rect getSurfaceRenderPosition()
    {
        android.view.SurfaceView r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.graphics.Rect mRTLastReportedPosition>;

        return $r1;
    }

    public boolean isFixedSize()
    {
        android.view.SurfaceView r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        $i0 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        if $i0 != -1 goto label2;

        $i1 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        if $i1 == -1 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isZOrderedOnTop()
    {
        android.view.SurfaceView r0;
        int $i0;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean lambda$new$0$SurfaceView()
    {
        android.view.SurfaceView r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        $i0 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        if $i1 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.view.SurfaceView: boolean mHaveFrame> = z0;

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        return 1;
    }

    public void lambda$setZOrderedOnTop$2$SurfaceView(boolean, android.view.ViewRootImpl, android.view.Surface, long)
    {
        android.view.SurfaceView r0;
        boolean z0, $z1;
        long l0;
        java.lang.Object r1;
        android.view.SurfaceControl$Transaction $r2, r15;
        android.view.SurfaceControl $r3, $r4, $r5;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;
        int $i1;
        java.lang.String $r12;
        android.view.ViewRootImpl r13;
        android.view.Surface r14;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        r13 := @parameter1: android.view.ViewRootImpl;

        r14 := @parameter2: android.view.Surface;

        l0 := @parameter3: long;

        if z0 == 0 goto label03;

     label01:
        r15 = virtualinvoke r13.<android.view.ViewRootImpl: android.view.SurfaceControl$Transaction getBLASTSyncTransaction()>();

     label02:
        goto label04;

     label03:
        $r2 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r2.<android.view.SurfaceControl$Transaction: void <init>()>();

        r15 = $r2;

     label04:
        r1 = r0.<android.view.SurfaceView: java.lang.Object mSurfaceControlLock>;

        entermonitor r1;

     label05:
        $z1 = virtualinvoke r14.<android.view.Surface: boolean isValid()>();

        if $z1 == 0 goto label13;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r3 != null goto label07;

     label06:
        goto label13;

     label07:
        specialinvoke r0.<android.view.SurfaceView: void updateRelativeZ(android.view.SurfaceControl$Transaction)>(r15);

     label08:
        if z0 != 0 goto label10;

     label09:
        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r5 = virtualinvoke r13.<android.view.ViewRootImpl: android.view.SurfaceControl getRenderSurfaceControl()>();

        virtualinvoke r15.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl,android.view.SurfaceControl,long)>($r4, $r5, l0);

     label10:
        exitmonitor r1;

     label11:
        virtualinvoke r15.<android.view.SurfaceControl$Transaction: void apply()>();

     label12:
        goto label19;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r7 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r7;

     label18:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setZOrderOnTop RT: Exception during surface transaction");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SurfaceView", $r12, $r8);

     label19:
        return;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Exception from label17 to label18 with label18;
    }

    public void lambda$updateSurfaceAlpha$1$SurfaceView(boolean, android.view.ViewRootImpl, android.view.Surface, float, long)
    {
        android.view.SurfaceView r0;
        boolean z0, $z1;
        float f0;
        long l0;
        java.lang.Object r1;
        android.view.SurfaceControl$Transaction $r2, r17;
        android.view.SurfaceControl $r3, $r4, $r6, $r7;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;
        int $i1;
        java.lang.String $r13;
        java.lang.Throwable $r14;
        android.view.ViewRootImpl r15;
        android.view.Surface r16;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        r15 := @parameter1: android.view.ViewRootImpl;

        r16 := @parameter2: android.view.Surface;

        f0 := @parameter3: float;

        l0 := @parameter4: long;

        if z0 == 0 goto label03;

     label01:
        r17 = virtualinvoke r15.<android.view.ViewRootImpl: android.view.SurfaceControl$Transaction getBLASTSyncTransaction()>();

     label02:
        goto label04;

     label03:
        $r2 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r2.<android.view.SurfaceControl$Transaction: void <init>()>();

        r17 = $r2;

     label04:
        r1 = r0.<android.view.SurfaceView: java.lang.Object mSurfaceControlLock>;

        entermonitor r1;

     label05:
        $z1 = virtualinvoke r16.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label07;

        exitmonitor r1;

     label06:
        return;

     label07:
        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r3 != null goto label09;

        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r17.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl,float)>($r4, f0);

     label10:
        if z0 != 0 goto label12;

     label11:
        $r6 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r7 = virtualinvoke r15.<android.view.ViewRootImpl: android.view.SurfaceControl getRenderSurfaceControl()>();

        virtualinvoke r17.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction deferTransactionUntil(android.view.SurfaceControl,android.view.SurfaceControl,long)>($r6, $r7, l0);

     label12:
        exitmonitor r1;

     label13:
        virtualinvoke r17.<android.view.SurfaceControl$Transaction: void apply()>();

     label14:
        goto label19;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r14;

     label18:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSurfaceAlpha RT: Exception during surface transaction");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SurfaceView", $r13, $r9);

     label19:
        return;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Exception from label17 to label18 with label18;
    }

    void notifyDrawFinished()
    {
        android.view.SurfaceView r0;
        android.view.ViewRootImpl r1;
        int $i0, $i1;

        r0 := @this: android.view.SurfaceView;

        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void pendingDrawFinished()>();

     label1:
        $i0 = r0.<android.view.SurfaceView: int mPendingReportDraws>;

        $i1 = $i0 - 1;

        r0.<android.view.SurfaceView: int mPendingReportDraws> = $i1;

        return;
    }

    protected void onAttachedToWindow()
    {
        android.view.SurfaceView r0;
        android.view.ViewTreeObserver r1;
        android.view.ViewRootImpl $r2;
        int $i0;
        android.view.ViewParent $r3;
        boolean $z0, z1;
        android.view.ViewTreeObserver$OnScrollChangedListener $r4;
        android.view.ViewTreeObserver$OnPreDrawListener $r5;

        r0 := @this: android.view.SurfaceView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $r2 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r2.<android.view.ViewRootImpl: void addSurfaceChangedCallback(android.view.ViewRootImpl$SurfaceChangedCallback)>(r0);

        z1 = 0;

        r0.<android.view.SurfaceView: boolean mWindowStopped> = 0;

        $i0 = virtualinvoke r0.<android.view.SurfaceView: int getVisibility()>();

        if $i0 != 0 goto label1;

        z1 = 1;

     label1:
        r0.<android.view.SurfaceView: boolean mViewVisibility> = z1;

        specialinvoke r0.<android.view.SurfaceView: void updateRequestedVisibility()>();

        r0.<android.view.SurfaceView: boolean mAttachedToWindow> = 1;

        $r3 = r0.<android.view.SurfaceView: android.view.ViewParent mParent>;

        interfaceinvoke $r3.<android.view.ViewParent: void requestTransparentRegion(android.view.View)>(r0);

        $z0 = r0.<android.view.SurfaceView: boolean mGlobalListenersAdded>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r4);

        $r5 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r5);

        r0.<android.view.SurfaceView: boolean mGlobalListenersAdded> = 1;

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.view.SurfaceView r0;
        boolean $z0;
        android.view.ViewTreeObserver$OnScrollChangedListener $r1;
        android.view.ViewTreeObserver$OnPreDrawListener $r2;
        android.view.ViewRootImpl r3;
        android.view.ViewTreeObserver r4;
        int $i0;
        android.view.SurfaceControlViewHost$SurfacePackage r5;

        r0 := @this: android.view.SurfaceView;

        r3 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewRootImpl: void removeSurfaceChangedCallback(android.view.ViewRootImpl$SurfaceChangedCallback)>(r0);

     label1:
        r0.<android.view.SurfaceView: boolean mAttachedToWindow> = 0;

        $z0 = r0.<android.view.SurfaceView: boolean mGlobalListenersAdded>;

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener>;

        virtualinvoke r4.<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r1);

        $r2 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener>;

        virtualinvoke r4.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

        r0.<android.view.SurfaceView: boolean mGlobalListenersAdded> = 0;

     label2:
        $i0 = r0.<android.view.SurfaceView: int mPendingReportDraws>;

        if $i0 <= 0 goto label3;

        virtualinvoke r0.<android.view.SurfaceView: void notifyDrawFinished()>();

        goto label2;

     label3:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        specialinvoke r0.<android.view.SurfaceView: void releaseSurfaces()>();

        r5 = r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage>;

        if r5 == null goto label4;

        virtualinvoke r5.<android.view.SurfaceControlViewHost$SurfacePackage: void release()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage> = null;

     label4:
        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.SurfaceView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection r2;
        android.os.IBinder $r3;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        r2 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection getRemoteAccessibilityEmbeddedConnection()>();

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.view.SurfaceView$RemoteAccessibilityEmbeddedConnection: android.os.IBinder getLeashToken()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.os.IBinder)>($r3);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.view.SurfaceView r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        if i2 < 0 goto label1;

        i3 = staticinvoke <android.view.SurfaceView: int resolveSizeAndState(int,int,int)>(i2, i0, 0);

        goto label2;

     label1:
        i3 = staticinvoke <android.view.SurfaceView: int getDefaultSize(int,int)>(0, i0);

     label2:
        i4 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        if i4 < 0 goto label3;

        i5 = staticinvoke <android.view.SurfaceView: int resolveSizeAndState(int,int,int)>(i4, i1, 0);

        goto label4;

     label3:
        i5 = staticinvoke <android.view.SurfaceView: int getDefaultSize(int,int)>(0, i1);

     label4:
        virtualinvoke r0.<android.view.SurfaceView: void setMeasuredDimension(int,int)>(i3, i5);

        return;
    }

    protected void onSetSurfacePositionAndScaleRT(android.view.SurfaceControl$Transaction, android.view.SurfaceControl, int, int, float, float)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl r2;
        int i0, i1;
        float f0, f1, $f2, $f3;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r2 := @parameter1: android.view.SurfaceControl;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        $f3 = (float) i0;

        $f2 = (float) i1;

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>(r2, $f3, $f2);

        virtualinvoke r1.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,float,float,float,float)>(r2, f0, 0.0F, 0.0F, f1);

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.view.SurfaceView r0;
        int i0;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onWindowVisibilityChanged(int)>(i0);

        if i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.view.SurfaceView: boolean mWindowVisibility> = z0;

        specialinvoke r0.<android.view.SurfaceView: void updateRequestedVisibility()>();

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        return;
    }

    public void requestUpdateSurfacePositionAndScale()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl r1;
        android.graphics.Rect $r2, $r3, $r4, $r6;
        android.view.SurfaceControl$Transaction $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.view.SurfaceView;

        r1 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r2 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i2 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $f1 = (float) $i2;

        $i3 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $f0 = (float) $i3;

        $f2 = $f1 / $f0;

        $r6 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i4 = virtualinvoke $r6.<android.graphics.Rect: int height()>();

        $f4 = (float) $i4;

        $i5 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $f3 = (float) $i5;

        $f5 = $f4 / $f3;

        virtualinvoke r0.<android.view.SurfaceView: void onSetSurfacePositionAndScaleRT(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int,int,float,float)>($r5, r1, $i0, $i1, $f2, $f5);

        $r7 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        virtualinvoke $r7.<android.view.SurfaceControl$Transaction: void apply()>();

        return;
    }

    public void setAlpha(float)
    {
        android.view.SurfaceView r0;
        float f0;

        r0 := @this: android.view.SurfaceView;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.View: void setAlpha(float)>(f0);

        specialinvoke r0.<android.view.SurfaceView: void updateSurfaceAlpha()>();

        return;
    }

    public void setChildSurfacePackage(android.view.SurfaceControlViewHost$SurfacePackage)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControlViewHost$SurfacePackage r1, $r8, r10;
        android.view.SurfaceControl $r2, $r3, r11;
        android.view.SurfaceControl$Transaction $r4, $r5, $r6, $r7;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControlViewHost$SurfacePackage;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.SurfaceControlViewHost$SurfacePackage: android.view.SurfaceControl getSurfaceControl()>();

        goto label1;

     label1:
        r10 = r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage>;

        if r10 == null goto label2;

        r11 = virtualinvoke r10.<android.view.SurfaceControlViewHost$SurfacePackage: android.view.SurfaceControl getSurfaceControl()>();

        goto label3;

     label2:
        r11 = null;

     label3:
        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r2 == null goto label4;

        if r11 == null goto label4;

        $r6 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r7 = virtualinvoke $r6.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>(r11, null);

        virtualinvoke $r7.<android.view.SurfaceControl$Transaction: void apply()>();

        $r8 = r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage>;

        virtualinvoke $r8.<android.view.SurfaceControlViewHost$SurfacePackage: void release()>();

        goto label5;

     label4:
        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r3 == null goto label5;

        $r4 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        specialinvoke r0.<android.view.SurfaceView: void reparentSurfacePackage(android.view.SurfaceControl$Transaction,android.view.SurfaceControlViewHost$SurfacePackage)>($r4, r1);

        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        virtualinvoke $r5.<android.view.SurfaceControl$Transaction: void apply()>();

     label5:
        r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage> = r1;

        return;
    }

    public void setClipBounds(android.graphics.Rect)
    {
        android.view.SurfaceView r0;
        android.graphics.Rect r1, $r2, $r3, $r8, $r11, $r12;
        boolean $z0, $z1;
        float $f0;
        byte $b0;
        int $i1, $i2;
        android.view.SyncRtSurfaceTransactionApplier $r4;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[] $r5;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder $r6, $r9;
        android.view.SurfaceControl $r7, $r13;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams $r10;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.view.View: void setClipBounds(android.graphics.Rect)>(r1);

        $z0 = r0.<android.view.SurfaceView: boolean mClipSurfaceToBounds>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $f0 = r0.<android.view.SurfaceView: float mCornerRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean isAboveParent()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<android.view.SurfaceView: void invalidate()>();

     label2:
        $r13 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r13 == null goto label5;

        $r2 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        if $r2 == null goto label3;

        $r12 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $r11 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        virtualinvoke $r12.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        goto label4;

     label3:
        $r3 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $i2 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $i1 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i2, $i1);

     label4:
        $r4 = new android.view.SyncRtSurfaceTransactionApplier;

        specialinvoke $r4.<android.view.SyncRtSurfaceTransactionApplier: void <init>(android.view.View)>(r0);

        $r5 = newarray (android.view.SyncRtSurfaceTransactionApplier$SurfaceParams)[1];

        $r6 = new android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder;

        $r7 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        specialinvoke $r6.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: void <init>(android.view.SurfaceControl)>($r7);

        $r8 = r0.<android.view.SurfaceView: android.graphics.Rect mTmpRect>;

        $r9 = virtualinvoke $r6.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder withWindowCrop(android.graphics.Rect)>($r8);

        $r10 = virtualinvoke $r9.<android.view.SyncRtSurfaceTransactionApplier$SurfaceParams$Builder: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams build()>();

        $r5[0] = $r10;

        virtualinvoke $r4.<android.view.SyncRtSurfaceTransactionApplier: void scheduleApply(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])>($r5);

     label5:
        return;
    }

    public void setCornerRadius(float)
    {
        android.view.SurfaceView r0;
        float f0;
        byte $b0;
        android.graphics.Paint $r2, $r3, $r5;
        android.graphics.BlendMode $r4;

        r0 := @this: android.view.SurfaceView;

        f0 := @parameter0: float;

        r0.<android.view.SurfaceView: float mCornerRadius> = f0;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $r2 = r0.<android.view.SurfaceView: android.graphics.Paint mRoundedViewportPaint>;

        if $r2 != null goto label1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.view.SurfaceView: android.graphics.Paint mRoundedViewportPaint> = $r3;

        $r4 = <android.graphics.BlendMode: android.graphics.BlendMode CLEAR>;

        virtualinvoke $r3.<android.graphics.Paint: void setBlendMode(android.graphics.BlendMode)>($r4);

        $r5 = r0.<android.view.SurfaceView: android.graphics.Paint mRoundedViewportPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(0);

     label1:
        virtualinvoke r0.<android.view.SurfaceView: void invalidate()>();

        return;
    }

    public void setEnableSurfaceClipping(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        r0.<android.view.SurfaceView: boolean mClipSurfaceToBounds> = z0;

        virtualinvoke r0.<android.view.SurfaceView: void invalidate()>();

        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.view.SurfaceView r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        return z0;
    }

    public void setResizeBackgroundColor(int)
    {
        android.view.SurfaceView r0;
        int i0;
        android.view.SurfaceControl $r1;
        android.view.SurfaceControl$Transaction $r2, $r3;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        if $r1 != null goto label1;

        return;

     label1:
        r0.<android.view.SurfaceView: int mBackgroundColor> = i0;

        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r3 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction updateBackgroundColor(android.view.SurfaceControl$Transaction)>($r2);

        virtualinvoke $r3.<android.view.SurfaceControl$Transaction: void apply()>();

        return;
    }

    public void setSecure(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i3 = $i2 | 128;

        r0.<android.view.SurfaceView: int mSurfaceFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i1 = $i0 & -129;

        r0.<android.view.SurfaceView: int mSurfaceFlags> = $i1;

     label2:
        return;
    }

    public void setUseAlpha()
    {
        android.view.SurfaceView r0;
        boolean $z0;

        r0 := @this: android.view.SurfaceView;

        $z0 = r0.<android.view.SurfaceView: boolean mUseAlpha>;

        if $z0 != 0 goto label1;

        r0.<android.view.SurfaceView: boolean mUseAlpha> = 1;

        specialinvoke r0.<android.view.SurfaceView: void updateSurfaceAlpha()>();

     label1:
        return;
    }

    public void setVisibility(int)
    {
        android.view.SurfaceView r0;
        int i0;
        boolean $z1, $z2, z3, z4, $z5;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void setVisibility(int)>(i0);

        if i0 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<android.view.SurfaceView: boolean mViewVisibility> = z3;

        $z1 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        if $z1 == 0 goto label3;

        if z3 == 0 goto label3;

        $z2 = r0.<android.view.SurfaceView: boolean mWindowStopped>;

        if $z2 != 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        $z5 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        if z4 == $z5 goto label5;

        virtualinvoke r0.<android.view.SurfaceView: void requestLayout()>();

     label5:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = z4;

        virtualinvoke r0.<android.view.SurfaceView: void updateSurface()>();

        return;
    }

    public void setZOrderMediaOverlay(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;
        byte b0;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = -1;

        goto label2;

     label1:
        b0 = -2;

     label2:
        r0.<android.view.SurfaceView: int mSubLayer> = b0;

        return;
    }

    public void setZOrderOnTop(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0, z2;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.view.SurfaceView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 <= 29 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        virtualinvoke r0.<android.view.SurfaceView: boolean setZOrderedOnTop(boolean,boolean)>(z0, z2);

        return;
    }

    public boolean setZOrderedOnTop(boolean, boolean)
    {
        android.view.SurfaceView r0;
        boolean z0, z1, $z2, $z3;
        android.view.ViewRootImpl r1;
        android.view.Surface r2;
        int $i0;
        android.view.SurfaceControl $r3;
        android.view._$$Lambda$SurfaceView$LV_kXr5_jITlrRhkV6FsfMSbnO8 $r4;
        byte b1;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = -2;

     label2:
        $i0 = r0.<android.view.SurfaceView: int mSubLayer>;

        if $i0 != b1 goto label3;

        return 0;

     label3:
        r0.<android.view.SurfaceView: int mSubLayer> = b1;

        if z1 != 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r3 != null goto label5;

        return 1;

     label5:
        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 != null goto label6;

        return 1;

     label6:
        r2 = r1.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        if r2 == null goto label8;

        $z2 = virtualinvoke r2.<android.view.Surface: boolean isValid()>();

        if $z2 != 0 goto label7;

        goto label8;

     label7:
        $r4 = new android.view._$$Lambda$SurfaceView$LV_kXr5_jITlrRhkV6FsfMSbnO8;

        $z3 = virtualinvoke r1.<android.view.ViewRootImpl: boolean useBLAST()>();

        specialinvoke $r4.<android.view._$$Lambda$SurfaceView$LV_kXr5_jITlrRhkV6FsfMSbnO8: void <init>(android.view.SurfaceView,boolean,android.view.ViewRootImpl,android.view.Surface)>(r0, $z3, r1, r2);

        virtualinvoke r1.<android.view.ViewRootImpl: void registerRtFrameCallback(android.graphics.HardwareRenderer$FrameDrawingCallback)>($r4);

        virtualinvoke r0.<android.view.SurfaceView: void invalidate()>();

        return 1;

     label8:
        return 1;
    }

    public void surfaceCreated(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<android.view.SurfaceView: void setWindowStopped(boolean)>(0);

        return;
    }

    public void surfaceDestroyed()
    {
        android.view.SurfaceView r0;

        r0 := @this: android.view.SurfaceView;

        specialinvoke r0.<android.view.SurfaceView: void setWindowStopped(boolean)>(1);

        specialinvoke r0.<android.view.SurfaceView: void setRemoteAccessibilityEmbeddedConnection(android.view.accessibility.IAccessibilityEmbeddedConnection,android.os.IBinder)>(null, null);

        return;
    }

    public void surfaceReplaced(android.view.SurfaceControl$Transaction)
    {
        android.view.SurfaceView r0;
        android.view.SurfaceControl$Transaction r1;
        android.view.SurfaceControl $r2, $r3;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $r2 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.view.SurfaceView: void updateRelativeZ(android.view.SurfaceControl$Transaction)>(r1);

     label1:
        return;
    }

    protected void updateSurface()
    {
        android.view.SurfaceView r0;
        android.view.ViewRootImpl r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, $z16, z17, z18, $z19, $z20, z21, z22, z23, $z24, z25, z26, z27, z28, $z29, $z30, z31, z32, z33, $z34;
        android.view.SurfaceControl$Builder r2, $r53, $r54, $r55, $r56, $r58, $r59, $r60, $r64, $r65, $r66, $r67, $r69, $r70, r94, r95;
        android.view.Surface $r3, $r4, $r22, $r31, $r33, $r48, $r74, $r98;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, $i37, i38, $i39, $i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, $i53, i54, i55, $i56, $i57, $i58, i59, i60, i61, i62, i63, i64, i65;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8, $f9, f10, f11, $f12, f13, $f14, f15;
        byte $b2;
        android.view.SurfaceControl $r5, $r9, $r12, $r16, $r30, $r32, $r36, $r40, $r42, $r46, $r49, $r57, $r61, $r68, $r71, $r77, r101, $r107, $r120;
        int[] $r6, r82, $r84, $r85, $r86;
        android.view.WindowManager$LayoutParams $r7;
        android.graphics.Rect $r8, $r18, $r19, $r20, $r21, $r34, $r35, $r38, $r39, $r72, $r73, $r83, $r87, $r88, $r89, $r90, r91, $r102, $r103, $r104, $r105, $r109, $r110;
        java.util.concurrent.locks.ReentrantLock $r10, $r111, $r121;
        android.view.SurfaceControl$Transaction $r11, $r13, $r14, $r15, $r17, $r37, $r41, $r43, $r45, $r47, r100, $r106, $r108;
        android.view.SurfaceHolder $r23, $r24, $r26;
        android.view.SurfaceHolder$Callback $r25, $r27;
        android.content.Context $r28;
        android.content.pm.ApplicationInfo $r29;
        android.view.SurfaceControlViewHost$SurfacePackage $r44, r99;
        java.lang.CharSequence $r50;
        java.lang.String $r51, $r63, r93;
        android.view.SurfaceSession $r52, $r62;
        java.lang.Throwable $r75, $r76, $r78, $r80, r97;
        java.lang.Exception $r79;
        android.content.res.CompatibilityInfo$Translator r81;
        java.lang.StringBuilder r92, r96;
        android.view.SurfaceHolder$Callback[] r113, r114, r115, r116, r117;
        com.android.internal.view.SurfaceCallbackHelper r118;
        android.view._$$Lambda$SurfaceView$SyyzxOgxKwZMRgiiTGcRYbOU5JY r119;

        r0 := @this: android.view.SurfaceView;

        $z1 = r0.<android.view.SurfaceView: boolean mHaveFrame>;

        if $z1 != 0 goto label001;

        return;

     label001:
        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 != null goto label002;

        return;

     label002:
        $r3 = r1.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        if $r3 == null goto label136;

        $r4 = r1.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        $z2 = virtualinvoke $r4.<android.view.Surface: boolean isValid()>();

        if $z2 != 0 goto label003;

        goto label136;

     label003:
        r81 = r1.<android.view.ViewRootImpl: android.content.res.CompatibilityInfo$Translator mTranslator>;

        if r81 == null goto label004;

        $r74 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        virtualinvoke $r74.<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator)>(r81);

     label004:
        i33 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        i34 = i33;

        if i33 > 0 goto label005;

        i34 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

     label005:
        i35 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        i36 = i35;

        if i35 > 0 goto label006;

        i36 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

     label006:
        f7 = specialinvoke r0.<android.view.SurfaceView: float getFixedAlpha()>();

        $i1 = r0.<android.view.SurfaceView: int mFormat>;

        $i0 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        if $i1 == $i0 goto label007;

        z13 = 1;

        goto label008;

     label007:
        z13 = 0;

     label008:
        $z4 = r0.<android.view.SurfaceView: boolean mVisible>;

        $z3 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        if $z4 == $z3 goto label009;

        z14 = 1;

        goto label010;

     label009:
        z14 = 0;

     label010:
        $f0 = r0.<android.view.SurfaceView: float mSurfaceAlpha>;

        $b2 = $f0 cmpl f7;

        if $b2 == 0 goto label011;

        z15 = 1;

        goto label012;

     label011:
        z15 = 0;

     label012:
        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r5 == null goto label013;

        if z13 != 0 goto label013;

        if z14 == 0 goto label014;

     label013:
        $z16 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        if $z16 == 0 goto label014;

        z17 = 1;

        goto label015;

     label014:
        z17 = 0;

     label015:
        $i37 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        if $i37 != i34 goto label017;

        $i32 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        if $i32 == i36 goto label016;

        goto label017;

     label016:
        z18 = 0;

        goto label018;

     label017:
        z18 = 1;

     label018:
        $z19 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        $z20 = r0.<android.view.SurfaceView: boolean mLastWindowVisibility>;

        if $z19 == $z20 goto label019;

        z21 = 1;

        goto label020;

     label019:
        z21 = 0;

     label020:
        $r6 = r0.<android.view.SurfaceView: int[] mLocation>;

        virtualinvoke r0.<android.view.SurfaceView: void getLocationInSurface(int[])>($r6);

        i38 = r0.<android.view.SurfaceView: int mWindowSpaceLeft>;

        r82 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i3 = r82[0];

        if i38 != $i3 goto label022;

        $i31 = r0.<android.view.SurfaceView: int mWindowSpaceTop>;

        $i30 = r82[1];

        if $i31 == $i30 goto label021;

        goto label022;

     label021:
        z22 = 0;

        goto label023;

     label022:
        z22 = 1;

     label023:
        $i39 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        $r83 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i40 = virtualinvoke $r83.<android.graphics.Rect: int width()>();

        if $i39 != $i40 goto label025;

        $i28 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        $r73 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i29 = virtualinvoke $r73.<android.graphics.Rect: int height()>();

        if $i28 == $i29 goto label024;

        goto label025;

     label024:
        z23 = 0;

        goto label026;

     label025:
        z23 = 1;

     label026:
        if z17 != 0 goto label028;

        if z13 != 0 goto label028;

        if z18 != 0 goto label028;

        if z14 != 0 goto label028;

        $z11 = r0.<android.view.SurfaceView: boolean mUseAlpha>;

        if $z11 == 0 goto label027;

        if z15 != 0 goto label028;

     label027:
        if z21 != 0 goto label028;

        if z22 != 0 goto label028;

        if z23 == 0 goto label135;

     label028:
        $r84 = r0.<android.view.SurfaceView: int[] mLocation>;

        virtualinvoke r0.<android.view.SurfaceView: void getLocationInWindow(int[])>($r84);

     label029:
        z0 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        r0.<android.view.SurfaceView: boolean mVisible> = z0;

        $r85 = r0.<android.view.SurfaceView: int[] mLocation>;

        i41 = $r85[0];

        r0.<android.view.SurfaceView: int mWindowSpaceLeft> = i41;

        $r86 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i42 = $r86[1];

        r0.<android.view.SurfaceView: int mWindowSpaceTop> = $i42;

        r0.<android.view.SurfaceView: int mSurfaceWidth> = i34;

        r0.<android.view.SurfaceView: int mSurfaceHeight> = i36;

        $i43 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        r0.<android.view.SurfaceView: int mFormat> = $i43;

        $z24 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        r0.<android.view.SurfaceView: boolean mLastWindowVisibility> = $z24;

        $r87 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $r87.<android.graphics.Rect: int left> = i41;

        $r88 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i44 = r0.<android.view.SurfaceView: int mWindowSpaceTop>;

        $r88.<android.graphics.Rect: int top> = $i44;

        $r89 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i45 = r0.<android.view.SurfaceView: int mWindowSpaceLeft>;

        $i46 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        $i47 = $i45 + $i46;

        $r89.<android.graphics.Rect: int right> = $i47;

        $r90 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i48 = r0.<android.view.SurfaceView: int mWindowSpaceTop>;

        $i49 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        $i50 = $i48 + $i49;

        $r90.<android.graphics.Rect: int bottom> = $i50;

     label030:
        if r81 == null goto label032;

     label031:
        $r72 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        virtualinvoke r81.<android.content.res.CompatibilityInfo$Translator: void translateRectInAppWindowToScreen(android.graphics.Rect)>($r72);

     label032:
        $r7 = r1.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        r91 = $r7.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $r8 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i5 = r91.<android.graphics.Rect: int left>;

        $i4 = r91.<android.graphics.Rect: int top>;

        virtualinvoke $r8.<android.graphics.Rect: void offset(int,int)>($i5, $i4);

     label033:
        if z17 == 0 goto label039;

     label034:
        $r49 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        r0.<android.view.SurfaceView: android.view.SurfaceControl mDeferredDestroySurfaceControl> = $r49;

        specialinvoke r0.<android.view.SurfaceView: void updateOpaqueFlag()>();

        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SurfaceView - ");

        $r50 = virtualinvoke r1.<android.view.ViewRootImpl: java.lang.CharSequence getTitle()>();

        $r51 = interfaceinvoke $r50.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        r93 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        r94 = new android.view.SurfaceControl$Builder;

        $r52 = r0.<android.view.SurfaceView: android.view.SurfaceSession mSurfaceSession>;

        specialinvoke r94.<android.view.SurfaceControl$Builder: void <init>(android.view.SurfaceSession)>($r52);

        $r53 = virtualinvoke r94.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>(r93);

        r95 = virtualinvoke $r53.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setLocalOwnerView(android.view.View)>(r0);

        $i22 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $i23 = $i22 & 1024;

        if $i23 == 0 goto label036;

     label035:
        z25 = 1;

        goto label037;

     label036:
        z25 = 0;

     label037:
        $r54 = virtualinvoke r95.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setOpaque(boolean)>(z25);

        $i25 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $i24 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $r55 = virtualinvoke $r54.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>($i25, $i24);

        $i26 = r0.<android.view.SurfaceView: int mFormat>;

        $r56 = virtualinvoke $r55.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>($i26);

        $r57 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.SurfaceControl getBoundsLayer()>();

        $r58 = virtualinvoke $r56.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r57);

        $i27 = r0.<android.view.SurfaceView: int mSurfaceFlags>;

        $r59 = virtualinvoke $r58.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFlags(int)>($i27);

        $r60 = virtualinvoke $r59.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("SurfaceView.updateSurface");

        $r61 = virtualinvoke $r60.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl> = $r61;

        r2 = new android.view.SurfaceControl$Builder;

        $r62 = r0.<android.view.SurfaceView: android.view.SurfaceSession mSurfaceSession>;

        specialinvoke r2.<android.view.SurfaceControl$Builder: void <init>(android.view.SurfaceSession)>($r62);

        r96 = new java.lang.StringBuilder;

        specialinvoke r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background for -");

        virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r93);

        $r63 = virtualinvoke r96.<java.lang.StringBuilder: java.lang.String toString()>();

        $r64 = virtualinvoke r2.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setLocalOwnerView(android.view.View)>(r0);

        $r66 = virtualinvoke $r65.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setOpaque(boolean)>(1);

        $r67 = virtualinvoke $r66.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setColorLayer()>();

        $r68 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r69 = virtualinvoke $r67.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r68);

        $r70 = virtualinvoke $r69.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("SurfaceView.updateSurface");

        $r71 = virtualinvoke $r70.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<android.view.SurfaceView: android.view.SurfaceControl mBackgroundControl> = $r71;

     label038:
        goto label041;

     label039:
        $r9 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r9 != null goto label041;

     label040:
        return;

     label041:
        $r10 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label042:
        if z0 != 0 goto label043;

        z26 = 1;

        goto label044;

     label043:
        z26 = 0;

     label044:
        r0.<android.view.SurfaceView: boolean mDrawingStopped> = z26;

     label045:
        if z17 != 0 goto label049;

     label046:
        i51 = r0.<android.view.SurfaceView: int mParentSurfaceGenerationId>;

        $r48 = r1.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        i52 = virtualinvoke $r48.<android.view.Surface: int getGenerationId()>();

     label047:
        if i51 != i52 goto label050;

        goto label049;

     label048:
        $r78 := @caughtexception;

        r97 = $r78;

        goto label132;

     label049:
        $r11 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        specialinvoke r0.<android.view.SurfaceView: void updateRelativeZ(android.view.SurfaceControl$Transaction)>($r11);

     label050:
        $r98 = r1.<android.view.ViewRootImpl: android.view.Surface mSurface>;

        $i53 = virtualinvoke $r98.<android.view.Surface: int getGenerationId()>();

        r0.<android.view.SurfaceView: int mParentSurfaceGenerationId> = $i53;

        z27 = r0.<android.view.SurfaceView: boolean mViewVisibility>;

     label051:
        if z27 == 0 goto label054;

     label052:
        $r47 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r46 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r47.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r46);

     label053:
        goto label055;

     label054:
        $r13 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r12 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r13.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r12);

     label055:
        r99 = r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage>;

     label056:
        if r99 == null goto label058;

     label057:
        $r45 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r44 = r0.<android.view.SurfaceView: android.view.SurfaceControlViewHost$SurfacePackage mSurfacePackage>;

        specialinvoke r0.<android.view.SurfaceView: void reparentSurfacePackage(android.view.SurfaceControl$Transaction,android.view.SurfaceControlViewHost$SurfacePackage)>($r45, $r44);

     label058:
        $r14 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        specialinvoke r0.<android.view.SurfaceView: void updateBackgroundVisibility(android.view.SurfaceControl$Transaction)>($r14);

        $r15 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction updateBackgroundColor(android.view.SurfaceControl$Transaction)>($r15);

        z28 = r0.<android.view.SurfaceView: boolean mUseAlpha>;

     label059:
        if z28 == 0 goto label061;

     label060:
        $r43 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r42 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r43.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setAlpha(android.view.SurfaceControl,float)>($r42, f7);

        r0.<android.view.SurfaceView: float mSurfaceAlpha> = f7;

     label061:
        if z18 != 0 goto label069;

        if z17 != 0 goto label069;

     label062:
        $z10 = r0.<android.view.SurfaceView: boolean mRtHandlingPositionUpdates>;

        if $z10 != 0 goto label064;

     label063:
        goto label069;

     label064:
        if z23 != 0 goto label066;

        if z22 != 0 goto label066;

        if z14 == 0 goto label065;

        goto label066;

     label065:
        goto label074;

     label066:
        $z29 = virtualinvoke r1.<android.view.ViewRootImpl: boolean useBLAST()>();

        if $z29 == 0 goto label068;

        virtualinvoke r1.<android.view.ViewRootImpl: void setUseBLASTSyncTransaction()>();

     label067:
        goto label074;

     label068:
        goto label074;

     label069:
        r100 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        r101 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r102 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        i54 = $r102.<android.graphics.Rect: int left>;

        $r103 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        i55 = $r103.<android.graphics.Rect: int top>;

        $r104 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i56 = virtualinvoke $r104.<android.graphics.Rect: int width()>();

        $f8 = (float) $i56;

        $i57 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $f9 = (float) $i57;

        f10 = $f8 / $f9;

        $r105 = r0.<android.view.SurfaceView: android.graphics.Rect mScreenRect>;

        $i58 = virtualinvoke $r105.<android.graphics.Rect: int height()>();

        f11 = (float) $i58;

        i59 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

     label070:
        $f12 = (float) i59;

        f13 = f11 / $f12;

     label071:
        virtualinvoke r0.<android.view.SurfaceView: void onSetSurfacePositionAndScaleRT(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int,int,float,float)>(r100, r101, i54, i55, f10, f13);

        $z30 = r0.<android.view.SurfaceView: boolean mClipSurfaceToBounds>;

        if $z30 == 0 goto label073;

        $r38 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        if $r38 == null goto label073;

        $r41 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r40 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $r39 = r0.<android.view.SurfaceView: android.graphics.Rect mClipBounds>;

        virtualinvoke $r41.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl,android.graphics.Rect)>($r40, $r39);

     label072:
        goto label074;

     label073:
        $r17 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r16 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $i7 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $i6 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        virtualinvoke $r17.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setWindowCrop(android.view.SurfaceControl,int,int)>($r16, $i7, $i6);

     label074:
        $r106 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r107 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $f14 = r0.<android.view.SurfaceView: float mCornerRadius>;

        virtualinvoke $r106.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setCornerRadius(android.view.SurfaceControl,float)>($r107, $f14);

     label075:
        if z18 == 0 goto label077;

        if z17 != 0 goto label077;

     label076:
        $r37 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r36 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        $i21 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $i20 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        virtualinvoke $r37.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setBufferSize(android.view.SurfaceControl,int,int)>($r36, $i21, $i20);

     label077:
        $r108 = r0.<android.view.SurfaceView: android.view.SurfaceControl$Transaction mTmpTransaction>;

        virtualinvoke $r108.<android.view.SurfaceControl$Transaction: void apply()>();

        specialinvoke r0.<android.view.SurfaceView: void updateScreenMatrixForEmbeddedHierarchy()>();

     label078:
        if z18 != 0 goto label079;

        z31 = 0;

        if z17 == 0 goto label080;

     label079:
        z31 = 1;

     label080:
        $r109 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r109.<android.graphics.Rect: int left> = 0;

        $r110 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r110.<android.graphics.Rect: int top> = 0;

     label081:
        if r81 != null goto label084;

     label082:
        $r34 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $i18 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $r34.<android.graphics.Rect: int right> = $i18;

        $r35 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $i19 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $r35.<android.graphics.Rect: int bottom> = $i19;

     label083:
        goto label085;

     label084:
        f15 = r81.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        $r18 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $i8 = r0.<android.view.SurfaceView: int mSurfaceWidth>;

        $f1 = (float) $i8;

        $f2 = $f1 * f15;

        $f3 = $f2 + 0.5F;

        $i9 = (int) $f3;

        $r18.<android.graphics.Rect: int right> = $i9;

        $r19 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $i10 = r0.<android.view.SurfaceView: int mSurfaceHeight>;

        $f4 = (float) $i10;

        $f5 = $f4 * f15;

        $f6 = $f5 + 0.5F;

        $i11 = (int) $f6;

        $r19.<android.graphics.Rect: int bottom> = $i11;

     label085:
        $r20 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        i60 = $r20.<android.graphics.Rect: int right>;

        $r21 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        i61 = $r21.<android.graphics.Rect: int bottom>;

        $i12 = r0.<android.view.SurfaceView: int mLastSurfaceWidth>;

        if $i12 != i60 goto label088;

        $i17 = r0.<android.view.SurfaceView: int mLastSurfaceHeight>;

        if $i17 == i61 goto label087;

     label086:
        goto label088;

     label087:
        z32 = 0;

        goto label089;

     label088:
        z32 = 1;

     label089:
        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = i60;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = i61;

     label090:
        $r111 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r111.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label091:
        if z0 == 0 goto label095;

     label092:
        $z9 = r0.<android.view.SurfaceView: boolean mDrawFinished>;

        if $z9 != 0 goto label095;

     label093:
        z33 = 1;

        goto label096;

     label094:
        $r76 := @caughtexception;

        goto label128;

     label095:
        z33 = 0;

     label096:
        $z34 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

        if $z34 == 0 goto label099;

     label097:
        if z17 != 0 goto label098;

        if z0 != 0 goto label099;

        if z14 == 0 goto label099;

     label098:
        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        specialinvoke r0.<android.view.SurfaceView: void notifySurfaceDestroyed()>();

     label099:
        if z17 == 0 goto label101;

     label100:
        $r33 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $r32 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r33.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>($r32);

     label101:
        if z18 == 0 goto label103;

     label102:
        $r28 = virtualinvoke r0.<android.view.SurfaceView: android.content.Context getContext()>();

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i16 = $r29.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i16 >= 26 goto label103;

        $r31 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $r30 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r31.<android.view.Surface: void createFrom(android.view.SurfaceControl)>($r30);

     label103:
        if z0 == 0 goto label126;

     label104:
        $r22 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $z6 = virtualinvoke $r22.<android.view.Surface: boolean isValid()>();

        if $z6 == 0 goto label126;

     label105:
        r114 = null;

     label106:
        $z7 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

        if $z7 != 0 goto label115;

     label107:
        if z17 != 0 goto label108;

        r114 = null;

        if z14 == 0 goto label115;

     label108:
        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 1;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 1;

     label109:
        r113 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label110:
        i62 = lengthof r113;

     label111:
        i63 = 0;

     label112:
        r114 = r113;

        if i63 >= i62 goto label115;

     label113:
        $r27 = r113[i63];

        $r26 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r27.<android.view.SurfaceHolder$Callback: void surfaceCreated(android.view.SurfaceHolder)>($r26);

     label114:
        i63 = i63 + 1;

        goto label112;

     label115:
        if z17 != 0 goto label116;

        if z13 != 0 goto label116;

        if z18 != 0 goto label116;

        if z14 != 0 goto label116;

        r115 = r114;

        if z32 == 0 goto label123;

     label116:
        r116 = r114;

        if r114 != null goto label118;

     label117:
        r116 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label118:
        i64 = lengthof r116;

     label119:
        i65 = 0;

     label120:
        r115 = r116;

        if i65 >= i64 goto label123;

     label121:
        $r25 = r116[i65];

        $r24 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        $i15 = r0.<android.view.SurfaceView: int mFormat>;

        interfaceinvoke $r25.<android.view.SurfaceHolder$Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>($r24, $i15, i34, i36);

     label122:
        i65 = i65 + 1;

        goto label120;

     label123:
        $z8 = z31 | z33;

        if $z8 == 0 goto label126;

        r117 = r115;

        if r115 != null goto label125;

     label124:
        r117 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label125:
        $i13 = r0.<android.view.SurfaceView: int mPendingReportDraws>;

        $i14 = $i13 + 1;

        r0.<android.view.SurfaceView: int mPendingReportDraws> = $i14;

        virtualinvoke r1.<android.view.ViewRootImpl: void drawPending()>();

        r118 = new com.android.internal.view.SurfaceCallbackHelper;

        r119 = new android.view._$$Lambda$SurfaceView$SyyzxOgxKwZMRgiiTGcRYbOU5JY;

        specialinvoke r119.<android.view._$$Lambda$SurfaceView$SyyzxOgxKwZMRgiiTGcRYbOU5JY: void <init>(android.view.SurfaceView)>(r0);

        specialinvoke r118.<com.android.internal.view.SurfaceCallbackHelper: void <init>(java.lang.Runnable)>(r119);

        $r23 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        virtualinvoke r118.<com.android.internal.view.SurfaceCallbackHelper: void dispatchSurfaceRedrawNeededAsync(android.view.SurfaceHolder,android.view.SurfaceHolder$Callback[])>($r23, r117);

     label126:
        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        $r120 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r120 == null goto label127;

        $z5 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

        if $z5 != 0 goto label127;

        specialinvoke r0.<android.view.SurfaceView: void releaseSurfaces()>();

     label127:
        goto label135;

     label128:
        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        $r77 = r0.<android.view.SurfaceView: android.view.SurfaceControl mSurfaceControl>;

        if $r77 == null goto label129;

        $z12 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

        if $z12 != 0 goto label129;

        specialinvoke r0.<android.view.SurfaceView: void releaseSurfaces()>();

     label129:
        throw $r76;

     label130:
        $r80 := @caughtexception;

        r97 = $r80;

        goto label132;

     label131:
        $r75 := @caughtexception;

        r97 = $r75;

     label132:
        $r121 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r121.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label133:
        throw r97;

     label134:
        $r79 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SurfaceView", "Exception configuring surface", $r79);

     label135:
        return;

     label136:
        specialinvoke r0.<android.view.SurfaceView: void notifySurfaceDestroyed()>();

        specialinvoke r0.<android.view.SurfaceView: void releaseSurfaces()>();

        return;

        catch java.lang.Exception from label029 to label030 with label134;
        catch java.lang.Exception from label031 to label032 with label134;
        catch java.lang.Exception from label032 to label033 with label134;
        catch java.lang.Exception from label034 to label035 with label134;
        catch java.lang.Exception from label037 to label038 with label134;
        catch java.lang.Exception from label039 to label040 with label134;
        catch java.lang.Exception from label041 to label042 with label134;
        catch java.lang.Throwable from label044 to label045 with label131;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label049 to label050 with label131;
        catch java.lang.Throwable from label050 to label051 with label131;
        catch java.lang.Throwable from label052 to label053 with label048;
        catch java.lang.Throwable from label054 to label055 with label131;
        catch java.lang.Throwable from label055 to label056 with label131;
        catch java.lang.Throwable from label057 to label058 with label048;
        catch java.lang.Throwable from label058 to label059 with label131;
        catch java.lang.Throwable from label060 to label061 with label048;
        catch java.lang.Throwable from label062 to label063 with label048;
        catch java.lang.Throwable from label066 to label067 with label048;
        catch java.lang.Throwable from label069 to label070 with label131;
        catch java.lang.Throwable from label071 to label072 with label130;
        catch java.lang.Throwable from label073 to label074 with label130;
        catch java.lang.Throwable from label074 to label075 with label130;
        catch java.lang.Throwable from label076 to label077 with label130;
        catch java.lang.Throwable from label077 to label078 with label130;
        catch java.lang.Throwable from label080 to label081 with label130;
        catch java.lang.Throwable from label082 to label083 with label130;
        catch java.lang.Throwable from label084 to label085 with label130;
        catch java.lang.Throwable from label085 to label086 with label130;
        catch java.lang.Throwable from label089 to label090 with label130;
        catch java.lang.Exception from label090 to label091 with label134;
        catch java.lang.Throwable from label092 to label093 with label094;
        catch java.lang.Throwable from label096 to label097 with label094;
        catch java.lang.Throwable from label098 to label099 with label094;
        catch java.lang.Throwable from label100 to label101 with label094;
        catch java.lang.Throwable from label102 to label103 with label094;
        catch java.lang.Throwable from label104 to label105 with label094;
        catch java.lang.Throwable from label106 to label107 with label094;
        catch java.lang.Throwable from label108 to label109 with label094;
        catch java.lang.Throwable from label109 to label110 with label094;
        catch java.lang.Throwable from label110 to label111 with label094;
        catch java.lang.Throwable from label113 to label114 with label094;
        catch java.lang.Throwable from label117 to label118 with label094;
        catch java.lang.Throwable from label118 to label119 with label094;
        catch java.lang.Throwable from label121 to label122 with label094;
        catch java.lang.Throwable from label124 to label125 with label094;
        catch java.lang.Throwable from label125 to label126 with label094;
        catch java.lang.Exception from label126 to label127 with label134;
        catch java.lang.Exception from label128 to label129 with label134;
        catch java.lang.Exception from label129 to label130 with label134;
        catch java.lang.Exception from label132 to label133 with label134;
        catch java.lang.Exception from label133 to label134 with label134;
    }

    public static void <clinit>()
    {
        <android.view.SurfaceView: java.lang.String TAG> = "SurfaceView";

        <android.view.SurfaceView: boolean DEBUG_POSITION> = 0;

        <android.view.SurfaceView: boolean DEBUG> = 0;

        return;
    }
}
