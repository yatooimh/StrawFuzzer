class android.view.SyncRtSurfaceTransactionApplier$1 extends java.lang.Object implements android.view.View$OnAttachStateChangeListener
{
    final java.util.function.Consumer val$callback;
    final android.view.View val$targetView;

    void <init>(android.view.View, java.util.function.Consumer)
    {
        android.view.SyncRtSurfaceTransactionApplier$1 r0;
        android.view.View r1;
        java.util.function.Consumer r2;

        r0 := @this: android.view.SyncRtSurfaceTransactionApplier$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.function.Consumer;

        r0.<android.view.SyncRtSurfaceTransactionApplier$1: android.view.View val$targetView> = r1;

        r0.<android.view.SyncRtSurfaceTransactionApplier$1: java.util.function.Consumer val$callback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        android.view.SyncRtSurfaceTransactionApplier$1 r0;
        android.view.View r1, $r2, $r4;
        android.view.SyncRtSurfaceTransactionApplier $r3;
        java.util.function.Consumer $r5;

        r0 := @this: android.view.SyncRtSurfaceTransactionApplier$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.view.SyncRtSurfaceTransactionApplier$1: android.view.View val$targetView>;

        virtualinvoke $r2.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r0);

        $r5 = r0.<android.view.SyncRtSurfaceTransactionApplier$1: java.util.function.Consumer val$callback>;

        $r3 = new android.view.SyncRtSurfaceTransactionApplier;

        $r4 = r0.<android.view.SyncRtSurfaceTransactionApplier$1: android.view.View val$targetView>;

        specialinvoke $r3.<android.view.SyncRtSurfaceTransactionApplier: void <init>(android.view.View)>($r4);

        interfaceinvoke $r5.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        android.view.SyncRtSurfaceTransactionApplier$1 r0;
        android.view.View r1;

        r0 := @this: android.view.SyncRtSurfaceTransactionApplier$1;

        r1 := @parameter0: android.view.View;

        return;
    }
}
