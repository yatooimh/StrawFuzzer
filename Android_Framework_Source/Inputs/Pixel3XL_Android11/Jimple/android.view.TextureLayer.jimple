public final class android.view.TextureLayer extends java.lang.Object
{
    private com.android.internal.util.VirtualRefBasePtr mFinalizer;
    private android.graphics.HardwareRenderer mRenderer;

    private void <init>(android.graphics.HardwareRenderer, long)
    {
        android.view.TextureLayer r0;
        android.graphics.HardwareRenderer r1;
        long l0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        byte $b1;
        com.android.internal.util.VirtualRefBasePtr $r11;

        r0 := @this: android.view.TextureLayer;

        r1 := @parameter0: android.graphics.HardwareRenderer;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer> = r1;

        $r11 = new com.android.internal.util.VirtualRefBasePtr;

        specialinvoke $r11.<com.android.internal.util.VirtualRefBasePtr: void <init>(long)>(l0);

        r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer> = $r11;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Either hardware renderer: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or deferredUpdater: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public static android.view.TextureLayer adoptTextureLayer(android.graphics.HardwareRenderer, long)
    {
        android.graphics.HardwareRenderer r0;
        long l0;
        android.view.TextureLayer $r1;

        r0 := @parameter0: android.graphics.HardwareRenderer;

        l0 := @parameter1: long;

        $r1 = new android.view.TextureLayer;

        specialinvoke $r1.<android.view.TextureLayer: void <init>(android.graphics.HardwareRenderer,long)>(r0, l0);

        return $r1;
    }

    private static native boolean nPrepare(long, int, int, boolean);

    private static native void nSetLayerPaint(long, long);

    private static native void nSetSurfaceTexture(long, android.graphics.SurfaceTexture);

    private static native void nSetTransform(long, long);

    private static native void nUpdateSurfaceTexture(long);

    public boolean copyInto(android.graphics.Bitmap)
    {
        android.view.TextureLayer r0;
        android.graphics.Bitmap r1;
        android.graphics.HardwareRenderer $r2;
        boolean $z0;

        r0 := @this: android.view.TextureLayer;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        $z0 = virtualinvoke $r2.<android.graphics.HardwareRenderer: boolean copyLayerInto(android.view.TextureLayer,android.graphics.Bitmap)>(r0, r1);

        return $z0;
    }

    public void destroy()
    {
        android.view.TextureLayer r0;
        boolean $z0;
        android.graphics.HardwareRenderer $r1;
        com.android.internal.util.VirtualRefBasePtr $r2;

        r0 := @this: android.view.TextureLayer;

        $z0 = virtualinvoke r0.<android.view.TextureLayer: boolean isValid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r1.<android.graphics.HardwareRenderer: void onLayerDestroyed(android.view.TextureLayer)>(r0);

        r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer> = null;

        $r2 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        virtualinvoke $r2.<com.android.internal.util.VirtualRefBasePtr: void release()>();

        r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer> = null;

        return;
    }

    public void detachSurfaceTexture()
    {
        android.view.TextureLayer r0;
        com.android.internal.util.VirtualRefBasePtr $r1;
        android.graphics.HardwareRenderer $r2;
        long $l0;

        r0 := @this: android.view.TextureLayer;

        $r2 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        $r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        virtualinvoke $r2.<android.graphics.HardwareRenderer: void detachSurfaceTexture(long)>($l0);

        return;
    }

    public long getDeferredLayerUpdater()
    {
        android.view.TextureLayer r0;
        com.android.internal.util.VirtualRefBasePtr $r1;
        long $l0;

        r0 := @this: android.view.TextureLayer;

        $r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        return $l0;
    }

    public long getLayerHandle()
    {
        android.view.TextureLayer r0;
        com.android.internal.util.VirtualRefBasePtr $r1;
        long $l0;

        r0 := @this: android.view.TextureLayer;

        $r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        return $l0;
    }

    public boolean isValid()
    {
        android.view.TextureLayer r0;
        com.android.internal.util.VirtualRefBasePtr r1;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: android.view.TextureLayer;

        r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        if r1 == null goto label1;

        $l0 = virtualinvoke r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean prepare(int, int, boolean)
    {
        android.view.TextureLayer r0;
        int i0, i1;
        boolean z0, $z1;
        com.android.internal.util.VirtualRefBasePtr $r1;
        long $l2;

        r0 := @this: android.view.TextureLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l2 = virtualinvoke $r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        $z1 = staticinvoke <android.view.TextureLayer: boolean nPrepare(long,int,int,boolean)>($l2, i0, i1, z0);

        return $z1;
    }

    public void setLayerPaint(android.graphics.Paint)
    {
        android.view.TextureLayer r0;
        android.graphics.Paint r1;
        long l0, l1;
        com.android.internal.util.VirtualRefBasePtr $r2;
        android.graphics.HardwareRenderer $r3;

        r0 := @this: android.view.TextureLayer;

        r1 := @parameter0: android.graphics.Paint;

        $r2 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        l0 = virtualinvoke $r2.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        if r1 == null goto label1;

        l1 = virtualinvoke r1.<android.graphics.Paint: long getNativeInstance()>();

        goto label2;

     label1:
        l1 = 0L;

     label2:
        staticinvoke <android.view.TextureLayer: void nSetLayerPaint(long,long)>(l0, l1);

        $r3 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r3.<android.graphics.HardwareRenderer: void pushLayerUpdate(android.view.TextureLayer)>(r0);

        return;
    }

    public void setSurfaceTexture(android.graphics.SurfaceTexture)
    {
        android.view.TextureLayer r0;
        android.graphics.SurfaceTexture r1;
        com.android.internal.util.VirtualRefBasePtr $r2;
        long $l0;
        android.graphics.HardwareRenderer $r3;

        r0 := @this: android.view.TextureLayer;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r2.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        staticinvoke <android.view.TextureLayer: void nSetSurfaceTexture(long,android.graphics.SurfaceTexture)>($l0, r1);

        $r3 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r3.<android.graphics.HardwareRenderer: void pushLayerUpdate(android.view.TextureLayer)>(r0);

        return;
    }

    public void setTransform(android.graphics.Matrix)
    {
        android.view.TextureLayer r0;
        android.graphics.Matrix r1;
        com.android.internal.util.VirtualRefBasePtr $r2;
        long $l0, $l1;
        android.graphics.HardwareRenderer $r3;

        r0 := @this: android.view.TextureLayer;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r2.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        $l1 = r1.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.view.TextureLayer: void nSetTransform(long,long)>($l0, $l1);

        $r3 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r3.<android.graphics.HardwareRenderer: void pushLayerUpdate(android.view.TextureLayer)>(r0);

        return;
    }

    public void updateSurfaceTexture()
    {
        android.view.TextureLayer r0;
        com.android.internal.util.VirtualRefBasePtr $r1;
        long $l0;
        android.graphics.HardwareRenderer $r2;

        r0 := @this: android.view.TextureLayer;

        $r1 = r0.<android.view.TextureLayer: com.android.internal.util.VirtualRefBasePtr mFinalizer>;

        $l0 = virtualinvoke $r1.<com.android.internal.util.VirtualRefBasePtr: long get()>();

        staticinvoke <android.view.TextureLayer: void nUpdateSurfaceTexture(long)>($l0);

        $r2 = r0.<android.view.TextureLayer: android.graphics.HardwareRenderer mRenderer>;

        virtualinvoke $r2.<android.graphics.HardwareRenderer: void pushLayerUpdate(android.view.TextureLayer)>(r0);

        return;
    }
}
