public class android.view.ThreadedRenderer$SimpleRenderer extends android.graphics.HardwareRenderer
{
    private final float mLightRadius;
    private final float mLightY;
    private final float mLightZ;

    public void <init>(android.content.Context, java.lang.String, android.view.Surface)
    {
        android.view.ThreadedRenderer$SimpleRenderer r0;
        java.lang.String r1;
        android.view.Surface r2;
        float f0, f1, $f2, $f3, $f4;
        int[] $r3;
        android.content.Context r4;
        android.content.res.TypedArray r5;

        r0 := @this: android.view.ThreadedRenderer$SimpleRenderer;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.view.Surface;

        specialinvoke r0.<android.graphics.HardwareRenderer: void <init>()>();

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setName(java.lang.String)>(r1);

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setOpaque(boolean)>(0);

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setSurface(android.view.Surface)>(r2);

        $r3 = <com.android.internal.R$styleable: int[] Lighting>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, 0, 0);

        $f2 = virtualinvoke r5.<android.content.res.TypedArray: float getDimension(int,float)>(3, 0.0F);

        r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightY> = $f2;

        $f3 = virtualinvoke r5.<android.content.res.TypedArray: float getDimension(int,float)>(4, 0.0F);

        r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightZ> = $f3;

        $f4 = virtualinvoke r5.<android.content.res.TypedArray: float getDimension(int,float)>(2, 0.0F);

        r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightRadius> = $f4;

        f0 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(0, 0.0F);

        f1 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(1, 0.0F);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setLightSourceAlpha(float,float)>(f0, f1);

        return;
    }

    public void draw(android.graphics.HardwareRenderer$FrameDrawingCallback)
    {
        android.view.ThreadedRenderer$SimpleRenderer r0;
        android.graphics.HardwareRenderer$FrameDrawingCallback r1;
        long l0, $l1;
        android.graphics.HardwareRenderer$FrameRenderRequest $r2, $r3;

        r0 := @this: android.view.ThreadedRenderer$SimpleRenderer;

        r1 := @parameter0: android.graphics.HardwareRenderer$FrameDrawingCallback;

        l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setFrameCallback(android.graphics.HardwareRenderer$FrameDrawingCallback)>(r1);

     label1:
        $r2 = virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: android.graphics.HardwareRenderer$FrameRenderRequest createRenderRequest()>();

        $l1 = l0 * 1000000L;

        $r3 = virtualinvoke $r2.<android.graphics.HardwareRenderer$FrameRenderRequest: android.graphics.HardwareRenderer$FrameRenderRequest setVsyncTime(long)>($l1);

        virtualinvoke $r3.<android.graphics.HardwareRenderer$FrameRenderRequest: int syncAndDraw()>();

        return;
    }

    public android.graphics.RenderNode getRootNode()
    {
        android.view.ThreadedRenderer$SimpleRenderer r0;
        android.graphics.RenderNode $r1;

        r0 := @this: android.view.ThreadedRenderer$SimpleRenderer;

        $r1 = r0.<android.view.ThreadedRenderer$SimpleRenderer: android.graphics.RenderNode mRootNode>;

        return $r1;
    }

    public void setLightCenter(android.view.Display, int, int)
    {
        android.view.ThreadedRenderer$SimpleRenderer r0;
        android.view.Display r1;
        int i0, i1, $i2;
        android.graphics.Point $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.view.ThreadedRenderer$SimpleRenderer;

        r1 := @parameter0: android.view.Display;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        virtualinvoke r1.<android.view.Display: void getRealSize(android.graphics.Point)>($r3);

        $i2 = $r3.<android.graphics.Point: int x>;

        $f0 = (float) $i2;

        $f2 = $f0 / 2.0F;

        $f1 = (float) i0;

        $f8 = $f2 - $f1;

        $f4 = r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightY>;

        $f3 = (float) i1;

        $f7 = $f4 - $f3;

        $f6 = r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightZ>;

        $f5 = r0.<android.view.ThreadedRenderer$SimpleRenderer: float mLightRadius>;

        virtualinvoke r0.<android.view.ThreadedRenderer$SimpleRenderer: void setLightSourceGeometry(float,float,float,float)>($f8, $f7, $f6, $f5);

        return;
    }
}
