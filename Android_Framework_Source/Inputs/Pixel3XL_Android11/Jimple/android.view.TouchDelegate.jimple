public class android.view.TouchDelegate extends java.lang.Object
{
    public static final int ABOVE;
    public static final int BELOW;
    public static final int TO_LEFT;
    public static final int TO_RIGHT;
    private android.graphics.Rect mBounds;
    private boolean mDelegateTargeted;
    private android.view.View mDelegateView;
    private int mSlop;
    private android.graphics.Rect mSlopBounds;
    private android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo;

    public void <init>(android.graphics.Rect, android.view.View)
    {
        android.view.TouchDelegate r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3;
        android.content.Context $r2;
        android.view.ViewConfiguration $r3;
        android.graphics.Rect $r4, r5;

        r0 := @this: android.view.TouchDelegate;

        r5 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.TouchDelegate: android.graphics.Rect mBounds> = r5;

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i1 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.view.TouchDelegate: int mSlop> = $i1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r5);

        r0.<android.view.TouchDelegate: android.graphics.Rect mSlopBounds> = $r4;

        i0 = r0.<android.view.TouchDelegate: int mSlop>;

        $i3 = neg i0;

        $i2 = neg i0;

        virtualinvoke $r4.<android.graphics.Rect: void inset(int,int)>($i3, $i2);

        r0.<android.view.TouchDelegate: android.view.View mDelegateView> = r1;

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()
    {
        android.view.TouchDelegate r0;
        android.graphics.Rect r2, $r9, r10;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r3, $r8, $r11;
        android.util.ArrayMap $r4;
        android.graphics.Region $r5;
        android.view.View $r6;

        r0 := @this: android.view.TouchDelegate;

        $r3 = r0.<android.view.TouchDelegate: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        if $r3 != null goto label2;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>(int)>(1);

        r2 = r0.<android.view.TouchDelegate: android.graphics.Rect mBounds>;

        r10 = r2;

        if r2 != null goto label1;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r10 = $r9;

     label1:
        $r5 = new android.graphics.Region;

        specialinvoke $r5.<android.graphics.Region: void <init>(android.graphics.Rect)>(r10);

        $r6 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = new android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo;

        specialinvoke $r8.<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void <init>(java.util.Map)>($r4);

        r0.<android.view.TouchDelegate: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo> = $r8;

     label2:
        $r11 = r0.<android.view.TouchDelegate: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        return $r11;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.TouchDelegate r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        boolean z1, $z2, $z3, z4, z5, z6;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.Rect $r2, $r6;
        android.view.View $r3, $r4, $r5;

        r0 := @this: android.view.TouchDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        z4 = 0;

        z5 = 1;

        z6 = 0;

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i2 == 0 goto label4;

        if i2 == 1 goto label2;

        if i2 == 2 goto label2;

        if i2 == 3 goto label1;

        if i2 == 5 goto label2;

        if i2 == 6 goto label2;

        goto label5;

     label1:
        z4 = r0.<android.view.TouchDelegate: boolean mDelegateTargeted>;

        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = 0;

        goto label5;

     label2:
        z1 = r0.<android.view.TouchDelegate: boolean mDelegateTargeted>;

        z4 = z1;

        if z1 == 0 goto label5;

        z5 = 1;

        $r6 = r0.<android.view.TouchDelegate: android.graphics.Rect mSlopBounds>;

        $z3 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z3 != 0 goto label3;

        z5 = 0;

     label3:
        z4 = z1;

        goto label5;

     label4:
        $r2 = r0.<android.view.TouchDelegate: android.graphics.Rect mBounds>;

        $z2 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = $z2;

        z4 = r0.<android.view.TouchDelegate: boolean mDelegateTargeted>;

     label5:
        if z4 == 0 goto label8;

        if z5 == 0 goto label6;

        $r4 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        $i7 = virtualinvoke $r4.<android.view.View: int getWidth()>();

        $i8 = $i7 / 2;

        $f4 = (float) $i8;

        $r5 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        $i9 = virtualinvoke $r5.<android.view.View: int getHeight()>();

        $i10 = $i9 / 2;

        $f5 = (float) $i10;

        virtualinvoke r1.<android.view.MotionEvent: void setLocation(float,float)>($f4, $f5);

        goto label7;

     label6:
        i11 = r0.<android.view.TouchDelegate: int mSlop>;

        $i3 = i11 * 2;

        $i4 = neg $i3;

        $f3 = (float) $i4;

        $i5 = i11 * 2;

        $i6 = neg $i5;

        $f2 = (float) $i6;

        virtualinvoke r1.<android.view.MotionEvent: void setLocation(float,float)>($f3, $f2);

     label7:
        $r3 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        z6 = virtualinvoke $r3.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

     label8:
        return z6;
    }

    public boolean onTouchExplorationHoverEvent(android.view.MotionEvent)
    {
        android.view.TouchDelegate r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        boolean z1, $z2, $z3, z4, z5, $z6;
        android.graphics.Rect $r2, $r3, $r7;
        float $f0, $f1, $f2, $f3;
        android.view.View $r4, $r5, $r6;

        r0 := @this: android.view.TouchDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.view.TouchDelegate: android.graphics.Rect mBounds>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        z4 = 0;

        $r3 = r0.<android.view.TouchDelegate: android.graphics.Rect mBounds>;

        z1 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        i6 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i6 == 7 goto label4;

        if i6 == 9 goto label3;

        if i6 == 10 goto label2;

        z5 = 1;

        goto label6;

     label2:
        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = 1;

        z5 = 1;

        goto label6;

     label3:
        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = z1;

        z5 = 1;

        goto label6;

     label4:
        if z1 == 0 goto label5;

        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = 1;

        z5 = 1;

        goto label6;

     label5:
        z5 = 1;

        $z2 = r0.<android.view.TouchDelegate: boolean mDelegateTargeted>;

        if $z2 == 0 goto label6;

        z5 = 1;

        $r7 = r0.<android.view.TouchDelegate: android.graphics.Rect mSlopBounds>;

        $z3 = virtualinvoke $r7.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z3 != 0 goto label6;

        z5 = 0;

     label6:
        $z6 = r0.<android.view.TouchDelegate: boolean mDelegateTargeted>;

        if $z6 == 0 goto label9;

        if z5 == 0 goto label7;

        $r5 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        $i2 = virtualinvoke $r5.<android.view.View: int getWidth()>();

        $i3 = $i2 / 2;

        $f2 = (float) $i3;

        $r6 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        $i4 = virtualinvoke $r6.<android.view.View: int getHeight()>();

        $i5 = $i4 / 2;

        $f3 = (float) $i5;

        virtualinvoke r1.<android.view.MotionEvent: void setLocation(float,float)>($f2, $f3);

        goto label8;

     label7:
        r0.<android.view.TouchDelegate: boolean mDelegateTargeted> = 0;

     label8:
        $r4 = r0.<android.view.TouchDelegate: android.view.View mDelegateView>;

        z4 = virtualinvoke $r4.<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

     label9:
        return z4;
    }

    public static void <clinit>()
    {
        <android.view.TouchDelegate: int TO_RIGHT> = 8;

        <android.view.TouchDelegate: int TO_LEFT> = 4;

        <android.view.TouchDelegate: int BELOW> = 2;

        <android.view.TouchDelegate: int ABOVE> = 1;

        return;
    }
}
