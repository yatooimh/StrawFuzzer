final class android.view.View$AttachInfo extends java.lang.Object
{
    int mAccessibilityFetchFlags;
    android.graphics.drawable.Drawable mAccessibilityFocusDrawable;
    int mAccessibilityWindowId;
    boolean mAlwaysConsumeSystemBars;
    float mApplicationScale;
    android.graphics.drawable.Drawable mAutofilledDrawable;
    android.graphics.Canvas mCanvas;
    final android.graphics.Rect mCaptionInsets;
    android.util.SparseArray mContentCaptureEvents;
    android.view.contentcapture.ContentCaptureManager mContentCaptureManager;
    final android.graphics.Rect mContentInsets;
    android.view.Window$OnContentApplyWindowInsetsListener mContentOnApplyWindowInsetsListener;
    boolean mDebugLayout;
    int mDisabledSystemUiVisibility;
    android.view.Display mDisplay;
    final android.view.DisplayCutout$ParcelableWrapper mDisplayCutout;
    int mDisplayState;
    public android.view.Surface mDragSurface;
    android.os.IBinder mDragToken;
    long mDrawingTime;
    boolean mForceReportNewAttributes;
    final android.view.ViewTreeObserver$InternalInsetsInfo mGivenInternalInsets;
    final android.os.Handler mHandler;
    boolean mHandlingPointerEvent;
    boolean mHardwareAccelerated;
    boolean mHardwareAccelerationRequested;
    boolean mHasNonEmptyGivenInternalInsets;
    boolean mHasSystemUiListeners;
    boolean mHasWindowFocus;
    android.view.IWindowId mIWindowId;
    boolean mInTouchMode;
    final int[] mInvalidateChildLocation;
    boolean mKeepScreenOn;
    final android.view.KeyEvent$DispatcherState mKeyDispatchState;
    int mLeashedParentAccessibilityViewId;
    android.os.IBinder mLeashedParentToken;
    final android.graphics.Point mLocationInParentDisplay;
    boolean mNeedsUpdateLightCenter;
    android.os.IBinder mPanelParentWindowToken;
    java.util.List mPendingAnimatingRenderNodes;
    final android.graphics.Point mPoint;
    boolean mReadyForContentCaptureUpdates;
    boolean mRecomputeGlobalAttributes;
    final android.view.View$AttachInfo$Callbacks mRootCallbacks;
    android.view.View mRootView;
    boolean mScalingRequired;
    android.graphics.Matrix mScreenMatrixInEmbeddedHierarchy;
    com.android.internal.view.ScrollCaptureInternal mScrollCaptureInternal;
    final java.util.ArrayList mScrollContainers;
    final android.view.IWindowSession mSession;
    final android.graphics.Rect mStableInsets;
    int mSystemUiVisibility;
    final java.util.ArrayList mTempArrayList;
    android.view.ThreadedRenderer mThreadedRenderer;
    final android.graphics.Rect mTmpInvalRect;
    final int[] mTmpLocation;
    final android.graphics.Matrix mTmpMatrix;
    final android.graphics.Outline mTmpOutline;
    final java.util.List mTmpRectList;
    final float[] mTmpTransformLocation;
    final android.graphics.RectF mTmpTransformRect;
    final android.graphics.RectF mTmpTransformRect1;
    final android.view.animation.Transformation mTmpTransformation;
    android.view.View mTooltipHost;
    final int[] mTransparentLocation;
    final android.view.ViewTreeObserver mTreeObserver;
    boolean mUnbufferedDispatchRequested;
    boolean mUse32BitDrawingCache;
    android.view.View mViewRequestingLayout;
    final android.view.ViewRootImpl mViewRootImpl;
    boolean mViewScrollChanged;
    boolean mViewVisibilityChanged;
    final android.graphics.Rect mVisibleInsets;
    final android.view.IWindow mWindow;
    android.view.WindowId mWindowId;
    int mWindowLeft;
    final android.os.IBinder mWindowToken;
    int mWindowTop;
    int mWindowVisibility;

    void <init>(android.view.IWindowSession, android.view.IWindow, android.view.Display, android.view.ViewRootImpl, android.os.Handler, android.view.View$AttachInfo$Callbacks, android.content.Context)
    {
        android.view.View$AttachInfo r0;
        android.view.IWindowSession r1;
        android.view.IWindow r2;
        android.view.Display r3;
        android.view.ViewRootImpl r4;
        android.os.Handler r5;
        android.view.View$AttachInfo$Callbacks r6;
        android.content.Context r7;
        android.graphics.Rect $r8, $r9, $r10, $r11, $r22;
        android.view.DisplayCutout$ParcelableWrapper $r12;
        android.view.DisplayCutout $r13;
        android.view.ViewTreeObserver$InternalInsetsInfo $r14;
        java.util.ArrayList $r15, $r25, $r29;
        android.view.KeyEvent$DispatcherState $r16;
        android.graphics.Point $r17, $r34;
        int[] $r18, $r19, $r20;
        float[] $r21;
        android.graphics.RectF $r23, $r24;
        android.graphics.Matrix $r26;
        android.view.animation.Transformation $r27;
        android.graphics.Outline $r28;
        java.util.Optional $r30;
        java.lang.Boolean $r31, $r33;
        java.lang.Object $r32;
        boolean $z0;
        android.os.IBinder $r35;
        android.view.ViewTreeObserver $r36;

        r0 := @this: android.view.View$AttachInfo;

        r1 := @parameter0: android.view.IWindowSession;

        r2 := @parameter1: android.view.IWindow;

        r3 := @parameter2: android.view.Display;

        r4 := @parameter3: android.view.ViewRootImpl;

        r5 := @parameter4: android.os.Handler;

        r6 := @parameter5: android.view.View$AttachInfo$Callbacks;

        r7 := @parameter6: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.View$AttachInfo: int mDisplayState> = 0;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Rect mContentInsets> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Rect mStableInsets> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Rect mCaptionInsets> = $r11;

        $r12 = new android.view.DisplayCutout$ParcelableWrapper;

        $r13 = <android.view.DisplayCutout: android.view.DisplayCutout NO_CUTOUT>;

        specialinvoke $r12.<android.view.DisplayCutout$ParcelableWrapper: void <init>(android.view.DisplayCutout)>($r13);

        r0.<android.view.View$AttachInfo: android.view.DisplayCutout$ParcelableWrapper mDisplayCutout> = $r12;

        $r14 = new android.view.ViewTreeObserver$InternalInsetsInfo;

        specialinvoke $r14.<android.view.ViewTreeObserver$InternalInsetsInfo: void <init>()>();

        r0.<android.view.View$AttachInfo: android.view.ViewTreeObserver$InternalInsetsInfo mGivenInternalInsets> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers> = $r15;

        $r16 = new android.view.KeyEvent$DispatcherState;

        specialinvoke $r16.<android.view.KeyEvent$DispatcherState: void <init>()>();

        r0.<android.view.View$AttachInfo: android.view.KeyEvent$DispatcherState mKeyDispatchState> = $r16;

        $r17 = new android.graphics.Point;

        specialinvoke $r17.<android.graphics.Point: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Point mLocationInParentDisplay> = $r17;

        $r18 = newarray (int)[2];

        r0.<android.view.View$AttachInfo: int[] mTransparentLocation> = $r18;

        $r19 = newarray (int)[2];

        r0.<android.view.View$AttachInfo: int[] mInvalidateChildLocation> = $r19;

        $r20 = newarray (int)[2];

        r0.<android.view.View$AttachInfo: int[] mTmpLocation> = $r20;

        $r21 = newarray (float)[2];

        r0.<android.view.View$AttachInfo: float[] mTmpTransformLocation> = $r21;

        $r22 = new android.graphics.Rect;

        specialinvoke $r22.<android.graphics.Rect: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect> = $r22;

        $r23 = new android.graphics.RectF;

        specialinvoke $r23.<android.graphics.RectF: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect> = $r23;

        $r24 = new android.graphics.RectF;

        specialinvoke $r24.<android.graphics.RectF: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect1> = $r24;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<android.view.View$AttachInfo: java.util.List mTmpRectList> = $r25;

        $r26 = new android.graphics.Matrix;

        specialinvoke $r26.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Matrix mTmpMatrix> = $r26;

        $r27 = new android.view.animation.Transformation;

        specialinvoke $r27.<android.view.animation.Transformation: void <init>()>();

        r0.<android.view.View$AttachInfo: android.view.animation.Transformation mTmpTransformation> = $r27;

        $r28 = new android.graphics.Outline;

        specialinvoke $r28.<android.graphics.Outline: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Outline mTmpOutline> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>(24);

        r0.<android.view.View$AttachInfo: java.util.ArrayList mTempArrayList> = $r29;

        r0.<android.view.View$AttachInfo: int mAccessibilityWindowId> = -1;

        $r30 = staticinvoke <android.sysprop.DisplayProperties: java.util.Optional debug_layout()>();

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r32 = virtualinvoke $r30.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r31);

        $r33 = (java.lang.Boolean) $r32;

        $z0 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        r0.<android.view.View$AttachInfo: boolean mDebugLayout> = $z0;

        $r34 = new android.graphics.Point;

        specialinvoke $r34.<android.graphics.Point: void <init>()>();

        r0.<android.view.View$AttachInfo: android.graphics.Point mPoint> = $r34;

        r0.<android.view.View$AttachInfo: android.view.IWindowSession mSession> = r1;

        r0.<android.view.View$AttachInfo: android.view.IWindow mWindow> = r2;

        $r35 = interfaceinvoke r2.<android.view.IWindow: android.os.IBinder asBinder()>();

        r0.<android.view.View$AttachInfo: android.os.IBinder mWindowToken> = $r35;

        r0.<android.view.View$AttachInfo: android.view.Display mDisplay> = r3;

        r0.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl> = r4;

        r0.<android.view.View$AttachInfo: android.os.Handler mHandler> = r5;

        r0.<android.view.View$AttachInfo: android.view.View$AttachInfo$Callbacks mRootCallbacks> = r6;

        $r36 = new android.view.ViewTreeObserver;

        specialinvoke $r36.<android.view.ViewTreeObserver: void <init>(android.content.Context)>(r7);

        r0.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver> = $r36;

        return;
    }

    static void access$1100(android.view.View$AttachInfo, android.view.contentcapture.ContentCaptureSession, android.view.View, boolean)
    {
        android.view.View$AttachInfo r0;
        android.view.contentcapture.ContentCaptureSession r1;
        android.view.View r2;
        boolean z0;

        r0 := @parameter0: android.view.View$AttachInfo;

        r1 := @parameter1: android.view.contentcapture.ContentCaptureSession;

        r2 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.view.View$AttachInfo: void delayNotifyContentCaptureEvent(android.view.contentcapture.ContentCaptureSession,android.view.View,boolean)>(r1, r2, z0);

        return;
    }

    private void delayNotifyContentCaptureEvent(android.view.contentcapture.ContentCaptureSession, android.view.View, boolean)
    {
        android.view.View$AttachInfo r0;
        boolean z0;
        android.view.contentcapture.ContentCaptureSession r1;
        java.lang.Object r2;
        java.util.ArrayList r3;
        android.view.View r4;

        r0 := @this: android.view.View$AttachInfo;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureSession;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        r3 = specialinvoke r0.<android.view.View$AttachInfo: java.util.ArrayList ensureEvents(android.view.contentcapture.ContentCaptureSession)>(r1);

        if z0 == 0 goto label1;

        goto label2;

     label1:
        r4 = (android.view.View) r2;

        r2 = virtualinvoke r4.<android.view.View: android.view.autofill.AutofillId getAutofillId()>();

     label2:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    private java.util.ArrayList ensureEvents(android.view.contentcapture.ContentCaptureSession)
    {
        android.view.View$AttachInfo r0;
        int i0;
        java.util.ArrayList r1, $r5, r9;
        android.util.SparseArray $r2, $r3, $r6, $r7;
        java.lang.Object $r4;
        android.view.contentcapture.ContentCaptureSession r8;

        r0 := @this: android.view.View$AttachInfo;

        r8 := @parameter0: android.view.contentcapture.ContentCaptureSession;

        $r2 = r0.<android.view.View$AttachInfo: android.util.SparseArray mContentCaptureEvents>;

        if $r2 != null goto label1;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>(int)>(1);

        r0.<android.view.View$AttachInfo: android.util.SparseArray mContentCaptureEvents> = $r7;

     label1:
        i0 = virtualinvoke r8.<android.view.contentcapture.ContentCaptureSession: int getId()>();

        $r3 = r0.<android.view.View$AttachInfo: android.util.SparseArray mContentCaptureEvents>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.ArrayList) $r4;

        r9 = r1;

        if r1 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r9 = $r5;

        $r6 = r0.<android.view.View$AttachInfo: android.util.SparseArray mContentCaptureEvents>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r5);

     label2:
        return r9;
    }

    void delayNotifyContentCaptureInsetsEvent(android.graphics.Insets)
    {
        android.view.View$AttachInfo r0;
        android.graphics.Insets r1;
        android.view.contentcapture.ContentCaptureManager r2;
        android.view.contentcapture.MainContentCaptureSession $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.view.View$AttachInfo;

        r1 := @parameter0: android.graphics.Insets;

        r2 = r0.<android.view.View$AttachInfo: android.view.contentcapture.ContentCaptureManager mContentCaptureManager>;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        $r4 = specialinvoke r0.<android.view.View$AttachInfo: java.util.ArrayList ensureEvents(android.view.contentcapture.ContentCaptureSession)>($r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    android.view.contentcapture.ContentCaptureManager getContentCaptureManager(android.content.Context)
    {
        android.view.View$AttachInfo r0;
        android.view.contentcapture.ContentCaptureManager r1, r4;
        java.lang.Object $r2;
        android.content.Context r3;

        r0 := @this: android.view.View$AttachInfo;

        r3 := @parameter0: android.content.Context;

        r1 = r0.<android.view.View$AttachInfo: android.view.contentcapture.ContentCaptureManager mContentCaptureManager>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/contentcapture/ContentCaptureManager;");

        r4 = (android.view.contentcapture.ContentCaptureManager) $r2;

        r0.<android.view.View$AttachInfo: android.view.contentcapture.ContentCaptureManager mContentCaptureManager> = r4;

        return r4;
    }

    com.android.internal.view.ScrollCaptureInternal getScrollCaptureInternal()
    {
        android.view.View$AttachInfo r0;
        com.android.internal.view.ScrollCaptureInternal $r1, $r2, $r3;

        r0 := @this: android.view.View$AttachInfo;

        $r1 = r0.<android.view.View$AttachInfo: com.android.internal.view.ScrollCaptureInternal mScrollCaptureInternal>;

        if $r1 == null goto label1;

        $r3 = new com.android.internal.view.ScrollCaptureInternal;

        specialinvoke $r3.<com.android.internal.view.ScrollCaptureInternal: void <init>()>();

        r0.<android.view.View$AttachInfo: com.android.internal.view.ScrollCaptureInternal mScrollCaptureInternal> = $r3;

     label1:
        $r2 = r0.<android.view.View$AttachInfo: com.android.internal.view.ScrollCaptureInternal mScrollCaptureInternal>;

        return $r2;
    }
}
