class android.view.View$DeclaredOnClickListener extends java.lang.Object implements android.view.View$OnClickListener
{
    private final android.view.View mHostView;
    private final java.lang.String mMethodName;
    private android.content.Context mResolvedContext;
    private java.lang.reflect.Method mResolvedMethod;

    public void <init>(android.view.View, java.lang.String)
    {
        android.view.View$DeclaredOnClickListener r0;
        android.view.View r1;
        java.lang.String r2;

        r0 := @this: android.view.View$DeclaredOnClickListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.View$DeclaredOnClickListener: android.view.View mHostView> = r1;

        r0.<android.view.View$DeclaredOnClickListener: java.lang.String mMethodName> = r2;

        return;
    }

    private void resolveMethod(android.content.Context, java.lang.String)
    {
        android.view.View$DeclaredOnClickListener r0;
        int i0;
        android.view.View $r1, $r4, $r15;
        java.lang.StringBuilder $r2, $r10;
        android.content.Context $r5, r26;
        android.content.res.Resources $r6;
        java.lang.String $r7, $r12, $r20, $r24, r27, r30;
        java.lang.Class $r16, $r22;
        java.lang.IllegalStateException $r19;
        boolean $z0, $z1;
        android.content.ContextWrapper $r21;
        java.lang.Class[] $r23;
        java.lang.Throwable $r25;
        java.lang.reflect.Method r28;

        r0 := @this: android.view.View$DeclaredOnClickListener;

        r26 := @parameter0: android.content.Context;

        r27 := @parameter1: java.lang.String;

     label01:
        if r26 == null goto label10;

     label02:
        $z0 = virtualinvoke r26.<android.content.Context: boolean isRestricted()>();

        if $z0 != 0 goto label06;

        $r22 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = r0.<android.view.View$DeclaredOnClickListener: java.lang.String mMethodName>;

        $r23 = newarray (java.lang.Class)[1];

        $r23[0] = class "Landroid/view/View;";

        r28 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r24, $r23);

     label03:
        if r28 == null goto label06;

     label04:
        r0.<android.view.View$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod> = r28;

        r0.<android.view.View$DeclaredOnClickListener: android.content.Context mResolvedContext> = r26;

     label05:
        return;

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

     label08:
        $z1 = r26 instanceof android.content.ContextWrapper;

        if $z1 == 0 goto label09;

        $r21 = (android.content.ContextWrapper) r26;

        r26 = virtualinvoke $r21.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label01;

     label09:
        r26 = null;

        goto label01;

     label10:
        $r1 = r0.<android.view.View$DeclaredOnClickListener: android.view.View mHostView>;

        i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        if i0 != -1 goto label11;

        r30 = "";

        goto label12;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with id \'");

        $r4 = r0.<android.view.View$DeclaredOnClickListener: android.view.View mHostView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r30 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find method ");

        $r12 = r0.<android.view.View$DeclaredOnClickListener: java.lang.String mMethodName>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(View) in a parent or ancestor Context for android:onClick attribute defined on view ");

        $r15 = r0.<android.view.View$DeclaredOnClickListener: android.view.View mHostView>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

        catch java.lang.NoSuchMethodException from label02 to label03 with label07;
        catch java.lang.NoSuchMethodException from label04 to label05 with label07;
    }

    public void onClick(android.view.View)
    {
        android.view.View$DeclaredOnClickListener r0;
        java.lang.reflect.Method $r1, $r4;
        java.lang.Object[] $r2;
        android.content.Context $r3, $r7;
        android.view.View $r6, r13;
        java.lang.String $r8;
        java.lang.Throwable $r9, $r11;
        java.lang.IllegalStateException $r10, $r12;

        r0 := @this: android.view.View$DeclaredOnClickListener;

        r13 := @parameter0: android.view.View;

        $r1 = r0.<android.view.View$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod>;

        if $r1 != null goto label1;

        $r6 = r0.<android.view.View$DeclaredOnClickListener: android.view.View mHostView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.content.Context getContext()>();

        $r8 = r0.<android.view.View$DeclaredOnClickListener: java.lang.String mMethodName>;

        specialinvoke r0.<android.view.View$DeclaredOnClickListener: void resolveMethod(android.content.Context,java.lang.String)>($r7, $r8);

     label1:
        $r4 = r0.<android.view.View$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod>;

        $r3 = r0.<android.view.View$DeclaredOnClickListener: android.content.Context mResolvedContext>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r13;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r2);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not execute method for android:onClick", $r9);

        throw $r10;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not execute non-public method for android:onClick", $r11);

        throw $r12;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
}
