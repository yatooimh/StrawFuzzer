class android.view.ViewDebug$2 extends java.lang.Object implements android.view.ViewDebug$ViewOperation
{
    final android.view.View val$view;

    void <init>(android.view.View)
    {
        android.view.ViewDebug$2 r0;
        android.view.View r1;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: android.view.View;

        r0.<android.view.ViewDebug$2: android.view.View val$view> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void forceLayout(android.view.View)
    {
        android.view.ViewDebug$2 r0;
        int i0, i1;
        boolean $z0;
        android.view.View $r1, r2;
        android.view.ViewGroup r3;

        r0 := @this: android.view.ViewDebug$2;

        r2 := @parameter0: android.view.View;

        virtualinvoke r2.<android.view.View: void forceLayout()>();

        $z0 = r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        r3 = (android.view.ViewGroup) r2;

        i0 = virtualinvoke r3.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r3.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<android.view.ViewDebug$2: void forceLayout(android.view.View)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void pre()
    {
        android.view.ViewDebug$2 r0;
        android.view.View $r1;

        r0 := @this: android.view.ViewDebug$2;

        $r1 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        specialinvoke r0.<android.view.ViewDebug$2: void forceLayout(android.view.View)>($r1);

        return;
    }

    public void run()
    {
        android.view.ViewDebug$2 r0;
        android.view.View r1, $r2;
        int $i0, $i1;

        r0 := @this: android.view.ViewDebug$2;

        r1 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        $i1 = r1.<android.view.View: int mOldWidthMeasureSpec>;

        $r2 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        $i0 = $r2.<android.view.View: int mOldHeightMeasureSpec>;

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i1, $i0);

        return;
    }
}
