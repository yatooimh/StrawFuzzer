class android.view.ViewDebug$MethodPI extends android.view.ViewDebug$PropertyInfo
{

    void <init>(java.lang.reflect.Method, java.lang.Class)
    {
        android.view.ViewDebug$MethodPI r0;
        java.lang.reflect.Method r1;
        java.lang.Class r2, $r3;

        r0 := @this: android.view.ViewDebug$MethodPI;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        specialinvoke r0.<android.view.ViewDebug$PropertyInfo: void <init>(java.lang.Class,java.lang.reflect.AccessibleObject,java.lang.Class)>(r2, r1, $r3);

        return;
    }

    public java.lang.Object invoke(java.lang.Object) throws java.lang.Exception
    {
        android.view.ViewDebug$MethodPI r0;
        java.lang.Object r1, $r5;
        java.lang.reflect.AccessibleObject $r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Method $r4;

        r0 := @this: android.view.ViewDebug$MethodPI;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.view.ViewDebug$MethodPI: java.lang.reflect.AccessibleObject member>;

        $r4 = (java.lang.reflect.Method) $r2;

        $r3 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

        return $r5;
    }
}
