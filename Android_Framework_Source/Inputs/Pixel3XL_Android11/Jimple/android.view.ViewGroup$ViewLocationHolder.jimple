class android.view.ViewGroup$ViewLocationHolder extends java.lang.Object implements java.lang.Comparable
{
    public static final int COMPARISON_STRATEGY_LOCATION;
    public static final int COMPARISON_STRATEGY_STRIPE;
    private static final int MAX_POOL_SIZE;
    private static int sComparisonStrategy;
    private static final android.util.Pools$SynchronizedPool sPool;
    private int mLayoutDirection;
    private final android.graphics.Rect mLocation;
    private android.view.ViewGroup mRoot;
    public android.view.View mView;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        <android.view.ViewGroup$ViewLocationHolder: int MAX_POOL_SIZE> = 32;

        <android.view.ViewGroup$ViewLocationHolder: int COMPARISON_STRATEGY_STRIPE> = 1;

        <android.view.ViewGroup$ViewLocationHolder: int COMPARISON_STRATEGY_LOCATION> = 2;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(32);

        <android.view.ViewGroup$ViewLocationHolder: android.util.Pools$SynchronizedPool sPool> = $r0;

        <android.view.ViewGroup$ViewLocationHolder: int sComparisonStrategy> = 1;

        return;
    }

    void <init>()
    {
        android.view.ViewGroup$ViewLocationHolder r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation> = $r1;

        return;
    }

    private void clear()
    {
        android.view.ViewGroup$ViewLocationHolder r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        r0.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView> = null;

        r0.<android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup mRoot> = null;

        $r1 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

    private static int compareBoundsOfTree(android.view.ViewGroup$ViewLocationHolder, android.view.ViewGroup$ViewLocationHolder)
    {
        android.view.ViewGroup$ViewLocationHolder r0, $r21, $r23, r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r24, $r25, $r26, $r27, $r28, $r29;
        android.view.View $r14, $r15, $r17, $r19, r32, r33;
        android.view._$$Lambda$ViewGroup$ViewLocationHolder$QbO7cM0ULKe25a7bfXG3VH6DB0c $r16;
        android.view._$$Lambda$ViewGroup$ViewLocationHolder$AjKvqdj7SGGIzA5qrlZUuu71jl8 $r18;
        android.view.ViewGroup $r20, $r22;

        r0 := @parameter0: android.view.ViewGroup$ViewLocationHolder;

        r30 := @parameter1: android.view.ViewGroup$ViewLocationHolder;

        $i0 = <android.view.ViewGroup$ViewLocationHolder: int sComparisonStrategy>;

        if $i0 != 1 goto label02;

        $r26 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i17 = $r26.<android.graphics.Rect: int bottom>;

        $r27 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i16 = $r27.<android.graphics.Rect: int top>;

        $i18 = $i17 - $i16;

        if $i18 > 0 goto label01;

        return -1;

     label01:
        $r28 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i20 = $r28.<android.graphics.Rect: int top>;

        $r29 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i19 = $r29.<android.graphics.Rect: int bottom>;

        $i21 = $i20 - $i19;

        if $i21 < 0 goto label02;

        return 1;

     label02:
        $i1 = r0.<android.view.ViewGroup$ViewLocationHolder: int mLayoutDirection>;

        if $i1 != 0 goto label04;

        $r24 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i15 = $r24.<android.graphics.Rect: int left>;

        $r25 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i14 = $r25.<android.graphics.Rect: int left>;

        i22 = $i15 - $i14;

        if i22 == 0 goto label03;

        return i22;

     label03:
        goto label05;

     label04:
        $r3 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i3 = $r3.<android.graphics.Rect: int right>;

        $r4 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i2 = $r4.<android.graphics.Rect: int right>;

        i23 = $i3 - $i2;

        if i23 == 0 goto label05;

        $i13 = neg i23;

        return $i13;

     label05:
        $r5 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i5 = $r5.<android.graphics.Rect: int top>;

        $r6 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i4 = $r6.<android.graphics.Rect: int top>;

        i24 = $i5 - $i4;

        if i24 == 0 goto label06;

        return i24;

     label06:
        $r7 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i6 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        $r8 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i7 = virtualinvoke $r8.<android.graphics.Rect: int height()>();

        i25 = $i6 - $i7;

        if i25 == 0 goto label07;

        $i12 = neg i25;

        return $i12;

     label07:
        $r9 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i8 = virtualinvoke $r9.<android.graphics.Rect: int width()>();

        $r10 = r30.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        $i9 = virtualinvoke $r10.<android.graphics.Rect: int width()>();

        i26 = $i8 - $i9;

        if i26 == 0 goto label08;

        $i11 = neg i26;

        return $i11;

     label08:
        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        $r14 = r0.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        virtualinvoke $r14.<android.view.View: void getBoundsOnScreen(android.graphics.Rect,boolean)>($r11, 1);

        $r15 = r30.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        virtualinvoke $r15.<android.view.View: void getBoundsOnScreen(android.graphics.Rect,boolean)>($r12, 1);

        $r17 = r0.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        $r16 = new android.view._$$Lambda$ViewGroup$ViewLocationHolder$QbO7cM0ULKe25a7bfXG3VH6DB0c;

        specialinvoke $r16.<android.view._$$Lambda$ViewGroup$ViewLocationHolder$QbO7cM0ULKe25a7bfXG3VH6DB0c: void <init>(android.graphics.Rect,android.graphics.Rect)>($r13, $r11);

        r32 = virtualinvoke $r17.<android.view.View: android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View)>($r16, null);

        $r19 = r30.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        $r18 = new android.view._$$Lambda$ViewGroup$ViewLocationHolder$AjKvqdj7SGGIzA5qrlZUuu71jl8;

        specialinvoke $r18.<android.view._$$Lambda$ViewGroup$ViewLocationHolder$AjKvqdj7SGGIzA5qrlZUuu71jl8: void <init>(android.graphics.Rect,android.graphics.Rect)>($r13, $r12);

        r33 = virtualinvoke $r19.<android.view.View: android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View)>($r18, null);

        if r32 == null goto label09;

        if r33 == null goto label09;

        $r20 = r0.<android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup mRoot>;

        $r21 = staticinvoke <android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>($r20, r32);

        $r22 = r0.<android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup mRoot>;

        $r23 = staticinvoke <android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>($r22, r33);

        $i10 = staticinvoke <android.view.ViewGroup$ViewLocationHolder: int compareBoundsOfTree(android.view.ViewGroup$ViewLocationHolder,android.view.ViewGroup$ViewLocationHolder)>($r21, $r23);

        return $i10;

     label09:
        if r32 == null goto label10;

        return 1;

     label10:
        if r33 == null goto label11;

        return -1;

     label11:
        return 0;
    }

    private void init(android.view.ViewGroup, android.view.View)
    {
        android.view.ViewGroup$ViewLocationHolder r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.graphics.Rect r3;
        int $i0;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 = r0.<android.view.ViewGroup$ViewLocationHolder: android.graphics.Rect mLocation>;

        virtualinvoke r2.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, r3);

        r0.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView> = r2;

        r0.<android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup mRoot> = r1;

        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getLayoutDirection()>();

        r0.<android.view.ViewGroup$ViewLocationHolder: int mLayoutDirection> = $i0;

        return;
    }

    static boolean lambda$compareBoundsOfTree$0(android.graphics.Rect, android.graphics.Rect, android.view.View)
    {
        android.graphics.Rect r0, r1;
        android.view.View r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.view.View;

        virtualinvoke r2.<android.view.View: void getBoundsOnScreen(android.graphics.Rect,boolean)>(r0, 1);

        $z0 = virtualinvoke r0.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        $z1 = 1 ^ $z0;

        return $z1;
    }

    static boolean lambda$compareBoundsOfTree$1(android.graphics.Rect, android.graphics.Rect, android.view.View)
    {
        android.graphics.Rect r0, r1;
        android.view.View r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.view.View;

        virtualinvoke r2.<android.view.View: void getBoundsOnScreen(android.graphics.Rect,boolean)>(r0, 1);

        $z0 = virtualinvoke r0.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        $z1 = 1 ^ $z0;

        return $z1;
    }

    public static android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup, android.view.View)
    {
        android.view.ViewGroup r0;
        android.view.View r1;
        android.view.ViewGroup$ViewLocationHolder r2, $r5, r6;
        android.util.Pools$SynchronizedPool $r3;
        java.lang.Object $r4;

        r0 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        $r3 = <android.view.ViewGroup$ViewLocationHolder: android.util.Pools$SynchronizedPool sPool>;

        $r4 = virtualinvoke $r3.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r2 = (android.view.ViewGroup$ViewLocationHolder) $r4;

        r6 = r2;

        if r2 != null goto label1;

        $r5 = new android.view.ViewGroup$ViewLocationHolder;

        specialinvoke $r5.<android.view.ViewGroup$ViewLocationHolder: void <init>()>();

        r6 = $r5;

     label1:
        specialinvoke r6.<android.view.ViewGroup$ViewLocationHolder: void init(android.view.ViewGroup,android.view.View)>(r0, r1);

        return r6;
    }

    public static void setComparisonStrategy(int)
    {
        int i0;

        i0 := @parameter0: int;

        <android.view.ViewGroup$ViewLocationHolder: int sComparisonStrategy> = i0;

        return;
    }

    public int compareTo(android.view.ViewGroup$ViewLocationHolder)
    {
        android.view.ViewGroup$ViewLocationHolder r0, r1;
        int i0, $i1, $i2, $i3;
        android.view.View $r2, $r3;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        r1 := @parameter0: android.view.ViewGroup$ViewLocationHolder;

        if r1 != null goto label1;

        return 1;

     label1:
        i0 = staticinvoke <android.view.ViewGroup$ViewLocationHolder: int compareBoundsOfTree(android.view.ViewGroup$ViewLocationHolder,android.view.ViewGroup$ViewLocationHolder)>(r0, r1);

        if i0 == 0 goto label2;

        return i0;

     label2:
        $r2 = r0.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        $i1 = virtualinvoke $r2.<android.view.View: int getAccessibilityViewId()>();

        $r3 = r1.<android.view.ViewGroup$ViewLocationHolder: android.view.View mView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getAccessibilityViewId()>();

        $i3 = $i1 - $i2;

        return $i3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.view.ViewGroup$ViewLocationHolder r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.ViewGroup$ViewLocationHolder) r1;

        $i0 = virtualinvoke r0.<android.view.ViewGroup$ViewLocationHolder: int compareTo(android.view.ViewGroup$ViewLocationHolder)>($r2);

        return $i0;
    }

    public void recycle()
    {
        android.view.ViewGroup$ViewLocationHolder r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.ViewGroup$ViewLocationHolder;

        specialinvoke r0.<android.view.ViewGroup$ViewLocationHolder: void clear()>();

        $r1 = <android.view.ViewGroup$ViewLocationHolder: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }
}
