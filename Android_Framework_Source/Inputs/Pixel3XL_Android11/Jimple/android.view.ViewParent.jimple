public interface  android.view.ViewParent extends java.lang.Object
{

    public abstract void bringChildToFront(android.view.View);

    public abstract boolean canResolveLayoutDirection();

    public abstract boolean canResolveTextAlignment();

    public abstract boolean canResolveTextDirection();

    public abstract void childDrawableStateChanged(android.view.View);

    public abstract void childHasTransientStateChanged(android.view.View, boolean);

    public abstract void clearChildFocus(android.view.View);

    public abstract void createContextMenu(android.view.ContextMenu);

    public abstract android.view.View focusSearch(android.view.View, int);

    public abstract void focusableViewAvailable(android.view.View);

    public abstract boolean getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point);

    public abstract int getLayoutDirection();

    public abstract android.view.ViewParent getParent();

    public abstract android.view.ViewParent getParentForAccessibility();

    public abstract int getTextAlignment();

    public abstract int getTextDirection();

    public abstract void invalidateChild(android.view.View, android.graphics.Rect);

    public abstract android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect);

    public abstract boolean isLayoutDirectionResolved();

    public abstract boolean isLayoutRequested();

    public abstract boolean isTextAlignmentResolved();

    public abstract boolean isTextDirectionResolved();

    public abstract android.view.View keyboardNavigationClusterSearch(android.view.View, int);

    public abstract void notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int);

    public void onDescendantInvalidated(android.view.View, android.view.View)
    {
        android.view.ViewParent r0, $r3, $r4;
        android.view.View r1, r2;

        r0 := @this: android.view.ViewParent;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $r3 = interfaceinvoke r0.<android.view.ViewParent: android.view.ViewParent getParent()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke r0.<android.view.ViewParent: android.view.ViewParent getParent()>();

        interfaceinvoke $r4.<android.view.ViewParent: void onDescendantInvalidated(android.view.View,android.view.View)>(r1, r2);

     label1:
        return;
    }

    public void onDescendantUnbufferedRequested()
    {
        android.view.ViewParent r0, $r1, $r2;

        r0 := @this: android.view.ViewParent;

        $r1 = interfaceinvoke r0.<android.view.ViewParent: android.view.ViewParent getParent()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<android.view.ViewParent: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void onDescendantUnbufferedRequested()>();

     label1:
        return;
    }

    public abstract boolean onNestedFling(android.view.View, float, float, boolean);

    public abstract boolean onNestedPreFling(android.view.View, float, float);

    public abstract boolean onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle);

    public abstract void onNestedPreScroll(android.view.View, int, int, int[]);

    public abstract void onNestedScroll(android.view.View, int, int, int, int);

    public abstract void onNestedScrollAccepted(android.view.View, android.view.View, int);

    public abstract boolean onStartNestedScroll(android.view.View, android.view.View, int);

    public abstract void onStopNestedScroll(android.view.View);

    public abstract void recomputeViewAttributes(android.view.View);

    public abstract void requestChildFocus(android.view.View, android.view.View);

    public abstract boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean);

    public abstract void requestDisallowInterceptTouchEvent(boolean);

    public abstract void requestFitSystemWindows();

    public abstract void requestLayout();

    public abstract boolean requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);

    public abstract void requestTransparentRegion(android.view.View);

    public abstract boolean showContextMenuForChild(android.view.View);

    public abstract boolean showContextMenuForChild(android.view.View, float, float);

    public abstract android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback);

    public abstract android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback, int);

    public void subtractObscuredTouchableRegion(android.graphics.Region, android.view.View)
    {
        android.view.ViewParent r0;
        android.graphics.Region r1;
        android.view.View r2;

        r0 := @this: android.view.ViewParent;

        r1 := @parameter0: android.graphics.Region;

        r2 := @parameter1: android.view.View;

        return;
    }
}
