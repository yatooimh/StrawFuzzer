abstract class android.view.ViewRootImpl$AsyncInputStage extends android.view.ViewRootImpl$InputStage
{
    protected static final int DEFER;
    private android.view.ViewRootImpl$QueuedInputEvent mQueueHead;
    private int mQueueLength;
    private android.view.ViewRootImpl$QueuedInputEvent mQueueTail;
    private final java.lang.String mTraceCounter;
    final android.view.ViewRootImpl this$0;

    public void <init>(android.view.ViewRootImpl, android.view.ViewRootImpl$InputStage, java.lang.String)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        android.view.ViewRootImpl r1;
        android.view.ViewRootImpl$InputStage r2;
        java.lang.String r3;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: android.view.ViewRootImpl;

        r2 := @parameter1: android.view.ViewRootImpl$InputStage;

        r3 := @parameter2: java.lang.String;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage)>(r1, r2);

        r0.<android.view.ViewRootImpl$AsyncInputStage: java.lang.String mTraceCounter> = r3;

        return;
    }

    private void dequeue(android.view.ViewRootImpl$QueuedInputEvent, android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1, r2, $r3, $r4, $r6;
        int i0, $i1;
        java.lang.String $r5;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        r2 := @parameter1: android.view.ViewRootImpl$QueuedInputEvent;

        if r2 != null goto label1;

        $r6 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueHead> = $r6;

        goto label2;

     label1:
        $r3 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        r2.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext> = $r3;

     label2:
        $r4 = r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueTail>;

        if $r4 != r1 goto label3;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueTail> = r2;

     label3:
        r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext> = null;

        $i1 = r0.<android.view.ViewRootImpl$AsyncInputStage: int mQueueLength>;

        i0 = $i1 - 1;

        r0.<android.view.ViewRootImpl$AsyncInputStage: int mQueueLength> = i0;

        $r5 = r0.<android.view.ViewRootImpl$AsyncInputStage: java.lang.String mTraceCounter>;

        staticinvoke <android.os.Trace: void traceCounter(long,java.lang.String,int)>(4L, $r5, i0);

        return;
    }

    private void enqueue(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1, r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        r2 = r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueTail>;

        if r2 != null goto label1;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueHead> = r1;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueTail> = r1;

        goto label2;

     label1:
        r2.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext> = r1;

        r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueTail> = r1;

     label2:
        $i1 = r0.<android.view.ViewRootImpl$AsyncInputStage: int mQueueLength>;

        i0 = $i1 + 1;

        r0.<android.view.ViewRootImpl$AsyncInputStage: int mQueueLength> = i0;

        $r3 = r0.<android.view.ViewRootImpl$AsyncInputStage: java.lang.String mTraceCounter>;

        staticinvoke <android.os.Trace: void traceCounter(long,java.lang.String,int)>(4L, $r3, i0);

        return;
    }

    protected void apply(android.view.ViewRootImpl$QueuedInputEvent, int)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        int i0;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        i0 := @parameter1: int;

        if i0 != 3 goto label1;

        virtualinvoke r0.<android.view.ViewRootImpl$AsyncInputStage: void defer(android.view.ViewRootImpl$QueuedInputEvent)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void apply(android.view.ViewRootImpl$QueuedInputEvent,int)>(r1, i0);

     label2:
        return;
    }

    protected void defer(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        int $i0, $i1;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        $i0 = r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i1 = $i0 | 2;

        r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags> = $i1;

        specialinvoke r0.<android.view.ViewRootImpl$AsyncInputStage: void enqueue(android.view.ViewRootImpl$QueuedInputEvent)>(r1);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        java.lang.String r1, $r4;
        java.io.PrintWriter r2;
        java.lang.Class $r3;
        int $i0;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": mQueueLength=");

        $i0 = r0.<android.view.ViewRootImpl$AsyncInputStage: int mQueueLength>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i0);

        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        return;
    }

    protected void forward(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$AsyncInputStage r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.InputEvent $r1, $r2, $r3;
        android.view.ViewRootImpl$QueuedInputEvent r4, r5, r6, r7, r8, r9;
        boolean z0, z1;

        r0 := @this: android.view.ViewRootImpl$AsyncInputStage;

        r4 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        $i1 = r4.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i2 = $i1 & -3;

        r4.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags> = $i2;

        r5 = r0.<android.view.ViewRootImpl$AsyncInputStage: android.view.ViewRootImpl$QueuedInputEvent mQueueHead>;

        if r5 != null goto label01;

        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r4);

        return;

     label01:
        $r1 = r4.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        i0 = virtualinvoke $r1.<android.view.InputEvent: int getDeviceId()>();

        r6 = null;

        z0 = 0;

     label02:
        if r5 == null goto label04;

        if r5 == r4 goto label04;

        z1 = z0;

        if z0 != 0 goto label03;

        z1 = z0;

        $r3 = r5.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $i6 = virtualinvoke $r3.<android.view.InputEvent: int getDeviceId()>();

        if i0 != $i6 goto label03;

        z1 = 1;

     label03:
        r6 = r5;

        r5 = r5.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        z0 = z1;

        goto label02;

     label04:
        if z0 == 0 goto label06;

        if r5 != null goto label05;

        specialinvoke r0.<android.view.ViewRootImpl$AsyncInputStage: void enqueue(android.view.ViewRootImpl$QueuedInputEvent)>(r4);

     label05:
        return;

     label06:
        r7 = r5;

        if r5 == null goto label07;

        r7 = r5.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        specialinvoke r0.<android.view.ViewRootImpl$AsyncInputStage: void dequeue(android.view.ViewRootImpl$QueuedInputEvent,android.view.ViewRootImpl$QueuedInputEvent)>(r4, r6);

     label07:
        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r4);

        r8 = r7;

     label08:
        if r8 == null goto label11;

        $r2 = r8.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $i3 = virtualinvoke $r2.<android.view.InputEvent: int getDeviceId()>();

        if i0 != $i3 goto label10;

        $i4 = r8.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label09;

        goto label11;

     label09:
        r9 = r8.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        specialinvoke r0.<android.view.ViewRootImpl$AsyncInputStage: void dequeue(android.view.ViewRootImpl$QueuedInputEvent,android.view.ViewRootImpl$QueuedInputEvent)>(r8, r6);

        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r8);

        r8 = r9;

        goto label08;

     label10:
        r6 = r8;

        r8 = r8.<android.view.ViewRootImpl$QueuedInputEvent: android.view.ViewRootImpl$QueuedInputEvent mNext>;

        goto label08;

     label11:
        return;
    }

    public static void <clinit>()
    {
        <android.view.ViewRootImpl$AsyncInputStage: int DEFER> = 3;

        return;
    }
}
