final class android.view.ViewRootImpl$ConsumeBatchedInputRunnable extends java.lang.Object implements java.lang.Runnable
{
    final android.view.ViewRootImpl this$0;

    void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl$ConsumeBatchedInputRunnable r0;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootImpl$ConsumeBatchedInputRunnable;

        r1 := @parameter0: android.view.ViewRootImpl;

        r0.<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.view.ViewRootImpl$ConsumeBatchedInputRunnable r0;
        android.view.ViewRootImpl r1, $r2, $r4;
        android.view.Choreographer $r3;
        long $l0;
        boolean $z0;

        r0 := @this: android.view.ViewRootImpl$ConsumeBatchedInputRunnable;

        $r2 = r0.<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: android.view.ViewRootImpl this$0>;

        $r2.<android.view.ViewRootImpl: boolean mConsumeBatchedInputScheduled> = 0;

        r1 = r0.<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: android.view.ViewRootImpl this$0>;

        $r3 = r1.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        $l0 = virtualinvoke $r3.<android.view.Choreographer: long getFrameTimeNanos()>();

        $z0 = virtualinvoke r1.<android.view.ViewRootImpl: boolean doConsumeBatchedInput(long)>($l0);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: android.view.ViewRootImpl this$0>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void scheduleConsumeBatchedInput()>();

     label1:
        return;
    }
}
