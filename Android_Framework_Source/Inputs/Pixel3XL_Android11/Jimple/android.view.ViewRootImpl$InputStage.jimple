abstract class android.view.ViewRootImpl$InputStage extends java.lang.Object
{
    protected static final int FINISH_HANDLED;
    protected static final int FINISH_NOT_HANDLED;
    protected static final int FORWARD;
    private final android.view.ViewRootImpl$InputStage mNext;
    private java.lang.String mTracePrefix;
    final android.view.ViewRootImpl this$0;

    public void <init>(android.view.ViewRootImpl, android.view.ViewRootImpl$InputStage)
    {
        android.view.ViewRootImpl$InputStage r0, r2;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl;

        r2 := @parameter1: android.view.ViewRootImpl$InputStage;

        r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl$InputStage mNext> = r2;

        return;
    }

    private boolean isBack(android.view.InputEvent)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.InputEvent r1;
        boolean z0, z1;
        android.view.KeyEvent $r2;
        int $i0;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.InputEvent;

        z0 = r1 instanceof android.view.KeyEvent;

        z1 = 0;

        if z0 == 0 goto label2;

        $r2 = (android.view.KeyEvent) r1;

        $i0 = virtualinvoke $r2.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 4 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    private void traceEvent(android.view.ViewRootImpl$QueuedInputEvent, long)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        long l0;
        boolean $z0;
        java.lang.String $r3, $r5, $r9, $r11, $r13;
        java.lang.StringBuilder $r4;
        android.view.InputEvent $r8;
        int $i1;
        java.lang.Class $r12;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        l0 := @parameter1: long;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.view.ViewRootImpl$InputStage: java.lang.String mTracePrefix>;

        if $r3 != null goto label2;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<android.view.ViewRootImpl$InputStage: java.lang.String mTracePrefix> = $r13;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.view.ViewRootImpl$InputStage: java.lang.String mTracePrefix>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=0x");

        $r8 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $i1 = virtualinvoke $r8.<android.view.InputEvent: int getId()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(l0, $r11);

        return;
    }

    protected void apply(android.view.ViewRootImpl$QueuedInputEvent, int)
    {
        android.view.ViewRootImpl$InputStage r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.view.ViewRootImpl$QueuedInputEvent r6;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r6 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r6);

        goto label3;

     label1:
        if i0 != 1 goto label2;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void finish(android.view.ViewRootImpl$QueuedInputEvent,boolean)>(r6, 1);

        goto label3;

     label2:
        if i0 != 2 goto label4;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void finish(android.view.ViewRootImpl$QueuedInputEvent,boolean)>(r6, 0);

     label3:
        return;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid result: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public final void deliver(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$InputStage r0;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.Throwable $r1;
        android.view.ViewRootImpl$QueuedInputEvent r2;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r2 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        $i1 = r2.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label1;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r2);

        goto label5;

     label1:
        $z0 = virtualinvoke r0.<android.view.ViewRootImpl$InputStage: boolean shouldDropInputEvent(android.view.ViewRootImpl$QueuedInputEvent)>(r2);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void finish(android.view.ViewRootImpl$QueuedInputEvent,boolean)>(r2, 0);

        goto label5;

     label2:
        specialinvoke r0.<android.view.ViewRootImpl$InputStage: void traceEvent(android.view.ViewRootImpl$QueuedInputEvent,long)>(r2, 8L);

     label3:
        i0 = virtualinvoke r0.<android.view.ViewRootImpl$InputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>(r2);

     label4:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void apply(android.view.ViewRootImpl$QueuedInputEvent,int)>(r2, i0);

     label5:
        return;

     label6:
        $r1 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        throw $r1;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.ViewRootImpl$InputStage r0, r3;
        java.lang.String r1;
        java.io.PrintWriter r2;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        r3 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl$InputStage mNext>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewRootImpl$InputStage: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

     label1:
        return;
    }

    protected void finish(android.view.ViewRootImpl$QueuedInputEvent, boolean)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        z0 := @parameter1: boolean;

        $i0 = r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i1 = $i0 | 4;

        r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags> = $i1;

        if z0 == 0 goto label1;

        $i2 = r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags>;

        $i3 = $i2 | 8;

        r1.<android.view.ViewRootImpl$QueuedInputEvent: int mFlags> = $i3;

     label1:
        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void forward(android.view.ViewRootImpl$QueuedInputEvent)>(r1);

        return;
    }

    protected void forward(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        virtualinvoke r0.<android.view.ViewRootImpl$InputStage: void onDeliverToNext(android.view.ViewRootImpl$QueuedInputEvent)>(r1);

        return;
    }

    protected void onDeliverToNext(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$InputStage r0, r2;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        r2 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl$InputStage mNext>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl$InputStage: void deliver(android.view.ViewRootImpl$QueuedInputEvent)>(r1);

        goto label2;

     label1:
        $r3 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        staticinvoke <android.view.ViewRootImpl: void access$1800(android.view.ViewRootImpl,android.view.ViewRootImpl$QueuedInputEvent)>($r3, r1);

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.view.ViewRootImpl$InputStage r0, r1;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl$InputStage mNext>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl$InputStage: void onDetachedFromWindow()>();

     label1:
        return;
    }

    protected int onProcess(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        return 0;
    }

    protected void onWindowFocusChanged(boolean)
    {
        android.view.ViewRootImpl$InputStage r0, r1;
        boolean z0;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        z0 := @parameter0: boolean;

        r1 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl$InputStage mNext>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl$InputStage: void onWindowFocusChanged(boolean)>(z0);

     label1:
        return;
    }

    protected boolean shouldDropInputEvent(android.view.ViewRootImpl$QueuedInputEvent)
    {
        android.view.ViewRootImpl$InputStage r0;
        android.view.ViewRootImpl$QueuedInputEvent r1;
        android.view.ViewRootImpl $r2, $r4, $r10, $r11, $r13, $r20, $r26, $r27, $r31, $r32;
        android.view.View $r3;
        java.lang.StringBuilder $r5, $r14, $r21;
        android.view.InputEvent $r7, $r16, $r19, $r23, $r28, $r29, $r30, $r33;
        java.lang.String $r9, $r18, $r25, r34, r36, r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.view.View$AttachInfo $r12;

        r0 := @this: android.view.ViewRootImpl$InputStage;

        r1 := @parameter0: android.view.ViewRootImpl$QueuedInputEvent;

        $r2 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 == null goto label7;

        $r10 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $z0 = $r10.<android.view.ViewRootImpl: boolean mAdded>;

        if $z0 != 0 goto label1;

        goto label7;

     label1:
        $r11 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $r12 = $r11.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r12.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z1 != 0 goto label2;

        $r30 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $z6 = virtualinvoke $r30.<android.view.InputEvent: boolean isFromSource(int)>(2);

        if $z6 != 0 goto label2;

        $r31 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $z7 = staticinvoke <android.view.ViewRootImpl: boolean access$2000(android.view.ViewRootImpl)>($r31);

        if $z7 == 0 goto label5;

     label2:
        $r32 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $z8 = $r32.<android.view.ViewRootImpl: boolean mStopped>;

        if $z8 != 0 goto label5;

        $r26 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $z2 = $r26.<android.view.ViewRootImpl: boolean mIsAmbientMode>;

        if $z2 == 0 goto label3;

        $r29 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $z5 = virtualinvoke $r29.<android.view.InputEvent: boolean isFromSource(int)>(1);

        if $z5 == 0 goto label5;

     label3:
        $r27 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        $z3 = $r27.<android.view.ViewRootImpl: boolean mPausedForTransition>;

        if $z3 == 0 goto label4;

        $r28 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $z4 = specialinvoke r0.<android.view.ViewRootImpl$InputStage: boolean isBack(android.view.InputEvent)>($r28);

        if $z4 != 0 goto label4;

        goto label5;

     label4:
        return 0;

     label5:
        $r33 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        $z9 = staticinvoke <android.view.ViewRootImpl: boolean isTerminalInputEvent(android.view.InputEvent)>($r33);

        if $z9 == 0 goto label6;

        $r19 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        virtualinvoke $r19.<android.view.InputEvent: void cancel()>();

        $r20 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        r34 = staticinvoke <android.view.ViewRootImpl: java.lang.String access$1900(android.view.ViewRootImpl)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelling event due to no window focus: ");

        $r23 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r34, $r25);

        return 0;

     label6:
        $r13 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        r36 = staticinvoke <android.view.ViewRootImpl: java.lang.String access$1900(android.view.ViewRootImpl)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping event due to no window focus: ");

        $r16 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r36, $r18);

        return 1;

     label7:
        $r4 = r0.<android.view.ViewRootImpl$InputStage: android.view.ViewRootImpl this$0>;

        r38 = staticinvoke <android.view.ViewRootImpl: java.lang.String access$1900(android.view.ViewRootImpl)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping event due to root view being removed: ");

        $r7 = r1.<android.view.ViewRootImpl$QueuedInputEvent: android.view.InputEvent mEvent>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r38, $r9);

        return 1;
    }

    public static void <clinit>()
    {
        <android.view.ViewRootImpl$InputStage: int FORWARD> = 0;

        <android.view.ViewRootImpl$InputStage: int FINISH_NOT_HANDLED> = 2;

        <android.view.ViewRootImpl$InputStage: int FINISH_HANDLED> = 1;

        return;
    }
}
