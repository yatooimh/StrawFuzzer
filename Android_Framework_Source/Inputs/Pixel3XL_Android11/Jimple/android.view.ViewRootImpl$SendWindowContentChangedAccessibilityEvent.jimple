class android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent extends java.lang.Object implements java.lang.Runnable
{
    private int mChangeTypes;
    public long mLastEventTimeMillis;
    public java.lang.StackTraceElement[] mOrigin;
    public android.view.View mSource;
    final android.view.ViewRootImpl this$0;

    private void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent r0;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent;

        r1 := @parameter0: android.view.ViewRootImpl;

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes> = 0;

        return;
    }

    void <init>(android.view.ViewRootImpl, android.view.ViewRootImpl$1)
    {
        android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent r0;
        android.view.ViewRootImpl r1;
        android.view.ViewRootImpl$1 r2;

        r0 := @this: android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent;

        r1 := @parameter0: android.view.ViewRootImpl;

        r2 := @parameter1: android.view.ViewRootImpl$1;

        specialinvoke r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void <init>(android.view.ViewRootImpl)>(r1);

        return;
    }

    public void removeCallbacksAndRun()
    {
        android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent r0;
        android.view.ViewRootImpl $r1;
        android.view.ViewRootImpl$ViewRootHandler $r2;

        r0 := @this: android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent;

        $r1 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        virtualinvoke $r2.<android.view.ViewRootImpl$ViewRootHandler: void removeCallbacks(java.lang.Runnable)>(r0);

        virtualinvoke r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void run()>();

        return;
    }

    public void run()
    {
        android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.ViewRootImpl $r3;
        android.content.Context $r4;
        android.view.accessibility.AccessibilityManager $r5;
        boolean $z0;
        long $l0;
        int $i1;

        r0 := @this: android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent;

        r1 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource>;

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource> = null;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ViewRootImpl", "Accessibility content change has no source");

        return;

     label1:
        $r3 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        $r4 = $r3.<android.view.ViewRootImpl: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r4);

        $z0 = virtualinvoke $r5.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: long mLastEventTimeMillis> = $l0;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(2048);

        $i1 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>($i1);

        virtualinvoke r1.<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r2);

        goto label3;

     label2:
        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: long mLastEventTimeMillis> = 0L;

     label3:
        virtualinvoke r1.<android.view.View: void resetSubtreeAccessibilityStateChanged()>();

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes> = 0;

        return;
    }

    public void runOrPost(android.view.View, int)
    {
        android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent r0;
        int i0, $i7, $i8;
        android.view.View r1, $r12, r13, r14, r15;
        long l1, l2, $l3, $l4, $l6;
        android.view.ViewRootImpl $r2, $r6, $r8, $r10;
        android.view.ViewRootImpl$ViewRootHandler $r3, $r7, $r11;
        android.os.Looper $r4, $r5;
        byte $b5;
        android.view.ViewRootImpl$CalledFromWrongThreadException $r9;

        r0 := @this: android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent;

        r13 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        $r4 = virtualinvoke $r3.<android.view.ViewRootImpl$ViewRootHandler: android.os.Looper getLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 == $r5 goto label1;

        $r9 = new android.view.ViewRootImpl$CalledFromWrongThreadException;

        specialinvoke $r9.<android.view.ViewRootImpl$CalledFromWrongThreadException: void <init>(java.lang.String)>("Only the original thread that created a view hierarchy can touch its views.");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewRootImpl", "Accessibility content change on non-UI thread. Future Android versions will throw an exception.", $r9);

        $r10 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        $r11 = $r10.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        virtualinvoke $r11.<android.view.ViewRootImpl$ViewRootHandler: void removeCallbacks(java.lang.Runnable)>(r0);

        $r12 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource>;

        if $r12 == null goto label1;

        virtualinvoke r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void run()>();

     label1:
        r14 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource>;

        if r14 == null goto label4;

        $r8 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        r1 = staticinvoke <android.view.ViewRootImpl: android.view.View access$4700(android.view.ViewRootImpl,android.view.View,android.view.View)>($r8, r14, r13);

        r15 = r1;

        if r1 == null goto label2;

        r15 = virtualinvoke r1.<android.view.View: android.view.View getSelfOrParentImportantForA11y()>();

     label2:
        if r15 == null goto label3;

        r13 = r15;

        goto label3;

     label3:
        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource> = r13;

        $i7 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes>;

        $i8 = $i7 | i0;

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes> = $i8;

        return;

     label4:
        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.View mSource> = r13;

        r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: int mChangeTypes> = i0;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: long mLastEventTimeMillis>;

        l1 = $l3 - $l4;

        l2 = staticinvoke <android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>();

        $b5 = l1 cmp l2;

        if $b5 < 0 goto label5;

        virtualinvoke r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void removeCallbacksAndRun()>();

        goto label6;

     label5:
        $r6 = r0.<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: android.view.ViewRootImpl this$0>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        $l6 = l2 - l1;

        virtualinvoke $r7.<android.view.ViewRootImpl$ViewRootHandler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l6);

     label6:
        return;
    }
}
