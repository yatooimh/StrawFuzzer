class android.view.ViewRootImpl$W extends android.view.IWindow$Stub
{
    private final java.lang.ref.WeakReference mViewAncestor;
    private final android.view.IWindowSession mWindowSession;

    void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        android.view.IWindowSession $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<android.view.IWindow$Stub: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor> = $r2;

        $r3 = r1.<android.view.ViewRootImpl: android.view.IWindowSession mWindowSession>;

        r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession> = $r3;

        return;
    }

    private static int checkCallingPermission(java.lang.String)
    {
        int i0, $i1, $i2;
        android.app.IActivityManager $r0;
        android.os.RemoteException $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = interfaceinvoke $r0.<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>(r2, $i1, $i2);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        android.view.ViewRootImpl$W r0;
        java.lang.String r1;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)>(r1);

     label1:
        return;
    }

    public void dispatchAppVisibility(boolean)
    {
        android.view.ViewRootImpl$W r0;
        boolean z0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)>(z0);

     label1:
        return;
    }

    public void dispatchDragEvent(android.view.DragEvent)
    {
        android.view.ViewRootImpl$W r0;
        android.view.DragEvent r1;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.DragEvent;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)>(r1);

     label1:
        return;
    }

    public void dispatchGetNewSurface()
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchGetNewSurface()>();

     label1:
        return;
    }

    public void dispatchPointerCaptureChanged(boolean)
    {
        android.view.ViewRootImpl$W r0;
        boolean z0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchPointerCaptureChanged(boolean)>(z0);

     label1:
        return;
    }

    public void dispatchSystemUiVisibilityChanged(int, int, int, int)
    {
        android.view.ViewRootImpl$W r0;
        int i0, i1, i2, i3;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        android.view.ViewRootImpl$W r0;
        int i0, i1, i2;
        android.os.Bundle r1;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;
        java.lang.String r5;

        r0 := @this: android.view.ViewRootImpl$W;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label4;

     label1:
        $r2 = r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession>;

        $r3 = virtualinvoke r0.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>($r3, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWallpaperOffsets(float, float, float, float, float, boolean)
    {
        android.view.ViewRootImpl$W r0;
        float f0, f1, f2, f3, f4;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label4;

     label1:
        $r2 = r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession>;

        $r3 = virtualinvoke r0.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWindowShown()
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchWindowShown()>();

     label1:
        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.view.ViewRootImpl$W r0;
        android.view.View r1;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        int $i0, $i1, $i2;
        java.lang.String $r7, r12, r13;
        java.lang.Throwable $r8, $r9, $r10, $r11;
        android.os.ParcelFileDescriptor r14;
        android.view.ViewRootImpl r15;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream r16, r17, r24;
        java.lang.StringBuilder r25;
        java.lang.SecurityException r26;
        java.io.IOException r27, r28, r29;

        r0 := @this: android.view.ViewRootImpl$W;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        r14 := @parameter2: android.os.ParcelFileDescriptor;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r15 = (android.view.ViewRootImpl) $r4;

        if r15 == null goto label21;

        r1 = r15.<android.view.ViewRootImpl: android.view.View mView>;

        if r1 == null goto label21;

        $i0 = staticinvoke <android.view.ViewRootImpl$W: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 != 0 goto label20;

        r16 = null;

        r17 = null;

     label01:
        r24 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

     label02:
        r16 = null;

        r17 = null;

     label03:
        specialinvoke r24.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r14);

     label04:
        r16 = r24;

        r17 = r24;

     label05:
        staticinvoke <android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)>(r1, r12, r13, r24);

     label06:
        virtualinvoke r24.<java.io.OutputStream: void close()>();

     label07:
        goto label13;

     label08:
        $r8 := @caughtexception;

        goto label15;

     label09:
        $r11 := @caughtexception;

        r16 = r17;

     label10:
        r27 = (java.io.IOException) $r11;

        virtualinvoke r27.<java.io.IOException: void printStackTrace()>();

     label11:
        if r17 == null goto label21;

     label12:
        virtualinvoke r17.<java.io.OutputStream: void close()>();

     label13:
        goto label21;

     label14:
        $r10 := @caughtexception;

        r28 = (java.io.IOException) $r10;

        virtualinvoke r28.<java.io.IOException: void printStackTrace()>();

        goto label13;

     label15:
        if r16 == null goto label19;

     label16:
        virtualinvoke r16.<java.io.OutputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r9 := @caughtexception;

        r29 = (java.io.IOException) $r9;

        virtualinvoke r29.<java.io.IOException: void printStackTrace()>();

     label19:
        throw $r8;

     label20:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insufficient permissions to invoke executeCommand() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r26 = new java.lang.SecurityException;

        $r7 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw r26;

     label21:
        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public void hideInsets(int, boolean)
    {
        android.view.ViewRootImpl$W r0;
        int i0;
        boolean z0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        staticinvoke <android.view.ViewRootImpl: void access$4600(android.view.ViewRootImpl,int,boolean)>(r1, i0, z0);

     label1:
        return;
    }

    public void insetsChanged(android.view.InsetsState)
    {
        android.view.ViewRootImpl$W r0;
        android.view.InsetsState r1;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.InsetsState;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        staticinvoke <android.view.ViewRootImpl: void access$4300(android.view.ViewRootImpl,android.view.InsetsState)>(r2, r1);

     label1:
        return;
    }

    public void insetsControlChanged(android.view.InsetsState, android.view.InsetsSourceControl[])
    {
        android.view.ViewRootImpl$W r0;
        android.view.InsetsState r1;
        android.view.InsetsSourceControl[] r2;
        android.view.ViewRootImpl r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.InsetsState;

        r2 := @parameter1: android.view.InsetsSourceControl[];

        $r4 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.ViewRootImpl) $r5;

        if r3 == null goto label1;

        staticinvoke <android.view.ViewRootImpl: void access$4400(android.view.ViewRootImpl,android.view.InsetsState,android.view.InsetsSourceControl[])>(r3, r1, r2);

     label1:
        return;
    }

    public void locationInParentDisplayChanged(android.graphics.Point)
    {
        android.view.ViewRootImpl$W r0;
        android.graphics.Point r1;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.graphics.Point;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchLocationInParentDisplayChanged(android.graphics.Point)>(r1);

     label1:
        return;
    }

    public void moved(int, int)
    {
        android.view.ViewRootImpl$W r0;
        int i0, i1;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchMoved(int,int)>(i0, i1);

     label1:
        return;
    }

    public void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver, int)
    {
        android.view.ViewRootImpl$W r0;
        com.android.internal.os.IResultReceiver r1;
        int i0;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchRequestKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>(r1, i0);

     label1:
        return;
    }

    public void requestScrollCapture(android.view.IScrollCaptureController)
    {
        android.view.ViewRootImpl$W r0;
        android.view.IScrollCaptureController r1;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.IScrollCaptureController;

        $r3 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchScrollCaptureRequest(android.view.IScrollCaptureController)>(r1);

     label1:
        return;
    }

    public void resized(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.util.MergedConfiguration, android.graphics.Rect, boolean, boolean, int, android.view.DisplayCutout$ParcelableWrapper)
    {
        android.view.ViewRootImpl$W r0;
        android.graphics.Rect r1, r2, r3, r4, r6;
        boolean z0, z1, z2;
        android.util.MergedConfiguration r5;
        int i0;
        android.view.DisplayCutout$ParcelableWrapper r7;
        android.view.ViewRootImpl r8;
        java.lang.ref.WeakReference $r9;
        java.lang.Object $r10;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.util.MergedConfiguration;

        r6 := @parameter6: android.graphics.Rect;

        z1 := @parameter7: boolean;

        z2 := @parameter8: boolean;

        i0 := @parameter9: int;

        r7 := @parameter10: android.view.DisplayCutout$ParcelableWrapper;

        $r9 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r10 = virtualinvoke $r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r8 = (android.view.ViewRootImpl) $r10;

        if r8 == null goto label1;

        staticinvoke <android.view.ViewRootImpl: void access$4200(android.view.ViewRootImpl,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.util.MergedConfiguration,android.graphics.Rect,boolean,boolean,int,android.view.DisplayCutout$ParcelableWrapper)>(r8, r1, r2, r3, r4, z0, r5, r6, z1, z2, i0, r7);

     label1:
        return;
    }

    public void showInsets(int, boolean)
    {
        android.view.ViewRootImpl$W r0;
        int i0;
        boolean z0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        staticinvoke <android.view.ViewRootImpl: void access$4500(android.view.ViewRootImpl,int,boolean)>(r1, i0, z0);

     label1:
        return;
    }

    public void updatePointerIcon(float, float)
    {
        android.view.ViewRootImpl$W r0;
        float f0, f1;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void updatePointerIcon(float,float)>(f0, f1);

     label1:
        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.ViewRootImpl$W r0;
        boolean z0, z1;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>(z0, z1);

     label1:
        return;
    }
}
