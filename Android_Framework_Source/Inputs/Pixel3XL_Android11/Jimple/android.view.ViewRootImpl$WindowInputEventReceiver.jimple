final class android.view.ViewRootImpl$WindowInputEventReceiver extends android.view.InputEventReceiver
{
    final android.view.ViewRootImpl this$0;

    public void <init>(android.view.ViewRootImpl, android.view.InputChannel, android.os.Looper)
    {
        android.view.ViewRootImpl$WindowInputEventReceiver r0;
        android.view.ViewRootImpl r1;
        android.view.InputChannel r2;
        android.os.Looper r3;

        r0 := @this: android.view.ViewRootImpl$WindowInputEventReceiver;

        r1 := @parameter0: android.view.ViewRootImpl;

        r2 := @parameter1: android.view.InputChannel;

        r3 := @parameter2: android.os.Looper;

        r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>(r2, r3);

        return;
    }

    public void dispose()
    {
        android.view.ViewRootImpl$WindowInputEventReceiver r0;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.ViewRootImpl$WindowInputEventReceiver;

        $r1 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        virtualinvoke $r1.<android.view.ViewRootImpl: void unscheduleConsumeBatchedInput()>();

        specialinvoke r0.<android.view.InputEventReceiver: void dispose()>();

        return;
    }

    public void onBatchedInputEventPending(int)
    {
        android.view.ViewRootImpl$WindowInputEventReceiver r0;
        android.view.ViewRootImpl $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z3, z4;
        int $i0, $i1, i2;

        r0 := @this: android.view.ViewRootImpl$WindowInputEventReceiver;

        i2 := @parameter0: int;

        $r1 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $z0 = $r1.<android.view.ViewRootImpl: boolean mUnbufferedInputDispatch>;

        if $z0 != 0 goto label2;

        $r5 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $i0 = $r5.<android.view.ViewRootImpl: int mUnbufferedInputSource>;

        $i1 = $i0 & i2;

        if $i1 != 0 goto label2;

        $r6 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $z3 = $r6.<android.view.ViewRootImpl: boolean mStopped>;

        if $z3 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        if z4 == 0 goto label5;

        $r3 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $z1 = $r3.<android.view.ViewRootImpl: boolean mConsumeBatchedInputScheduled>;

        if $z1 == 0 goto label4;

        $r4 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void unscheduleConsumeBatchedInput()>();

     label4:
        virtualinvoke r0.<android.view.ViewRootImpl$WindowInputEventReceiver: boolean consumeBatchedInputEvents(long)>(-1L);

        return;

     label5:
        $r2 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        virtualinvoke $r2.<android.view.ViewRootImpl: void scheduleConsumeBatchedInput()>();

        return;
    }

    public void onFocusEvent(boolean, boolean)
    {
        android.view.ViewRootImpl$WindowInputEventReceiver r0;
        boolean z0, z1;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.ViewRootImpl$WindowInputEventReceiver;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        virtualinvoke $r1.<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>(z0, z1);

        return;
    }

    public void onInputEvent(android.view.InputEvent)
    {
        android.view.ViewRootImpl$WindowInputEventReceiver r0;
        java.util.List r1;
        android.view.ViewRootImpl $r2, $r4, $r5;
        android.view.InputEventCompatProcessor $r3;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r6;
        android.view.InputEvent $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: android.view.ViewRootImpl$WindowInputEventReceiver;

        r9 := @parameter0: android.view.InputEvent;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "processInputEventForCompatibility");

     label1:
        $r2 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.InputEventCompatProcessor access$4000(android.view.ViewRootImpl)>($r2);

        r1 = virtualinvoke $r3.<android.view.InputEventCompatProcessor: java.util.List processInputEventForCompatibility(android.view.InputEvent)>(r9);

     label2:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        if r1 == null goto label6;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.view.ViewRootImpl$WindowInputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>(r9, 1);

        goto label7;

     label3:
        i1 = 0;

     label4:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r5 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (android.view.InputEvent) $r6;

        virtualinvoke $r5.<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int,boolean)>($r7, r0, 64, 1);

        i1 = i1 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        $r4 = r0.<android.view.ViewRootImpl$WindowInputEventReceiver: android.view.ViewRootImpl this$0>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int,boolean)>(r9, r0, 0, 1);

     label7:
        return;

     label8:
        $r8 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
    }
}
