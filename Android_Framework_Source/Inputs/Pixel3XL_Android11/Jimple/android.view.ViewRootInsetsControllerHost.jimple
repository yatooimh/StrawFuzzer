public class android.view.ViewRootInsetsControllerHost extends java.lang.Object implements android.view.InsetsController$Host
{
    private final java.lang.String TAG;
    private android.view.SyncRtSurfaceTransactionApplier mApplier;
    private final android.view.ViewRootImpl mViewRoot;

    public void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ViewRootInsetsControllerHost: java.lang.String TAG> = "VRInsetsControllerHost";

        r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot> = r1;

        return;
    }

    static android.view.ViewRootImpl access$000(android.view.ViewRootInsetsControllerHost)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1;

        r0 := @parameter0: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        return $r1;
    }

    static void lambda$releaseSurfaceControlFromRt$0(android.view.SurfaceControl, long)
    {
        android.view.SurfaceControl r0;
        long l0;

        r0 := @parameter0: android.view.SurfaceControl;

        l0 := @parameter1: long;

        virtualinvoke r0.<android.view.SurfaceControl: void release()>();

        return;
    }

    public void addOnPreDrawRunnable(java.lang.Runnable)
    {
        android.view.ViewRootInsetsControllerHost r0;
        java.lang.Runnable r1;
        android.view.ViewRootImpl $r2, $r4, $r8;
        android.view.View $r3, $r5, $r9;
        android.view.ViewTreeObserver $r6;
        android.view.ViewRootInsetsControllerHost$1 $r7;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View mView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r7 = new android.view.ViewRootInsetsControllerHost$1;

        specialinvoke $r7.<android.view.ViewRootInsetsControllerHost$1: void <init>(android.view.ViewRootInsetsControllerHost,java.lang.Runnable)>(r0, r1);

        virtualinvoke $r6.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r7);

        $r8 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r9 = $r8.<android.view.ViewRootImpl: android.view.View mView>;

        virtualinvoke $r9.<android.view.View: void invalidate()>();

        return;
    }

    public transient void applySurfaceParams(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[] r1;
        android.view.ViewRootImpl $r2, $r6, $r12;
        android.view.View $r3, $r7, $r13;
        java.lang.IllegalStateException $r4;
        android.view.SyncRtSurfaceTransactionApplier $r5, $r9, $r10, $r11;
        boolean $z0;
        android.view.SurfaceControl$Transaction $r8;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[];

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 == null goto label4;

        $r5 = r0.<android.view.ViewRootInsetsControllerHost: android.view.SyncRtSurfaceTransactionApplier mApplier>;

        if $r5 != null goto label1;

        $r11 = new android.view.SyncRtSurfaceTransactionApplier;

        $r12 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r13 = $r12.<android.view.ViewRootImpl: android.view.View mView>;

        specialinvoke $r11.<android.view.SyncRtSurfaceTransactionApplier: void <init>(android.view.View)>($r13);

        r0.<android.view.ViewRootInsetsControllerHost: android.view.SyncRtSurfaceTransactionApplier mApplier> = $r11;

     label1:
        $r6 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.View mView>;

        $z0 = virtualinvoke $r7.<android.view.View: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<android.view.ViewRootInsetsControllerHost: android.view.SyncRtSurfaceTransactionApplier mApplier>;

        virtualinvoke $r10.<android.view.SyncRtSurfaceTransactionApplier: void scheduleApply(android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])>(r1);

        goto label3;

     label2:
        $r9 = r0.<android.view.ViewRootInsetsControllerHost: android.view.SyncRtSurfaceTransactionApplier mApplier>;

        $r8 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r8.<android.view.SurfaceControl$Transaction: void <init>()>();

        virtualinvoke $r9.<android.view.SyncRtSurfaceTransactionApplier: void applyParams(android.view.SurfaceControl$Transaction,long,android.view.SyncRtSurfaceTransactionApplier$SurfaceParams[])>($r8, -1L, r1);

     label3:
        return;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("View of the ViewRootImpl is not initiated.");

        throw $r4;
    }

    public int dipToPx(int)
    {
        android.view.ViewRootInsetsControllerHost r0;
        int i0, $i1;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        i0 := @parameter0: int;

        r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.view.ViewRootImpl: int dipToPx(int)>(i0);

        return $i1;

     label1:
        return 0;
    }

    public void dispatchWindowInsetsAnimationEnd(android.view.WindowInsetsAnimation)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.WindowInsetsAnimation r1;
        android.view.ViewRootImpl $r2;
        android.view.View $r3;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.WindowInsetsAnimation;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void dispatchWindowInsetsAnimationEnd(android.view.WindowInsetsAnimation)>(r1);

        return;
    }

    public void dispatchWindowInsetsAnimationPrepare(android.view.WindowInsetsAnimation)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.WindowInsetsAnimation r1;
        android.view.ViewRootImpl $r2, $r4;
        android.view.View $r3, $r5;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.WindowInsetsAnimation;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View mView>;

        virtualinvoke $r5.<android.view.View: void dispatchWindowInsetsAnimationPrepare(android.view.WindowInsetsAnimation)>(r1);

        return;
    }

    public android.view.WindowInsets dispatchWindowInsetsAnimationProgress(android.view.WindowInsets, java.util.List)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.WindowInsets r1, $r7;
        java.util.List r2;
        android.view.ViewRootImpl $r3, $r5;
        android.view.View $r4, $r6;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.WindowInsets;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r6 = $r5.<android.view.ViewRootImpl: android.view.View mView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.WindowInsets dispatchWindowInsetsAnimationProgress(android.view.WindowInsets,java.util.List)>(r1, r2);

        return $r7;
    }

    public android.view.WindowInsetsAnimation$Bounds dispatchWindowInsetsAnimationStart(android.view.WindowInsetsAnimation, android.view.WindowInsetsAnimation$Bounds)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.WindowInsetsAnimation r1;
        android.view.WindowInsetsAnimation$Bounds r2, $r7;
        android.view.ViewRootImpl $r3, $r5;
        android.view.View $r4, $r6;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.WindowInsetsAnimation;

        r2 := @parameter1: android.view.WindowInsetsAnimation$Bounds;

        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r6 = $r5.<android.view.ViewRootImpl: android.view.View mView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.WindowInsetsAnimation$Bounds dispatchWindowInsetsAnimationStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)>(r1, r2);

        return $r7;
    }

    public android.os.Handler getHandler()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1;
        android.view.ViewRootImpl$ViewRootHandler $r2;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        return $r2;
    }

    public android.view.inputmethod.InputMethodManager getInputMethodManager()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        return $r4;
    }

    public java.lang.String getRootViewTitle()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.view.ViewRootImpl: java.lang.CharSequence getTitle()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;
    }

    public int getSystemBarsAppearance()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1, $r3;
        android.view.WindowManager$LayoutParams $r2, $r4;
        int $i0, $i1, $i2;
        android.view.InsetsFlags $r5;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 67108864;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r5 = $r4.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i2 = $r5.<android.view.InsetsFlags: int appearance>;

        return $i2;
    }

    public int getSystemBarsBehavior()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1, $r3;
        android.view.WindowManager$LayoutParams $r2, $r4;
        int $i0, $i1, $i2;
        android.view.InsetsFlags $r5;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 & 134217728;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r5 = $r4.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i2 = $r5.<android.view.InsetsFlags: int behavior>;

        return $i2;
    }

    public android.os.IBinder getWindowToken()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.os.IBinder $r1;
        android.view.ViewRootImpl r2;
        android.view.View r3;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        if r2 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r2.<android.view.ViewRootImpl: android.view.View getView()>();

        if r3 != null goto label2;

        return null;

     label2:
        $r1 = virtualinvoke r3.<android.view.View: android.os.IBinder getWindowToken()>();

        return $r1;
    }

    public boolean hasAnimationCallbacks()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1, $r3;
        android.view.View $r2, $r4;
        boolean $z0;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View mView>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        $z0 = virtualinvoke $r4.<android.view.View: boolean hasWindowInsetsAnimationCallback()>();

        return $z0;
    }

    public void notifyInsetsChanged()
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r1.<android.view.ViewRootImpl: void notifyInsetsChanged()>();

        return;
    }

    public void onInsetsModified(android.view.InsetsState)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.ViewRootImpl $r1, $r2;
        android.view.ViewRootImpl$W $r3;
        android.view.IWindowSession $r4;
        android.os.RemoteException $r5;
        android.view.InsetsState r6;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r6 := @parameter0: android.view.InsetsState;

     label1:
        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r1.<android.view.ViewRootImpl: android.view.IWindowSession mWindowSession>;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.ViewRootImpl$W mWindow>;

        interfaceinvoke $r4.<android.view.IWindowSession: void insetsModified(android.view.IWindow,android.view.InsetsState)>($r3, r6);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VRInsetsControllerHost", "Failed to call insetsModified", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void postInsetsAnimationCallback(java.lang.Runnable)
    {
        android.view.ViewRootInsetsControllerHost r0;
        java.lang.Runnable r1;
        android.view.ViewRootImpl $r2;
        android.view.Choreographer $r3;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r3.<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>(2, r1, null);

        return;
    }

    public void releaseSurfaceControlFromRt(android.view.SurfaceControl)
    {
        android.view.ViewRootInsetsControllerHost r0;
        android.view.SurfaceControl r1;
        android.view.ViewRootImpl $r2, $r4, $r7, $r8;
        android.view.View $r3, $r5, $r9;
        boolean $z0;
        android.view._$$Lambda$ViewRootInsetsControllerHost$3v_KSpxQXUSxSM3D_S6T5_aZKoQ $r6;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        r1 := @parameter0: android.view.SurfaceControl;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.View mView>;

        if $r3 == null goto label1;

        $r4 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View mView>;

        $z0 = virtualinvoke $r5.<android.view.View: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r6 = new android.view._$$Lambda$ViewRootInsetsControllerHost$3v_KSpxQXUSxSM3D_S6T5_aZKoQ;

        specialinvoke $r6.<android.view._$$Lambda$ViewRootInsetsControllerHost$3v_KSpxQXUSxSM3D_S6T5_aZKoQ: void <init>(android.view.SurfaceControl)>(r1);

        virtualinvoke $r7.<android.view.ViewRootImpl: void registerRtFrameCallback(android.graphics.HardwareRenderer$FrameDrawingCallback)>($r6);

        $r8 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r9 = $r8.<android.view.ViewRootImpl: android.view.View mView>;

        virtualinvoke $r9.<android.view.View: void invalidate()>();

        goto label2;

     label1:
        virtualinvoke r1.<android.view.SurfaceControl: void release()>();

     label2:
        return;
    }

    public void setSystemBarsAppearance(int, int)
    {
        android.view.ViewRootInsetsControllerHost r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.ViewRootImpl $r1, $r2, $r4, $r5;
        android.view.WindowManager$LayoutParams $r3, r6;
        android.view.InsetsFlags r7;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        r6 = $r1.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i2 = r6.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i3 = $i2 | 67108864;

        r6.<android.view.WindowManager$LayoutParams: int privateFlags> = $i3;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r3 = $r2.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        r7 = $r3.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i4 = r7.<android.view.InsetsFlags: int appearance>;

        if $i4 == i0 goto label1;

        $i5 = r7.<android.view.InsetsFlags: int appearance>;

        $i7 = $i5 & i1;

        $i6 = i0 & i1;

        $i8 = $i7 | $i6;

        r7.<android.view.InsetsFlags: int appearance> = $i8;

        $r4 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4.<android.view.ViewRootImpl: boolean mWindowAttributesChanged> = 1;

        $r5 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r5.<android.view.ViewRootImpl: void scheduleTraversals()>();

     label1:
        return;
    }

    public void setSystemBarsBehavior(int)
    {
        android.view.ViewRootInsetsControllerHost r0;
        int i0, $i1, $i2, $i3;
        android.view.WindowManager$LayoutParams r1, $r4, $r7;
        android.view.ViewRootImpl $r2, $r3, $r6, $r9, $r10;
        android.view.InsetsFlags $r5, $r8;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        i0 := @parameter0: int;

        $r2 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        r1 = $r2.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $i1 = r1.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 | 134217728;

        r1.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        $r3 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r5 = $r4.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i3 = $r5.<android.view.InsetsFlags: int behavior>;

        if $i3 == i0 goto label1;

        $r6 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r8 = $r7.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $r8.<android.view.InsetsFlags: int behavior> = i0;

        $r9 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        $r9.<android.view.ViewRootImpl: boolean mWindowAttributesChanged> = 1;

        $r10 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r10.<android.view.ViewRootImpl: void scheduleTraversals()>();

     label1:
        return;
    }

    public void updateCompatSysUiVisibility(int, boolean, boolean)
    {
        android.view.ViewRootInsetsControllerHost r0;
        int i0;
        boolean z0, z1;
        android.view.ViewRootImpl $r1;

        r0 := @this: android.view.ViewRootInsetsControllerHost;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.view.ViewRootInsetsControllerHost: android.view.ViewRootImpl mViewRoot>;

        virtualinvoke $r1.<android.view.ViewRootImpl: void updateCompatSysUiVisibility(int,boolean,boolean)>(i0, z0, z1);

        return;
    }
}
