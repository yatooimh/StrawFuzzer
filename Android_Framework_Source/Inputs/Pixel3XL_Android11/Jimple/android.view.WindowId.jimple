public class android.view.WindowId extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.view.IWindowId mToken;

    static void <clinit>()
    {
        android.view.WindowId$1 $r0;

        $r0 = new android.view.WindowId$1;

        specialinvoke $r0.<android.view.WindowId$1: void <init>()>();

        <android.view.WindowId: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.IBinder)
    {
        android.view.WindowId r0;
        android.os.IBinder r1;
        android.view.IWindowId $r2;

        r0 := @this: android.view.WindowId;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.view.IWindowId$Stub: android.view.IWindowId asInterface(android.os.IBinder)>(r1);

        r0.<android.view.WindowId: android.view.IWindowId mToken> = $r2;

        return;
    }

    public void <init>(android.view.IWindowId)
    {
        android.view.WindowId r0;
        android.view.IWindowId r1;

        r0 := @this: android.view.WindowId;

        r1 := @parameter0: android.view.IWindowId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.WindowId: android.view.IWindowId mToken> = r1;

        return;
    }

    public int describeContents()
    {
        android.view.WindowId r0;

        r0 := @this: android.view.WindowId;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.WindowId r0, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;
        android.view.IWindowId $r2, $r5;
        android.os.IBinder $r3, $r6;

        r0 := @this: android.view.WindowId;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.view.WindowId;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r3 = interfaceinvoke $r2.<android.view.IWindowId: android.os.IBinder asBinder()>();

        $r4 = (android.view.WindowId) r1;

        $r5 = $r4.<android.view.WindowId: android.view.IWindowId mToken>;

        $r6 = interfaceinvoke $r5.<android.view.IWindowId: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z1;

     label1:
        return 0;
    }

    public android.view.IWindowId getTarget()
    {
        android.view.WindowId r0;
        android.view.IWindowId $r1;

        r0 := @this: android.view.WindowId;

        $r1 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        return $r1;
    }

    public int hashCode()
    {
        android.view.WindowId r0;
        android.view.IWindowId $r1;
        android.os.IBinder $r2;
        int $i0;

        r0 := @this: android.view.WindowId;

        $r1 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r2 = interfaceinvoke $r1.<android.view.IWindowId: android.os.IBinder asBinder()>();

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isFocused()
    {
        android.view.WindowId r0;
        boolean z0;
        android.view.IWindowId $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.view.WindowId;

     label1:
        $r2 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        z0 = interfaceinvoke $r2.<android.view.IWindowId: boolean isFocused()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerFocusObserver(android.view.WindowId$FocusObserver)
    {
        android.view.WindowId r0;
        java.util.HashMap r1, $r3, $r6;
        android.view.IWindowId $r2, $r5, $r10;
        android.os.IBinder $r4, $r7;
        boolean $z0;
        android.view.IWindowFocusObserver$Stub $r9;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;
        android.view.WindowId$FocusObserver r13;
        java.lang.IllegalStateException r15;

        r0 := @this: android.view.WindowId;

        r13 := @parameter0: android.view.WindowId$FocusObserver;

        r1 = r13.<android.view.WindowId$FocusObserver: java.util.HashMap mRegistrations>;

        entermonitor r1;

     label01:
        $r3 = r13.<android.view.WindowId$FocusObserver: java.util.HashMap mRegistrations>;

        $r2 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r4 = interfaceinvoke $r2.<android.view.IWindowId: android.os.IBinder asBinder()>();

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label07;

        $r6 = r13.<android.view.WindowId$FocusObserver: java.util.HashMap mRegistrations>;

        $r5 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r7 = interfaceinvoke $r5.<android.view.IWindowId: android.os.IBinder asBinder()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r0);

     label02:
        $r10 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r9 = r13.<android.view.WindowId$FocusObserver: android.view.IWindowFocusObserver$Stub mIObserver>;

        interfaceinvoke $r10.<android.view.IWindowId: void registerFocusObserver(android.view.IWindowFocusObserver)>($r9);

     label03:
        goto label05;

     label04:
        $r11 := @caughtexception;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Focus observer already registered with input token");

        throw r15;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.lang.String toString()
    {
        android.view.WindowId r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r11;
        android.view.IWindowId $r7;
        android.os.IBinder $r8;

        r0 := @this: android.view.WindowId;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IntentSender{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r8 = interfaceinvoke $r7.<android.view.IWindowId: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void unregisterFocusObserver(android.view.WindowId$FocusObserver)
    {
        android.view.WindowId r0;
        java.util.HashMap r1, $r4;
        java.lang.Object r2;
        android.view.IWindowId $r3, $r7;
        android.os.IBinder $r5;
        android.view.IWindowFocusObserver$Stub $r6;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.view.WindowId$FocusObserver r10;
        java.lang.IllegalStateException r12;

        r0 := @this: android.view.WindowId;

        r10 := @parameter0: android.view.WindowId$FocusObserver;

        r1 = r10.<android.view.WindowId$FocusObserver: java.util.HashMap mRegistrations>;

        entermonitor r1;

     label01:
        $r4 = r10.<android.view.WindowId$FocusObserver: java.util.HashMap mRegistrations>;

        $r3 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r5 = interfaceinvoke $r3.<android.view.IWindowId: android.os.IBinder asBinder()>();

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label02:
        if r2 == null goto label08;

     label03:
        $r7 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r6 = r10.<android.view.WindowId$FocusObserver: android.view.IWindowFocusObserver$Stub mIObserver>;

        interfaceinvoke $r7.<android.view.IWindowId: void unregisterFocusObserver(android.view.IWindowFocusObserver)>($r6);

     label04:
        goto label06;

     label05:
        $r8 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Focus observer not registered with input token");

        throw r12;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.WindowId r0;
        android.os.Parcel r1;
        int i0;
        android.view.IWindowId $r2;
        android.os.IBinder $r3;

        r0 := @this: android.view.WindowId;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.WindowId: android.view.IWindowId mToken>;

        $r3 = interfaceinvoke $r2.<android.view.IWindowId: android.os.IBinder asBinder()>();

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        return;
    }
}
