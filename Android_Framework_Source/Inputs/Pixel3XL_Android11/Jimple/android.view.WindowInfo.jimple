public class android.view.WindowInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_POOL_SIZE;
    private static final android.util.Pools$SynchronizedPool sPool;
    public long accessibilityIdOfAnchor;
    public android.os.IBinder activityToken;
    public java.util.List childTokens;
    public int displayId;
    public boolean focused;
    public boolean hasFlagWatchOutsideTouch;
    public boolean inPictureInPicture;
    public int layer;
    public android.os.IBinder parentToken;
    public android.graphics.Region regionInScreen;
    public java.lang.CharSequence title;
    public android.os.IBinder token;
    public int type;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;
        android.view.WindowInfo$1 $r1;

        <android.view.WindowInfo: int MAX_POOL_SIZE> = 10;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(10);

        <android.view.WindowInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        $r1 = new android.view.WindowInfo$1;

        specialinvoke $r1.<android.view.WindowInfo$1: void <init>()>();

        <android.view.WindowInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>()
    {
        android.view.WindowInfo r0;
        android.graphics.Region $r1;
        long $l0;

        r0 := @this: android.view.WindowInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Region;

        specialinvoke $r1.<android.graphics.Region: void <init>()>();

        r0.<android.view.WindowInfo: android.graphics.Region regionInScreen> = $r1;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowInfo: long accessibilityIdOfAnchor> = $l0;

        r0.<android.view.WindowInfo: int displayId> = -1;

        return;
    }

    static void access$000(android.view.WindowInfo, android.os.Parcel)
    {
        android.view.WindowInfo r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.view.WindowInfo;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.view.WindowInfo: void initFromParcel(android.os.Parcel)>(r1);

        return;
    }

    private void clear()
    {
        android.view.WindowInfo r0;
        java.util.List r1;
        android.graphics.Region $r2;

        r0 := @this: android.view.WindowInfo;

        r0.<android.view.WindowInfo: int displayId> = -1;

        r0.<android.view.WindowInfo: int type> = 0;

        r0.<android.view.WindowInfo: int layer> = 0;

        r0.<android.view.WindowInfo: android.os.IBinder token> = null;

        r0.<android.view.WindowInfo: android.os.IBinder parentToken> = null;

        r0.<android.view.WindowInfo: android.os.IBinder activityToken> = null;

        r0.<android.view.WindowInfo: boolean focused> = 0;

        $r2 = r0.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke $r2.<android.graphics.Region: void setEmpty()>();

        r1 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label1:
        r0.<android.view.WindowInfo: boolean inPictureInPicture> = 0;

        r0.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch> = 0;

        return;
    }

    private void initFromParcel(android.os.Parcel)
    {
        android.view.WindowInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7;
        android.os.IBinder $r2, $r3, $r4;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.graphics.Region $r7;
        java.lang.CharSequence $r8;
        long $l4;
        java.util.List $r9, $r10;
        java.util.ArrayList $r11;
        boolean z0, z1, z2, z3;

        r0 := @this: android.view.WindowInfo;

        r1 := @parameter0: android.os.Parcel;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowInfo: int displayId> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowInfo: int type> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowInfo: int layer> = $i3;

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.WindowInfo: android.os.IBinder token> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.WindowInfo: android.os.IBinder parentToken> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.WindowInfo: android.os.IBinder activityToken> = $r4;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z0 = 0;

        if i0 != 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.view.WindowInfo: boolean focused> = z1;

        $r5 = <android.graphics.Region: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r7 = (android.graphics.Region) $r6;

        r0.<android.view.WindowInfo: android.graphics.Region regionInScreen> = $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.WindowInfo: java.lang.CharSequence title> = $r8;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.WindowInfo: long accessibilityIdOfAnchor> = $l4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 != 1 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        r0.<android.view.WindowInfo: boolean inPictureInPicture> = z2;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 != 1 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        r0.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch> = z3;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i7 != 1 goto label7;

        z0 = 1;

     label7:
        if z0 == 0 goto label9;

        $r9 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        if $r9 != null goto label8;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowInfo: java.util.List childTokens> = $r11;

     label8:
        $r10 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        virtualinvoke r1.<android.os.Parcel: void readBinderList(java.util.List)>($r10);

     label9:
        return;
    }

    public static android.view.WindowInfo obtain()
    {
        android.view.WindowInfo r0, $r3, r4;
        android.util.Pools$SynchronizedPool $r1;
        java.lang.Object $r2;

        $r1 = <android.view.WindowInfo: android.util.Pools$SynchronizedPool sPool>;

        $r2 = virtualinvoke $r1.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r0 = (android.view.WindowInfo) $r2;

        r4 = r0;

        if r0 != null goto label1;

        $r3 = new android.view.WindowInfo;

        specialinvoke $r3.<android.view.WindowInfo: void <init>()>();

        r4 = $r3;

     label1:
        return r4;
    }

    public static android.view.WindowInfo obtain(android.view.WindowInfo)
    {
        android.view.WindowInfo r0, r1;
        int $i0, $i1, $i2;
        android.os.IBinder $r2, $r3, $r4;
        boolean $z0, $z2, $z3, $z4;
        android.graphics.Region $r5, $r6;
        java.lang.CharSequence $r7;
        long $l3;
        java.util.List $r8, $r10, r11, r12;
        java.util.ArrayList $r9;

        r0 := @parameter0: android.view.WindowInfo;

        r1 = staticinvoke <android.view.WindowInfo: android.view.WindowInfo obtain()>();

        $i0 = r0.<android.view.WindowInfo: int displayId>;

        r1.<android.view.WindowInfo: int displayId> = $i0;

        $i1 = r0.<android.view.WindowInfo: int type>;

        r1.<android.view.WindowInfo: int type> = $i1;

        $i2 = r0.<android.view.WindowInfo: int layer>;

        r1.<android.view.WindowInfo: int layer> = $i2;

        $r2 = r0.<android.view.WindowInfo: android.os.IBinder token>;

        r1.<android.view.WindowInfo: android.os.IBinder token> = $r2;

        $r3 = r0.<android.view.WindowInfo: android.os.IBinder parentToken>;

        r1.<android.view.WindowInfo: android.os.IBinder parentToken> = $r3;

        $r4 = r0.<android.view.WindowInfo: android.os.IBinder activityToken>;

        r1.<android.view.WindowInfo: android.os.IBinder activityToken> = $r4;

        $z0 = r0.<android.view.WindowInfo: boolean focused>;

        r1.<android.view.WindowInfo: boolean focused> = $z0;

        $r6 = r1.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        $r5 = r0.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke $r6.<android.graphics.Region: boolean set(android.graphics.Region)>($r5);

        $r7 = r0.<android.view.WindowInfo: java.lang.CharSequence title>;

        r1.<android.view.WindowInfo: java.lang.CharSequence title> = $r7;

        $l3 = r0.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        r1.<android.view.WindowInfo: long accessibilityIdOfAnchor> = $l3;

        $z2 = r0.<android.view.WindowInfo: boolean inPictureInPicture>;

        r1.<android.view.WindowInfo: boolean inPictureInPicture> = $z2;

        $z3 = r0.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        r1.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch> = $z3;

        r11 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        if r11 == null goto label2;

        $z4 = interfaceinvoke r11.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label2;

        r12 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        if r12 != null goto label1;

        $r9 = new java.util.ArrayList;

        $r10 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r1.<android.view.WindowInfo: java.util.List childTokens> = $r9;

        goto label2;

     label1:
        $r8 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        interfaceinvoke r12.<java.util.List: boolean addAll(java.util.Collection)>($r8);

     label2:
        return r1;
    }

    public int describeContents()
    {
        android.view.WindowInfo r0;

        r0 := @this: android.view.WindowInfo;

        return 0;
    }

    public void recycle()
    {
        android.view.WindowInfo r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.WindowInfo;

        specialinvoke r0.<android.view.WindowInfo: void clear()>();

        $r1 = <android.view.WindowInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        android.view.WindowInfo r0;
        java.lang.StringBuilder $r2;
        java.lang.CharSequence $r5;
        int $i0, $i1, $i2;
        android.os.IBinder $r14, $r24;
        android.graphics.Region $r17, $r20;
        android.graphics.Rect $r21;
        boolean $z0, $z1, $z2;
        java.util.List $r29;
        long $l3;
        java.lang.String $r38;

        r0 := @this: android.view.WindowInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WindowInfo[");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title=");

        $r5 = r0.<android.view.WindowInfo: java.lang.CharSequence title>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", displayId=");

        $i0 = r0.<android.view.WindowInfo: int displayId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i1 = r0.<android.view.WindowInfo: int type>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layer=");

        $i2 = r0.<android.view.WindowInfo: int layer>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", token=");

        $r14 = r0.<android.view.WindowInfo: android.os.IBinder token>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", region=");

        $r17 = r0.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bounds=");

        $r20 = r0.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        $r21 = virtualinvoke $r20.<android.graphics.Region: android.graphics.Rect getBounds()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parent=");

        $r24 = r0.<android.view.WindowInfo: android.os.IBinder parentToken>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", focused=");

        $z0 = r0.<android.view.WindowInfo: boolean focused>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", children=");

        $r29 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", accessibility anchor=");

        $l3 = r0.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pictureInPicture=");

        $z1 = r0.<android.view.WindowInfo: boolean inPictureInPicture>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", watchOutsideTouch=");

        $z2 = r0.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r38 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.WindowInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, i5, i6, i7;
        java.util.List r2, $r8;
        android.os.IBinder $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Region $r6;
        java.lang.CharSequence $r7;
        long $l4;

        r0 := @this: android.view.WindowInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.WindowInfo: int displayId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.WindowInfo: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.WindowInfo: int layer>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.view.WindowInfo: android.os.IBinder token>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        $r4 = r0.<android.view.WindowInfo: android.os.IBinder parentToken>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r4);

        $r5 = r0.<android.view.WindowInfo: android.os.IBinder activityToken>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        $z0 = r0.<android.view.WindowInfo: boolean focused>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $r6 = r0.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke $r6.<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r7 = r0.<android.view.WindowInfo: java.lang.CharSequence title>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r7);

        $l4 = r0.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $z1 = r0.<android.view.WindowInfo: boolean inPictureInPicture>;

        i6 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        $z2 = r0.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        i7 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        r2 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        if r2 == null goto label1;

        $z3 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r8 = r0.<android.view.WindowInfo: java.util.List childTokens>;

        virtualinvoke r1.<android.os.Parcel: void writeBinderList(java.util.List)>($r8);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }
}
