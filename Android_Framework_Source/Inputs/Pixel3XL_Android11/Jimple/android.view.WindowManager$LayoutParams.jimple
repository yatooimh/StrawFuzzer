public class android.view.WindowManager$LayoutParams extends android.view.ViewGroup$LayoutParams implements android.os.Parcelable
{
    public static final int ACCESSIBILITY_ANCHOR_CHANGED;
    public static final int ACCESSIBILITY_TITLE_CHANGED;
    public static final int ALPHA_CHANGED;
    public static final int ANIMATION_CHANGED;
    public static final float BRIGHTNESS_OVERRIDE_FULL;
    public static final float BRIGHTNESS_OVERRIDE_NONE;
    public static final float BRIGHTNESS_OVERRIDE_OFF;
    public static final int BUTTON_BRIGHTNESS_CHANGED;
    public static final int COLOR_MODE_CHANGED;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int DIM_AMOUNT_CHANGED;
    public static final int FIRST_APPLICATION_WINDOW;
    public static final int FIRST_SUB_WINDOW;
    public static final int FIRST_SYSTEM_WINDOW;
    public static final int FLAGS_CHANGED;
    public static final int FLAG_ALLOW_LOCK_WHILE_SCREEN_ON;
    public static final int FLAG_ALT_FOCUSABLE_IM;
    public static final int FLAG_BLUR_BEHIND;
    public static final int FLAG_DIM_BEHIND;
    public static final int FLAG_DISMISS_KEYGUARD;
    public static final int FLAG_DITHER;
    public static final int FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS;
    public static final int FLAG_FORCE_NOT_FULLSCREEN;
    public static final int FLAG_FULLSCREEN;
    public static final int FLAG_HARDWARE_ACCELERATED;
    public static final int FLAG_IGNORE_CHEEK_PRESSES;
    public static final int FLAG_KEEP_SCREEN_ON;
    public static final int FLAG_LAYOUT_ATTACHED_IN_DECOR;
    public static final int FLAG_LAYOUT_INSET_DECOR;
    public static final int FLAG_LAYOUT_IN_OVERSCAN;
    public static final int FLAG_LAYOUT_IN_SCREEN;
    public static final int FLAG_LAYOUT_NO_LIMITS;
    public static final int FLAG_LOCAL_FOCUS_MODE;
    public static final int FLAG_NOT_FOCUSABLE;
    public static final int FLAG_NOT_TOUCHABLE;
    public static final int FLAG_NOT_TOUCH_MODAL;
    public static final int FLAG_SCALED;
    public static final int FLAG_SECURE;
    public static final int FLAG_SHOW_WALLPAPER;
    public static final int FLAG_SHOW_WHEN_LOCKED;
    public static final int FLAG_SLIPPERY;
    public static final int FLAG_SPLIT_TOUCH;
    public static final int FLAG_TOUCHABLE_WHEN_WAKING;
    public static final int FLAG_TRANSLUCENT_NAVIGATION;
    public static final int FLAG_TRANSLUCENT_STATUS;
    public static final int FLAG_TURN_SCREEN_ON;
    public static final int FLAG_WATCH_OUTSIDE_TOUCH;
    public static final int FORMAT_CHANGED;
    public static final int INPUT_FEATURES_CHANGED;
    public static final int INPUT_FEATURE_DISABLE_POINTER_GESTURES;
    public static final int INPUT_FEATURE_DISABLE_USER_ACTIVITY;
    public static final int INPUT_FEATURE_NO_INPUT_CHANNEL;
    public static final int INSET_FLAGS_CHANGED;
    public static final int INVALID_WINDOW_TYPE;
    public static final int LAST_APPLICATION_WINDOW;
    public static final int LAST_SUB_WINDOW;
    public static final int LAST_SYSTEM_WINDOW;
    public static final int LAYOUT_CHANGED;
    public static final int LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS;
    public static final int LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT;
    public static final int LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER;
    public static final int LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES;
    public static final int MEMORY_TYPE_CHANGED;
    public static final int MEMORY_TYPE_GPU;
    public static final int MEMORY_TYPE_HARDWARE;
    public static final int MEMORY_TYPE_NORMAL;
    public static final int MEMORY_TYPE_PUSH_BUFFERS;
    public static final int MINIMAL_POST_PROCESSING_PREFERENCE_CHANGED;
    public static final int PREFERRED_DISPLAY_MODE_ID;
    public static final int PREFERRED_REFRESH_RATE_CHANGED;
    public static final int PRIVATE_FLAGS_CHANGED;
    public static final int PRIVATE_FLAG_APPEARANCE_CONTROLLED;
    public static final int PRIVATE_FLAG_BEHAVIOR_CONTROLLED;
    public static final int PRIVATE_FLAG_COLOR_SPACE_AGNOSTIC;
    public static final int PRIVATE_FLAG_COMPATIBLE_WINDOW;
    public static final int PRIVATE_FLAG_DISABLE_WALLPAPER_TOUCH_EVENTS;
    public static final int PRIVATE_FLAG_FAKE_HARDWARE_ACCELERATED;
    public static final int PRIVATE_FLAG_FIT_INSETS_CONTROLLED;
    public static final int PRIVATE_FLAG_FORCE_DECOR_VIEW_VISIBILITY;
    public static final int PRIVATE_FLAG_FORCE_DRAW_BAR_BACKGROUNDS;
    public static final int PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED;
    public static final int PRIVATE_FLAG_FORCE_SHOW_STATUS_BAR;
    public static final int PRIVATE_FLAG_IS_ROUNDED_CORNERS_OVERLAY;
    public static final int PRIVATE_FLAG_IS_SCREEN_DECOR;
    public static final int PRIVATE_FLAG_LAYOUT_CHILD_WINDOW_IN_PARENT_FRAME;
    public static final int PRIVATE_FLAG_NO_MOVE_ANIMATION;
    public static final int PRIVATE_FLAG_PRESERVE_GEOMETRY;
    public static final int PRIVATE_FLAG_STATUS_FORCE_SHOW_NAVIGATION;
    public static final int PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE;
    public static final int PRIVATE_FLAG_SYSTEM_ERROR;
    public static final int PRIVATE_FLAG_USE_BLAST;
    public static final int PRIVATE_FLAG_WANTS_OFFSET_NOTIFICATIONS;
    public static final int PRIVATE_FLAG_WILL_NOT_REPLACE_ON_RELAUNCH;
    public static final int ROTATION_ANIMATION_CHANGED;
    public static final int ROTATION_ANIMATION_CROSSFADE;
    public static final int ROTATION_ANIMATION_JUMPCUT;
    public static final int ROTATION_ANIMATION_ROTATE;
    public static final int ROTATION_ANIMATION_SEAMLESS;
    public static final int ROTATION_ANIMATION_UNSPECIFIED;
    public static final int SCREEN_BRIGHTNESS_CHANGED;
    public static final int SCREEN_ORIENTATION_CHANGED;
    public static final int SOFT_INPUT_ADJUST_NOTHING;
    public static final int SOFT_INPUT_ADJUST_PAN;
    public static final int SOFT_INPUT_ADJUST_RESIZE;
    public static final int SOFT_INPUT_ADJUST_UNSPECIFIED;
    public static final int SOFT_INPUT_IS_FORWARD_NAVIGATION;
    public static final int SOFT_INPUT_MASK_ADJUST;
    public static final int SOFT_INPUT_MASK_STATE;
    public static final int SOFT_INPUT_MODE_CHANGED;
    public static final int SOFT_INPUT_STATE_ALWAYS_HIDDEN;
    public static final int SOFT_INPUT_STATE_ALWAYS_VISIBLE;
    public static final int SOFT_INPUT_STATE_HIDDEN;
    public static final int SOFT_INPUT_STATE_UNCHANGED;
    public static final int SOFT_INPUT_STATE_UNSPECIFIED;
    public static final int SOFT_INPUT_STATE_VISIBLE;
    public static final int SURFACE_INSETS_CHANGED;
    public static final int SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS;
    public static final int SYSTEM_FLAG_SHOW_FOR_ALL_USERS;
    public static final int SYSTEM_UI_LISTENER_CHANGED;
    public static final int SYSTEM_UI_VISIBILITY_CHANGED;
    public static final int TITLE_CHANGED;
    public static final int TRANSLUCENT_FLAGS_CHANGED;
    public static final int TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY;
    public static final int TYPE_ACCESSIBILITY_OVERLAY;
    public static final int TYPE_APPLICATION;
    public static final int TYPE_APPLICATION_ABOVE_SUB_PANEL;
    public static final int TYPE_APPLICATION_ATTACHED_DIALOG;
    public static final int TYPE_APPLICATION_MEDIA;
    public static final int TYPE_APPLICATION_MEDIA_OVERLAY;
    public static final int TYPE_APPLICATION_OVERLAY;
    public static final int TYPE_APPLICATION_PANEL;
    public static final int TYPE_APPLICATION_STARTING;
    public static final int TYPE_APPLICATION_SUB_PANEL;
    public static final int TYPE_BASE_APPLICATION;
    public static final int TYPE_BOOT_PROGRESS;
    public static final int TYPE_CHANGED;
    public static final int TYPE_DISPLAY_OVERLAY;
    public static final int TYPE_DOCK_DIVIDER;
    public static final int TYPE_DRAG;
    public static final int TYPE_DRAWN_APPLICATION;
    public static final int TYPE_INPUT_CONSUMER;
    public static final int TYPE_INPUT_METHOD;
    public static final int TYPE_INPUT_METHOD_DIALOG;
    public static final int TYPE_KEYGUARD;
    public static final int TYPE_KEYGUARD_DIALOG;
    public static final int TYPE_MAGNIFICATION_OVERLAY;
    public static final int TYPE_NAVIGATION_BAR;
    public static final int TYPE_NAVIGATION_BAR_PANEL;
    public static final int TYPE_NOTIFICATION_SHADE;
    public static final int TYPE_PHONE;
    public static final int TYPE_POINTER;
    public static final int TYPE_PRESENTATION;
    public static final int TYPE_PRIORITY_PHONE;
    public static final int TYPE_PRIVATE_PRESENTATION;
    public static final int TYPE_QS_DIALOG;
    public static final int TYPE_SCREENSHOT;
    public static final int TYPE_SEARCH_BAR;
    public static final int TYPE_SECURE_SYSTEM_OVERLAY;
    public static final int TYPE_STATUS_BAR;
    public static final int TYPE_STATUS_BAR_ADDITIONAL;
    public static final int TYPE_STATUS_BAR_PANEL;
    public static final int TYPE_STATUS_BAR_SUB_PANEL;
    public static final int TYPE_SYSTEM_ALERT;
    public static final int TYPE_SYSTEM_DIALOG;
    public static final int TYPE_SYSTEM_ERROR;
    public static final int TYPE_SYSTEM_OVERLAY;
    public static final int TYPE_TOAST;
    public static final int TYPE_TRUSTED_APPLICATION_OVERLAY;
    public static final int TYPE_VOICE_INTERACTION;
    public static final int TYPE_VOICE_INTERACTION_STARTING;
    public static final int TYPE_VOLUME_OVERLAY;
    public static final int TYPE_WALLPAPER;
    public static final int USER_ACTIVITY_TIMEOUT_CHANGED;
    public long accessibilityIdOfAnchor;
    public java.lang.CharSequence accessibilityTitle;
    public float alpha;
    public float buttonBrightness;
    public float dimAmount;
    public int flags;
    public int format;
    public int gravity;
    public boolean hasManualSurfaceInsets;
    public boolean hasSystemUiListeners;
    public long hideTimeoutMilliseconds;
    public float horizontalMargin;
    public float horizontalWeight;
    public int inputFeatures;
    public final android.view.InsetsFlags insetsFlags;
    public int layoutInDisplayCutoutMode;
    private int mColorMode;
    private int[] mCompatibilityParamsBackup;
    private boolean mFitInsetsIgnoringVisibility;
    private int mFitInsetsSides;
    private int mFitInsetsTypes;
    private java.lang.CharSequence mTitle;
    public int memoryType;
    public java.lang.String packageName;
    public boolean preferMinimalPostProcessing;
    public int preferredDisplayModeId;
    public float preferredRefreshRate;
    public boolean preservePreviousSurfaceInsets;
    public int privateFlags;
    public int[] providesInsetsTypes;
    public int rotationAnimation;
    public float screenBrightness;
    public int screenOrientation;
    public int softInputMode;
    public int subtreeSystemUiVisibility;
    public final android.graphics.Rect surfaceInsets;
    public int systemUiVisibility;
    public android.os.IBinder token;
    public int type;
    public long userActivityTimeout;
    public float verticalMargin;
    public float verticalWeight;
    public int windowAnimations;
    public int x;
    public int y;

    static void <clinit>()
    {
        android.view.WindowManager$LayoutParams$1 $r0;

        <android.view.WindowManager$LayoutParams: int USER_ACTIVITY_TIMEOUT_CHANGED> = 262144;

        <android.view.WindowManager$LayoutParams: int TYPE_WALLPAPER> = 2013;

        <android.view.WindowManager$LayoutParams: int TYPE_VOLUME_OVERLAY> = 2020;

        <android.view.WindowManager$LayoutParams: int TYPE_VOICE_INTERACTION_STARTING> = 2033;

        <android.view.WindowManager$LayoutParams: int TYPE_VOICE_INTERACTION> = 2031;

        <android.view.WindowManager$LayoutParams: int TYPE_TRUSTED_APPLICATION_OVERLAY> = 2042;

        <android.view.WindowManager$LayoutParams: int TYPE_TOAST> = 2005;

        <android.view.WindowManager$LayoutParams: int TYPE_SYSTEM_OVERLAY> = 2006;

        <android.view.WindowManager$LayoutParams: int TYPE_SYSTEM_ERROR> = 2010;

        <android.view.WindowManager$LayoutParams: int TYPE_SYSTEM_DIALOG> = 2008;

        <android.view.WindowManager$LayoutParams: int TYPE_SYSTEM_ALERT> = 2003;

        <android.view.WindowManager$LayoutParams: int TYPE_STATUS_BAR_SUB_PANEL> = 2017;

        <android.view.WindowManager$LayoutParams: int TYPE_STATUS_BAR_PANEL> = 2014;

        <android.view.WindowManager$LayoutParams: int TYPE_STATUS_BAR_ADDITIONAL> = 2041;

        <android.view.WindowManager$LayoutParams: int TYPE_STATUS_BAR> = 2000;

        <android.view.WindowManager$LayoutParams: int TYPE_SECURE_SYSTEM_OVERLAY> = 2015;

        <android.view.WindowManager$LayoutParams: int TYPE_SEARCH_BAR> = 2001;

        <android.view.WindowManager$LayoutParams: int TYPE_SCREENSHOT> = 2036;

        <android.view.WindowManager$LayoutParams: int TYPE_QS_DIALOG> = 2035;

        <android.view.WindowManager$LayoutParams: int TYPE_PRIVATE_PRESENTATION> = 2030;

        <android.view.WindowManager$LayoutParams: int TYPE_PRIORITY_PHONE> = 2007;

        <android.view.WindowManager$LayoutParams: int TYPE_PRESENTATION> = 2037;

        <android.view.WindowManager$LayoutParams: int TYPE_POINTER> = 2018;

        <android.view.WindowManager$LayoutParams: int TYPE_PHONE> = 2002;

        <android.view.WindowManager$LayoutParams: int TYPE_NOTIFICATION_SHADE> = 2040;

        <android.view.WindowManager$LayoutParams: int TYPE_NAVIGATION_BAR_PANEL> = 2024;

        <android.view.WindowManager$LayoutParams: int TYPE_NAVIGATION_BAR> = 2019;

        <android.view.WindowManager$LayoutParams: int TYPE_MAGNIFICATION_OVERLAY> = 2027;

        <android.view.WindowManager$LayoutParams: int TYPE_KEYGUARD_DIALOG> = 2009;

        <android.view.WindowManager$LayoutParams: int TYPE_KEYGUARD> = 2004;

        <android.view.WindowManager$LayoutParams: int TYPE_INPUT_METHOD_DIALOG> = 2012;

        <android.view.WindowManager$LayoutParams: int TYPE_INPUT_METHOD> = 2011;

        <android.view.WindowManager$LayoutParams: int TYPE_INPUT_CONSUMER> = 2022;

        <android.view.WindowManager$LayoutParams: int TYPE_DRAWN_APPLICATION> = 4;

        <android.view.WindowManager$LayoutParams: int TYPE_DRAG> = 2016;

        <android.view.WindowManager$LayoutParams: int TYPE_DOCK_DIVIDER> = 2034;

        <android.view.WindowManager$LayoutParams: int TYPE_DISPLAY_OVERLAY> = 2026;

        <android.view.WindowManager$LayoutParams: int TYPE_CHANGED> = 2;

        <android.view.WindowManager$LayoutParams: int TYPE_BOOT_PROGRESS> = 2021;

        <android.view.WindowManager$LayoutParams: int TYPE_BASE_APPLICATION> = 1;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_SUB_PANEL> = 1002;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_STARTING> = 3;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_PANEL> = 1000;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_OVERLAY> = 2038;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_MEDIA_OVERLAY> = 1004;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_MEDIA> = 1001;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_ATTACHED_DIALOG> = 1003;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION_ABOVE_SUB_PANEL> = 1005;

        <android.view.WindowManager$LayoutParams: int TYPE_APPLICATION> = 2;

        <android.view.WindowManager$LayoutParams: int TYPE_ACCESSIBILITY_OVERLAY> = 2032;

        <android.view.WindowManager$LayoutParams: int TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY> = 2039;

        <android.view.WindowManager$LayoutParams: int TRANSLUCENT_FLAGS_CHANGED> = 524288;

        <android.view.WindowManager$LayoutParams: int TITLE_CHANGED> = 64;

        <android.view.WindowManager$LayoutParams: int SYSTEM_UI_VISIBILITY_CHANGED> = 16384;

        <android.view.WindowManager$LayoutParams: int SYSTEM_UI_LISTENER_CHANGED> = 32768;

        <android.view.WindowManager$LayoutParams: int SYSTEM_FLAG_SHOW_FOR_ALL_USERS> = 16;

        <android.view.WindowManager$LayoutParams: int SYSTEM_FLAG_HIDE_NON_SYSTEM_OVERLAY_WINDOWS> = 524288;

        <android.view.WindowManager$LayoutParams: int SURFACE_INSETS_CHANGED> = 1048576;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_VISIBLE> = 4;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_UNSPECIFIED> = 0;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_UNCHANGED> = 1;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_HIDDEN> = 2;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_ALWAYS_VISIBLE> = 5;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_STATE_ALWAYS_HIDDEN> = 3;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_MODE_CHANGED> = 512;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_MASK_STATE> = 15;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_MASK_ADJUST> = 240;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_IS_FORWARD_NAVIGATION> = 256;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_ADJUST_UNSPECIFIED> = 0;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_ADJUST_RESIZE> = 16;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_ADJUST_PAN> = 32;

        <android.view.WindowManager$LayoutParams: int SOFT_INPUT_ADJUST_NOTHING> = 48;

        <android.view.WindowManager$LayoutParams: int SCREEN_ORIENTATION_CHANGED> = 1024;

        <android.view.WindowManager$LayoutParams: int SCREEN_BRIGHTNESS_CHANGED> = 2048;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_UNSPECIFIED> = -1;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_SEAMLESS> = 3;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_ROTATE> = 0;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_JUMPCUT> = 2;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_CROSSFADE> = 1;

        <android.view.WindowManager$LayoutParams: int ROTATION_ANIMATION_CHANGED> = 4096;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_WILL_NOT_REPLACE_ON_RELAUNCH> = 32768;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_WANTS_OFFSET_NOTIFICATIONS> = 4;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_USE_BLAST> = 33554432;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_SYSTEM_ERROR> = 256;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE> = 262144;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_STATUS_FORCE_SHOW_NAVIGATION> = 8388608;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_PRESERVE_GEOMETRY> = 8192;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_NO_MOVE_ANIMATION> = 64;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_LAYOUT_CHILD_WINDOW_IN_PARENT_FRAME> = 65536;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_IS_SCREEN_DECOR> = 4194304;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_IS_ROUNDED_CORNERS_OVERLAY> = 1048576;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FORCE_SHOW_STATUS_BAR> = 4096;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED> = 2;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FORCE_DRAW_BAR_BACKGROUNDS> = 131072;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FORCE_DECOR_VIEW_VISIBILITY> = 16384;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FIT_INSETS_CONTROLLED> = 268435456;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_FAKE_HARDWARE_ACCELERATED> = 1;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_DISABLE_WALLPAPER_TOUCH_EVENTS> = 2048;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_COMPATIBLE_WINDOW> = 128;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_COLOR_SPACE_AGNOSTIC> = 16777216;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_BEHAVIOR_CONTROLLED> = 134217728;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAG_APPEARANCE_CONTROLLED> = 67108864;

        <android.view.WindowManager$LayoutParams: int PRIVATE_FLAGS_CHANGED> = 131072;

        <android.view.WindowManager$LayoutParams: int PREFERRED_REFRESH_RATE_CHANGED> = 2097152;

        <android.view.WindowManager$LayoutParams: int PREFERRED_DISPLAY_MODE_ID> = 8388608;

        <android.view.WindowManager$LayoutParams: int MINIMAL_POST_PROCESSING_PREFERENCE_CHANGED> = 268435456;

        <android.view.WindowManager$LayoutParams: int MEMORY_TYPE_PUSH_BUFFERS> = 3;

        <android.view.WindowManager$LayoutParams: int MEMORY_TYPE_NORMAL> = 0;

        <android.view.WindowManager$LayoutParams: int MEMORY_TYPE_HARDWARE> = 1;

        <android.view.WindowManager$LayoutParams: int MEMORY_TYPE_GPU> = 2;

        <android.view.WindowManager$LayoutParams: int MEMORY_TYPE_CHANGED> = 256;

        <android.view.WindowManager$LayoutParams: int LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES> = 1;

        <android.view.WindowManager$LayoutParams: int LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER> = 2;

        <android.view.WindowManager$LayoutParams: int LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT> = 0;

        <android.view.WindowManager$LayoutParams: int LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS> = 3;

        <android.view.WindowManager$LayoutParams: int LAYOUT_CHANGED> = 1;

        <android.view.WindowManager$LayoutParams: int LAST_SYSTEM_WINDOW> = 2999;

        <android.view.WindowManager$LayoutParams: int LAST_SUB_WINDOW> = 1999;

        <android.view.WindowManager$LayoutParams: int LAST_APPLICATION_WINDOW> = 99;

        <android.view.WindowManager$LayoutParams: int INVALID_WINDOW_TYPE> = -1;

        <android.view.WindowManager$LayoutParams: int INSET_FLAGS_CHANGED> = 134217728;

        <android.view.WindowManager$LayoutParams: int INPUT_FEATURE_NO_INPUT_CHANNEL> = 2;

        <android.view.WindowManager$LayoutParams: int INPUT_FEATURE_DISABLE_USER_ACTIVITY> = 4;

        <android.view.WindowManager$LayoutParams: int INPUT_FEATURE_DISABLE_POINTER_GESTURES> = 1;

        <android.view.WindowManager$LayoutParams: int INPUT_FEATURES_CHANGED> = 65536;

        <android.view.WindowManager$LayoutParams: int FORMAT_CHANGED> = 8;

        <android.view.WindowManager$LayoutParams: int FLAG_WATCH_OUTSIDE_TOUCH> = 262144;

        <android.view.WindowManager$LayoutParams: int FLAG_TURN_SCREEN_ON> = 2097152;

        <android.view.WindowManager$LayoutParams: int FLAG_TRANSLUCENT_STATUS> = 67108864;

        <android.view.WindowManager$LayoutParams: int FLAG_TRANSLUCENT_NAVIGATION> = 134217728;

        <android.view.WindowManager$LayoutParams: int FLAG_TOUCHABLE_WHEN_WAKING> = 64;

        <android.view.WindowManager$LayoutParams: int FLAG_SPLIT_TOUCH> = 8388608;

        <android.view.WindowManager$LayoutParams: int FLAG_SLIPPERY> = 536870912;

        <android.view.WindowManager$LayoutParams: int FLAG_SHOW_WHEN_LOCKED> = 524288;

        <android.view.WindowManager$LayoutParams: int FLAG_SHOW_WALLPAPER> = 1048576;

        <android.view.WindowManager$LayoutParams: int FLAG_SECURE> = 8192;

        <android.view.WindowManager$LayoutParams: int FLAG_SCALED> = 16384;

        <android.view.WindowManager$LayoutParams: int FLAG_NOT_TOUCH_MODAL> = 32;

        <android.view.WindowManager$LayoutParams: int FLAG_NOT_TOUCHABLE> = 16;

        <android.view.WindowManager$LayoutParams: int FLAG_NOT_FOCUSABLE> = 8;

        <android.view.WindowManager$LayoutParams: int FLAG_LOCAL_FOCUS_MODE> = 268435456;

        <android.view.WindowManager$LayoutParams: int FLAG_LAYOUT_NO_LIMITS> = 512;

        <android.view.WindowManager$LayoutParams: int FLAG_LAYOUT_IN_SCREEN> = 256;

        <android.view.WindowManager$LayoutParams: int FLAG_LAYOUT_IN_OVERSCAN> = 33554432;

        <android.view.WindowManager$LayoutParams: int FLAG_LAYOUT_INSET_DECOR> = 65536;

        <android.view.WindowManager$LayoutParams: int FLAG_LAYOUT_ATTACHED_IN_DECOR> = 1073741824;

        <android.view.WindowManager$LayoutParams: int FLAG_KEEP_SCREEN_ON> = 128;

        <android.view.WindowManager$LayoutParams: int FLAG_IGNORE_CHEEK_PRESSES> = 32768;

        <android.view.WindowManager$LayoutParams: int FLAG_HARDWARE_ACCELERATED> = 16777216;

        <android.view.WindowManager$LayoutParams: int FLAG_FULLSCREEN> = 1024;

        <android.view.WindowManager$LayoutParams: int FLAG_FORCE_NOT_FULLSCREEN> = 2048;

        <android.view.WindowManager$LayoutParams: int FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS> = -2147483648;

        <android.view.WindowManager$LayoutParams: int FLAG_DITHER> = 4096;

        <android.view.WindowManager$LayoutParams: int FLAG_DISMISS_KEYGUARD> = 4194304;

        <android.view.WindowManager$LayoutParams: int FLAG_DIM_BEHIND> = 2;

        <android.view.WindowManager$LayoutParams: int FLAG_BLUR_BEHIND> = 4;

        <android.view.WindowManager$LayoutParams: int FLAG_ALT_FOCUSABLE_IM> = 131072;

        <android.view.WindowManager$LayoutParams: int FLAG_ALLOW_LOCK_WHILE_SCREEN_ON> = 1;

        <android.view.WindowManager$LayoutParams: int FLAGS_CHANGED> = 4;

        <android.view.WindowManager$LayoutParams: int FIRST_SYSTEM_WINDOW> = 2000;

        <android.view.WindowManager$LayoutParams: int FIRST_SUB_WINDOW> = 1000;

        <android.view.WindowManager$LayoutParams: int FIRST_APPLICATION_WINDOW> = 1;

        <android.view.WindowManager$LayoutParams: int DIM_AMOUNT_CHANGED> = 32;

        <android.view.WindowManager$LayoutParams: int COLOR_MODE_CHANGED> = 67108864;

        <android.view.WindowManager$LayoutParams: int BUTTON_BRIGHTNESS_CHANGED> = 8192;

        <android.view.WindowManager$LayoutParams: float BRIGHTNESS_OVERRIDE_OFF> = 0.0F;

        <android.view.WindowManager$LayoutParams: float BRIGHTNESS_OVERRIDE_NONE> = -1.0F;

        <android.view.WindowManager$LayoutParams: float BRIGHTNESS_OVERRIDE_FULL> = 1.0F;

        <android.view.WindowManager$LayoutParams: int ANIMATION_CHANGED> = 16;

        <android.view.WindowManager$LayoutParams: int ALPHA_CHANGED> = 128;

        <android.view.WindowManager$LayoutParams: int ACCESSIBILITY_TITLE_CHANGED> = 33554432;

        <android.view.WindowManager$LayoutParams: int ACCESSIBILITY_ANCHOR_CHANGED> = 16777216;

        $r0 = new android.view.WindowManager$LayoutParams$1;

        specialinvoke $r0.<android.view.WindowManager$LayoutParams$1: void <init>()>();

        <android.view.WindowManager$LayoutParams: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.WindowManager$LayoutParams r0;
        android.graphics.Rect $r1;
        long $l0;
        android.view.InsetsFlags $r2;
        int $i1, $i2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l0;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i1 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i1;

        $i2 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i2;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int type> = 2;

        r0.<android.view.WindowManager$LayoutParams: int format> = -1;

        return;
    }

    public void <init>(int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, $i2, $i3;
        android.graphics.Rect $r1;
        long $l1;
        android.view.InsetsFlags $r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l1;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i2 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i2;

        $i3 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i3;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int type> = i0;

        r0.<android.view.WindowManager$LayoutParams: int format> = -1;

        return;
    }

    public void <init>(int, int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, i1, $i3, $i4;
        android.graphics.Rect $r1;
        long $l2;
        android.view.InsetsFlags $r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l2 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l2;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i3 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i3;

        $i4 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i4;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int type> = i0;

        r0.<android.view.WindowManager$LayoutParams: int flags> = i1;

        r0.<android.view.WindowManager$LayoutParams: int format> = -1;

        return;
    }

    public void <init>(int, int, int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, i1, i2, $i4, $i5;
        android.graphics.Rect $r1;
        long $l3;
        android.view.InsetsFlags $r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l3 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l3;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i4 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i4;

        $i5 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i5;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int type> = i0;

        r0.<android.view.WindowManager$LayoutParams: int flags> = i1;

        r0.<android.view.WindowManager$LayoutParams: int format> = i2;

        return;
    }

    public void <init>(int, int, int, int, int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, i1, i2, i3, i4, $i6, $i7;
        android.graphics.Rect $r1;
        long $l5;
        android.view.InsetsFlags $r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(i0, i1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l5 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l5;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i6 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i6;

        $i7 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i7;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int type> = i2;

        r0.<android.view.WindowManager$LayoutParams: int flags> = i3;

        r0.<android.view.WindowManager$LayoutParams: int format> = i4;

        return;
    }

    public void <init>(int, int, int, int, int, int, int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9;
        android.graphics.Rect $r1;
        long $l7;
        android.view.InsetsFlags $r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(i0, i1);

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r1;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l7 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l7;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r2 = new android.view.InsetsFlags;

        specialinvoke $r2.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r2;

        $i8 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i8;

        $i9 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i9;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        r0.<android.view.WindowManager$LayoutParams: int x> = i2;

        r0.<android.view.WindowManager$LayoutParams: int y> = i3;

        r0.<android.view.WindowManager$LayoutParams: int type> = i4;

        r0.<android.view.WindowManager$LayoutParams: int flags> = i5;

        r0.<android.view.WindowManager$LayoutParams: int format> = i6;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.view.WindowManager$LayoutParams r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i35, $i36;
        int[] r2;
        android.graphics.Rect $r3, $r10, $r11, $r12, $r13;
        long $l1, $l23, $l30, $l32;
        android.view.InsetsFlags $r4, $r17, $r18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.os.IBinder $r5;
        java.lang.String $r6;
        android.os.Parcelable$Creator $r7, $r14;
        java.lang.Object $r8, $r15;
        java.lang.CharSequence $r9, $r16;
        boolean $z1, $z2, z3, z4, z5;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets> = $r3;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = 1;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = 1.0F;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = -1.0F;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = 0;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = null;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = -1;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = 0;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = -1L;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l1;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = -1L;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = 0;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = 0;

        $r4 = new android.view.InsetsFlags;

        specialinvoke $r4.<android.view.InsetsFlags: void <init>()>();

        r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags> = $r4;

        $i2 = staticinvoke <android.view.WindowInsets$Type: int systemBars()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i2;

        $i3 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i3;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = 0;

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = null;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = null;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int width> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int height> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int x> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int y> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int type> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int flags> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int privateFlags> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int softInputMode> = $i11;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int gravity> = $i13;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float horizontalMargin> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float verticalMargin> = $f1;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int format> = $i14;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int windowAnimations> = $i15;

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float alpha> = $f2;

        $f3 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = $f3;

        $f4 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = $f4;

        $f5 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = $f5;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = $i16;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = $r6;

        $r7 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r9 = (java.lang.CharSequence) $r8;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = $r9;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = $i17;

        $f6 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate> = $f6;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId> = $i18;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility> = $i19;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility> = $i20;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i21 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners> = z3;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int inputFeatures> = $i22;

        $l23 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = $l23;

        $r10 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10.<android.graphics.Rect: int left> = $i24;

        $r11 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r11.<android.graphics.Rect: int top> = $i25;

        $r12 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r12.<android.graphics.Rect: int right> = $i26;

        $r13 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r13.<android.graphics.Rect: int bottom> = $i27;

        $i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets> = z4;

        $i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i29 == 0 goto label5;

        z5 = 1;

        goto label6;

     label5:
        z5 = 0;

     label6:
        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = z5;

        $l30 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l30;

        $r14 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r16 = (java.lang.CharSequence) $r15;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle> = $r16;

        $i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = $i31;

        $l32 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = $l32;

        $r17 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r17.<android.view.InsetsFlags: int appearance> = $i33;

        $r18 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r18.<android.view.InsetsFlags: int behavior> = $i34;

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = $i35;

        $i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = $i36;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = $z1;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = $z2;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 0 goto label7;

        r2 = newarray (int)[i0];

        r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes> = r2;

        virtualinvoke r1.<android.os.Parcel: void readIntArray(int[])>(r2);

     label7:
        return;
    }

    private static java.lang.String inputFeatureToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 4 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "DISABLE_USER_ACTIVITY";

     label2:
        return "NO_INPUT_CHANNEL";

     label3:
        return "DISABLE_POINTER_GESTURES";
    }

    public static boolean isSystemAlertWindowType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 2002 goto label1;

        if i0 == 2003 goto label1;

        if i0 == 2006 goto label1;

        if i0 == 2007 goto label1;

        if i0 == 2010 goto label1;

        if i0 == 2038 goto label1;

        return 0;

     label1:
        return 1;
    }

    private static java.lang.String layoutInDisplayCutoutModeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "always";

     label2:
        return "never";

     label3:
        return "shortEdges";

     label4:
        return "default";
    }

    public static boolean mayUseInputMethod(int)
    {
        int i0, $i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = i0 & 8;

        if $i1 == 8 goto label1;

        $i2 = i0 & 131072;

        if $i2 == 131072 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static java.lang.String rotationAnimationToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == -1 goto label5;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label1:
        return "SEAMLESS";

     label2:
        return "JUMPCUT";

     label3:
        return "CROSSFADE";

     label4:
        return "ROTATE";

     label5:
        return "UNSPECIFIED";
    }

    private static java.lang.String softInputModeToString(int)
    {
        int i0, $i1, $i2, i3, i4, $i5;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i3 = i0 & 15;

        if i3 == 0 goto label07;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state=");

        if i3 == 1 goto label05;

        if i3 == 2 goto label04;

        if i3 == 3 goto label03;

        if i3 == 4 goto label02;

        if i3 == 5 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        goto label06;

     label01:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("always_visible");

        goto label06;

     label02:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("visible");

        goto label06;

     label03:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("always_hidden");

        goto label06;

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hidden");

        goto label06;

     label05:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unchanged");

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label07:
        i4 = i0 & 240;

        if i4 == 0 goto label12;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adjust=");

        if i4 == 16 goto label10;

        if i4 == 32 goto label09;

        if i4 == 48 goto label08;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        goto label11;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nothing");

        goto label11;

     label09:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pan");

        goto label11;

     label10:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resize");

     label11:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label12:
        $i5 = i0 & 256;

        if $i5 == 0 goto label13;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forwardNavigation");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label13:
        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i2 = $i1 - 1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    void backup()
    {
        android.view.WindowManager$LayoutParams r0;
        int[] r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 = r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup>;

        r2 = r1;

        if r1 != null goto label1;

        r2 = newarray (int)[4];

        r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup> = r2;

     label1:
        $i0 = r0.<android.view.WindowManager$LayoutParams: int x>;

        r2[0] = $i0;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int y>;

        r2[1] = $i1;

        $i2 = r0.<android.view.WindowManager$LayoutParams: int width>;

        r2[2] = $i2;

        $i3 = r0.<android.view.WindowManager$LayoutParams: int height>;

        r2[3] = $i3;

        return;
    }

    public final int copyFrom(android.view.WindowManager$LayoutParams)
    {
        android.view.WindowManager$LayoutParams r0, r1;
        int $i0, $i1, $i2, $i3, $i12, $i13, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i34, i35, i37, i38, i44, i45, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i92, i93, i94, i95, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113;
        byte $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b16, $b17, b32, b33, b36, b39, b40, b41, b42, b43, b46, $b71;
        android.os.IBinder $r2, $r24;
        java.lang.String $r3, $r23;
        java.lang.CharSequence $r4, $r5, $r8, $r9, r25, r26;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;
        android.graphics.Rect $r6, $r7, $r21, $r22;
        long $l18, l90, l91, l96, l97;
        android.view.InsetsFlags $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20;
        int[] $r14, $r15, $r16;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        b32 = 0;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int width>;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int width>;

        if $i1 == $i0 goto label01;

        $i31 = r1.<android.view.WindowManager$LayoutParams: int width>;

        r0.<android.view.WindowManager$LayoutParams: int width> = $i31;

        b32 = 0 | 1;

     label01:
        b33 = b32;

        $i3 = r0.<android.view.WindowManager$LayoutParams: int height>;

        $i2 = r1.<android.view.WindowManager$LayoutParams: int height>;

        if $i3 == $i2 goto label02;

        $i30 = r1.<android.view.WindowManager$LayoutParams: int height>;

        r0.<android.view.WindowManager$LayoutParams: int height> = $i30;

        b33 = b32 | 1;

     label02:
        i34 = r0.<android.view.WindowManager$LayoutParams: int x>;

        i35 = r1.<android.view.WindowManager$LayoutParams: int x>;

        b36 = b33;

        if i34 == i35 goto label03;

        r0.<android.view.WindowManager$LayoutParams: int x> = i35;

        b36 = b33 | 1;

     label03:
        i37 = r0.<android.view.WindowManager$LayoutParams: int y>;

        i38 = r1.<android.view.WindowManager$LayoutParams: int y>;

        b39 = b36;

        if i37 == i38 goto label04;

        r0.<android.view.WindowManager$LayoutParams: int y> = i38;

        b39 = b36 | 1;

     label04:
        f0 = r0.<android.view.WindowManager$LayoutParams: float horizontalWeight>;

        f1 = r1.<android.view.WindowManager$LayoutParams: float horizontalWeight>;

        b40 = b39;

        $b4 = f0 cmpl f1;

        if $b4 == 0 goto label05;

        r0.<android.view.WindowManager$LayoutParams: float horizontalWeight> = f1;

        b40 = b39 | 1;

     label05:
        f2 = r0.<android.view.WindowManager$LayoutParams: float verticalWeight>;

        f3 = r1.<android.view.WindowManager$LayoutParams: float verticalWeight>;

        b41 = b40;

        $b5 = f2 cmpl f3;

        if $b5 == 0 goto label06;

        r0.<android.view.WindowManager$LayoutParams: float verticalWeight> = f3;

        b41 = b40 | 1;

     label06:
        f4 = r0.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        f5 = r1.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        b42 = b41;

        $b6 = f4 cmpl f5;

        if $b6 == 0 goto label07;

        r0.<android.view.WindowManager$LayoutParams: float horizontalMargin> = f5;

        b42 = b41 | 1;

     label07:
        f6 = r0.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        f7 = r1.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        b43 = b42;

        $b7 = f6 cmpl f7;

        if $b7 == 0 goto label08;

        r0.<android.view.WindowManager$LayoutParams: float verticalMargin> = f7;

        b43 = b42 | 1;

     label08:
        i44 = r0.<android.view.WindowManager$LayoutParams: int type>;

        i45 = r1.<android.view.WindowManager$LayoutParams: int type>;

        b46 = b43;

        if i44 == i45 goto label09;

        r0.<android.view.WindowManager$LayoutParams: int type> = i45;

        b46 = b43 | 2;

     label09:
        i47 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        i48 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        i49 = b46;

        if i47 == i48 goto label11;

        i50 = b46;

        $i27 = i47 ^ i48;

        $i28 = 201326592 & $i27;

        if $i28 == 0 goto label10;

        i50 = b46 | 524288;

     label10:
        $i29 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        r0.<android.view.WindowManager$LayoutParams: int flags> = $i29;

        i49 = i50 | 4;

     label11:
        i51 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        i52 = r1.<android.view.WindowManager$LayoutParams: int privateFlags>;

        i53 = i49;

        if i51 == i52 goto label12;

        r0.<android.view.WindowManager$LayoutParams: int privateFlags> = i52;

        i53 = i49 | 131072;

     label12:
        i54 = r0.<android.view.WindowManager$LayoutParams: int softInputMode>;

        i55 = r1.<android.view.WindowManager$LayoutParams: int softInputMode>;

        i56 = i53;

        if i54 == i55 goto label13;

        r0.<android.view.WindowManager$LayoutParams: int softInputMode> = i55;

        i56 = i53 | 512;

     label13:
        i57 = r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        i58 = r1.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        i59 = i56;

        if i57 == i58 goto label14;

        r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode> = i58;

        i59 = i56 | 1;

     label14:
        i60 = r0.<android.view.WindowManager$LayoutParams: int gravity>;

        i61 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        i62 = i59;

        if i60 == i61 goto label15;

        r0.<android.view.WindowManager$LayoutParams: int gravity> = i61;

        i62 = i59 | 1;

     label15:
        i63 = r0.<android.view.WindowManager$LayoutParams: int format>;

        i64 = r1.<android.view.WindowManager$LayoutParams: int format>;

        i65 = i62;

        if i63 == i64 goto label16;

        r0.<android.view.WindowManager$LayoutParams: int format> = i64;

        i65 = i62 | 8;

     label16:
        i66 = r0.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        i67 = r1.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        i68 = i65;

        if i66 == i67 goto label17;

        r0.<android.view.WindowManager$LayoutParams: int windowAnimations> = i67;

        i68 = i65 | 16;

     label17:
        $r2 = r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r2 != null goto label18;

        $r24 = r1.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r24;

     label18:
        $r3 = r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        if $r3 != null goto label19;

        $r23 = r1.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = $r23;

     label19:
        i69 = i68;

        $r5 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        $r4 = r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z0 != 0 goto label20;

        r25 = r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        i69 = i68;

        if r25 == null goto label20;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = r25;

        i69 = i68 | 64;

     label20:
        f8 = r0.<android.view.WindowManager$LayoutParams: float alpha>;

        f9 = r1.<android.view.WindowManager$LayoutParams: float alpha>;

        i70 = i69;

        $b71 = f8 cmpl f9;

        if $b71 == 0 goto label21;

        r0.<android.view.WindowManager$LayoutParams: float alpha> = f9;

        i70 = i69 | 128;

     label21:
        f10 = r0.<android.view.WindowManager$LayoutParams: float dimAmount>;

        f11 = r1.<android.view.WindowManager$LayoutParams: float dimAmount>;

        i72 = i70;

        $b8 = f10 cmpl f11;

        if $b8 == 0 goto label22;

        r0.<android.view.WindowManager$LayoutParams: float dimAmount> = f11;

        i72 = i70 | 32;

     label22:
        f12 = r0.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        f13 = r1.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        i73 = i72;

        $b9 = f12 cmpl f13;

        if $b9 == 0 goto label23;

        r0.<android.view.WindowManager$LayoutParams: float screenBrightness> = f13;

        i73 = i72 | 2048;

     label23:
        f14 = r0.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        f15 = r1.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        i74 = i73;

        $b10 = f14 cmpl f15;

        if $b10 == 0 goto label24;

        r0.<android.view.WindowManager$LayoutParams: float buttonBrightness> = f15;

        i74 = i73 | 8192;

     label24:
        i75 = r0.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        i76 = r1.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        i77 = i74;

        if i75 == i76 goto label25;

        r0.<android.view.WindowManager$LayoutParams: int rotationAnimation> = i76;

        i77 = i74 | 4096;

     label25:
        i78 = r0.<android.view.WindowManager$LayoutParams: int screenOrientation>;

        i79 = r1.<android.view.WindowManager$LayoutParams: int screenOrientation>;

        i80 = i77;

        if i78 == i79 goto label26;

        r0.<android.view.WindowManager$LayoutParams: int screenOrientation> = i79;

        i80 = i77 | 1024;

     label26:
        f16 = r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        f17 = r1.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        i81 = i80;

        $b11 = f16 cmpl f17;

        if $b11 == 0 goto label27;

        r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate> = f17;

        i81 = i80 | 2097152;

     label27:
        i82 = r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        i83 = r1.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        i84 = i81;

        if i82 == i83 goto label28;

        r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId> = i83;

        i84 = i81 | 8388608;

     label28:
        $i13 = r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        $i12 = r1.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        if $i13 != $i12 goto label29;

        i85 = i84;

        $i26 = r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        $i25 = r1.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        if $i26 == $i25 goto label30;

     label29:
        $i14 = r1.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility> = $i14;

        $i15 = r1.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility> = $i15;

        i85 = i84 | 16384;

     label30:
        z4 = r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        z5 = r1.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        i86 = i85;

        if z4 == z5 goto label31;

        r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners> = z5;

        i86 = i85 | 32768;

     label31:
        i87 = r0.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        i88 = r1.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        i89 = i86;

        if i87 == i88 goto label32;

        r0.<android.view.WindowManager$LayoutParams: int inputFeatures> = i88;

        i89 = i86 | 65536;

     label32:
        l90 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        l91 = r1.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        i92 = i89;

        $b16 = l90 cmp l91;

        if $b16 == 0 goto label33;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = l91;

        i92 = i89 | 262144;

     label33:
        i93 = i92;

        $r7 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $r6 = r1.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $z1 = virtualinvoke $r7.<android.graphics.Rect: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label34;

        $r22 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $r21 = r1.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        virtualinvoke $r22.<android.graphics.Rect: void set(android.graphics.Rect)>($r21);

        i93 = i92 | 1048576;

     label34:
        z6 = r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets>;

        z7 = r1.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets>;

        i94 = i93;

        if z6 == z7 goto label35;

        r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets> = z7;

        i94 = i93 | 1048576;

     label35:
        z8 = r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets>;

        z9 = r1.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets>;

        i95 = i94;

        if z8 == z9 goto label36;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = z9;

        i95 = i94 | 1048576;

     label36:
        l96 = r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor>;

        l97 = r1.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor>;

        i98 = i95;

        $b17 = l96 cmp l97;

        if $b17 == 0 goto label37;

        r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = l97;

        i98 = i95 | 16777216;

     label37:
        i99 = i98;

        $r9 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle>;

        $r8 = r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z2 != 0 goto label38;

        r26 = r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle>;

        i99 = i98;

        if r26 == null goto label38;

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle> = r26;

        i99 = i98 | 33554432;

     label38:
        i100 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        i101 = r1.<android.view.WindowManager$LayoutParams: int mColorMode>;

        i102 = i99;

        if i100 == i101 goto label39;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = i101;

        i102 = i99 | 67108864;

     label39:
        z10 = r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing>;

        z11 = r1.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing>;

        i103 = i102;

        if z10 == z11 goto label40;

        r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing> = z11;

        i103 = i102 | 268435456;

     label40:
        $l18 = r1.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds>;

        r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds> = $l18;

        i104 = i103;

        $r10 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i20 = $r10.<android.view.InsetsFlags: int appearance>;

        $r11 = r1.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i19 = $r11.<android.view.InsetsFlags: int appearance>;

        if $i20 == $i19 goto label41;

        $r20 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $r19 = r1.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i24 = $r19.<android.view.InsetsFlags: int appearance>;

        $r20.<android.view.InsetsFlags: int appearance> = $i24;

        i104 = i103 | 134217728;

     label41:
        i105 = i104;

        $r12 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i22 = $r12.<android.view.InsetsFlags: int behavior>;

        $r13 = r1.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i21 = $r13.<android.view.InsetsFlags: int behavior>;

        if $i22 == $i21 goto label42;

        $r18 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $r17 = r1.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i23 = $r17.<android.view.InsetsFlags: int behavior>;

        $r18.<android.view.InsetsFlags: int behavior> = $i23;

        i105 = i104 | 134217728;

     label42:
        i106 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        i107 = r1.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        i108 = i105;

        if i106 == i107 goto label43;

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = i107;

        i108 = i105 | 1;

     label43:
        i109 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        i110 = r1.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        i111 = i108;

        if i109 == i110 goto label44;

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = i110;

        i111 = i108 | 1;

     label44:
        z12 = r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        z13 = r1.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        i112 = i111;

        if z12 == z13 goto label45;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = z13;

        i112 = i111 | 1;

     label45:
        i113 = i112;

        $r15 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        $r14 = r1.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r15, $r14);

        if $z3 != 0 goto label46;

        $r16 = r1.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes> = $r16;

        i113 = i112 | 1;

     label46:
        return i113;
    }

    public java.lang.String debug(java.lang.String)
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.StringBuilder $r2, $r9;
        java.lang.String $r7, $r8, $r14, r15;
        java.lang.CharSequence $r11;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r15 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents of ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Debug", $r7);

        $r8 = specialinvoke r0.<android.view.ViewGroup$LayoutParams: java.lang.String debug(java.lang.String)>("");

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Debug", $r8);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Debug", "");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WindowManager.LayoutParams={title=");

        $r11 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Debug", $r14);

        return "";
    }

    public int describeContents()
    {
        android.view.WindowManager$LayoutParams r0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        return 0;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        android.view.WindowManager$LayoutParams r0;
        android.util.proto.ProtoOutputStream r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1;
        long $l12, l22, l23;
        android.view.InsetsFlags $r2, $r3;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l22 := @parameter1: long;

        l23 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l22);

        $i0 = r0.<android.view.WindowManager$LayoutParams: int type>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i0);

        $i1 = r0.<android.view.WindowManager$LayoutParams: int x>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $i2 = r0.<android.view.WindowManager$LayoutParams: int y>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $i3 = r0.<android.view.WindowManager$LayoutParams: int width>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i3);

        $i4 = r0.<android.view.WindowManager$LayoutParams: int height>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i4);

        $f0 = r0.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562374L, $f0);

        $f1 = r0.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562375L, $f1);

        $i5 = r0.<android.view.WindowManager$LayoutParams: int gravity>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, $i5);

        $i6 = r0.<android.view.WindowManager$LayoutParams: int softInputMode>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464265L, $i6);

        $i7 = r0.<android.view.WindowManager$LayoutParams: int format>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169930L, $i7);

        $i8 = r0.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464267L, $i8);

        $f2 = r0.<android.view.WindowManager$LayoutParams: float alpha>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562380L, $f2);

        $f3 = r0.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562381L, $f3);

        $f4 = r0.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562382L, $f4);

        $i9 = r0.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169935L, $i9);

        $f5 = r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,float)>(1108101562384L, $f5);

        $i10 = r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464273L, $i10);

        $z0 = r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366162L, $z0);

        $i11 = r0.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202643L, $i11);

        $l12 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529684L, $l12);

        $i13 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169943L, $i13);

        $i14 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202648L, $i14);

        $i15 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202650L, $i15);

        $i16 = r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202651L, $i16);

        $i17 = r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202652L, $i17);

        $r2 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i18 = $r2.<android.view.InsetsFlags: int appearance>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202653L, $i18);

        $r3 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i19 = $r3.<android.view.InsetsFlags: int behavior>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202654L, $i19);

        $i20 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202655L, $i20);

        $i21 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1155346202656L, $i21);

        $z1 = r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366177L, $z1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l23);

        return;
    }

    public void dumpDimensions(java.lang.StringBuilder)
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.StringBuilder r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r12, r13;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $i1 = r0.<android.view.WindowManager$LayoutParams: int x>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i2 = r0.<android.view.WindowManager$LayoutParams: int y>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")(");

        i0 = r0.<android.view.WindowManager$LayoutParams: int width>;

        if i0 != -1 goto label1;

        r12 = "fill";

        goto label3;

     label1:
        $i3 = r0.<android.view.WindowManager$LayoutParams: int width>;

        if $i3 != -2 goto label2;

        r12 = "wrap";

        goto label3;

     label2:
        $i4 = r0.<android.view.WindowManager$LayoutParams: int width>;

        r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        $i7 = r0.<android.view.WindowManager$LayoutParams: int height>;

        if $i7 != -1 goto label4;

        r13 = "fill";

        goto label6;

     label4:
        $i5 = r0.<android.view.WindowManager$LayoutParams: int height>;

        if $i5 != -2 goto label5;

        r13 = "wrap";

        goto label6;

     label5:
        $i6 = r0.<android.view.WindowManager$LayoutParams: int height>;

        r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.view.WindowManager$LayoutParams r0;
        android.view.ViewHierarchyEncoder r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.view.ViewGroup$LayoutParams: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $i0 = r0.<android.view.WindowManager$LayoutParams: int x>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("x", $i0);

        $i1 = r0.<android.view.WindowManager$LayoutParams: int y>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("y", $i1);

        $f0 = r0.<android.view.WindowManager$LayoutParams: float horizontalWeight>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,float)>("horizontalWeight", $f0);

        $f1 = r0.<android.view.WindowManager$LayoutParams: float verticalWeight>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,float)>("verticalWeight", $f1);

        $i2 = r0.<android.view.WindowManager$LayoutParams: int type>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("type", $i2);

        $i3 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("flags", $i3);

        return;
    }

    public int getColorMode()
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        return $i0;
    }

    public int getFitInsetsSides()
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        return $i0;
    }

    public int getFitInsetsTypes()
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        return $i0;
    }

    public final java.lang.CharSequence getTitle()
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.Object r1;
        java.lang.CharSequence r2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        if r1 == null goto label1;

        goto label2;

     label1:
        r1 = "";

     label2:
        r2 = (java.lang.CharSequence) r1;

        return r2;
    }

    public final long getUserActivityTimeout()
    {
        android.view.WindowManager$LayoutParams r0;
        long $l0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $l0 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        return $l0;
    }

    public boolean isFitInsetsIgnoringVisibility()
    {
        android.view.WindowManager$LayoutParams r0;
        boolean $z0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $z0 = r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        return $z0;
    }

    public boolean isFullscreen()
    {
        android.view.WindowManager$LayoutParams r0;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int x>;

        if $i0 != 0 goto label1;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int y>;

        if $i1 != 0 goto label1;

        $i2 = r0.<android.view.WindowManager$LayoutParams: int width>;

        if $i2 != -1 goto label1;

        $i3 = r0.<android.view.WindowManager$LayoutParams: int height>;

        if $i3 != -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void restore()
    {
        android.view.WindowManager$LayoutParams r0;
        int[] r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 = r0.<android.view.WindowManager$LayoutParams: int[] mCompatibilityParamsBackup>;

        if r1 == null goto label1;

        $i0 = r1[0];

        r0.<android.view.WindowManager$LayoutParams: int x> = $i0;

        $i1 = r1[1];

        r0.<android.view.WindowManager$LayoutParams: int y> = $i1;

        $i2 = r1[2];

        r0.<android.view.WindowManager$LayoutParams: int width> = $i2;

        $i3 = r1[3];

        r0.<android.view.WindowManager$LayoutParams: int height> = $i3;

     label1:
        return;
    }

    public void scale(float)
    {
        android.view.WindowManager$LayoutParams r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.view.WindowManager$LayoutParams;

        f0 := @parameter0: float;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int x>;

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        r0.<android.view.WindowManager$LayoutParams: int x> = $i1;

        $i2 = r0.<android.view.WindowManager$LayoutParams: int y>;

        $f4 = (float) $i2;

        $f5 = $f4 * f0;

        $f6 = $f5 + 0.5F;

        $i3 = (int) $f6;

        r0.<android.view.WindowManager$LayoutParams: int y> = $i3;

        $i4 = r0.<android.view.WindowManager$LayoutParams: int width>;

        if $i4 <= 0 goto label1;

        $i8 = r0.<android.view.WindowManager$LayoutParams: int width>;

        $f10 = (float) $i8;

        $f11 = $f10 * f0;

        $f12 = $f11 + 0.5F;

        $i9 = (int) $f12;

        r0.<android.view.WindowManager$LayoutParams: int width> = $i9;

     label1:
        $i5 = r0.<android.view.WindowManager$LayoutParams: int height>;

        if $i5 <= 0 goto label2;

        $i6 = r0.<android.view.WindowManager$LayoutParams: int height>;

        $f7 = (float) $i6;

        $f8 = $f7 * f0;

        $f9 = $f8 + 0.5F;

        $i7 = (int) $f9;

        r0.<android.view.WindowManager$LayoutParams: int height> = $i7;

     label2:
        return;
    }

    public void setColorMode(int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        r0.<android.view.WindowManager$LayoutParams: int mColorMode> = i0;

        return;
    }

    public void setFitInsetsIgnoringVisibility(boolean)
    {
        android.view.WindowManager$LayoutParams r0;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.view.WindowManager$LayoutParams;

        z0 := @parameter0: boolean;

        r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility> = z0;

        $i0 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 | 268435456;

        r0.<android.view.WindowManager$LayoutParams: int privateFlags> = $i1;

        return;
    }

    public void setFitInsetsSides(int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides> = i0;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 | 268435456;

        r0.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        return;
    }

    public void setFitInsetsTypes(int)
    {
        android.view.WindowManager$LayoutParams r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.WindowManager$LayoutParams;

        i0 := @parameter0: int;

        r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes> = i0;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 | 268435456;

        r0.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        return;
    }

    public final void setSurfaceInsets(android.view.View, boolean, boolean)
    {
        android.view.WindowManager$LayoutParams r0;
        boolean z0, z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1;
        double $d0, $d1;
        android.graphics.Rect $r1, $r2, $r3, $r4, r6;
        android.view.View r5;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r5 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $f0 = virtualinvoke r5.<android.view.View: float getZ()>();

        $f1 = $f0 * 2.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d1;

        if i0 != 0 goto label1;

        $r4 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        goto label2;

     label1:
        r6 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i1 = r6.<android.graphics.Rect: int left>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i1);

        $r1 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        $r2 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i5 = $r2.<android.graphics.Rect: int right>;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i5);

        $r3 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i7 = $r3.<android.graphics.Rect: int bottom>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i7);

        virtualinvoke r6.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i4, $i6, $i8);

     label2:
        r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets> = z0;

        r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets> = z1;

        return;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.CharSequence r1, $r2, r4;
        java.lang.Object r3;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: java.lang.CharSequence;

        r3 = r1;

        if r1 != null goto label1;

        r3 = "";

     label1:
        r4 = (java.lang.CharSequence) r3;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r4);

        r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle> = $r2;

        return;
    }

    public final void setUserActivityTimeout(long)
    {
        android.view.WindowManager$LayoutParams r0;
        long l0;

        r0 := @this: android.view.WindowManager$LayoutParams;

        l0 := @parameter0: long;

        r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout> = l0;

        return;
    }

    public java.lang.String toString()
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.String $r1;

        r0 := @this: android.view.WindowManager$LayoutParams;

        $r1 = virtualinvoke r0.<android.view.WindowManager$LayoutParams: java.lang.String toString(java.lang.String)>("");

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        android.view.WindowManager$LayoutParams r0;
        java.lang.String r1, $r6, $r11, $r15, $r21, $r22, $r28, $r31, $r35, $r39, $r41, $r45, $r47, $r52, $r54, $r59, $r61, $r65, $r67, $r71, $r73, $r77, $r82, $r92, $r101, $r110, $r113, $r116, $r119, $r122, $r126;
        java.lang.StringBuilder $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b9, $b10, $b11, $b13, $b17;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long $l16, $l41;
        android.graphics.Rect $r8, $r86, $r87, $r88, $r132;
        android.view.InsetsFlags $r17, $r18, $r51, $r58;
        int[] $r19, $r26, $r27;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        virtualinvoke r0.<android.view.WindowManager$LayoutParams: void dumpDimensions(java.lang.StringBuilder)>($r3);

        $f0 = r0.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label01;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hm=");

        $f11 = r0.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f11);

     label01:
        $f1 = r0.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 == 0 goto label02;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vm=");

        $f10 = r0.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

     label02:
        $i2 = r0.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i2 == 0 goto label03;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gr=");

        $i50 = r0.<android.view.WindowManager$LayoutParams: int gravity>;

        $r126 = staticinvoke <android.view.Gravity: java.lang.String toString(int)>($i50);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

     label03:
        $i3 = r0.<android.view.WindowManager$LayoutParams: int softInputMode>;

        if $i3 == 0 goto label04;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sim={");

        $i49 = r0.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $r122 = staticinvoke <android.view.WindowManager$LayoutParams: java.lang.String softInputModeToString(int)>($i49);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

     label04:
        $i4 = r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        if $i4 == 0 goto label05;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" layoutInDisplayCutoutMode=");

        $i48 = r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        $r119 = staticinvoke <android.view.WindowManager$LayoutParams: java.lang.String layoutInDisplayCutoutModeToString(int)>($i48);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

     label05:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ty=");

        $i5 = r0.<android.view.WindowManager$LayoutParams: int type>;

        $r6 = staticinvoke <android.view.ViewDebug: java.lang.String intToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/WindowManager$LayoutParams;", "type", $i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $i6 = r0.<android.view.WindowManager$LayoutParams: int format>;

        if $i6 == -1 goto label06;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fmt=");

        $i47 = r0.<android.view.WindowManager$LayoutParams: int format>;

        $r116 = staticinvoke <android.graphics.PixelFormat: java.lang.String formatToString(int)>($i47);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

     label06:
        $i7 = r0.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        if $i7 == 0 goto label07;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wanim=0x");

        $i46 = r0.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        $r113 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

     label07:
        $i8 = r0.<android.view.WindowManager$LayoutParams: int screenOrientation>;

        if $i8 == -1 goto label08;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or=");

        $i45 = r0.<android.view.WindowManager$LayoutParams: int screenOrientation>;

        $r110 = staticinvoke <android.content.pm.ActivityInfo: java.lang.String screenOrientationToString(int)>($i45);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

     label08:
        $f2 = r0.<android.view.WindowManager$LayoutParams: float alpha>;

        $b9 = $f2 cmpl 1.0F;

        if $b9 == 0 goto label09;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alpha=");

        $f9 = r0.<android.view.WindowManager$LayoutParams: float alpha>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f9);

     label09:
        $f3 = r0.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        $b10 = $f3 cmpl -1.0F;

        if $b10 == 0 goto label10;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sbrt=");

        $f8 = r0.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

     label10:
        $f4 = r0.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        $b11 = $f4 cmpl -1.0F;

        if $b11 == 0 goto label11;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bbrt=");

        $f7 = r0.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

     label11:
        $i12 = r0.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        if $i12 == 0 goto label12;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rotAnim=");

        $i44 = r0.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        $r101 = staticinvoke <android.view.WindowManager$LayoutParams: java.lang.String rotationAnimationToString(int)>($i44);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

     label12:
        $f5 = r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        $b13 = $f5 cmpl 0.0F;

        if $b13 == 0 goto label13;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preferredRefreshRate=");

        $f6 = r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

     label13:
        $i14 = r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        if $i14 == 0 goto label14;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preferredDisplayMode=");

        $i43 = r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

     label14:
        $z0 = r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        if $z0 == 0 goto label15;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sysuil=");

        $z7 = r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

     label15:
        $i15 = r0.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        if $i15 == 0 goto label16;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" if=");

        $i42 = r0.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        $r92 = staticinvoke <android.view.WindowManager$LayoutParams: java.lang.String inputFeatureToString(int)>($i42);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

     label16:
        $l16 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        $b17 = $l16 cmp 0L;

        if $b17 < 0 goto label17;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userActivityTimeout=");

        $l41 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l41);

     label17:
        $r8 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i18 = $r8.<android.graphics.Rect: int left>;

        if $i18 != 0 goto label18;

        $r86 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i38 = $r86.<android.graphics.Rect: int top>;

        if $i38 != 0 goto label18;

        $r87 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i39 = $r87.<android.graphics.Rect: int right>;

        if $i39 != 0 goto label18;

        $r88 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i40 = $r88.<android.graphics.Rect: int bottom>;

        if $i40 != 0 goto label18;

        $z5 = r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets>;

        if $z5 != 0 goto label18;

        $z6 = r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets>;

        if $z6 != 0 goto label20;

     label18:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surfaceInsets=");

        $r132 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132);

        $z8 = r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets>;

        if $z8 == 0 goto label19;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (manual)");

     label19:
        $z1 = r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets>;

        if $z1 != 0 goto label20;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (!preservePreviousSurfaceInsets)");

     label20:
        $i51 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        if $i51 == 0 goto label21;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" colorMode=");

        $i37 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        $r82 = staticinvoke <android.content.pm.ActivityInfo: java.lang.String colorModeToString(int)>($i37);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

     label21:
        $z2 = r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing>;

        if $z2 == 0 goto label22;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preferMinimalPostProcessing=");

        $z4 = r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

     label22:
        $r11 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fl=");

        $i19 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        $r15 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/WindowManager$LayoutParams;", "flags", $i19);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $i20 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        if $i20 == 0 goto label23;

        $r73 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pfl=");

        $i36 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $r77 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/WindowManager$LayoutParams;", "privateFlags", $i36);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

     label23:
        $i21 = r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        if $i21 == 0 goto label24;

        $r67 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  sysui=");

        $i35 = r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        $r71 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/View;", "mSystemUiVisibility", $i35);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

     label24:
        $i22 = r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        if $i22 == 0 goto label25;

        $r61 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  vsysui=");

        $i34 = r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        $r65 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/View;", "mSystemUiVisibility", $i34);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

     label25:
        $r17 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i23 = $r17.<android.view.InsetsFlags: int appearance>;

        if $i23 == 0 goto label26;

        $r54 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  apr=");

        $r58 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i33 = $r58.<android.view.InsetsFlags: int appearance>;

        $r59 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/InsetsFlags;", "appearance", $i33);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

     label26:
        $r18 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i24 = $r18.<android.view.InsetsFlags: int behavior>;

        if $i24 == 0 goto label27;

        $r47 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  bhv=");

        $r51 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i32 = $r51.<android.view.InsetsFlags: int behavior>;

        $r52 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/InsetsFlags;", "behavior", $i32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

     label27:
        $i25 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        if $i25 == 0 goto label28;

        $r41 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fitTypes=");

        $i31 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        $r45 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/WindowManager$LayoutParams;", "mFitInsetsTypes", $i31);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

     label28:
        $i26 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        $i27 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        if $i26 == $i27 goto label29;

        $r35 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fitSides=");

        $i30 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        $r39 = staticinvoke <android.view.ViewDebug: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/WindowManager$LayoutParams;", "mFitInsetsSides", $i30);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label29:
        $z3 = r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        if $z3 == 0 goto label30;

        $r31 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  fitIgnoreVis");

     label30:
        $r19 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        if $r19 == null goto label33;

        $r22 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  insetsTypes=");

        i52 = 0;

     label31:
        $r26 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        $i28 = lengthof $r26;

        if i52 >= $i28 goto label33;

        if i52 <= 0 goto label32;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label32:
        $r27 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        $i29 = $r27[i52];

        $r28 = staticinvoke <android.view.InsetsState: java.lang.String typeToString(int)>($i29);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        i52 = i52 + 1;

        goto label31;

     label33:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r21 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.WindowManager$LayoutParams r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i27, $i28, $i29, $i30, $i31, i32, i33, i34;
        int[] r2, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.os.IBinder $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l19, $l24, $l26;
        android.graphics.Rect $r6, $r7, $r8, $r9;
        android.view.InsetsFlags $r11, $r12;

        r0 := @this: android.view.WindowManager$LayoutParams;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.WindowManager$LayoutParams: int width>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.WindowManager$LayoutParams: int height>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.WindowManager$LayoutParams: int x>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.WindowManager$LayoutParams: int y>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.view.WindowManager$LayoutParams: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.view.WindowManager$LayoutParams: int privateFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.view.WindowManager$LayoutParams: int softInputMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.view.WindowManager$LayoutParams: int layoutInDisplayCutoutMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $i10 = r0.<android.view.WindowManager$LayoutParams: int gravity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $f0 = r0.<android.view.WindowManager$LayoutParams: float horizontalMargin>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.WindowManager$LayoutParams: float verticalMargin>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $i11 = r0.<android.view.WindowManager$LayoutParams: int format>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<android.view.WindowManager$LayoutParams: int windowAnimations>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $f2 = r0.<android.view.WindowManager$LayoutParams: float alpha>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $f3 = r0.<android.view.WindowManager$LayoutParams: float dimAmount>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f3);

        $f4 = r0.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f4);

        $f5 = r0.<android.view.WindowManager$LayoutParams: float buttonBrightness>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f5);

        $i13 = r0.<android.view.WindowManager$LayoutParams: int rotationAnimation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $r3 = r0.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        $r4 = r0.<android.view.WindowManager$LayoutParams: java.lang.String packageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence mTitle>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r5, r1, i0);

        $i14 = r0.<android.view.WindowManager$LayoutParams: int screenOrientation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $f6 = r0.<android.view.WindowManager$LayoutParams: float preferredRefreshRate>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f6);

        $i15 = r0.<android.view.WindowManager$LayoutParams: int preferredDisplayModeId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i16 = r0.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i17 = r0.<android.view.WindowManager$LayoutParams: int subtreeSystemUiVisibility>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $z0 = r0.<android.view.WindowManager$LayoutParams: boolean hasSystemUiListeners>;

        i32 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i32);

        $i18 = r0.<android.view.WindowManager$LayoutParams: int inputFeatures>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $l19 = r0.<android.view.WindowManager$LayoutParams: long userActivityTimeout>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l19);

        $r6 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i20 = $r6.<android.graphics.Rect: int left>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $r7 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i21 = $r7.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $r8 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i22 = $r8.<android.graphics.Rect: int right>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $r9 = r0.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $i23 = $r9.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $z1 = r0.<android.view.WindowManager$LayoutParams: boolean hasManualSurfaceInsets>;

        i33 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i33);

        $z2 = r0.<android.view.WindowManager$LayoutParams: boolean preservePreviousSurfaceInsets>;

        i34 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i34);

        $l24 = r0.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l24);

        $r10 = r0.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r10, r1, i0);

        $i25 = r0.<android.view.WindowManager$LayoutParams: int mColorMode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $l26 = r0.<android.view.WindowManager$LayoutParams: long hideTimeoutMilliseconds>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l26);

        $r11 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i27 = $r11.<android.view.InsetsFlags: int appearance>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $r12 = r0.<android.view.WindowManager$LayoutParams: android.view.InsetsFlags insetsFlags>;

        $i28 = $r12.<android.view.InsetsFlags: int behavior>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $i29 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $i30 = r0.<android.view.WindowManager$LayoutParams: int mFitInsetsSides>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $z3 = r0.<android.view.WindowManager$LayoutParams: boolean mFitInsetsIgnoringVisibility>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $z4 = r0.<android.view.WindowManager$LayoutParams: boolean preferMinimalPostProcessing>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        r2 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        if r2 == null goto label1;

        $i31 = lengthof r2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r13 = r0.<android.view.WindowManager$LayoutParams: int[] providesInsetsTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r13);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }
}
