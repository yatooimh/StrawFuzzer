public interface  android.view.WindowManager extends java.lang.Object implements android.view.ViewManager
{
    public static final int DOCKED_BOTTOM;
    public static final int DOCKED_INVALID;
    public static final int DOCKED_LEFT;
    public static final int DOCKED_RIGHT;
    public static final int DOCKED_TOP;
    public static final java.lang.String INPUT_CONSUMER_NAVIGATION;
    public static final java.lang.String INPUT_CONSUMER_PIP;
    public static final java.lang.String INPUT_CONSUMER_RECENTS_ANIMATION;
    public static final java.lang.String INPUT_CONSUMER_WALLPAPER;
    public static final java.lang.String PARCEL_KEY_SHORTCUTS_ARRAY;
    public static final int REMOVE_CONTENT_MODE_DESTROY;
    public static final int REMOVE_CONTENT_MODE_MOVE_TO_PRIMARY;
    public static final int REMOVE_CONTENT_MODE_UNDEFINED;
    public static final int TAKE_SCREENSHOT_FULLSCREEN;
    public static final int TAKE_SCREENSHOT_PROVIDED_IMAGE;
    public static final int TAKE_SCREENSHOT_SELECTED_REGION;
    public static final int TRANSIT_ACTIVITY_CLOSE;
    public static final int TRANSIT_ACTIVITY_OPEN;
    public static final int TRANSIT_ACTIVITY_RELAUNCH;
    public static final int TRANSIT_CRASHING_ACTIVITY_CLOSE;
    public static final int TRANSIT_DOCK_TASK_FROM_RECENTS;
    public static final int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_NO_ANIMATION;
    public static final int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_SUBTLE_ANIMATION;
    public static final int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_TO_SHADE;
    public static final int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_WITH_WALLPAPER;
    public static final int TRANSIT_KEYGUARD_GOING_AWAY;
    public static final int TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER;
    public static final int TRANSIT_KEYGUARD_OCCLUDE;
    public static final int TRANSIT_KEYGUARD_UNOCCLUDE;
    public static final int TRANSIT_NONE;
    public static final int TRANSIT_SHOW_SINGLE_TASK_DISPLAY;
    public static final int TRANSIT_TASK_CHANGE_WINDOWING_MODE;
    public static final int TRANSIT_TASK_CLOSE;
    public static final int TRANSIT_TASK_OPEN;
    public static final int TRANSIT_TASK_OPEN_BEHIND;
    public static final int TRANSIT_TASK_TO_BACK;
    public static final int TRANSIT_TASK_TO_FRONT;
    public static final int TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE;
    public static final int TRANSIT_TRANSLUCENT_ACTIVITY_OPEN;
    public static final int TRANSIT_UNSET;
    public static final int TRANSIT_WALLPAPER_CLOSE;
    public static final int TRANSIT_WALLPAPER_INTRA_CLOSE;
    public static final int TRANSIT_WALLPAPER_INTRA_OPEN;
    public static final int TRANSIT_WALLPAPER_OPEN;

    public abstract android.graphics.Region getCurrentImeTouchRegion();

    public android.view.WindowMetrics getCurrentWindowMetrics()
    {
        android.view.WindowManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.WindowManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public abstract android.view.Display getDefaultDisplay();

    public android.view.WindowMetrics getMaximumWindowMetrics()
    {
        android.view.WindowManager r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.WindowManager;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public abstract void removeViewImmediate(android.view.View);

    public abstract void requestAppKeyboardShortcuts(android.view.WindowManager$KeyboardShortcutsReceiver, int);

    public void setShouldShowIme(int, boolean)
    {
        android.view.WindowManager r0;
        int i0;
        boolean z0;

        r0 := @this: android.view.WindowManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setShouldShowSystemDecors(int, boolean)
    {
        android.view.WindowManager r0;
        int i0;
        boolean z0;

        r0 := @this: android.view.WindowManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void setShouldShowWithInsecureKeyguard(int, boolean)
    {
        android.view.WindowManager r0;
        int i0;
        boolean z0;

        r0 := @this: android.view.WindowManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean shouldShowIme(int)
    {
        android.view.WindowManager r0;
        int i0;

        r0 := @this: android.view.WindowManager;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean shouldShowSystemDecors(int)
    {
        android.view.WindowManager r0;
        int i0;

        r0 := @this: android.view.WindowManager;

        i0 := @parameter0: int;

        return 0;
    }

    public static void <clinit>()
    {
        <android.view.WindowManager: int TRANSIT_WALLPAPER_OPEN> = 13;

        <android.view.WindowManager: int TRANSIT_WALLPAPER_INTRA_OPEN> = 14;

        <android.view.WindowManager: int TRANSIT_WALLPAPER_INTRA_CLOSE> = 15;

        <android.view.WindowManager: int TRANSIT_WALLPAPER_CLOSE> = 12;

        <android.view.WindowManager: int TRANSIT_UNSET> = -1;

        <android.view.WindowManager: int TRANSIT_TRANSLUCENT_ACTIVITY_OPEN> = 24;

        <android.view.WindowManager: int TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE> = 25;

        <android.view.WindowManager: int TRANSIT_TASK_TO_FRONT> = 10;

        <android.view.WindowManager: int TRANSIT_TASK_TO_BACK> = 11;

        <android.view.WindowManager: int TRANSIT_TASK_OPEN_BEHIND> = 16;

        <android.view.WindowManager: int TRANSIT_TASK_OPEN> = 8;

        <android.view.WindowManager: int TRANSIT_TASK_CLOSE> = 9;

        <android.view.WindowManager: int TRANSIT_TASK_CHANGE_WINDOWING_MODE> = 27;

        <android.view.WindowManager: int TRANSIT_SHOW_SINGLE_TASK_DISPLAY> = 28;

        <android.view.WindowManager: int TRANSIT_NONE> = 0;

        <android.view.WindowManager: int TRANSIT_KEYGUARD_UNOCCLUDE> = 23;

        <android.view.WindowManager: int TRANSIT_KEYGUARD_OCCLUDE> = 22;

        <android.view.WindowManager: int TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER> = 21;

        <android.view.WindowManager: int TRANSIT_KEYGUARD_GOING_AWAY> = 20;

        <android.view.WindowManager: int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_WITH_WALLPAPER> = 4;

        <android.view.WindowManager: int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_TO_SHADE> = 1;

        <android.view.WindowManager: int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_SUBTLE_ANIMATION> = 8;

        <android.view.WindowManager: int TRANSIT_FLAG_KEYGUARD_GOING_AWAY_NO_ANIMATION> = 2;

        <android.view.WindowManager: int TRANSIT_DOCK_TASK_FROM_RECENTS> = 19;

        <android.view.WindowManager: int TRANSIT_CRASHING_ACTIVITY_CLOSE> = 26;

        <android.view.WindowManager: int TRANSIT_ACTIVITY_RELAUNCH> = 18;

        <android.view.WindowManager: int TRANSIT_ACTIVITY_OPEN> = 6;

        <android.view.WindowManager: int TRANSIT_ACTIVITY_CLOSE> = 7;

        <android.view.WindowManager: int TAKE_SCREENSHOT_SELECTED_REGION> = 2;

        <android.view.WindowManager: int TAKE_SCREENSHOT_PROVIDED_IMAGE> = 3;

        <android.view.WindowManager: int TAKE_SCREENSHOT_FULLSCREEN> = 1;

        <android.view.WindowManager: int REMOVE_CONTENT_MODE_UNDEFINED> = 0;

        <android.view.WindowManager: int REMOVE_CONTENT_MODE_MOVE_TO_PRIMARY> = 1;

        <android.view.WindowManager: int REMOVE_CONTENT_MODE_DESTROY> = 2;

        <android.view.WindowManager: java.lang.String PARCEL_KEY_SHORTCUTS_ARRAY> = "shortcuts_array";

        <android.view.WindowManager: java.lang.String INPUT_CONSUMER_WALLPAPER> = "wallpaper_input_consumer";

        <android.view.WindowManager: java.lang.String INPUT_CONSUMER_RECENTS_ANIMATION> = "recents_animation_input_consumer";

        <android.view.WindowManager: java.lang.String INPUT_CONSUMER_PIP> = "pip_input_consumer";

        <android.view.WindowManager: java.lang.String INPUT_CONSUMER_NAVIGATION> = "nav_input_consumer";

        <android.view.WindowManager: int DOCKED_TOP> = 2;

        <android.view.WindowManager: int DOCKED_RIGHT> = 3;

        <android.view.WindowManager: int DOCKED_LEFT> = 1;

        <android.view.WindowManager: int DOCKED_INVALID> = -1;

        <android.view.WindowManager: int DOCKED_BOTTOM> = 4;

        return;
    }
}
