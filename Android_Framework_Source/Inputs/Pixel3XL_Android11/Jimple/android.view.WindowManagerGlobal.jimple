public final class android.view.WindowManagerGlobal extends java.lang.Object
{
    public static final int ADD_APP_EXITING;
    public static final int ADD_BAD_APP_TOKEN;
    public static final int ADD_BAD_SUBWINDOW_TOKEN;
    public static final int ADD_DUPLICATE_ADD;
    public static final int ADD_FLAG_ALWAYS_CONSUME_SYSTEM_BARS;
    public static final int ADD_FLAG_APP_VISIBLE;
    public static final int ADD_FLAG_IN_TOUCH_MODE;
    public static final int ADD_FLAG_USE_BLAST;
    public static final int ADD_FLAG_USE_TRIPLE_BUFFERING;
    public static final int ADD_INVALID_DISPLAY;
    public static final int ADD_INVALID_TYPE;
    public static final int ADD_INVALID_USER;
    public static final int ADD_MULTIPLE_SINGLETON;
    public static final int ADD_NOT_APP_TOKEN;
    public static final int ADD_OKAY;
    public static final int ADD_PERMISSION_DENIED;
    public static final int ADD_STARTING_NOT_NEEDED;
    public static final int ADD_TOO_MANY_TOKENS;
    public static final int RELAYOUT_DEFER_SURFACE_DESTROY;
    public static final int RELAYOUT_INSETS_PENDING;
    public static final int RELAYOUT_RES_BLAST_SYNC;
    public static final int RELAYOUT_RES_CONSUME_ALWAYS_SYSTEM_BARS;
    public static final int RELAYOUT_RES_DRAG_RESIZING_DOCKED;
    public static final int RELAYOUT_RES_DRAG_RESIZING_FREEFORM;
    public static final int RELAYOUT_RES_FIRST_TIME;
    public static final int RELAYOUT_RES_IN_TOUCH_MODE;
    public static final int RELAYOUT_RES_SURFACE_CHANGED;
    public static final int RELAYOUT_RES_SURFACE_RESIZED;
    private static final java.lang.String TAG;
    private static android.view.WindowManagerGlobal sDefaultWindowManager;
    private static boolean sUseBLASTAdapter;
    private static android.view.IWindowManager sWindowManagerService;
    private static android.view.IWindowSession sWindowSession;
    private final android.util.ArraySet mDyingViews;
    private final java.lang.Object mLock;
    private final java.util.ArrayList mParams;
    private final java.util.ArrayList mRoots;
    private java.lang.Runnable mSystemPropertyUpdater;
    private final java.util.ArrayList mViews;

    static void <clinit>()
    {
        <android.view.WindowManagerGlobal: java.lang.String TAG> = "WindowManager";

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_SURFACE_RESIZED> = 32;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_SURFACE_CHANGED> = 4;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_FIRST_TIME> = 2;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_DRAG_RESIZING_FREEFORM> = 16;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_DRAG_RESIZING_DOCKED> = 8;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_CONSUME_ALWAYS_SYSTEM_BARS> = 64;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_BLAST_SYNC> = 128;

        <android.view.WindowManagerGlobal: int RELAYOUT_INSETS_PENDING> = 1;

        <android.view.WindowManagerGlobal: int RELAYOUT_DEFER_SURFACE_DESTROY> = 2;

        <android.view.WindowManagerGlobal: int ADD_TOO_MANY_TOKENS> = -12;

        <android.view.WindowManagerGlobal: int ADD_STARTING_NOT_NEEDED> = -6;

        <android.view.WindowManagerGlobal: int ADD_PERMISSION_DENIED> = -8;

        <android.view.WindowManagerGlobal: int ADD_OKAY> = 0;

        <android.view.WindowManagerGlobal: int ADD_NOT_APP_TOKEN> = -3;

        <android.view.WindowManagerGlobal: int ADD_MULTIPLE_SINGLETON> = -7;

        <android.view.WindowManagerGlobal: int ADD_INVALID_USER> = -11;

        <android.view.WindowManagerGlobal: int ADD_INVALID_TYPE> = -10;

        <android.view.WindowManagerGlobal: int ADD_INVALID_DISPLAY> = -9;

        <android.view.WindowManagerGlobal: int ADD_FLAG_USE_TRIPLE_BUFFERING> = 4;

        <android.view.WindowManagerGlobal: int ADD_FLAG_USE_BLAST> = 8;

        <android.view.WindowManagerGlobal: int ADD_FLAG_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerGlobal: int ADD_FLAG_APP_VISIBLE> = 2;

        <android.view.WindowManagerGlobal: int ADD_FLAG_ALWAYS_CONSUME_SYSTEM_BARS> = 4;

        <android.view.WindowManagerGlobal: int ADD_DUPLICATE_ADD> = -5;

        <android.view.WindowManagerGlobal: int ADD_BAD_SUBWINDOW_TOKEN> = -2;

        <android.view.WindowManagerGlobal: int ADD_BAD_APP_TOKEN> = -1;

        <android.view.WindowManagerGlobal: int ADD_APP_EXITING> = -4;

        <android.view.WindowManagerGlobal: boolean sUseBLASTAdapter> = 0;

        return;
    }

    private void <init>()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2, $r3, $r4;
        android.util.ArraySet $r5;

        r0 := @this: android.view.WindowManagerGlobal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams> = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews> = $r5;

        return;
    }

    static java.lang.Object access$000(android.view.WindowManagerGlobal)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.view.WindowManagerGlobal;

        $r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.ArrayList access$100(android.view.WindowManagerGlobal)
    {
        android.view.WindowManagerGlobal r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.view.WindowManagerGlobal;

        $r1 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        return $r1;
    }

    private void doTrimForeground()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r4;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, i2;
        android.view.View $r5;
        android.view.View$AttachInfo $r6;
        android.view.ThreadedRenderer $r7;
        java.lang.Throwable $r8;
        boolean z0;
        android.view.ViewRootImpl r9;

        r0 := @this: android.view.WindowManagerGlobal;

        z0 = 0;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label07;

     label03:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r9 = (android.view.ViewRootImpl) $r4;

        $r5 = r9.<android.view.ViewRootImpl: android.view.View mView>;

        if $r5 == null goto label05;

        $i1 = virtualinvoke r9.<android.view.ViewRootImpl: int getHostVisibility()>();

        if $i1 != 0 goto label05;

        $r6 = r9.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r7 = $r6.<android.view.View$AttachInfo: android.view.ThreadedRenderer mThreadedRenderer>;

        if $r7 == null goto label05;

     label04:
        z0 = 1;

        goto label06;

     label05:
        virtualinvoke r9.<android.view.ViewRootImpl: void destroyHardwareResources()>();

     label06:
        i2 = i2 + -1;

        goto label02;

     label07:
        exitmonitor r1;

     label08:
        if z0 != 0 goto label09;

        staticinvoke <android.view.ThreadedRenderer: void trimMemory(int)>(80);

     label09:
        return;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private int findViewLocked(android.view.View, boolean)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1;
        boolean z0;
        int i0;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if z0 == 0 goto label2;

        if i0 < 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not attached to window manager");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        return i0;
    }

    public static android.view.WindowManagerGlobal getInstance()
    {
        android.view.WindowManagerGlobal $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Landroid/view/WindowManagerGlobal;";

     label1:
        $r0 = <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager>;

        if $r0 != null goto label2;

        r2 = new android.view.WindowManagerGlobal;

        specialinvoke r2.<android.view.WindowManagerGlobal: void <init>()>();

        <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager> = r2;

     label2:
        r3 = <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager>;

        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label3:
        return r3;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.view.IWindowManager getWindowManagerService()
    {
        android.view.IWindowManager $r0, $r2, r6, r8;
        android.os.IBinder $r1;
        float $f0;
        boolean $z0;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        entermonitor class "Landroid/view/WindowManagerGlobal;";

     label01:
        $r0 = <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService>;

        if $r0 != null goto label07;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        r6 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r1);

        <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService> = r6;

     label02:
        if r6 == null goto label07;

     label03:
        $f0 = interfaceinvoke r6.<android.view.IWindowManager: float getCurrentAnimatorScale()>();

        staticinvoke <android.animation.ValueAnimator: void setDurationScale(float)>($f0);

        $r2 = <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService>;

        $z0 = interfaceinvoke $r2.<android.view.IWindowManager: boolean useBLAST()>();

        <android.view.WindowManagerGlobal: boolean sUseBLASTAdapter> = $z0;

     label04:
        goto label07;

     label05:
        $r4 := @caughtexception;

     label06:
        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label07:
        r8 = <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService>;

        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label08:
        return r8;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private static java.lang.String getWindowName(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl r0;
        java.lang.StringBuilder $r2;
        android.view.WindowManager$LayoutParams $r3;
        java.lang.CharSequence $r4;
        java.lang.Class $r7;
        java.lang.String $r8, $r11, $r13;
        int $i0;

        r0 := @parameter0: android.view.ViewRootImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r4 = virtualinvoke $r3.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static android.view.IWindowSession getWindowSession()
    {
        android.view.IWindowManager r0;
        android.view.IWindowSession $r1, r5, r8;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.view.WindowManagerGlobal$1 r6;

        entermonitor class "Landroid/view/WindowManagerGlobal;";

     label01:
        r5 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

     label02:
        if r5 != null goto label07;

     label03:
        staticinvoke <android.view.inputmethod.InputMethodManager: void ensureDefaultInstanceForDefaultDisplayIfNecessary()>();

        r0 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        r6 = new android.view.WindowManagerGlobal$1;

        specialinvoke r6.<android.view.WindowManagerGlobal$1: void <init>()>();

        $r1 = interfaceinvoke r0.<android.view.IWindowManager: android.view.IWindowSession openSession(android.view.IWindowSessionCallback)>(r6);

        <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession> = $r1;

     label04:
        goto label07;

     label05:
        $r3 := @caughtexception;

     label06:
        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label07:
        r8 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label08:
        return r8;

     label09:
        $r2 := @caughtexception;

     label10:
        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label11:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void initialize()
    {
        staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        return;
    }

    static void lambda$setStoppedState$0(android.view.ViewRootImpl, boolean)
    {
        android.view.ViewRootImpl r0;
        boolean z0;

        r0 := @parameter0: android.view.ViewRootImpl;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.ViewRootImpl: void setWindowStopped(boolean)>(z0);

        return;
    }

    public static android.view.IWindowSession peekWindowSession()
    {
        java.lang.Throwable $r0;
        android.view.IWindowSession r1;

        entermonitor class "Landroid/view/WindowManagerGlobal;";

     label1:
        r1 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label2:
        return r1;

     label3:
        $r0 := @caughtexception;

     label4:
        exitmonitor class "Landroid/view/WindowManagerGlobal;";

     label5:
        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void removeViewLocked(int, boolean)
    {
        android.view.WindowManagerGlobal r0;
        int i0;
        android.view.ViewRootImpl r1;
        android.view.View r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.util.ArraySet $r5;
        android.view.ImeFocusController $r6;
        boolean z1, z2;

        r0 := @this: android.view.WindowManagerGlobal;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (android.view.ViewRootImpl) $r4;

        r2 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.View getView()>();

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.ImeFocusController getImeFocusController()>();

        virtualinvoke $r6.<android.view.ImeFocusController: void onWindowDismissed()>();

     label1:
        z2 = virtualinvoke r1.<android.view.ViewRootImpl: boolean die(boolean)>(z1);

        if r2 == null goto label2;

        virtualinvoke r2.<android.view.View: void assignParent(android.view.ViewParent)>(null);

        if z2 == 0 goto label2;

        $r5 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    public static boolean shouldDestroyEglContext(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 80 goto label1;

        return 1;

     label1:
        if i0 < 60 goto label2;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static void trimForeground()
    {
        boolean $z0, $z1;
        android.view.WindowManagerGlobal $r0;

        $z0 = <android.view.ThreadedRenderer: boolean sTrimForeground>;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.view.ThreadedRenderer: boolean isAvailable()>();

        if $z1 == 0 goto label1;

        $r0 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        specialinvoke $r0.<android.view.WindowManagerGlobal: void doTrimForeground()>();

     label1:
        return;
    }

    public static boolean useBLAST()
    {
        boolean $z0;

        $z0 = <android.view.WindowManagerGlobal: boolean sUseBLASTAdapter>;

        return $z0;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams, android.view.Display, android.view.Window, int)
    {
        android.view.WindowManagerGlobal r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.view.WindowManager$LayoutParams r1;
        java.lang.Object r2, $r8, $r14, $r18;
        java.lang.IllegalArgumentException $r3, $r4, $r5;
        boolean $z0, $z1;
        java.util.ArrayList $r6, $r7, $r13, $r17, $r36, $r37, $r38;
        android.view.ViewRootImpl $r9, $r19, r34;
        android.view.ViewRootImpl$W $r10;
        android.os.IBinder $r11, $r12;
        android.util.ArraySet $r15;
        java.lang.String $r16;
        android.content.pm.ApplicationInfo $r20;
        java.lang.RuntimeException $r21;
        java.lang.Throwable $r22;
        android.view.View r23, r28, r33;
        android.view.ViewGroup$LayoutParams r24;
        android.view.Display r25;
        android.view.Window r26;
        android.content.Context r27, $r35;
        java.lang.Runnable $r29;
        android.view.WindowManagerGlobal$2 r30;
        java.lang.IllegalStateException r31;
        java.lang.StringBuilder r32;

        r0 := @this: android.view.WindowManagerGlobal;

        r23 := @parameter0: android.view.View;

        r24 := @parameter1: android.view.ViewGroup$LayoutParams;

        r25 := @parameter2: android.view.Display;

        r26 := @parameter3: android.view.Window;

        i0 := @parameter4: int;

        if r23 == null goto label29;

        if r25 == null goto label28;

        $z0 = r24 instanceof android.view.WindowManager$LayoutParams;

        if $z0 == 0 goto label27;

        r1 = (android.view.WindowManager$LayoutParams) r24;

        if r26 == null goto label01;

        virtualinvoke r26.<android.view.Window: void adjustLayoutParamsForSubWindow(android.view.WindowManager$LayoutParams)>(r1);

        goto label02;

     label01:
        r27 = virtualinvoke r23.<android.view.View: android.content.Context getContext()>();

        if r27 == null goto label02;

        $r20 = virtualinvoke r27.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i5 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i5 & 536870912;

        if $i6 == 0 goto label02;

        $i7 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i8 = $i7 | 16777216;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i8;

     label02:
        r28 = null;

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label03:
        $r29 = r0.<android.view.WindowManagerGlobal: java.lang.Runnable mSystemPropertyUpdater>;

        if $r29 != null goto label04;

        r30 = new android.view.WindowManagerGlobal$2;

        specialinvoke r30.<android.view.WindowManagerGlobal$2: void <init>(android.view.WindowManagerGlobal)>(r0);

        r0.<android.view.WindowManagerGlobal: java.lang.Runnable mSystemPropertyUpdater> = r30;

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>(r30);

     label04:
        i1 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r23, 0);

     label05:
        if i1 < 0 goto label09;

     label06:
        $r15 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        $z1 = virtualinvoke $r15.<android.util.ArraySet: boolean contains(java.lang.Object)>(r23);

        if $z1 == 0 goto label08;

        $r17 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r19 = (android.view.ViewRootImpl) $r18;

        virtualinvoke $r19.<android.view.ViewRootImpl: void doDie()>();

     label07:
        goto label09;

     label08:
        r31 = new java.lang.IllegalStateException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added to the window manager.");

        $r16 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw r31;

     label09:
        r33 = null;

     label10:
        $i3 = r1.<android.view.WindowManager$LayoutParams: int type>;

        if $i3 < 1000 goto label17;

     label11:
        r33 = null;

     label12:
        $i4 = r1.<android.view.WindowManager$LayoutParams: int type>;

        if $i4 > 1999 goto label17;

        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label13:
        i9 = 0;

     label14:
        r33 = r28;

        if i9 >= i2 goto label17;

     label15:
        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r9 = (android.view.ViewRootImpl) $r8;

        $r10 = $r9.<android.view.ViewRootImpl: android.view.ViewRootImpl$W mWindow>;

        $r11 = virtualinvoke $r10.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        $r12 = r1.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r11 != $r12 goto label16;

        $r13 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r28 = (android.view.View) $r14;

     label16:
        i9 = i9 + 1;

        goto label14;

     label17:
        r34 = new android.view.ViewRootImpl;

        $r35 = virtualinvoke r23.<android.view.View: android.content.Context getContext()>();

        specialinvoke r34.<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display)>($r35, r25);

        virtualinvoke r23.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        $r36 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        $r37 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r34);

        $r38 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label18:
        virtualinvoke r34.<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View,int)>(r23, r1, r33, i0);

     label19:
        exitmonitor r2;

     label20:
        return;

     label21:
        $r21 := @caughtexception;

        if i1 < 0 goto label23;

     label22:
        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i1, 1);

     label23:
        throw $r21;

     label24:
        $r22 := @caughtexception;

     label25:
        exitmonitor r2;

     label26:
        throw $r22;

     label27:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r5;

     label28:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("display must not be null");

        throw $r4;

     label29:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r3;

        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.RuntimeException from label18 to label19 with label21;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void changeCanvasOpacity(android.os.IBinder, boolean)
    {
        android.view.WindowManagerGlobal r0;
        boolean z0;
        java.lang.Object r1, $r4, $r8;
        java.util.ArrayList $r2, $r3, $r7;
        int $i0, i1;
        android.view.WindowManager$LayoutParams $r5;
        android.os.IBinder $r6, r11;
        android.view.ViewRootImpl $r9;
        java.lang.Throwable $r10;

        r0 := @this: android.view.WindowManagerGlobal;

        r11 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        if r11 != null goto label01;

        return;

     label01:
        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label03:
        if i1 < 0 goto label07;

     label04:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.view.WindowManager$LayoutParams) $r4;

        $r6 = $r5.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r6 != r11 goto label06;

        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.view.ViewRootImpl) $r8;

        virtualinvoke $r9.<android.view.ViewRootImpl: void changeCanvasOpacity(boolean)>(z0);

        exitmonitor r1;

     label05:
        return;

     label06:
        i1 = i1 + -1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void closeAll(android.os.IBinder, java.lang.String, java.lang.String)
    {
        android.view.WindowManagerGlobal r0;
        android.os.IBinder r1;
        java.lang.String r2, r3;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<android.view.WindowManagerGlobal: void closeAllExceptView(android.os.IBinder,android.view.View,java.lang.String,java.lang.String)>(r1, null, r2, r3);

        return;
    }

    public void closeAllExceptView(android.os.IBinder, android.view.View, java.lang.String, java.lang.String)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1, $r15;
        java.lang.String r2, r3, $r18;
        java.lang.Object r4, $r10, $r22, $r26;
        int i0, i2;
        android.view.ViewRootImpl r5;
        android.view.WindowLeaked r6, $r19;
        java.lang.StringBuilder r7;
        java.util.ArrayList $r8, $r9, $r21, $r25;
        java.lang.StackTraceElement[] $r20;
        android.view.WindowManager$LayoutParams $r23;
        android.os.IBinder $r24, r28;
        java.lang.Throwable $r27;

        r0 := @this: android.view.WindowManagerGlobal;

        r28 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r4;

     label01:
        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label12;

        if r1 == null goto label05;

     label04:
        $r25 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r26 == r1 goto label11;

     label05:
        if r28 == null goto label07;

     label06:
        $r21 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r23 = (android.view.WindowManager$LayoutParams) $r22;

        $r24 = $r23.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r24 != r28 goto label11;

     label07:
        $r9 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (android.view.ViewRootImpl) $r10;

     label08:
        if r2 == null goto label10;

     label09:
        r6 = new android.view.WindowLeaked;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked window ");

        $r15 = virtualinvoke r5.<android.view.ViewRootImpl: android.view.View getView()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally added here");

        $r18 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r6.<android.view.WindowLeaked: void <init>(java.lang.String)>($r18);

        $r19 = virtualinvoke r5.<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>();

        $r20 = virtualinvoke $r19.<android.view.WindowLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r6.<android.view.WindowLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r20);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "", r6);

     label10:
        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i2, 0);

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        exitmonitor r4;

     label13:
        return;

     label14:
        $r27 := @caughtexception;

     label15:
        exitmonitor r4;

     label16:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void doRemoveView(android.view.ViewRootImpl)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r9;
        int i0;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r2, $r3, $r4, $r6, $r8;
        android.util.ArraySet $r10;
        java.lang.Throwable $r11;
        android.view.ViewRootImpl r12;
        android.view.View r13;

        r0 := @this: android.view.WindowManagerGlobal;

        r12 := @parameter0: android.view.ViewRootImpl;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r12);

     label02:
        if i0 < 0 goto label04;

     label03:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r13 = (android.view.View) $r9;

        $r10 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        virtualinvoke $r10.<android.util.ArraySet: boolean remove(java.lang.Object)>(r13);

     label04:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        exitmonitor r1;

     label05:
        $z1 = <android.view.ThreadedRenderer: boolean sTrimForeground>;

        if $z1 == 0 goto label06;

        $z2 = staticinvoke <android.view.ThreadedRenderer: boolean isAvailable()>();

        if $z2 == 0 goto label06;

        specialinvoke r0.<android.view.WindowManagerGlobal: void doTrimForeground()>();

     label06:
        if z0 == 0 goto label07;

        staticinvoke <android.view.InsetsAnimationThread: void release()>();

     label07:
        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void dumpGfxInfo(java.io.FileDescriptor, java.lang.String[])
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r2, $r17, $r26;
        int i0, $i1, $i4, $i6, i7, i8;
        com.android.internal.util.FastPrintWriter $r3;
        java.io.FileOutputStream $r4;
        java.util.ArrayList $r5, $r16, $r25;
        java.lang.Object[] $r6, $r9, $r12, $r18, $r23, $r27;
        java.lang.Integer $r7, $r10, $r20, $r29;
        long $l2, $l3, $l5;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Float $r13, $r14, $r21;
        java.lang.String $r19, $r28;
        android.view.View $r31;
        android.view.View$AttachInfo $r32;
        java.lang.Throwable $r33, $r34, $r35, $r36, r44, r45;
        java.io.FileDescriptor r37;
        java.lang.String[] r38;
        android.view.ViewRootImpl r39, r42;
        android.view.ThreadedRenderer r40;
        android.view.ViewRootImpl$GfxInfo r41, r43;

        r0 := @this: android.view.WindowManagerGlobal;

        r37 := @parameter0: java.io.FileDescriptor;

        r38 := @parameter1: java.lang.String[];

        $r3 = new com.android.internal.util.FastPrintWriter;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r37);

        specialinvoke $r3.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r4);

     label01:
        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Profile data in ms:");

     label03:
        i7 = 0;

     label04:
        if i7 >= i0 goto label11;

     label05:
        $r25 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r39 = (android.view.ViewRootImpl) $r26;

        $r27 = newarray (java.lang.Object)[2];

        $r28 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r39);

        $r27[0] = $r28;

        $i6 = virtualinvoke r39.<android.view.ViewRootImpl: int getHostVisibility()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r27[1] = $r29;

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\n\t%s (visibility=%d)", $r27);

     label06:
        $r31 = virtualinvoke r39.<android.view.ViewRootImpl: android.view.View getView()>();

        $r32 = $r31.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r40 = $r32.<android.view.View$AttachInfo: android.view.ThreadedRenderer mThreadedRenderer>;

     label07:
        if r40 == null goto label10;

     label08:
        virtualinvoke r40.<android.view.ThreadedRenderer: void dumpGfxInfo(java.io.PrintWriter,java.io.FileDescriptor,java.lang.String[])>($r3, r37, r38);

     label09:
        goto label10;

     label10:
        i7 = i7 + 1;

        goto label04;

     label11:
        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("\nView hierarchy:\n");

        r41 = new android.view.ViewRootImpl$GfxInfo;

        specialinvoke r41.<android.view.ViewRootImpl$GfxInfo: void <init>()>();

     label12:
        i8 = 0;

     label13:
        if i8 >= i0 goto label16;

     label14:
        $r16 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r42 = (android.view.ViewRootImpl) $r17;

        r43 = virtualinvoke r42.<android.view.ViewRootImpl: android.view.ViewRootImpl$GfxInfo getGfxInfo()>();

        virtualinvoke r41.<android.view.ViewRootImpl$GfxInfo: void add(android.view.ViewRootImpl$GfxInfo)>(r43);

        $r18 = newarray (java.lang.Object)[3];

        $r19 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r42);

        $r18[0] = $r19;

        $i4 = r43.<android.view.ViewRootImpl$GfxInfo: int viewCount>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r18[1] = $r20;

        $l5 = r43.<android.view.ViewRootImpl$GfxInfo: long renderNodeMemoryUsage>;

        $f4 = (float) $l5;

        $f5 = $f4 / 1024.0F;

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r18[2] = $r21;

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  %s\n  %d views, %.2f kB of render nodes", $r18);

        $r23 = newarray (java.lang.Object)[0];

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\n\n", $r23);

     label15:
        i8 = i8 + 1;

        goto label13;

     label16:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "ViewRootImpl";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r7;

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\nTotal %-15s: %d\n", $r6);

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "attached Views";

        $i1 = r41.<android.view.ViewRootImpl$GfxInfo: int viewCount>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9[1] = $r10;

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Total %-15s: %d\n", $r9);

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = "RenderNode";

        $l2 = r41.<android.view.ViewRootImpl$GfxInfo: long renderNodeMemoryUsage>;

        $f0 = (float) $l2;

        $f1 = $f0 / 1024.0F;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r12[1] = $r13;

        $l3 = r41.<android.view.ViewRootImpl$GfxInfo: long renderNodeMemoryAllocated>;

        $f2 = (float) $l3;

        $f3 = $f2 / 1024.0F;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r12[2] = $r14;

        virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Total %-15s: %.2f kB (used) / %.2f kB (capacity)\n\n", $r12);

     label17:
        exitmonitor r2;

     label18:
        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        return;

     label19:
        $r33 := @caughtexception;

        r44 = $r33;

     label20:
        exitmonitor r2;

     label21:
        throw r44;

     label22:
        $r35 := @caughtexception;

        r45 = $r35;

        goto label25;

     label23:
        $r34 := @caughtexception;

        r44 = $r34;

        goto label20;

     label24:
        $r36 := @caughtexception;

        r45 = $r36;

     label25:
        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        throw r45;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label22;
    }

    public android.view.View getRootView(java.lang.String)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r5;
        android.view.ViewRootImpl r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.String $r6, r8;
        boolean $z0;
        java.lang.Throwable $r7;
        android.view.View r9;

        r0 := @this: android.view.WindowManagerGlobal;

        r8 := @parameter0: java.lang.String;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label02:
        if i1 < 0 goto label06;

     label03:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.ViewRootImpl) $r5;

        $r6 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r2);

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label05;

        r9 = virtualinvoke r2.<android.view.ViewRootImpl: android.view.View getView()>();

        exitmonitor r1;

     label04:
        return r9;

     label05:
        i1 = i1 + -1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        return null;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.ArrayList getRootViews(android.os.IBinder)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r2, $r9, $r13, $r16, $r18;
        int i0, $i1, $i2, i3, i4;
        android.view.WindowManager$LayoutParams r3, r5;
        android.view.View r4;
        java.util.ArrayList $r6, $r7, $r8, $r12, $r15, $r17;
        android.os.IBinder $r10, $r11, $r19, $r20, $r21, r23;
        android.view.ViewRootImpl $r14;
        java.lang.Throwable $r22;
        boolean z2;

        r0 := @this: android.view.WindowManagerGlobal;

        r23 := @parameter0: android.os.IBinder;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i0 goto label19;

     label04:
        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.view.WindowManager$LayoutParams) $r9;

        $r10 = r3.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r10 != null goto label06;

     label05:
        goto label18;

     label06:
        $r11 = r3.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r11 == r23 goto label17;

     label07:
        z2 = 0;

     label08:
        $i1 = r3.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 < 1000 goto label16;

     label09:
        z2 = 0;

     label10:
        $i2 = r3.<android.view.WindowManager$LayoutParams: int type>;

        if $i2 > 1999 goto label16;

     label11:
        i4 = 0;

     label12:
        z2 = 0;

        if i4 >= i0 goto label16;

     label13:
        $r15 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (android.view.View) $r16;

        $r17 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (android.view.WindowManager$LayoutParams) $r18;

        $r19 = r3.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $r20 = virtualinvoke r4.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r19 != $r20 goto label15;

        $r21 = r5.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r21 != r23 goto label15;

     label14:
        z2 = 1;

        goto label16;

     label15:
        i4 = i4 + 1;

        goto label12;

     label16:
        if z2 != 0 goto label17;

        goto label18;

     label17:
        $r12 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r14 = (android.view.ViewRootImpl) $r13;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label18:
        i3 = i3 + 1;

        goto label03;

     label19:
        exitmonitor r2;

     label20:
        return $r6;

     label21:
        $r22 := @caughtexception;

     label22:
        exitmonitor r2;

     label23:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public java.lang.String[] getViewRootNames()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r4;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        android.view.ViewRootImpl $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r8 = newarray (java.lang.String)[i0];

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.view.ViewRootImpl) $r4;

        $r6 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>($r5);

        r8[i1] = $r6;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.view.View getWindowView(android.os.IBinder)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r5;
        int i0, i1;
        android.view.View r2;
        java.util.ArrayList $r3, $r4;
        android.os.IBinder $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: android.view.WindowManagerGlobal;

        r8 := @parameter0: android.os.IBinder;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

     label04:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.View) $r5;

        $r6 = virtualinvoke r2.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r6 != r8 goto label06;

        exitmonitor r1;

     label05:
        return r2;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.util.ArrayList getWindowViews()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1;
        java.util.ArrayList $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r4 = new java.util.ArrayList;

        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeView(android.view.View, boolean)
    {
        android.view.WindowManagerGlobal r0;
        boolean z0;
        java.lang.Object r1, $r7;
        int i0;
        android.view.View r2, r15;
        java.lang.IllegalStateException r3;
        java.lang.StringBuilder r4;
        java.lang.IllegalArgumentException $r5;
        java.util.ArrayList $r6;
        android.view.ViewRootImpl $r8;
        java.lang.String $r13;
        java.lang.Throwable $r14;

        r0 := @this: android.view.WindowManagerGlobal;

        r15 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if r15 == null goto label9;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r15, 1);

        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (android.view.ViewRootImpl) $r7;

        r2 = virtualinvoke $r8.<android.view.ViewRootImpl: android.view.View getView()>();

        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i0, z0);

     label2:
        if r2 != r15 goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        r3 = new java.lang.IllegalStateException;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling with view ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the ViewAncestor is attached to ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw r3;

     label6:
        $r14 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r14;

     label9:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void reportNewConfiguration(android.content.res.Configuration)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r5;
        int i0, i1;
        android.content.res.Configuration r2, r8;
        java.util.ArrayList $r3, $r4;
        android.view.ViewRootImpl $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.WindowManagerGlobal;

        r8 := @parameter0: android.content.res.Configuration;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        r2 = new android.content.res.Configuration;

        specialinvoke r2.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r8);

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (android.view.ViewRootImpl) $r5;

        virtualinvoke $r6.<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)>(r2);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setStoppedState(android.os.IBinder, boolean)
    {
        android.view.WindowManagerGlobal r0;
        boolean z0;
        java.lang.Object r1, $r4, $r8, $r12;
        android.view.ViewRootImpl r2, r22;
        java.util.ArrayList $r3, $r7, $r11, r17, r18, r19;
        int $i0, $i1, i2, i3;
        android.view._$$Lambda$WindowManagerGlobal$2bR3FsEm4EdRwuXfttH0wA2xOW4 $r5;
        android.view.ViewRootImpl$ViewRootHandler $r6;
        java.lang.Thread $r9, $r10;
        android.view.WindowManager$LayoutParams $r13;
        android.os.IBinder $r14, r16, $r21;
        java.lang.Throwable $r15;
        android.view.View$AttachInfo $r20;

        r0 := @this: android.view.WindowManagerGlobal;

        r16 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r17 = null;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label13;

        if r16 == null goto label04;

        r18 = r17;

     label03:
        $r11 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r13 = (android.view.WindowManager$LayoutParams) $r12;

        $r14 = $r13.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r14 != r16 goto label12;

     label04:
        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.view.ViewRootImpl) $r8;

        $r9 = r2.<android.view.ViewRootImpl: java.lang.Thread mThread>;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r9 != $r10 goto label06;

        virtualinvoke r2.<android.view.ViewRootImpl: void setWindowStopped(boolean)>(z0);

     label05:
        goto label10;

     label06:
        r19 = r17;

        if r17 != null goto label08;

     label07:
        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

     label08:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label09:
        r17 = r19;

     label10:
        $r20 = r2.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r21 = $r20.<android.view.View$AttachInfo: android.os.IBinder mWindowToken>;

        virtualinvoke r0.<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>($r21, z0);

     label11:
        r18 = r17;

     label12:
        i2 = i2 + -1;

        r17 = r18;

        goto label02;

     label13:
        exitmonitor r1;

     label14:
        if r17 == null goto label16;

        $i1 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label15:
        if i3 < 0 goto label16;

        $r4 = virtualinvoke r17.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r22 = (android.view.ViewRootImpl) $r4;

        $r6 = r22.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        $r5 = new android.view._$$Lambda$WindowManagerGlobal$2bR3FsEm4EdRwuXfttH0wA2xOW4;

        specialinvoke $r5.<android.view._$$Lambda$WindowManagerGlobal$2bR3FsEm4EdRwuXfttH0wA2xOW4: void <init>(android.view.ViewRootImpl,boolean)>(r22, z0);

        virtualinvoke $r6.<android.view.ViewRootImpl$ViewRootHandler: boolean runWithScissors(java.lang.Runnable,long)>($r5, 0L);

        i3 = i3 + -1;

        goto label15;

     label16:
        return;

     label17:
        $r15 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void trimMemory(int)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r5;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1, i2, i3;
        android.view.ViewRootImpl $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.WindowManagerGlobal;

        i1 := @parameter0: int;

        $z0 = staticinvoke <android.view.ThreadedRenderer: boolean isAvailable()>();

        if $z0 == 0 goto label11;

        i2 = i1;

        $z1 = staticinvoke <android.view.WindowManagerGlobal: boolean shouldDestroyEglContext(int)>(i1);

        if $z1 == 0 goto label10;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label02:
        if i3 < 0 goto label05;

     label03:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (android.view.ViewRootImpl) $r5;

        virtualinvoke $r6.<android.view.ViewRootImpl: void destroyHardwareResources()>();

     label04:
        i3 = i3 + -1;

        goto label02;

     label05:
        exitmonitor r1;

     label06:
        i2 = 80;

        goto label10;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r7;

     label10:
        staticinvoke <android.view.ThreadedRenderer: void trimMemory(int)>(i2);

        $z2 = <android.view.ThreadedRenderer: boolean sTrimForeground>;

        if $z2 == 0 goto label11;

        specialinvoke r0.<android.view.WindowManagerGlobal: void doTrimForeground()>();

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerGlobal r0;
        android.view.WindowManager$LayoutParams r1;
        int i0;
        java.lang.IllegalArgumentException $r2, $r3;
        boolean $z0;
        java.util.ArrayList $r4, $r6, $r8;
        java.lang.Object $r5, r12;
        java.lang.Throwable $r9;
        android.view.View r10;
        android.view.ViewGroup$LayoutParams r11;
        android.view.ViewRootImpl r13;

        r0 := @this: android.view.WindowManagerGlobal;

        r10 := @parameter0: android.view.View;

        r11 := @parameter1: android.view.ViewGroup$LayoutParams;

        if r10 == null goto label7;

        $z0 = r11 instanceof android.view.WindowManager$LayoutParams;

        if $z0 == 0 goto label6;

        r1 = (android.view.WindowManager$LayoutParams) r11;

        virtualinvoke r10.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        r12 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r12;

     label1:
        i0 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r10, 1);

        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r13 = (android.view.ViewRootImpl) $r5;

        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r8.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

        virtualinvoke r13.<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>(r1, 0);

        exitmonitor r12;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r12;

     label5:
        throw $r9;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r3;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
