public class android.view.accessibility.AccessibilityCache extends java.lang.Object
{
    public static final int CACHE_CRITICAL_EVENTS_MASK;
    private static final boolean CHECK_INTEGRITY;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VERBOSE;
    private long mAccessibilityFocus;
    private int mAccessibilityFocusedWindow;
    private final android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher mAccessibilityNodeRefresher;
    private long mInputFocus;
    private boolean mIsAllWindowsCached;
    private final java.lang.Object mLock;
    private final android.util.SparseArray mNodeCache;
    private final android.util.SparseArray mTempWindowArray;
    private final android.util.SparseArray mWindowCacheByDisplay;

    static void <clinit>()
    {
        boolean $z1, $z2, z3, z4, $z5, z6, $z7;

        <android.view.accessibility.AccessibilityCache: java.lang.String LOG_TAG> = "AccessibilityCache";

        <android.view.accessibility.AccessibilityCache: int CACHE_CRITICAL_EVENTS_MASK> = 4307005;

        z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccessibilityCache", 3);

        if z3 == 0 goto label1;

        $z2 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z2 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        <android.view.accessibility.AccessibilityCache: boolean DEBUG> = z4;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccessibilityCache", 2);

        if $z5 == 0 goto label3;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label3;

        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        <android.view.accessibility.AccessibilityCache: boolean VERBOSE> = z6;

        $z7 = <android.os.Build: boolean IS_ENG>;

        <android.view.accessibility.AccessibilityCache: boolean CHECK_INTEGRITY> = $z7;

        return;
    }

    public void <init>(android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3, $r4, $r5;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock> = $r2;

        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: long mInputFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = -1;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mTempWindowArray> = $r5;

        r0.<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher mAccessibilityNodeRefresher> = r1;

        return;
    }

    private void addWindowByDisplayLocked(int, android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0, $i1;
        android.view.accessibility.AccessibilityWindowInfo r1, $r5;
        android.util.SparseArray r2, $r3, $r6, $r7, r8;
        java.lang.Object $r4;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityWindowInfo;

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.SparseArray) $r4;

        r8 = r2;

        if r2 != null goto label1;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r8 = $r6;

        $r7 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r6);

     label1:
        $i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r5 = new android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke $r5.<android.view.accessibility.AccessibilityWindowInfo: void <init>(android.view.accessibility.AccessibilityWindowInfo)>(r1);

        virtualinvoke r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r5);

        return;
    }

    private void clearNodesForWindowLocked(int)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        boolean $z0;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;
        android.util.LongSparseArray $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearNodesForWindowLocked(");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", $r10);

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r4 = (android.util.LongSparseArray) $r3;

        if $r4 != null goto label2;

        return;

     label2:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    private void clearSubTreeLocked(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        android.util.LongSparseArray r1;
        boolean $z0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "Clearing cached subtree.");

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.LongSparseArray) $r3;

        if r1 == null goto label2;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: boolean clearSubTreeRecursiveLocked(android.util.LongSparseArray,long)>(r1, l1);

     label2:
        return;
    }

    private boolean clearSubTreeRecursiveLocked(android.util.LongSparseArray, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.util.LongSparseArray r1;
        long l0, $l2;
        android.view.accessibility.AccessibilityNodeInfo r2;
        int i1, i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.util.LongSparseArray;

        l0 := @parameter1: long;

        $r3 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (android.view.accessibility.AccessibilityNodeInfo) $r3;

        if r2 != null goto label1;

        virtualinvoke r0.<android.view.accessibility.AccessibilityCache: void clear()>();

        return 1;

     label1:
        virtualinvoke r1.<android.util.LongSparseArray: void remove(long)>(l0);

        i1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        $l2 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i3);

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityCache: boolean clearSubTreeRecursiveLocked(android.util.LongSparseArray,long)>(r1, $l2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    private void clearWindowCacheLocked()
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0, i2, i3;
        android.util.SparseArray r1, $r2, $r3, $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "clearWindowCacheLocked");

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i2 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i2 <= 0 goto label4;

        i3 = i2 + -1;

     label2:
        if i3 < 0 goto label4;

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i3);

        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.SparseArray) $r5;

        if r1 == null goto label3;

        virtualinvoke r1.<android.util.SparseArray: void clear()>();

     label3:
        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

        i3 = i3 + -1;

        goto label2;

     label4:
        r0.<android.view.accessibility.AccessibilityCache: boolean mIsAllWindowsCached> = 0;

        return;
    }

    private void refreshCachedNodeLocked(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        boolean $z0, $z1;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r3;
        android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher $r4;
        android.util.LongSparseArray r5;
        android.view.accessibility.AccessibilityNodeInfo r6;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "Refreshing cached node.");

     label1:
        $r1 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.LongSparseArray) $r2;

        if r5 != null goto label2;

        return;

     label2:
        $r3 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r6 = (android.view.accessibility.AccessibilityNodeInfo) $r3;

        if r6 != null goto label3;

        return;

     label3:
        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher mAccessibilityNodeRefresher>;

        $z1 = virtualinvoke $r4.<android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher: boolean refreshNode(android.view.accessibility.AccessibilityNodeInfo,boolean)>(r6, 1);

        if $z1 == 0 goto label4;

        return;

     label4:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l1);

        return;
    }

    private void refreshCachedWindowLocked(int)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0, i1, i3;
        boolean $z0, $z1;
        android.util.SparseArray $r1, $r2, r6;
        java.lang.Object $r3, $r4;
        android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher $r5;
        android.view.accessibility.AccessibilityWindowInfo r7;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "Refreshing cached window.");

     label1:
        if i0 != -1 goto label2;

        return;

     label2:
        $r1 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i3 = 0;

     label3:
        if i3 >= i1 goto label8;

        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r6 = (android.util.SparseArray) $r3;

        if r6 != null goto label4;

        goto label5;

     label4:
        $r4 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (android.view.accessibility.AccessibilityWindowInfo) $r4;

        if r7 != null goto label6;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher mAccessibilityNodeRefresher>;

        $z1 = virtualinvoke $r5.<android.view.accessibility.AccessibilityCache$AccessibilityNodeRefresher: boolean refreshWindow(android.view.accessibility.AccessibilityWindowInfo)>(r7);

        if $z1 != 0 goto label7;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearWindowCacheLocked()>();

     label7:
        return;

     label8:
        return;
    }

    public void add(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r4, $r5, $r17;
        int i0, i2, $i12, i14;
        long l1, $l3, $l5, $l7, $l9, $l10, l15, l16;
        android.util.LongArray r2;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r3, $r6;
        byte $b4, $b6, $b8, $b11;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        android.view.accessibility.AccessibilityNodeInfo r12, r16, r18;
        java.lang.StringBuilder r13;
        android.util.LongSparseArray r14, r15;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r12 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean VERBOSE>;

        if $z0 == 0 goto label02;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add(");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", $r10);

     label02:
        i0 = virtualinvoke r12.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r14 = (android.util.LongSparseArray) $r4;

     label03:
        r15 = r14;

        if r14 != null goto label06;

     label04:
        r15 = new android.util.LongSparseArray;

        specialinvoke r15.<android.util.LongSparseArray: void <init>()>();

     label05:
        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r15);

     label06:
        l1 = virtualinvoke r12.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $r5 = virtualinvoke r15.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r16 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

     label07:
        if r16 == null goto label19;

     label08:
        r2 = virtualinvoke r12.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()>();

        i2 = virtualinvoke r16.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

     label09:
        i14 = 0;

     label10:
        if i14 >= i2 goto label18;

     label11:
        l15 = virtualinvoke r16.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i14);

     label12:
        if r2 == null goto label14;

     label13:
        $i12 = virtualinvoke r2.<android.util.LongArray: int indexOf(long)>(l15);

        if $i12 >= 0 goto label15;

     label14:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l15);

     label15:
        $r17 = virtualinvoke r15.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        if $r17 != null goto label17;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearNodesForWindowLocked(int)>(i0);

        exitmonitor r1;

     label16:
        return;

     label17:
        i14 = i14 + 1;

        goto label10;

     label18:
        l16 = virtualinvoke r16.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $l10 = virtualinvoke r12.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $b11 = $l10 cmp l16;

        if $b11 == 0 goto label19;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l16);

     label19:
        r18 = new android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r18.<android.view.accessibility.AccessibilityNodeInfo: void <init>(android.view.accessibility.AccessibilityNodeInfo)>(r12);

        virtualinvoke r15.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, r18);

        $z1 = virtualinvoke r18.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        if $z1 == 0 goto label22;

        $l5 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        $b6 = $l5 cmp 2147483647L;

        if $b6 == 0 goto label20;

        $l7 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        $b8 = $l7 cmp l1;

        if $b8 == 0 goto label20;

        $l9 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>(i0, $l9);

     label20:
        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = l1;

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = i0;

     label21:
        goto label23;

     label22:
        $l3 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        $b4 = $l3 cmp l1;

        if $b4 != 0 goto label23;

        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = -1;

     label23:
        $z2 = virtualinvoke r18.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        if $z2 == 0 goto label24;

        r0.<android.view.accessibility.AccessibilityCache: long mInputFocus> = l1;

     label24:
        exitmonitor r1;

     label25:
        return;

     label26:
        $r11 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label11 to label12 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public void addWindow(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        android.view.accessibility.AccessibilityWindowInfo r10;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r10 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label2;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching window: ");

        $i1 = virtualinvoke r10.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at display Id [ ");

        $i2 = virtualinvoke r10.<android.view.accessibility.AccessibilityWindowInfo: int getDisplayId()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", $r8);

     label2:
        $i0 = virtualinvoke r10.<android.view.accessibility.AccessibilityWindowInfo: int getDisplayId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void addWindowByDisplayLocked(int,android.view.accessibility.AccessibilityWindowInfo)>($i0, r10);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void checkIntegrity()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r8, $r10, $r11, $r12, $r24, $r42, $r43, $r72;
        int i0, i1, i2, $i3, $i4, $i15, i16, i17, i18, i19, i20, i22, i24, i25, i26, i27;
        android.util.LongSparseArray r2;
        android.util.ArraySet r3;
        android.util.SparseArray $r4, $r5, $r6, $r7, $r9, $r41, $r50, r55;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        long $l5, $l6, $l9, $l23;
        android.view.accessibility.AccessibilityNodeInfo $r13, $r25, r63, r64, r66, r68, r70, r73, r75;
        java.lang.String $r18, $r23, $r30, $r35, $r40, $r46, $r49;
        java.lang.Throwable $r51;
        android.view.accessibility.AccessibilityWindowInfo r53, r54, r56, r57, r58, r59, r61;
        java.lang.StringBuilder r60, r62, r67, r69, r71, r74, r76;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if $i3 > 0 goto label03;

        $r50 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $i15 = virtualinvoke $r50.<android.util.SparseArray: int size()>();

        if $i15 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r53 = null;

        r54 = null;

     label04:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i16 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label05:
        i17 = 0;

     label06:
        if i17 >= i16 goto label27;

     label07:
        $r41 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r42 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i17);

        r55 = (android.util.SparseArray) $r42;

     label08:
        if r55 != null goto label09;

        r56 = r53;

        r57 = r54;

        goto label26;

     label09:
        i18 = virtualinvoke r55.<android.util.SparseArray: int size()>();

     label10:
        i19 = 0;

     label11:
        r56 = r53;

        r57 = r54;

        if i19 >= i18 goto label26;

     label12:
        $r43 = virtualinvoke r55.<android.util.SparseArray: java.lang.Object valueAt(int)>(i19);

        r58 = (android.view.accessibility.AccessibilityWindowInfo) $r43;

     label13:
        r59 = r54;

     label14:
        $z2 = virtualinvoke r58.<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>();

        if $z2 == 0 goto label19;

     label15:
        if r54 == null goto label18;

     label16:
        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate active window:");

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r49 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r49);

     label17:
        r59 = r54;

        goto label19;

     label18:
        r59 = r58;

     label19:
        r61 = r53;

     label20:
        $z3 = virtualinvoke r58.<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>();

        if $z3 == 0 goto label25;

     label21:
        if r53 == null goto label24;

     label22:
        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate focused window:");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r46 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r46);

     label23:
        r61 = r53;

        goto label25;

     label24:
        r61 = r58;

     label25:
        i19 = i19 + 1;

        r53 = r61;

        r54 = r59;

        goto label11;

     label26:
        i17 = i17 + 1;

        r53 = r56;

        r54 = r57;

        goto label06;

     label27:
        r63 = null;

        r64 = null;

     label28:
        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

     label29:
        i20 = 0;

     label30:
        if i20 >= i0 goto label75;

     label31:
        $r7 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i20);

        r2 = (android.util.LongSparseArray) $r8;

        $i4 = virtualinvoke r2.<android.util.LongSparseArray: int size()>();

        if $i4 > 0 goto label33;

     label32:
        goto label74;

     label33:
        r3 = new android.util.ArraySet;

        specialinvoke r3.<android.util.ArraySet: void <init>()>();

        $r9 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i1 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i20);

        i2 = virtualinvoke r2.<android.util.LongSparseArray: int size()>();

     label34:
        i22 = 0;

     label35:
        if i22 >= i2 goto label74;

     label36:
        $r10 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i22);

        r66 = (android.view.accessibility.AccessibilityNodeInfo) $r10;

        $z0 = virtualinvoke r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r66);

        if $z0 != 0 goto label38;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate node: ");

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r40 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r40);

     label37:
        goto label73;

     label38:
        r68 = r63;

     label39:
        $z1 = virtualinvoke r66.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        if $z1 == 0 goto label44;

     label40:
        if r63 == null goto label43;

     label41:
        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate accessibility focus:");

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r35 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r35);

     label42:
        r68 = r63;

        goto label44;

     label43:
        r68 = r66;

     label44:
        r70 = r64;

     label45:
        $z4 = virtualinvoke r66.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        if $z4 == 0 goto label50;

     label46:
        if r64 == null goto label49;

     label47:
        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate input focus: ");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r30 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r30);

     label48:
        r70 = r64;

        goto label50;

     label49:
        r70 = r66;

     label50:
        $l23 = virtualinvoke r66.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r72 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>($l23);

        r73 = (android.view.accessibility.AccessibilityNodeInfo) $r72;

     label51:
        if r73 == null goto label63;

     label52:
        i24 = virtualinvoke r73.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

     label53:
        i25 = 0;

     label54:
        if i25 >= i24 goto label58;

     label55:
        $l9 = virtualinvoke r73.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i25);

        $r24 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>($l9);

        $r25 = (android.view.accessibility.AccessibilityNodeInfo) $r24;

        if $r25 != r66 goto label57;

     label56:
        z5 = 1;

        goto label59;

     label57:
        i25 = i25 + 1;

        goto label54;

     label58:
        z5 = 0;

     label59:
        if z5 != 0 goto label62;

     label60:
        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid parent-child relation between parent: ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and child: ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        $r23 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r23);

     label61:
        goto label63;

     label62:
        goto label63;

     label63:
        i26 = virtualinvoke r66.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

     label64:
        i27 = 0;

     label65:
        if i27 >= i26 goto label72;

     label66:
        $l5 = virtualinvoke r66.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i27);

        $r11 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>($l5);

        r75 = (android.view.accessibility.AccessibilityNodeInfo) $r11;

     label67:
        if r75 == null goto label71;

     label68:
        $l6 = virtualinvoke r75.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r12 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>($l6);

        $r13 = (android.view.accessibility.AccessibilityNodeInfo) $r12;

        if $r13 == r66 goto label70;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid child-parent relation between child: ");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and parent: ");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r18 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r18);

     label69:
        goto label71;

     label70:
        goto label71;

     label71:
        i27 = i27 + 1;

        goto label65;

     label72:
        r64 = r70;

        r63 = r68;

     label73:
        i22 = i22 + 1;

        goto label35;

     label74:
        i20 = i20 + 1;

        goto label30;

     label75:
        exitmonitor r1;

     label76:
        return;

     label77:
        $r51 := @caughtexception;

     label78:
        exitmonitor r1;

     label79:
        throw $r51;

        catch java.lang.Throwable from label01 to label02 with label77;
        catch java.lang.Throwable from label04 to label05 with label77;
        catch java.lang.Throwable from label07 to label08 with label77;
        catch java.lang.Throwable from label09 to label10 with label77;
        catch java.lang.Throwable from label12 to label13 with label77;
        catch java.lang.Throwable from label14 to label15 with label77;
        catch java.lang.Throwable from label16 to label17 with label77;
        catch java.lang.Throwable from label20 to label21 with label77;
        catch java.lang.Throwable from label22 to label23 with label77;
        catch java.lang.Throwable from label28 to label29 with label77;
        catch java.lang.Throwable from label31 to label32 with label77;
        catch java.lang.Throwable from label33 to label34 with label77;
        catch java.lang.Throwable from label36 to label37 with label77;
        catch java.lang.Throwable from label39 to label40 with label77;
        catch java.lang.Throwable from label41 to label42 with label77;
        catch java.lang.Throwable from label45 to label46 with label77;
        catch java.lang.Throwable from label47 to label48 with label77;
        catch java.lang.Throwable from label50 to label51 with label77;
        catch java.lang.Throwable from label52 to label53 with label77;
        catch java.lang.Throwable from label55 to label56 with label77;
        catch java.lang.Throwable from label60 to label61 with label77;
        catch java.lang.Throwable from label63 to label64 with label77;
        catch java.lang.Throwable from label66 to label67 with label77;
        catch java.lang.Throwable from label68 to label69 with label77;
        catch java.lang.Throwable from label75 to label76 with label77;
        catch java.lang.Throwable from label78 to label79 with label77;
    }

    public void clear()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1;
        boolean $z0;
        android.util.SparseArray $r3, $r4;
        int $i0, $i1, i3;
        java.lang.Throwable $r5;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label02;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "clear()");

     label02:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearWindowCacheLocked()>();

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label03:
        if i3 < 0 goto label06;

     label04:
        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i3);

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearNodesForWindowLocked(int)>($i1);

     label05:
        i3 = i3 + -1;

        goto label03;

     label06:
        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: long mInputFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = -1;

        exitmonitor r1;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.view.accessibility.AccessibilityNodeInfo getNode(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        java.lang.Object r1, $r3, $r4;
        android.util.SparseArray $r2;
        boolean $z0;
        java.lang.String $r6, $r10;
        java.lang.Throwable $r11;
        android.util.LongSparseArray r12;
        android.view.accessibility.AccessibilityNodeInfo r13, r14;
        java.lang.StringBuilder r15;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (android.util.LongSparseArray) $r3;

     label02:
        if r12 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        $r4 = virtualinvoke r12.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r13 = (android.view.accessibility.AccessibilityNodeInfo) $r4;

     label06:
        r14 = r13;

        if r13 == null goto label08;

     label07:
        r14 = new android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r14.<android.view.accessibility.AccessibilityNodeInfo: void <init>(android.view.accessibility.AccessibilityNodeInfo)>(r13);

     label08:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean VERBOSE>;

        if $z0 == 0 goto label09;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get(0x");

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") = ");

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", $r10);

     label09:
        exitmonitor r1;

     label10:
        return r14;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.view.accessibility.AccessibilityWindowInfo getWindow(int)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0, i1, i2;
        java.lang.Object r1, $r5, $r6;
        android.view.accessibility.AccessibilityWindowInfo r2, r9;
        android.util.SparseArray $r3, $r4, r8;
        java.lang.Throwable $r7;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label11;

     label04:
        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r8 = (android.util.SparseArray) $r5;

     label05:
        if r8 != null goto label06;

        goto label10;

     label06:
        $r6 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.view.accessibility.AccessibilityWindowInfo) $r6;

     label07:
        if r2 == null goto label10;

     label08:
        r9 = new android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke r9.<android.view.accessibility.AccessibilityWindowInfo: void <init>(android.view.accessibility.AccessibilityWindowInfo)>(r2);

        exitmonitor r1;

     label09:
        return r9;

     label10:
        i2 = i2 + 1;

        goto label03;

     label11:
        exitmonitor r1;

     label12:
        return null;

     label13:
        $r7 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.util.SparseArray getWindowsOnAllDisplays()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r7, $r8, $r9;
        android.util.SparseArray r2, $r4, $r5, $r6, r11, r12;
        int i0, i1, i2, $i3, i4, i5, i6, i7;
        java.util.ArrayList r3;
        boolean $z0;
        java.lang.Throwable $r10;
        android.view.accessibility.AccessibilityWindowInfo r13, r14, r15;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.view.accessibility.AccessibilityCache: boolean mIsAllWindowsCached>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        r2 = new android.util.SparseArray;

        specialinvoke r2.<android.util.SparseArray: void <init>()>();

        $r4 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label04:
        if i0 <= 0 goto label24;

        i4 = 0;

     label05:
        if i4 >= i0 goto label22;

     label06:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i4);

        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCacheByDisplay>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r11 = (android.util.SparseArray) $r7;

     label07:
        if r11 != null goto label08;

        goto label21;

     label08:
        i2 = virtualinvoke r11.<android.util.SparseArray: int size()>();

     label09:
        if i2 <= 0 goto label21;

     label10:
        r12 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mTempWindowArray>;

        virtualinvoke r12.<android.util.SparseArray: void clear()>();

     label11:
        i5 = 0;

     label12:
        if i5 >= i2 goto label15;

     label13:
        $r9 = virtualinvoke r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r13 = (android.view.accessibility.AccessibilityWindowInfo) $r9;

        $i3 = virtualinvoke r13.<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>();

        virtualinvoke r12.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r13);

     label14:
        i5 = i5 + 1;

        goto label12;

     label15:
        i6 = virtualinvoke r12.<android.util.SparseArray: int size()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>(i6);

     label16:
        i7 = i6 + -1;

     label17:
        if i7 < 0 goto label20;

     label18:
        $r8 = virtualinvoke r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r14 = (android.view.accessibility.AccessibilityWindowInfo) $r8;

        r15 = new android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke r15.<android.view.accessibility.AccessibilityWindowInfo: void <init>(android.view.accessibility.AccessibilityWindowInfo)>(r14);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r15);

        virtualinvoke r12.<android.util.SparseArray: void removeAt(int)>(i7);

     label19:
        i7 = i7 + -1;

        goto label17;

     label20:
        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r3);

     label21:
        i4 = i4 + 1;

        goto label05;

     label22:
        exitmonitor r1;

     label23:
        return r2;

     label24:
        exitmonitor r1;

     label25:
        return null;

     label26:
        $r10 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, r10;
        long l0, $l4, $l5, $l9, $l11, $l13, $l14, $l15, $l18, $l21, $l23, $l25, $l27, $l29;
        boolean $z0, $z1;
        int $i1, $i2, $i3, $i7, $i8, $i10, $i16, $i17, $i19, $i20, $i24, $i26, $i28, i31, i32;
        byte $b6, $b12, $b22;
        java.lang.String $r5;
        java.lang.Throwable $r6, $r7;
        android.view.accessibility.AccessibilityEvent r8;
        java.lang.StringBuilder r9;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r8 := @parameter0: android.view.accessibility.AccessibilityEvent;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label02;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAccessibilityEvent(");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", $r5);

     label02:
        $i1 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        lookupswitch($i1)
        {
            case 1: goto label27;
            case 4: goto label27;
            case 8: goto label24;
            case 16: goto label27;
            case 32: goto label22;
            case 2048: goto label13;
            case 4096: goto label11;
            case 8192: goto label27;
            case 32768: goto label08;
            case 65536: goto label06;
            case 4194304: goto label04;
            default: goto label03;
        };

     label03:
        goto label28;

     label04:
        $i2 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowChanges()>();

        if $i2 != 128 goto label22;

        $i3 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedWindowLocked(int)>($i3);

     label05:
        goto label28;

     label06:
        $l4 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        $l5 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label28;

        $i7 = r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow>;

        $i8 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        if $i7 != $i8 goto label28;

        $i10 = r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow>;

        $l9 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i10, $l9);

        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = 2147483647L;

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = -1;

     label07:
        goto label28;

     label08:
        $l11 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        $b12 = $l11 cmp 2147483647L;

        if $b12 == 0 goto label09;

        $i16 = r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow>;

        $l15 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i16, $l15);

     label09:
        $l13 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus> = $l13;

        i31 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        r0.<android.view.accessibility.AccessibilityCache: int mAccessibilityFocusedWindow> = i31;

        $l14 = r0.<android.view.accessibility.AccessibilityCache: long mAccessibilityFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>(i31, $l14);

     label10:
        goto label28;

     label11:
        $i17 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l18 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>($i17, $l18);

     label12:
        goto label28;

     label13:
        r10 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r10;

     label14:
        i32 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        l0 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $i19 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>();

        $i20 = $i19 & 1;

        if $i20 == 0 goto label16;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i32, l0);

     label15:
        goto label17;

     label16:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>(i32, l0);

     label17:
        exitmonitor r10;

     label18:
        goto label28;

     label19:
        $r6 := @caughtexception;

     label20:
        exitmonitor r10;

     label21:
        throw $r6;

     label22:
        virtualinvoke r0.<android.view.accessibility.AccessibilityCache: void clear()>();

     label23:
        goto label28;

     label24:
        $l21 = r0.<android.view.accessibility.AccessibilityCache: long mInputFocus>;

        $b22 = $l21 cmp 2147483647L;

        if $b22 == 0 goto label25;

        $i26 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l27 = r0.<android.view.accessibility.AccessibilityCache: long mInputFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i26, $l27);

     label25:
        $l23 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        r0.<android.view.accessibility.AccessibilityCache: long mInputFocus> = $l23;

        $i24 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l25 = r0.<android.view.accessibility.AccessibilityCache: long mInputFocus>;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i24, $l25);

     label26:
        goto label28;

     label27:
        $i28 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l29 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i28, $l29);

     label28:
        exitmonitor r1;

     label29:
        $z1 = <android.view.accessibility.AccessibilityCache: boolean CHECK_INTEGRITY>;

        if $z1 == 0 goto label30;

        virtualinvoke r0.<android.view.accessibility.AccessibilityCache: void checkIntegrity()>();

     label30:
        return;

     label31:
        $r7 := @caughtexception;

     label32:
        exitmonitor r1;

     label33:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.lang.Throwable from label27 to label28 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public void setWindowsOnAllDisplays(android.util.SparseArray)
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r3, $r4;
        int i0, i1, i2, i4, i5;
        java.util.List r2;
        boolean $z0;
        android.view.accessibility.AccessibilityWindowInfo $r5;
        java.lang.Throwable $r6;
        android.util.SparseArray r7;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r7 := @parameter0: android.util.SparseArray;

        r1 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean DEBUG>;

        if $z0 == 0 goto label02;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccessibilityCache", "Set windows");

     label02:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearWindowCacheLocked()>();

     label03:
        if r7 != null goto label06;

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        i0 = virtualinvoke r7.<android.util.SparseArray: int size()>();

     label07:
        i4 = 0;

     label08:
        if i4 >= i0 goto label17;

     label09:
        $r3 = virtualinvoke r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r2 = (java.util.List) $r3;

     label10:
        if r2 != null goto label11;

        goto label16;

     label11:
        i1 = virtualinvoke r7.<android.util.SparseArray: int keyAt(int)>(i4);

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label12:
        i5 = 0;

     label13:
        if i5 >= i2 goto label16;

     label14:
        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);

        $r5 = (android.view.accessibility.AccessibilityWindowInfo) $r4;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void addWindowByDisplayLocked(int,android.view.accessibility.AccessibilityWindowInfo)>(i1, $r5);

     label15:
        i5 = i5 + 1;

        goto label13;

     label16:
        i4 = i4 + 1;

        goto label08;

     label17:
        r0.<android.view.accessibility.AccessibilityCache: boolean mIsAllWindowsCached> = 1;

        exitmonitor r1;

     label18:
        return;

     label19:
        $r6 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }
}
