public class android.view.accessibility.AccessibilityNodeInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACTION_ACCESSIBILITY_FOCUS;
    public static final java.lang.String ACTION_ARGUMENT_ACCESSIBLE_CLICKABLE_SPAN;
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT;
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN;
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING;
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT;
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X;
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y;
    public static final java.lang.String ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT;
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE;
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT;
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE;
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS;
    public static final int ACTION_CLEAR_FOCUS;
    public static final int ACTION_CLEAR_SELECTION;
    public static final int ACTION_CLICK;
    public static final int ACTION_COLLAPSE;
    public static final int ACTION_COPY;
    public static final int ACTION_CUT;
    public static final int ACTION_DISMISS;
    public static final int ACTION_EXPAND;
    public static final int ACTION_FOCUS;
    public static final int ACTION_LONG_CLICK;
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_NEXT_HTML_ELEMENT;
    public static final int ACTION_PASTE;
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_PREVIOUS_HTML_ELEMENT;
    public static final int ACTION_SCROLL_BACKWARD;
    public static final int ACTION_SCROLL_FORWARD;
    public static final int ACTION_SELECT;
    public static final int ACTION_SET_SELECTION;
    public static final int ACTION_SET_TEXT;
    private static final int ACTION_TYPE_MASK;
    private static final int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_CHECKABLE;
    private static final int BOOLEAN_PROPERTY_CHECKED;
    private static final int BOOLEAN_PROPERTY_CLICKABLE;
    private static final int BOOLEAN_PROPERTY_CONTENT_INVALID;
    private static final int BOOLEAN_PROPERTY_CONTEXT_CLICKABLE;
    private static final int BOOLEAN_PROPERTY_DISMISSABLE;
    private static final int BOOLEAN_PROPERTY_EDITABLE;
    private static final int BOOLEAN_PROPERTY_ENABLED;
    private static final int BOOLEAN_PROPERTY_FOCUSABLE;
    private static final int BOOLEAN_PROPERTY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_IMPORTANCE;
    private static final int BOOLEAN_PROPERTY_IS_HEADING;
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT;
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY;
    private static final int BOOLEAN_PROPERTY_LONG_CLICKABLE;
    private static final int BOOLEAN_PROPERTY_MULTI_LINE;
    private static final int BOOLEAN_PROPERTY_OPENS_POPUP;
    private static final int BOOLEAN_PROPERTY_PASSWORD;
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE;
    private static final int BOOLEAN_PROPERTY_SCROLLABLE;
    private static final int BOOLEAN_PROPERTY_SELECTED;
    private static final int BOOLEAN_PROPERTY_VISIBLE_TO_USER;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final android.view.accessibility.AccessibilityNodeInfo DEFAULT;
    public static final java.lang.String EXTRA_DATA_RENDERING_INFO_KEY;
    public static final java.lang.String EXTRA_DATA_REQUESTED_KEY;
    public static final java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH;
    public static final java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX;
    public static final java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY;
    public static final int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS;
    public static final int FLAG_PREFETCH_DESCENDANTS;
    public static final int FLAG_PREFETCH_MASK;
    public static final int FLAG_PREFETCH_PREDECESSORS;
    public static final int FLAG_PREFETCH_SIBLINGS;
    public static final int FLAG_REPORT_VIEW_IDS;
    public static final int FOCUS_ACCESSIBILITY;
    public static final int FOCUS_INPUT;
    public static final int LAST_LEGACY_STANDARD_ACTION;
    public static final int LEASHED_ITEM_ID;
    public static final long LEASHED_NODE_ID;
    private static final int MAX_POOL_SIZE;
    public static final int MOVEMENT_GRANULARITY_CHARACTER;
    public static final int MOVEMENT_GRANULARITY_LINE;
    public static final int MOVEMENT_GRANULARITY_PAGE;
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH;
    public static final int MOVEMENT_GRANULARITY_WORD;
    public static final int ROOT_ITEM_ID;
    public static final long ROOT_NODE_ID;
    private static final java.lang.String TAG;
    public static final int UNDEFINED_CONNECTION_ID;
    public static final int UNDEFINED_ITEM_ID;
    public static final long UNDEFINED_NODE_ID;
    public static final int UNDEFINED_SELECTION_INDEX;
    private static final long VIRTUAL_DESCENDANT_ID_MASK;
    private static final int VIRTUAL_DESCENDANT_ID_SHIFT;
    private static java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse;
    private static final android.util.Pools$SynchronizedPool sPool;
    private java.util.ArrayList mActions;
    private int mBooleanProperties;
    private final android.graphics.Rect mBoundsInParent;
    private final android.graphics.Rect mBoundsInScreen;
    private android.util.LongArray mChildNodeIds;
    private java.lang.CharSequence mClassName;
    private android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo;
    private android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo;
    private int mConnectionId;
    private java.lang.CharSequence mContentDescription;
    private int mDrawingOrderInParent;
    private java.lang.CharSequence mError;
    private java.util.ArrayList mExtraDataKeys;
    private android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo;
    private android.os.Bundle mExtras;
    private java.lang.CharSequence mHintText;
    private int mInputType;
    private long mLabelForId;
    private long mLabeledById;
    private android.os.IBinder mLeashedChild;
    private android.os.IBinder mLeashedParent;
    private long mLeashedParentNodeId;
    private int mLiveRegion;
    private int mMaxTextLength;
    private int mMovementGranularities;
    private java.lang.CharSequence mOriginalText;
    private java.lang.CharSequence mPackageName;
    private java.lang.CharSequence mPaneTitle;
    private long mParentNodeId;
    private android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo;
    private boolean mSealed;
    private long mSourceNodeId;
    private java.lang.CharSequence mStateDescription;
    private java.lang.CharSequence mText;
    private int mTextSelectionEnd;
    private int mTextSelectionStart;
    private java.lang.CharSequence mTooltipText;
    private android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo;
    private long mTraversalAfter;
    private long mTraversalBefore;
    private java.lang.String mViewIdResourceName;
    private int mWindowId;

    static void <clinit>()
    {
        boolean $z0, $z1, z2;
        long $l0, $l1, $l2;
        android.util.Pools$SynchronizedPool $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.view.accessibility.AccessibilityNodeInfo$1 $r2;

        <android.view.accessibility.AccessibilityNodeInfo: int VIRTUAL_DESCENDANT_ID_SHIFT> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: long VIRTUAL_DESCENDANT_ID_MASK> = -4294967296L;

        <android.view.accessibility.AccessibilityNodeInfo: int UNDEFINED_SELECTION_INDEX> = -1;

        <android.view.accessibility.AccessibilityNodeInfo: int UNDEFINED_ITEM_ID> = 2147483647;

        <android.view.accessibility.AccessibilityNodeInfo: int UNDEFINED_CONNECTION_ID> = -1;

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String TAG> = "AccessibilityNodeInfo";

        <android.view.accessibility.AccessibilityNodeInfo: int ROOT_ITEM_ID> = 2147483646;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_WORD> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_PARAGRAPH> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_PAGE> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_LINE> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_CHARACTER> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int MAX_POOL_SIZE> = 50;

        <android.view.accessibility.AccessibilityNodeInfo: int LEASHED_ITEM_ID> = 2147483645;

        <android.view.accessibility.AccessibilityNodeInfo: int LAST_LEGACY_STANDARD_ACTION> = 2097152;

        <android.view.accessibility.AccessibilityNodeInfo: int FOCUS_INPUT> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int FOCUS_ACCESSIBILITY> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_REPORT_VIEW_IDS> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_SIBLINGS> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_PREDECESSORS> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_MASK> = 7;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_DESCENDANTS> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY> = "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX> = "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH> = "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String EXTRA_DATA_REQUESTED_KEY> = "android.view.accessibility.AccessibilityNodeInfo.extra_data_requested";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String EXTRA_DATA_RENDERING_INFO_KEY> = "android.view.accessibility.extra.DATA_RENDERING_INFO_KEY";

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_VISIBLE_TO_USER> = 2048;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_SELECTED> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_SCROLLABLE> = 512;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE> = 524288;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_PASSWORD> = 256;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_OPENS_POPUP> = 8192;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_MULTI_LINE> = 32768;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_LONG_CLICKABLE> = 64;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY> = 4194304;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_IS_SHOWING_HINT> = 1048576;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_IS_HEADING> = 2097152;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_IMPORTANCE> = 262144;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_FOCUSED> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_FOCUSABLE> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_ENABLED> = 128;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_EDITABLE> = 4096;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_DISMISSABLE> = 16384;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CONTEXT_CLICKABLE> = 131072;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CONTENT_INVALID> = 65536;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CLICKABLE> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CHECKED> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CHECKABLE> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED> = 1024;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_TYPE_MASK> = -16777216;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SET_TEXT> = 2097152;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SET_SELECTION> = 131072;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SELECT> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SCROLL_FORWARD> = 4096;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SCROLL_BACKWARD> = 8192;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PREVIOUS_HTML_ELEMENT> = 2048;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY> = 512;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PASTE> = 32768;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_NEXT_HTML_ELEMENT> = 1024;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY> = 256;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_LONG_CLICK> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_FOCUS> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_EXPAND> = 262144;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_DISMISS> = 1048576;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CUT> = 65536;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_COPY> = 16384;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_COLLAPSE> = 524288;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLICK> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_SELECTION> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_FOCUS> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_ACCESSIBILITY_FOCUS> = 128;

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE> = "ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT> = "ACTION_ARGUMENT_SELECTION_START_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT> = "ACTION_ARGUMENT_SELECTION_END_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_ROW_INT> = "android.view.accessibility.action.ARGUMENT_ROW_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE> = "android.view.accessibility.action.ARGUMENT_PROGRESS_VALUE";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT> = "android.view.accessibility.action.ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y> = "ACTION_ARGUMENT_MOVE_WINDOW_Y";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X> = "ACTION_ARGUMENT_MOVE_WINDOW_X";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT> = "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING> = "ACTION_ARGUMENT_HTML_ELEMENT_STRING";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN> = "ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_COLUMN_INT> = "android.view.accessibility.action.ARGUMENT_COLUMN_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_ACCESSIBLE_CLICKABLE_SPAN> = "android.view.accessibility.action.ACTION_ARGUMENT_ACCESSIBLE_CLICKABLE_SPAN";

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_ACCESSIBILITY_FOCUS> = 64;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccessibilityNodeInfo", 3);

        if $z0 == 0 goto label1;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        <android.view.accessibility.AccessibilityNodeInfo: boolean DEBUG> = z2;

        $l0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(2147483647, 2147483647);

        <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID> = $l0;

        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(2147483646, -1);

        <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID> = $l1;

        $l2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(2147483645, -1);

        <android.view.accessibility.AccessibilityNodeInfo: long LEASHED_NODE_ID> = $l2;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(50);

        <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        $r1 = new android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void <init>()>();

        <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT> = $r1;

        $r2 = new android.view.accessibility.AccessibilityNodeInfo$1;

        specialinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo$1: void <init>()>();

        <android.view.accessibility.AccessibilityNodeInfo: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    public void <init>()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long l0, $l1;
        android.graphics.Rect $r1, $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = l0;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen> = $r2;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l1;

        return;
    }

    public void <init>(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        long l0, $l1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = l0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen> = $r3;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l1;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>(r1);

        return;
    }

    public void <init>(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0;
        long l1, $l2;
        android.graphics.Rect $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = l1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = l1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = l1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = l1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = l1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = l1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen> = $r3;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        $l2 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l2;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>(r1, i0);

        return;
    }

    public void <init>(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;
        long l0, $l1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = l0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen> = $r3;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l1;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo,boolean)>(r1, 0);

        return;
    }

    static java.lang.String access$2200(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String getActionSymbolicName(int)>(i0);

        return $r0;
    }

    static android.view.accessibility.AccessibilityNodeInfo access$2400(int, int, long)
    {
        int i0, i1;
        long l2;
        android.view.accessibility.AccessibilityNodeInfo $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>(i0, i1, l2);

        return $r0;
    }

    static void access$2500(android.view.accessibility.AccessibilityNodeInfo, android.os.Parcel)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void initFromParcel(android.os.Parcel)>(r1);

        return;
    }

    private void addActionUnchecked(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions> = $r5;

     label2:
        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void addChildInternal(android.view.View, int, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, $i4, i6;
        boolean z0;
        long l1, $l2;
        android.util.LongArray $r2, $r3, $r4, $r5;
        byte $b3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if $r2 != null goto label1;

        $r5 = new android.util.LongArray;

        specialinvoke $r5.<android.util.LongArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds> = $r5;

     label1:
        if r1 == null goto label2;

        i6 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label3;

     label2:
        i6 = 2147483647;

     label3:
        l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i6, i0);

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $b3 = l1 cmp $l2;

        if $b3 != 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityNodeInfo", "Rejecting attempt to make a View its own child");

        return;

     label4:
        if z0 == 0 goto label5;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $i4 = virtualinvoke $r4.<android.util.LongArray: int indexOf(long)>(l1);

        if $i4 < 0 goto label5;

        return;

     label5:
        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        virtualinvoke $r3.<android.util.LongArray: void add(long)>(l1);

        return;
    }

    private void addStandardActions(long)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long l0, l3;
        byte $b1;
        int $i2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        l3 := @parameter0: long;

     label1:
        $b1 = l3 cmp 0L;

        if $b1 <= 0 goto label2;

        $i2 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>(l3);

        l0 = 1L << $i2;

        l3 = l3 & l0;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingletonBySerializationFlag(long)>(l0);

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r1);

        goto label1;

     label2:
        return;
    }

    private static boolean canPerformRequestOverConnection(int, int, long)
    {
        int i0, i1, $i3;
        long l2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        if i1 == -1 goto label1;

        $i3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l2);

        if $i3 == 2147483647 goto label1;

        if i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void clear()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo,boolean)>($r1, 1);

        return;
    }

    private void enforceValidFocusDirection(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 17 goto label2;

        if i0 == 33 goto label2;

        if i0 == 66 goto label2;

        if i0 != 130 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown direction: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    private void enforceValidFocusType(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown focus type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    public static int getAccessibilityViewId(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        return $i1;
    }

    private static android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingleton(int)
    {
        int i0, i1, $i2, i3;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r0;
        android.util.ArraySet $r1, $r2;
        java.lang.Object $r3;

        i0 := @parameter0: int;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.util.ArraySet sStandardActions>;

        i1 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.util.ArraySet sStandardActions>;

        $r3 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r0 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r3;

        $i2 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>();

        if i0 != $i2 goto label2;

        return r0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    private static android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingletonBySerializationFlag(long)
    {
        long l0, $l2;
        int i1, i4;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r0;
        android.util.ArraySet $r1, $r2;
        java.lang.Object $r3;
        byte $b3;

        l0 := @parameter0: long;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.util.ArraySet sStandardActions>;

        i1 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.util.ArraySet sStandardActions>;

        $r3 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r0 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r3;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: long mSerializationFlag>;

        $b3 = l0 cmp $l2;

        if $b3 != 0 goto label2;

        return r0;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return null;
    }

    private static java.lang.String getActionSymbolicName(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label41;

        if i0 == 2 goto label40;

        lookupswitch(i0)
        {
            case 4: goto label39;
            case 8: goto label38;
            case 16: goto label37;
            case 32: goto label36;
            case 64: goto label35;
            case 128: goto label34;
            case 256: goto label33;
            case 512: goto label32;
            case 1024: goto label31;
            case 2048: goto label30;
            case 4096: goto label29;
            case 8192: goto label28;
            case 16384: goto label27;
            case 32768: goto label26;
            case 65536: goto label25;
            case 131072: goto label24;
            case 262144: goto label23;
            case 524288: goto label22;
            case 1048576: goto label21;
            case 2097152: goto label20;
            case 16908372: goto label19;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 16908342: goto label18;
            case 16908343: goto label17;
            case 16908344: goto label16;
            case 16908345: goto label15;
            case 16908346: goto label14;
            case 16908347: goto label13;
            case 16908348: goto label12;
            case 16908349: goto label11;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 16908356: goto label10;
            case 16908357: goto label09;
            case 16908358: goto label08;
            case 16908359: goto label07;
            case 16908360: goto label06;
            case 16908361: goto label05;
            case 16908362: goto label04;
            default: goto label03;
        };

     label03:
        return "ACTION_UNKNOWN";

     label04:
        return "ACTION_PRESS_AND_HOLD";

     label05:
        return "ACTION_PAGE_RIGHT";

     label06:
        return "ACTION_PAGE_LEFT";

     label07:
        return "ACTION_PAGE_DOWN";

     label08:
        return "ACTION_PAGE_UP";

     label09:
        return "ACTION_HIDE_TOOLTIP";

     label10:
        return "ACTION_SHOW_TOOLTIP";

     label11:
        return "ACTION_SET_PROGRESS";

     label12:
        return "ACTION_CONTEXT_CLICK";

     label13:
        return "ACTION_SCROLL_RIGHT";

     label14:
        return "ACTION_SCROLL_DOWN";

     label15:
        return "ACTION_SCROLL_LEFT";

     label16:
        return "ACTION_SCROLL_UP";

     label17:
        return "ACTION_SCROLL_TO_POSITION";

     label18:
        return "ACTION_SHOW_ON_SCREEN";

     label19:
        return "ACTION_IME_ENTER";

     label20:
        return "ACTION_SET_TEXT";

     label21:
        return "ACTION_DISMISS";

     label22:
        return "ACTION_COLLAPSE";

     label23:
        return "ACTION_EXPAND";

     label24:
        return "ACTION_SET_SELECTION";

     label25:
        return "ACTION_CUT";

     label26:
        return "ACTION_PASTE";

     label27:
        return "ACTION_COPY";

     label28:
        return "ACTION_SCROLL_BACKWARD";

     label29:
        return "ACTION_SCROLL_FORWARD";

     label30:
        return "ACTION_PREVIOUS_HTML_ELEMENT";

     label31:
        return "ACTION_NEXT_HTML_ELEMENT";

     label32:
        return "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY";

     label33:
        return "ACTION_NEXT_AT_MOVEMENT_GRANULARITY";

     label34:
        return "ACTION_CLEAR_ACCESSIBILITY_FOCUS";

     label35:
        return "ACTION_ACCESSIBILITY_FOCUS";

     label36:
        return "ACTION_LONG_CLICK";

     label37:
        return "ACTION_CLICK";

     label38:
        return "ACTION_CLEAR_SELECTION";

     label39:
        return "ACTION_SELECT";

     label40:
        return "ACTION_CLEAR_FOCUS";

     label41:
        return "ACTION_FOCUS";
    }

    private boolean getBooleanProperty(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static java.lang.String getMovementGranularitySymbolicName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 4 goto label3;

        if i0 == 8 goto label2;

        if i0 != 16 goto label1;

        return "MOVEMENT_GRANULARITY_PAGE";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown movement granularity: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "MOVEMENT_GRANULARITY_PARAGRAPH";

     label3:
        return "MOVEMENT_GRANULARITY_LINE";

     label4:
        return "MOVEMENT_GRANULARITY_WORD";

     label5:
        return "MOVEMENT_GRANULARITY_CHARACTER";
    }

    private static android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int, int, long)
    {
        int i0, i1;
        long l2;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>(i0, i1, l2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r1 = virtualinvoke $r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>(i0, i1, l2, 0, 7, null);

        return $r1;
    }

    private static android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int, android.os.IBinder, long)
    {
        int i0, $i2;
        android.os.IBinder r0;
        long l1;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.os.IBinder;

        l1 := @parameter2: long;

        if r0 == null goto label2;

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l1);

        if $i2 == 2147483647 goto label2;

        if i0 != -1 goto label1;

        goto label2;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,android.os.IBinder,long,boolean,int,android.os.Bundle)>(i0, r0, l1, 0, 7, null);

        return $r2;

     label2:
        return null;
    }

    public static int getVirtualDescendantId(long)
    {
        long l0, $l1, $l2;
        int $i3;

        l0 := @parameter0: long;

        $l1 = -4294967296L & l0;

        $l2 = $l1 >> 32;

        $i3 = (int) $l2;

        return $i3;
    }

    private static java.lang.String idItemToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == -1 goto label4;

        tableswitch(i0)
        {
            case 2147483646: goto label3;
            case 2147483647: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        return "UNDEFINED";

     label3:
        return "ROOT";

     label4:
        return "HOST";
    }

    public static java.lang.String idToString(long)
    {
        long l0;
        int i1, i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r4, r6;

        l0 := @parameter0: long;

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        if i2 != -1 goto label1;

        r6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String idItemToString(int)>(i1);

        goto label2;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String idItemToString(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String idItemToString(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r6;
    }

    private void init(android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;
        boolean z0, $z1;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l8;
        int $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        java.lang.CharSequence $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        android.os.IBinder $r17, $r18;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r19, r35, r36;
        android.util.ArrayMap $r20;
        android.os.Bundle $r21, $r22, r33, r34;
        android.util.LongArray $r23, r29, r30, r31;
        java.util.ArrayList $r24, $r25, r26, r27, r28, $r32;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter1: boolean;

        $z1 = r1.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = $z1;

        $l0 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l0;

        $l1 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l1;

        $l2 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l2;

        $l3 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l3;

        $l4 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = $l4;

        $l5 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = $l5;

        $i6 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = $i6;

        $i7 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = $i7;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $r2 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $r4 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        $r6 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = $r6;

        $r7 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = $r7;

        $r8 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = $r8;

        $r9 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mOriginalText>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mOriginalText> = $r9;

        $r10 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText> = $r10;

        $r11 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError> = $r11;

        $r12 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription> = $r12;

        $r13 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = $r13;

        $r14 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle> = $r14;

        $r15 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText> = $r15;

        $r16 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = $r16;

        r26 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r26 == null goto label01;

        virtualinvoke r26.<java.util.ArrayList: void clear()>();

     label01:
        r27 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r27 == null goto label03;

        $i10 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        if $i10 <= 0 goto label03;

        r28 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r28 != null goto label02;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>(r27);

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions> = $r25;

        goto label03;

     label02:
        $r24 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        virtualinvoke r28.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r24);

     label03:
        $i11 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i11;

        $i12 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = $i12;

        $i13 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = $i13;

        r29 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r29 == null goto label04;

        virtualinvoke r29.<android.util.LongArray: void clear()>();

     label04:
        r30 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r30 == null goto label06;

        $i9 = virtualinvoke r30.<android.util.LongArray: int size()>();

        if $i9 <= 0 goto label06;

        r31 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r31 != null goto label05;

        $r23 = virtualinvoke r30.<android.util.LongArray: android.util.LongArray clone()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds> = $r23;

        goto label06;

     label05:
        virtualinvoke r31.<android.util.LongArray: void addAll(android.util.LongArray)>(r30);

     label06:
        $i14 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = $i14;

        $i15 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = $i15;

        $i16 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = $i16;

        $i17 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = $i17;

        $i18 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent> = $i18;

        $r32 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys> = $r32;

        r33 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if r33 == null goto label07;

        $r21 = new android.os.Bundle;

        $r22 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        specialinvoke $r21.<android.os.Bundle: void <init>(android.os.Bundle)>($r22);

        r34 = $r21;

        goto label08;

     label07:
        r34 = null;

     label08:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras> = r34;

        if z0 == 0 goto label09;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void initPoolingInfos(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        goto label10;

     label09:
        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void initCopyInfos(android.view.accessibility.AccessibilityNodeInfo)>(r1);

     label10:
        r35 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        if r35 == null goto label11;

        $r19 = new android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo;

        $r20 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.util.ArrayMap access$300(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)>(r35);

        specialinvoke $r19.<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void <init>(android.util.ArrayMap,boolean)>($r20, 1);

        r36 = $r19;

        goto label12;

     label11:
        r36 = null;

     label12:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo> = r36;

        $r17 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild> = $r17;

        $r18 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent> = $r18;

        $l8 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l8;

        return;
    }

    private void initCopyInfos(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r5;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r1, r6, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r2, r8, r9;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r3, r10, r11;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo $r4, r12, r13;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r5 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r6 = r5.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if r6 != null goto label1;

        r7 = null;

        goto label2;

     label1:
        $r1 = new android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $i0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int access$500(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>(r6);

        $f0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float access$600(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>(r6);

        $f1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float access$700(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>(r6);

        $f2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float access$800(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>(r6);

        specialinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void <init>(int,float,float,float)>($i0, $f0, $f1, $f2);

        r7 = $r1;

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r7;

        r8 = r5.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if r8 != null goto label3;

        r9 = null;

        goto label4;

     label3:
        $r2 = new android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        $i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$900(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>(r8);

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$1000(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>(r8);

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean access$1100(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>(r8);

        $i3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int access$1200(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>(r8);

        specialinvoke $r2.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void <init>(int,int,boolean,int)>($i1, $i2, $z0, $i3);

        r9 = $r2;

     label4:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r9;

        r10 = r5.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if r10 != null goto label5;

        r11 = null;

        goto label6;

     label5:
        $r3 = new android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo;

        $i4 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1300(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1400(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1500(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int access$1600(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        $z1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean access$000(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        $z2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean access$1700(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r10);

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: void <init>(int,int,int,int,boolean,boolean)>($i4, $i5, $i6, $i7, $z1, $z2);

        r11 = $r3;

     label6:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r11;

        r12 = r5.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        if r12 != null goto label7;

        r13 = null;

        goto label8;

     label7:
        $r4 = new android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo;

        specialinvoke $r4.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void <init>(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo,android.view.accessibility.AccessibilityNodeInfo$1)>(r12, null);

        r13 = $r4;

     label8:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo> = r13;

        return;
    }

    private void initFromParcel(android.os.Parcel)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        android.os.Parcel r1;
        long l0, l1, $l4, $l20, $l30, $l31, $l32, $l33, $l34, $l36;
        int i2, i3, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i35, $i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, z38, $z39, $z40, z41, z42, z43, $z44;
        android.os.IBinder $r3, $r4;
        java.lang.Object $r5, $r11, $r24;
        android.util.Size $r6;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo $r8, $r9, r44, r45;
        float $f0, $f2, $f3, $f4;
        android.os.Parcelable$Creator $r10, $r23;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r12;
        java.lang.String $r13;
        java.lang.CharSequence $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r25;
        android.graphics.Rect $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        android.util.LongArray $r34, $r35;
        java.util.ArrayList r36;
        android.os.Bundle r37;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r38, r39;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r40, r41;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r42, r43;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.Parcel;

        l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        i38 = 0 + 1;

        $z0 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, 0);

        if $z0 == 0 goto label02;

        $i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i37 != 1 goto label01;

        z38 = 1;

        goto label03;

     label01:
        z38 = 0;

        goto label03;

     label02:
        $r2 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        z38 = $r2.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed>;

     label03:
        i39 = i38 + 1;

        $z39 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i38);

        if $z39 == 0 goto label04;

        $l36 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l36;

     label04:
        i40 = i39 + 1;

        $z1 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i39);

        if $z1 == 0 goto label05;

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = $i35;

     label05:
        i41 = i40 + 1;

        $z2 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i40);

        if $z2 == 0 goto label06;

        $l34 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l34;

     label06:
        i42 = i41 + 1;

        $z3 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i41);

        if $z3 == 0 goto label07;

        $l33 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l33;

     label07:
        i43 = i42 + 1;

        $z4 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i42);

        if $z4 == 0 goto label08;

        $l32 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l32;

     label08:
        i44 = i43 + 1;

        $z5 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i43);

        if $z5 == 0 goto label09;

        $l31 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = $l31;

     label09:
        i45 = i44 + 1;

        $z6 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i44);

        if $z6 == 0 goto label10;

        $l30 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = $l30;

     label10:
        i46 = i45 + 1;

        $z7 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i45);

        if $z7 == 0 goto label11;

        $i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = $i29;

     label11:
        i47 = i46 + 1;

        $z8 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i46);

        if $z8 == 0 goto label14;

        i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i48 > 0 goto label12;

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds> = null;

        goto label14;

     label12:
        $r34 = new android.util.LongArray;

        specialinvoke $r34.<android.util.LongArray: void <init>(int)>(i48);

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds> = $r34;

        i49 = 0;

     label13:
        if i49 >= i48 goto label14;

        l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r35 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        virtualinvoke $r35.<android.util.LongArray: void add(long)>(l1);

        i49 = i49 + 1;

        goto label13;

     label14:
        i50 = i47 + 1;

        $z40 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i47);

        if $z40 == 0 goto label15;

        $r30 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r30.<android.graphics.Rect: int top> = $i25;

        $r31 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r31.<android.graphics.Rect: int bottom> = $i26;

        $r32 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r32.<android.graphics.Rect: int left> = $i27;

        $r33 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r33.<android.graphics.Rect: int right> = $i28;

     label15:
        i51 = i50 + 1;

        $z9 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i50);

        if $z9 == 0 goto label16;

        $r26 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r26.<android.graphics.Rect: int top> = $i21;

        $r27 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r27.<android.graphics.Rect: int bottom> = $i22;

        $r28 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r28.<android.graphics.Rect: int left> = $i23;

        $r29 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r29.<android.graphics.Rect: int right> = $i24;

     label16:
        i52 = i51 + 1;

        $z10 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i51);

        if $z10 == 0 goto label18;

        $l20 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addStandardActions(long)>($l20);

        i53 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i54 = 0;

     label17:
        if i54 >= i53 goto label18;

        $r23 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r25 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r24;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addActionUnchecked(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r25);

        i54 = i54 + 1;

        goto label17;

     label18:
        i55 = i52 + 1;

        $z11 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i52);

        if $z11 == 0 goto label19;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = $i19;

     label19:
        i56 = i55 + 1;

        $z12 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i55);

        if $z12 == 0 goto label20;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = $i18;

     label20:
        i57 = i56 + 1;

        $z13 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i56);

        if $z13 == 0 goto label21;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i17;

     label21:
        i58 = i57 + 1;

        $z14 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i57);

        if $z14 == 0 goto label22;

        $r22 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = $r22;

     label22:
        i59 = i58 + 1;

        $z15 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i58);

        if $z15 == 0 goto label23;

        $r21 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = $r21;

     label23:
        i60 = i59 + 1;

        $z16 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i59);

        if $z16 == 0 goto label24;

        $r20 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = $r20;

     label24:
        i61 = i60 + 1;

        $z17 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i60);

        if $z17 == 0 goto label25;

        $r19 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText> = $r19;

     label25:
        i62 = i61 + 1;

        $z18 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i61);

        if $z18 == 0 goto label26;

        $r18 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError> = $r18;

     label26:
        i63 = i62 + 1;

        $z19 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i62);

        if $z19 == 0 goto label27;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription> = $r17;

     label27:
        i64 = i63 + 1;

        $z20 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i63);

        if $z20 == 0 goto label28;

        $r16 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = $r16;

     label28:
        i65 = i64 + 1;

        $z21 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i64);

        if $z21 == 0 goto label29;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle> = $r15;

     label29:
        i66 = i65 + 1;

        $z22 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i65);

        if $z22 == 0 goto label30;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText> = $r14;

     label30:
        i67 = i66 + 1;

        $z23 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i66);

        if $z23 == 0 goto label31;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = $r13;

     label31:
        i68 = i67 + 1;

        $z24 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i67);

        if $z24 == 0 goto label32;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = $i16;

     label32:
        i69 = i68 + 1;

        $z25 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i68);

        if $z25 == 0 goto label33;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = $i15;

     label33:
        i70 = i69 + 1;

        $z26 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i69);

        if $z26 == 0 goto label34;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = $i14;

     label34:
        i71 = i70 + 1;

        $z27 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i70);

        if $z27 == 0 goto label35;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = $i13;

     label35:
        i72 = i71 + 1;

        $z28 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i71);

        if $z28 == 0 goto label36;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent> = $i12;

     label36:
        i73 = i72 + 1;

        $z29 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i72);

        if $z29 == 0 goto label37;

        r36 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        goto label38;

     label37:
        r36 = null;

     label38:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys> = r36;

        i74 = i73 + 1;

        $z30 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i73);

        if $z30 == 0 goto label39;

        r37 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        goto label40;

     label39:
        r37 = null;

     label40:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras> = r37;

        r38 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if r38 == null goto label41;

        virtualinvoke r38.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void recycle()>();

     label41:
        i75 = i74 + 1;

        $z31 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i74);

        if $z31 == 0 goto label42;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        $f3 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        $f4 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r39 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float)>($i11, $f2, $f3, $f4);

        goto label43;

     label42:
        r39 = null;

     label43:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r39;

        r40 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if r40 == null goto label44;

        virtualinvoke r40.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void recycle()>();

     label44:
        i76 = i75 + 1;

        $z32 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i75);

        if $z32 == 0 goto label47;

        i77 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i78 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i9 != 1 goto label45;

        z41 = 1;

        goto label46;

     label45:
        z41 = 0;

     label46:
        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r41 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int)>(i77, i78, z41, $i10);

        goto label48;

     label47:
        r41 = null;

     label48:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r41;

        r42 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if r42 == null goto label49;

        virtualinvoke r42.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: void recycle()>();

     label49:
        i79 = i76 + 1;

        $z33 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i76);

        if $z33 == 0 goto label54;

        i80 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i81 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i7 != 1 goto label50;

        z42 = 1;

        goto label51;

     label50:
        z42 = 0;

     label51:
        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i8 != 1 goto label52;

        z43 = 1;

        goto label53;

     label52:
        z43 = 0;

     label53:
        r43 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>(i80, i2, i3, i81, z42, z43);

        goto label55;

     label54:
        r43 = null;

     label55:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r43;

        i82 = i79 + 1;

        $z34 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i79);

        if $z34 == 0 goto label56;

        $r10 = <android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r12 = (android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo) $r11;

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo> = $r12;

     label56:
        i83 = i82 + 1;

        $z35 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i82);

        if $z35 == 0 goto label58;

        r44 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        if r44 == null goto label57;

        virtualinvoke r44.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void recycle()>();

     label57:
        r45 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo obtain()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo> = r45;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(null);

        $r6 = (android.util.Size) $r5;

        staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.util.Size access$1902(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo,android.util.Size)>(r45, $r6);

        $r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: float access$2002(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo,float)>($r8, $f0);

        $r9 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: int access$2102(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo,int)>($r9, $i5);

     label58:
        i84 = i83 + 1;

        $z44 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i83);

        if $z44 == 0 goto label59;

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild> = $r4;

     label59:
        i85 = i84 + 1;

        $z36 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i84);

        if $z36 == 0 goto label60;

        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent> = $r3;

     label60:
        $z37 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l0, i85);

        if $z37 == 0 goto label61;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l4;

     label61:
        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = z38;

        return;
    }

    private void initPoolingInfos(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r2, r3, r4;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r5, r6, r7;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r8, r9, r10;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo r11, r12, r13;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if r2 == null goto label01;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void recycle()>();

     label01:
        r3 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if r3 == null goto label02;

        r4 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>(r3);

        goto label03;

     label02:
        r4 = null;

     label03:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r4;

        r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if r5 == null goto label04;

        virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void recycle()>();

     label04:
        r6 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if r6 == null goto label05;

        r7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>(r6);

        goto label06;

     label05:
        r7 = null;

     label06:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r7;

        r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if r8 == null goto label07;

        virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: void recycle()>();

     label07:
        r9 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if r9 == null goto label08;

        r10 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r9);

        goto label09;

     label08:
        r10 = null;

     label09:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r10;

        r11 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        if r11 == null goto label10;

        virtualinvoke r11.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void recycle()>();

     label10:
        r12 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        if r12 == null goto label11;

        r13 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo access$400(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo)>(r12);

        goto label12;

     label11:
        r13 = null;

     label12:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo> = r13;

        return;
    }

    private static boolean isDefaultStandardAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r0;
        long $l0;
        byte $b1;
        java.lang.CharSequence $r1;
        boolean $z0, z1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: long mSerializationFlag>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: java.lang.CharSequence getLabel()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static long makeNodeId(int, int)
    {
        int i0, i1;
        long $l2, $l3, $l4, $l5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = (long) i1;

        $l4 = $l2 << 32;

        $l3 = (long) i0;

        $l5 = $l4 | $l3;

        return $l5;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain()
    {
        java.util.concurrent.atomic.AtomicInteger r0;
        android.util.Pools$SynchronizedPool $r1;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3, r4;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool>;

        $r2 = virtualinvoke $r1.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r4 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        r0 = <android.view.accessibility.AccessibilityNodeInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse>;

        if r0 == null goto label1;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label1:
        if r4 == null goto label2;

        goto label3;

     label2:
        $r3 = new android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: void <init>()>();

        r4 = $r3;

     label3:
        return r4;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @parameter0: android.view.View;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>(r0);

        return r1;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>(r0, i0);

        return r1;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        specialinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo,boolean)>(r0, 1);

        return r1;
    }

    private java.lang.CharSequence replaceClickableSpan(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.text.style.ClickableSpan[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        android.text.Spanned $r3;
        java.lang.Object[] $r4;
        android.text.SpannableStringBuilder $r5;
        boolean $z0, $z1, $z2;
        android.text.style.AccessibilityClickableSpan $r6;
        android.text.style.AccessibilityURLSpan $r7;
        android.text.style.URLSpan $r8;
        java.lang.CharSequence r9;
        android.text.style.ClickableSpan r10;
        android.text.ParcelableSpan r11;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r9 := @parameter0: java.lang.CharSequence;

        $r3 = (android.text.Spanned) r9;

        $i3 = interfaceinvoke r9.<java.lang.CharSequence: int length()>();

        $r4 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i3, class "Landroid/text/style/ClickableSpan;");

        r1 = (android.text.style.ClickableSpan[]) $r4;

        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r9);

        $i4 = lengthof r1;

        if $i4 != 0 goto label1;

        return r9;

     label1:
        i7 = 0;

     label2:
        $i5 = lengthof r1;

        if i7 >= $i5 goto label6;

        r10 = r1[i7];

        $z0 = r10 instanceof android.text.style.AccessibilityClickableSpan;

        if $z0 != 0 goto label6;

        $z1 = r10 instanceof android.text.style.AccessibilityURLSpan;

        if $z1 == 0 goto label3;

        goto label6;

     label3:
        i0 = interfaceinvoke $r5.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r10);

        i1 = interfaceinvoke $r5.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r10);

        i2 = interfaceinvoke $r5.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r10);

        interfaceinvoke $r5.<android.text.Spannable: void removeSpan(java.lang.Object)>(r10);

        $z2 = r10 instanceof android.text.style.URLSpan;

        if $z2 == 0 goto label4;

        $r7 = new android.text.style.AccessibilityURLSpan;

        $r8 = (android.text.style.URLSpan) r10;

        specialinvoke $r7.<android.text.style.AccessibilityURLSpan: void <init>(android.text.style.URLSpan)>($r8);

        r11 = $r7;

        goto label5;

     label4:
        $r6 = new android.text.style.AccessibilityClickableSpan;

        $i6 = virtualinvoke r10.<android.text.style.ClickableSpan: int getId()>();

        specialinvoke $r6.<android.text.style.AccessibilityClickableSpan: void <init>(int)>($i6);

        r11 = $r6;

     label5:
        interfaceinvoke $r5.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r11, i0, i1, i2);

        i7 = i7 + 1;

        goto label2;

     label6:
        return $r5;
    }

    private java.lang.CharSequence replaceReplacementSpan(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.text.style.ReplacementSpan[] r1;
        android.text.style.ReplacementSpan r3;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        android.text.Spanned $r4;
        java.lang.Object[] $r5;
        android.text.SpannableStringBuilder $r6;
        boolean $z0;
        android.text.style.AccessibilityReplacementSpan $r7;
        java.lang.CharSequence r8, r9;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r8 := @parameter0: java.lang.CharSequence;

        $r4 = (android.text.Spanned) r8;

        $i3 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke $r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i3, class "Landroid/text/style/ReplacementSpan;");

        r1 = (android.text.style.ReplacementSpan[]) $r5;

        $r6 = new android.text.SpannableStringBuilder;

        specialinvoke $r6.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r8);

        $i4 = lengthof r1;

        if $i4 != 0 goto label1;

        return r8;

     label1:
        i6 = 0;

     label2:
        $i5 = lengthof r1;

        if i6 >= $i5 goto label6;

        r3 = r1[i6];

        r9 = virtualinvoke r3.<android.text.style.ReplacementSpan: java.lang.CharSequence getContentDescription()>();

        $z0 = r3 instanceof android.text.style.AccessibilityReplacementSpan;

        if $z0 == 0 goto label3;

        goto label6;

     label3:
        if r9 != null goto label4;

        goto label5;

     label4:
        i0 = virtualinvoke $r6.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r3);

        i1 = virtualinvoke $r6.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r3);

        i2 = virtualinvoke $r6.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>(r3);

        virtualinvoke $r6.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>(r3);

        $r7 = new android.text.style.AccessibilityReplacementSpan;

        specialinvoke $r7.<android.text.style.AccessibilityReplacementSpan: void <init>(java.lang.CharSequence)>(r9);

        virtualinvoke $r6.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r7, i0, i1, i2);

     label5:
        i6 = i6 + 1;

        goto label2;

     label6:
        return $r6;
    }

    private void setBooleanProperty(int, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if z0 == 0 goto label1;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i4 = $i3 | i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i4;

        goto label2;

     label1:
        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i2 = $i1 & i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i2;

     label2:
        return;
    }

    public static void setNumInstancesInUseCounter(java.util.concurrent.atomic.AtomicInteger)
    {
        java.util.concurrent.atomic.AtomicInteger r0;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        <android.view.accessibility.AccessibilityNodeInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse> = r0;

        return;
    }

    public void addAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        long $l2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $i1 = -16777216 & i0;

        if $i1 != 0 goto label1;

        $l2 = (long) i0;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addStandardActions(long)>($l2);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Action is not a combination of the standard actions: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addActionUnchecked(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r1);

        return;
    }

    public void addChild(android.os.IBinder)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.IBinder r1;
        android.util.LongArray $r2, $r3, $r4, $r5;
        long $l0, $l2;
        int $i1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if $r2 != null goto label2;

        $r5 = new android.util.LongArray;

        specialinvoke $r5.<android.util.LongArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds> = $r5;

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild> = r1;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long LEASHED_NODE_ID>;

        $i1 = virtualinvoke $r3.<android.util.LongArray: int indexOf(long)>($l0);

        if $i1 < 0 goto label3;

        return;

     label3:
        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $l2 = <android.view.accessibility.AccessibilityNodeInfo: long LEASHED_NODE_ID>;

        virtualinvoke $r4.<android.util.LongArray: void add(long)>($l2);

        return;
    }

    public void addChild(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addChildInternal(android.view.View,int,boolean)>(r1, -1, 1);

        return;
    }

    public void addChild(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addChildInternal(android.view.View,int,boolean)>(r1, i0, 1);

        return;
    }

    public void addChildUnchecked(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addChildInternal(android.view.View,int,boolean)>(r1, -1, 0);

        return;
    }

    public boolean canOpenPopup()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(8192);

        return $z0;
    }

    public int describeContents()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        return 0;
    }

    protected void enforceNotSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot perform this action on a sealed instance.");

        throw $r1;
    }

    protected void enforceSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot perform this action on a not sealed instance.");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r4;
        java.lang.Class $r1, $r2;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;
        java.lang.Object r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r3 := @parameter0: java.lang.Object;

        if r0 != r3 goto label1;

        return 1;

     label1:
        if r3 != null goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label3;

        return 0;

     label3:
        r4 = (android.view.accessibility.AccessibilityNodeInfo) r3;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $l0 = r4.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $i3 = r4.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        if $i4 == $i3 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;
        long $l0, $l3;
        int $i1, $i2, $i4, $i5;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r2;
        java.util.List $r3, $r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i2, $i1, $l0);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>($i5, $i4, $l3, r1);

        return $r3;
    }

    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;
        long $l0, $l3;
        int $i1, $i2, $i4, $i5;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r2;
        java.util.List $r3, $r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i2, $i1, $l0);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByViewId(int,int,long,java.lang.String)>($i5, $i4, $l3, r1);

        return $r3;
    }

    public android.view.accessibility.AccessibilityNodeInfo findFocus(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        int i0, $i2, $i3, $i5, $i6;
        long $l1, $l4;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusType(int)>(i0);

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i3, $i2, $l1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l4 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>($i6, $i5, $l4, i0);

        return $r2;
    }

    public android.view.accessibility.AccessibilityNodeInfo focusSearch(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        int i0, $i2, $i3, $i5, $i6;
        long $l1, $l4;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusDirection(int)>(i0);

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i3, $i2, $l1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l4 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo focusSearch(int,int,long,int)>($i6, $i5, $l4, i0);

        return $r2;
    }

    public java.util.List getActionList()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $r2 = staticinvoke <com.android.internal.util.CollectionUtils: java.util.List emptyIfNull(java.util.List)>($r1);

        return $r2;
    }

    public int getActions()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.ArrayList r1, $r2;
        int i0, i1, i2, i3, i4;
        java.lang.Object $r3;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i2 = 0;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r3;

        i1 = virtualinvoke $r4.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>();

        i4 = i2;

        if i1 > 2097152 goto label3;

        i4 = i2 | i1;

     label3:
        i3 = i3 + 1;

        i2 = i4;

        goto label2;

     label4:
        return i2;
    }

    public java.util.List getAvailableExtraData()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.ArrayList r1;
        java.util.List $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys>;

        if r1 == null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r3;

     label1:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;
    }

    public void getBoundsInParent(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i3 = $r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i0 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public android.graphics.Rect getBoundsInScreen()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        return $r1;
    }

    public void getBoundsInScreen(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i3 = $r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i0 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo getChild(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r5, $r6;
        int i0, $i3, $i4, $i5, $i6, $i10;
        long l1, $l2, $l7, $l9;
        android.view.accessibility.AccessibilityInteractionClient r1;
        android.os.IBinder r2;
        android.util.LongArray $r3, $r4;
        boolean $z0;
        byte $b8;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if $r3 != null goto label1;

        return null;

     label1:
        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i4, $i3, $l2);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        l1 = virtualinvoke $r4.<android.util.LongArray: long get(int)>(i0);

        r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        if r2 == null goto label3;

        $l7 = <android.view.accessibility.AccessibilityNodeInfo: long LEASHED_NODE_ID>;

        $b8 = l1 cmp $l7;

        if $b8 != 0 goto label3;

        $i10 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $l9 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        $r6 = virtualinvoke r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,android.os.IBinder,long,boolean,int,android.os.Bundle)>($i10, r2, $l9, 0, 4, null);

        return $r6;

     label3:
        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>($i6, $i5, l1, 0, 4, null);

        return $r5;
    }

    public int getChildCount()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.LongArray r1;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = virtualinvoke r1.<android.util.LongArray: int size()>();

     label2:
        return i0;
    }

    public long getChildId(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        android.util.LongArray r1;
        java.lang.IndexOutOfBoundsException $r2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r1 == null goto label1;

        $l1 = virtualinvoke r1.<android.util.LongArray: long get(int)>(i0);

        return $l1;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public android.util.LongArray getChildNodeIds()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.LongArray $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        return $r1;
    }

    public java.lang.CharSequence getClassName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        return $r1;
    }

    public int getConnectionId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        return $i0;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        return $r1;
    }

    public int getDrawingOrder()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent>;

        return $i0;
    }

    public java.lang.CharSequence getError()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Bundle $r1, $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras> = $r3;

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        return $r2;
    }

    public java.lang.CharSequence getHintText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText>;

        return $r1;
    }

    public int getInputType()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        return $i0;
    }

    public android.view.accessibility.AccessibilityNodeInfo getLabelFor()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>($i2, $i1, $l0);

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo getLabeledBy()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>($i2, $i1, $l0);

        return $r1;
    }

    public android.os.IBinder getLeashedParent()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        return $r1;
    }

    public long getLeashedParentNodeId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        return $l0;
    }

    public int getLiveRegion()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        return $i0;
    }

    public int getMaxTextLength()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        return $i0;
    }

    public int getMovementGranularities()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        return $i0;
    }

    public java.lang.CharSequence getOriginalText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mOriginalText>;

        return $r1;
    }

    public java.lang.CharSequence getPackageName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        return $r1;
    }

    public java.lang.CharSequence getPaneTitle()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo getParent()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2, $r3;
        android.os.IBinder r1;
        long l0, $l1, $l4;
        int $i2, $i3, $i6;
        byte $b5;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        if r1 == null goto label1;

        l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        $l4 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        $b5 = l0 cmp $l4;

        if $b5 == 0 goto label1;

        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,android.os.IBinder,long)>($i6, r1, l0);

        return $r3;

     label1:
        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>($i3, $i2, $l1);

        return $r2;
    }

    public long getParentNodeId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        return $l0;
    }

    public android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        return $r1;
    }

    public long getSourceNodeId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        return $l0;
    }

    public java.lang.CharSequence getStateDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        return $r1;
    }

    public java.lang.CharSequence getText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        java.lang.CharSequence $r1, $r3, r7;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object[] $r2, $r4;
        android.text.style.AccessibilityURLSpan $r5;
        android.text.style.AccessibilityClickableSpan $r6;
        android.text.Spanned r8;
        android.text.style.AccessibilityClickableSpan[] r9;
        android.text.style.AccessibilityURLSpan[] r10;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r7 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        $z0 = r7 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        r8 = (android.text.Spanned) r7;

        $i0 = interfaceinvoke r7.<java.lang.CharSequence: int length()>();

        $r2 = interfaceinvoke r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/style/AccessibilityClickableSpan;");

        r9 = (android.text.style.AccessibilityClickableSpan[]) $r2;

        i4 = 0;

     label1:
        $i1 = lengthof r9;

        if i4 >= $i1 goto label2;

        $r6 = r9[i4];

        virtualinvoke $r6.<android.text.style.AccessibilityClickableSpan: void copyConnectionDataFrom(android.view.accessibility.AccessibilityNodeInfo)>(r0);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        $r4 = interfaceinvoke r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "Landroid/text/style/AccessibilityURLSpan;");

        r10 = (android.text.style.AccessibilityURLSpan[]) $r4;

        i5 = 0;

     label3:
        $i3 = lengthof r10;

        if i5 >= $i3 goto label4;

        $r5 = r10[i5];

        virtualinvoke $r5.<android.text.style.AccessibilityURLSpan: void copyConnectionDataFrom(android.view.accessibility.AccessibilityNodeInfo)>(r0);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        return $r1;
    }

    public int getTextSelectionEnd()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        return $i0;
    }

    public int getTextSelectionStart()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        return $i0;
    }

    public java.lang.CharSequence getTooltipText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo getTouchDelegateInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        if r1 == null goto label1;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        staticinvoke <android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void access$100(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo,int)>(r1, $i0);

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        staticinvoke <android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void access$200(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo,int)>($r3, $i1);

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        return $r2;
    }

    public android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>($i2, $i1, $l0);

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getNodeForAccessibilityId(int,int,long)>($i2, $i1, $l0);

        return $r1;
    }

    public java.lang.String getViewIdResourceName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityWindowInfo getWindow()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        android.view.accessibility.AccessibilityWindowInfo $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i2, $i1, $l0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>($i4, $i3);

        return $r2;
    }

    public int getWindowId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        return $i0;
    }

    public boolean hasExtras()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Bundle $r1;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int hashCode()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0, $l4;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i1 = 1 * 31;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>($l0);

        $i3 = $i1 + $i2;

        $i5 = $i3 * 31;

        $l4 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l4);

        $i7 = $i5 + $i6;

        $i9 = $i7 * 31;

        $i8 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $i10 = $i9 + $i8;

        return $i10;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(1024);

        return $z0;
    }

    public boolean isCheckable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(1);

        return $z0;
    }

    public boolean isChecked()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(2);

        return $z0;
    }

    public boolean isClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(32);

        return $z0;
    }

    public boolean isContentInvalid()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(65536);

        return $z0;
    }

    public boolean isContextClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(131072);

        return $z0;
    }

    public boolean isDismissable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(16384);

        return $z0;
    }

    public boolean isEditable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(4096);

        return $z0;
    }

    public boolean isEnabled()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(128);

        return $z0;
    }

    public boolean isFocusable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(4);

        return $z0;
    }

    public boolean isFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(8);

        return $z0;
    }

    public boolean isHeading()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0, $z1, z2;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(2097152);

        z2 = 1;

        if z0 == 0 goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()>();

        if r1 == null goto label2;

        $z1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean access$000(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>(r1);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    public boolean isImportantForAccessibility()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(262144);

        return $z0;
    }

    public boolean isLongClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(64);

        return $z0;
    }

    public boolean isMultiLine()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(32768);

        return $z0;
    }

    public boolean isPassword()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(256);

        return $z0;
    }

    public boolean isScreenReaderFocusable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(524288);

        return $z0;
    }

    public boolean isScrollable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(512);

        return $z0;
    }

    public boolean isSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed>;

        return $z0;
    }

    public boolean isSelected()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(16);

        return $z0;
    }

    public boolean isShowingHintText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(1048576);

        return $z0;
    }

    public boolean isTextEntryKey()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(4194304);

        return $z0;
    }

    public boolean isVisibleToUser()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(2048);

        return $z0;
    }

    public boolean performAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i2, $i3, $i5, $i6;
        android.view.accessibility.AccessibilityInteractionClient r1;
        long $l1, $l4;
        boolean $z0, $z1;
        android.os.Bundle $r2, r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i3, $i2, $l1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r2 == null goto label2;

        r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        goto label3;

     label2:
        r3 = null;

     label3:
        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l4 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = virtualinvoke r1.<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>($i6, $i5, $l4, i0, r3);

        return $z1;
    }

    public boolean performAction(int, android.os.Bundle)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i2, $i3, $i5, $i6;
        android.os.Bundle r1;
        long $l1, $l4;
        boolean $z0, $z1;
        android.view.accessibility.AccessibilityInteractionClient $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i3, $i2, $l1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l4 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>($i6, $i5, $l4, i0, r1);

        return $z1;
    }

    public void recycle()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.concurrent.atomic.AtomicInteger r1;
        android.util.Pools$SynchronizedPool $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void clear()>();

        $r2 = <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r2.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        r1 = <android.view.accessibility.AccessibilityNodeInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse>;

        if r1 == null goto label1;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

     label1:
        return;
    }

    public boolean refresh()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(android.os.Bundle,boolean)>(null, 1);

        return $z0;
    }

    public boolean refresh(android.os.Bundle, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r3;
        boolean z0, $z1;
        long $l0, $l3;
        int $i1, $i2, $i4, $i5;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        android.os.Bundle r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter0: android.os.Bundle;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(int,int,long)>($i2, $i1, $l0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i5 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>($i5, $i4, $l3, z0, 0, r2);

        if r3 != null goto label2;

        return 0;

     label2:
        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo,boolean)>(r3, 1);

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        return 1;
    }

    public boolean refreshWithExtraData(java.lang.String, android.os.Bundle)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.view.accessibility.AccessibilityNodeInfo.extra_data_requested", r1);

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(android.os.Bundle,boolean)>(r2, 1);

        return $z0;
    }

    public void removeAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingleton(int)>(i0);

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r1);

        return;
    }

    public boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r1;
        java.util.ArrayList r2;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r2 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;

     label2:
        return 0;
    }

    public void removeAllActions()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.ArrayList r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r1 == null goto label1;

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

     label1:
        return;
    }

    public boolean removeChild(android.os.IBinder)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.IBinder r1, r2;
        int i0;
        android.util.LongArray $r3, $r4, $r5;
        boolean $z0;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if $r3 == null goto label4;

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        if r2 != null goto label1;

        goto label4;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long LEASHED_NODE_ID>;

        i0 = virtualinvoke $r4.<android.util.LongArray: int indexOf(long)>($l1);

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild> = null;

        if i0 >= 0 goto label3;

        return 0;

     label3:
        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        virtualinvoke $r5.<android.util.LongArray: void remove(int)>(i0);

        return 1;

     label4:
        return 0;
    }

    public boolean removeChild(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>(r1, -1);

        return $z0;
    }

    public boolean removeChild(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        android.util.LongArray r2;
        long $l0;
        int i1, i2, i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r2 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label3;

     label2:
        i2 = 2147483647;

     label3:
        $l0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i1);

        i3 = virtualinvoke r2.<android.util.LongArray: int indexOf(long)>($l0);

        if i3 >= 0 goto label4;

        return 0;

     label4:
        virtualinvoke r2.<android.util.LongArray: void remove(int)>(i3);

        return 1;
    }

    public void setAccessibilityFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(1024, z0);

        return;
    }

    public void setAvailableExtraData(java.util.List)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys> = $r2;

        return;
    }

    public void setBoundsInParent(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setBoundsInScreen(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setCanOpenPopup(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(8192, z0);

        return;
    }

    public void setCheckable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(1, z0);

        return;
    }

    public void setChecked(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(2, z0);

        return;
    }

    public void setClassName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = r1;

        return;
    }

    public void setClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(32, z0);

        return;
    }

    public void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r1;

        return;
    }

    public void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r1;

        return;
    }

    public void setConnectionId(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = i0;

        return;
    }

    public void setContentDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = r2;

        return;
    }

    public void setContentInvalid(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(65536, z0);

        return;
    }

    public void setContextClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(131072, z0);

        return;
    }

    public void setDismissable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(16384, z0);

        return;
    }

    public void setDrawingOrder(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent> = i0;

        return;
    }

    public void setEditable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(4096, z0);

        return;
    }

    public void setEnabled(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(128, z0);

        return;
    }

    public void setError(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError> = r2;

        return;
    }

    public void setExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo> = r1;

        return;
    }

    public void setFocusable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(4, z0);

        return;
    }

    public void setFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(8, z0);

        return;
    }

    public void setHeading(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(2097152, z0);

        return;
    }

    public void setHintText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText> = r2;

        return;
    }

    public void setImportantForAccessibility(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(262144, z0);

        return;
    }

    public void setInputType(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = i0;

        return;
    }

    public void setLabelFor(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>(r1, -1);

        return;
    }

    public void setLabelFor(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label2;

     label1:
        i2 = 2147483647;

     label2:
        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l1;

        return;
    }

    public void setLabeledBy(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>(r1, -1);

        return;
    }

    public void setLabeledBy(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label2;

     label1:
        i2 = 2147483647;

     label2:
        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l1;

        return;
    }

    public void setLeashedParent(android.os.IBinder, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.IBinder r1;
        int i0;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent> = r1;

        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i0, -1);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId> = $l1;

        return;
    }

    public void setLiveRegion(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = i0;

        return;
    }

    public void setLongClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(64, z0);

        return;
    }

    public void setMaxTextLength(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength> = i0;

        return;
    }

    public void setMovementGranularities(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = i0;

        return;
    }

    public void setMultiLine(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(32768, z0);

        return;
    }

    public void setPackageName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = r1;

        return;
    }

    public void setPaneTitle(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle> = r2;

        return;
    }

    public void setParent(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>(r1, -1);

        return;
    }

    public void setParent(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label2;

     label1:
        i2 = 2147483647;

     label2:
        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l1;

        return;
    }

    public void setPassword(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(256, z0);

        return;
    }

    public void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r1;

        return;
    }

    public void setScreenReaderFocusable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(524288, z0);

        return;
    }

    public void setScrollable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(512, z0);

        return;
    }

    public void setSealed(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = z0;

        return;
    }

    public void setSelected(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(16, z0);

        return;
    }

    public void setShowingHintText(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(1048576, z0);

        return;
    }

    public void setSource(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>(r1, -1);

        return;
    }

    public void setSource(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i3, i4;
        long $l2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i3 = virtualinvoke r1.<android.view.View: int getAccessibilityWindowId()>();

        goto label2;

     label1:
        i3 = 2147483647;

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = i3;

        i4 = 2147483647;

        if r1 == null goto label3;

        i4 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label3:
        $l2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i4, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l2;

        return;
    }

    public void setSourceNodeId(long, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long l0;
        int i1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = l0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = i1;

        return;
    }

    public void setStateDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription> = r2;

        return;
    }

    public void setText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        int $i0;
        java.lang.CharSequence $r1, $r2, r3, r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r3 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mOriginalText> = r3;

        $z0 = r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence replaceClickableSpan(java.lang.CharSequence)>(r3);

        $r2 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence replaceReplacementSpan(java.lang.CharSequence)>($r1);

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = $r2;

        return;

     label1:
        if r3 != null goto label2;

        r4 = null;

        goto label3;

     label2:
        $i0 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        r4 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label3:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = r4;

        return;
    }

    public void setTextEntryKey(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(4194304, z0);

        return;
    }

    public void setTextSelection(int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, i1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = i1;

        return;
    }

    public void setTooltipText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;
        java.lang.CharSequence r1, r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

     label2:
        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText> = r2;

        return;
    }

    public void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo> = r1;

        return;
    }

    public void setTraversalAfter(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>(r1, -1);

        return;
    }

    public void setTraversalAfter(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label2;

     label1:
        i2 = 2147483647;

     label2:
        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter> = $l1;

        return;
    }

    public void setTraversalBefore(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>(r1, -1);

        return;
    }

    public void setTraversalBefore(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i2;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        goto label2;

     label1:
        i2 = 2147483647;

     label2:
        $l1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore> = $l1;

        return;
    }

    public void setViewIdResourceName(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = r1;

        return;
    }

    public void setVisibleToUser(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(2048, z0);

        return;
    }

    public java.lang.String toString()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.LongArray r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r82, $r85, $r97, $r99;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        long $l0, $l2, $l3, $l5, $l6, $l8, $l9, $l10, $l11, $l12;
        int $i1, $i4, $i7, $i13, $i14, i15, i16, i17, i18, $i19;
        android.graphics.Rect $r88, $r89;
        java.lang.CharSequence $r90, $r91, $r92, $r93, $r94, $r95, $r96;
        java.util.ArrayList $r98;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $z0 = <android.view.accessibility.AccessibilityNodeInfo: boolean DEBUG>;

        if $z0 == 0 goto label7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; sourceNodeId: 0x");

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r57 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; windowId: 0x");

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = (long) $i1;

        $r60 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; accessibilityViewId: 0x");

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i4 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>($l3);

        $l5 = (long) $i4;

        $r63 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; virtualDescendantId: 0x");

        $l6 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l6);

        $l8 = (long) $i7;

        $r66 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; mParentNodeId: 0x");

        $l9 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $r69 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; traversalBefore: 0x");

        $l10 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        $r72 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; traversalAfter: 0x");

        $l11 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        $r75 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        i15 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; MovementGranularities: [");

     label1:
        if i15 == 0 goto label3;

        $i14 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i15);

        i16 = 1 << $i14;

        i15 = i15 & i16;

        $r85 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String getMovementGranularitySymbolicName(int)>(i16);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        if i15 == 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        goto label1;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; childAccessibilityIds: [");

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r2 == null goto label6;

        i17 = 0;

        i18 = virtualinvoke r2.<android.util.LongArray: int size()>();

     label4:
        if i17 >= i18 goto label6;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $l12 = virtualinvoke r2.<android.util.LongArray: long get(int)>(i17);

        $r82 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $i13 = i18 - 1;

        if i17 >= $i13 goto label5;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        i17 = i17 + 1;

        goto label4;

     label6:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label7:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInParent: ");

        $r88 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInScreen: ");

        $r89 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; packageName: ");

        $r90 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r90);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; className: ");

        $r91 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r91);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; text: ");

        $r92 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r92);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; error: ");

        $r93 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r93);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; maxTextLength: ");

        $i19 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; stateDescription: ");

        $r94 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r94);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; contentDescription: ");

        $r95 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r95);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; tooltipText: ");

        $r96 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r96);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; viewIdResName: ");

        $r97 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checkable: ");

        $z1 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checked: ");

        $z2 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focusable: ");

        $z3 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focused: ");

        $z4 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; selected: ");

        $z5 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; clickable: ");

        $z6 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; longClickable: ");

        $z7 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; contextClickable: ");

        $z8 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; enabled: ");

        $z9 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; password: ");

        $z10 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scrollable: ");

        $z11 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; importantForAccessibility: ");

        $z12 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; visible: ");

        $z13 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; actions: ");

        $r98 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r99 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r99;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void writeToParcelNoRecycle(android.os.Parcel,int)>(r1, i0);

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        return;
    }

    public void writeToParcelNoRecycle(android.os.Parcel, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r16, $r19, $r22, $r23, $r24, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r56, $r57, $r58, $r59, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87;
        int i0, i1, $i5, $i6, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i72, $i78, i121, i123, i125, i127, i129, i131, i133, i135, i137, i139, i141, i143, i145, i147, i149, i151, i153, i155, i157, i159, i161, i163, i165, i167, i169, i171, i173, i175, i177, i179, i181, i183, i185, i187, i189, i191, i193, i195, i197, i199, i202, i203, i204, i205, i206, i207, i208, i209, i210, i211, i212, i213, i214, i215, i216, i217, i219, i220, i221, i222, i223, i224, i225, i226, i227, i228, i229, i230, i231, i232, i233, i234, i235, i236, i237, i238, i239, i240, i241, i242, i243, i244, i245, i246, i247, i248, i249, i250, i251, i252;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71;
        long $l2, $l3, $l7, $l8, $l10, $l11, $l13, $l14, $l16, $l17, $l19, $l20, $l40, $l41, $l44, $l62, $l71, $l73, $l74, $l75, $l76, $l77, $l79, $l80, $l81, $l82, $l83, $l84, $l85, $l86, $l87, $l88, $l89, $l90, $l91, $l92, $l93, $l94, $l95, $l96, $l97, $l98, $l99, $l100, $l101, $l102, $l103, $l104, $l105, $l106, $l107, $l108, $l109, $l110, $l111, $l112, $l113, $l114, $l115, $l116, $l117, $l118, $l119, $l120, l122, l124, l126, l128, l130, l132, l134, l136, l138, l140, l142, l144, l146, l148, l150, l152, l154, l156, l158, l160, l162, l164, l166, l168, l170, l172, l174, l176, l178, l180, l182, l184, l186, l188, l190, l192, l194, l196, l198, l200, l201, l218;
        byte $b4, $b9, $b12, $b15, $b18, $b21, $b42;
        android.util.LongArray $r11, $r12, r142;
        android.graphics.Rect $r14, $r15, $r17, $r18, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140;
        java.util.ArrayList $r20, $r21, $r61, $r62, $r117, $r128, $r129, $r131, r143;
        java.lang.CharSequence $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127;
        java.lang.String $r53, $r54, $r94, $r118;
        android.os.Bundle $r64, $r65, $r116;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r67, $r68, $r112, $r113, $r114, $r115;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r70, $r71, $r108, $r109, $r110, $r111;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r73, $r74, $r102, $r103, $r104, $r105, $r106, $r107;
        android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo $r76, $r77, $r101;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo $r79, $r80, $r97, $r99, $r100;
        android.os.IBinder $r82, $r83, $r85, $r86, $r95, $r96;
        java.lang.StringBuilder $r88;
        java.lang.IllegalStateException $r93;
        android.util.Size $r98;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r130, $r132;
        android.os.Parcel r141;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r144, r145;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r141 := @parameter0: android.os.Parcel;

        i121 := @parameter1: int;

        l122 = 0L;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        $r1 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $z1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 == $z1 goto label01;

        $l120 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(0);

        l122 = 0L | $l120;

     label01:
        i123 = 0 + 1;

        l124 = l122;

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l2 = $r2.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $b4 = $l3 cmp $l2;

        if $b4 == 0 goto label02;

        $l119 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i123);

        l124 = l122 | $l119;

     label02:
        i125 = i123 + 1;

        l126 = l124;

        $i6 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $r3 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i5 = $r3.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        if $i6 == $i5 goto label03;

        $l118 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i125);

        l126 = l124 | $l118;

     label03:
        i127 = i125 + 1;

        l128 = l126;

        $l8 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $r4 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l7 = $r4.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $b9 = $l8 cmp $l7;

        if $b9 == 0 goto label04;

        $l117 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i127);

        l128 = l126 | $l117;

     label04:
        i129 = i127 + 1;

        l130 = l128;

        $l11 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        $r5 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l10 = $r5.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        $b12 = $l11 cmp $l10;

        if $b12 == 0 goto label05;

        $l116 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i129);

        l130 = l128 | $l116;

     label05:
        i131 = i129 + 1;

        l132 = l130;

        $l14 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        $r6 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l13 = $r6.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        $b15 = $l14 cmp $l13;

        if $b15 == 0 goto label06;

        $l115 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i131);

        l132 = l130 | $l115;

     label06:
        i133 = i131 + 1;

        l134 = l132;

        $l17 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        $r7 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l16 = $r7.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        $b18 = $l17 cmp $l16;

        if $b18 == 0 goto label07;

        $l114 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i133);

        l134 = l132 | $l114;

     label07:
        i135 = i133 + 1;

        l136 = l134;

        $l20 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        $r8 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l19 = $r8.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        $b21 = $l20 cmp $l19;

        if $b21 == 0 goto label08;

        $l113 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i135);

        l136 = l134 | $l113;

     label08:
        i137 = i135 + 1;

        l138 = l136;

        $i23 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $r9 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i22 = $r9.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        if $i23 == $i22 goto label09;

        $l112 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i137);

        l138 = l136 | $l112;

     label09:
        i139 = i137 + 1;

        l140 = l138;

        $r12 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $r10 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r11 = $r10.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        $z2 = staticinvoke <android.util.LongArray: boolean elementsEqual(android.util.LongArray,android.util.LongArray)>($r12, $r11);

        if $z2 != 0 goto label10;

        $l111 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i139);

        l140 = l138 | $l111;

     label10:
        i141 = i139 + 1;

        l142 = l140;

        $r15 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $r13 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r14 = $r13.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z3 != 0 goto label11;

        $l110 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i141);

        l142 = l140 | $l110;

     label11:
        i143 = i141 + 1;

        l144 = l142;

        $r18 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $r16 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r17 = $r16.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r18, $r17);

        if $z4 != 0 goto label12;

        $l109 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i143);

        l144 = l142 | $l109;

     label12:
        i145 = i143 + 1;

        l146 = l144;

        $r21 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $r19 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r20 = $r19.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r21, $r20);

        if $z5 != 0 goto label13;

        $l108 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i145);

        l146 = l144 | $l108;

     label13:
        i147 = i145 + 1;

        l148 = l146;

        $i25 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        $r22 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i24 = $r22.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        if $i25 == $i24 goto label14;

        $l107 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i147);

        l148 = l146 | $l107;

     label14:
        i149 = i147 + 1;

        l150 = l148;

        $i27 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        $r23 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i26 = $r23.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        if $i27 == $i26 goto label15;

        $l106 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i149);

        l150 = l148 | $l106;

     label15:
        i151 = i149 + 1;

        l152 = l150;

        $i29 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $r24 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i28 = $r24.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        if $i29 == $i28 goto label16;

        $l105 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i151);

        l152 = l150 | $l105;

     label16:
        i153 = i151 + 1;

        l154 = l152;

        $r27 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        $r25 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r26 = $r25.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r27, $r26);

        if $z6 != 0 goto label17;

        $l104 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i153);

        l154 = l152 | $l104;

     label17:
        i155 = i153 + 1;

        l156 = l154;

        $r30 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        $r28 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r29 = $r28.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r30, $r29);

        if $z7 != 0 goto label18;

        $l103 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i155);

        l156 = l154 | $l103;

     label18:
        i157 = i155 + 1;

        l158 = l156;

        $r33 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        $r31 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r32 = $r31.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r33, $r32);

        if $z8 != 0 goto label19;

        $l102 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i157);

        l158 = l156 | $l102;

     label19:
        i159 = i157 + 1;

        l160 = l158;

        $r36 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText>;

        $r34 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r35 = $r34.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText>;

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r36, $r35);

        if $z9 != 0 goto label20;

        $l101 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i159);

        l160 = l158 | $l101;

     label20:
        i161 = i159 + 1;

        l162 = l160;

        $r39 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        $r37 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r38 = $r37.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r39, $r38);

        if $z10 != 0 goto label21;

        $l100 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i161);

        l162 = l160 | $l100;

     label21:
        i163 = i161 + 1;

        l164 = l162;

        $r42 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        $r40 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r41 = $r40.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r42, $r41);

        if $z11 != 0 goto label22;

        $l99 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i163);

        l164 = l162 | $l99;

     label22:
        i165 = i163 + 1;

        l166 = l164;

        $r45 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        $r43 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r44 = $r43.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        $z12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r45, $r44);

        if $z12 != 0 goto label23;

        $l98 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i165);

        l166 = l164 | $l98;

     label23:
        i167 = i165 + 1;

        l168 = l166;

        $r48 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle>;

        $r46 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r47 = $r46.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle>;

        $z13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r48, $r47);

        if $z13 != 0 goto label24;

        $l97 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i167);

        l168 = l166 | $l97;

     label24:
        i169 = i167 + 1;

        l170 = l168;

        $r51 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        $r49 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r50 = $r49.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        $z14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r51, $r50);

        if $z14 != 0 goto label25;

        $l96 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i169);

        l170 = l168 | $l96;

     label25:
        i171 = i169 + 1;

        l172 = l170;

        $r54 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        $r52 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r53 = $r52.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        $z15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r54, $r53);

        if $z15 != 0 goto label26;

        $l95 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i171);

        l172 = l170 | $l95;

     label26:
        i173 = i171 + 1;

        l174 = l172;

        $i31 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        $r55 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i30 = $r55.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        if $i31 == $i30 goto label27;

        $l94 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i173);

        l174 = l172 | $l94;

     label27:
        i175 = i173 + 1;

        l176 = l174;

        $i33 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        $r56 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i32 = $r56.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        if $i33 == $i32 goto label28;

        $l93 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i175);

        l176 = l174 | $l93;

     label28:
        i177 = i175 + 1;

        l178 = l176;

        $i35 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        $r57 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i34 = $r57.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        if $i35 == $i34 goto label29;

        $l92 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i177);

        l178 = l176 | $l92;

     label29:
        i179 = i177 + 1;

        l180 = l178;

        $i37 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        $r58 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i36 = $r58.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        if $i37 == $i36 goto label30;

        $l91 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i179);

        l180 = l178 | $l91;

     label30:
        i181 = i179 + 1;

        l182 = l180;

        $i39 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent>;

        $r59 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $i38 = $r59.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent>;

        if $i39 == $i38 goto label31;

        $l90 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i181);

        l182 = l180 | $l90;

     label31:
        i183 = i181 + 1;

        l184 = l182;

        $r62 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys>;

        $r60 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r61 = $r60.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys>;

        $z16 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r62, $r61);

        if $z16 != 0 goto label32;

        $l89 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i183);

        l184 = l182 | $l89;

     label32:
        i185 = i183 + 1;

        l186 = l184;

        $r65 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        $r63 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r64 = $r63.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        $z17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r65, $r64);

        if $z17 != 0 goto label33;

        $l88 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i185);

        l186 = l184 | $l88;

     label33:
        i187 = i185 + 1;

        l188 = l186;

        $r68 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $r66 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r67 = $r66.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $z18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r68, $r67);

        if $z18 != 0 goto label34;

        $l87 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i187);

        l188 = l186 | $l87;

     label34:
        i189 = i187 + 1;

        l190 = l188;

        $r71 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $r69 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r70 = $r69.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $z19 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r71, $r70);

        if $z19 != 0 goto label35;

        $l86 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i189);

        l190 = l188 | $l86;

     label35:
        i191 = i189 + 1;

        l192 = l190;

        $r74 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $r72 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r73 = $r72.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $z20 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r74, $r73);

        if $z20 != 0 goto label36;

        $l85 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i191);

        l192 = l190 | $l85;

     label36:
        i193 = i191 + 1;

        l194 = l192;

        $r77 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        $r75 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r76 = $r75.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        $z21 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r77, $r76);

        if $z21 != 0 goto label37;

        $l84 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i193);

        l194 = l192 | $l84;

     label37:
        i195 = i193 + 1;

        l196 = l194;

        $r80 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $r78 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r79 = $r78.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $z22 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r80, $r79);

        if $z22 != 0 goto label38;

        $l83 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i195);

        l196 = l194 | $l83;

     label38:
        i197 = i195 + 1;

        l198 = l196;

        $r83 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        $r81 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r82 = $r81.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        if $r83 == $r82 goto label39;

        $l82 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i197);

        l198 = l196 | $l82;

     label39:
        i199 = i197 + 1;

        l200 = l198;

        $r86 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        $r84 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $r85 = $r84.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        if $r86 == $r85 goto label40;

        $l81 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i199);

        l200 = l198 | $l81;

     label40:
        i0 = i199 + 1;

        l201 = l200;

        $l41 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        $r87 = <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo DEFAULT>;

        $l40 = $r87.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        $b42 = $l41 cmp $l40;

        if $b42 == 0 goto label41;

        $l80 = staticinvoke <com.android.internal.util.BitUtils: long bitAt(int)>(i0);

        l201 = l200 | $l80;

     label41:
        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>(l201);

        i202 = 0 + 1;

        $z23 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, 0);

        if $z23 == 0 goto label42;

        $z69 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        i249 = (int) $z69;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i249);

     label42:
        i203 = i202 + 1;

        $z24 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i202);

        if $z24 == 0 goto label43;

        $l79 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l79);

     label43:
        i204 = i203 + 1;

        $z25 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i203);

        if $z25 == 0 goto label44;

        $i78 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i78);

     label44:
        i205 = i204 + 1;

        $z26 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i204);

        if $z26 == 0 goto label45;

        $l77 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l77);

     label45:
        i206 = i205 + 1;

        $z27 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i205);

        if $z27 == 0 goto label46;

        $l76 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l76);

     label46:
        i207 = i206 + 1;

        $z28 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i206);

        if $z28 == 0 goto label47;

        $l75 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l75);

     label47:
        i208 = i207 + 1;

        $z29 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i207);

        if $z29 == 0 goto label48;

        $l74 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalBefore>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l74);

     label48:
        i209 = i208 + 1;

        $z30 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i208);

        if $z30 == 0 goto label49;

        $l73 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mTraversalAfter>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l73);

     label49:
        i210 = i209 + 1;

        $z31 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i209);

        if $z31 == 0 goto label50;

        $i72 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i72);

     label50:
        i211 = i210 + 1;

        $z32 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i210);

        if $z32 == 0 goto label53;

        r142 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray mChildNodeIds>;

        if r142 != null goto label51;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(0);

        goto label53;

     label51:
        i212 = virtualinvoke r142.<android.util.LongArray: int size()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i212);

        i213 = 0;

     label52:
        if i213 >= i212 goto label53;

        $l71 = virtualinvoke r142.<android.util.LongArray: long get(int)>(i213);

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l71);

        i213 = i213 + 1;

        goto label52;

     label53:
        i214 = i211 + 1;

        $z70 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i211);

        if $z70 == 0 goto label54;

        $r137 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i67 = $r137.<android.graphics.Rect: int top>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i67);

        $r138 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i68 = $r138.<android.graphics.Rect: int bottom>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i68);

        $r139 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i69 = $r139.<android.graphics.Rect: int left>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i69);

        $r140 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i70 = $r140.<android.graphics.Rect: int right>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i70);

     label54:
        i215 = i214 + 1;

        $z33 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i214);

        if $z33 == 0 goto label55;

        $r133 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i63 = $r133.<android.graphics.Rect: int top>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i63);

        $r134 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i64 = $r134.<android.graphics.Rect: int bottom>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i64);

        $r135 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i65 = $r135.<android.graphics.Rect: int left>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i65);

        $r136 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i66 = $r136.<android.graphics.Rect: int right>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i66);

     label55:
        i216 = i215 + 1;

        $z34 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i215);

        if $z34 == 0 goto label64;

        r143 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        if r143 == null goto label63;

        $z66 = virtualinvoke r143.<java.util.ArrayList: boolean isEmpty()>();

        if $z66 != 0 goto label63;

        $r128 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        i1 = virtualinvoke $r128.<java.util.ArrayList: int size()>();

        i217 = 0;

        l218 = 0L;

        i219 = 0;

     label56:
        if i219 >= i1 goto label59;

        $r131 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $r132 = virtualinvoke $r131.<java.util.ArrayList: java.lang.Object get(int)>(i219);

        r144 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r132;

        $z68 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean isDefaultStandardAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r144);

        if $z68 == 0 goto label57;

        $l62 = r144.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: long mSerializationFlag>;

        l218 = l218 | $l62;

        goto label58;

     label57:
        i217 = i217 + 1;

     label58:
        i219 = i219 + 1;

        goto label56;

     label59:
        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>(l218);

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i217);

        i220 = 0;

     label60:
        if i220 >= i1 goto label62;

        $r129 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mActions>;

        $r130 = virtualinvoke $r129.<java.util.ArrayList: java.lang.Object get(int)>(i220);

        r145 = (android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction) $r130;

        $z67 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: boolean isDefaultStandardAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r145);

        if $z67 != 0 goto label61;

        virtualinvoke r145.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void writeToParcel(android.os.Parcel,int)>(r141, i121);

     label61:
        i220 = i220 + 1;

        goto label60;

     label62:
        goto label64;

     label63:
        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>(0L);

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(0);

     label64:
        i221 = i216 + 1;

        $z71 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i216);

        if $z71 == 0 goto label65;

        $i61 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMaxTextLength>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i61);

     label65:
        i222 = i221 + 1;

        $z35 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i221);

        if $z35 == 0 goto label66;

        $i60 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i60);

     label66:
        i223 = i222 + 1;

        $z36 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i222);

        if $z36 == 0 goto label67;

        $i59 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i59);

     label67:
        i224 = i223 + 1;

        $z37 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i223);

        if $z37 == 0 goto label68;

        $r127 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r127);

     label68:
        i225 = i224 + 1;

        $z38 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i224);

        if $z38 == 0 goto label69;

        $r126 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r126);

     label69:
        i226 = i225 + 1;

        $z39 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i225);

        if $z39 == 0 goto label70;

        $r125 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r125);

     label70:
        i227 = i226 + 1;

        $z40 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i226);

        if $z40 == 0 goto label71;

        $r124 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mHintText>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r124);

     label71:
        i228 = i227 + 1;

        $z41 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i227);

        if $z41 == 0 goto label72;

        $r123 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mError>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r123);

     label72:
        i229 = i228 + 1;

        $z42 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i228);

        if $z42 == 0 goto label73;

        $r122 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mStateDescription>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r122);

     label73:
        i230 = i229 + 1;

        $z43 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i229);

        if $z43 == 0 goto label74;

        $r121 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r121);

     label74:
        i231 = i230 + 1;

        $z44 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i230);

        if $z44 == 0 goto label75;

        $r120 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPaneTitle>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r120);

     label75:
        i232 = i231 + 1;

        $z45 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i231);

        if $z45 == 0 goto label76;

        $r119 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mTooltipText>;

        virtualinvoke r141.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r119);

     label76:
        i233 = i232 + 1;

        $z46 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i232);

        if $z46 == 0 goto label77;

        $r118 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        virtualinvoke r141.<android.os.Parcel: void writeString(java.lang.String)>($r118);

     label77:
        i234 = i233 + 1;

        $z47 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i233);

        if $z47 == 0 goto label78;

        $i58 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i58);

     label78:
        i235 = i234 + 1;

        $z48 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i234);

        if $z48 == 0 goto label79;

        $i57 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i57);

     label79:
        i236 = i235 + 1;

        $z49 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i235);

        if $z49 == 0 goto label80;

        $i56 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i56);

     label80:
        i237 = i236 + 1;

        $z50 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i236);

        if $z50 == 0 goto label81;

        $i55 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i55);

     label81:
        i238 = i237 + 1;

        $z51 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i237);

        if $z51 == 0 goto label82;

        $i54 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mDrawingOrderInParent>;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i54);

     label82:
        i239 = i238 + 1;

        $z52 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i238);

        if $z52 == 0 goto label83;

        $r117 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.util.ArrayList mExtraDataKeys>;

        virtualinvoke r141.<android.os.Parcel: void writeStringList(java.util.List)>($r117);

     label83:
        i240 = i239 + 1;

        $z53 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i239);

        if $z53 == 0 goto label84;

        $r116 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        virtualinvoke r141.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r116);

     label84:
        i241 = i240 + 1;

        $z54 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i240);

        if $z54 == 0 goto label85;

        $r112 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $i53 = virtualinvoke $r112.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int getType()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i53);

        $r113 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f1 = virtualinvoke $r113.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMin()>();

        virtualinvoke r141.<android.os.Parcel: void writeFloat(float)>($f1);

        $r114 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f2 = virtualinvoke $r114.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMax()>();

        virtualinvoke r141.<android.os.Parcel: void writeFloat(float)>($f2);

        $r115 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f3 = virtualinvoke $r115.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getCurrent()>();

        virtualinvoke r141.<android.os.Parcel: void writeFloat(float)>($f3);

     label85:
        i242 = i241 + 1;

        $z55 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i241);

        if $z55 == 0 goto label86;

        $r108 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $i50 = virtualinvoke $r108.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getRowCount()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i50);

        $r109 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $i51 = virtualinvoke $r109.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getColumnCount()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i51);

        $r110 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $z65 = virtualinvoke $r110.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean isHierarchical()>();

        i250 = (int) $z65;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i250);

        $r111 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $i52 = virtualinvoke $r111.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getSelectionMode()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i52);

     label86:
        i243 = i242 + 1;

        $z56 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i242);

        if $z56 == 0 goto label87;

        $r102 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i46 = virtualinvoke $r102.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowIndex()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i46);

        $r103 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i47 = virtualinvoke $r103.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowSpan()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i47);

        $r104 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i48 = virtualinvoke $r104.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnIndex()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i48);

        $r105 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i49 = virtualinvoke $r105.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnSpan()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i49);

        $r106 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $z63 = virtualinvoke $r106.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean isHeading()>();

        i251 = (int) $z63;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i251);

        $r107 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $z64 = virtualinvoke $r107.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean isSelected()>();

        i252 = (int) $z64;

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>(i252);

     label87:
        i244 = i243 + 1;

        $z57 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i243);

        if $z57 == 0 goto label88;

        $r101 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mTouchDelegateInfo>;

        virtualinvoke $r101.<android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo: void writeToParcel(android.os.Parcel,int)>(r141, i121);

     label88:
        i245 = i244 + 1;

        $z58 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i244);

        if $z58 == 0 goto label89;

        $r97 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $r98 = virtualinvoke $r97.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.util.Size getLayoutSize()>();

        virtualinvoke r141.<android.os.Parcel: void writeValue(java.lang.Object)>($r98);

        $r99 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $f0 = virtualinvoke $r99.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: float getTextSizeInPx()>();

        virtualinvoke r141.<android.os.Parcel: void writeFloat(float)>($f0);

        $r100 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo mExtraRenderingInfo>;

        $i45 = virtualinvoke $r100.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: int getTextSizeUnit()>();

        virtualinvoke r141.<android.os.Parcel: void writeInt(int)>($i45);

     label89:
        i246 = i245 + 1;

        $z59 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i245);

        if $z59 == 0 goto label90;

        $r96 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedChild>;

        virtualinvoke r141.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r96);

     label90:
        i247 = i246 + 1;

        $z60 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i246);

        if $z60 == 0 goto label91;

        $r95 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.IBinder mLeashedParent>;

        virtualinvoke r141.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r95);

     label91:
        $z61 = staticinvoke <com.android.internal.util.BitUtils: boolean isBitSet(long,int)>(l201, i247);

        if $z61 == 0 goto label92;

        $l44 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLeashedParentNodeId>;

        virtualinvoke r141.<android.os.Parcel: void writeLong(long)>($l44);

     label92:
        $z62 = <android.view.accessibility.AccessibilityNodeInfo: boolean DEBUG>;

        if $z62 == 0 goto label94;

        $i43 = i247 + 1;

        i248 = $i43 - 1;

        if i0 != i248 goto label93;

        goto label94;

     label93:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of fields mismatch: ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i248);

        $r93 = new java.lang.IllegalStateException;

        $r94 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r93.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r94);

        throw $r93;

     label94:
        return;
    }
}
