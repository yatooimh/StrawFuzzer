public abstract class android.view.accessibility.AccessibilityRequestPreparer extends java.lang.Object
{
    public static final int REQUEST_TYPE_EXTRA_DATA;
    private final int mAccessibilityViewId;
    private final int mRequestTypes;
    private final java.lang.ref.WeakReference mViewRef;

    public void <init>(android.view.View, int)
    {
        android.view.accessibility.AccessibilityRequestPreparer r0;
        android.view.View r1;
        int i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.ref.WeakReference $r3;
        android.view.accessibility.AccessibilityRequestPreparer$ViewAttachStateListener $r4;

        r0 := @this: android.view.accessibility.AccessibilityRequestPreparer;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<android.view.View: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.view.accessibility.AccessibilityRequestPreparer: java.lang.ref.WeakReference mViewRef> = $r3;

        $i1 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        r0.<android.view.accessibility.AccessibilityRequestPreparer: int mAccessibilityViewId> = $i1;

        r0.<android.view.accessibility.AccessibilityRequestPreparer: int mRequestTypes> = i0;

        $r4 = new android.view.accessibility.AccessibilityRequestPreparer$ViewAttachStateListener;

        specialinvoke $r4.<android.view.accessibility.AccessibilityRequestPreparer$ViewAttachStateListener: void <init>(android.view.accessibility.AccessibilityRequestPreparer,android.view.accessibility.AccessibilityRequestPreparer$1)>(r0, null);

        virtualinvoke r1.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r4);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("View must be attached to a window");

        throw $r2;
    }

    int getAccessibilityViewId()
    {
        android.view.accessibility.AccessibilityRequestPreparer r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityRequestPreparer;

        $i0 = r0.<android.view.accessibility.AccessibilityRequestPreparer: int mAccessibilityViewId>;

        return $i0;
    }

    public android.view.View getView()
    {
        android.view.accessibility.AccessibilityRequestPreparer r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.View $r3;

        r0 := @this: android.view.accessibility.AccessibilityRequestPreparer;

        $r1 = r0.<android.view.accessibility.AccessibilityRequestPreparer: java.lang.ref.WeakReference mViewRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.View) $r2;

        return $r3;
    }

    public abstract void onPrepareExtraData(int, java.lang.String, android.os.Bundle, android.os.Message);

    public static void <clinit>()
    {
        <android.view.accessibility.AccessibilityRequestPreparer: int REQUEST_TYPE_EXTRA_DATA> = 1;

        return;
    }
}
