public final class android.view.accessibility.AccessibilityWindowInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACTIVE_WINDOW_ID;
    public static final int ANY_WINDOW_ID;
    private static final int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_ACTIVE;
    private static final int BOOLEAN_PROPERTY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_PICTURE_IN_PICTURE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final int MAX_POOL_SIZE;
    public static final int PICTURE_IN_PICTURE_ACTION_REPLACER_WINDOW_ID;
    public static final int TYPE_ACCESSIBILITY_OVERLAY;
    public static final int TYPE_APPLICATION;
    public static final int TYPE_INPUT_METHOD;
    public static final int TYPE_SPLIT_SCREEN_DIVIDER;
    public static final int TYPE_SYSTEM;
    public static final int UNDEFINED_CONNECTION_ID;
    public static final int UNDEFINED_WINDOW_ID;
    private static java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse;
    private static final android.util.Pools$SynchronizedPool sPool;
    private long mAnchorId;
    private int mBooleanProperties;
    private android.util.LongArray mChildIds;
    private int mConnectionId;
    private int mDisplayId;
    private int mId;
    private int mLayer;
    private int mParentId;
    private android.graphics.Region mRegionInScreen;
    private java.lang.CharSequence mTitle;
    private int mType;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;
        android.view.accessibility.AccessibilityWindowInfo$1 $r1;

        <android.view.accessibility.AccessibilityWindowInfo: int UNDEFINED_WINDOW_ID> = -1;

        <android.view.accessibility.AccessibilityWindowInfo: int UNDEFINED_CONNECTION_ID> = -1;

        <android.view.accessibility.AccessibilityWindowInfo: int TYPE_SYSTEM> = 3;

        <android.view.accessibility.AccessibilityWindowInfo: int TYPE_SPLIT_SCREEN_DIVIDER> = 5;

        <android.view.accessibility.AccessibilityWindowInfo: int TYPE_INPUT_METHOD> = 2;

        <android.view.accessibility.AccessibilityWindowInfo: int TYPE_APPLICATION> = 1;

        <android.view.accessibility.AccessibilityWindowInfo: int TYPE_ACCESSIBILITY_OVERLAY> = 4;

        <android.view.accessibility.AccessibilityWindowInfo: int PICTURE_IN_PICTURE_ACTION_REPLACER_WINDOW_ID> = -3;

        <android.view.accessibility.AccessibilityWindowInfo: int MAX_POOL_SIZE> = 10;

        <android.view.accessibility.AccessibilityWindowInfo: boolean DEBUG> = 0;

        <android.view.accessibility.AccessibilityWindowInfo: int BOOLEAN_PROPERTY_PICTURE_IN_PICTURE> = 8;

        <android.view.accessibility.AccessibilityWindowInfo: int BOOLEAN_PROPERTY_FOCUSED> = 2;

        <android.view.accessibility.AccessibilityWindowInfo: int BOOLEAN_PROPERTY_ACTIVE> = 1;

        <android.view.accessibility.AccessibilityWindowInfo: int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED> = 4;

        <android.view.accessibility.AccessibilityWindowInfo: int ANY_WINDOW_ID> = -2;

        <android.view.accessibility.AccessibilityWindowInfo: int ACTIVE_WINDOW_ID> = 2147483647;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(10);

        <android.view.accessibility.AccessibilityWindowInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        $r1 = new android.view.accessibility.AccessibilityWindowInfo$1;

        specialinvoke $r1.<android.view.accessibility.AccessibilityWindowInfo$1: void <init>()>();

        <android.view.accessibility.AccessibilityWindowInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.graphics.Region $r1;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = -1;

        $r1 = new android.graphics.Region;

        specialinvoke $r1.<android.graphics.Region: void <init>()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen> = $r1;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = $l0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = -1;

        return;
    }

    public void <init>(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r1;
        android.graphics.Region $r2;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = -1;

        $r2 = new android.graphics.Region;

        specialinvoke $r2.<android.graphics.Region: void <init>()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen> = $r2;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = $l0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = -1;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void init(android.view.accessibility.AccessibilityWindowInfo)>(r1);

        return;
    }

    static void access$000(android.view.accessibility.AccessibilityWindowInfo, android.os.Parcel)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void initFromParcel(android.os.Parcel)>(r1);

        return;
    }

    private void clear()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.graphics.Region $r1;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties> = 0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = -1;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = -1;

        $r1 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke $r1.<android.graphics.Region: void setEmpty()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds> = null;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = -1;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = $l0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle> = null;

        return;
    }

    private boolean getBooleanProperty(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void init(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        android.graphics.Region $r2, $r3;
        java.lang.CharSequence $r4;
        long $l6;
        android.util.LongArray $r5, $r6, $r7, r8, r9, r10;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = $i0;

        $i1 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = $i1;

        $i2 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = $i2;

        $i3 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties> = $i3;

        $i4 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = $i4;

        $i5 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = $i5;

        $r3 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        $r2 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke $r3.<android.graphics.Region: boolean set(android.graphics.Region)>($r2);

        $r4 = r1.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle> = $r4;

        $l6 = r1.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = $l6;

        r8 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r8 == null goto label1;

        virtualinvoke r8.<android.util.LongArray: void clear()>();

     label1:
        r9 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r9 == null goto label3;

        $i7 = virtualinvoke r9.<android.util.LongArray: int size()>();

        if $i7 <= 0 goto label3;

        r10 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r10 != null goto label2;

        $r6 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        $r7 = virtualinvoke $r6.<android.util.LongArray: android.util.LongArray clone()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds> = $r7;

        goto label3;

     label2:
        $r5 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        virtualinvoke r10.<android.util.LongArray: void addAll(android.util.LongArray)>($r5);

     label3:
        $i8 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = $i8;

        return;
    }

    private void initFromParcel(android.os.Parcel)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, i11;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.graphics.Region $r4;
        java.lang.CharSequence $r5;
        long $l8, $l10;
        android.util.LongArray $r6, $r7, $r8;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.os.Parcel;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = $i7;

        $r2 = <android.graphics.Region: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.graphics.Region) $r3;

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle> = $r5;

        $l8 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = $l8;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 0 goto label3;

        $r6 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if $r6 != null goto label1;

        $r8 = new android.util.LongArray;

        specialinvoke $r8.<android.util.LongArray: void <init>(int)>(i0);

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds> = $r8;

     label1:
        i11 = 0;

     label2:
        if i11 >= i0 goto label3;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        $l10 = (long) i1;

        virtualinvoke $r7.<android.util.LongArray: void add(long)>($l10);

        i11 = i11 + 1;

        goto label2;

     label3:
        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = $i9;

        return;
    }

    public static android.view.accessibility.AccessibilityWindowInfo obtain()
    {
        android.util.Pools$SynchronizedPool $r0;
        java.lang.Object $r1;
        android.view.accessibility.AccessibilityWindowInfo $r2, r3, r4;
        java.util.concurrent.atomic.AtomicInteger r5;

        $r0 = <android.view.accessibility.AccessibilityWindowInfo: android.util.Pools$SynchronizedPool sPool>;

        $r1 = virtualinvoke $r0.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r3 = (android.view.accessibility.AccessibilityWindowInfo) $r1;

        r4 = r3;

        if r3 != null goto label1;

        $r2 = new android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke $r2.<android.view.accessibility.AccessibilityWindowInfo: void <init>()>();

        r4 = $r2;

     label1:
        r5 = <android.view.accessibility.AccessibilityWindowInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse>;

        if r5 == null goto label2;

        virtualinvoke r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label2:
        return r4;
    }

    public static android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        r1 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>();

        specialinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: void init(android.view.accessibility.AccessibilityWindowInfo)>(r0);

        return r1;
    }

    private void setBooleanProperty(int, boolean)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties>;

        $i4 = $i3 | i0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties> = $i4;

        goto label2;

     label1:
        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties>;

        $i2 = $i1 & i0;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties> = $i2;

     label2:
        return;
    }

    public static void setNumInstancesInUseCounter(java.util.concurrent.atomic.AtomicInteger)
    {
        java.util.concurrent.atomic.AtomicInteger r0, $r1;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        $r1 = <android.view.accessibility.AccessibilityWindowInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse>;

        if $r1 == null goto label1;

        <android.view.accessibility.AccessibilityWindowInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse> = r0;

     label1:
        return;
    }

    public static java.lang.String typeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 == 5 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<UNKNOWN:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "TYPE_SPLIT_SCREEN_DIVIDER";

     label2:
        return "TYPE_ACCESSIBILITY_OVERLAY";

     label3:
        return "TYPE_SYSTEM";

     label4:
        return "TYPE_INPUT_METHOD";

     label5:
        return "TYPE_APPLICATION";
    }

    public void addChild(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;
        android.util.LongArray $r1, $r2, $r3;
        long $l1;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if $r1 != null goto label1;

        $r3 = new android.util.LongArray;

        specialinvoke $r3.<android.util.LongArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds> = $r3;

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        $l1 = (long) i0;

        virtualinvoke $r2.<android.util.LongArray: void add(long)>($l1);

        return;
    }

    public int describeContents()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        return 0;
    }

    public int differenceFrom(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalArgumentException $r2, $r3;
        java.lang.CharSequence $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.graphics.Region $r6, $r7;
        android.util.LongArray $r8, $r9;
        short s8, s9, s10, s11, s12, s13, s14, s15, s16;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $i1 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        if $i1 != $i0 goto label11;

        $i3 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        if $i3 != $i2 goto label10;

        s8 = 0;

        $r5 = r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        $r4 = r1.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r4);

        if $z0 != 0 goto label01;

        s8 = 0 | 4;

     label01:
        s9 = s8;

        $r7 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        $r6 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        $z1 = virtualinvoke $r7.<android.graphics.Region: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label02;

        s9 = s8 | 8;

     label02:
        s10 = s9;

        $i5 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        $i4 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        if $i5 == $i4 goto label03;

        s10 = s9 | 16;

     label03:
        s11 = s10;

        $z2 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(1);

        $z3 = specialinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(1);

        if $z2 == $z3 goto label04;

        s11 = s10 | 32;

     label04:
        s12 = s11;

        $z4 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(2);

        $z5 = specialinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(2);

        if $z4 == $z5 goto label05;

        s12 = s11 | 64;

     label05:
        s13 = s12;

        $z6 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(4);

        $z7 = specialinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(4);

        if $z6 == $z7 goto label06;

        s13 = s12 | 128;

     label06:
        s14 = s13;

        $z8 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(8);

        $z9 = specialinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(8);

        if $z8 == $z9 goto label07;

        s14 = s13 | 1024;

     label07:
        s15 = s14;

        $i7 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        $i6 = r1.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        if $i7 == $i6 goto label08;

        s15 = s14 | 256;

     label08:
        s16 = s15;

        $r9 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        $r8 = r1.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z10 != 0 goto label09;

        s16 = s15 | 512;

     label09:
        return s16;

     label10:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not same type.");

        throw $r3;

     label11:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not same window.");

        throw $r2;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r4;
        java.lang.Class $r1, $r2;
        int $i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r3 := @parameter0: java.lang.Object;

        z0 = 1;

        if r0 != r3 goto label1;

        return 1;

     label1:
        if r3 != null goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label3;

        return 0;

     label3:
        r4 = (android.view.accessibility.AccessibilityWindowInfo) r3;

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        $i0 = r4.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        if $i1 != $i0 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        return z0;
    }

    public android.view.accessibility.AccessibilityNodeInfo getAnchor()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0, $i4, $i6, $i7;
        long $l1, $l2, $l5;
        byte $b3;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        if $i0 == -1 goto label2;

        $l2 = r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId>;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        $b3 = $l2 cmp $l1;

        if $b3 == 0 goto label2;

        $i4 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        if $i4 != -1 goto label1;

        goto label2;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i7 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        $i6 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        $l5 = r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>($i7, $i6, $l5, 1, 0, null);

        return $r2;

     label2:
        return null;
    }

    public void getBoundsInScreen(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.graphics.Rect r1, $r3;
        android.graphics.Region $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        $r3 = virtualinvoke $r2.<android.graphics.Region: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return;
    }

    public android.view.accessibility.AccessibilityWindowInfo getChild(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0, $r4;
        android.util.LongArray r1;
        java.lang.IndexOutOfBoundsException $r2;
        int $i0, $i2, i3, i4;
        long $l1;
        android.view.accessibility.AccessibilityInteractionClient $r3;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i3 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r1 == null goto label2;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $l1 = virtualinvoke r1.<android.util.LongArray: long get(int)>(i3);

        i4 = (int) $l1;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        $r4 = virtualinvoke $r3.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>($i2, i4);

        return $r4;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getChildCount()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.util.LongArray r1;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.util.LongArray: int size()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getDisplayId()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId>;

        return $i0;
    }

    public int getId()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        return $i0;
    }

    public int getLayer()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        return $i0;
    }

    public android.view.accessibility.AccessibilityWindowInfo getParent()
    {
        android.view.accessibility.AccessibilityWindowInfo r0, $r2;
        int $i0, $i1, $i2, $i3;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        if $i0 == -1 goto label2;

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        if $i1 != -1 goto label1;

        goto label2;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>($i3, $i2);

        return $r2;

     label2:
        return null;
    }

    public void getRegionInScreen(android.graphics.Region)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.graphics.Region r1, $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.graphics.Region;

        $r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke r1.<android.graphics.Region: boolean set(android.graphics.Region)>($r2);

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo getRoot()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0, $i2, $i3;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        long $l1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>($i3, $i2, $l1, 1, 4, null);

        return $r2;
    }

    public java.lang.CharSequence getTitle()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        return $r1;
    }

    public int getType()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        return $i0;
    }

    public int hashCode()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        return $i0;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(4);

        return $z0;
    }

    public boolean isActive()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(1);

        return $z0;
    }

    public boolean isFocused()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(2);

        return $z0;
    }

    public boolean isInPictureInPictureMode()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean getBooleanProperty(int)>(8);

        return $z0;
    }

    public void recycle()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        java.util.concurrent.atomic.AtomicInteger r1;
        android.util.Pools$SynchronizedPool $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void clear()>();

        $r2 = <android.view.accessibility.AccessibilityWindowInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r2.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        r1 = <android.view.accessibility.AccessibilityWindowInfo: java.util.concurrent.atomic.AtomicInteger sNumInstancesInUse>;

        if r1 == null goto label1;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

     label1:
        return;
    }

    public boolean refresh()
    {
        android.view.accessibility.AccessibilityWindowInfo r0, r1;
        int $i0, $i1, $i2, $i3;
        android.view.accessibility.AccessibilityInteractionClient $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        if $i0 == -1 goto label3;

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        if $i1 != -1 goto label1;

        goto label3;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int,boolean)>($i3, $i2, 1);

        if r1 != null goto label2;

        return 0;

     label2:
        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void init(android.view.accessibility.AccessibilityWindowInfo)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: void recycle()>();

        return 1;

     label3:
        return 0;
    }

    public void setAccessibilityFocused(boolean)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void setBooleanProperty(int,boolean)>(4, z0);

        return;
    }

    public void setActive(boolean)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void setBooleanProperty(int,boolean)>(1, z0);

        return;
    }

    public void setAnchorId(long)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        long l0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        l0 := @parameter0: long;

        r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId> = l0;

        return;
    }

    public void setConnectionId(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId> = i0;

        return;
    }

    public void setDisplayId(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId> = i0;

        return;
    }

    public void setFocused(boolean)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void setBooleanProperty(int,boolean)>(2, z0);

        return;
    }

    public void setId(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mId> = i0;

        return;
    }

    public void setLayer(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer> = i0;

        return;
    }

    public void setParentId(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId> = i0;

        return;
    }

    public void setPictureInPicture(boolean)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: void setBooleanProperty(int,boolean)>(8, z0);

        return;
    }

    public void setRegionInScreen(android.graphics.Region)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.graphics.Region r1, $r2;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.graphics.Region;

        $r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke $r2.<android.graphics.Region: boolean set(android.graphics.Region)>(r1);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle> = r1;

        return;
    }

    public void setType(int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        i0 := @parameter0: int;

        r0.<android.view.accessibility.AccessibilityWindowInfo: int mType> = i0;

        return;
    }

    public java.lang.String toString()
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        int i0, $i1, $i2, $i3, $i4, $i8;
        android.util.LongArray r2;
        java.lang.StringBuilder $r3;
        java.lang.CharSequence $r6;
        java.lang.String $r13, $r37;
        android.graphics.Region $r18, $r21;
        android.graphics.Rect $r22;
        boolean $z1, $z2, $z3, z4, z5, z6;
        long $l5, $l6;
        byte $b7;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AccessibilityWindowInfo[");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title=");

        $r6 = r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", displayId=");

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        $r13 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: java.lang.String typeToString(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layer=");

        $i4 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", region=");

        $r18 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bounds=");

        $r21 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        $r22 = virtualinvoke $r21.<android.graphics.Region: android.graphics.Rect getBounds()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", focused=");

        $z1 = virtualinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", active=");

        $z2 = virtualinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pictureInPicture=");

        $z3 = virtualinvoke r0.<android.view.accessibility.AccessibilityWindowInfo: boolean isInPictureInPictureMode()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasParent=");

        i0 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        if i0 == -1 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isAnchored=");

        $l6 = r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId>;

        $l5 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        $b7 = $l6 cmp $l5;

        if $b7 == 0 goto label3;

        z5 = 1;

        goto label4;

     label3:
        z5 = 0;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hasChildren=");

        r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r2 == null goto label5;

        $i8 = virtualinvoke r2.<android.util.LongArray: int size()>();

        if $i8 <= 0 goto label5;

        z6 = 1;

        goto label6;

     label5:
        z6 = 0;

     label6:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r37 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r37;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.accessibility.AccessibilityWindowInfo r0;
        android.os.Parcel r1;
        android.util.LongArray r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, i11, i12;
        android.graphics.Region $r3;
        java.lang.CharSequence $r4;
        long $l7, $l9;

        r0 := @this: android.view.accessibility.AccessibilityWindowInfo;

        r1 := @parameter0: android.os.Parcel;

        i11 := @parameter1: int;

        $i1 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mDisplayId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mLayer>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mBooleanProperties>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mParentId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r3 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.graphics.Region mRegionInScreen>;

        virtualinvoke $r3.<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>(r1, i11);

        $r4 = r0.<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence mTitle>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r4);

        $l7 = r0.<android.view.accessibility.AccessibilityWindowInfo: long mAnchorId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        r2 = r0.<android.view.accessibility.AccessibilityWindowInfo: android.util.LongArray mChildIds>;

        if r2 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label3;

     label1:
        i0 = virtualinvoke r2.<android.util.LongArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        $l9 = virtualinvoke r2.<android.util.LongArray: long get(int)>(i12);

        $i10 = (int) $l9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        i12 = i12 + 1;

        goto label2;

     label3:
        $i8 = r0.<android.view.accessibility.AccessibilityWindowInfo: int mConnectionId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        return;
    }
}
