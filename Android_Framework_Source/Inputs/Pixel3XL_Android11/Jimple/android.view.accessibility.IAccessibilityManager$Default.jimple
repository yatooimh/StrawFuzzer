public class android.view.accessibility.IAccessibilityManager$Default extends java.lang.Object implements android.view.accessibility.IAccessibilityManager
{

    public void <init>()
    {
        android.view.accessibility.IAccessibilityManager$Default r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int addAccessibilityInteractionConnection(android.view.IWindow, android.os.IBinder, android.view.accessibility.IAccessibilityInteractionConnection, java.lang.String, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.IWindow r1;
        android.os.IBinder r2;
        android.view.accessibility.IAccessibilityInteractionConnection r3;
        java.lang.String r4;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.IWindow;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.view.accessibility.IAccessibilityInteractionConnection;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        return 0;
    }

    public long addClient(android.view.accessibility.IAccessibilityManagerClient, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.accessibility.IAccessibilityManagerClient r1;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.accessibility.IAccessibilityManagerClient;

        i0 := @parameter1: int;

        return 0L;
    }

    public android.os.IBinder asBinder()
    {
        android.view.accessibility.IAccessibilityManager$Default r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        return null;
    }

    public void associateEmbeddedHierarchy(android.os.IBinder, android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.os.IBinder r1, r2;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.IBinder;

        return;
    }

    public void disassociateEmbeddedHierarchy(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.os.IBinder r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.os.IBinder;

        return;
    }

    public java.util.List getAccessibilityShortcutTargets(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int getAccessibilityWindowId(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.os.IBinder r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.os.IBinder;

        return 0;
    }

    public java.util.List getEnabledAccessibilityServiceList(int, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0, i1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public java.util.List getInstalledAccessibilityServiceList(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public long getRecommendedTimeoutMillis() throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        return 0L;
    }

    public android.os.IBinder getWindowToken(int, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0, i1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public void interrupt(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        return;
    }

    public void notifyAccessibilityButtonClicked(int, java.lang.String) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void notifyAccessibilityButtonVisibilityChanged(boolean) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        boolean z0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void performAccessibilityShortcut(java.lang.String) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void registerSystemAction(android.app.RemoteAction, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.app.RemoteAction r1;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.app.RemoteAction;

        i0 := @parameter1: int;

        return;
    }

    public void registerUiTestAutomationService(android.os.IBinder, android.accessibilityservice.IAccessibilityServiceClient, android.accessibilityservice.AccessibilityServiceInfo, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.os.IBinder r1;
        android.accessibilityservice.IAccessibilityServiceClient r2;
        android.accessibilityservice.AccessibilityServiceInfo r3;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.accessibilityservice.IAccessibilityServiceClient;

        r3 := @parameter2: android.accessibilityservice.AccessibilityServiceInfo;

        i0 := @parameter3: int;

        return;
    }

    public void removeAccessibilityInteractionConnection(android.view.IWindow) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.IWindow r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.IWindow;

        return;
    }

    public void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.accessibility.AccessibilityEvent r1;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        i0 := @parameter1: int;

        return;
    }

    public boolean sendFingerprintGesture(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.accessibility.IAccessibilityInteractionConnection r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.accessibility.IAccessibilityInteractionConnection;

        return;
    }

    public void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.view.accessibility.IWindowMagnificationConnection r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.view.accessibility.IWindowMagnificationConnection;

        return;
    }

    public void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName, boolean) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.content.ComponentName r1;
        boolean z0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.content.ComponentName;

        z0 := @parameter1: boolean;

        return;
    }

    public void unregisterSystemAction(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        int i0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        i0 := @parameter0: int;

        return;
    }

    public void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Default r0;
        android.accessibilityservice.IAccessibilityServiceClient r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Default;

        r1 := @parameter0: android.accessibilityservice.IAccessibilityServiceClient;

        return;
    }
}
