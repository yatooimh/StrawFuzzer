class android.view.accessibility.IAccessibilityManager$Stub$Proxy extends java.lang.Object implements android.view.accessibility.IAccessibilityManager
{
    public static android.view.accessibility.IAccessibilityManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public int addAccessibilityInteractionConnection(android.view.IWindow, android.os.IBinder, android.view.accessibility.IAccessibilityInteractionConnection, java.lang.String, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.IBinder r1, $r6, r11, r12;
        android.view.accessibility.IAccessibilityInteractionConnection r2;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r7, $r8;
        java.lang.Throwable $r9;
        android.view.IWindow r10;
        int i0, i1, i2;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r10 := @parameter0: android.view.IWindow;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.view.accessibility.IAccessibilityInteractionConnection;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        if r10 == null goto label05;

     label03:
        r11 = interfaceinvoke r10.<android.view.IWindow: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r11 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

     label07:
        r12 = null;

        if r2 == null goto label09;

     label08:
        r12 = interfaceinvoke r2.<android.view.accessibility.IAccessibilityInteractionConnection: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r4, r5, 0);

        if $z0 != 0 goto label11;

        $r7 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r7 == null goto label11;

        $r8 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        i1 = interfaceinvoke $r8.<android.view.accessibility.IAccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>(r10, r1, r2, r3, i0);

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label11:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i2;

     label13:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public long addClient(android.view.accessibility.IAccessibilityManagerClient, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.accessibility.IAccessibilityManagerClient r7;
        long l1, l2;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.view.accessibility.IAccessibilityManagerClient;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.accessibility.IAccessibilityManagerClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: long addClient(android.view.accessibility.IAccessibilityManagerClient,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        $r1 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void associateEmbeddedHierarchy(android.os.IBinder, android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.IBinder r1, $r4, r8;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.accessibility.IAccessibilityManager: void associateEmbeddedHierarchy(android.os.IBinder,android.os.IBinder)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disassociateEmbeddedHierarchy(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void disassociateEmbeddedHierarchy(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getAccessibilityShortcutTargets(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getAccessibilityWindowId(android.os.IBinder) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: int getAccessibilityWindowId(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getEnabledAccessibilityServiceList(int, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.view.accessibility.IAccessibilityManager $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.view.accessibility.IAccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.accessibilityservice.AccessibilityServiceInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getInstalledAccessibilityServiceList(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.view.accessibility.IAccessibilityManager $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.view.accessibility.IAccessibilityManager: java.util.List getInstalledAccessibilityServiceList(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.accessibilityservice.AccessibilityServiceInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        return "android.view.accessibility.IAccessibilityManager";
    }

    public long getRecommendedTimeoutMillis() throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r4 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.view.accessibility.IAccessibilityManager: long getRecommendedTimeoutMillis()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder getWindowToken(int, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7, r8;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: android.os.IBinder getWindowToken(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interrupt(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void interrupt(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void notifyAccessibilityButtonClicked(int, java.lang.String) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void notifyAccessibilityButtonClicked(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void notifyAccessibilityButtonVisibilityChanged(boolean) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.view.accessibility.IAccessibilityManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.view.accessibility.IAccessibilityManager: void notifyAccessibilityButtonVisibilityChanged(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void performAccessibilityShortcut(java.lang.String) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void performAccessibilityShortcut(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerSystemAction(android.app.RemoteAction, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.app.RemoteAction r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r6 := @parameter0: android.app.RemoteAction;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.app.RemoteAction: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.accessibility.IAccessibilityManager: void registerSystemAction(android.app.RemoteAction,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void registerUiTestAutomationService(android.os.IBinder, android.accessibilityservice.IAccessibilityServiceClient, android.accessibilityservice.AccessibilityServiceInfo, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.accessibilityservice.IAccessibilityServiceClient r1;
        android.accessibilityservice.AccessibilityServiceInfo r2;
        int i0;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9, r10;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.accessibilityservice.IAccessibilityServiceClient;

        r2 := @parameter2: android.accessibilityservice.AccessibilityServiceInfo;

        i0 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        r10 = interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.view.accessibility.IAccessibilityManager: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>(r9, r1, r2, i0);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void removeAccessibilityInteractionConnection(android.view.IWindow) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.IWindow r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.view.IWindow;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.IWindow: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.view.accessibility.AccessibilityEvent r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r6 := @parameter0: android.view.accessibility.AccessibilityEvent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.accessibility.IAccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>(r6, i0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public boolean sendFingerprintGesture(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.view.accessibility.IAccessibilityManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.view.accessibility.IAccessibilityManager: boolean sendFingerprintGesture(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.accessibility.IAccessibilityInteractionConnection r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.view.accessibility.IAccessibilityInteractionConnection;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.view.accessibility.IAccessibilityInteractionConnection: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.view.accessibility.IWindowMagnificationConnection r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r6 := @parameter0: android.view.accessibility.IWindowMagnificationConnection;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.view.accessibility.IWindowMagnificationConnection: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r4.<android.view.accessibility.IAccessibilityManager: void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName, boolean) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;
        byte b0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.content.ComponentName;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        b0 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>(r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void unregisterSystemAction(int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void unregisterSystemAction(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.accessibilityservice.IAccessibilityServiceClient r7;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        r7 := @parameter0: android.accessibilityservice.IAccessibilityServiceClient;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.view.accessibility.IAccessibilityManager: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
