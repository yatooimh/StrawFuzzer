public abstract class android.view.accessibility.IAccessibilityManager$Stub extends android.os.Binder implements android.view.accessibility.IAccessibilityManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addAccessibilityInteractionConnection;
    static final int TRANSACTION_addClient;
    static final int TRANSACTION_associateEmbeddedHierarchy;
    static final int TRANSACTION_disassociateEmbeddedHierarchy;
    static final int TRANSACTION_getAccessibilityShortcutTargets;
    static final int TRANSACTION_getAccessibilityWindowId;
    static final int TRANSACTION_getEnabledAccessibilityServiceList;
    static final int TRANSACTION_getInstalledAccessibilityServiceList;
    static final int TRANSACTION_getRecommendedTimeoutMillis;
    static final int TRANSACTION_getWindowToken;
    static final int TRANSACTION_interrupt;
    static final int TRANSACTION_notifyAccessibilityButtonClicked;
    static final int TRANSACTION_notifyAccessibilityButtonVisibilityChanged;
    static final int TRANSACTION_performAccessibilityShortcut;
    static final int TRANSACTION_registerSystemAction;
    static final int TRANSACTION_registerUiTestAutomationService;
    static final int TRANSACTION_removeAccessibilityInteractionConnection;
    static final int TRANSACTION_sendAccessibilityEvent;
    static final int TRANSACTION_sendFingerprintGesture;
    static final int TRANSACTION_setPictureInPictureActionReplacingConnection;
    static final int TRANSACTION_setWindowMagnificationConnection;
    static final int TRANSACTION_temporaryEnableAccessibilityStateUntilKeyguardRemoved;
    static final int TRANSACTION_unregisterSystemAction;
    static final int TRANSACTION_unregisterUiTestAutomationService;

    public void <init>()
    {
        android.view.accessibility.IAccessibilityManager$Stub r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.view.accessibility.IAccessibilityManager");

        return;
    }

    public static android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.view.accessibility.IAccessibilityManager$Stub$Proxy $r2;
        boolean $z0;
        android.view.accessibility.IAccessibilityManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.view.accessibility.IAccessibilityManager;

        if $z0 == 0 goto label2;

        $r3 = (android.view.accessibility.IAccessibilityManager) r1;

        return $r3;

     label2:
        $r2 = new android.view.accessibility.IAccessibilityManager$Stub$Proxy;

        specialinvoke $r2.<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.view.accessibility.IAccessibilityManager getDefaultImpl()
    {
        android.view.accessibility.IAccessibilityManager $r0;

        $r0 = <android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.view.accessibility.IAccessibilityManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label25;
            case 2: goto label24;
            case 3: goto label23;
            case 4: goto label22;
            case 5: goto label21;
            case 6: goto label20;
            case 7: goto label19;
            case 8: goto label18;
            case 9: goto label17;
            case 10: goto label16;
            case 11: goto label15;
            case 12: goto label14;
            case 13: goto label13;
            case 14: goto label12;
            case 15: goto label11;
            case 16: goto label10;
            case 17: goto label09;
            case 18: goto label08;
            case 19: goto label07;
            case 20: goto label06;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label03;
            case 24: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "disassociateEmbeddedHierarchy";

     label03:
        return "associateEmbeddedHierarchy";

     label04:
        return "setWindowMagnificationConnection";

     label05:
        return "unregisterSystemAction";

     label06:
        return "registerSystemAction";

     label07:
        return "getRecommendedTimeoutMillis";

     label08:
        return "getAccessibilityWindowId";

     label09:
        return "sendFingerprintGesture";

     label10:
        return "getAccessibilityShortcutTargets";

     label11:
        return "performAccessibilityShortcut";

     label12:
        return "notifyAccessibilityButtonVisibilityChanged";

     label13:
        return "notifyAccessibilityButtonClicked";

     label14:
        return "getWindowToken";

     label15:
        return "temporaryEnableAccessibilityStateUntilKeyguardRemoved";

     label16:
        return "unregisterUiTestAutomationService";

     label17:
        return "registerUiTestAutomationService";

     label18:
        return "setPictureInPictureActionReplacingConnection";

     label19:
        return "removeAccessibilityInteractionConnection";

     label20:
        return "addAccessibilityInteractionConnection";

     label21:
        return "getEnabledAccessibilityServiceList";

     label22:
        return "getInstalledAccessibilityServiceList";

     label23:
        return "addClient";

     label24:
        return "sendAccessibilityEvent";

     label25:
        return "interrupt";
    }

    public static boolean setDefaultImpl(android.view.accessibility.IAccessibilityManager)
    {
        android.view.accessibility.IAccessibilityManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.view.accessibility.IAccessibilityManager;

        $r1 = <android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.view.accessibility.IAccessibilityManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.view.accessibility.IAccessibilityManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.view.accessibility.IAccessibilityManager$Stub r0;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.view.accessibility.IAccessibilityManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.view.accessibility.IAccessibilityManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityManager$Stub r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i24, i25, i27;
        android.os.IBinder r1, $r3, $r4, $r5, $r6, $r10, $r15, $r17, $r20, $r22, $r24, $r26, $r27, $r30, r38;
        android.accessibilityservice.IAccessibilityServiceClient r2, $r16;
        android.view.accessibility.IWindowMagnificationConnection $r7;
        android.os.Parcelable$Creator $r8, $r13, $r18, $r32;
        java.lang.Object $r9, $r14, $r19, $r33;
        java.lang.String $r11, $r12, $r29;
        android.view.accessibility.IAccessibilityInteractionConnection $r21, $r28;
        android.view.IWindow $r23, $r25;
        android.view.accessibility.IAccessibilityManagerClient $r31;
        boolean $z1, z2, z3, z4;
        android.os.Parcel r34, r35;
        android.app.RemoteAction r36;
        long l23, l26;
        java.util.List r37, r41, r42;
        android.content.ComponentName r39;
        android.accessibilityservice.AccessibilityServiceInfo r40;
        android.view.accessibility.AccessibilityEvent r43;

        r0 := @this: android.view.accessibility.IAccessibilityManager$Stub;

        i22 := @parameter0: int;

        r34 := @parameter1: android.os.Parcel;

        r35 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i22 == 1598968902 goto label36;

        z2 = 0;

        tableswitch(i22)
        {
            case 1: goto label35;
            case 2: goto label32;
            case 3: goto label31;
            case 4: goto label30;
            case 5: goto label29;
            case 6: goto label28;
            case 7: goto label27;
            case 8: goto label26;
            case 9: goto label23;
            case 10: goto label22;
            case 11: goto label18;
            case 12: goto label17;
            case 13: goto label16;
            case 14: goto label14;
            case 15: goto label13;
            case 16: goto label12;
            case 17: goto label11;
            case 18: goto label10;
            case 19: goto label09;
            case 20: goto label06;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label03;
            case 24: goto label02;
            default: goto label01;
        };

     label01:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i22, r34, r35, i0);

        return $z1;

     label02:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r3 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void disassociateEmbeddedHierarchy(android.os.IBinder)>($r3);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r4 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r5 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void associateEmbeddedHierarchy(android.os.IBinder,android.os.IBinder)>($r4, $r5);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r6 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r7 = staticinvoke <android.view.accessibility.IWindowMagnificationConnection$Stub: android.view.accessibility.IWindowMagnificationConnection asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void setWindowMagnificationConnection(android.view.accessibility.IWindowMagnificationConnection)>($r7);

        return 1;

     label05:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i1 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void unregisterSystemAction(int)>($i1);

        return 1;

     label06:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i2 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label07;

        $r8 = <android.app.RemoteAction: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r34);

        r36 = (android.app.RemoteAction) $r9;

        goto label08;

     label07:
        r36 = null;

     label08:
        $i3 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void registerSystemAction(android.app.RemoteAction,int)>(r36, $i3);

        return 1;

     label09:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        l23 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: long getRecommendedTimeoutMillis()>();

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeLong(long)>(l23);

        return 1;

     label10:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r10 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i24 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: int getAccessibilityWindowId(android.os.IBinder)>($r10);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeInt(int)>(i24);

        return 1;

     label11:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i4 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        z3 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: boolean sendFingerprintGesture(int)>($i4);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        i27 = (int) z3;

        virtualinvoke r35.<android.os.Parcel: void writeInt(int)>(i27);

        return 1;

     label12:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i5 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        r37 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: java.util.List getAccessibilityShortcutTargets(int)>($i5);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeStringList(java.util.List)>(r37);

        return 1;

     label13:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r11 = virtualinvoke r34.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void performAccessibilityShortcut(java.lang.String)>($r11);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i6 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label15;

        z2 = 1;

     label15:
        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void notifyAccessibilityButtonVisibilityChanged(boolean)>(z2);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label16:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i7 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        $r12 = virtualinvoke r34.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void notifyAccessibilityButtonClicked(int,java.lang.String)>($i7, $r12);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i8 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        r38 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder getWindowToken(int,int)>($i8, $i9);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r38);

        return 1;

     label18:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i10 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label19;

        $r13 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r34);

        r39 = (android.content.ComponentName) $r14;

        goto label20;

     label19:
        r39 = null;

     label20:
        z4 = 0;

        $i11 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i11 == 0 goto label21;

        z4 = 1;

     label21:
        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>(r39, z4);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r15 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r16 = staticinvoke <android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>($r16);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        r1 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r17 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r2 = staticinvoke <android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>($r17);

        $i12 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label24;

        $r18 = <android.accessibilityservice.AccessibilityServiceInfo: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r18.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r34);

        r40 = (android.accessibilityservice.AccessibilityServiceInfo) $r19;

        goto label25;

     label24:
        r40 = null;

     label25:
        $i13 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>(r1, r2, r40, $i13);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label26:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r20 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)>($r21);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label27:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r22 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r23 = staticinvoke <android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>($r22);

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void removeAccessibilityInteractionConnection(android.view.IWindow)>($r23);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        return 1;

     label28:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r24 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r25 = staticinvoke <android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>($r24);

        $r26 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r28 = staticinvoke <android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)>($r27);

        $r29 = virtualinvoke r34.<android.os.Parcel: java.lang.String readString()>();

        $i14 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        i25 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: int addAccessibilityInteractionConnection(android.view.IWindow,android.os.IBinder,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>($r25, $r26, $r28, $r29, $i14);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeInt(int)>(i25);

        return 1;

     label29:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i15 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        $i16 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        r41 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: java.util.List getEnabledAccessibilityServiceList(int,int)>($i15, $i16);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeTypedList(java.util.List)>(r41);

        return 1;

     label30:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i17 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        r42 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: java.util.List getInstalledAccessibilityServiceList(int)>($i17);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeTypedList(java.util.List)>(r42);

        return 1;

     label31:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $r30 = virtualinvoke r34.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r31 = staticinvoke <android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient asInterface(android.os.IBinder)>($r30);

        $i18 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        l26 = virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: long addClient(android.view.accessibility.IAccessibilityManagerClient,int)>($r31, $i18);

        virtualinvoke r35.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r35.<android.os.Parcel: void writeLong(long)>(l26);

        return 1;

     label32:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i19 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label33;

        $r32 = <android.view.accessibility.AccessibilityEvent: android.os.Parcelable$Creator CREATOR>;

        $r33 = interfaceinvoke $r32.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r34);

        r43 = (android.view.accessibility.AccessibilityEvent) $r33;

        goto label34;

     label33:
        r43 = null;

     label34:
        $i20 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>(r43, $i20);

        return 1;

     label35:
        virtualinvoke r34.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        $i21 = virtualinvoke r34.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.accessibility.IAccessibilityManager$Stub: void interrupt(int)>($i21);

        return 1;

     label36:
        virtualinvoke r35.<android.os.Parcel: void writeString(java.lang.String)>("android.view.accessibility.IAccessibilityManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_unregisterUiTestAutomationService> = 10;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_unregisterSystemAction> = 21;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_temporaryEnableAccessibilityStateUntilKeyguardRemoved> = 11;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_setWindowMagnificationConnection> = 22;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_setPictureInPictureActionReplacingConnection> = 8;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_sendFingerprintGesture> = 17;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_sendAccessibilityEvent> = 2;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_removeAccessibilityInteractionConnection> = 7;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_registerUiTestAutomationService> = 9;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_registerSystemAction> = 20;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_performAccessibilityShortcut> = 15;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_notifyAccessibilityButtonVisibilityChanged> = 14;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_notifyAccessibilityButtonClicked> = 13;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_interrupt> = 1;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getWindowToken> = 12;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getRecommendedTimeoutMillis> = 19;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getInstalledAccessibilityServiceList> = 4;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getEnabledAccessibilityServiceList> = 5;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getAccessibilityWindowId> = 18;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_getAccessibilityShortcutTargets> = 16;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_disassociateEmbeddedHierarchy> = 24;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_associateEmbeddedHierarchy> = 23;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_addClient> = 3;

        <android.view.accessibility.IAccessibilityManager$Stub: int TRANSACTION_addAccessibilityInteractionConnection> = 6;

        <android.view.accessibility.IAccessibilityManager$Stub: java.lang.String DESCRIPTOR> = "android.view.accessibility.IAccessibilityManager";

        return;
    }
}
