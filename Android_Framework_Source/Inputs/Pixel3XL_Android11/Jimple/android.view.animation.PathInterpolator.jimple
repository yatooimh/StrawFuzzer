public class android.view.animation.PathInterpolator extends android.view.animation.BaseInterpolator implements android.graphics.animation.NativeInterpolator
{
    private static final float PRECISION;
    private float[] mX;
    private float[] mY;

    public void <init>(float, float)
    {
        android.view.animation.PathInterpolator r0;
        float f0, f1;

        r0 := @this: android.view.animation.PathInterpolator;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.view.animation.BaseInterpolator: void <init>()>();

        specialinvoke r0.<android.view.animation.PathInterpolator: void initQuad(float,float)>(f0, f1);

        return;
    }

    public void <init>(float, float, float, float)
    {
        android.view.animation.PathInterpolator r0;
        float f0, f1, f2, f3;

        r0 := @this: android.view.animation.PathInterpolator;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<android.view.animation.BaseInterpolator: void <init>()>();

        specialinvoke r0.<android.view.animation.PathInterpolator: void initCubic(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.PathInterpolator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Resources $r3;
        android.content.res.Resources$Theme $r4;

        r0 := @this: android.view.animation.PathInterpolator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke r0.<android.view.animation.PathInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>($r3, $r4, r2);

        return;
    }

    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet)
    {
        android.view.animation.PathInterpolator r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        int[] $r3, $r4;
        int $i0;
        android.content.res.Resources r5;
        android.content.res.TypedArray r6;

        r0 := @this: android.view.animation.PathInterpolator;

        r5 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        specialinvoke r0.<android.view.animation.BaseInterpolator: void <init>()>();

        if r1 == null goto label1;

        $r4 = <com.android.internal.R$styleable: int[] PathInterpolator>;

        r6 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, 0, 0);

        goto label2;

     label1:
        $r3 = <com.android.internal.R$styleable: int[] PathInterpolator>;

        r6 = virtualinvoke r5.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r3);

     label2:
        specialinvoke r0.<android.view.animation.PathInterpolator: void parseInterpolatorFromTypeArray(android.content.res.TypedArray)>(r6);

        $i0 = virtualinvoke r6.<android.content.res.TypedArray: int getChangingConfigurations()>();

        virtualinvoke r0.<android.view.animation.PathInterpolator: void setChangingConfiguration(int)>($i0);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.graphics.Path)
    {
        android.view.animation.PathInterpolator r0;
        android.graphics.Path r1;

        r0 := @this: android.view.animation.PathInterpolator;

        r1 := @parameter0: android.graphics.Path;

        specialinvoke r0.<android.view.animation.BaseInterpolator: void <init>()>();

        specialinvoke r0.<android.view.animation.PathInterpolator: void initPath(android.graphics.Path)>(r1);

        return;
    }

    private void initCubic(float, float, float, float)
    {
        android.view.animation.PathInterpolator r0;
        float f0, f1, f2, f3;
        android.graphics.Path $r2;

        r0 := @this: android.view.animation.PathInterpolator;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        virtualinvoke $r2.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke $r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f0, f1, f2, f3, 1.0F, 1.0F);

        specialinvoke r0.<android.view.animation.PathInterpolator: void initPath(android.graphics.Path)>($r2);

        return;
    }

    private void initPath(android.graphics.Path)
    {
        android.view.animation.PathInterpolator r0;
        int i0, i1, $i2, $i5, $i6, $i8, $i9, i14, i15, i16;
        float f0, f1, f2, $f3, $f4, $f5, $f6, f7, f8;
        byte $b3, $b4, $b7, $b10, $b11, $b12, $b13;
        float[] $r1, $r2, $r4, $r5, r8;
        java.lang.IllegalArgumentException $r3, $r6, $r9;
        android.graphics.Path r7;

        r0 := @this: android.view.animation.PathInterpolator;

        r7 := @parameter0: android.graphics.Path;

        r8 = virtualinvoke r7.<android.graphics.Path: float[] approximate(float)>(0.002F);

        $i2 = lengthof r8;

        i0 = $i2 / 3;

        $f3 = r8[1];

        $b3 = $f3 cmpl 0.0F;

        if $b3 != 0 goto label6;

        $f4 = r8[2];

        $b4 = $f4 cmpl 0.0F;

        if $b4 != 0 goto label6;

        $i5 = lengthof r8;

        $i6 = $i5 - 2;

        $f5 = r8[$i6];

        $b7 = $f5 cmpl 1.0F;

        if $b7 != 0 goto label6;

        $i8 = lengthof r8;

        $i9 = $i8 - 1;

        $f6 = r8[$i9];

        $b10 = $f6 cmpl 1.0F;

        if $b10 != 0 goto label6;

        $r1 = newarray (float)[i0];

        r0.<android.view.animation.PathInterpolator: float[] mX> = $r1;

        $r2 = newarray (float)[i0];

        r0.<android.view.animation.PathInterpolator: float[] mY> = $r2;

        f7 = 0.0F;

        f8 = 0.0F;

        i14 = 0;

        i15 = 0;

     label1:
        if i15 >= i0 goto label5;

        i1 = i14 + 1;

        f0 = r8[i14];

        i16 = i1 + 1;

        f1 = r8[i1];

        f2 = r8[i16];

        $b11 = f0 cmpl f8;

        if $b11 != 0 goto label3;

        $b13 = f1 cmpl f7;

        if $b13 != 0 goto label2;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path cannot have discontinuity in the X axis.");

        throw $r6;

     label3:
        $b12 = f1 cmpg f7;

        if $b12 < 0 goto label4;

        $r4 = r0.<android.view.animation.PathInterpolator: float[] mX>;

        $r4[i15] = f1;

        $r5 = r0.<android.view.animation.PathInterpolator: float[] mY>;

        $r5[i15] = f2;

        f7 = f1;

        f8 = f0;

        i15 = i15 + 1;

        i14 = i16 + 1;

        goto label1;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path cannot loop back on itself.");

        throw $r3;

     label5:
        return;

     label6:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path must start at (0,0) and end at (1,1)");

        throw $r9;
    }

    private void initQuad(float, float)
    {
        android.view.animation.PathInterpolator r0;
        float f0, f1;
        android.graphics.Path $r2;

        r0 := @this: android.view.animation.PathInterpolator;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        virtualinvoke $r2.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke $r2.<android.graphics.Path: void quadTo(float,float,float,float)>(f0, f1, 1.0F, 1.0F);

        specialinvoke r0.<android.view.animation.PathInterpolator: void initPath(android.graphics.Path)>($r2);

        return;
    }

    private void parseInterpolatorFromTypeArray(android.content.res.TypedArray)
    {
        android.view.animation.PathInterpolator r0;
        float f0, f1, $f2, $f3;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.InflateException $r1, $r2, $r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.String $r8, r10;
        android.content.res.TypedArray r9;
        android.graphics.Path r11;

        r0 := @this: android.view.animation.PathInterpolator;

        r9 := @parameter0: android.content.res.TypedArray;

        $z1 = virtualinvoke r9.<android.content.res.TypedArray: boolean hasValue(int)>(4);

        if $z1 == 0 goto label2;

        r10 = virtualinvoke r9.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        r11 = staticinvoke <android.util.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r10);

        if r11 == null goto label1;

        specialinvoke r0.<android.view.animation.PathInterpolator: void initPath(android.graphics.Path)>(r11);

        goto label4;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The path is null, which is created from ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r7 = new android.view.InflateException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.view.InflateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        $z2 = virtualinvoke r9.<android.content.res.TypedArray: boolean hasValue(int)>(0);

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r9.<android.content.res.TypedArray: boolean hasValue(int)>(1);

        if $z3 == 0 goto label6;

        f0 = virtualinvoke r9.<android.content.res.TypedArray: float getFloat(int,float)>(0, 0.0F);

        f1 = virtualinvoke r9.<android.content.res.TypedArray: float getFloat(int,float)>(1, 0.0F);

        z0 = virtualinvoke r9.<android.content.res.TypedArray: boolean hasValue(int)>(2);

        $z4 = virtualinvoke r9.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if z0 != $z4 goto label5;

        if z0 != 0 goto label3;

        specialinvoke r0.<android.view.animation.PathInterpolator: void initQuad(float,float)>(f0, f1);

        goto label4;

     label3:
        $f2 = virtualinvoke r9.<android.content.res.TypedArray: float getFloat(int,float)>(2, 0.0F);

        $f3 = virtualinvoke r9.<android.content.res.TypedArray: float getFloat(int,float)>(3, 0.0F);

        specialinvoke r0.<android.view.animation.PathInterpolator: void initCubic(float,float,float,float)>(f0, f1, $f2, $f3);

     label4:
        return;

     label5:
        $r3 = new android.view.InflateException;

        specialinvoke $r3.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires both controlX2 and controlY2 for cubic Beziers.");

        throw $r3;

     label6:
        $r2 = new android.view.InflateException;

        specialinvoke $r2.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlY1 attribute");

        throw $r2;

     label7:
        $r1 = new android.view.InflateException;

        specialinvoke $r1.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlX1 attribute");

        throw $r1;
    }

    public long createNativeInterpolator()
    {
        android.view.animation.PathInterpolator r0;
        float[] $r1, $r2;
        long $l0;

        r0 := @this: android.view.animation.PathInterpolator;

        $r2 = r0.<android.view.animation.PathInterpolator: float[] mX>;

        $r1 = r0.<android.view.animation.PathInterpolator: float[] mY>;

        $l0 = staticinvoke <android.graphics.animation.NativeInterpolatorFactory: long createPathInterpolator(float[],float[])>($r2, $r1);

        return $l0;
    }

    public float getInterpolation(float)
    {
        android.view.animation.PathInterpolator r0;
        int i0, $i3, $i4, $i6, i8, i9;
        byte $b1, $b2, $b5, $b7;
        float[] $r1, $r2, $r3, r4, r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13;

        r0 := @this: android.view.animation.PathInterpolator;

        f10 := @parameter0: float;

        $b1 = f10 cmpg 0.0F;

        if $b1 > 0 goto label1;

        return 0.0F;

     label1:
        $b2 = f10 cmpl 1.0F;

        if $b2 < 0 goto label2;

        return 1.0F;

     label2:
        i8 = 0;

        $r1 = r0.<android.view.animation.PathInterpolator: float[] mX>;

        $i3 = lengthof $r1;

        i9 = $i3 - 1;

     label3:
        $i4 = i9 - i8;

        if $i4 <= 1 goto label6;

        $i6 = i8 + i9;

        i0 = $i6 / 2;

        $r3 = r0.<android.view.animation.PathInterpolator: float[] mX>;

        $f9 = $r3[i0];

        $b7 = f10 cmpg $f9;

        if $b7 >= 0 goto label4;

        i9 = i0;

        goto label5;

     label4:
        i8 = i0;

     label5:
        goto label3;

     label6:
        r4 = r0.<android.view.animation.PathInterpolator: float[] mX>;

        $f1 = r4[i9];

        $f0 = r4[i8];

        f11 = $f1 - $f0;

        $b5 = f11 cmpl 0.0F;

        if $b5 != 0 goto label7;

        $r2 = r0.<android.view.animation.PathInterpolator: float[] mY>;

        $f8 = $r2[i8];

        return $f8;

     label7:
        $f2 = r4[i8];

        $f3 = f10 - $f2;

        f12 = $f3 / f11;

        r5 = r0.<android.view.animation.PathInterpolator: float[] mY>;

        f13 = r5[i8];

        $f4 = r5[i9];

        $f5 = $f4 - f13;

        $f6 = $f5 * f12;

        $f7 = $f6 + f13;

        return $f7;
    }

    public static void <clinit>()
    {
        <android.view.animation.PathInterpolator: float PRECISION> = 0.002F;

        return;
    }
}
