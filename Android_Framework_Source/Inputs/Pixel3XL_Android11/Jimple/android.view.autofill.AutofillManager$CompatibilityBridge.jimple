final class android.view.autofill.AutofillManager$CompatibilityBridge extends java.lang.Object implements android.view.accessibility.AccessibilityManager$AccessibilityPolicy
{
    android.accessibilityservice.AccessibilityServiceInfo mCompatServiceInfo;
    private final android.graphics.Rect mFocusedBounds;
    private long mFocusedNodeId;
    private int mFocusedWindowId;
    private final android.graphics.Rect mTempBounds;
    final android.view.autofill.AutofillManager this$0;

    void <init>(android.view.autofill.AutofillManager)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        android.view.autofill.AutofillManager r1;
        android.graphics.Rect $r2, $r3;
        long $l0;
        android.content.Context $r4;
        android.view.accessibility.AccessibilityManager $r5;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        r1 := @parameter0: android.view.autofill.AutofillManager;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mFocusedBounds> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mTempBounds> = $r3;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId> = -1;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId> = $l0;

        $r4 = staticinvoke <android.view.autofill.AutofillManager: android.content.Context access$700(android.view.autofill.AutofillManager)>(r1);

        $r5 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r4);

        virtualinvoke $r5.<android.view.accessibility.AccessibilityManager: void setAccessibilityPolicy(android.view.accessibility.AccessibilityManager$AccessibilityPolicy)>(r0);

        return;
    }

    static int access$400(android.view.autofill.AutofillManager$CompatibilityBridge)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int $i0;

        r0 := @parameter0: android.view.autofill.AutofillManager$CompatibilityBridge;

        $i0 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        return $i0;
    }

    static long access$500(android.view.autofill.AutofillManager$CompatibilityBridge)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        long $l0;

        r0 := @parameter0: android.view.autofill.AutofillManager$CompatibilityBridge;

        $l0 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        return $l0;
    }

    static android.graphics.Rect access$600(android.view.autofill.AutofillManager$CompatibilityBridge)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.autofill.AutofillManager$CompatibilityBridge;

        $r1 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mFocusedBounds>;

        return $r1;
    }

    private android.view.View findViewByAccessibilityId(int, long)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, $i2;
        long l1;
        android.view.autofill.AutofillManager$AutofillClient r1;
        android.view.autofill.AutofillManager $r2;
        android.view.View $r3;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r1 = staticinvoke <android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$AutofillClient access$900(android.view.autofill.AutofillManager)>($r2);

        if r1 != null goto label1;

        return null;

     label1:
        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l1);

        $r3 = interfaceinvoke r1.<android.view.autofill.AutofillManager$AutofillClient: android.view.View autofillClientFindViewByAccessibilityIdTraversal(int,int)>($i2, i0);

        return $r3;
    }

    private android.view.accessibility.AccessibilityNodeInfo findVirtualNodeByAccessibilityId(android.view.View, int)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeProvider r3;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        r2 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r3 = virtualinvoke r2.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i0);

        return $r1;
    }

    private android.accessibilityservice.AccessibilityServiceInfo getCompatServiceInfo()
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        java.lang.Object r1;
        android.accessibilityservice.AccessibilityServiceInfo r2, $r4, r16;
        android.view.autofill.AutofillManager $r3, $r6, $r9;
        android.content.Context $r7, $r10;
        android.content.pm.PackageManager $r8;
        java.lang.Throwable $r11, $r12;
        java.lang.String $r15;
        android.content.Intent r17;
        android.content.ComponentName r18;
        android.content.pm.ResolveInfo r19;
        java.lang.StringBuilder r21;
        java.lang.IllegalStateException r22;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        $r3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r1 = staticinvoke <android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>($r3);

        entermonitor r1;

     label01:
        $r4 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.accessibilityservice.AccessibilityServiceInfo mCompatServiceInfo>;

        if $r4 == null goto label03;

        r16 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.accessibilityservice.AccessibilityServiceInfo mCompatServiceInfo>;

        exitmonitor r1;

     label02:
        return r16;

     label03:
        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>()>();

        r18 = new android.content.ComponentName;

        specialinvoke r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "com.android.server.autofill.AutofillCompatAccessibilityService");

        virtualinvoke r17.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r18);

        $r6 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r7 = staticinvoke <android.view.autofill.AutofillManager: android.content.Context access$700(android.view.autofill.AutofillManager)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r19 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>(r17, 1048704);

     label04:
        r2 = new android.accessibilityservice.AccessibilityServiceInfo;

        $r9 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r10 = staticinvoke <android.view.autofill.AutofillManager: android.content.Context access$700(android.view.autofill.AutofillManager)>($r9);

        specialinvoke r2.<android.accessibilityservice.AccessibilityServiceInfo: void <init>(android.content.pm.ResolveInfo,android.content.Context)>(r19, $r10);

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.accessibilityservice.AccessibilityServiceInfo mCompatServiceInfo> = r2;

     label05:
        exitmonitor r1;

     label06:
        return r2;

     label07:
        $r12 := @caughtexception;

     label08:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find compat autofill service:");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r15 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AutofillManager", $r15);

        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot find compat autofill service");

        throw r22;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label07;
        catch java.io.IOException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean isVirtualNode(int)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0;
        boolean z0;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        if i0 == -1 goto label1;

        if i0 == 2147483647 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void notifyValueChanged(int, long)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, i2;
        long l1;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        boolean $z0;
        android.view.autofill.AutofillManager $r3;
        java.lang.CharSequence $r4;
        android.view.autofill.AutofillValue $r5;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l1);

        $z0 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean isVirtualNode(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.View findViewByAccessibilityId(int,long)>(i0, l1);

        if r1 != null goto label2;

        return;

     label2:
        r2 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.accessibility.AccessibilityNodeInfo findVirtualNodeByAccessibilityId(android.view.View,int)>(r1, i2);

        if r2 != null goto label3;

        return;

     label3:
        $r3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r4 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $r5 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forText(java.lang.CharSequence)>($r4);

        virtualinvoke $r3.<android.view.autofill.AutofillManager: void notifyValueChanged(android.view.View,int,android.view.autofill.AutofillValue)>(r1, i2, $r5);

        return;
    }

    private void notifyViewClicked(int, long)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, i2;
        long l1;
        android.view.View r1;
        boolean $z0;
        android.view.accessibility.AccessibilityNodeInfo $r2;
        android.view.autofill.AutofillManager $r3;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l1);

        $z0 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean isVirtualNode(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.View findViewByAccessibilityId(int,long)>(i0, l1);

        if r1 != null goto label2;

        return;

     label2:
        $r2 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.accessibility.AccessibilityNodeInfo findVirtualNodeByAccessibilityId(android.view.View,int)>(r1, i2);

        if $r2 != null goto label3;

        return;

     label3:
        $r3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        virtualinvoke $r3.<android.view.autofill.AutofillManager: void notifyViewClicked(android.view.View,int)>(r1, i2);

        return;
    }

    private boolean notifyViewEntered(int, long, android.graphics.Rect)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, i2;
        long l1;
        android.graphics.Rect r1, r4;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        boolean $z0, $z1, $z2;
        android.view.autofill.AutofillManager $r5;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.graphics.Rect;

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l1);

        $z0 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean isVirtualNode(int)>(i2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.View findViewByAccessibilityId(int,long)>(i0, l1);

        if r2 != null goto label2;

        return 0;

     label2:
        r3 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.accessibility.AccessibilityNodeInfo findVirtualNodeByAccessibilityId(android.view.View,int)>(r2, i2);

        if r3 != null goto label3;

        return 0;

     label3:
        $z1 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>();

        if $z1 != 0 goto label4;

        return 0;

     label4:
        r4 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mTempBounds>;

        virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r4);

        $z2 = virtualinvoke r4.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        return 0;

     label5:
        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r4);

        $r5 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        virtualinvoke $r5.<android.view.autofill.AutofillManager: void notifyViewEntered(android.view.View,int,android.graphics.Rect)>(r2, i2, r4);

        return 1;
    }

    private void notifyViewExited(int, long)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, i2;
        long l1;
        android.view.View r1;
        boolean $z0;
        android.view.autofill.AutofillManager $r2;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l1);

        $z0 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean isVirtualNode(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.View findViewByAccessibilityId(int,long)>(i0, l1);

        if r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        virtualinvoke $r2.<android.view.autofill.AutofillManager: void notifyViewExited(android.view.View,int)>(r1, i2);

        return;
    }

    private void updateTrackedViewsLocked()
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        android.view.autofill.AutofillManager $r1, $r3;
        android.view.autofill.AutofillManager$TrackedViews $r2, $r4;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        $r1 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r2 = staticinvoke <android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$TrackedViews access$1000(android.view.autofill.AutofillManager)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r4 = staticinvoke <android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$TrackedViews access$1000(android.view.autofill.AutofillManager)>($r3);

        virtualinvoke $r4.<android.view.autofill.AutofillManager$TrackedViews: void onVisibleForAutofillChangedLocked()>();

     label1:
        return;
    }

    public java.util.List getEnabledAccessibilityServiceList(int, java.util.List)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0;
        java.util.List r1, r6, r7;
        android.accessibilityservice.AccessibilityServiceInfo $r2;
        java.lang.Object r4;
        java.util.ArrayList r5;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r4 = r1;

        if r1 != null goto label1;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        r4 = r5;

     label1:
        $r2 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.accessibilityservice.AccessibilityServiceInfo getCompatServiceInfo()>();

        r6 = (java.util.List) r4;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r2);

        r7 = (java.util.List) r4;

        return r7;
    }

    public java.util.List getInstalledAccessibilityServiceList(java.util.List)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        java.util.List r1, r6, r7;
        android.accessibilityservice.AccessibilityServiceInfo $r2;
        java.lang.Object r4;
        java.util.ArrayList r5;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        r1 := @parameter0: java.util.List;

        r4 = r1;

        if r1 != null goto label1;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        r4 = r5;

     label1:
        $r2 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.accessibilityservice.AccessibilityServiceInfo getCompatServiceInfo()>();

        r6 = (java.util.List) r4;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r2);

        r7 = (java.util.List) r4;

        return r7;
    }

    public int getRelevantEventTypes(int)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        i0 := @parameter0: int;

        $i1 = i0 | 8;

        $i2 = $i1 | 16;

        $i3 = $i2 | 1;

        $i4 = $i3 | 2048;

        return $i4;
    }

    public boolean isEnabled(boolean)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        boolean z0;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        z0 := @parameter0: boolean;

        return 1;
    }

    public android.view.accessibility.AccessibilityEvent onAccessibilityEvent(android.view.accessibility.AccessibilityEvent, boolean, int)
    {
        android.view.autofill.AutofillManager$CompatibilityBridge r0;
        boolean z0, $z1, $z2, $z4;
        android.view.autofill.AutofillManager$AutofillClient r1, $r17;
        long l0, $l2, $l6, $l7, $l9, $l11, $l12, $l13, $l17, $l18, $l21, $l22, $l24;
        android.view.autofill.AutofillManager $r2, $r3, $r5, $r6, $r7, $r16;
        int $i1, $i3, $i4, $i5, $i10, $i15, $i16, $i20, $i23, $i25, i27, i28, i29;
        byte $b8, $b14, $b19;
        android.graphics.Rect $r4, $r8, $r31;
        java.lang.StringBuilder $r9;
        java.lang.String $r11, $r19;
        java.lang.Throwable $r20, $r21, $r22, $r23;
        android.view.accessibility.AccessibilityEvent r24;
        java.lang.Object r26, r28, r30, r33;

        r0 := @this: android.view.autofill.AutofillManager$CompatibilityBridge;

        r24 := @parameter0: android.view.accessibility.AccessibilityEvent;

        z0 := @parameter1: boolean;

        i27 := @parameter2: int;

        i28 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        $z1 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z1 == 0 goto label01;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAccessibilityEvent(");

        $r11 = staticinvoke <android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>(i28);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): virtualId=");

        $l24 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $i25 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l24);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", client=");

        $r16 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        $r17 = staticinvoke <android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$AutofillClient access$900(android.view.autofill.AutofillManager)>($r16);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AutofillManager", $r19);

     label01:
        if i28 == 1 goto label26;

        if i28 == 8 goto label16;

        if i28 == 16 goto label09;

        if i28 == 2048 goto label02;

        goto label28;

     label02:
        $r6 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r1 = staticinvoke <android.view.autofill.AutofillManager: android.view.autofill.AutofillManager$AutofillClient access$900(android.view.autofill.AutofillManager)>($r6);

        if r1 == null goto label28;

        $r7 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r26 = staticinvoke <android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>($r7);

        entermonitor r26;

     label03:
        $z2 = interfaceinvoke r1.<android.view.autofill.AutofillManager$AutofillClient: boolean autofillClientIsFillUiShowing()>();

        if $z2 == 0 goto label04;

        $i23 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        $l22 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        $r8 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mFocusedBounds>;

        specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean notifyViewEntered(int,long,android.graphics.Rect)>($i23, $l22, $r8);

     label04:
        specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: void updateTrackedViewsLocked()>();

        exitmonitor r26;

     label05:
        goto label28;

     label06:
        $r20 := @caughtexception;

     label07:
        exitmonitor r26;

     label08:
        throw $r20;

     label09:
        $r5 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r28 = staticinvoke <android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>($r5);

        entermonitor r28;

     label10:
        $i15 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        $i16 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        if $i15 != $i16 goto label11;

        $l17 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        $l18 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $b19 = $l17 cmp $l18;

        if $b19 != 0 goto label11;

        $i20 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l21 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: void notifyValueChanged(int,long)>($i20, $l21);

     label11:
        exitmonitor r28;

     label12:
        goto label28;

     label13:
        $r22 := @caughtexception;

     label14:
        exitmonitor r28;

     label15:
        throw $r22;

     label16:
        $r3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r30 = staticinvoke <android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>($r3);

        entermonitor r30;

     label17:
        $i3 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        $i4 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        if $i3 != $i4 goto label19;

        $l12 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        $l13 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $b14 = $l12 cmp $l13;

        if $b14 != 0 goto label19;

        exitmonitor r30;

     label18:
        return r24;

     label19:
        $i5 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        if $i5 == -1 goto label20;

        $l7 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        $l6 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        $b8 = $l7 cmp $l6;

        if $b8 == 0 goto label20;

        $i10 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId>;

        $l9 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId>;

        specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: void notifyViewExited(int,long)>($i10, $l9);

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId> = -1;

        $l11 = <android.view.accessibility.AccessibilityNodeInfo: long UNDEFINED_NODE_ID>;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId> = $l11;

        $r4 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mFocusedBounds>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label20:
        i29 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        l0 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $r31 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.graphics.Rect mFocusedBounds>;

        $z4 = specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: boolean notifyViewEntered(int,long,android.graphics.Rect)>(i29, l0, $r31);

        if $z4 == 0 goto label21;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: int mFocusedWindowId> = i29;

        r0.<android.view.autofill.AutofillManager$CompatibilityBridge: long mFocusedNodeId> = l0;

     label21:
        exitmonitor r30;

     label22:
        goto label28;

     label23:
        $r21 := @caughtexception;

     label24:
        exitmonitor r30;

     label25:
        throw $r21;

     label26:
        $r2 = r0.<android.view.autofill.AutofillManager$CompatibilityBridge: android.view.autofill.AutofillManager this$0>;

        r33 = staticinvoke <android.view.autofill.AutofillManager: java.lang.Object access$800(android.view.autofill.AutofillManager)>($r2);

        entermonitor r33;

     label27:
        $i1 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l2 = virtualinvoke r24.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.autofill.AutofillManager$CompatibilityBridge: void notifyViewClicked(int,long)>($i1, $l2);

        exitmonitor r33;

     label28:
        if z0 == 0 goto label29;

        goto label30;

     label29:
        r24 = null;

     label30:
        return r24;

     label31:
        $r23 := @caughtexception;

     label32:
        exitmonitor r33;

     label33:
        throw $r23;

        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label27 to label28 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
    }
}
