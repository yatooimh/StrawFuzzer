class android.view.autofill.AutofillPopupWindow$WindowPresenter extends java.lang.Object
{
    final android.view.autofill.IAutofillWindowPresenter mPresenter;
    final android.view.autofill.AutofillPopupWindow this$0;

    void <init>(android.view.autofill.AutofillPopupWindow, android.view.autofill.IAutofillWindowPresenter)
    {
        android.view.autofill.AutofillPopupWindow$WindowPresenter r0;
        android.view.autofill.AutofillPopupWindow r1;
        android.view.autofill.IAutofillWindowPresenter r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow$WindowPresenter;

        r1 := @parameter0: android.view.autofill.AutofillPopupWindow;

        r2 := @parameter1: android.view.autofill.IAutofillWindowPresenter;

        r0.<android.view.autofill.AutofillPopupWindow$WindowPresenter: android.view.autofill.AutofillPopupWindow this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.autofill.AutofillPopupWindow$WindowPresenter: android.view.autofill.IAutofillWindowPresenter mPresenter> = r2;

        return;
    }

    void hide(android.graphics.Rect)
    {
        android.view.autofill.AutofillPopupWindow$WindowPresenter r0;
        android.view.autofill.IAutofillWindowPresenter $r1;
        android.os.RemoteException $r2;
        android.graphics.Rect r4;

        r0 := @this: android.view.autofill.AutofillPopupWindow$WindowPresenter;

        r4 := @parameter0: android.graphics.Rect;

     label1:
        $r1 = r0.<android.view.autofill.AutofillPopupWindow$WindowPresenter: android.view.autofill.IAutofillWindowPresenter mPresenter>;

        interfaceinvoke $r1.<android.view.autofill.IAutofillWindowPresenter: void hide(android.graphics.Rect)>(r4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AutofillPopupWindow", "Error hiding fill window", $r2);

        virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void show(android.view.WindowManager$LayoutParams, android.graphics.Rect, boolean, int)
    {
        android.view.autofill.AutofillPopupWindow$WindowPresenter r0;
        android.graphics.Rect r1;
        boolean z0;
        int i0;
        android.view.autofill.IAutofillWindowPresenter $r2;
        android.os.RemoteException $r3;
        android.view.WindowManager$LayoutParams r5;

        r0 := @this: android.view.autofill.AutofillPopupWindow$WindowPresenter;

        r5 := @parameter0: android.view.WindowManager$LayoutParams;

        r1 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

     label1:
        $r2 = r0.<android.view.autofill.AutofillPopupWindow$WindowPresenter: android.view.autofill.IAutofillWindowPresenter mPresenter>;

        interfaceinvoke $r2.<android.view.autofill.IAutofillWindowPresenter: void show(android.view.WindowManager$LayoutParams,android.graphics.Rect,boolean,int)>(r5, r1, z0, i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AutofillPopupWindow", "Error showing fill window", $r3);

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
