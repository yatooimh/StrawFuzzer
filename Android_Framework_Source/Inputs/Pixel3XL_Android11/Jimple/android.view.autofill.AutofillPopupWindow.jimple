public class android.view.autofill.AutofillPopupWindow extends android.widget.PopupWindow
{
    private static final java.lang.String TAG;
    private boolean mFullScreen;
    private final android.view.View$OnAttachStateChangeListener mOnAttachStateChangeListener;
    private android.view.WindowManager$LayoutParams mWindowLayoutParams;
    private final android.view.autofill.AutofillPopupWindow$WindowPresenter mWindowPresenter;

    public void <init>(android.view.autofill.IAutofillWindowPresenter)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.autofill.IAutofillWindowPresenter r1;
        android.view.autofill.AutofillPopupWindow$1 $r2;
        android.view.autofill.AutofillPopupWindow$WindowPresenter $r3;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.autofill.IAutofillWindowPresenter;

        specialinvoke r0.<android.widget.PopupWindow: void <init>()>();

        $r2 = new android.view.autofill.AutofillPopupWindow$1;

        specialinvoke $r2.<android.view.autofill.AutofillPopupWindow$1: void <init>(android.view.autofill.AutofillPopupWindow)>(r0);

        r0.<android.view.autofill.AutofillPopupWindow: android.view.View$OnAttachStateChangeListener mOnAttachStateChangeListener> = $r2;

        $r3 = new android.view.autofill.AutofillPopupWindow$WindowPresenter;

        specialinvoke $r3.<android.view.autofill.AutofillPopupWindow$WindowPresenter: void <init>(android.view.autofill.AutofillPopupWindow,android.view.autofill.IAutofillWindowPresenter)>(r0, r1);

        r0.<android.view.autofill.AutofillPopupWindow: android.view.autofill.AutofillPopupWindow$WindowPresenter mWindowPresenter> = $r3;

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setTouchModal(boolean)>(0);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setOutsideTouchable(boolean)>(1);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setInputMethodMode(int)>(2);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setFocusable(boolean)>(1);

        return;
    }

    static void lambda$update$0(int[], android.view.View, int, int, int, int)
    {
        int[] r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: int[];

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $i5 = r0[0];

        $i4 = i0 - i2;

        $i6 = $i5 - $i4;

        r0[0] = $i6;

        $i8 = r0[1];

        $i7 = i1 - i3;

        $i9 = $i8 - $i7;

        r0[1] = $i9;

        return;
    }

    protected void attachToAnchor(android.view.View, int, int, int)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        int i0, i1, i2;
        android.view.View$OnAttachStateChangeListener $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.widget.PopupWindow: void attachToAnchor(android.view.View,int,int,int)>(r1, i0, i1, i2);

        $r2 = r0.<android.view.autofill.AutofillPopupWindow: android.view.View$OnAttachStateChangeListener mOnAttachStateChangeListener>;

        virtualinvoke r1.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r2);

        return;
    }

    protected void detachFromAnchor()
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        android.view.View$OnAttachStateChangeListener $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.view.View getAnchor()>();

        if r1 == null goto label1;

        $r2 = r0.<android.view.autofill.AutofillPopupWindow: android.view.View$OnAttachStateChangeListener mOnAttachStateChangeListener>;

        virtualinvoke r1.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r2);

     label1:
        specialinvoke r0.<android.widget.PopupWindow: void detachFromAnchor()>();

        return;
    }

    public void dismiss()
    {
        android.view.autofill.AutofillPopupWindow r0;
        boolean $z0, $z1;
        android.view.autofill.AutofillPopupWindow$WindowPresenter $r1;
        android.graphics.Rect $r2;
        android.widget.PopupWindow$OnDismissListener $r3, $r4;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $z0 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isTransitioningToDismiss()>();

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setShowing(boolean)>(0);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setTransitioningToDismiss(boolean)>(1);

        $r1 = r0.<android.view.autofill.AutofillPopupWindow: android.view.autofill.AutofillPopupWindow$WindowPresenter mWindowPresenter>;

        $r2 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.graphics.Rect getTransitionEpicenter()>();

        virtualinvoke $r1.<android.view.autofill.AutofillPopupWindow$WindowPresenter: void hide(android.graphics.Rect)>($r2);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void detachFromAnchor()>();

        $r3 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.widget.PopupWindow$OnDismissListener getOnDismissListener()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.widget.PopupWindow$OnDismissListener getOnDismissListener()>();

        interfaceinvoke $r4.<android.widget.PopupWindow$OnDismissListener: void onDismiss()>();

     label2:
        return;

     label3:
        return;
    }

    protected boolean findDropDownPosition(android.view.View, android.view.WindowManager$LayoutParams, int, int, int, int, int, boolean)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        android.view.WindowManager$LayoutParams r2;
        int i0, i1, i2, i3, i4;
        boolean z0, $z1, $z2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.WindowManager$LayoutParams;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        z0 := @parameter7: boolean;

        $z1 = r0.<android.view.autofill.AutofillPopupWindow: boolean mFullScreen>;

        if $z1 == 0 goto label1;

        r2.<android.view.WindowManager$LayoutParams: int x> = i0;

        r2.<android.view.WindowManager$LayoutParams: int y> = i1;

        r2.<android.view.WindowManager$LayoutParams: int width> = i2;

        r2.<android.view.WindowManager$LayoutParams: int height> = i3;

        r2.<android.view.WindowManager$LayoutParams: int gravity> = i4;

        return 0;

     label1:
        $z2 = specialinvoke r0.<android.widget.PopupWindow: boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int,int,int,boolean)>(r1, r2, i0, i1, i2, i3, i4, z0);

        return $z2;
    }

    public int getAnimationStyle()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    public android.graphics.drawable.Drawable getBackground()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    public android.view.View getContentView()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    protected android.view.WindowManager$LayoutParams getDecorViewLayoutParams()
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = r0.<android.view.autofill.AutofillPopupWindow: android.view.WindowManager$LayoutParams mWindowLayoutParams>;

        return $r1;
    }

    public float getElevation()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    public android.transition.Transition getEnterTransition()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    public android.transition.Transition getExitTransition()
    {
        android.view.autofill.AutofillPopupWindow r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    protected boolean hasContentView()
    {
        android.view.autofill.AutofillPopupWindow r0;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        return 1;
    }

    protected boolean hasDecorView()
    {
        android.view.autofill.AutofillPopupWindow r0;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        return 1;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.graphics.drawable.Drawable r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r2;
    }

    public void setContentView(android.view.View)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r2;
    }

    public void setElevation(float)
    {
        android.view.autofill.AutofillPopupWindow r0;
        float f0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        f0 := @parameter0: float;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r1;
    }

    public void setEnterTransition(android.transition.Transition)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.transition.Transition r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.transition.Transition;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r2;
    }

    public void setExitTransition(android.transition.Transition)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.transition.Transition r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.transition.Transition;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r2;
    }

    public void setTouchInterceptor(android.view.View$OnTouchListener)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View$OnTouchListener r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View$OnTouchListener;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You can\'t call this!");

        throw $r2;
    }

    public void showAsDropDown(android.view.View, int, int, int)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.os.IBinder $r2;
        long $l6;
        android.content.Context $r3;
        java.lang.String $r4, $r16;
        android.view.autofill.AutofillPopupWindow$WindowPresenter $r5;
        android.graphics.Rect $r6;
        java.lang.StringBuilder $r7;
        android.view.WindowManager$LayoutParams r18;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("showAsDropDown(): anchor=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", xoff=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", yoff=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isShowing(): ");

        $z5 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AutofillPopupWindow", $r16);

     label1:
        $z1 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setShowing(boolean)>(1);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setDropDown(boolean)>(1);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void attachToAnchor(android.view.View,int,int,int)>(r1, i0, i1, i2);

        $r2 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        r18 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.view.WindowManager$LayoutParams createPopupLayoutParams(android.os.IBinder)>($r2);

        r0.<android.view.autofill.AutofillPopupWindow: android.view.WindowManager$LayoutParams mWindowLayoutParams> = r18;

        $i3 = r18.<android.view.WindowManager$LayoutParams: int width>;

        $i4 = r18.<android.view.WindowManager$LayoutParams: int height>;

        $z2 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean getAllowScrollingAnchorParent()>();

        $z3 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int,int,int,boolean)>(r1, r18, i0, i1, $i3, $i4, i2, $z2);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void updateAboveAnchor(boolean)>($z3);

        $i5 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        $l6 = (long) $i5;

        r18.<android.view.WindowManager$LayoutParams: long accessibilityIdOfAnchor> = $l6;

        $r3 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        r18.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = $r4;

        $r5 = r0.<android.view.autofill.AutofillPopupWindow: android.view.autofill.AutofillPopupWindow$WindowPresenter mWindowPresenter>;

        $r6 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.graphics.Rect getTransitionEpicenter()>();

        $z4 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isLayoutInsetDecor()>();

        $i7 = virtualinvoke r1.<android.view.View: int getLayoutDirection()>();

        virtualinvoke $r5.<android.view.autofill.AutofillPopupWindow$WindowPresenter: void show(android.view.WindowManager$LayoutParams,android.graphics.Rect,boolean,int)>(r18, $r6, $z4, $i7);

        return;
    }

    public void update(android.view.View, int, int, int, int, android.graphics.Rect)
    {
        android.view.autofill.AutofillPopupWindow r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i14, i15;
        int[] r1;
        boolean $z0, z1, $z2, $z3;
        android.view.autofill.AutofillPopupWindow$2 $r3;
        android.content.Context $r4, $r6;
        android.view.autofill._$$Lambda$AutofillPopupWindow$DnLs9aVkSgQ89oSTe4P9EweBBks $r5;
        java.lang.Object $r7;
        android.view.WindowMetrics $r8;
        android.view.View r9;
        android.graphics.Rect r10, r12;
        short s13;
        android.view.WindowManager r11;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r9 := @parameter0: android.view.View;

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        i12 := @parameter3: int;

        i0 := @parameter4: int;

        r10 := @parameter5: android.graphics.Rect;

        if i12 != -1 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        r0.<android.view.autofill.AutofillPopupWindow: boolean mFullScreen> = z1;

        if z1 == 0 goto label03;

        s13 = 2008;

        goto label04;

     label03:
        s13 = 1005;

     label04:
        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setWindowLayoutType(int)>(s13);

        $z0 = r0.<android.view.autofill.AutofillPopupWindow: boolean mFullScreen>;

        if $z0 == 0 goto label06;

        i14 = 0;

        i15 = 0;

        $r6 = virtualinvoke r9.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        r11 = (android.view.WindowManager) $r7;

        $r8 = interfaceinvoke r11.<android.view.WindowManager: android.view.WindowMetrics getCurrentWindowMetrics()>();

        r12 = staticinvoke <android.window.WindowMetricsHelper: android.graphics.Rect getBoundsExcludingNavigationBarAndCutout(android.view.WindowMetrics)>($r8);

        i12 = virtualinvoke r12.<android.graphics.Rect: int width()>();

        if i0 == -1 goto label05;

        $i9 = virtualinvoke r12.<android.graphics.Rect: int height()>();

        i15 = $i9 - i0;

     label05:
        i11 = i15;

        goto label08;

     label06:
        if r10 == null goto label07;

        r1 = newarray (int)[2];

        $i1 = r10.<android.graphics.Rect: int left>;

        r1[0] = $i1;

        $i2 = r10.<android.graphics.Rect: int top>;

        r1[1] = $i2;

        $r3 = new android.view.autofill.AutofillPopupWindow$2;

        $r4 = virtualinvoke r9.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r3.<android.view.autofill.AutofillPopupWindow$2: void <init>(android.view.autofill.AutofillPopupWindow,android.content.Context,int[],android.view.View)>(r0, $r4, r1, r9);

        $i6 = r10.<android.graphics.Rect: int left>;

        $i5 = r10.<android.graphics.Rect: int top>;

        $i4 = r10.<android.graphics.Rect: int right>;

        $i3 = r10.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<android.view.View: void setLeftTopRightBottom(int,int,int,int)>($i6, $i5, $i4, $i3);

        $i7 = virtualinvoke r9.<android.view.View: int getScrollX()>();

        virtualinvoke $r3.<android.view.View: void setScrollX(int)>($i7);

        $i8 = virtualinvoke r9.<android.view.View: int getScrollY()>();

        virtualinvoke $r3.<android.view.View: void setScrollY(int)>($i8);

        $r5 = new android.view.autofill._$$Lambda$AutofillPopupWindow$DnLs9aVkSgQ89oSTe4P9EweBBks;

        specialinvoke $r5.<android.view.autofill._$$Lambda$AutofillPopupWindow$DnLs9aVkSgQ89oSTe4P9EweBBks: void <init>(int[])>(r1);

        virtualinvoke r9.<android.view.View: void setOnScrollChangeListener(android.view.View$OnScrollChangeListener)>($r5);

        virtualinvoke $r3.<android.view.View: void setWillNotDraw(boolean)>(1);

        r9 = $r3;

        i14 = i10;

        goto label08;

     label07:
        i14 = i10;

     label08:
        $z2 = r0.<android.view.autofill.AutofillPopupWindow: boolean mFullScreen>;

        if $z2 != 0 goto label09;

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setAnimationStyle(int)>(-1);

        goto label11;

     label09:
        if i0 != -1 goto label10;

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setAnimationStyle(int)>(0);

        goto label11;

     label10:
        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setAnimationStyle(int)>(16974609);

     label11:
        $z3 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label12;

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setWidth(int)>(i12);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void setHeight(int)>(i0);

        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void showAsDropDown(android.view.View,int,int)>(r9, i14, i11);

        goto label13;

     label12:
        virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: void update(android.view.View,int,int,int,int)>(r9, i14, i11, i12, i0);

     label13:
        return;
    }

    protected void update(android.view.View, android.view.WindowManager$LayoutParams)
    {
        android.view.autofill.AutofillPopupWindow r0;
        android.view.View r1;
        android.view.WindowManager$LayoutParams r2;
        android.view.autofill.AutofillPopupWindow$WindowPresenter $r3;
        android.graphics.Rect $r4;
        boolean $z0;
        int i0;

        r0 := @this: android.view.autofill.AutofillPopupWindow;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.WindowManager$LayoutParams;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.view.View: int getLayoutDirection()>();

        goto label2;

     label1:
        i0 = 3;

     label2:
        $r3 = r0.<android.view.autofill.AutofillPopupWindow: android.view.autofill.AutofillPopupWindow$WindowPresenter mWindowPresenter>;

        $r4 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: android.graphics.Rect getTransitionEpicenter()>();

        $z0 = virtualinvoke r0.<android.view.autofill.AutofillPopupWindow: boolean isLayoutInsetDecor()>();

        virtualinvoke $r3.<android.view.autofill.AutofillPopupWindow$WindowPresenter: void show(android.view.WindowManager$LayoutParams,android.graphics.Rect,boolean,int)>(r2, $r4, $z0, i0);

        return;
    }

    public static void <clinit>()
    {
        <android.view.autofill.AutofillPopupWindow: java.lang.String TAG> = "AutofillPopupWindow";

        return;
    }
}
