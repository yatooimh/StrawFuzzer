public final class android.view.autofill.Helper extends java.lang.Object
{
    public static boolean sDebug;
    public static boolean sVerbose;

    static void <clinit>()
    {
        <android.view.autofill.Helper: boolean sDebug> = 0;

        <android.view.autofill.Helper: boolean sVerbose> = 0;

        return;
    }

    private void <init>()
    {
        android.view.autofill.Helper r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.autofill.Helper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("contains static members only");

        throw $r1;
    }

    public static void appendRedacted(java.lang.StringBuilder, java.lang.CharSequence)
    {
        java.lang.StringBuilder r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = staticinvoke <android.view.autofill.Helper: java.lang.String getRedacted(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        return;
    }

    public static void appendRedacted(java.lang.StringBuilder, java.lang.String[])
    {
        java.lang.StringBuilder r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String[];

        if r1 != null goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("N/A");

        return;

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        staticinvoke <android.view.autofill.Helper: void appendRedacted(java.lang.StringBuilder,java.lang.CharSequence)>(r0, r2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        return;
    }

    public static java.lang.String getRedacted(java.lang.CharSequence)
    {
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.CharSequence r4;
        java.lang.String r5;

        r4 := @parameter0: java.lang.CharSequence;

        if r4 != null goto label1;

        r5 = "null";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_chars");

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r5;
    }

    public static android.view.autofill.AutofillId[] toArray(java.util.Collection)
    {
        java.util.Collection r0;
        android.view.autofill.AutofillId[] r1, $r3;
        int $i0;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r3 = newarray (android.view.autofill.AutofillId)[0];

        return $r3;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        r1 = newarray (android.view.autofill.AutofillId)[$i0];

        interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return r1;
    }

    public static java.util.ArrayList toList(java.util.Set)
    {
        java.util.ArrayList $r0, r2;
        java.util.Set r1;

        r1 := @parameter0: java.util.Set;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r2 = $r0;

     label2:
        return r2;
    }
}
