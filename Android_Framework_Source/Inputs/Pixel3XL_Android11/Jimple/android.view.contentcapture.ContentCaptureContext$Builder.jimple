public final class android.view.contentcapture.ContentCaptureContext$Builder extends java.lang.Object
{
    private boolean mDestroyed;
    private android.os.Bundle mExtras;
    private final android.content.LocusId mId;

    public void <init>(android.content.LocusId)
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        android.content.LocusId r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureContext$Builder;

        r1 := @parameter0: android.content.LocusId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.content.LocusId) $r2;

        r0.<android.view.contentcapture.ContentCaptureContext$Builder: android.content.LocusId mId> = $r3;

        return;
    }

    static android.os.Bundle access$000(android.view.contentcapture.ContentCaptureContext$Builder)
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.view.contentcapture.ContentCaptureContext$Builder;

        $r1 = r0.<android.view.contentcapture.ContentCaptureContext$Builder: android.os.Bundle mExtras>;

        return $r1;
    }

    static android.content.LocusId access$100(android.view.contentcapture.ContentCaptureContext$Builder)
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        android.content.LocusId $r1;

        r0 := @parameter0: android.view.contentcapture.ContentCaptureContext$Builder;

        $r1 = r0.<android.view.contentcapture.ContentCaptureContext$Builder: android.content.LocusId mId>;

        return $r1;
    }

    private void throwIfDestroyed()
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        boolean $z0, $z1;

        r0 := @this: android.view.contentcapture.ContentCaptureContext$Builder;

        $z0 = r0.<android.view.contentcapture.ContentCaptureContext$Builder: boolean mDestroyed>;

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "Already called #build()");

        return;
    }

    public android.view.contentcapture.ContentCaptureContext build()
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        android.view.contentcapture.ContentCaptureContext $r1;

        r0 := @this: android.view.contentcapture.ContentCaptureContext$Builder;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureContext$Builder: void throwIfDestroyed()>();

        r0.<android.view.contentcapture.ContentCaptureContext$Builder: boolean mDestroyed> = 1;

        $r1 = new android.view.contentcapture.ContentCaptureContext;

        specialinvoke $r1.<android.view.contentcapture.ContentCaptureContext: void <init>(android.view.contentcapture.ContentCaptureContext$Builder,android.view.contentcapture.ContentCaptureContext$1)>(r0, null);

        return $r1;
    }

    public android.view.contentcapture.ContentCaptureContext$Builder setExtras(android.os.Bundle)
    {
        android.view.contentcapture.ContentCaptureContext$Builder r0;
        android.os.Bundle r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureContext$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.os.Bundle) $r2;

        r0.<android.view.contentcapture.ContentCaptureContext$Builder: android.os.Bundle mExtras> = $r3;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureContext$Builder: void throwIfDestroyed()>();

        return r0;
    }
}
