public final class android.view.contentcapture.ContentCaptureHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static boolean sDebug;
    public static boolean sVerbose;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/view/contentcapture/ContentCaptureHelper;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.contentcapture.ContentCaptureHelper: java.lang.String TAG> = $r1;

        <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose> = 0;

        <android.view.contentcapture.ContentCaptureHelper: boolean sDebug> = 1;

        return;
    }

    private void <init>()
    {
        android.view.contentcapture.ContentCaptureHelper r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.contentcapture.ContentCaptureHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("contains only static methods");

        throw $r1;
    }

    public static int getDefaultLoggingLevel()
    {
        boolean $z0;
        int i0;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        i0 = (int) $z0;

        return i0;
    }

    public static java.lang.String getLoggingLevelAsString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN-");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "VERBOSE";

     label2:
        return "DEBUG";

     label3:
        return "OFF";
    }

    public static java.lang.String getSanitizedString(java.lang.CharSequence)
    {
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.CharSequence r4;
        java.lang.String r5;

        r4 := @parameter0: java.lang.CharSequence;

        if r4 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_chars");

        r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r5;
    }

    public static void setLoggingLevel()
    {
        int $i0, $i1;

        $i0 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: int getDefaultLoggingLevel()>();

        $i1 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>("content_capture", "logging_level", $i0);

        staticinvoke <android.view.contentcapture.ContentCaptureHelper: void setLoggingLevel(int)>($i1);

        return;
    }

    public static void setLoggingLevel(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r5;
        java.lang.String $r2, $r4, $r8, r9, r11;

        i0 := @parameter0: int;

        r9 = <android.view.contentcapture.ContentCaptureHelper: java.lang.String TAG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting logging level to ");

        $r2 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: java.lang.String getLoggingLevelAsString(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r9, $r4);

        <android.view.contentcapture.ContentCaptureHelper: boolean sDebug> = 0;

        <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose> = 0;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        r11 = <android.view.contentcapture.ContentCaptureHelper: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLoggingLevel(): invalud level: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r11, $r8);

        return;

     label1:
        <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose> = 1;

     label2:
        <android.view.contentcapture.ContentCaptureHelper: boolean sDebug> = 1;

        return;

     label3:
        return;
    }

    public static java.util.ArrayList toList(java.util.Set)
    {
        java.util.ArrayList $r0, r2;
        java.util.Set r1;

        r1 := @parameter0: java.util.Set;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r2 = $r0;

     label2:
        return r2;
    }

    public static android.util.ArraySet toSet(java.util.List)
    {
        android.util.ArraySet $r0, r2;
        java.util.List r1;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = new android.util.ArraySet;

        specialinvoke $r0.<android.util.ArraySet: void <init>(java.util.Collection)>(r1);

        r2 = $r0;

     label2:
        return r2;
    }
}
