class android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate extends android.view.contentcapture.IDataShareWriteAdapter$Stub
{
    private final java.lang.ref.WeakReference mResourceManagerReference;

    private void <init>(java.util.concurrent.Executor, android.view.contentcapture.DataShareWriteAdapter, android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager)
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        java.util.concurrent.Executor r1;
        android.view.contentcapture.DataShareWriteAdapter r2;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r3;
        java.lang.ref.WeakReference $r7;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        r3 := @parameter2: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        specialinvoke r0.<android.view.contentcapture.IDataShareWriteAdapter$Stub: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        virtualinvoke r3.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: void initializeForDelegate(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate,android.view.contentcapture.DataShareWriteAdapter,java.util.concurrent.Executor)>(r0, r2, r1);

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference> = $r7;

        return;
    }

    void <init>(java.util.concurrent.Executor, android.view.contentcapture.DataShareWriteAdapter, android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager, android.view.contentcapture.ContentCaptureManager$1)
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        java.util.concurrent.Executor r1;
        android.view.contentcapture.DataShareWriteAdapter r2;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r3;
        android.view.contentcapture.ContentCaptureManager$1 r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        r3 := @parameter2: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r4 := @parameter3: android.view.contentcapture.ContentCaptureManager$1;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void <init>(java.util.concurrent.Executor,android.view.contentcapture.DataShareWriteAdapter,android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager)>(r1, r2, r3);

        return;
    }

    private void clearHardReferences()
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager) $r3;

        if r1 != null goto label1;

        $r4 = staticinvoke <android.view.contentcapture.ContentCaptureManager: java.lang.String access$200()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Can\'t clear references, resource manager has been GC\'ed");

        return;

     label1:
        virtualinvoke r1.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: void clearHardReferences(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)>(r0);

        return;
    }

    private void executeAdapterMethodLocked(java.util.function.Consumer, java.lang.String)
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        long l0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r7, $r12, r15, r17, r23;
        java.lang.Throwable $r13;
        java.util.function.Consumer r14;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r16;
        android.view.contentcapture.DataShareWriteAdapter r19;
        java.util.concurrent.Executor r20;
        android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$47CPH_dzxQYL6qTCBFWSq11DNAU r21;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        r14 := @parameter0: java.util.function.Consumer;

        r15 := @parameter1: java.lang.String;

        $r1 = r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: java.lang.ref.WeakReference mResourceManagerReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r16 = (android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager) $r2;

        if r16 != null goto label1;

        r17 = staticinvoke <android.view.contentcapture.ContentCaptureManager: java.lang.String access$200()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t execute ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(), resource manager has been GC\'ed");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r17, $r12);

        return;

     label1:
        r19 = virtualinvoke r16.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: android.view.contentcapture.DataShareWriteAdapter getAdapter(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)>(r0);

        r20 = virtualinvoke r16.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.concurrent.Executor getExecutor(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)>(r0);

        if r19 == null goto label6;

        if r20 != null goto label2;

        goto label6;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        r21 = new android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$47CPH_dzxQYL6qTCBFWSq11DNAU;

        specialinvoke r21.<android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$47CPH_dzxQYL6qTCBFWSq11DNAU: void <init>(java.util.function.Consumer,android.view.contentcapture.DataShareWriteAdapter)>(r14, r19);

        interfaceinvoke r20.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r21);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r13;

     label6:
        r23 = staticinvoke <android.view.contentcapture.ContentCaptureManager: java.lang.String access$200()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t execute ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(), references are null");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r23, $r7);

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void lambda$error$1(int, android.view.contentcapture.DataShareWriteAdapter)
    {
        int i0;
        android.view.contentcapture.DataShareWriteAdapter r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        interfaceinvoke r0.<android.view.contentcapture.DataShareWriteAdapter: void onError(int)>(i0);

        return;
    }

    static void lambda$executeAdapterMethodLocked$2(java.util.function.Consumer, android.view.contentcapture.DataShareWriteAdapter)
    {
        java.util.function.Consumer r0;
        android.view.contentcapture.DataShareWriteAdapter r1;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

    static void lambda$write$0(android.os.ParcelFileDescriptor, android.view.contentcapture.DataShareWriteAdapter)
    {
        android.os.ParcelFileDescriptor r0;
        android.view.contentcapture.DataShareWriteAdapter r1;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        interfaceinvoke r1.<android.view.contentcapture.DataShareWriteAdapter: void onWrite(android.os.ParcelFileDescriptor)>(r0);

        return;
    }

    public void error(int) throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        int i0;
        android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$Zpq4r008FlTn1ia7xzkN4NTgJrU $r1;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        i0 := @parameter0: int;

        $r1 = new android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$Zpq4r008FlTn1ia7xzkN4NTgJrU;

        specialinvoke $r1.<android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$Zpq4r008FlTn1ia7xzkN4NTgJrU: void <init>(int)>(i0);

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void executeAdapterMethodLocked(java.util.function.Consumer,java.lang.String)>($r1, "onError");

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void clearHardReferences()>();

        return;
    }

    public void finish() throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void clearHardReferences()>();

        return;
    }

    public void rejected() throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        android.view.contentcapture.'-$$Lambda$Hf5vPTf9zSkFpeqlKIJymvlJvy8' $r1;
        java.util.function.Consumer r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r1 = <android.view.contentcapture._$$Lambda$Hf5vPTf9zSkFpeqlKIJymvlJvy8: android.view.contentcapture.'-$$Lambda$Hf5vPTf9zSkFpeqlKIJymvlJvy8' INSTANCE>;

        r2 = (java.util.function.Consumer) $r1;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void executeAdapterMethodLocked(java.util.function.Consumer,java.lang.String)>(r2, "onRejected");

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void clearHardReferences()>();

        return;
    }

    public void write(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r0;
        android.os.ParcelFileDescriptor r1;
        android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$q3ba3mvm7p4FcLLvlJAkgyzoYHc $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r2 = new android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$q3ba3mvm7p4FcLLvlJAkgyzoYHc;

        specialinvoke $r2.<android.view.contentcapture._$$Lambda$ContentCaptureManager$DataShareAdapterDelegate$q3ba3mvm7p4FcLLvlJAkgyzoYHc: void <init>(android.os.ParcelFileDescriptor)>(r1);

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void executeAdapterMethodLocked(java.util.function.Consumer,java.lang.String)>($r2, "onWrite");

        return;
    }
}
