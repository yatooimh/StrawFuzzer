class android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager extends java.lang.Object
{
    private java.util.Map mExecutorHardReferences;
    private java.util.Map mWriteAdapterHardReferences;

    private void <init>()
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mWriteAdapterHardReferences> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mExecutorHardReferences> = $r2;

        return;
    }

    void <init>(android.view.contentcapture.ContentCaptureManager$1)
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        android.view.contentcapture.ContentCaptureManager$1 r1;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureManager$1;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: void <init>()>();

        return;
    }

    void clearHardReferences(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r1;
        java.util.Map $r2, $r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mWriteAdapterHardReferences>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mExecutorHardReferences>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    android.view.contentcapture.DataShareWriteAdapter getAdapter(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.view.contentcapture.DataShareWriteAdapter $r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mWriteAdapterHardReferences>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.view.contentcapture.DataShareWriteAdapter) $r3;

        return $r4;
    }

    java.util.concurrent.Executor getExecutor(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate)
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mExecutorHardReferences>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.concurrent.Executor) $r3;

        return $r4;
    }

    void initializeForDelegate(android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate, android.view.contentcapture.DataShareWriteAdapter, java.util.concurrent.Executor)
    {
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager r0;
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r1;
        android.view.contentcapture.DataShareWriteAdapter r2;
        java.util.concurrent.Executor r3;
        java.util.Map $r4, $r6;

        r0 := @this: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        r2 := @parameter1: android.view.contentcapture.DataShareWriteAdapter;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mWriteAdapterHardReferences>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = r0.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: java.util.Map mExecutorHardReferences>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }
}
