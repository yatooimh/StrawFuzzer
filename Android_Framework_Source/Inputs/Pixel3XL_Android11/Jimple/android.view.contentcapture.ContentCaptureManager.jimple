public final class android.view.contentcapture.ContentCaptureManager extends java.lang.Object
{
    public static final int DATA_SHARE_ERROR_CONCURRENT_REQUEST;
    public static final int DATA_SHARE_ERROR_TIMEOUT_INTERRUPTED;
    public static final int DATA_SHARE_ERROR_UNKNOWN;
    public static final int DEFAULT_IDLE_FLUSHING_FREQUENCY_MS;
    public static final int DEFAULT_LOG_HISTORY_SIZE;
    public static final int DEFAULT_MAX_BUFFER_SIZE;
    public static final int DEFAULT_TEXT_CHANGE_FLUSHING_FREQUENCY_MS;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_IDLE_FLUSH_FREQUENCY;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_IDLE_UNBIND_TIMEOUT;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_LOGGING_LEVEL;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_LOG_HISTORY_SIZE;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_MAX_BUFFER_SIZE;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_SERVICE_EXPLICITLY_ENABLED;
    public static final java.lang.String DEVICE_CONFIG_PROPERTY_TEXT_CHANGE_FLUSH_FREQUENCY;
    public static final int LOGGING_LEVEL_DEBUG;
    public static final int LOGGING_LEVEL_OFF;
    public static final int LOGGING_LEVEL_VERBOSE;
    public static final int NO_SESSION_ID;
    public static final int RESULT_CODE_FALSE;
    public static final int RESULT_CODE_OK;
    public static final int RESULT_CODE_SECURITY_EXCEPTION;
    public static final int RESULT_CODE_TRUE;
    private static final int SYNC_CALLS_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager;
    private int mFlags;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private android.view.contentcapture.MainContentCaptureSession mMainSession;
    final android.content.ContentCaptureOptions mOptions;
    private final android.view.contentcapture.IContentCaptureManager mService;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.view.contentcapture.ContentCaptureManager: int SYNC_CALLS_TIMEOUT_MS> = 5000;

        <android.view.contentcapture.ContentCaptureManager: int RESULT_CODE_TRUE> = 1;

        <android.view.contentcapture.ContentCaptureManager: int RESULT_CODE_SECURITY_EXCEPTION> = -1;

        <android.view.contentcapture.ContentCaptureManager: int RESULT_CODE_OK> = 0;

        <android.view.contentcapture.ContentCaptureManager: int RESULT_CODE_FALSE> = 2;

        <android.view.contentcapture.ContentCaptureManager: int NO_SESSION_ID> = 0;

        <android.view.contentcapture.ContentCaptureManager: int LOGGING_LEVEL_VERBOSE> = 2;

        <android.view.contentcapture.ContentCaptureManager: int LOGGING_LEVEL_OFF> = 0;

        <android.view.contentcapture.ContentCaptureManager: int LOGGING_LEVEL_DEBUG> = 1;

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_TEXT_CHANGE_FLUSH_FREQUENCY> = "text_change_flush_frequency";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_SERVICE_EXPLICITLY_ENABLED> = "service_explicitly_enabled";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_MAX_BUFFER_SIZE> = "max_buffer_size";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_LOG_HISTORY_SIZE> = "log_history_size";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_LOGGING_LEVEL> = "logging_level";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_IDLE_UNBIND_TIMEOUT> = "idle_unbind_timeout";

        <android.view.contentcapture.ContentCaptureManager: java.lang.String DEVICE_CONFIG_PROPERTY_IDLE_FLUSH_FREQUENCY> = "idle_flush_frequency";

        <android.view.contentcapture.ContentCaptureManager: int DEFAULT_TEXT_CHANGE_FLUSHING_FREQUENCY_MS> = 1000;

        <android.view.contentcapture.ContentCaptureManager: int DEFAULT_MAX_BUFFER_SIZE> = 500;

        <android.view.contentcapture.ContentCaptureManager: int DEFAULT_LOG_HISTORY_SIZE> = 10;

        <android.view.contentcapture.ContentCaptureManager: int DEFAULT_IDLE_FLUSHING_FREQUENCY_MS> = 5000;

        <android.view.contentcapture.ContentCaptureManager: int DATA_SHARE_ERROR_UNKNOWN> = 1;

        <android.view.contentcapture.ContentCaptureManager: int DATA_SHARE_ERROR_TIMEOUT_INTERRUPTED> = 3;

        <android.view.contentcapture.ContentCaptureManager: int DATA_SHARE_ERROR_CONCURRENT_REQUEST> = 2;

        $r0 = class "Landroid/view/contentcapture/ContentCaptureManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.view.contentcapture.IContentCaptureManager, android.content.ContentCaptureOptions)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.content.Context r1, $r4;
        java.lang.Object $r2, $r3, $r5, $r7;
        android.view.contentcapture.IContentCaptureManager $r6, r16;
        int $i0;
        boolean $z0;
        android.os.Looper $r8;
        android.os.Handler $r9;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r13, $r15, r19;
        android.content.ContentCaptureOptions r17, r18;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r1 := @parameter0: android.content.Context;

        r16 := @parameter1: android.view.contentcapture.IContentCaptureManager;

        r17 := @parameter2: android.content.ContentCaptureOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock> = $r2;

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "context cannot be null");

        $r4 = (android.content.Context) $r3;

        r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r16, "service cannot be null");

        $r6 = (android.view.contentcapture.IContentCaptureManager) $r5;

        r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService> = $r6;

        $r7 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r17, "options cannot be null");

        r18 = (android.content.ContentCaptureOptions) $r7;

        r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions> = r18;

        $i0 = r18.<android.content.ContentCaptureOptions: int loggingLevel>;

        staticinvoke <android.view.contentcapture.ContentCaptureHelper: void setLoggingLevel(int)>($i0);

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r19 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructor for ");

        $r13 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r19, $r15);

     label1:
        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r9 = staticinvoke <android.os.Handler: android.os.Handler createAsync(android.os.Looper)>($r8);

        r0.<android.view.contentcapture.ContentCaptureManager: android.os.Handler mHandler> = $r9;

        $r10 = new android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager;

        specialinvoke $r10.<android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager: void <init>(android.view.contentcapture.ContentCaptureManager$1)>(null);

        r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager> = $r10;

        return;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        return $r0;
    }

    public static android.content.ComponentName getServiceSettingsComponentName()
    {
        java.lang.String r0, $r2, $r11;
        com.android.internal.util.SyncResultReceiver $r1;
        int $i0;
        android.os.Parcelable $r3;
        android.content.ComponentName $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r7;
        java.lang.StringBuilder $r8;
        android.os.IBinder r12;
        android.view.contentcapture.IContentCaptureManager r13;
        java.lang.SecurityException r15;

        r12 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("content_capture");

        if r12 != null goto label1;

        return null;

     label1:
        r13 = staticinvoke <android.view.contentcapture.IContentCaptureManager$Stub: android.view.contentcapture.IContentCaptureManager asInterface(android.os.IBinder)>(r12);

        $r1 = new com.android.internal.util.SyncResultReceiver;

        specialinvoke $r1.<com.android.internal.util.SyncResultReceiver: void <init>(int)>(5000);

     label2:
        interfaceinvoke r13.<android.view.contentcapture.IContentCaptureManager: void getServiceSettingsActivity(com.android.internal.os.IResultReceiver)>($r1);

        $i0 = virtualinvoke $r1.<com.android.internal.util.SyncResultReceiver: int getIntResult()>();

        if $i0 == -1 goto label3;

        $r3 = virtualinvoke $r1.<com.android.internal.util.SyncResultReceiver: android.os.Parcelable getParcelableResult()>();

        $r4 = (android.content.ComponentName) $r3;

        return $r4;

     label3:
        r15 = new java.lang.SecurityException;

        $r2 = virtualinvoke $r1.<com.android.internal.util.SyncResultReceiver: java.lang.String getStringResult()>();

        specialinvoke r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r2);

        throw r15;

     label4:
        $r7 := @caughtexception;

        r0 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to get service settings componentName: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r0, $r11);

        return null;

     label5:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label2 to label3 with label4;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label3 to label4 with label4;
    }

    private com.android.internal.util.SyncResultReceiver syncRun(android.view.contentcapture.ContentCaptureManager$MyRunnable)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        com.android.internal.util.SyncResultReceiver $r2;
        int $i0;
        java.lang.String $r3;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r4;
        java.lang.RuntimeException $r5, $r7;
        android.os.RemoteException $r6;
        android.view.contentcapture.ContentCaptureManager$MyRunnable r8;
        java.lang.SecurityException r9;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r8 := @parameter0: android.view.contentcapture.ContentCaptureManager$MyRunnable;

        $r2 = new com.android.internal.util.SyncResultReceiver;

        specialinvoke $r2.<com.android.internal.util.SyncResultReceiver: void <init>(int)>(5000);

     label1:
        interfaceinvoke r8.<android.view.contentcapture.ContentCaptureManager$MyRunnable: void run(com.android.internal.util.SyncResultReceiver)>($r2);

        $i0 = virtualinvoke $r2.<com.android.internal.util.SyncResultReceiver: int getIntResult()>();

        if $i0 == -1 goto label3;

     label2:
        return $r2;

     label3:
        r9 = new java.lang.SecurityException;

        $r3 = virtualinvoke $r2.<com.android.internal.util.SyncResultReceiver: java.lang.String getStringResult()>();

        specialinvoke r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r3);

        throw r9;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to get syn run result from SyncResultReceiver.");

        throw $r5;

     label5:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label3 to label4 with label4;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        java.lang.StringBuilder $r1, r18;
        boolean $z0, $z1, $z2;
        android.content.Context $r4, $r5;
        int $i0, $i1;
        android.view.contentcapture.IContentCaptureManager $r6;
        android.content.ContentCaptureOptions $r7;
        android.view.contentcapture.MainContentCaptureSession $r8, $r11;
        java.lang.Throwable $r12;
        java.lang.String r13, r16, r19;
        java.io.PrintWriter r14;
        java.lang.Object r17;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.io.PrintWriter;

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r13);

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("ContentCaptureManager");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r16 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r17;

     label1:
        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("isContentCaptureEnabled(): ");

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>();

        virtualinvoke r14.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("Debug: ");

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        virtualinvoke r14.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(" Verbose: ");

        $z2 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        virtualinvoke r14.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("Context: ");

        $r4 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext>;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("User: ");

        $r5 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        virtualinvoke r14.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("Service: ");

        $r6 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("Flags: ");

        $i1 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        virtualinvoke r14.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("Options: ");

        $r7 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        virtualinvoke $r7.<android.content.ContentCaptureOptions: void dumpShort(java.io.PrintWriter)>(r14);

        virtualinvoke r14.<java.io.PrintWriter: void println()>();

        $r8 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        if $r8 == null goto label3;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r19 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("Main session:");

        $r11 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        virtualinvoke $r11.<android.view.contentcapture.MainContentCaptureSession: void dump(java.lang.String,java.io.PrintWriter)>(r19, r14);

     label2:
        goto label4;

     label3:
        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>(r16);

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("No sessions");

     label4:
        exitmonitor r17;

     label5:
        return;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r17;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void flush(int)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        int i0;
        android.content.ContentCaptureOptions $r1;
        boolean $z0;
        android.view.contentcapture.MainContentCaptureSession $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r1.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        virtualinvoke $r2.<android.view.contentcapture.MainContentCaptureSession: void flush(int)>(i0);

        return;
    }

    public java.util.Set getContentCaptureConditions()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        boolean $z0, $z1;
        android.view.contentcapture._$$Lambda$ContentCaptureManager$F5a5O5ubPHwlndmmnmOInl75_sQ $r1;
        java.util.ArrayList $r2;
        android.content.ContentCaptureOptions $r3;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r4;
        java.lang.RuntimeException $r5;
        com.android.internal.util.SyncResultReceiver r6;
        android.util.ArraySet r7;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z1 = $r3.<android.content.ContentCaptureOptions: boolean lite>;

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r1 = new android.view.contentcapture._$$Lambda$ContentCaptureManager$F5a5O5ubPHwlndmmnmOInl75_sQ;

        specialinvoke $r1.<android.view.contentcapture._$$Lambda$ContentCaptureManager$F5a5O5ubPHwlndmmnmOInl75_sQ: void <init>(android.view.contentcapture.ContentCaptureManager)>(r0);

        r6 = specialinvoke r0.<android.view.contentcapture.ContentCaptureManager: com.android.internal.util.SyncResultReceiver syncRun(android.view.contentcapture.ContentCaptureManager$MyRunnable)>($r1);

     label2:
        $r2 = virtualinvoke r6.<com.android.internal.util.SyncResultReceiver: java.util.ArrayList getParcelableListResult()>();

        r7 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: android.util.ArraySet toSet(java.util.List)>($r2);

     label3:
        return r7;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to get content capture conditions.");

        throw $r5;

        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label2 to label3 with label4;
    }

    public android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        java.lang.Object r1;
        java.lang.String r2, $r10;
        android.view.contentcapture.MainContentCaptureSession $r3, $r8, r12, r14;
        android.view.contentcapture.IContentCaptureManager $r4;
        android.os.Handler $r5;
        android.content.Context $r6;
        boolean $z0;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r13;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r1 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        if $r3 != null goto label2;

        r12 = new android.view.contentcapture.MainContentCaptureSession;

        $r6 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext>;

        $r5 = r0.<android.view.contentcapture.ContentCaptureManager: android.os.Handler mHandler>;

        $r4 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        specialinvoke r12.<android.view.contentcapture.MainContentCaptureSession: void <init>(android.content.Context,android.view.contentcapture.ContentCaptureManager,android.os.Handler,android.view.contentcapture.IContentCaptureManager)>($r6, r0, $r5, $r4);

        r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession> = r12;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label2;

        r2 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMainContentCaptureSession(): created ");

        $r8 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r2, $r10);

     label2:
        r14 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        exitmonitor r1;

     label3:
        return r14;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.content.ComponentName getServiceComponentName()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        boolean $z0, $z1;
        com.android.internal.util.SyncResultReceiver $r1;
        android.view.contentcapture.IContentCaptureManager $r2;
        android.os.Parcelable $r3;
        android.content.ContentCaptureOptions $r4;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r5;
        java.lang.RuntimeException $r6, $r8;
        android.os.RemoteException $r7;
        android.content.ComponentName r10;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z1 = $r4.<android.content.ContentCaptureOptions: boolean lite>;

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r1 = new com.android.internal.util.SyncResultReceiver;

        specialinvoke $r1.<com.android.internal.util.SyncResultReceiver: void <init>(int)>(5000);

     label2:
        $r2 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        interfaceinvoke $r2.<android.view.contentcapture.IContentCaptureManager: void getServiceComponentName(com.android.internal.os.IResultReceiver)>($r1);

        $r3 = virtualinvoke $r1.<com.android.internal.util.SyncResultReceiver: android.os.Parcelable getParcelableResult()>();

        r10 = (android.content.ComponentName) $r3;

     label3:
        return r10;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to get service componentName.");

        throw $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label2 to label3 with label4;
    }

    public boolean isContentCaptureEnabled()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        java.lang.Object r1;
        android.content.ContentCaptureOptions $r2;
        boolean $z0, $z1;
        java.lang.Throwable $r3;
        android.view.contentcapture.MainContentCaptureSession r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r2.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r1 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        r4 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        exitmonitor r1;

     label3:
        if r4 == null goto label4;

        $z1 = virtualinvoke r4.<android.view.contentcapture.MainContentCaptureSession: boolean isDisabled()>();

        if $z1 == 0 goto label4;

        return 0;

     label4:
        return 1;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isContentCaptureFeatureEnabled()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        int i0;
        java.lang.String r1, $r5, $r10, r12;
        android.view.contentcapture._$$Lambda$ContentCaptureManager$uvjEvSXcmP7_uA6i89N3m1TrKCk $r2;
        com.android.internal.util.SyncResultReceiver$TimeoutException $r6;
        java.lang.StringBuilder $r7, r13;
        com.android.internal.util.SyncResultReceiver r11;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $r2 = new android.view.contentcapture._$$Lambda$ContentCaptureManager$uvjEvSXcmP7_uA6i89N3m1TrKCk;

        specialinvoke $r2.<android.view.contentcapture._$$Lambda$ContentCaptureManager$uvjEvSXcmP7_uA6i89N3m1TrKCk: void <init>(android.view.contentcapture.ContentCaptureManager)>(r0);

        r11 = specialinvoke r0.<android.view.contentcapture.ContentCaptureManager: com.android.internal.util.SyncResultReceiver syncRun(android.view.contentcapture.ContentCaptureManager$MyRunnable)>($r2);

     label1:
        i0 = virtualinvoke r11.<com.android.internal.util.SyncResultReceiver: int getIntResult()>();

     label2:
        if i0 == 1 goto label6;

        if i0 == 2 goto label5;

     label3:
        r12 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("received invalid result: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>(r12, $r5);

     label4:
        return 0;

     label5:
        return 0;

     label6:
        return 1;

     label7:
        $r6 := @caughtexception;

        r1 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to get content capture feature enable status: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r1, $r10);

        return 0;

        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label1 to label2 with label7;
        catch com.android.internal.util.SyncResultReceiver$TimeoutException from label3 to label4 with label7;
    }

    public void lambda$getContentCaptureConditions$0$ContentCaptureManager(com.android.internal.util.SyncResultReceiver) throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager r0;
        com.android.internal.util.SyncResultReceiver r1;
        android.content.Context $r2;
        android.view.contentcapture.IContentCaptureManager $r3;
        java.lang.String $r4;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r1 := @parameter0: com.android.internal.util.SyncResultReceiver;

        $r3 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.view.contentcapture.IContentCaptureManager: void getContentCaptureConditions(java.lang.String,com.android.internal.os.IResultReceiver)>($r4, r1);

        return;
    }

    public void lambda$isContentCaptureFeatureEnabled$1$ContentCaptureManager(com.android.internal.util.SyncResultReceiver) throws android.os.RemoteException
    {
        android.view.contentcapture.ContentCaptureManager r0;
        com.android.internal.util.SyncResultReceiver r1;
        android.view.contentcapture.IContentCaptureManager $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r1 := @parameter0: com.android.internal.util.SyncResultReceiver;

        $r2 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        interfaceinvoke $r2.<android.view.contentcapture.IContentCaptureManager: void isContentCaptureFeatureEnabled(com.android.internal.os.IResultReceiver)>(r1);

        return;
    }

    public void onActivityCreated(android.os.IBinder, android.content.ComponentName)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.content.ComponentName r1;
        java.lang.Object r2;
        android.content.ContentCaptureOptions $r3;
        boolean $z0;
        android.view.contentcapture.MainContentCaptureSession $r4;
        int $i0;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r6 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r3.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        $r4 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        $i0 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        virtualinvoke $r4.<android.view.contentcapture.MainContentCaptureSession: void start(android.os.IBinder,android.content.ComponentName,int)>(r6, r1, $i0);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onActivityDestroyed()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.content.ContentCaptureOptions $r1;
        boolean $z0;
        android.view.contentcapture.MainContentCaptureSession $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $r1 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r1.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        virtualinvoke $r2.<android.view.contentcapture.MainContentCaptureSession: void destroy()>();

        return;
    }

    public void onActivityPaused()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.content.ContentCaptureOptions $r1;
        boolean $z0;
        android.view.contentcapture.MainContentCaptureSession $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $r1 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r1.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        virtualinvoke $r2.<android.view.contentcapture.MainContentCaptureSession: void notifySessionPaused()>();

        return;
    }

    public void onActivityResumed()
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.content.ContentCaptureOptions $r1;
        boolean $z0;
        android.view.contentcapture.MainContentCaptureSession $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        $r1 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $z0 = $r1.<android.content.ContentCaptureOptions: boolean lite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession getMainContentCaptureSession()>();

        virtualinvoke $r2.<android.view.contentcapture.MainContentCaptureSession: void notifySessionResumed()>();

        return;
    }

    public void removeData(android.view.contentcapture.DataRemovalRequest)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        android.view.contentcapture.IContentCaptureManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.view.contentcapture.DataRemovalRequest r5;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r5 := @parameter0: android.view.contentcapture.DataRemovalRequest;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

     label1:
        $r2 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        interfaceinvoke $r2.<android.view.contentcapture.IContentCaptureManager: void removeData(android.view.contentcapture.DataRemovalRequest)>(r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setContentCaptureEnabled(boolean)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        android.content.Context $r5;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;
        java.lang.Object r11;
        android.view.contentcapture.MainContentCaptureSession r12;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        z0 := @parameter0: boolean;

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z1 == 0 goto label01;

        r9 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setContentCaptureEnabled(): setting to ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r5 = r0.<android.view.contentcapture.ContentCaptureManager: android.content.Context mContext>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r9, $r7);

     label01:
        r11 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r11;

        if z0 == 0 goto label04;

     label02:
        $i2 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        $i3 = $i2 & -2;

        r0.<android.view.contentcapture.ContentCaptureManager: int mFlags> = $i3;

     label03:
        goto label05;

     label04:
        $i0 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        $i1 = $i0 | 1;

        r0.<android.view.contentcapture.ContentCaptureManager: int mFlags> = $i1;

     label05:
        r12 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        exitmonitor r11;

     label06:
        if r12 == null goto label07;

        $z2 = z0 ^ 1;

        virtualinvoke r12.<android.view.contentcapture.MainContentCaptureSession: boolean setDisabled(boolean)>($z2);

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r11;

     label10:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void shareData(android.view.contentcapture.DataShareRequest, java.util.concurrent.Executor, android.view.contentcapture.DataShareWriteAdapter)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        java.util.concurrent.Executor r1;
        android.view.contentcapture.DataShareWriteAdapter r2;
        android.view.contentcapture.IContentCaptureManager r3;
        android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate r4;
        android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        android.view.contentcapture.DataShareRequest r11;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r11 := @parameter0: android.view.contentcapture.DataShareRequest;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.view.contentcapture.DataShareWriteAdapter;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r11);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

     label1:
        r3 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.IContentCaptureManager mService>;

        r4 = new android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate;

        $r8 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager mDataShareAdapterResourceManager>;

        specialinvoke r4.<android.view.contentcapture.ContentCaptureManager$DataShareAdapterDelegate: void <init>(java.util.concurrent.Executor,android.view.contentcapture.DataShareWriteAdapter,android.view.contentcapture.ContentCaptureManager$LocalDataShareAdapterResourceManager,android.view.contentcapture.ContentCaptureManager$1)>(r1, r2, $r8, null);

        interfaceinvoke r3.<android.view.contentcapture.IContentCaptureManager: void shareData(android.view.contentcapture.DataShareRequest,android.view.contentcapture.IDataShareWriteAdapter)>(r11, r4);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateWindowAttributes(android.view.WindowManager$LayoutParams)
    {
        android.view.contentcapture.ContentCaptureManager r0;
        java.lang.String r1, $r5;
        boolean $z0, z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r2;
        java.lang.Throwable $r6;
        android.view.WindowManager$LayoutParams r7;
        java.lang.Object r9;
        android.view.contentcapture.MainContentCaptureSession r10;

        r0 := @this: android.view.contentcapture.ContentCaptureManager;

        r7 := @parameter0: android.view.WindowManager$LayoutParams;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z0 == 0 goto label01;

        r1 = <android.view.contentcapture.ContentCaptureManager: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateWindowAttributes(): window flags=");

        $i6 = r7.<android.view.WindowManager$LayoutParams: int flags>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r5);

     label01:
        $i0 = r7.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        r9 = r0.<android.view.contentcapture.ContentCaptureManager: java.lang.Object mLock>;

        entermonitor r9;

        if z2 == 0 goto label06;

     label04:
        $i4 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        $i5 = $i4 | 2;

        r0.<android.view.contentcapture.ContentCaptureManager: int mFlags> = $i5;

     label05:
        goto label07;

     label06:
        $i2 = r0.<android.view.contentcapture.ContentCaptureManager: int mFlags>;

        $i3 = $i2 & -3;

        r0.<android.view.contentcapture.ContentCaptureManager: int mFlags> = $i3;

     label07:
        r10 = r0.<android.view.contentcapture.ContentCaptureManager: android.view.contentcapture.MainContentCaptureSession mMainSession>;

        exitmonitor r9;

     label08:
        if r10 == null goto label09;

        virtualinvoke r10.<android.view.contentcapture.MainContentCaptureSession: boolean setDisabled(boolean)>(z2);

     label09:
        return;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r9;

     label12:
        throw $r6;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
