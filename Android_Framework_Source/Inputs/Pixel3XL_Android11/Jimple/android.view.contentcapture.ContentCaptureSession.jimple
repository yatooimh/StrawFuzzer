public abstract class android.view.contentcapture.ContentCaptureSession extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final int FLUSH_REASON_FULL;
    public static final int FLUSH_REASON_IDLE_TIMEOUT;
    public static final int FLUSH_REASON_SESSION_CONNECTED;
    public static final int FLUSH_REASON_SESSION_FINISHED;
    public static final int FLUSH_REASON_SESSION_STARTED;
    public static final int FLUSH_REASON_TEXT_CHANGE_TIMEOUT;
    public static final int FLUSH_REASON_VIEW_ROOT_ENTERED;
    private static final java.security.SecureRandom ID_GENERATOR;
    private static final int INITIAL_CHILDREN_CAPACITY;
    public static final int STATE_ACTIVE;
    public static final int STATE_BY_APP;
    public static final int STATE_DISABLED;
    public static final int STATE_DUPLICATED_ID;
    public static final int STATE_FLAG_SECURE;
    public static final int STATE_INTERNAL_ERROR;
    public static final int STATE_NOT_WHITELISTED;
    public static final int STATE_NO_RESPONSE;
    public static final int STATE_NO_SERVICE;
    public static final int STATE_SERVICE_DIED;
    public static final int STATE_SERVICE_RESURRECTED;
    public static final int STATE_SERVICE_UPDATING;
    public static final int STATE_WAITING_FOR_SERVER;
    private static final java.lang.String TAG;
    public static final int UNKNOWN_STATE;
    private java.util.ArrayList mChildren;
    private android.view.contentcapture.ContentCaptureContext mClientContext;
    private android.view.contentcapture.ContentCaptureSessionId mContentCaptureSessionId;
    private boolean mDestroyed;
    protected final int mId;
    private final java.lang.Object mLock;
    private int mState;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.security.SecureRandom $r2;

        <android.view.contentcapture.ContentCaptureSession: int UNKNOWN_STATE> = 0;

        <android.view.contentcapture.ContentCaptureSession: int STATE_WAITING_FOR_SERVER> = 1;

        <android.view.contentcapture.ContentCaptureSession: int STATE_SERVICE_UPDATING> = 2048;

        <android.view.contentcapture.ContentCaptureSession: int STATE_SERVICE_RESURRECTED> = 4096;

        <android.view.contentcapture.ContentCaptureSession: int STATE_SERVICE_DIED> = 1024;

        <android.view.contentcapture.ContentCaptureSession: int STATE_NO_SERVICE> = 16;

        <android.view.contentcapture.ContentCaptureSession: int STATE_NO_RESPONSE> = 128;

        <android.view.contentcapture.ContentCaptureSession: int STATE_NOT_WHITELISTED> = 512;

        <android.view.contentcapture.ContentCaptureSession: int STATE_INTERNAL_ERROR> = 256;

        <android.view.contentcapture.ContentCaptureSession: int STATE_FLAG_SECURE> = 32;

        <android.view.contentcapture.ContentCaptureSession: int STATE_DUPLICATED_ID> = 8;

        <android.view.contentcapture.ContentCaptureSession: int STATE_DISABLED> = 4;

        <android.view.contentcapture.ContentCaptureSession: int STATE_BY_APP> = 64;

        <android.view.contentcapture.ContentCaptureSession: int STATE_ACTIVE> = 2;

        <android.view.contentcapture.ContentCaptureSession: int INITIAL_CHILDREN_CAPACITY> = 5;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_VIEW_ROOT_ENTERED> = 2;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_TEXT_CHANGE_TIMEOUT> = 6;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_SESSION_STARTED> = 3;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_SESSION_FINISHED> = 4;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_SESSION_CONNECTED> = 7;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_IDLE_TIMEOUT> = 5;

        <android.view.contentcapture.ContentCaptureSession: int FLUSH_REASON_FULL> = 1;

        $r0 = class "Landroid/view/contentcapture/ContentCaptureSession;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG> = $r1;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        <android.view.contentcapture.ContentCaptureSession: java.security.SecureRandom ID_GENERATOR> = $r2;

        return;
    }

    protected void <init>()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $i0 = staticinvoke <android.view.contentcapture.ContentCaptureSession: int getRandomSessionId()>();

        specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: void <init>(int)>($i0);

        return;
    }

    public void <init>(int)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        int i0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.view.contentcapture.ContentCaptureSession: java.lang.Object mLock> = $r1;

        z0 = 0;

        r0.<android.view.contentcapture.ContentCaptureSession: int mState> = 0;

        if i0 == 0 goto label1;

        z0 = 1;

     label1:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        r0.<android.view.contentcapture.ContentCaptureSession: int mId> = i0;

        return;
    }

    void <init>(android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureContext r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: void <init>()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.view.contentcapture.ContentCaptureContext) $r2;

        r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext mClientContext> = $r3;

        return;
    }

    public static java.lang.String getFlushReasonAsString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKOWN-");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        return "CONNECTED";

     label3:
        return "TEXT_CHANGE";

     label4:
        return "IDLE";

     label5:
        return "FINISHED";

     label6:
        return "STARTED";

     label7:
        return "VIEW_ROOT";

     label8:
        return "FULL";
    }

    private static int getRandomSessionId()
    {
        int i0;
        java.security.SecureRandom $r0;

     label1:
        $r0 = <android.view.contentcapture.ContentCaptureSession: java.security.SecureRandom ID_GENERATOR>;

        i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt()>();

        if i0 == 0 goto label2;

        return i0;

     label2:
        goto label1;
    }

    protected static java.lang.String getStateAsString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6, r7;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        if i0 != 0 goto label1;

        r7 = "UNKNOWN";

        goto label2;

     label1:
        r7 = staticinvoke <android.util.DebugUtils: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/view/contentcapture/ContentCaptureSession;", "STATE_", i0);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void close()
    {
        android.view.contentcapture.ContentCaptureSession r0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void destroy()>();

        return;
    }

    public final android.view.contentcapture.ContentCaptureSession createContentCaptureSession(android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.ContentCaptureSession r0, r14;
        boolean $z0;
        java.util.ArrayList $r2, $r3, r17;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        java.lang.String $r11, r15;
        java.lang.Throwable $r12;
        android.view.contentcapture.ContentCaptureContext r13;
        java.lang.Object r16;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r13 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        r14 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSession newChild(android.view.contentcapture.ContentCaptureContext)>(r13);

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z0 == 0 goto label1;

        r15 = <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createContentCaptureSession(");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parent=");

        $i0 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", child=");

        $i1 = r14.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r15, $r11);

     label1:
        r16 = r0.<android.view.contentcapture.ContentCaptureSession: java.lang.Object mLock>;

        entermonitor r16;

     label2:
        $r2 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        if $r2 != null goto label3;

        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>(int)>(5);

        r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren> = r17;

     label3:
        $r3 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        exitmonitor r16;

     label4:
        return r14;

     label5:
        $r12 := @caughtexception;

     label6:
        exitmonitor r16;

     label7:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public final void destroy()
    {
        android.view.contentcapture.ContentCaptureSession r0, r35;
        int i0, $i2, $i3, $i5, i8;
        java.lang.String r1, $r9, $r11, $r15, $r19, $r26, r29, r31, r33;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5, r28;
        java.lang.Throwable $r20, $r27;
        java.lang.Exception $r21;
        java.lang.StringBuilder r30, r32, r34, r37;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r28 = r0.<android.view.contentcapture.ContentCaptureSession: java.lang.Object mLock>;

        entermonitor r28;

     label01:
        $z0 = r0.<android.view.contentcapture.ContentCaptureSession: boolean mDestroyed>;

        if $z0 == 0 goto label04;

        $z3 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z3 == 0 goto label02;

        r29 = <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroy(");

        $i5 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): already destroyed");

        $r19 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r29, $r19);

     label02:
        exitmonitor r28;

     label03:
        return;

     label04:
        r0.<android.view.contentcapture.ContentCaptureSession: boolean mDestroyed> = 1;

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z1 == 0 goto label05;

        r31 = <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG>;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroy(): state=");

        $i2 = r0.<android.view.contentcapture.ContentCaptureSession: int mState>;

        $r11 = staticinvoke <android.view.contentcapture.ContentCaptureSession: java.lang.String getStateAsString(int)>($i2);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mId=");

        $i3 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r31, $r15);

     label05:
        $r2 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        if $r2 == null goto label14;

        $r3 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $z2 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z2 == 0 goto label06;

        r33 = <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG>;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" children first");

        $r9 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r33, $r9);

     label06:
        i8 = 0;

     label07:
        if i8 >= i0 goto label14;

     label08:
        $r4 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r35 = (android.view.contentcapture.ContentCaptureSession) $r5;

     label09:
        virtualinvoke r35.<android.view.contentcapture.ContentCaptureSession: void destroy()>();

     label10:
        goto label13;

     label11:
        $r21 := @caughtexception;

     label12:
        r1 = <android.view.contentcapture.ContentCaptureSession: java.lang.String TAG>;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception destroying child session #");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r26);

     label13:
        i8 = i8 + 1;

        goto label07;

     label14:
        exitmonitor r28;

     label15:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void flush(int)>(4);

     label16:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void onDestroy()>();

        return;

     label17:
        $r27 := @caughtexception;

        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void onDestroy()>();

        throw $r27;

     label18:
        $r20 := @caughtexception;

     label19:
        exitmonitor r28;

     label20:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.contentcapture.ContentCaptureSession r0, r3;
        java.io.PrintWriter r1;
        java.lang.Object r2, $r11;
        int i0, $i1, i2;
        android.view.contentcapture.ContentCaptureContext $r4, $r12;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6, $r9, $r10;
        java.lang.Throwable $r13;
        java.lang.String r14, r16;
        java.lang.StringBuilder r15;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("id: ");

        $i1 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

        $r4 = r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext mClientContext>;

        if $r4 == null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        $r12 = r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext mClientContext>;

        virtualinvoke $r12.<android.view.contentcapture.ContentCaptureContext: void dump(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label01:
        r2 = r0.<android.view.contentcapture.ContentCaptureSession: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("destroyed: ");

        $z0 = r0.<android.view.contentcapture.ContentCaptureSession: boolean mDestroyed>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        $r5 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        if $r5 == null goto label07;

        $r6 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        $z1 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r16 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("number children: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(i0);

     label03:
        i2 = 0;

     label04:
        if i2 >= i0 goto label07;

     label05:
        $r10 = r0.<android.view.contentcapture.ContentCaptureSession: java.util.ArrayList mChildren>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (android.view.contentcapture.ContentCaptureSession) $r11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(": ");

        virtualinvoke r3.<android.view.contentcapture.ContentCaptureSession: void dump(java.lang.String,java.io.PrintWriter)>(r16, r1);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    abstract void flush(int);

    public final android.view.contentcapture.ContentCaptureContext getContentCaptureContext()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureContext $r1;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext mClientContext>;

        return $r1;
    }

    public final android.view.contentcapture.ContentCaptureSessionId getContentCaptureSessionId()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureSessionId $r1, $r2, $r3;
        int $i0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSessionId mContentCaptureSessionId>;

        if $r1 != null goto label1;

        $r3 = new android.view.contentcapture.ContentCaptureSessionId;

        $i0 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        specialinvoke $r3.<android.view.contentcapture.ContentCaptureSessionId: void <init>(int)>($i0);

        r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSessionId mContentCaptureSessionId> = $r3;

     label1:
        $r2 = r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureSessionId mContentCaptureSessionId>;

        return $r2;
    }

    public int getId()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $i0 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        return $i0;
    }

    abstract android.view.contentcapture.MainContentCaptureSession getMainCaptureSession();

    abstract void internalNotifySessionPaused();

    abstract void internalNotifySessionResumed();

    abstract void internalNotifyViewAppeared(android.view.contentcapture.ViewNode$ViewStructureImpl);

    abstract void internalNotifyViewDisappeared(android.view.autofill.AutofillId);

    abstract void internalNotifyViewInsetsChanged(android.graphics.Insets);

    abstract void internalNotifyViewTextChanged(android.view.autofill.AutofillId, java.lang.CharSequence);

    public abstract void internalNotifyViewTreeEvent(boolean);

    boolean isContentCaptureEnabled()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        java.lang.Object r1;
        boolean $z0, z1;
        java.lang.Throwable $r3;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 = r0.<android.view.contentcapture.ContentCaptureSession: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.view.contentcapture.ContentCaptureSession: boolean mDestroyed>;

        if $z0 != 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.view.autofill.AutofillId newAutofillId(android.view.autofill.AutofillId, long)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.autofill.AutofillId r1, $r4;
        long l0;
        boolean $z0;
        java.lang.Object[] $r3;
        int $i1;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        l0 := @parameter1: long;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r1.<android.view.autofill.AutofillId: boolean isNonVirtual()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "hostId cannot be virtual: %s", $r3);

        $r4 = new android.view.autofill.AutofillId;

        $i1 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        specialinvoke $r4.<android.view.autofill.AutofillId: void <init>(android.view.autofill.AutofillId,long,int)>(r1, l0, $i1);

        return $r4;
    }

    abstract android.view.contentcapture.ContentCaptureSession newChild(android.view.contentcapture.ContentCaptureContext);

    public final android.view.ViewStructure newViewStructure(android.view.View)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.View r1;
        android.view.contentcapture.ViewNode$ViewStructureImpl $r2;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.View;

        $r2 = new android.view.contentcapture.ViewNode$ViewStructureImpl;

        specialinvoke $r2.<android.view.contentcapture.ViewNode$ViewStructureImpl: void <init>(android.view.View)>(r1);

        return $r2;
    }

    public final android.view.ViewStructure newVirtualViewStructure(android.view.autofill.AutofillId, long)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.autofill.AutofillId r1;
        long l0;
        android.view.contentcapture.ViewNode$ViewStructureImpl $r2;
        int $i1;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        l0 := @parameter1: long;

        $r2 = new android.view.contentcapture.ViewNode$ViewStructureImpl;

        $i1 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        specialinvoke $r2.<android.view.contentcapture.ViewNode$ViewStructureImpl: void <init>(android.view.autofill.AutofillId,long,int)>(r1, l0, $i1);

        return $r2;
    }

    public final void notifySessionPaused()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        boolean $z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifySessionPaused()>();

        return;
    }

    public final void notifySessionResumed()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        boolean $z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifySessionResumed()>();

        return;
    }

    public final void notifyViewAppeared(android.view.ViewStructure)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.ViewStructure r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.Class $r6;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;
        android.view.contentcapture.ViewNode$ViewStructureImpl $r10;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.ViewStructure;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r1 instanceof android.view.contentcapture.ViewNode$ViewStructureImpl;

        if $z1 == 0 goto label2;

        $r10 = (android.view.contentcapture.ViewNode$ViewStructureImpl) r1;

        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifyViewAppeared(android.view.contentcapture.ViewNode$ViewStructureImpl)>($r10);

        return;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid node class: ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public final void notifyViewDisappeared(android.view.autofill.AutofillId)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.autofill.AutofillId r1;
        boolean $z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifyViewDisappeared(android.view.autofill.AutofillId)>(r1);

        return;
    }

    public final void notifyViewInsetsChanged(android.graphics.Insets)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.graphics.Insets r1;
        boolean $z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.graphics.Insets;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifyViewInsetsChanged(android.graphics.Insets)>(r1);

        return;
    }

    public final void notifyViewTextChanged(android.view.autofill.AutofillId, java.lang.CharSequence)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.autofill.AutofillId r1;
        java.lang.CharSequence r2;
        boolean $z0;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: java.lang.CharSequence;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifyViewTextChanged(android.view.autofill.AutofillId,java.lang.CharSequence)>(r1, r2);

        return;
    }

    public final void notifyViewsDisappeared(android.view.autofill.AutofillId, long[])
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.autofill.AutofillId r1, $r4;
        long[] r2;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, i3;
        java.lang.Object[] $r3;
        long $l2;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: long[];

        z0 = virtualinvoke r1.<android.view.autofill.AutofillId: boolean isNonVirtual()>();

        i3 = 0;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>(z0, "hostId cannot be virtual: %s", $r3);

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(long[])>(r2);

        $z2 = $z1 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "virtual ids cannot be empty");

        $z3 = virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z3 != 0 goto label1;

        return;

     label1:
        i0 = lengthof r2;

     label2:
        if i3 >= i0 goto label3;

        $r4 = new android.view.autofill.AutofillId;

        $l2 = r2[i3];

        $i1 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        specialinvoke $r4.<android.view.autofill.AutofillId: void <init>(android.view.autofill.AutofillId,long,int)>(r1, $l2, $i1);

        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void internalNotifyViewDisappeared(android.view.autofill.AutofillId)>($r4);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    abstract void onDestroy();

    public final void setContentCaptureContext(android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.ContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureContext r1;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        r0.<android.view.contentcapture.ContentCaptureSession: android.view.contentcapture.ContentCaptureContext mClientContext> = r1;

        virtualinvoke r0.<android.view.contentcapture.ContentCaptureSession: void updateContentCaptureContext(android.view.contentcapture.ContentCaptureContext)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        android.view.contentcapture.ContentCaptureSession r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ContentCaptureSession;

        $i0 = r0.<android.view.contentcapture.ContentCaptureSession: int mId>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r1;
    }

    abstract void updateContentCaptureContext(android.view.contentcapture.ContentCaptureContext);
}
