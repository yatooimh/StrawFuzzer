public final class android.view.contentcapture.MainContentCaptureSession extends android.view.contentcapture.ContentCaptureSession
{
    public static final java.lang.String EXTRA_BINDER;
    public static final java.lang.String EXTRA_ENABLED_STATE;
    private static final boolean FORCE_FLUSH;
    private static final int MSG_FLUSH;
    private static final java.lang.String TAG;
    private android.os.IBinder mApplicationToken;
    private android.content.ComponentName mComponentName;
    private final android.content.Context mContext;
    private android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface;
    private android.os.IBinder$DeathRecipient mDirectServiceVulture;
    private final java.util.concurrent.atomic.AtomicBoolean mDisabled;
    private java.util.ArrayList mEvents;
    private final android.util.LocalLog mFlushHistory;
    private final android.os.Handler mHandler;
    private final android.view.contentcapture.ContentCaptureManager mManager;
    private long mNextFlush;
    private boolean mNextFlushForTextChanged;
    private final android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver mSessionStateReceiver;
    private int mState;
    private final android.view.contentcapture.IContentCaptureManager mSystemServerInterface;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.view.contentcapture.MainContentCaptureSession: int MSG_FLUSH> = 1;

        <android.view.contentcapture.MainContentCaptureSession: boolean FORCE_FLUSH> = 1;

        <android.view.contentcapture.MainContentCaptureSession: java.lang.String EXTRA_ENABLED_STATE> = "enabled";

        <android.view.contentcapture.MainContentCaptureSession: java.lang.String EXTRA_BINDER> = "binder";

        $r0 = class "Landroid/view/contentcapture/MainContentCaptureSession;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG> = $r1;

        return;
    }

    protected void <init>(android.content.Context, android.view.contentcapture.ContentCaptureManager, android.os.Handler, android.view.contentcapture.IContentCaptureManager)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureManager r1;
        android.os.Handler r2;
        android.view.contentcapture.IContentCaptureManager r3;
        int i0;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        android.content.ContentCaptureOptions $r5;
        android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver $r6;
        android.util.LocalLog $r7, r9;
        android.content.Context r8;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.contentcapture.ContentCaptureManager;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: android.view.contentcapture.IContentCaptureManager;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled> = $r4;

        r0.<android.view.contentcapture.MainContentCaptureSession: int mState> = 0;

        r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged> = 0;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.content.Context mContext> = r8;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager> = r1;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler> = r2;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureManager mSystemServerInterface> = r3;

        $r5 = r1.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        i0 = $r5.<android.content.ContentCaptureOptions: int logHistorySize>;

        if i0 <= 0 goto label1;

        $r7 = new android.util.LocalLog;

        specialinvoke $r7.<android.util.LocalLog: void <init>(int)>(i0);

        r9 = $r7;

        goto label2;

     label1:
        r9 = null;

     label2:
        r0.<android.view.contentcapture.MainContentCaptureSession: android.util.LocalLog mFlushHistory> = r9;

        $r6 = new android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver;

        specialinvoke $r6.<android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver: void <init>(android.view.contentcapture.MainContentCaptureSession)>(r0);

        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver mSessionStateReceiver> = $r6;

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        return $r0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$100(android.view.contentcapture.MainContentCaptureSession)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: android.view.contentcapture.MainContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        return $r1;
    }

    static android.os.Handler access$200(android.view.contentcapture.MainContentCaptureSession)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.view.contentcapture.MainContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$300(android.view.contentcapture.MainContentCaptureSession, int, android.os.IBinder)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.os.IBinder r1;

        r0 := @parameter0: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void onSessionStarted(int,android.os.IBinder)>(i0, r1);

        return;
    }

    static void access$400(android.view.contentcapture.MainContentCaptureSession, int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void resetSession(int)>(i0);

        return;
    }

    private android.content.pm.ParceledListSlice clearEvents()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.lang.Object r2;
        android.content.pm.ParceledListSlice r3;
        java.util.List r4;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r2 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r2 != null goto label1;

        r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label1;

     label1:
        r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents> = null;

        r3 = new android.content.pm.ParceledListSlice;

        r4 = (java.util.List) r2;

        specialinvoke r3.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r4);

        return r3;
    }

    private void destroySession()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.os.IBinder$DeathRecipient $r2;
        java.lang.StringBuilder $r3, $r16;
        android.content.Context $r5;
        int $i0, $i2, i4, $i5;
        java.lang.String $r12, $r14, $r20, $r24, r25, r30;
        android.os.RemoteException $r15;
        java.util.ArrayList r27;
        android.view.contentcapture.IContentCaptureManager $r28;
        android.view.contentcapture.IContentCaptureDirectManager r32;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z0 == 0 goto label3;

        r25 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying session (ctx=");

        $r5 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.Context mContext>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with ");

        r27 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r27 != null goto label1;

        i4 = 0;

        goto label2;

     label1:
        i4 = virtualinvoke r27.<java.util.ArrayList: int size()>();

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event(s) for ");

        $r12 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r25, $r14);

     label3:
        $r28 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureManager mSystemServerInterface>;

        $i5 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        interfaceinvoke $r28.<android.view.contentcapture.IContentCaptureManager: void finishSession(int)>($i5);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        r30 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error destroying system-service session ");

        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r20 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r30, $r24);

     label6:
        r32 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        if r32 == null goto label7;

        $r1 = interfaceinvoke r32.<android.view.contentcapture.IContentCaptureDirectManager: android.os.IBinder asBinder()>();

        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder$DeathRecipient mDirectServiceVulture>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

     label7:
        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface> = null;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void flushIfNeeded(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        java.util.ArrayList r1;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void flush(int)>(i0);

        return;

     label2:
        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label3;

        $r2 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r2, "Nothing to flush");

     label3:
        return;
    }

    private java.lang.String getActivityName()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.content.ComponentName $r1, $r4;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r10, r13;
        android.content.Context $r9;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName>;

        if $r1 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pkg:");

        $r9 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("act:");

        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName>;

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r13;
    }

    private java.lang.String getDebugState()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r12;
        int $i0;
        java.util.concurrent.atomic.AtomicBoolean $r9;
        boolean $z0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getActivityName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [state=");

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        $r6 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", disabled=");

        $r9 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z0 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private java.lang.String getDebugState(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6, $r8;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason=");

        $r6 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getFlushReasonAsString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private boolean hasStarted()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int $i0;
        boolean z0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void onSessionStarted(int, android.os.IBinder)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.lang.String r1, $r9, $r18, $r27, r32;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r22;
        int $i1, $i2, i5, $i6, i7;
        android.view.contentcapture.IContentCaptureDirectManager $r19;
        android.view.contentcapture._$$Lambda$MainContentCaptureSession$UWslDbWedtPhv49PtRsvG4TlYWw $r20;
        android.os.RemoteException $r21;
        android.os.IBinder r28;
        java.util.ArrayList r34;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i5 := @parameter0: int;

        r28 := @parameter1: android.os.IBinder;

        if r28 == null goto label4;

        $r19 = staticinvoke <android.view.contentcapture.IContentCaptureDirectManager$Stub: android.view.contentcapture.IContentCaptureDirectManager asInterface(android.os.IBinder)>(r28);

        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface> = $r19;

        $r20 = new android.view.contentcapture._$$Lambda$MainContentCaptureSession$UWslDbWedtPhv49PtRsvG4TlYWw;

        specialinvoke $r20.<android.view.contentcapture._$$Lambda$MainContentCaptureSession$UWslDbWedtPhv49PtRsvG4TlYWw: void <init>(android.view.contentcapture.MainContentCaptureSession)>(r0);

        r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder$DeathRecipient mDirectServiceVulture> = $r20;

     label1:
        interfaceinvoke r28.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r20, 0);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        r1 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to link to death on ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r27);

     label4:
        $i6 = i5 & 4;

        if $i6 == 0 goto label5;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void resetSession(int)>(i5);

        goto label6;

     label5:
        r0.<android.view.contentcapture.MainContentCaptureSession: int mState> = i5;

        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void flushIfNeeded(int)>(7);

     label6:
        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label9;

        r32 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSessionStarted() result: id=");

        $i1 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resultCode=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");

        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        $r9 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", disabled=");

        $r12 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z1 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", binder=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", events=");

        r34 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r34 != null goto label7;

        i7 = 0;

        goto label8;

     label7:
        i7 = virtualinvoke r34.<java.util.ArrayList: int size()>();

     label8:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r32, $r18);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void resetSession(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r7, $r10, $r13, $r15;
        boolean $z0, z2;
        android.os.Handler $r2;
        android.os.IBinder $r3;
        android.os.IBinder$DeathRecipient $r4;
        java.lang.StringBuilder $r5;
        java.util.concurrent.atomic.AtomicBoolean r17;
        android.view.contentcapture.IContentCaptureDirectManager r18;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        $z0 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        r1 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleResetSession(");

        $r7 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getActivityName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): from ");

        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        $r10 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r13 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r1, $r15);

     label1:
        r0.<android.view.contentcapture.MainContentCaptureSession: int mState> = i0;

        r17 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $i1 = i0 & 4;

        if $i1 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        virtualinvoke r17.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(z2);

        r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder mApplicationToken> = null;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName> = null;

        r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents> = null;

        r18 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        if r18 == null goto label4;

        $r3 = interfaceinvoke r18.<android.view.contentcapture.IContentCaptureDirectManager: android.os.IBinder asBinder()>();

        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder$DeathRecipient mDirectServiceVulture>;

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

     label4:
        r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface> = null;

        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        return;
    }

    private void scheduleFlush(int, boolean)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0, $i5, i9;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        android.view.contentcapture._$$Lambda$MainContentCaptureSession$49zT7C2BXrEdkyggyGk1Qs4d46k $r3;
        android.os.Handler $r4, $r20, $r21;
        long $l1, $l2, $l10, $l11, $l12;
        java.lang.StringBuilder $r5, $r12, $r22, $r30;
        java.lang.String $r9, $r11, $r14, $r17, $r24, $r28, $r29, $r32, $r36, r37, r39, r42, r46;
        android.view.contentcapture.ContentCaptureManager $r18, $r44;
        android.content.ContentCaptureOptions $r19, $r45;
        java.util.ArrayList r40;
        java.lang.Integer r41;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z1 == 0 goto label01;

        r37 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleScheduleFlush(");

        $r32 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", checkExisting=");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r37, $r36);

     label01:
        $z2 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: boolean hasStarted()>();

        if $z2 != 0 goto label03;

        $z7 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z7 == 0 goto label02;

        $r29 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r29, "handleScheduleFlush(): session not started yet");

     label02:
        return;

     label03:
        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 == 0 goto label06;

        r39 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleScheduleFlush(");

        $r24 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): should not be called when disabled. events=");

        r40 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r40 != null goto label04;

        r41 = null;

        goto label05;

     label04:
        $i5 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

     label05:
        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r39, $r28);

        return;

     label06:
        if z0 == 0 goto label07;

        $r20 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        $z6 = virtualinvoke $r20.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z6 == 0 goto label07;

        $r21 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        virtualinvoke $r21.<android.os.Handler: void removeMessages(int)>(1);

     label07:
        if i0 != 6 goto label08;

        $r18 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r19 = $r18.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        i9 = $r19.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs>;

        goto label10;

     label08:
        if i0 == 5 goto label09;

        $z5 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z5 == 0 goto label09;

        r42 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleScheduleFlush(");

        $r14 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): not a timeout reason because mDirectServiceInterface is not ready yet");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r42, $r17);

     label09:
        $r44 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r45 = $r44.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        i9 = $r45.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

     label10:
        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l11 = (long) i9;

        $l12 = $l10 + $l11;

        r0.<android.view.contentcapture.MainContentCaptureSession: long mNextFlush> = $l12;

        $z8 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z8 == 0 goto label11;

        r46 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleScheduleFlush(): scheduled to flush in ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms: ");

        $l2 = r0.<android.view.contentcapture.MainContentCaptureSession: long mNextFlush>;

        $r9 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>($l2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r46, $r11);

     label11:
        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        $r3 = new android.view.contentcapture._$$Lambda$MainContentCaptureSession$49zT7C2BXrEdkyggyGk1Qs4d46k;

        specialinvoke $r3.<android.view.contentcapture._$$Lambda$MainContentCaptureSession$49zT7C2BXrEdkyggyGk1Qs4d46k: void <init>(android.view.contentcapture.MainContentCaptureSession,int)>(r0, i0);

        $l1 = (long) i9;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,int,long)>($r3, 1, $l1);

        return;
    }

    private void sendEvent(android.view.contentcapture.ContentCaptureEvent)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureEvent r1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureEvent;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>(r1, 0);

        return;
    }

    private void sendEvent(android.view.contentcapture.ContentCaptureEvent, boolean)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, z14, $z15, z16, $z17, z18;
        int i0, i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, i20;
        android.view.contentcapture.ContentCaptureManager $r1;
        android.content.ContentCaptureOptions $r2;
        java.util.ArrayList $r3, $r4, $r14, $r29, $r60, r61, $r65, r66;
        java.lang.StringBuilder $r5, $r16, $r23, $r30, $r36, $r45;
        java.lang.String $r7, $r12, $r13, $r19, $r26, $r28, $r34, $r35, $r38, $r41, $r44, $r47, $r51, r53, r55, r58, r63, r68, r70;
        java.lang.Object $r15, $r20;
        android.view.autofill.AutofillId $r21, $r22;
        java.lang.CharSequence $r25;
        android.view.contentcapture.ContentCaptureEvent r52, r62, r67;
        java.util.concurrent.atomic.AtomicBoolean $r57;
        byte b21, b22;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r52 := @parameter0: android.view.contentcapture.ContentCaptureEvent;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r52.<android.view.contentcapture.ContentCaptureEvent: int getType()>();

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z1 == 0 goto label01;

        r53 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSendEvent(");

        $r47 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r53, $r51);

     label01:
        $z2 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: boolean hasStarted()>();

        if $z2 != 0 goto label02;

        if i0 == -1 goto label02;

        if i0 == 6 goto label02;

        r55 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSendEvent(");

        $r38 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r41 = staticinvoke <android.view.contentcapture.ContentCaptureEvent: java.lang.String getTypeAsString(int)>(i0);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): dropping because session not started yet");

        $r44 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r55, $r44);

        return;

     label02:
        $r57 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z12 = virtualinvoke $r57.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z12 == 0 goto label04;

        $z11 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z11 == 0 goto label03;

        $r35 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r35, "handleSendEvent(): ignoring when disabled");

     label03:
        return;

     label04:
        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r2 = $r1.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        i1 = $r2.<android.content.ContentCaptureOptions: int maxBufferSize>;

        $r3 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if $r3 != null goto label06;

        $z10 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z10 == 0 goto label05;

        r58 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSendEvent(): creating buffer for ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" events");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r58, $r34);

     label05:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>(i1);

        r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents> = $r29;

     label06:
        z14 = 1;

        $r60 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        $z15 = virtualinvoke $r60.<java.util.ArrayList: boolean isEmpty()>();

        if $z15 != 0 goto label08;

        z14 = 1;

        if i0 != 3 goto label08;

        r61 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        $i12 = virtualinvoke r61.<java.util.ArrayList: int size()>();

        $i13 = $i12 - 1;

        $r20 = virtualinvoke r61.<java.util.ArrayList: java.lang.Object get(int)>($i13);

        r62 = (android.view.contentcapture.ContentCaptureEvent) $r20;

        z14 = 1;

        $i14 = virtualinvoke r62.<android.view.contentcapture.ContentCaptureEvent: int getType()>();

        if $i14 != 3 goto label08;

        z14 = 1;

        $r21 = virtualinvoke r62.<android.view.contentcapture.ContentCaptureEvent: android.view.autofill.AutofillId getId()>();

        $r22 = virtualinvoke r52.<android.view.contentcapture.ContentCaptureEvent: android.view.autofill.AutofillId getId()>();

        $z8 = virtualinvoke $r21.<android.view.autofill.AutofillId: boolean equals(java.lang.Object)>($r22);

        if $z8 == 0 goto label08;

        $z9 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z9 == 0 goto label07;

        r63 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffering VIEW_TEXT_CHANGED event, updated text=");

        $r25 = virtualinvoke r52.<android.view.contentcapture.ContentCaptureEvent: java.lang.CharSequence getText()>();

        $r26 = staticinvoke <android.view.contentcapture.ContentCaptureHelper: java.lang.String getSanitizedString(java.lang.CharSequence)>($r25);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r63, $r28);

     label07:
        virtualinvoke r62.<android.view.contentcapture.ContentCaptureEvent: void mergeEvent(android.view.contentcapture.ContentCaptureEvent)>(r52);

        z14 = 0;

     label08:
        z16 = z14;

        $r65 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        $z17 = virtualinvoke $r65.<java.util.ArrayList: boolean isEmpty()>();

        if $z17 != 0 goto label10;

        z16 = z14;

        if i0 != 2 goto label10;

        r66 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        $i5 = virtualinvoke r66.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r15 = virtualinvoke r66.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        r67 = (android.view.contentcapture.ContentCaptureEvent) $r15;

        z16 = z14;

        $i7 = virtualinvoke r67.<android.view.contentcapture.ContentCaptureEvent: int getType()>();

        if $i7 != 2 goto label10;

        z16 = z14;

        $i8 = virtualinvoke r52.<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>();

        $i9 = virtualinvoke r67.<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>();

        if $i8 != $i9 goto label10;

        $z7 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z7 == 0 goto label09;

        r68 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffering TYPE_VIEW_DISAPPEARED events for session ");

        $i10 = virtualinvoke r67.<android.view.contentcapture.ContentCaptureEvent: int getSessionId()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r68, $r19);

     label09:
        virtualinvoke r67.<android.view.contentcapture.ContentCaptureEvent: void mergeEvent(android.view.contentcapture.ContentCaptureEvent)>(r52);

        z16 = 0;

     label10:
        if z16 == 0 goto label11;

        $r14 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r52);

     label11:
        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        i20 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i20 >= i1 goto label12;

        z18 = 1;

        goto label13;

     label12:
        z18 = 0;

     label13:
        if z18 == 0 goto label18;

        if z0 != 0 goto label18;

        if i0 != 3 goto label14;

        r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged> = 1;

        b21 = 6;

        goto label17;

     label14:
        $z4 = r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged>;

        if $z4 == 0 goto label16;

        $z5 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z5 == 0 goto label15;

        $r13 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r13, "Not scheduling flush because next flush is for text changed");

     label15:
        return;

     label16:
        b21 = 5;

     label17:
        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void scheduleFlush(int,boolean)>(b21, 1);

        return;

     label18:
        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        if $i2 == 2 goto label20;

        if i20 < i1 goto label20;

        $z3 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z3 == 0 goto label19;

        r70 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing session for ");

        $r7 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayed events");

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r70, $r12);

     label19:
        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void resetSession(int)>(132);

        return;

     label20:
        if i0 == -2 goto label22;

        if i0 == -1 goto label21;

        b22 = 1;

        goto label23;

     label21:
        b22 = 3;

        goto label23;

     label22:
        b22 = 4;

     label23:
        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void flush(int)>(b22);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.lang.String r1, r3, $r8, $r17, $r26;
        java.io.PrintWriter r2;
        int i0, $i1, $i2, $i3, $i4, $i9, i10;
        android.content.Context $r4, $r5;
        android.view.contentcapture.IContentCaptureDirectManager $r6, $r28;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.os.IBinder $r9, $r27;
        android.content.ComponentName $r10, $r25;
        android.util.LocalLog $r11, $r32;
        java.util.ArrayList $r12, $r23, r29;
        android.view.contentcapture.ContentCaptureManager $r13, $r15, $r18;
        android.content.ContentCaptureOptions $r14, $r16, $r19;
        long $l5, $l6, $l7, $l8;
        java.lang.StringBuilder $r20;
        java.lang.Object $r24;
        android.view.contentcapture.ContentCaptureEvent r31;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mContext: ");

        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.Context mContext>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("user: ");

        $r5 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        $r6 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        if $r6 == null goto label01;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mDirectServiceInterface: ");

        $r28 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r28);

     label01:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mDisabled: ");

        $r7 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("isEnabled(): ");

        $z1 = virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: boolean isContentCaptureEnabled()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("state: ");

        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        $r8 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder mApplicationToken>;

        if $r9 == null goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("app token: ");

        $r27 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder mApplicationToken>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r27);

     label02:
        $r10 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName>;

        if $r10 == null goto label03;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("component name: ");

        $r25 = r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName>;

        $r26 = virtualinvoke $r25.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

     label03:
        r29 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if r29 == null goto label08;

        $z2 = virtualinvoke r29.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label08;

        $r12 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("buffered events: ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(47);

        $r13 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r14 = $r13.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $i3 = $r14.<android.content.ContentCaptureOptions: int maxBufferSize>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

        $z3 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z3 == 0 goto label05;

        if i0 <= 0 goto label05;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        i10 = 0;

     label04:
        if i10 >= i0 goto label05;

        $r23 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r31 = (android.view.contentcapture.ContentCaptureEvent) $r24;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r31.<android.view.contentcapture.ContentCaptureEvent: void dump(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i10 = i10 + 1;

        goto label04;

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mNextFlushForTextChanged: ");

        $z4 = r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("flush frequency: ");

        $z5 = r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged>;

        if $z5 == 0 goto label06;

        $r18 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r19 = $r18.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $i9 = $r19.<android.content.ContentCaptureOptions: int textChangeFlushingFrequencyMs>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i9);

        goto label07;

     label06:
        $r15 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r16 = $r15.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $i4 = $r16.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i4);

     label07:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("next flush: ");

        $l5 = r0.<android.view.contentcapture.MainContentCaptureSession: long mNextFlush>;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = $l5 - $l6;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l7, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l8 = r0.<android.view.contentcapture.MainContentCaptureSession: long mNextFlush>;

        $r17 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>($l8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label08:
        $r32 = r0.<android.view.contentcapture.MainContentCaptureSession: android.util.LocalLog mFlushHistory>;

        if $r32 == null goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("flush history:");

        $r11 = r0.<android.view.contentcapture.MainContentCaptureSession: android.util.LocalLog mFlushHistory>;

        virtualinvoke $r11.<android.util.LocalLog: void reverseDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(null, r2, null);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label10;

     label09:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("not logging flush history");

     label10:
        specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        return;
    }

    void flush(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList $r1, $r4, $r37;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1, $z2, $z3;
        android.view.contentcapture.IContentCaptureDirectManager $r3, $r9;
        android.util.LocalLog $r5, $r23;
        android.os.Handler $r6, $r31;
        android.view.contentcapture.ContentCaptureManager $r7, $r16, $r20;
        android.content.ContentCaptureOptions $r8, $r17, $r21;
        java.lang.StringBuilder $r10, $r24, $r32, $r40, $r47;
        java.lang.String $r28, $r30, $r34, $r39, $r42, $r45, $r51, $r55, r56, r58, r60, r61, r64, r67;
        android.os.RemoteException $r46;
        android.content.pm.ParceledListSlice r65;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label02;

        r56 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleForceFlush(");

        $r42 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): should not be when disabled");

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r56, $r45);

        return;

     label02:
        $r3 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        if $r3 != null goto label05;

        $z2 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z2 == 0 goto label03;

        r58 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleForceFlush(");

        $r34 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): hold your horses, client not ready: ");

        $r37 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r58, $r39);

     label03:
        $r31 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        $z3 = virtualinvoke $r31.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z3 != 0 goto label04;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void scheduleFlush(int,boolean)>(i0, 0);

     label04:
        return;

     label05:
        r0.<android.view.contentcapture.MainContentCaptureSession: boolean mNextFlushForTextChanged> = 0;

        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.ArrayList mEvents>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r60 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getFlushReasonAsString(int)>(i0);

        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z1 == 0 goto label06;

        r61 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flushing ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event(s) for ");

        $r28 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState(int)>(i0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r61, $r30);

     label06:
        $r5 = r0.<android.view.contentcapture.MainContentCaptureSession: android.util.LocalLog mFlushHistory>;

        if $r5 == null goto label07;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("r=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m=");

        $r16 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r17 = $r16.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $i2 = $r17.<android.content.ContentCaptureOptions: int maxBufferSize>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" i=");

        $r20 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r21 = $r20.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        $i3 = $r21.<android.content.ContentCaptureOptions: int idleFlushingFrequencyMs>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        r64 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = r0.<android.view.contentcapture.MainContentCaptureSession: android.util.LocalLog mFlushHistory>;

        virtualinvoke $r23.<android.util.LocalLog: void log(java.lang.String)>(r64);

     label07:
        $r6 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(1);

        r65 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: android.content.pm.ParceledListSlice clearEvents()>();

        $r9 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureDirectManager mDirectServiceInterface>;

        $r7 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $r8 = $r7.<android.view.contentcapture.ContentCaptureManager: android.content.ContentCaptureOptions mOptions>;

        interfaceinvoke $r9.<android.view.contentcapture.IContentCaptureDirectManager: void sendEvents(android.content.pm.ParceledListSlice,int,android.content.ContentCaptureOptions)>(r65, i0, $r8);

     label08:
        goto label10;

     label09:
        $r46 := @caughtexception;

        r67 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error sending ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r51 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r55 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r67, $r55);

     label10:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    android.view.contentcapture.MainContentCaptureSession getMainCaptureSession()
    {
        android.view.contentcapture.MainContentCaptureSession r0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        return r0;
    }

    public void internalNotifySessionPaused()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifySessionPaused(int)>($i0);

        return;
    }

    public void internalNotifySessionResumed()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifySessionResumed(int)>($i0);

        return;
    }

    void internalNotifyViewAppeared(android.view.contentcapture.ViewNode$ViewStructureImpl)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.contentcapture.ViewNode$ViewStructureImpl r1;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ViewNode$ViewStructureImpl;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyViewAppeared(int,android.view.contentcapture.ViewNode$ViewStructureImpl)>($i0, r1);

        return;
    }

    void internalNotifyViewDisappeared(android.view.autofill.AutofillId)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.autofill.AutofillId r1;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyViewDisappeared(int,android.view.autofill.AutofillId)>($i0, r1);

        return;
    }

    void internalNotifyViewInsetsChanged(android.graphics.Insets)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.graphics.Insets r1;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.graphics.Insets;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyViewInsetsChanged(int,android.graphics.Insets)>($i0, r1);

        return;
    }

    void internalNotifyViewTextChanged(android.view.autofill.AutofillId, java.lang.CharSequence)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.autofill.AutofillId r1;
        java.lang.CharSequence r2;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.autofill.AutofillId;

        r2 := @parameter1: java.lang.CharSequence;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyViewTextChanged(int,android.view.autofill.AutofillId,java.lang.CharSequence)>($i0, r1, r2);

        return;
    }

    public void internalNotifyViewTreeEvent(boolean)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        boolean z0;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyViewTreeEvent(int,boolean)>($i0, z0);

        return;
    }

    boolean isContentCaptureEnabled()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        boolean $z0, $z1, z2;
        android.view.contentcapture.ContentCaptureManager $r1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $z0 = specialinvoke r0.<android.view.contentcapture.ContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.ContentCaptureManager mManager>;

        $z1 = virtualinvoke $r1.<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean isDisabled()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public void lambda$onDestroy$0$MainContentCaptureSession()
    {
        android.view.contentcapture.MainContentCaptureSession r0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void destroySession()>();

        return;
    }

    public void lambda$onSessionStarted$1$MainContentCaptureSession()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        int $i0;
        java.util.concurrent.atomic.AtomicBoolean $r8;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keeping session ");

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when service died");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r7);

        r0.<android.view.contentcapture.MainContentCaptureSession: int mState> = 1024;

        $r8 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void lambda$scheduleFlush$2$MainContentCaptureSession(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void flushIfNeeded(int)>(i0);

        return;
    }

    android.view.contentcapture.ContentCaptureSession newChild(android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureContext r1;
        android.view.contentcapture.ChildContentCaptureSession $r3;
        int $i0, $i1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        $r3 = new android.view.contentcapture.ChildContentCaptureSession;

        specialinvoke $r3.<android.view.contentcapture.ChildContentCaptureSession: void <init>(android.view.contentcapture.ContentCaptureSession,android.view.contentcapture.ContentCaptureContext)>(r0, r1);

        $i1 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        $i0 = $r3.<android.view.contentcapture.ContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyChildSessionStarted(int,int,android.view.contentcapture.ContentCaptureContext)>($i1, $i0, r1);

        return $r3;
    }

    void notifyChildSessionFinished(int, int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0, i1;
        android.view.contentcapture.ContentCaptureEvent $r1, $r2;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r1.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i1, -2);

        $r2 = virtualinvoke $r1.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setParentSessionId(int)>(i0);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>($r2, 1);

        return;
    }

    void notifyChildSessionStarted(int, int, android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0, i1;
        android.view.contentcapture.ContentCaptureContext r1;
        android.view.contentcapture.ContentCaptureEvent $r2, $r3, $r4;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.contentcapture.ContentCaptureContext;

        $r2 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i1, -1);

        $r3 = virtualinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setParentSessionId(int)>(i0);

        $r4 = virtualinvoke $r3.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setClientContext(android.view.contentcapture.ContentCaptureContext)>(r1);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>($r4, 1);

        return;
    }

    void notifyContextUpdated(int, android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.contentcapture.ContentCaptureContext r1;
        android.view.contentcapture.ContentCaptureEvent $r2, $r3;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.contentcapture.ContentCaptureContext;

        $r2 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 6);

        $r3 = virtualinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setClientContext(android.view.contentcapture.ContentCaptureContext)>(r1);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent)>($r3);

        return;
    }

    void notifySessionPaused(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.contentcapture.ContentCaptureEvent $r1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        $r1 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r1.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 8);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>($r1, 1);

        return;
    }

    void notifySessionResumed(int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.contentcapture.ContentCaptureEvent $r1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        $r1 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r1.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 7);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>($r1, 1);

        return;
    }

    void notifyViewAppeared(int, android.view.contentcapture.ViewNode$ViewStructureImpl)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.contentcapture.ViewNode$ViewStructureImpl r1;
        android.view.contentcapture.ContentCaptureEvent $r2, $r4;
        android.view.contentcapture.ViewNode $r3;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.contentcapture.ViewNode$ViewStructureImpl;

        $r2 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 1);

        $r3 = r1.<android.view.contentcapture.ViewNode$ViewStructureImpl: android.view.contentcapture.ViewNode mNode>;

        $r4 = virtualinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setViewNode(android.view.contentcapture.ViewNode)>($r3);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent)>($r4);

        return;
    }

    public void notifyViewDisappeared(int, android.view.autofill.AutofillId)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.autofill.AutofillId r1;
        android.view.contentcapture.ContentCaptureEvent $r2, $r3;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.autofill.AutofillId;

        $r2 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 2);

        $r3 = virtualinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setAutofillId(android.view.autofill.AutofillId)>(r1);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent)>($r3);

        return;
    }

    public void notifyViewInsetsChanged(int, android.graphics.Insets)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.graphics.Insets r1;
        android.view.contentcapture.ContentCaptureEvent $r2, $r3;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Insets;

        $r2 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 9);

        $r3 = virtualinvoke $r2.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setInsets(android.graphics.Insets)>(r1);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent)>($r3);

        return;
    }

    void notifyViewTextChanged(int, android.view.autofill.AutofillId, java.lang.CharSequence)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        android.view.autofill.AutofillId r1;
        java.lang.CharSequence r2;
        android.view.contentcapture.ContentCaptureEvent $r3, $r4, $r5;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.autofill.AutofillId;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r3.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, 3);

        $r4 = virtualinvoke $r3.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setAutofillId(android.view.autofill.AutofillId)>(r1);

        $r5 = virtualinvoke $r4.<android.view.contentcapture.ContentCaptureEvent: android.view.contentcapture.ContentCaptureEvent setText(java.lang.CharSequence)>(r2);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent)>($r5);

        return;
    }

    public void notifyViewTreeEvent(int, boolean)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        int i0;
        boolean z0;
        android.view.contentcapture.ContentCaptureEvent $r1;
        byte b1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        b1 = 4;

        goto label2;

     label1:
        b1 = 5;

     label2:
        $r1 = new android.view.contentcapture.ContentCaptureEvent;

        specialinvoke $r1.<android.view.contentcapture.ContentCaptureEvent: void <init>(int,int)>(i0, b1);

        specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void sendEvent(android.view.contentcapture.ContentCaptureEvent,boolean)>($r1, 1);

        return;
    }

    void onDestroy()
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.os.Handler $r1, $r3;
        android.view.contentcapture._$$Lambda$MainContentCaptureSession$HTmdDf687TPcaTnLyPp3wo0gI60 $r2;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.Handler mHandler>;

        $r2 = new android.view.contentcapture._$$Lambda$MainContentCaptureSession$HTmdDf687TPcaTnLyPp3wo0gI60;

        specialinvoke $r2.<android.view.contentcapture._$$Lambda$MainContentCaptureSession$HTmdDf687TPcaTnLyPp3wo0gI60: void <init>(android.view.contentcapture.MainContentCaptureSession)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    boolean setDisabled(boolean)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        boolean z0, $z1, $z2;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.contentcapture.MainContentCaptureSession: java.util.concurrent.atomic.AtomicBoolean mDisabled>;

        $z1 = z0 ^ 1;

        $z2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>($z1, z0);

        return $z2;
    }

    void start(android.os.IBinder, android.content.ComponentName, int)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.content.ComponentName r1;
        int i0, $i1, $i2, $i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver $r2;
        android.os.IBinder $r3, r39;
        android.view.contentcapture.IContentCaptureManager $r4;
        java.lang.StringBuilder $r5, $r14, $r24, $r32;
        java.lang.String $r9, $r13, $r18, $r21, $r23, $r28, $r30, $r34, $r38, r40, r42, r44, r47;
        android.os.RemoteException $r31;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r39 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: boolean isContentCaptureEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z1 == 0 goto label2;

        r40 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(): token=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", comp=");

        $r28 = staticinvoke <android.content.ComponentName: java.lang.String flattenToShortString(android.content.ComponentName)>(r1);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r40, $r30);

     label2:
        $z2 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: boolean hasStarted()>();

        if $z2 == 0 goto label4;

        $z4 = <android.view.contentcapture.ContentCaptureHelper: boolean sDebug>;

        if $z4 == 0 goto label3;

        r42 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring handleStartSession(");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = staticinvoke <android.content.ComponentName: java.lang.String flattenToShortString(android.content.ComponentName)>(r1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while on state ");

        $i4 = r0.<android.view.contentcapture.MainContentCaptureSession: int mState>;

        $r21 = staticinvoke <android.view.contentcapture.MainContentCaptureSession: java.lang.String getStateAsString(int)>($i4);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r42, $r23);

     label3:
        return;

     label4:
        r0.<android.view.contentcapture.MainContentCaptureSession: int mState> = 1;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder mApplicationToken> = r39;

        r0.<android.view.contentcapture.MainContentCaptureSession: android.content.ComponentName mComponentName> = r1;

        $z3 = <android.view.contentcapture.ContentCaptureHelper: boolean sVerbose>;

        if $z3 == 0 goto label5;

        r44 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleStartSession(): token=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", act=");

        $r9 = specialinvoke r0.<android.view.contentcapture.MainContentCaptureSession: java.lang.String getDebugState()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        $i2 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r44, $r13);

     label5:
        $r4 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.IContentCaptureManager mSystemServerInterface>;

        $r3 = r0.<android.view.contentcapture.MainContentCaptureSession: android.os.IBinder mApplicationToken>;

        $i1 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        $r2 = r0.<android.view.contentcapture.MainContentCaptureSession: android.view.contentcapture.MainContentCaptureSession$SessionStateReceiver mSessionStateReceiver>;

        interfaceinvoke $r4.<android.view.contentcapture.IContentCaptureManager: void startSession(android.os.IBinder,android.content.ComponentName,int,int,com.android.internal.os.IResultReceiver)>($r3, r1, $i1, i0, $r2);

     label6:
        goto label8;

     label7:
        $r31 := @caughtexception;

        r47 = <android.view.contentcapture.MainContentCaptureSession: java.lang.String TAG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error starting session for ");

        $r34 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r47, $r38);

     label8:
        return;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void updateContentCaptureContext(android.view.contentcapture.ContentCaptureContext)
    {
        android.view.contentcapture.MainContentCaptureSession r0;
        android.view.contentcapture.ContentCaptureContext r1;
        int $i0;

        r0 := @this: android.view.contentcapture.MainContentCaptureSession;

        r1 := @parameter0: android.view.contentcapture.ContentCaptureContext;

        $i0 = r0.<android.view.contentcapture.MainContentCaptureSession: int mId>;

        virtualinvoke r0.<android.view.contentcapture.MainContentCaptureSession: void notifyContextUpdated(int,android.view.contentcapture.ContentCaptureContext)>($i0, r1);

        return;
    }
}
