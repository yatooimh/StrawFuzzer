public final class android.view.contentcapture.ViewNode extends android.app.assist.AssistStructure$ViewNode
{
    private static final long FLAGS_ACCESSIBILITY_FOCUSED;
    private static final long FLAGS_ACTIVATED;
    private static final long FLAGS_ASSIST_BLOCKED;
    private static final long FLAGS_CHECKABLE;
    private static final long FLAGS_CHECKED;
    private static final long FLAGS_CLICKABLE;
    private static final long FLAGS_CONTEXT_CLICKABLE;
    private static final long FLAGS_DISABLED;
    private static final long FLAGS_FOCUSABLE;
    private static final long FLAGS_FOCUSED;
    private static final long FLAGS_HAS_AUTOFILL_HINTS;
    private static final long FLAGS_HAS_AUTOFILL_ID;
    private static final long FLAGS_HAS_AUTOFILL_OPTIONS;
    private static final long FLAGS_HAS_AUTOFILL_PARENT_ID;
    private static final long FLAGS_HAS_AUTOFILL_TYPE;
    private static final long FLAGS_HAS_AUTOFILL_VALUE;
    private static final long FLAGS_HAS_CLASSNAME;
    private static final long FLAGS_HAS_COMPLEX_TEXT;
    private static final long FLAGS_HAS_CONTENT_DESCRIPTION;
    private static final long FLAGS_HAS_EXTRAS;
    private static final long FLAGS_HAS_HINT_ID_ENTRY;
    private static final long FLAGS_HAS_ID;
    private static final long FLAGS_HAS_INPUT_TYPE;
    private static final long FLAGS_HAS_LARGE_COORDS;
    private static final long FLAGS_HAS_LOCALE_LIST;
    private static final long FLAGS_HAS_MAX_TEXT_EMS;
    private static final long FLAGS_HAS_MAX_TEXT_LENGTH;
    private static final long FLAGS_HAS_MIN_TEXT_EMS;
    private static final long FLAGS_HAS_SCROLL;
    private static final long FLAGS_HAS_TEXT;
    private static final long FLAGS_HAS_TEXT_ID_ENTRY;
    private static final long FLAGS_LONG_CLICKABLE;
    private static final long FLAGS_OPAQUE;
    private static final long FLAGS_SELECTED;
    private static final long FLAGS_VISIBILITY_MASK;
    private static final java.lang.String TAG;
    private java.lang.String[] mAutofillHints;
    private android.view.autofill.AutofillId mAutofillId;
    private java.lang.CharSequence[] mAutofillOptions;
    private int mAutofillType;
    private android.view.autofill.AutofillValue mAutofillValue;
    private java.lang.String mClassName;
    private java.lang.CharSequence mContentDescription;
    private android.os.Bundle mExtras;
    private long mFlags;
    private int mHeight;
    private java.lang.String mHintIdEntry;
    private int mId;
    private java.lang.String mIdEntry;
    private java.lang.String mIdPackage;
    private java.lang.String mIdType;
    private int mInputType;
    private android.os.LocaleList mLocaleList;
    private int mMaxEms;
    private int mMaxLength;
    private int mMinEms;
    private android.view.autofill.AutofillId mParentAutofillId;
    private int mScrollX;
    private int mScrollY;
    private android.view.contentcapture.ViewNode$ViewNodeText mText;
    private java.lang.String mTextIdEntry;
    private int mWidth;
    private int mX;
    private int mY;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.view.contentcapture.ViewNode: long FLAGS_VISIBILITY_MASK> = 12L;

        <android.view.contentcapture.ViewNode: long FLAGS_SELECTED> = 1048576L;

        <android.view.contentcapture.ViewNode: long FLAGS_OPAQUE> = 4194304L;

        <android.view.contentcapture.ViewNode: long FLAGS_LONG_CLICKABLE> = 8192L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_TEXT_ID_ENTRY> = 1073741824L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_TEXT> = 1L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_SCROLL> = 512L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_MIN_TEXT_EMS> = 134217728L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_MAX_TEXT_LENGTH> = 536870912L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_MAX_TEXT_EMS> = 268435456L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_LOCALE_LIST> = 33554432L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_LARGE_COORDS> = 256L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_INPUT_TYPE> = 67108864L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_ID> = 128L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_HINT_ID_ENTRY> = 34359738368L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_EXTRAS> = 16777216L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_CONTENT_DESCRIPTION> = 8388608L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_COMPLEX_TEXT> = 2L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_CLASSNAME> = 16L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_VALUE> = 4294967296L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_TYPE> = 2147483648L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_PARENT_ID> = 64L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_OPTIONS> = 17179869184L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_ID> = 32L;

        <android.view.contentcapture.ViewNode: long FLAGS_HAS_AUTOFILL_HINTS> = 8589934592L;

        <android.view.contentcapture.ViewNode: long FLAGS_FOCUSED> = 65536L;

        <android.view.contentcapture.ViewNode: long FLAGS_FOCUSABLE> = 32768L;

        <android.view.contentcapture.ViewNode: long FLAGS_DISABLED> = 2048L;

        <android.view.contentcapture.ViewNode: long FLAGS_CONTEXT_CLICKABLE> = 16384L;

        <android.view.contentcapture.ViewNode: long FLAGS_CLICKABLE> = 4096L;

        <android.view.contentcapture.ViewNode: long FLAGS_CHECKED> = 524288L;

        <android.view.contentcapture.ViewNode: long FLAGS_CHECKABLE> = 262144L;

        <android.view.contentcapture.ViewNode: long FLAGS_ASSIST_BLOCKED> = 1024L;

        <android.view.contentcapture.ViewNode: long FLAGS_ACTIVATED> = 2097152L;

        <android.view.contentcapture.ViewNode: long FLAGS_ACCESSIBILITY_FOCUSED> = 131072L;

        $r0 = class "Landroid/view/contentcapture/ViewNode;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.contentcapture.ViewNode: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        android.view.contentcapture.ViewNode r0;

        r0 := @this: android.view.contentcapture.ViewNode;

        specialinvoke r0.<android.app.assist.AssistStructure$ViewNode: void <init>()>();

        r0.<android.view.contentcapture.ViewNode: int mId> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMinEms> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMaxEms> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMaxLength> = -1;

        r0.<android.view.contentcapture.ViewNode: int mAutofillType> = 0;

        return;
    }

    private void <init>(long, android.os.Parcel)
    {
        android.view.contentcapture.ViewNode r0;
        long l0, $l1, $l3, $l5, $l7, $l15, $l17, $l19, $l21, $l23, $l25, $l27, $l29, $l31, $l33, $l35, $l37, $l39, $l41, $l54, $l56, $l59;
        android.os.Parcel r1;
        java.lang.String r2, $r3, $r8, $r15, $r16, $r17;
        byte $b2, $b4, $b6, $b8, $b16, $b18, $b20, $b22, $b24, $b26, $b28, $b30, $b32, $b34, $b36, $b38, $b40, $b42, $b55, $b57, $b60;
        int $i9, $i10, $i11, $i12, $i13, $i14, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i58, i61, i62;
        java.lang.CharSequence[] $r4;
        android.os.Parcelable $r5, $r9, $r19, $r21;
        android.view.autofill.AutofillValue $r6;
        java.lang.String[] $r7;
        android.os.LocaleList $r10;
        android.os.Bundle $r11;
        android.os.Parcelable$Creator $r12;
        java.lang.Object $r13;
        java.lang.CharSequence $r14;
        android.view.contentcapture.ViewNode$ViewNodeText $r18;
        android.view.autofill.AutofillId $r20, $r22;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.app.assist.AssistStructure$ViewNode: void <init>()>();

        r0.<android.view.contentcapture.ViewNode: int mId> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMinEms> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMaxEms> = -1;

        r0.<android.view.contentcapture.ViewNode: int mMaxLength> = -1;

        z0 = 0;

        r0.<android.view.contentcapture.ViewNode: int mAutofillType> = 0;

        r0.<android.view.contentcapture.ViewNode: long mFlags> = l0;

        $l1 = 32L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label01;

        $r21 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r22 = (android.view.autofill.AutofillId) $r21;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId> = $r22;

     label01:
        $l3 = 64L & l0;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label02;

        $r19 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r20 = (android.view.autofill.AutofillId) $r19;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mParentAutofillId> = $r20;

     label02:
        $l5 = 1L & l0;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label04;

        $l54 = 2L & l0;

        $b55 = $l54 cmp 0L;

        if $b55 != 0 goto label03;

        z0 = 1;

     label03:
        $r18 = new android.view.contentcapture.ViewNode$ViewNodeText;

        specialinvoke $r18.<android.view.contentcapture.ViewNode$ViewNodeText: void <init>(android.os.Parcel,boolean)>(r1, z0);

        r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText> = $r18;

     label04:
        $l56 = 16L & l0;

        $b57 = $l56 cmp 0L;

        if $b57 == 0 goto label05;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mClassName> = $r17;

     label05:
        $l7 = 128L & l0;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label06;

        i58 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mId> = i58;

        if i58 == -1 goto label06;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdEntry> = r2;

        if r2 == null goto label06;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdType> = $r15;

        $r16 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdPackage> = $r16;

     label06:
        $l59 = 256L & l0;

        $b60 = $l59 cmp 0L;

        if $b60 == 0 goto label07;

        $i50 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mX> = $i50;

        $i51 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mY> = $i51;

        $i52 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mWidth> = $i52;

        $i53 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mHeight> = $i53;

        goto label08;

     label07:
        i61 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i9 = i61 & 32767;

        r0.<android.view.contentcapture.ViewNode: int mX> = $i9;

        $i10 = i61 >> 16;

        $i11 = $i10 & 32767;

        r0.<android.view.contentcapture.ViewNode: int mY> = $i11;

        i62 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i12 = i62 & 32767;

        r0.<android.view.contentcapture.ViewNode: int mWidth> = $i12;

        $i13 = i62 >> 16;

        $i14 = $i13 & 32767;

        r0.<android.view.contentcapture.ViewNode: int mHeight> = $i14;

     label08:
        $l15 = 512L & l0;

        $b16 = $l15 cmp 0L;

        if $b16 == 0 goto label09;

        $i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mScrollX> = $i48;

        $i49 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mScrollY> = $i49;

     label09:
        $l17 = 8388608L & l0;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label10;

        $r12 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r14 = (java.lang.CharSequence) $r13;

        r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence mContentDescription> = $r14;

     label10:
        $l19 = 16777216L & l0;

        $b20 = $l19 cmp 0L;

        if $b20 == 0 goto label11;

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras> = $r11;

     label11:
        $l21 = 33554432L & l0;

        $b22 = $l21 cmp 0L;

        if $b22 == 0 goto label12;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r10 = (android.os.LocaleList) $r9;

        r0.<android.view.contentcapture.ViewNode: android.os.LocaleList mLocaleList> = $r10;

     label12:
        $l23 = 67108864L & l0;

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label13;

        $i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mInputType> = $i47;

     label13:
        $l25 = 134217728L & l0;

        $b26 = $l25 cmp 0L;

        if $b26 == 0 goto label14;

        $i46 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mMinEms> = $i46;

     label14:
        $l27 = 268435456L & l0;

        $b28 = $l27 cmp 0L;

        if $b28 == 0 goto label15;

        $i45 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mMaxEms> = $i45;

     label15:
        $l29 = 536870912L & l0;

        $b30 = $l29 cmp 0L;

        if $b30 == 0 goto label16;

        $i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mMaxLength> = $i44;

     label16:
        $l31 = 1073741824L & l0;

        $b32 = $l31 cmp 0L;

        if $b32 == 0 goto label17;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mTextIdEntry> = $r8;

     label17:
        $l33 = 2147483648L & l0;

        $b34 = $l33 cmp 0L;

        if $b34 == 0 goto label18;

        $i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.contentcapture.ViewNode: int mAutofillType> = $i43;

     label18:
        $l35 = 8589934592L & l0;

        $b36 = $l35 cmp 0L;

        if $b36 == 0 goto label19;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String[] mAutofillHints> = $r7;

     label19:
        $l37 = 4294967296L & l0;

        $b38 = $l37 cmp 0L;

        if $b38 == 0 goto label20;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r6 = (android.view.autofill.AutofillValue) $r5;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue mAutofillValue> = $r6;

     label20:
        $l39 = 17179869184L & l0;

        $b40 = $l39 cmp 0L;

        if $b40 == 0 goto label21;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence[] mAutofillOptions> = $r4;

     label21:
        $l41 = 34359738368L & l0;

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label22;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.contentcapture.ViewNode: java.lang.String mHintIdEntry> = $r3;

     label22:
        return;
    }

    static android.view.autofill.AutofillId access$000(android.view.contentcapture.ViewNode)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillId $r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId>;

        return $r1;
    }

    static android.view.autofill.AutofillId access$002(android.view.contentcapture.ViewNode, android.view.autofill.AutofillId)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillId r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.view.autofill.AutofillId;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId> = r1;

        return r1;
    }

    static int access$1002(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mWidth> = i0;

        return i0;
    }

    static android.view.autofill.AutofillId access$102(android.view.contentcapture.ViewNode, android.view.autofill.AutofillId)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillId r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.view.autofill.AutofillId;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mParentAutofillId> = r1;

        return r1;
    }

    static int access$1102(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mHeight> = i0;

        return i0;
    }

    static java.lang.String access$1200()
    {
        java.lang.String $r0;

        $r0 = <android.view.contentcapture.ViewNode: java.lang.String TAG>;

        return $r0;
    }

    static long access$1300(android.view.contentcapture.ViewNode)
    {
        android.view.contentcapture.ViewNode r0;
        long $l0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        return $l0;
    }

    static long access$1302(android.view.contentcapture.ViewNode, long)
    {
        android.view.contentcapture.ViewNode r0;
        long l0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        l0 := @parameter1: long;

        r0.<android.view.contentcapture.ViewNode: long mFlags> = l0;

        return l0;
    }

    static java.lang.String access$1402(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mClassName> = r1;

        return r1;
    }

    static java.lang.CharSequence access$1502(android.view.contentcapture.ViewNode, java.lang.CharSequence)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence mContentDescription> = r1;

        return r1;
    }

    static java.lang.String access$1602(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mTextIdEntry> = r1;

        return r1;
    }

    static java.lang.String access$1702(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mHintIdEntry> = r1;

        return r1;
    }

    static android.os.Bundle access$1800(android.view.contentcapture.ViewNode)
    {
        android.view.contentcapture.ViewNode r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras>;

        return $r1;
    }

    static android.os.Bundle access$1802(android.view.contentcapture.ViewNode, android.os.Bundle)
    {
        android.view.contentcapture.ViewNode r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.os.Bundle;

        r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras> = r1;

        return r1;
    }

    static int access$1902(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mAutofillType> = i0;

        return i0;
    }

    static java.lang.String[] access$2002(android.view.contentcapture.ViewNode, java.lang.String[])
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String[] r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String[];

        r0.<android.view.contentcapture.ViewNode: java.lang.String[] mAutofillHints> = r1;

        return r1;
    }

    static int access$202(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mId> = i0;

        return i0;
    }

    static android.view.autofill.AutofillValue access$2102(android.view.contentcapture.ViewNode, android.view.autofill.AutofillValue)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillValue r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.view.autofill.AutofillValue;

        r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue mAutofillValue> = r1;

        return r1;
    }

    static java.lang.CharSequence[] access$2202(android.view.contentcapture.ViewNode, java.lang.CharSequence[])
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.CharSequence[] r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.CharSequence[];

        r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence[] mAutofillOptions> = r1;

        return r1;
    }

    static int access$2302(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mInputType> = i0;

        return i0;
    }

    static int access$2402(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mMinEms> = i0;

        return i0;
    }

    static int access$2502(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mMaxEms> = i0;

        return i0;
    }

    static int access$2602(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mMaxLength> = i0;

        return i0;
    }

    static android.os.LocaleList access$2702(android.view.contentcapture.ViewNode, android.os.LocaleList)
    {
        android.view.contentcapture.ViewNode r0;
        android.os.LocaleList r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.os.LocaleList;

        r0.<android.view.contentcapture.ViewNode: android.os.LocaleList mLocaleList> = r1;

        return r1;
    }

    static android.view.contentcapture.ViewNode$ViewNodeText access$2800(android.view.contentcapture.ViewNode)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText $r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        return $r1;
    }

    static android.view.contentcapture.ViewNode$ViewNodeText access$2802(android.view.contentcapture.ViewNode, android.view.contentcapture.ViewNode$ViewNodeText)
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: android.view.contentcapture.ViewNode$ViewNodeText;

        r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText> = r1;

        return r1;
    }

    static java.lang.String access$302(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdPackage> = r1;

        return r1;
    }

    static java.lang.String access$402(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdType> = r1;

        return r1;
    }

    static java.lang.String access$502(android.view.contentcapture.ViewNode, java.lang.String)
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String r1;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        r1 := @parameter1: java.lang.String;

        r0.<android.view.contentcapture.ViewNode: java.lang.String mIdEntry> = r1;

        return r1;
    }

    static int access$602(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mX> = i0;

        return i0;
    }

    static int access$702(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mY> = i0;

        return i0;
    }

    static int access$802(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mScrollX> = i0;

        return i0;
    }

    static int access$902(android.view.contentcapture.ViewNode, int)
    {
        android.view.contentcapture.ViewNode r0;
        int i0;

        r0 := @parameter0: android.view.contentcapture.ViewNode;

        i0 := @parameter1: int;

        r0.<android.view.contentcapture.ViewNode: int mScrollY> = i0;

        return i0;
    }

    public static android.view.contentcapture.ViewNode readFromParcel(android.os.Parcel)
    {
        long l0;
        byte $b1;
        android.view.contentcapture.ViewNode $r0, r2;
        android.os.Parcel r1;

        r1 := @parameter0: android.os.Parcel;

        l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        r2 = null;

        goto label2;

     label1:
        $r0 = new android.view.contentcapture.ViewNode;

        specialinvoke $r0.<android.view.contentcapture.ViewNode: void <init>(long,android.os.Parcel)>(l0, r1);

        r2 = $r0;

     label2:
        return r2;
    }

    private void writeSelfToParcel(android.os.Parcel, int)
    {
        android.view.contentcapture.ViewNode r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i83;
        android.view.autofill.AutofillId $r2, $r3, $r24, $r25;
        android.os.Bundle $r4, $r17;
        android.os.LocaleList $r5, $r16;
        java.lang.String $r6, $r10, $r11, $r15, $r19, $r20, $r21, $r22, $r23, $r27;
        android.view.autofill.AutofillValue $r7, $r13;
        java.lang.String[] $r8, $r14;
        java.lang.CharSequence[] $r9, $r12;
        long $l9, $l11, $l13, $l15, $l25, $l27, $l29, $l31, $l33, $l35, $l37, $l39, $l41, $l43, $l45, $l47, $l49, $l51, $l66, l75, l76, l77, l78, l79, l80, l81, l82, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, $l98, $l100;
        byte $b10, $b12, $b14, $b16, $b26, $b28, $b30, $b32, $b34, $b36, $b38, $b40, $b42, $b44, $b46, $b48, $b50, $b52, $b67, $b99, $b101;
        java.lang.CharSequence $r18, $r28;
        boolean $z0, $z1, z2, z3, z4;
        android.view.contentcapture.ViewNode$ViewNodeText r26, r29;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        l75 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        l76 = l75;

        $r2 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId>;

        if $r2 == null goto label01;

        l76 = l75 | 32L;

     label01:
        l77 = l76;

        $r3 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mParentAutofillId>;

        if $r3 == null goto label02;

        l77 = l76 | 64L;

     label02:
        r26 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        l78 = l77;

        if r26 == null goto label03;

        l79 = l77 | 1L;

        l78 = l79;

        $z1 = virtualinvoke r26.<android.view.contentcapture.ViewNode$ViewNodeText: boolean isSimple()>();

        if $z1 != 0 goto label03;

        l78 = l79 | 2L;

     label03:
        l80 = l78;

        $r27 = r0.<android.view.contentcapture.ViewNode: java.lang.String mClassName>;

        if $r27 == null goto label04;

        l80 = l78 | 16L;

     label04:
        l81 = l80;

        $i1 = r0.<android.view.contentcapture.ViewNode: int mId>;

        if $i1 == -1 goto label05;

        l81 = l80 | 128L;

     label05:
        $i2 = r0.<android.view.contentcapture.ViewNode: int mX>;

        $i3 = $i2 & -32768;

        if $i3 != 0 goto label10;

        $i69 = r0.<android.view.contentcapture.ViewNode: int mY>;

        $i70 = $i69 & -32768;

        if $i70 != 0 goto label10;

        $i71 = r0.<android.view.contentcapture.ViewNode: int mWidth>;

        $i72 = $i71 & -32768;

        if $i72 == 0 goto label06;

        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        $i73 = r0.<android.view.contentcapture.ViewNode: int mHeight>;

        $i74 = $i73 & -32768;

        if $i74 == 0 goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        l82 = l81;

        $z0 = z2 | z3;

        if $z0 == 0 goto label11;

     label10:
        l82 = l81 | 256L;

     label11:
        $i83 = r0.<android.view.contentcapture.ViewNode: int mScrollX>;

        if $i83 != 0 goto label12;

        l84 = l82;

        $i68 = r0.<android.view.contentcapture.ViewNode: int mScrollY>;

        if $i68 == 0 goto label13;

     label12:
        l84 = l82 | 512L;

     label13:
        l85 = l84;

        $r28 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence mContentDescription>;

        if $r28 == null goto label14;

        l85 = l84 | 8388608L;

     label14:
        l86 = l85;

        $r4 = r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras>;

        if $r4 == null goto label15;

        l86 = l85 | 16777216L;

     label15:
        l87 = l86;

        $r5 = r0.<android.view.contentcapture.ViewNode: android.os.LocaleList mLocaleList>;

        if $r5 == null goto label16;

        l87 = l86 | 33554432L;

     label16:
        l88 = l87;

        $i4 = r0.<android.view.contentcapture.ViewNode: int mInputType>;

        if $i4 == 0 goto label17;

        l88 = l87 | 67108864L;

     label17:
        l89 = l88;

        $i5 = r0.<android.view.contentcapture.ViewNode: int mMinEms>;

        if $i5 <= -1 goto label18;

        l89 = l88 | 134217728L;

     label18:
        l90 = l89;

        $i6 = r0.<android.view.contentcapture.ViewNode: int mMaxEms>;

        if $i6 <= -1 goto label19;

        l90 = l89 | 268435456L;

     label19:
        l91 = l90;

        $i7 = r0.<android.view.contentcapture.ViewNode: int mMaxLength>;

        if $i7 <= -1 goto label20;

        l91 = l90 | 536870912L;

     label20:
        l92 = l91;

        $r6 = r0.<android.view.contentcapture.ViewNode: java.lang.String mTextIdEntry>;

        if $r6 == null goto label21;

        l92 = l91 | 1073741824L;

     label21:
        l93 = l92;

        $r7 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue mAutofillValue>;

        if $r7 == null goto label22;

        l93 = l92 | 4294967296L;

     label22:
        l94 = l93;

        $i8 = r0.<android.view.contentcapture.ViewNode: int mAutofillType>;

        if $i8 == 0 goto label23;

        l94 = l93 | 2147483648L;

     label23:
        l95 = l94;

        $r8 = r0.<android.view.contentcapture.ViewNode: java.lang.String[] mAutofillHints>;

        if $r8 == null goto label24;

        l95 = l94 | 8589934592L;

     label24:
        l96 = l95;

        $r9 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence[] mAutofillOptions>;

        if $r9 == null goto label25;

        l96 = l95 | 17179869184L;

     label25:
        l97 = l96;

        $r10 = r0.<android.view.contentcapture.ViewNode: java.lang.String mHintIdEntry>;

        if $r10 == null goto label26;

        l97 = l96 | 34359738368L;

     label26:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l97);

        $l9 = l97 & 32L;

        $b10 = $l9 cmp 0L;

        if $b10 == 0 goto label27;

        $r25 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r25, i0);

     label27:
        $l11 = l97 & 64L;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label28;

        $r24 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mParentAutofillId>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r24, i0);

     label28:
        $l13 = l97 & 1L;

        $b14 = $l13 cmp 0L;

        if $b14 == 0 goto label31;

        r29 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        $l66 = l97 & 2L;

        $b67 = $l66 cmp 0L;

        if $b67 != 0 goto label29;

        z4 = 1;

        goto label30;

     label29:
        z4 = 0;

     label30:
        virtualinvoke r29.<android.view.contentcapture.ViewNode$ViewNodeText: void writeToParcel(android.os.Parcel,boolean)>(r1, z4);

     label31:
        $l98 = 16L & l97;

        $b99 = $l98 cmp 0L;

        if $b99 == 0 goto label32;

        $r23 = r0.<android.view.contentcapture.ViewNode: java.lang.String mClassName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r23);

     label32:
        $l15 = l97 & 128L;

        $b16 = $l15 cmp 0L;

        if $b16 == 0 goto label33;

        $i64 = r0.<android.view.contentcapture.ViewNode: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i64);

        $i65 = r0.<android.view.contentcapture.ViewNode: int mId>;

        if $i65 == -1 goto label33;

        $r19 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdEntry>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r19);

        $r20 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdEntry>;

        if $r20 == null goto label33;

        $r21 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r21);

        $r22 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdPackage>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r22);

     label33:
        $l100 = l97 & 256L;

        $b101 = $l100 cmp 0L;

        if $b101 == 0 goto label34;

        $i60 = r0.<android.view.contentcapture.ViewNode: int mX>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i60);

        $i61 = r0.<android.view.contentcapture.ViewNode: int mY>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i61);

        $i62 = r0.<android.view.contentcapture.ViewNode: int mWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i62);

        $i63 = r0.<android.view.contentcapture.ViewNode: int mHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i63);

        goto label35;

     label34:
        $i17 = r0.<android.view.contentcapture.ViewNode: int mY>;

        $i19 = $i17 << 16;

        $i18 = r0.<android.view.contentcapture.ViewNode: int mX>;

        $i20 = $i19 | $i18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i21 = r0.<android.view.contentcapture.ViewNode: int mHeight>;

        $i23 = $i21 << 16;

        $i22 = r0.<android.view.contentcapture.ViewNode: int mWidth>;

        $i24 = $i23 | $i22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

     label35:
        $l25 = l97 & 512L;

        $b26 = $l25 cmp 0L;

        if $b26 == 0 goto label36;

        $i58 = r0.<android.view.contentcapture.ViewNode: int mScrollX>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i58);

        $i59 = r0.<android.view.contentcapture.ViewNode: int mScrollY>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i59);

     label36:
        $l27 = l97 & 8388608L;

        $b28 = $l27 cmp 0L;

        if $b28 == 0 goto label37;

        $r18 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence mContentDescription>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r18, r1, 0);

     label37:
        $l29 = l97 & 16777216L;

        $b30 = $l29 cmp 0L;

        if $b30 == 0 goto label38;

        $r17 = r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r17);

     label38:
        $l31 = l97 & 33554432L;

        $b32 = $l31 cmp 0L;

        if $b32 == 0 goto label39;

        $r16 = r0.<android.view.contentcapture.ViewNode: android.os.LocaleList mLocaleList>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r16, 0);

     label39:
        $l33 = l97 & 67108864L;

        $b34 = $l33 cmp 0L;

        if $b34 == 0 goto label40;

        $i57 = r0.<android.view.contentcapture.ViewNode: int mInputType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i57);

     label40:
        $l35 = l97 & 134217728L;

        $b36 = $l35 cmp 0L;

        if $b36 == 0 goto label41;

        $i56 = r0.<android.view.contentcapture.ViewNode: int mMinEms>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i56);

     label41:
        $l37 = l97 & 268435456L;

        $b38 = $l37 cmp 0L;

        if $b38 == 0 goto label42;

        $i55 = r0.<android.view.contentcapture.ViewNode: int mMaxEms>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i55);

     label42:
        $l39 = l97 & 536870912L;

        $b40 = $l39 cmp 0L;

        if $b40 == 0 goto label43;

        $i54 = r0.<android.view.contentcapture.ViewNode: int mMaxLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i54);

     label43:
        $l41 = l97 & 1073741824L;

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label44;

        $r15 = r0.<android.view.contentcapture.ViewNode: java.lang.String mTextIdEntry>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

     label44:
        $l43 = 2147483648L & l97;

        $b44 = $l43 cmp 0L;

        if $b44 == 0 goto label45;

        $i53 = r0.<android.view.contentcapture.ViewNode: int mAutofillType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i53);

     label45:
        $l45 = 8589934592L & l97;

        $b46 = $l45 cmp 0L;

        if $b46 == 0 goto label46;

        $r14 = r0.<android.view.contentcapture.ViewNode: java.lang.String[] mAutofillHints>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r14);

     label46:
        $l47 = l97 & 4294967296L;

        $b48 = $l47 cmp 0L;

        if $b48 == 0 goto label47;

        $r13 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue mAutofillValue>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r13, 0);

     label47:
        $l49 = 17179869184L & l97;

        $b50 = $l49 cmp 0L;

        if $b50 == 0 goto label48;

        $r12 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence[] mAutofillOptions>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>($r12);

     label48:
        $l51 = 34359738368L & l97;

        $b52 = $l51 cmp 0L;

        if $b52 == 0 goto label49;

        $r11 = r0.<android.view.contentcapture.ViewNode: java.lang.String mHintIdEntry>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

     label49:
        return;
    }

    public static void writeToParcel(android.os.Parcel, android.view.contentcapture.ViewNode, int)
    {
        android.os.Parcel r0;
        android.view.contentcapture.ViewNode r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.view.contentcapture.ViewNode;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeLong(long)>(0L);

        goto label2;

     label1:
        specialinvoke r1.<android.view.contentcapture.ViewNode: void writeSelfToParcel(android.os.Parcel,int)>(r0, i0);

     label2:
        return;
    }

    public java.lang.String[] getAutofillHints()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String[] $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String[] mAutofillHints>;

        return $r1;
    }

    public android.view.autofill.AutofillId getAutofillId()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillId $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mAutofillId>;

        return $r1;
    }

    public java.lang.CharSequence[] getAutofillOptions()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.CharSequence[] $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence[] mAutofillOptions>;

        return $r1;
    }

    public int getAutofillType()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mAutofillType>;

        return $i0;
    }

    public android.view.autofill.AutofillValue getAutofillValue()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillValue $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillValue mAutofillValue>;

        return $r1;
    }

    public java.lang.String getClassName()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mClassName>;

        return $r1;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.CharSequence mContentDescription>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.view.contentcapture.ViewNode r0;
        android.os.Bundle $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.os.Bundle mExtras>;

        return $r1;
    }

    public int getHeight()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mHeight>;

        return $i0;
    }

    public java.lang.String getHint()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        java.lang.String r2;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        r2 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: java.lang.String mHint>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.lang.String getHintIdEntry()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mHintIdEntry>;

        return $r1;
    }

    public int getId()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mId>;

        return $i0;
    }

    public java.lang.String getIdEntry()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdEntry>;

        return $r1;
    }

    public java.lang.String getIdPackage()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdPackage>;

        return $r1;
    }

    public java.lang.String getIdType()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mIdType>;

        return $r1;
    }

    public int getInputType()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mInputType>;

        return $i0;
    }

    public int getLeft()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mX>;

        return $i0;
    }

    public android.os.LocaleList getLocaleList()
    {
        android.view.contentcapture.ViewNode r0;
        android.os.LocaleList $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.os.LocaleList mLocaleList>;

        return $r1;
    }

    public int getMaxTextEms()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mMaxEms>;

        return $i0;
    }

    public int getMaxTextLength()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mMaxLength>;

        return $i0;
    }

    public int getMinTextEms()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mMinEms>;

        return $i0;
    }

    public android.view.autofill.AutofillId getParentAutofillId()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.autofill.AutofillId $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: android.view.autofill.AutofillId mParentAutofillId>;

        return $r1;
    }

    public int getScrollX()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mScrollX>;

        return $i0;
    }

    public int getScrollY()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mScrollY>;

        return $i0;
    }

    public java.lang.CharSequence getText()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        java.lang.CharSequence r2;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        r2 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: java.lang.CharSequence mText>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getTextBackgroundColor()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        i0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int mTextBackgroundColor>;

        goto label2;

     label1:
        i0 = 1;

     label2:
        return i0;
    }

    public int getTextColor()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        i0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int mTextColor>;

        goto label2;

     label1:
        i0 = 1;

     label2:
        return i0;
    }

    public java.lang.String getTextIdEntry()
    {
        android.view.contentcapture.ViewNode r0;
        java.lang.String $r1;

        r0 := @this: android.view.contentcapture.ViewNode;

        $r1 = r0.<android.view.contentcapture.ViewNode: java.lang.String mTextIdEntry>;

        return $r1;
    }

    public int[] getTextLineBaselines()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int[] r2;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        r2 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int[] mLineBaselines>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int[] getTextLineCharOffsets()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int[] r2;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        r2 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int[] mLineCharOffsets>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getTextSelectionEnd()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        i0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int mTextSelectionEnd>;

        goto label2;

     label1:
        i0 = -1;

     label2:
        return i0;
    }

    public int getTextSelectionStart()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        i0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int mTextSelectionStart>;

        goto label2;

     label1:
        i0 = -1;

     label2:
        return i0;
    }

    public float getTextSize()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        float f0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        f0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: float mTextSize>;

        goto label2;

     label1:
        f0 = 0.0F;

     label2:
        return f0;
    }

    public int getTextStyle()
    {
        android.view.contentcapture.ViewNode r0;
        android.view.contentcapture.ViewNode$ViewNodeText r1;
        int i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        r1 = r0.<android.view.contentcapture.ViewNode: android.view.contentcapture.ViewNode$ViewNodeText mText>;

        if r1 == null goto label1;

        i0 = r1.<android.view.contentcapture.ViewNode$ViewNodeText: int mTextStyle>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getTop()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mY>;

        return $i0;
    }

    public int getVisibility()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        int $i2;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 12L;

        $i2 = (int) $l1;

        return $i2;
    }

    public int getWidth()
    {
        android.view.contentcapture.ViewNode r0;
        int $i0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $i0 = r0.<android.view.contentcapture.ViewNode: int mWidth>;

        return $i0;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 131072L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isActivated()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 2097152L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isAssistBlocked()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 1024L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isCheckable()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 262144L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isChecked()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 524288L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isClickable()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 4096L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isContextClickable()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 16384L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isEnabled()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 2048L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isFocusable()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 32768L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isFocused()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 65536L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isLongClickable()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 8192L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isOpaque()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 4194304L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSelected()
    {
        android.view.contentcapture.ViewNode r0;
        long $l0, $l1;
        byte $b2;
        boolean z0;

        r0 := @this: android.view.contentcapture.ViewNode;

        $l0 = r0.<android.view.contentcapture.ViewNode: long mFlags>;

        $l1 = $l0 & 1048576L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
