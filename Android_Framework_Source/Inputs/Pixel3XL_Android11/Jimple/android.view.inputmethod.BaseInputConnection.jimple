public class android.view.inputmethod.BaseInputConnection extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    static final java.lang.Object COMPOSING;
    private static final boolean DEBUG;
    private static int INVALID_INDEX;
    private static final java.lang.String TAG;
    private java.lang.Object[] mDefaultComposingSpans;
    final boolean mDummyMode;
    android.text.Editable mEditable;
    protected final android.view.inputmethod.InputMethodManager mIMM;
    android.view.KeyCharacterMap mKeyCharacterMap;
    final android.view.View mTargetView;

    static void <clinit>()
    {
        android.view.inputmethod.ComposingText $r0;

        <android.view.inputmethod.BaseInputConnection: java.lang.String TAG> = "BaseInputConnection";

        <android.view.inputmethod.BaseInputConnection: boolean DEBUG> = 0;

        $r0 = new android.view.inputmethod.ComposingText;

        specialinvoke $r0.<android.view.inputmethod.ComposingText: void <init>()>();

        <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING> = $r0;

        <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX> = -1;

        return;
    }

    public void <init>(android.view.View, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.View r1;
        boolean z0, $z1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = $r4;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = r1;

        $z1 = z0 ^ 1;

        r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z1;

        return;
    }

    void <init>(android.view.inputmethod.InputMethodManager, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean z0, $z1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = r1;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = null;

        $z1 = z0 ^ 1;

        r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z1;

        return;
    }

    private void ensureDefaultComposingSpans()
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        java.lang.Object[] $r2, $r8;
        android.view.inputmethod.InputMethodManager $r3, $r9;
        android.view.ViewRootImpl $r4, $r10;
        android.content.res.Resources$Theme $r5;
        int[] $r6;
        boolean $z0;
        android.text.Spanned $r7;
        int $i0;
        android.view.ImeFocusController $r11;
        android.view.View r12, r14;
        android.content.Context r13;
        android.content.res.TypedArray r15;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r2 != null goto label6;

        r12 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        if r12 == null goto label1;

        r13 = virtualinvoke r12.<android.view.View: android.content.Context getContext()>();

        goto label5;

     label1:
        $r3 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r4 = $r3.<android.view.inputmethod.InputMethodManager: android.view.ViewRootImpl mCurRootView>;

        if $r4 == null goto label4;

        $r9 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r10 = $r9.<android.view.inputmethod.InputMethodManager: android.view.ViewRootImpl mCurRootView>;

        $r11 = virtualinvoke $r10.<android.view.ViewRootImpl: android.view.ImeFocusController getImeFocusController()>();

        r14 = virtualinvoke $r11.<android.view.ImeFocusController: android.view.View getServedView()>();

        if r14 == null goto label2;

        r13 = virtualinvoke r14.<android.view.View: android.content.Context getContext()>();

        goto label3;

     label2:
        r13 = null;

     label3:
        goto label5;

     label4:
        r13 = null;

     label5:
        if r13 == null goto label6;

        $r5 = virtualinvoke r13.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = newarray (int)[1];

        $r6[0] = 16843312;

        r15 = virtualinvoke $r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r6);

        r1 = virtualinvoke r15.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        if r1 == null goto label6;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label6;

        $r7 = (android.text.Spanned) r1;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r8 = interfaceinvoke $r7.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Ljava/lang/Object;");

        r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans> = $r8;

     label6:
        return;
    }

    private static int findIndexBackward(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10;
        boolean $z1, $z2, $z3, z4;

        r0 := @parameter0: java.lang.CharSequence;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i8 = i6;

        i9 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i6 < 0 goto label11;

        if i9 >= i6 goto label01;

        goto label11;

     label01:
        if i7 >= 0 goto label02;

        $i5 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i5;

     label02:
        i10 = i7;

        z4 = 0;

     label03:
        if i10 != 0 goto label04;

        return i8;

     label04:
        i8 = i8 + -1;

        if i8 >= 0 goto label06;

        if z4 == 0 goto label05;

        $i4 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i4;

     label05:
        return 0;

     label06:
        c0 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i8);

        if z4 == 0 goto label08;

        $z3 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c0);

        if $z3 != 0 goto label07;

        $i3 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i3;

     label07:
        z4 = 0;

        i10 = i10 + -1;

        goto label03;

     label08:
        $z1 = staticinvoke <java.lang.Character: boolean isSurrogate(char)>(c0);

        if $z1 != 0 goto label09;

        i10 = i10 + -1;

        goto label03;

     label09:
        $z2 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c0);

        if $z2 == 0 goto label10;

        $i2 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i2;

     label10:
        z4 = 1;

        goto label03;

     label11:
        $i1 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i1;
    }

    private static int findIndexForward(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        char c1;
        boolean $z1, $z2, $z3, z4;

        r0 := @parameter0: java.lang.CharSequence;

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i7 < 0 goto label11;

        if i0 >= i7 goto label01;

        goto label11;

     label01:
        if i8 >= 0 goto label02;

        $i6 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i6;

     label02:
        i9 = i8;

        z4 = 0;

     label03:
        if i9 != 0 goto label04;

        return i7;

     label04:
        if i7 < i0 goto label06;

        if z4 == 0 goto label05;

        $i5 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i5;

     label05:
        return i0;

     label06:
        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i7);

        if z4 == 0 goto label08;

        $z3 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);

        if $z3 != 0 goto label07;

        $i4 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i4;

     label07:
        i9 = i9 + -1;

        z4 = 0;

        i7 = i7 + 1;

        goto label03;

     label08:
        $z1 = staticinvoke <java.lang.Character: boolean isSurrogate(char)>(c1);

        if $z1 != 0 goto label09;

        i9 = i9 + -1;

        i7 = i7 + 1;

        goto label03;

     label09:
        $z2 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);

        if $z2 == 0 goto label10;

        $i3 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i3;

     label10:
        z4 = 1;

        i7 = i7 + 1;

        goto label03;

     label11:
        $i2 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        return $i2;
    }

    public static int getComposingSpanEnd(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r1);

        return $i0;
    }

    public static int getComposingSpanStart(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r1);

        return $i0;
    }

    public static final void removeComposingSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object[] r1;
        java.lang.Object r2, $r3;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @parameter0: android.text.Spannable;

        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Ljava/lang/Object;");

        if r1 == null goto label3;

        $i1 = lengthof r1;

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label3;

        r2 = r1[i4];

        $i2 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r2);

        $i3 = $i2 & 256;

        if $i3 == 0 goto label2;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>(r2);

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return;
    }

    private void replaceText(java.lang.CharSequence, int, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        boolean z0, $z3;
        android.text.Editable r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        java.lang.Object[] $r5, r11;
        java.lang.Object $r6, r7, r8, r10;
        android.text.SpannableStringBuilder r12;
        java.lang.CharSequence r13, r15;
        android.text.Spannable r14;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r7 := @parameter0: java.lang.CharSequence;

        i4 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label01;

        return;

     label01:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        i5 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>(r1);

        i6 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r1);

        i7 = i5;

        i8 = i6;

        if i6 >= i5 goto label02;

        i8 = i5;

        i7 = i6;

     label02:
        if i7 == -1 goto label03;

        if i8 == -1 goto label03;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r1);

        goto label06;

     label03:
        i9 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i10 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i11 = i9;

        if i9 >= 0 goto label04;

        i11 = 0;

     label04:
        i12 = i10;

        if i10 >= 0 goto label05;

        i12 = 0;

     label05:
        i7 = i11;

        i8 = i12;

        if i12 >= i11 goto label06;

        i8 = i11;

        i7 = i12;

     label06:
        r8 = r7;

        if z0 == 0 goto label11;

        $z3 = r7 instanceof android.text.Spannable;

        if $z3 != 0 goto label09;

        r12 = new android.text.SpannableStringBuilder;

        r13 = (java.lang.CharSequence) r7;

        specialinvoke r12.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r13);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void ensureDefaultComposingSpans()>();

        r10 = r12;

        r7 = r12;

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r5 == null goto label10;

        i13 = 0;

     label07:
        r11 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $i2 = lengthof r11;

        if i13 >= $i2 goto label08;

        $r6 = r11[i13];

        $i3 = interfaceinvoke r12.<android.text.Spannable: int length()>();

        interfaceinvoke r12.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, 0, $i3, 289);

        i13 = i13 + 1;

        goto label07;

     label08:
        r10 = r12;

        r7 = r12;

        goto label10;

     label09:
        r10 = (android.text.Spannable) r7;

     label10:
        r14 = (android.text.Spannable) r10;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>(r14);

        r8 = r7;

     label11:
        if i4 <= 0 goto label12;

        $i1 = i8 - 1;

        i14 = i4 + $i1;

        goto label13;

     label12:
        i14 = i4 + i7;

     label13:
        i15 = i14;

        if i14 >= 0 goto label14;

        i15 = 0;

     label14:
        i16 = i15;

        $i0 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i15 <= $i0 goto label15;

        i16 = interfaceinvoke r1.<android.text.Editable: int length()>();

     label15:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r1, i16);

        r15 = (java.lang.CharSequence) r8;

        interfaceinvoke r1.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i7, i8, r15);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return;
    }

    private void sendCurrentText()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;
        boolean $z0;
        android.view.KeyEvent $r2, $r6;
        long $l0;
        java.lang.String $r3;
        android.view.KeyCharacterMap $r4, $r5, $r7;
        int $i1, i2, i3;
        char[] r8;
        android.view.KeyEvent[] r9;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $z0 = r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label7;

        i2 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i2 != 0 goto label2;

        return;

     label2:
        if i2 != 1 goto label6;

        $r4 = r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        if $r4 != null goto label3;

        $r7 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap> = $r7;

     label3:
        r8 = newarray (char)[1];

        interfaceinvoke r1.<android.text.Editable: void getChars(int,int,char[],int)>(0, 1, r8, 0);

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        r9 = virtualinvoke $r5.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>(r8);

        if r9 == null goto label6;

        i3 = 0;

     label4:
        $i1 = lengthof r9;

        if i3 >= $i1 goto label5;

        $r6 = r9[i3];

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r6);

        i3 = i3 + 1;

        goto label4;

     label5:
        interfaceinvoke r1.<android.text.Editable: void clear()>();

        return;

     label6:
        $r2 = new android.view.KeyEvent;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>($l0, $r3, -1, 0);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        interfaceinvoke r1.<android.text.Editable: void clear()>();

     label7:
        return;
    }

    public static void setComposingSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)>(r0, 0, $i0);

        return;
    }

    public static void setComposingSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.Object[] r1;
        java.lang.Object r2, $r3, $r4;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Ljava/lang/Object;");

        if r1 == null goto label4;

        $i3 = lengthof r1;

        i10 = $i3 - 1;

     label1:
        if i10 < 0 goto label4;

        r2 = r1[i10];

        $r4 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        if r2 != $r4 goto label2;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>(r2);

        goto label3;

     label2:
        i2 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r2);

        $i4 = i2 & 307;

        if $i4 == 289 goto label3;

        $i5 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r2);

        $i6 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r2);

        $i7 = i2 & -52;

        $i8 = $i7 | 256;

        $i9 = $i8 | 33;

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r2, $i5, $i6, $i9);

     label3:
        i10 = i10 + -1;

        goto label1;

     label4:
        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 289);

        return;
    }

    public boolean beginBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    public boolean clearMetaKeyStates(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        staticinvoke <android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>(r1, i0);

        return 1;
    }

    public void closeConnection()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>();

        return;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.CompletionInfo r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return 0;
    }

    public boolean commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.InputContentInfo r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.InputContentInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return 0;
    }

    public boolean commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.CorrectionInfo r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        return 0;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>(r1, i0, 0);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        return 1;
    }

    public boolean deleteSurroundingText(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i16, i17, i18, i19, i20, i21, i22;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label01;

        return 0;

     label01:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        i4 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i5 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i6 = i4;

        i7 = i5;

        if i4 <= i5 goto label02;

        i6 = i5;

        i7 = i4;

     label02:
        if i6 == -1 goto label11;

        if i7 != -1 goto label03;

        goto label11;

     label03:
        i8 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>(r1);

        i9 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r1);

        i10 = i8;

        i11 = i9;

        if i9 >= i8 goto label04;

        i10 = i9;

        i11 = i8;

     label04:
        i12 = i6;

        i13 = i7;

        if i10 == -1 goto label06;

        i12 = i6;

        i13 = i7;

        if i11 == -1 goto label06;

        i14 = i6;

        if i10 >= i6 goto label05;

        i14 = i10;

     label05:
        i12 = i14;

        i13 = i7;

        if i11 <= i7 goto label06;

        i13 = i11;

        i12 = i14;

     label06:
        i16 = 0;

        if i2 <= 0 goto label08;

        i17 = i12 - i2;

        i18 = i17;

        if i17 >= 0 goto label07;

        i18 = 0;

     label07:
        i19 = i12 - i18;

        i16 = 0;

        if i12 < 0 goto label08;

        i16 = 0;

        if i19 <= 0 goto label08;

        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>(i18, i12);

        i16 = i19;

     label08:
        if i3 <= 0 goto label10;

        i20 = i13 - i16;

        i21 = i20 + i3;

        i22 = i21;

        $i0 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i21 <= $i0 goto label09;

        i22 = interfaceinvoke r1.<android.text.Editable: int length()>();

     label09:
        if i20 < 0 goto label10;

        $i1 = i22 - i20;

        if $i1 <= 0 goto label10;

        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>(i20, i22);

     label10:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return 1;

     label11:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return 0;
    }

    public boolean deleteSurroundingTextInCodePoints(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        i9 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i10 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i11 = i9;

        i12 = i10;

        if i9 <= i10 goto label2;

        i11 = i10;

        i12 = i9;

     label2:
        i13 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>(r1);

        i14 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r1);

        i15 = i13;

        i16 = i14;

        if i14 >= i13 goto label3;

        i15 = i14;

        i16 = i13;

     label3:
        i17 = i11;

        i18 = i12;

        if i15 == -1 goto label5;

        i17 = i11;

        i18 = i12;

        if i16 == -1 goto label5;

        i19 = i11;

        if i15 >= i11 goto label4;

        i19 = i15;

     label4:
        i17 = i19;

        i18 = i12;

        if i16 <= i12 goto label5;

        i18 = i16;

        i17 = i19;

     label5:
        if i17 < 0 goto label7;

        if i18 < 0 goto label7;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(i7, 0);

        i20 = staticinvoke <android.view.inputmethod.BaseInputConnection: int findIndexBackward(java.lang.CharSequence,int,int)>(r1, i17, $i0);

        $i1 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        if i20 == $i1 goto label7;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i8, 0);

        i21 = staticinvoke <android.view.inputmethod.BaseInputConnection: int findIndexForward(java.lang.CharSequence,int,int)>(r1, i18, $i2);

        $i3 = <android.view.inputmethod.BaseInputConnection: int INVALID_INDEX>;

        if i21 == $i3 goto label7;

        i22 = i17 - i20;

        if i22 <= 0 goto label6;

        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>(i20, i17);

     label6:
        $i4 = i21 - i18;

        if $i4 <= 0 goto label7;

        $i6 = i18 - i22;

        $i5 = i21 - i22;

        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>($i6, $i5);

     label7:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return 1;
    }

    public boolean endBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    public boolean finishComposingText()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r1);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

     label1:
        return 1;
    }

    public int getCursorCapsMode(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3, i4;
        android.text.Editable r1;
        boolean $z0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        $z0 = r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label2;

        return 0;

     label2:
        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i4 = i1;

        if i1 <= i2 goto label3;

        i4 = i2;

     label3:
        $i3 = staticinvoke <android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>(r1, i4, i0);

        return $i3;
    }

    public android.text.Editable getEditable()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1, $r2, $r3;
        android.text.Editable$Factory $r4;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        r1 = virtualinvoke $r4.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>("");

        r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable> = r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r1, 0);

     label1:
        $r3 = r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        return $r3;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        return null;
    }

    public android.os.Handler getHandler()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return null;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3, i4, i5;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i4 = i1;

        i5 = i2;

        if i1 <= i2 goto label2;

        i5 = i1;

        i4 = i2;

     label2:
        if i4 == i5 goto label5;

        if i4 >= 0 goto label3;

        goto label5;

     label3:
        $i3 = i0 & 1;

        if $i3 == 0 goto label4;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i4, i5);

        return $r3;

     label4:
        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, i4, i5);

        return $r2;

     label5:
        return null;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i9 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i10 = i2;

        if i9 <= i2 goto label2;

        i10 = i9;

     label2:
        i11 = i10;

        if i10 >= 0 goto label3;

        i11 = 0;

     label3:
        i12 = i0;

        $i3 = i11 + i0;

        $i4 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if $i3 <= $i4 goto label4;

        $i8 = interfaceinvoke r1.<android.text.Editable: int length()>();

        i12 = $i8 - i11;

     label4:
        $i5 = i1 & 1;

        if $i5 == 0 goto label5;

        $i7 = i11 + i12;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i11, $i7);

        return $r3;

     label5:
        $i6 = i11 + i12;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, i11, $i6);

        return $r2;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i6 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        i7 = i2;

        if i2 <= i6 goto label2;

        i7 = i6;

     label2:
        if i7 > 0 goto label3;

        return "";

     label3:
        i8 = i0;

        if i0 <= i7 goto label4;

        i8 = i7;

     label4:
        $i3 = i1 & 1;

        if $i3 == 0 goto label5;

        $i5 = i7 - i8;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i5, i7);

        return $r3;

     label5:
        $i4 = i7 - i8;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, $i4, i7);

        return $r2;
    }

    public boolean performContextMenuAction(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean performEditorAction(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;
        long l1, $l2;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, 66, 0, 0, -1, 0, 22);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, l1, 1, 66, 0, 0, -1, 0, 22);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        return 1;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public boolean reportFullscreenMode(boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        boolean z0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        z0 := @parameter0: boolean;

        return 1;
    }

    public boolean requestCursorUpdates(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.KeyEvent r1;
        android.view.View $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        $r3 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void dispatchKeyEventFromInputMethod(android.view.View,android.view.KeyEvent)>($r2, r1);

        return 0;
    }

    public boolean setComposingRegion(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;
        java.lang.Object[] r2, $r3;
        java.lang.Object $r4, $r5;
        int $i0, i1, i2, i4, i5, i6, i7, i8, i9, i10, i11;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label8;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r1);

        i4 = i1;

        i5 = i2;

        if i1 <= i2 goto label1;

        i5 = i1;

        i4 = i2;

     label1:
        i6 = interfaceinvoke r1.<android.text.Editable: int length()>();

        i7 = i4;

        if i4 >= 0 goto label2;

        i7 = 0;

     label2:
        i8 = i5;

        if i5 >= 0 goto label3;

        i8 = 0;

     label3:
        i9 = i7;

        if i7 <= i6 goto label4;

        i9 = i6;

     label4:
        i10 = i8;

        if i8 <= i6 goto label5;

        i10 = i6;

     label5:
        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void ensureDefaultComposingSpans()>();

        $r3 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r3 == null goto label7;

        i11 = 0;

     label6:
        r2 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $i0 = lengthof r2;

        if i11 >= $i0 goto label7;

        $r5 = r2[i11];

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r5, i9, i10, 289);

        i11 = i11 + 1;

        goto label6;

     label7:
        $r4 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r4, i9, i10, 289);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

     label8:
        return 1;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>(r1, i0, 1);

        return 1;
    }

    public boolean setSelection(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        i2 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i0 > i2 goto label5;

        if i1 > i2 goto label5;

        if i0 < 0 goto label5;

        if i1 >= 0 goto label2;

        goto label5;

     label2:
        if i0 != i1 goto label3;

        $i3 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 2048);

        if $i3 == 0 goto label3;

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r1, i0);

        goto label4;

     label3:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r1, i0, i1);

     label4:
        return 1;

     label5:
        return 1;
    }
}
