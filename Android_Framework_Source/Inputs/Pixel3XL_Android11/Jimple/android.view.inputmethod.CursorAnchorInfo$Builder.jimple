public final class android.view.inputmethod.CursorAnchorInfo$Builder extends java.lang.Object
{
    private android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder;
    private java.lang.CharSequence mComposingText;
    private int mComposingTextStart;
    private float mInsertionMarkerBaseline;
    private float mInsertionMarkerBottom;
    private int mInsertionMarkerFlags;
    private float mInsertionMarkerHorizontal;
    private float mInsertionMarkerTop;
    private boolean mMatrixInitialized;
    private float[] mMatrixValues;
    private int mSelectionEnd;
    private int mSelectionStart;

    public void <init>()
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionStart> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionEnd> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mComposingTextStart> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence mComposingText> = null;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerHorizontal> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerTop> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBaseline> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBottom> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mInsertionMarkerFlags> = 0;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder> = null;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float[] mMatrixValues> = null;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: boolean mMatrixInitialized> = 0;

        return;
    }

    static android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder access$100(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder $r1;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder>;

        return $r1;
    }

    static float access$1000(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float $f0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerTop>;

        return $f0;
    }

    static float access$1100(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float $f0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBaseline>;

        return $f0;
    }

    static float access$1200(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float $f0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBottom>;

        return $f0;
    }

    static boolean access$200(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $z0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: boolean mMatrixInitialized>;

        return $z0;
    }

    static float[] access$300(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float[] $r1;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float[] mMatrixValues>;

        return $r1;
    }

    static int access$400(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionStart>;

        return $i0;
    }

    static int access$500(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionEnd>;

        return $i0;
    }

    static int access$600(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mComposingTextStart>;

        return $i0;
    }

    static java.lang.CharSequence access$700(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence mComposingText>;

        return $r1;
    }

    static int access$800(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int $i0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mInsertionMarkerFlags>;

        return $i0;
    }

    static float access$900(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float $f0;

        r0 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerHorizontal>;

        return $f0;
    }

    public android.view.inputmethod.CursorAnchorInfo$Builder addCharacterBounds(int, float, float, float, float, int)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int i0, i1;
        float f0, f1, f2, f3;
        java.lang.IllegalArgumentException $r1;
        android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder $r2, $r3, $r5;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i1 := @parameter5: int;

        if i0 < 0 goto label2;

        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder>;

        if $r2 != null goto label1;

        $r5 = new android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder;

        specialinvoke $r5.<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: void <init>()>();

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder> = $r5;

     label1:
        $r3 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder>;

        virtualinvoke $r3.<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder append(int,float,float,float,float,int)>(i0, f0, f1, f2, f3, i1);

        return r0;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index must not be a negative integer.");

        throw $r1;
    }

    public android.view.inputmethod.CursorAnchorInfo build()
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.view.inputmethod.CursorAnchorInfo $r2;
        float $f0, $f1, $f2, $f3;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        $z0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: boolean mMatrixInitialized>;

        if $z0 != 0 goto label4;

        r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder>;

        if r1 == null goto label1;

        $z5 = virtualinvoke r1.<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: boolean isEmpty()>();

        if $z5 != 0 goto label1;

        z6 = 1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        if z6 != 0 goto label3;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerHorizontal>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z1 == 0 goto label3;

        $f1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerTop>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z2 == 0 goto label3;

        $f2 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBaseline>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z3 == 0 goto label3;

        $f3 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBottom>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z4 == 0 goto label3;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Coordinate transformation matrix is required when positional parameters are specified.");

        throw $r3;

     label4:
        $r2 = staticinvoke <android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.CursorAnchorInfo access$000(android.view.inputmethod.CursorAnchorInfo$Builder)>(r0);

        return $r2;
    }

    public void reset()
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder r1;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionStart> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionEnd> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mComposingTextStart> = -1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence mComposingText> = null;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mInsertionMarkerFlags> = 0;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerHorizontal> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerTop> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBaseline> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBottom> = #NaNF;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: boolean mMatrixInitialized> = 0;

        r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder mCharacterBoundsArrayBuilder>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: void reset()>();

     label1:
        return;
    }

    public android.view.inputmethod.CursorAnchorInfo$Builder setComposingText(int, java.lang.CharSequence)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int i0;
        java.lang.CharSequence r1;
        android.text.SpannedString $r2;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mComposingTextStart> = i0;

        if r1 != null goto label1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence mComposingText> = null;

        goto label2;

     label1:
        $r2 = new android.text.SpannedString;

        specialinvoke $r2.<android.text.SpannedString: void <init>(java.lang.CharSequence)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence mComposingText> = $r2;

     label2:
        return r0;
    }

    public android.view.inputmethod.CursorAnchorInfo$Builder setInsertionMarkerLocation(float, float, float, float, int)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float f0, f1, f2, f3;
        int i0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerHorizontal> = f0;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerTop> = f1;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBaseline> = f2;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float mInsertionMarkerBottom> = f3;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mInsertionMarkerFlags> = i0;

        return r0;
    }

    public android.view.inputmethod.CursorAnchorInfo$Builder setMatrix(android.graphics.Matrix)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        float[] $r1, $r2, $r3;
        android.graphics.Matrix r4;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        r4 := @parameter0: android.graphics.Matrix;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float[] mMatrixValues>;

        if $r1 != null goto label1;

        $r3 = newarray (float)[9];

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float[] mMatrixValues> = $r3;

     label1:
        if r4 == null goto label2;

        goto label3;

     label2:
        r4 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

     label3:
        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo$Builder: float[] mMatrixValues>;

        virtualinvoke r4.<android.graphics.Matrix: void getValues(float[])>($r2);

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: boolean mMatrixInitialized> = 1;

        return r0;
    }

    public android.view.inputmethod.CursorAnchorInfo$Builder setSelectionRange(int, int)
    {
        android.view.inputmethod.CursorAnchorInfo$Builder r0;
        int i0, i1;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionStart> = i0;

        r0.<android.view.inputmethod.CursorAnchorInfo$Builder: int mSelectionEnd> = i1;

        return r0;
    }
}
