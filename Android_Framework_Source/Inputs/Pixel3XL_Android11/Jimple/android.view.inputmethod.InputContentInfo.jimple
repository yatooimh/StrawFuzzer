public final class android.view.inputmethod.InputContentInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.net.Uri mContentUri;
    private final int mContentUriOwnerUserId;
    private final android.content.ClipDescription mDescription;
    private final android.net.Uri mLinkUri;
    private com.android.internal.inputmethod.IInputContentUriToken mUriToken;

    static void <clinit>()
    {
        android.view.inputmethod.InputContentInfo$1 $r0;

        $r0 = new android.view.inputmethod.InputContentInfo$1;

        specialinvoke $r0.<android.view.inputmethod.InputContentInfo$1: void <init>()>();

        <android.view.inputmethod.InputContentInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.net.Uri, android.content.ClipDescription)
    {
        android.view.inputmethod.InputContentInfo r0;
        android.net.Uri r1;
        android.content.ClipDescription r2;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ClipDescription;

        specialinvoke r0.<android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>(r1, r2, null);

        return;
    }

    public void <init>(android.net.Uri, android.content.ClipDescription, android.net.Uri)
    {
        android.view.inputmethod.InputContentInfo r0;
        android.net.Uri r1, r3;
        android.content.ClipDescription r2;
        int $i0, $i1;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ClipDescription;

        r3 := @parameter2: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <android.view.inputmethod.InputContentInfo: boolean validateInternal(android.net.Uri,android.content.ClipDescription,android.net.Uri,boolean)>(r1, r2, r3, 1);

        r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri> = r1;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i0);

        r0.<android.view.inputmethod.InputContentInfo: int mContentUriOwnerUserId> = $i1;

        r0.<android.view.inputmethod.InputContentInfo: android.content.ClipDescription mDescription> = r2;

        r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mLinkUri> = r3;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.inputmethod.InputContentInfo r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;
        android.net.Uri $r4, $r10;
        int $i0, $i1;
        android.content.ClipDescription $r7;
        android.os.IBinder $r11;
        com.android.internal.inputmethod.IInputContentUriToken $r12;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.net.Uri) $r3;

        r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri> = $r4;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputContentInfo: int mContentUriOwnerUserId> = $i0;

        $r5 = <android.content.ClipDescription: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r7 = (android.content.ClipDescription) $r6;

        r0.<android.view.inputmethod.InputContentInfo: android.content.ClipDescription mDescription> = $r7;

        $r8 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r10 = (android.net.Uri) $r9;

        r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mLinkUri> = $r10;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label1;

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <com.android.internal.inputmethod.IInputContentUriToken$Stub: com.android.internal.inputmethod.IInputContentUriToken asInterface(android.os.IBinder)>($r11);

        r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken> = $r12;

        goto label2;

     label1:
        r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken> = null;

     label2:
        return;
    }

    void <init>(android.os.Parcel, android.view.inputmethod.InputContentInfo$1)
    {
        android.view.inputmethod.InputContentInfo r0;
        android.os.Parcel r1;
        android.view.inputmethod.InputContentInfo$1 r2;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.inputmethod.InputContentInfo$1;

        specialinvoke r0.<android.view.inputmethod.InputContentInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private static boolean validateInternal(android.net.Uri, android.content.ClipDescription, android.net.Uri, boolean)
    {
        android.content.ClipDescription r0;
        android.net.Uri r1, r8;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r2, $r3, r9;
        java.security.InvalidParameterException $r4, $r5;
        java.lang.NullPointerException $r6, $r7;

        r8 := @parameter0: android.net.Uri;

        r0 := @parameter1: android.content.ClipDescription;

        r1 := @parameter2: android.net.Uri;

        z0 := @parameter3: boolean;

        if r8 != null goto label2;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("contentUri");

        throw $r7;

     label2:
        if r0 != null goto label4;

        if z0 != 0 goto label3;

        return 0;

     label3:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("description");

        throw $r6;

     label4:
        $r2 = "content";

        $r3 = virtualinvoke r8.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label6;

        if z0 != 0 goto label5;

        return 0;

     label5:
        $r5 = new java.security.InvalidParameterException;

        specialinvoke $r5.<java.security.InvalidParameterException: void <init>(java.lang.String)>("contentUri must have content scheme");

        throw $r5;

     label6:
        if r1 == null goto label9;

        r9 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        if r9 == null goto label7;

        $z2 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http");

        if $z2 != 0 goto label9;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https");

        if $z3 != 0 goto label9;

     label7:
        if z0 != 0 goto label8;

        return 0;

     label8:
        $r4 = new java.security.InvalidParameterException;

        specialinvoke $r4.<java.security.InvalidParameterException: void <init>(java.lang.String)>("linkUri must have either http or https scheme");

        throw $r4;

     label9:
        return 1;
    }

    public int describeContents()
    {
        android.view.inputmethod.InputContentInfo r0;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        return 0;
    }

    public android.net.Uri getContentUri()
    {
        android.view.inputmethod.InputContentInfo r0;
        int $i0, $i1, $i2;
        android.net.Uri $r1, $r2, $r3;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        $i0 = r0.<android.view.inputmethod.InputContentInfo: int mContentUriOwnerUserId>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i0 == $i1 goto label1;

        $r2 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri>;

        $i2 = r0.<android.view.inputmethod.InputContentInfo: int mContentUriOwnerUserId>;

        $r3 = staticinvoke <android.content.ContentProvider: android.net.Uri maybeAddUserId(android.net.Uri,int)>($r2, $i2);

        return $r3;

     label1:
        $r1 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri>;

        return $r1;
    }

    public android.content.ClipDescription getDescription()
    {
        android.view.inputmethod.InputContentInfo r0;
        android.content.ClipDescription $r1;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        $r1 = r0.<android.view.inputmethod.InputContentInfo: android.content.ClipDescription mDescription>;

        return $r1;
    }

    public android.net.Uri getLinkUri()
    {
        android.view.inputmethod.InputContentInfo r0;
        android.net.Uri $r1;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        $r1 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mLinkUri>;

        return $r1;
    }

    public void releasePermission()
    {
        android.view.inputmethod.InputContentInfo r0;
        android.os.RemoteException $r1;
        com.android.internal.inputmethod.IInputContentUriToken r3;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r3 = r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken>;

        if r3 != null goto label1;

        return;

     label1:
        interfaceinvoke r3.<com.android.internal.inputmethod.IInputContentUriToken: void release()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestPermission()
    {
        android.view.inputmethod.InputContentInfo r0;
        android.os.RemoteException $r1;
        com.android.internal.inputmethod.IInputContentUriToken r3;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r3 = r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken>;

        if r3 != null goto label1;

        return;

     label1:
        interfaceinvoke r3.<com.android.internal.inputmethod.IInputContentUriToken: void take()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUriToken(com.android.internal.inputmethod.IInputContentUriToken)
    {
        android.view.inputmethod.InputContentInfo r0;
        com.android.internal.inputmethod.IInputContentUriToken r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: com.android.internal.inputmethod.IInputContentUriToken;

        $r2 = r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken>;

        if $r2 != null goto label1;

        r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken> = r1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("URI token is already set");

        throw $r3;
    }

    public boolean validate()
    {
        android.view.inputmethod.InputContentInfo r0;
        android.net.Uri $r1, $r3;
        android.content.ClipDescription $r2;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        $r3 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri>;

        $r2 = r0.<android.view.inputmethod.InputContentInfo: android.content.ClipDescription mDescription>;

        $r1 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mLinkUri>;

        $z0 = staticinvoke <android.view.inputmethod.InputContentInfo: boolean validateInternal(android.net.Uri,android.content.ClipDescription,android.net.Uri,boolean)>($r3, $r2, $r1, 0);

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.inputmethod.InputContentInfo r0;
        android.os.Parcel r1;
        int i0, $i1;
        android.net.Uri $r2, $r4;
        android.content.ClipDescription $r3;
        com.android.internal.inputmethod.IInputContentUriToken $r5, $r6;
        android.os.IBinder $r7;

        r0 := @this: android.view.inputmethod.InputContentInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mContentUri>;

        staticinvoke <android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>(r1, $r2);

        $i1 = r0.<android.view.inputmethod.InputContentInfo: int mContentUriOwnerUserId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = r0.<android.view.inputmethod.InputContentInfo: android.content.ClipDescription mDescription>;

        virtualinvoke $r3.<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r4 = r0.<android.view.inputmethod.InputContentInfo: android.net.Uri mLinkUri>;

        staticinvoke <android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>(r1, $r4);

        $r5 = r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken>;

        if $r5 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r6 = r0.<android.view.inputmethod.InputContentInfo: com.android.internal.inputmethod.IInputContentUriToken mUriToken>;

        $r7 = interfaceinvoke $r6.<com.android.internal.inputmethod.IInputContentUriToken: android.os.IBinder asBinder()>();

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }
}
