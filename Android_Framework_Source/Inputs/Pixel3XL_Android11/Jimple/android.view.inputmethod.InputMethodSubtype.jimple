public final class android.view.inputmethod.InputMethodSubtype extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String EXTRA_KEY_UNTRANSLATABLE_STRING_IN_SUBTYPE_NAME;
    private static final java.lang.String EXTRA_VALUE_KEY_VALUE_SEPARATOR;
    private static final java.lang.String EXTRA_VALUE_PAIR_SEPARATOR;
    private static final java.lang.String LANGUAGE_TAG_NONE;
    private static final int SUBTYPE_ID_NONE;
    private static final java.lang.String TAG;
    private volatile java.util.Locale mCachedLocaleObj;
    private volatile java.util.HashMap mExtraValueHashMapCache;
    private final boolean mIsAsciiCapable;
    private final boolean mIsAuxiliary;
    private final java.lang.Object mLock;
    private final boolean mOverridesImplicitlyEnabledSubtype;
    private final java.lang.String mSubtypeExtraValue;
    private final int mSubtypeHashCode;
    private final int mSubtypeIconResId;
    private final int mSubtypeId;
    private final java.lang.String mSubtypeLanguageTag;
    private final java.lang.String mSubtypeLocale;
    private final java.lang.String mSubtypeMode;
    private final int mSubtypeNameResId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.view.inputmethod.InputMethodSubtype$1 $r2;

        <android.view.inputmethod.InputMethodSubtype: int SUBTYPE_ID_NONE> = 0;

        <android.view.inputmethod.InputMethodSubtype: java.lang.String LANGUAGE_TAG_NONE> = "";

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_VALUE_PAIR_SEPARATOR> = ",";

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_VALUE_KEY_VALUE_SEPARATOR> = "=";

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_KEY_UNTRANSLATABLE_STRING_IN_SUBTYPE_NAME> = "UntranslatableReplacementStringInSubtypeName";

        $r0 = class "Landroid/view/inputmethod/InputMethodSubtype;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG> = $r1;

        $r2 = new android.view.inputmethod.InputMethodSubtype$1;

        specialinvoke $r2.<android.view.inputmethod.InputMethodSubtype$1: void <init>()>();

        <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        boolean z0, z1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>(i0, i1, r1, r2, r3, z0, z1, 0);

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3;
        boolean z0, z1;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder $r4;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 := @parameter7: int;

        $r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder getBuilder(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,boolean)>(i0, i1, r1, r2, r3, z0, z1, i2, 0);

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>($r4);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.os.Parcel r1;
        java.lang.String r3, r5, r6, r7, r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r4;
        boolean z1, z2, z3;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.Object mLock> = $r4;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId> = $i2;

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r5 == null goto label01;

        goto label02;

     label01:
        r5 = "";

     label02:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale> = r5;

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r6 == null goto label03;

        goto label04;

     label03:
        r6 = "";

     label04:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag> = r6;

        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r7 == null goto label05;

        goto label06;

     label05:
        r7 = "";

     label06:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode> = r7;

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r8 = "";

        if r3 == null goto label07;

        r8 = r3;

     label07:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue> = r8;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 1 goto label08;

        z1 = 1;

        goto label09;

     label08:
        z1 = 0;

     label09:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary> = z1;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 != 1 goto label10;

        z2 = 1;

        goto label11;

     label10:
        z2 = 0;

     label11:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype> = z2;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId> = $i5;

        z3 = 0;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 != 1 goto label12;

        z3 = 1;

     label12:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable> = z3;

        return;
    }

    private void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder r1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.Object mLock> = $r2;

        $i1 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$100(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId> = $i1;

        $i2 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$200(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId> = $i2;

        $r3 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$300(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale> = $r3;

        $r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$1000(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag> = $r4;

        $r5 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$400(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode> = $r5;

        $r6 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$500(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue> = $r6;

        $z1 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$600(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary> = $z1;

        $z2 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$700(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype> = $z2;

        $i3 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$800(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId> = $i3;

        z0 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$900(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable> = z0;

        i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if i0 == 0 goto label1;

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode> = i0;

        goto label2;

     label1:
        $r9 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        $r8 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        $r7 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        $z4 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        $z3 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        $i4 = staticinvoke <android.view.inputmethod.InputMethodSubtype: int hashCodeInternal(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r9, $r8, $r7, $z4, $z3, z0);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode> = $i4;

     label2:
        return;
    }

    void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder, android.view.inputmethod.InputMethodSubtype$1)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder r1;
        android.view.inputmethod.InputMethodSubtype$1 r2;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype$1;

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        return;
    }

    private static android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder getBuilder(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int, boolean)
    {
        int i0, i1, i2;
        java.lang.String r0, r1, r2;
        boolean z0, z1, z2;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 := @parameter7: int;

        z2 := @parameter8: boolean;

        $r4 = new android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke $r4.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: void <init>()>();

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$102(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>($r4, i0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$202(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>($r4, i1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$302(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>($r4, r0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$402(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>($r4, r1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$502(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>($r4, r2);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$602(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>($r4, z0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$702(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>($r4, z1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$802(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>($r4, i2);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$902(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>($r4, z2);

        return $r4;
    }

    private java.util.HashMap getExtraValueHashMap()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.util.HashMap r1, r12;
        java.lang.String[] r2, r13;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r9;
        int $i0, $i1, $i2, $i3, i5;
        java.lang.Throwable $r11;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        entermonitor r0;

     label01:
        r12 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

     label02:
        if r12 == null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return r12;

     label05:
        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r3 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        r2 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label06:
        i5 = 0;

     label07:
        $i0 = lengthof r2;

        if i5 >= $i0 goto label12;

        $r4 = r2[i5];

        r13 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i1 = lengthof r13;

        if $i1 != 1 goto label09;

        $r9 = r13[0];

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, null);

     label08:
        goto label11;

     label09:
        $i2 = lengthof r13;

        if $i2 <= 1 goto label11;

        $i3 = lengthof r13;

        if $i3 <= 2 goto label10;

        $r8 = <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r8, "ExtraValue has two or more \'=\'s");

     label10:
        $r6 = r13[0];

        $r5 = r13[1];

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

     label11:
        i5 = i5 + 1;

        goto label07;

     label12:
        r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache> = r1;

        exitmonitor r0;

     label13:
        return r1;

     label14:
        $r11 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private static java.lang.String getLocaleDisplayName(java.util.Locale, java.util.Locale, android.icu.text.DisplayContext)
    {
        java.util.Locale r0, r5;
        android.icu.text.DisplayContext r1;
        android.icu.text.DisplayContext[] $r2;
        android.icu.text.LocaleDisplayNames $r3;
        java.lang.String $r4;

        r5 := @parameter0: java.util.Locale;

        r0 := @parameter1: java.util.Locale;

        r1 := @parameter2: android.icu.text.DisplayContext;

        if r0 != null goto label1;

        return "";

     label1:
        if r5 == null goto label2;

        goto label3;

     label2:
        r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label3:
        $r2 = newarray (android.icu.text.DisplayContext)[1];

        $r2[0] = r1;

        $r3 = staticinvoke <android.icu.text.LocaleDisplayNames: android.icu.text.LocaleDisplayNames getInstance(java.util.Locale,android.icu.text.DisplayContext[])>(r5, $r2);

        $r4 = virtualinvoke $r3.<android.icu.text.LocaleDisplayNames: java.lang.String localeDisplayName(java.util.Locale)>(r0);

        return $r4;
    }

    private static java.util.Locale getLocaleFromContext(android.content.Context)
    {
        android.content.res.Resources $r0, $r1;
        android.os.LocaleList $r2;
        java.util.Locale $r3;
        android.content.Context r4;
        android.content.res.Configuration r5;

        r4 := @parameter0: android.content.Context;

        if r4 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        if $r0 != null goto label2;

        return null;

     label2:
        $r1 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        if r5 != null goto label3;

        return null;

     label3:
        $r2 = virtualinvoke r5.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r3 = virtualinvoke $r2.<android.os.LocaleList: java.util.Locale get(int)>(0);

        return $r3;
    }

    private static int hashCodeInternal(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0, z1, z2, $z3;
        java.lang.Object[] $r3, $r7;
        java.lang.Boolean $r4, $r5, $r6, $r8, $r9;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $z3 = z2 ^ 1;

        if $z3 == 0 goto label1;

        $r7 = newarray (java.lang.Object)[5];

        $r7[0] = r0;

        $r7[1] = r1;

        $r7[2] = r2;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r7[3] = $r8;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r7[4] = $r9;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r7);

        return $i1;

     label1:
        $r3 = newarray (java.lang.Object)[6];

        $r3[0] = r0;

        $r3[1] = r1;

        $r3[2] = r2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[3] = $r4;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r3[4] = $r5;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r3[5] = $r6;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r3);

        return $i0;
    }

    public static java.util.List sort(android.content.Context, int, android.view.inputmethod.InputMethodInfo, java.util.List)
    {
        int i0, i1, i2;
        android.view.inputmethod.InputMethodSubtype r0, $r4;
        java.util.HashSet $r1;
        java.util.ArrayList $r2;
        boolean $z0, $z2;
        java.lang.Object $r3;
        android.content.Context r5;
        android.view.inputmethod.InputMethodInfo r6;
        java.util.List r7;
        java.util.Iterator r10;

        r5 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        r6 := @parameter2: android.view.inputmethod.InputMethodInfo;

        r7 := @parameter3: java.util.List;

        if r6 != null goto label1;

        return r7;

     label1:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>(r7);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r0 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i2);

        $z2 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        r10 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.view.inputmethod.InputMethodSubtype) $r3;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label5;

     label6:
        return $r2;
    }

    public boolean containsExtraValueKey(java.lang.String)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()>();

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public int describeContents()
    {
        android.view.inputmethod.InputMethodSubtype r0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.inputmethod.InputMethodSubtype r0, r10;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Object r9;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r9 := @parameter0: java.lang.Object;

        z0 = r9 instanceof android.view.inputmethod.InputMethodSubtype;

        z12 = 0;

        if z0 == 0 goto label5;

        r10 = (android.view.inputmethod.InputMethodSubtype) r9;

        $i0 = r10.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i0 != 0 goto label3;

        $i3 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i3 == 0 goto label1;

        goto label3;

     label1:
        $i4 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i5 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if $i4 != $i5 goto label2;

        $r1 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r2 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

        $r3 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>();

        $r4 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label2;

        $r5 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r6 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label2;

        $r7 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        $r8 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z5 == 0 goto label2;

        $z6 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        $z7 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z6 != $z7 goto label2;

        $z8 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        $z9 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z8 != $z9 goto label2;

        $z10 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        $z11 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        if $z10 != $z11 goto label2;

        z12 = 1;

        goto label2;

     label2:
        return z12;

     label3:
        z13 = 0;

        $i1 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i2 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if $i1 != $i2 goto label4;

        z13 = 1;

     label4:
        return z13;

     label5:
        return 0;
    }

    public java.lang.CharSequence getDisplayName(android.content.Context, java.lang.String, android.content.pm.ApplicationInfo)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0, $i1;
        android.content.pm.PackageManager $r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r2;
        java.util.Locale $r3, $r4, $r21, $r22;
        android.icu.text.DisplayContext $r5, r20;
        java.lang.String $r6, $r13, r15, r18, r19, r23, r24, r26;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8;
        android.content.Context r14;
        android.content.pm.ApplicationInfo r16;
        java.lang.CharSequence r17;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r14 := @parameter0: android.content.Context;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        if $i0 != 0 goto label01;

        $r3 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleFromContext(android.content.Context)>(r14);

        $r4 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleObject()>();

        $r5 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_UI_LIST_OR_MENU>;

        $r6 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.lang.String getLocaleDisplayName(java.util.Locale,java.util.Locale,android.icu.text.DisplayContext)>($r3, $r4, $r5);

        return $r6;

     label01:
        $r1 = virtualinvoke r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        r17 = virtualinvoke $r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r15, $i1, r16);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z0 == 0 goto label02;

        return "";

     label02:
        r18 = interfaceinvoke r17.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("UntranslatableReplacementStringInSubtypeName");

        if $z1 == 0 goto label03;

        r19 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>("UntranslatableReplacementStringInSubtypeName");

        goto label07;

     label03:
        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r18, "%s");

        if $z2 == 0 goto label04;

        r20 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_UI_LIST_OR_MENU>;

        goto label06;

     label04:
        $z3 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>("%s");

        if $z3 == 0 goto label05;

        r20 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE>;

        goto label06;

     label05:
        r20 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE>;

     label06:
        $r21 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleFromContext(android.content.Context)>(r14);

        $r22 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale getLocaleObject()>();

        r19 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.lang.String getLocaleDisplayName(java.util.Locale,java.util.Locale,android.icu.text.DisplayContext)>($r21, $r22, r20);

     label07:
        r23 = r19;

        if r19 != null goto label08;

        r23 = "";

     label08:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r23;

        r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r18, $r2);

     label09:
        return r24;

     label10:
        $r7 := @caughtexception;

        r26 = <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found illegal format in subtype name(");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r26, $r13);

        return "";

        catch java.util.IllegalFormatException from label08 to label09 with label10;
    }

    public java.lang.String getExtraValue()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        return $r1;
    }

    public java.lang.String getExtraValueOf(java.lang.String)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()>();

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int getIconResId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId>;

        return $i0;
    }

    public java.lang.String getLanguageTag()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag>;

        return $r1;
    }

    public java.lang.String getLocale()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        return $r1;
    }

    public java.util.Locale getLocaleObject()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.Object r1;
        java.util.Locale $r2, $r3, $r6, $r8, $r9, r11, r12;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;
        java.lang.Throwable $r10;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r2 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj>;

        if $r2 == null goto label01;

        $r9 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj>;

        return $r9;

     label01:
        r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj>;

        if $r3 == null goto label04;

        r11 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj>;

        exitmonitor r1;

     label03:
        return r11;

     label04:
        $r4 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label06;

        $r7 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag>;

        $r8 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>($r7);

        r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj> = $r8;

     label05:
        goto label07;

     label06:
        $r5 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        $r6 = staticinvoke <com.android.internal.inputmethod.SubtypeLocaleUtils: java.util.Locale constructLocaleFromString(java.lang.String)>($r5);

        r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj> = $r6;

     label07:
        r12 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.Locale mCachedLocaleObj>;

        exitmonitor r1;

     label08:
        return r12;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.lang.String getMode()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        return $r1;
    }

    public int getNameResId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        return $i0;
    }

    public final int getSubtypeId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        return $i0;
    }

    public final boolean hasSubtypeId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;
        boolean z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int hashCode()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode>;

        return $i0;
    }

    public boolean isAsciiCapable()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable>;

        return $z0;
    }

    public boolean isAuxiliary()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        return $z0;
    }

    public boolean overridesImplicitlyEnabledSubtype()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLanguageTag>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $z1 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        i6 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        $i3 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z2 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable>;

        i7 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        return;
    }
}
