public class android.view.inputmethod.InputMethodSubtypeArray extends java.lang.Object
{
    private static final java.lang.String TAG;
    private volatile byte[] mCompressedData;
    private final int mCount;
    private volatile int mDecompressedSize;
    private volatile android.view.inputmethod.InputMethodSubtype[] mInstance;
    private final java.lang.Object mLockObject;

    public void <init>(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.Object $r2;
        byte[] $r3;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject> = $r2;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = i0;

        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = $i1;

        $r3 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = $r3;

     label1:
        return;
    }

    public void <init>(java.util.List)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        java.util.List r1;
        int i0;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodSubtype[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject> = $r2;

        if r1 != null goto label1;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = 0;

        return;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = i0;

        $r3 = newarray (android.view.inputmethod.InputMethodSubtype)[i0];

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (android.view.inputmethod.InputMethodSubtype[]) $r4;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance> = $r5;

        return;
    }

    private static byte[] compress(byte[])
    {
        java.lang.Throwable $r0, $r2, $r3, $r4;
        java.lang.Exception $r1;
        byte[] r5, r8;
        java.io.ByteArrayOutputStream r6;
        java.util.zip.GZIPOutputStream r7;

        r5 := @parameter0: byte[];

     label01:
        r6 = new java.io.ByteArrayOutputStream;

        specialinvoke r6.<java.io.ByteArrayOutputStream: void <init>()>();

     label02:
        r7 = new java.util.zip.GZIPOutputStream;

        specialinvoke r7.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r6);

     label03:
        virtualinvoke r7.<java.util.zip.GZIPOutputStream: void write(byte[])>(r5);

        virtualinvoke r7.<java.util.zip.GZIPOutputStream: void finish()>();

        r8 = virtualinvoke r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label04:
        virtualinvoke r7.<java.util.zip.GZIPOutputStream: void close()>();

     label05:
        virtualinvoke r6.<java.io.ByteArrayOutputStream: void close()>();

     label06:
        return r8;

     label07:
        $r3 := @caughtexception;

     label08:
        virtualinvoke r7.<java.util.zip.GZIPOutputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r0 := @caughtexception;

     label11:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r0);

     label12:
        throw $r3;

     label13:
        $r4 := @caughtexception;

     label14:
        virtualinvoke r6.<java.io.ByteArrayOutputStream: void close()>();

     label15:
        goto label18;

     label16:
        $r2 := @caughtexception;

     label17:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label18:
        throw $r4;

     label19:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to compress the data.", $r1);

        return null;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label18 to label19 with label19;
    }

    private static byte[] decompress(byte[], int)
    {
        int i0, i1, $i2, $i3, $i4, i6;
        java.lang.Throwable $r0, $r1, $r2, $r3;
        java.lang.Exception $r4;
        byte[] r5, r8;
        java.io.ByteArrayInputStream r6;
        java.util.zip.GZIPInputStream r7;

        r5 := @parameter0: byte[];

        i0 := @parameter1: int;

     label01:
        r6 = new java.io.ByteArrayInputStream;

        specialinvoke r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

     label02:
        r7 = new java.util.zip.GZIPInputStream;

        specialinvoke r7.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r6);

     label03:
        r8 = newarray (byte)[i0];

     label04:
        i6 = 0;

     label05:
        $i2 = lengthof r8;

        if i6 >= $i2 goto label08;

        $i3 = lengthof r8;

        $i4 = $i3 - i6;

        i1 = virtualinvoke r7.<java.util.zip.GZIPInputStream: int read(byte[],int,int)>(r8, i6, $i4);

     label06:
        if i1 >= 0 goto label07;

        goto label08;

     label07:
        i6 = i6 + i1;

        goto label05;

     label08:
        if i0 == i6 goto label12;

     label09:
        virtualinvoke r7.<java.util.zip.GZIPInputStream: void close()>();

     label10:
        virtualinvoke r6.<java.io.ByteArrayInputStream: void close()>();

     label11:
        return null;

     label12:
        virtualinvoke r7.<java.util.zip.GZIPInputStream: void close()>();

     label13:
        virtualinvoke r6.<java.io.ByteArrayInputStream: void close()>();

     label14:
        return r8;

     label15:
        $r3 := @caughtexception;

     label16:
        virtualinvoke r7.<java.util.zip.GZIPInputStream: void close()>();

     label17:
        goto label20;

     label18:
        $r2 := @caughtexception;

     label19:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label20:
        throw $r3;

     label21:
        $r0 := @caughtexception;

     label22:
        virtualinvoke r6.<java.io.ByteArrayInputStream: void close()>();

     label23:
        goto label26;

     label24:
        $r1 := @caughtexception;

     label25:
        virtualinvoke $r0.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r1);

     label26:
        throw $r0;

     label27:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to decompress the data.", $r4);

        return null;

        catch java.lang.Exception from label01 to label02 with label27;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Exception from label10 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label26 to label27 with label27;
    }

    private static byte[] marshall(android.view.inputmethod.InputMethodSubtype[])
    {
        android.os.Parcel r0, r3;
        java.lang.Throwable $r1;
        android.view.inputmethod.InputMethodSubtype[] r2;
        byte[] r4;

        r2 := @parameter0: android.view.inputmethod.InputMethodSubtype[];

        r3 = null;

     label1:
        r0 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label2:
        r3 = r0;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r2, 0);

     label4:
        r3 = r0;

     label5:
        r4 = virtualinvoke r0.<android.os.Parcel: byte[] marshall()>();

     label6:
        if r0 == null goto label7;

        virtualinvoke r0.<android.os.Parcel: void recycle()>();

     label7:
        return r4;

     label8:
        $r1 := @caughtexception;

        if r3 == null goto label9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

     label9:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private static android.view.inputmethod.InputMethodSubtype[] unmarshall(byte[])
    {
        android.os.Parcel r0, r5;
        int $i0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object[] $r2;
        java.lang.Throwable $r3;
        byte[] r4;
        android.view.inputmethod.InputMethodSubtype[] r6;

        r4 := @parameter0: byte[];

        r5 = null;

     label01:
        r0 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label02:
        r5 = r0;

     label03:
        $i0 = lengthof r4;

        virtualinvoke r0.<android.os.Parcel: void unmarshall(byte[],int,int)>(r4, 0, $i0);

     label04:
        r5 = r0;

     label05:
        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(0);

     label06:
        r5 = r0;

     label07:
        $r1 = <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR>;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r1);

        r6 = (android.view.inputmethod.InputMethodSubtype[]) $r2;

     label08:
        if r0 == null goto label09;

        virtualinvoke r0.<android.os.Parcel: void recycle()>();

     label09:
        return r6;

     label10:
        $r3 := @caughtexception;

        if r5 == null goto label11;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public android.view.inputmethod.InputMethodSubtype get(int)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        int i0, $i1, $i2, $i4;
        java.lang.Object r1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        android.view.inputmethod.InputMethodSubtype $r3;
        byte[] $r4, r9;
        java.lang.Throwable $r5;
        android.view.inputmethod.InputMethodSubtype[] r6, r7, r8;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        i0 := @parameter0: int;

        if i0 < 0 goto label15;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        if $i1 <= i0 goto label15;

        r6 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

        r7 = r6;

        if r6 != null goto label14;

        r1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject>;

        entermonitor r1;

     label01:
        r8 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

     label02:
        r7 = r8;

        if r8 != null goto label09;

     label03:
        $r4 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        $i2 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

        r9 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] decompress(byte[],int)>($r4, $i2);

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = null;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = 0;

     label04:
        if r9 == null goto label07;

     label05:
        r7 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] unmarshall(byte[])>(r9);

     label06:
        goto label08;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Failed to decompress data. Returns null as fallback.");

        $i4 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        r7 = newarray (android.view.inputmethod.InputMethodSubtype)[$i4];

     label08:
        r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance> = r7;

     label09:
        exitmonitor r1;

     label10:
        goto label14;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r5;

     label14:
        $r3 = r7[i0];

        return $r3;

     label15:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getCount()
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        return $i0;
    }

    public void writeToParcel(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        java.lang.Object r1;
        int $i1, i3, i4, i5, i6;
        android.view.inputmethod.InputMethodSubtype[] $r2;
        java.lang.Throwable $r3;
        android.os.Parcel r4;
        byte[] r5, r6, r7, r8;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r4 := @parameter0: android.os.Parcel;

        i3 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        if i3 != 0 goto label01;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i3);

        return;

     label01:
        r5 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        i4 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

        r6 = r5;

        i5 = i4;

        if r5 != null goto label15;

        r6 = r5;

        i5 = i4;

        if i4 != 0 goto label15;

        r1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject>;

        entermonitor r1;

     label02:
        r7 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        i6 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

     label03:
        r6 = r7;

        i5 = i6;

        if r7 != null goto label10;

        r6 = r7;

        i5 = i6;

        if i6 != 0 goto label10;

     label04:
        $r2 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

        r8 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] marshall(android.view.inputmethod.InputMethodSubtype[])>($r2);

        r6 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] compress(byte[])>(r8);

     label05:
        if r6 != null goto label08;

        i5 = -1;

     label06:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Failed to compress data.");

     label07:
        goto label09;

     label08:
        i5 = lengthof r8;

     label09:
        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = i5;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = r6;

     label10:
        exitmonitor r1;

     label11:
        goto label15;

     label12:
        $r3 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r3;

     label15:
        if r6 == null goto label16;

        if i5 <= 0 goto label16;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>($i1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r4.<android.os.Parcel: void writeByteArray(byte[])>(r6);

        goto label17;

     label16:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Unexpected state. Behaving as an empty array.");

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label17:
        return;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public static void <clinit>()
    {
        <android.view.inputmethod.InputMethodSubtypeArray: java.lang.String TAG> = "InputMethodSubtypeArray";

        return;
    }
}
