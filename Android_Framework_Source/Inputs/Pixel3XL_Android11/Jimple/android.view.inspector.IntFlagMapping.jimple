public final class android.view.inspector.IntFlagMapping extends java.lang.Object
{
    private final java.util.List mFlags;

    public void <init>()
    {
        android.view.inspector.IntFlagMapping r0;
        java.util.ArrayList $r1;

        r0 := @this: android.view.inspector.IntFlagMapping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.view.inspector.IntFlagMapping: java.util.List mFlags> = $r1;

        return;
    }

    public void add(int, int, java.lang.String)
    {
        android.view.inspector.IntFlagMapping r0;
        int i0, i1;
        java.lang.String r1;
        android.view.inspector.IntFlagMapping$Flag $r2;
        java.util.List $r3;

        r0 := @this: android.view.inspector.IntFlagMapping;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<android.view.inspector.IntFlagMapping: java.util.List mFlags>;

        $r2 = new android.view.inspector.IntFlagMapping$Flag;

        specialinvoke $r2.<android.view.inspector.IntFlagMapping$Flag: void <init>(int,int,java.lang.String,android.view.inspector.IntFlagMapping$1)>(i0, i1, r1, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public java.util.Set get(int)
    {
        android.view.inspector.IntFlagMapping r0;
        int i0, $i1;
        java.util.Iterator r2;
        android.view.inspector.IntFlagMapping$Flag r3;
        java.util.HashSet $r4;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.util.Set $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        r0 := @this: android.view.inspector.IntFlagMapping;

        i0 := @parameter0: int;

        $r4 = new java.util.HashSet;

        $r5 = r0.<android.view.inspector.IntFlagMapping: java.util.List mFlags>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        $r6 = r0.<android.view.inspector.IntFlagMapping: java.util.List mFlags>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.inspector.IntFlagMapping$Flag) $r8;

        $z1 = staticinvoke <android.view.inspector.IntFlagMapping$Flag: boolean access$000(android.view.inspector.IntFlagMapping$Flag,int)>(r3, i0);

        if $z1 == 0 goto label2;

        $r9 = staticinvoke <android.view.inspector.IntFlagMapping$Flag: java.lang.String access$100(android.view.inspector.IntFlagMapping$Flag)>(r3);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r4);

        return $r7;
    }
}
