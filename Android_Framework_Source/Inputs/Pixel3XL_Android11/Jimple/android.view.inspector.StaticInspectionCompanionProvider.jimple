public class android.view.inspector.StaticInspectionCompanionProvider extends java.lang.Object implements android.view.inspector.InspectionCompanionProvider
{
    private static final java.lang.String COMPANION_SUFFIX;

    public void <init>()
    {
        android.view.inspector.StaticInspectionCompanionProvider r0;

        r0 := @this: android.view.inspector.StaticInspectionCompanionProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.view.inspector.InspectionCompanion provide(java.lang.Class)
    {
        android.view.inspector.StaticInspectionCompanionProvider r0;
        java.lang.String $r2, r17;
        java.lang.ClassLoader $r5;
        java.lang.Class $r6, r15, r18;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        java.lang.Throwable $r8, $r13, r21;
        java.lang.RuntimeException $r9, r25, r26;
        java.lang.Error $r11;
        java.lang.ClassNotFoundException $r12;
        android.view.inspector.InspectionCompanion r19;
        java.lang.StringBuilder r24;
        java.lang.InstantiationException r27;

        r0 := @this: android.view.inspector.StaticInspectionCompanionProvider;

        r15 := @parameter0: java.lang.Class;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r15.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$InspectionCompanion");

        r17 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = virtualinvoke r15.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r18 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r17);

        $r6 = class "Landroid/view/inspector/InspectionCompanion;";

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r18);

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r18.<java.lang.Class: java.lang.Object newInstance()>();

        r19 = (android.view.inspector.InspectionCompanion) $r7;

     label2:
        return r19;

     label3:
        return null;

     label4:
        $r8 := @caughtexception;

        r27 = (java.lang.InstantiationException) $r8;

        r21 = virtualinvoke r27.<java.lang.InstantiationException: java.lang.Throwable getCause()>();

        $z1 = r21 instanceof java.lang.RuntimeException;

        if $z1 != 0 goto label6;

        $z2 = r21 instanceof java.lang.Error;

        if $z2 == 0 goto label5;

        $r11 = (java.lang.Error) r21;

        throw $r11;

     label5:
        r25 = new java.lang.RuntimeException;

        specialinvoke r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r21);

        throw r25;

     label6:
        $r9 = (java.lang.RuntimeException) r21;

        throw $r9;

     label7:
        $r13 := @caughtexception;

        r26 = new java.lang.RuntimeException;

        specialinvoke r26.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw r26;

     label8:
        $r12 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.InstantiationException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <android.view.inspector.StaticInspectionCompanionProvider: java.lang.String COMPANION_SUFFIX> = "$InspectionCompanion";

        return;
    }
}
