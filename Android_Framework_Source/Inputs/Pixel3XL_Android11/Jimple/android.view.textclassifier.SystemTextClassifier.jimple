public final class android.view.textclassifier.SystemTextClassifier extends java.lang.Object implements android.view.textclassifier.TextClassifier
{
    private static final java.lang.String LOG_TAG;
    private final android.view.textclassifier.TextClassifier mFallback;
    private final android.service.textclassifier.ITextClassifierService mManagerService;
    private android.view.textclassifier.TextClassificationSessionId mSessionId;
    private final android.view.textclassifier.TextClassificationConstants mSettings;
    private final android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata;

    public void <init>(android.content.Context, android.view.textclassifier.TextClassificationConstants, boolean) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.content.Context r1;
        boolean z0;
        android.os.IBinder $r2;
        android.service.textclassifier.ITextClassifierService $r3;
        android.view.textclassifier.TextClassificationConstants $r5, r10;
        android.view.textclassifier.TextClassifier $r6;
        android.view.textclassifier.SystemTextClassifierMetadata $r8;
        java.lang.String $r9, r11;
        int $i0;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.content.Context;

        r10 := @parameter1: android.view.textclassifier.TextClassificationConstants;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("textclassification");

        $r3 = staticinvoke <android.service.textclassifier.ITextClassifierService$Stub: android.service.textclassifier.ITextClassifierService asInterface(android.os.IBinder)>($r2);

        r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService> = $r3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

        $r5 = (android.view.textclassifier.TextClassificationConstants) r10;

        r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationConstants mSettings> = $r5;

        $r6 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback> = $r6;

        r11 = virtualinvoke r1.<android.content.Context: java.lang.String getOpPackageName()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        $r8 = new android.view.textclassifier.SystemTextClassifierMetadata;

        $r9 = (java.lang.String) r11;

        $i0 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        specialinvoke $r8.<android.view.textclassifier.SystemTextClassifierMetadata: void <init>(java.lang.String,int,boolean)>($r9, $i0, z0);

        r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata> = $r8;

        return;
    }

    public android.view.textclassifier.TextClassification classifyText(android.view.textclassifier.TextClassification$Request)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextClassification$Request r1;
        android.view.textclassifier.SystemTextClassifierMetadata $r3;
        android.view.textclassifier.TextClassificationSessionId $r4;
        android.service.textclassifier.ITextClassifierService $r5;
        android.os.Parcelable $r6;
        android.view.textclassifier.TextClassifier $r7;
        android.view.textclassifier.TextClassification $r8, r11;
        android.os.RemoteException $r9;
        android.view.textclassifier.SystemTextClassifier$BlockingCallback r10;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.view.textclassifier.TextClassification$Request;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<android.view.textclassifier.TextClassification$Request: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r3);

        r10 = new android.view.textclassifier.SystemTextClassifier$BlockingCallback;

        specialinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: void <init>(java.lang.String)>("textclassification");

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r5.<android.service.textclassifier.ITextClassifierService: void onClassifyText(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassification$Request,android.service.textclassifier.ITextClassifierCallback)>($r4, r1, r10);

        $r6 = virtualinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>();

        r11 = (android.view.textclassifier.TextClassification) $r6;

     label2:
        if r11 == null goto label3;

        return r11;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error classifying text. Using fallback.", $r9);

     label5:
        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r8 = interfaceinvoke $r7.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassification classifyText(android.view.textclassifier.TextClassification$Request)>(r1);

        return $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void destroy()
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextClassificationSessionId $r2, $r3;
        android.service.textclassifier.ITextClassifierService $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

     label1:
        $r2 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        if $r2 == null goto label2;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r4.<android.service.textclassifier.ITextClassifierService: void onDestroyTextClassificationSession(android.view.textclassifier.TextClassificationSessionId)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error destroying classification session.", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.textclassifier.TextLanguage detectLanguage(android.view.textclassifier.TextLanguage$Request)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextLanguage$Request r1;
        android.view.textclassifier.SystemTextClassifierMetadata $r3;
        android.view.textclassifier.TextClassificationSessionId $r4;
        android.service.textclassifier.ITextClassifierService $r5;
        android.os.Parcelable $r6;
        android.view.textclassifier.TextClassifier $r7;
        android.view.textclassifier.TextLanguage $r8, r11;
        android.os.RemoteException $r9;
        android.view.textclassifier.SystemTextClassifier$BlockingCallback r10;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.view.textclassifier.TextLanguage$Request;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<android.view.textclassifier.TextLanguage$Request: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r3);

        r10 = new android.view.textclassifier.SystemTextClassifier$BlockingCallback;

        specialinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: void <init>(java.lang.String)>("textlanguage");

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r5.<android.service.textclassifier.ITextClassifierService: void onDetectLanguage(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLanguage$Request,android.service.textclassifier.ITextClassifierCallback)>($r4, r1, r10);

        $r6 = virtualinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>();

        r11 = (android.view.textclassifier.TextLanguage) $r6;

     label2:
        if r11 == null goto label3;

        return r11;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error detecting language.", $r9);

     label5:
        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r8 = interfaceinvoke $r7.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextLanguage detectLanguage(android.view.textclassifier.TextLanguage$Request)>(r1);

        return $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        com.android.internal.util.IndentingPrintWriter r1;
        android.view.textclassifier.TextClassifier $r3;
        android.view.textclassifier.TextClassificationSessionId $r5;
        android.view.textclassifier.SystemTextClassifierMetadata $r7;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("SystemTextClassifier:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mFallback", $r3);

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mSessionId", $r5);

        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter printPair(java.lang.String,java.lang.Object)>("mSystemTcMetadata", $r7);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        return;
    }

    public android.view.textclassifier.TextLinks generateLinks(android.view.textclassifier.TextLinks$Request)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextLinks$Request r1;
        java.lang.CharSequence $r3;
        int $i0;
        boolean $z0, $z1, $z2;
        android.view.textclassifier.TextClassificationConstants $r4;
        android.view.textclassifier.SystemTextClassifierMetadata $r5;
        android.view.textclassifier.TextClassificationSessionId $r6;
        android.service.textclassifier.ITextClassifierService $r7;
        android.os.Parcelable $r8;
        android.view.textclassifier.TextClassifier $r9, $r12;
        android.view.textclassifier.TextLinks $r10, $r11, $r13, r16;
        android.os.RemoteException $r14;
        android.view.textclassifier.SystemTextClassifier$BlockingCallback r15;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.view.textclassifier.TextLinks$Request;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

        $r3 = virtualinvoke r1.<android.view.textclassifier.TextLinks$Request: java.lang.CharSequence getText()>();

        $i0 = virtualinvoke r0.<android.view.textclassifier.SystemTextClassifier: int getMaxGenerateLinksTextLength()>();

        $z0 = staticinvoke <android.view.textclassifier.TextClassifier$Utils: boolean checkTextLength(java.lang.CharSequence,int)>($r3, $i0);

        if $z0 != 0 goto label1;

        $r12 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r13 = interfaceinvoke $r12.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextLinks generateLinks(android.view.textclassifier.TextLinks$Request)>(r1);

        return $r13;

     label1:
        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationConstants mSettings>;

        $z1 = virtualinvoke $r4.<android.view.textclassifier.TextClassificationConstants: boolean isSmartLinkifyEnabled()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<android.view.textclassifier.TextLinks$Request: boolean isLegacyFallback()>();

        if $z2 == 0 goto label2;

        $r11 = staticinvoke <android.view.textclassifier.TextClassifier$Utils: android.view.textclassifier.TextLinks generateLegacyLinks(android.view.textclassifier.TextLinks$Request)>(r1);

        return $r11;

     label2:
        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<android.view.textclassifier.TextLinks$Request: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r5);

        r15 = new android.view.textclassifier.SystemTextClassifier$BlockingCallback;

        specialinvoke r15.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: void <init>(java.lang.String)>("textlinks");

        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r6 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r7.<android.service.textclassifier.ITextClassifierService: void onGenerateLinks(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLinks$Request,android.service.textclassifier.ITextClassifierCallback)>($r6, r1, r15);

        $r8 = virtualinvoke r15.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>();

        r16 = (android.view.textclassifier.TextLinks) $r8;

     label3:
        if r16 == null goto label4;

        return r16;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error generating links. Using fallback.", $r14);

     label6:
        $r9 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r10 = interfaceinvoke $r9.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextLinks generateLinks(android.view.textclassifier.TextLinks$Request)>(r1);

        return $r10;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public int getMaxGenerateLinksTextLength()
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextClassificationConstants $r1;
        int $i0;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        $r1 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationConstants mSettings>;

        $i0 = virtualinvoke $r1.<android.view.textclassifier.TextClassificationConstants: int getGenerateLinksMaxTextLength()>();

        return $i0;
    }

    void initializeRemoteSession(android.view.textclassifier.TextClassificationContext, android.view.textclassifier.TextClassificationSessionId)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextClassificationSessionId r1, $r3, $r5;
        android.view.textclassifier.SystemTextClassifierMetadata $r4;
        android.service.textclassifier.ITextClassifierService $r6;
        android.os.RemoteException $r7;
        android.view.textclassifier.TextClassificationContext r8;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r8 := @parameter0: android.view.textclassifier.TextClassificationContext;

        r1 := @parameter1: android.view.textclassifier.TextClassificationSessionId;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (android.view.textclassifier.TextClassificationSessionId) r1;

        r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId> = $r3;

     label1:
        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r8.<android.view.textclassifier.TextClassificationContext: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r4);

        $r6 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r6.<android.service.textclassifier.ITextClassifierService: void onCreateTextClassificationSession(android.view.textclassifier.TextClassificationContext,android.view.textclassifier.TextClassificationSessionId)>(r8, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error starting a new classification session.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSelectionEvent(android.view.textclassifier.SelectionEvent)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.SystemTextClassifierMetadata $r2;
        android.view.textclassifier.TextClassificationSessionId $r3;
        android.service.textclassifier.ITextClassifierService $r4;
        android.os.RemoteException $r5;
        android.view.textclassifier.SelectionEvent r6;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r6 := @parameter0: android.view.textclassifier.SelectionEvent;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r2 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r6.<android.view.textclassifier.SelectionEvent: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r2);

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r4.<android.service.textclassifier.ITextClassifierService: void onSelectionEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.SelectionEvent)>($r3, r6);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error reporting selection event.", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextClassificationContext $r2, r11;
        android.view.textclassifier.SystemTextClassifierMetadata $r3, $r6;
        android.view.textclassifier.TextClassificationSessionId $r4;
        android.service.textclassifier.ITextClassifierService $r5;
        java.lang.String $r7;
        android.os.RemoteException $r8;
        android.view.textclassifier.TextClassifierEvent r9;
        android.view.textclassifier.TextClassificationContext$Builder r10;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r9 := @parameter0: android.view.textclassifier.TextClassifierEvent;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r2 = virtualinvoke r9.<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.TextClassificationContext getEventContext()>();

        if $r2 != null goto label3;

        r10 = new android.view.textclassifier.TextClassificationContext$Builder;

        $r6 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        $r7 = virtualinvoke $r6.<android.view.textclassifier.SystemTextClassifierMetadata: java.lang.String getCallingPackageName()>();

        specialinvoke r10.<android.view.textclassifier.TextClassificationContext$Builder: void <init>(java.lang.String,java.lang.String)>($r7, "unknown");

        r11 = virtualinvoke r10.<android.view.textclassifier.TextClassificationContext$Builder: android.view.textclassifier.TextClassificationContext build()>();

     label2:
        goto label4;

     label3:
        r11 = virtualinvoke r9.<android.view.textclassifier.TextClassifierEvent: android.view.textclassifier.TextClassificationContext getEventContext()>();

     label4:
        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r11.<android.view.textclassifier.TextClassificationContext: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r3);

        virtualinvoke r9.<android.view.textclassifier.TextClassifierEvent: void setEventContext(android.view.textclassifier.TextClassificationContext)>(r11);

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r5.<android.service.textclassifier.ITextClassifierService: void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassifierEvent)>($r4, r9);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error reporting textclassifier event.", $r8);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public android.view.textclassifier.ConversationActions suggestConversationActions(android.view.textclassifier.ConversationActions$Request)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.ConversationActions$Request r1;
        android.view.textclassifier.SystemTextClassifierMetadata $r3;
        android.view.textclassifier.TextClassificationSessionId $r4;
        android.service.textclassifier.ITextClassifierService $r5;
        android.os.Parcelable $r6;
        android.view.textclassifier.TextClassifier $r7;
        android.view.textclassifier.ConversationActions $r8, r11;
        android.os.RemoteException $r9;
        android.view.textclassifier.SystemTextClassifier$BlockingCallback r10;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.view.textclassifier.ConversationActions$Request;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<android.view.textclassifier.ConversationActions$Request: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r3);

        r10 = new android.view.textclassifier.SystemTextClassifier$BlockingCallback;

        specialinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: void <init>(java.lang.String)>("conversation-actions");

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r5.<android.service.textclassifier.ITextClassifierService: void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.ConversationActions$Request,android.service.textclassifier.ITextClassifierCallback)>($r4, r1, r10);

        $r6 = virtualinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>();

        r11 = (android.view.textclassifier.ConversationActions) $r6;

     label2:
        if r11 == null goto label3;

        return r11;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error reporting selection event.", $r9);

     label5:
        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r8 = interfaceinvoke $r7.<android.view.textclassifier.TextClassifier: android.view.textclassifier.ConversationActions suggestConversationActions(android.view.textclassifier.ConversationActions$Request)>(r1);

        return $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.view.textclassifier.TextSelection suggestSelection(android.view.textclassifier.TextSelection$Request)
    {
        android.view.textclassifier.SystemTextClassifier r0;
        android.view.textclassifier.TextSelection$Request r1;
        android.view.textclassifier.SystemTextClassifierMetadata $r3;
        android.view.textclassifier.TextClassificationSessionId $r4;
        android.service.textclassifier.ITextClassifierService $r5;
        android.os.Parcelable $r6;
        android.view.textclassifier.TextClassifier $r7;
        android.view.textclassifier.TextSelection $r8, r11;
        android.os.RemoteException $r9;
        android.view.textclassifier.SystemTextClassifier$BlockingCallback r10;

        r0 := @this: android.view.textclassifier.SystemTextClassifier;

        r1 := @parameter0: android.view.textclassifier.TextSelection$Request;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void checkMainThread()>();

     label1:
        $r3 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.SystemTextClassifierMetadata mSystemTcMetadata>;

        virtualinvoke r1.<android.view.textclassifier.TextSelection$Request: void setSystemTextClassifierMetadata(android.view.textclassifier.SystemTextClassifierMetadata)>($r3);

        r10 = new android.view.textclassifier.SystemTextClassifier$BlockingCallback;

        specialinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: void <init>(java.lang.String)>("textselection");

        $r5 = r0.<android.view.textclassifier.SystemTextClassifier: android.service.textclassifier.ITextClassifierService mManagerService>;

        $r4 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassificationSessionId mSessionId>;

        interfaceinvoke $r5.<android.service.textclassifier.ITextClassifierService: void onSuggestSelection(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextSelection$Request,android.service.textclassifier.ITextClassifierCallback)>($r4, r1, r10);

        $r6 = virtualinvoke r10.<android.view.textclassifier.SystemTextClassifier$BlockingCallback: android.os.Parcelable get()>();

        r11 = (android.view.textclassifier.TextSelection) $r6;

     label2:
        if r11 == null goto label3;

        return r11;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.view.textclassifier.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("androidtc", "Error suggesting selection for text. Using fallback.", $r9);

     label5:
        $r7 = r0.<android.view.textclassifier.SystemTextClassifier: android.view.textclassifier.TextClassifier mFallback>;

        $r8 = interfaceinvoke $r7.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextSelection suggestSelection(android.view.textclassifier.TextSelection$Request)>(r1);

        return $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <android.view.textclassifier.SystemTextClassifier: java.lang.String LOG_TAG> = "androidtc";

        return;
    }
}
