public final class android.view.textclassifier.TextClassifier$EntityConfig extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.util.List mExcludedTypes;
    private final java.util.List mHints;
    private final boolean mIncludeTypesFromTextClassifier;
    private final java.util.List mIncludedTypes;

    static void <clinit>()
    {
        android.view.textclassifier.TextClassifier$EntityConfig$1 $r0;

        $r0 = new android.view.textclassifier.TextClassifier$EntityConfig$1;

        specialinvoke $r0.<android.view.textclassifier.TextClassifier$EntityConfig$1: void <init>()>();

        <android.view.textclassifier.TextClassifier$EntityConfig: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        android.os.Parcel r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.util.List $r5;
        byte $b0;
        boolean z0;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mIncludedTypes> = $r2;

        virtualinvoke r1.<android.os.Parcel: void readStringList(java.util.List)>($r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mExcludedTypes> = $r3;

        virtualinvoke r1.<android.os.Parcel: void readStringList(java.util.List)>($r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke r1.<android.os.Parcel: void readStringList(java.util.List)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mHints> = $r5;

        $b0 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.view.textclassifier.TextClassifier$EntityConfig: boolean mIncludeTypesFromTextClassifier> = z0;

        return;
    }

    void <init>(android.os.Parcel, android.view.textclassifier.TextClassifier$1)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        android.os.Parcel r1;
        android.view.textclassifier.TextClassifier$1 r2;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.textclassifier.TextClassifier$1;

        specialinvoke r0.<android.view.textclassifier.TextClassifier$EntityConfig: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(java.util.List, java.util.List, java.util.List, boolean)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        java.util.List r1, r2, r3, $r5, $r7, $r9;
        boolean z0;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (java.util.List) r1;

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mIncludedTypes> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = (java.util.List) r2;

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mExcludedTypes> = $r7;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r9 = (java.util.List) r3;

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mHints> = $r9;

        r0.<android.view.textclassifier.TextClassifier$EntityConfig: boolean mIncludeTypesFromTextClassifier> = z0;

        return;
    }

    void <init>(java.util.List, java.util.List, java.util.List, boolean, android.view.textclassifier.TextClassifier$1)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        java.util.List r1, r2, r3;
        boolean z0;
        android.view.textclassifier.TextClassifier$1 r4;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.view.textclassifier.TextClassifier$1;

        specialinvoke r0.<android.view.textclassifier.TextClassifier$EntityConfig: void <init>(java.util.List,java.util.List,java.util.List,boolean)>(r1, r2, r3, z0);

        return;
    }

    public static android.view.textclassifier.TextClassifier$EntityConfig create(java.util.Collection, java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1, r2;
        android.view.textclassifier.TextClassifier$EntityConfig$Builder $r3, $r4, $r5, $r6, $r7;
        android.view.textclassifier.TextClassifier$EntityConfig $r8;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: java.util.Collection;

        $r3 = new android.view.textclassifier.TextClassifier$EntityConfig$Builder;

        specialinvoke $r3.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder setIncludedTypes(java.util.Collection)>(r1);

        $r5 = virtualinvoke $r4.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder setExcludedTypes(java.util.Collection)>(r2);

        $r6 = virtualinvoke $r5.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder setHints(java.util.Collection)>(r0);

        $r7 = virtualinvoke $r6.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder includeTypesFromTextClassifier(boolean)>(1);

        $r8 = virtualinvoke $r7.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig build()>();

        return $r8;
    }

    public static android.view.textclassifier.TextClassifier$EntityConfig createWithExplicitEntityList(java.util.Collection)
    {
        java.util.Collection r0;
        android.view.textclassifier.TextClassifier$EntityConfig$Builder $r1, $r2, $r3;
        android.view.textclassifier.TextClassifier$EntityConfig $r4;

        r0 := @parameter0: java.util.Collection;

        $r1 = new android.view.textclassifier.TextClassifier$EntityConfig$Builder;

        specialinvoke $r1.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder setIncludedTypes(java.util.Collection)>(r0);

        $r3 = virtualinvoke $r2.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder includeTypesFromTextClassifier(boolean)>(0);

        $r4 = virtualinvoke $r3.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig build()>();

        return $r4;
    }

    public static android.view.textclassifier.TextClassifier$EntityConfig createWithHints(java.util.Collection)
    {
        java.util.Collection r0;
        android.view.textclassifier.TextClassifier$EntityConfig$Builder $r1, $r2, $r3;
        android.view.textclassifier.TextClassifier$EntityConfig $r4;

        r0 := @parameter0: java.util.Collection;

        $r1 = new android.view.textclassifier.TextClassifier$EntityConfig$Builder;

        specialinvoke $r1.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder includeTypesFromTextClassifier(boolean)>(1);

        $r3 = virtualinvoke $r2.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig$Builder setHints(java.util.Collection)>(r0);

        $r4 = virtualinvoke $r3.<android.view.textclassifier.TextClassifier$EntityConfig$Builder: android.view.textclassifier.TextClassifier$EntityConfig build()>();

        return $r4;
    }

    public int describeContents()
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        return 0;
    }

    public java.util.Collection getHints()
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        java.util.List $r1;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        $r1 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mHints>;

        return $r1;
    }

    public java.util.Collection resolveEntityListModifications(java.util.Collection)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        java.util.Collection r1;
        java.util.HashSet $r3;
        boolean $z0;
        java.util.List $r4, $r5;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: java.util.Collection;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $z0 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: boolean mIncludeTypesFromTextClassifier>;

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

     label1:
        $r4 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mIncludedTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mExcludedTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r5);

        return $r3;
    }

    public boolean shouldIncludeTypesFromTextClassifier()
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        boolean $z0;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        $z0 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: boolean mIncludeTypesFromTextClassifier>;

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.textclassifier.TextClassifier$EntityConfig r0;
        android.os.Parcel r1;
        int i0;
        java.util.List $r2, $r3, $r4;
        boolean $z0;
        byte $b1;

        r0 := @this: android.view.textclassifier.TextClassifier$EntityConfig;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mIncludedTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r2);

        $r3 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mExcludedTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r3);

        $r4 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.List mHints>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r4);

        $z0 = r0.<android.view.textclassifier.TextClassifier$EntityConfig: boolean mIncludeTypesFromTextClassifier>;

        $b1 = (byte) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b1);

        return;
    }
}
