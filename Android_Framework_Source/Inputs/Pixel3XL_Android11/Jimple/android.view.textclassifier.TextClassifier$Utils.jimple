public final class android.view.textclassifier.TextClassifier$Utils extends java.lang.Object
{
    private static final java.text.BreakIterator WORD_ITERATOR;

    static void <clinit>()
    {
        java.text.BreakIterator $r0;

        $r0 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getWordInstance()>();

        <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.textclassifier.TextClassifier$Utils r0;

        r0 := @this: android.view.textclassifier.TextClassifier$Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void addLinks(android.view.textclassifier.TextLinks$Builder, java.lang.String, java.lang.String)
    {
        android.view.textclassifier.TextLinks$Builder r0;
        java.lang.String r1, r8;
        android.text.style.URLSpan[] r2;
        android.text.style.URLSpan r3;
        android.text.SpannableString $r4;
        int $i0, $i1, $i2, i3, i4, i5;
        boolean $z0;
        java.lang.Object[] $r5;
        java.util.Map $r6;

        r0 := @parameter0: android.view.textclassifier.TextLinks$Builder;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $r4 = new android.text.SpannableString;

        specialinvoke $r4.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r8);

        $i0 = staticinvoke <android.view.textclassifier.TextClassifier$Utils: int linkMask(java.lang.String)>(r1);

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r4, $i0);

        if $z0 == 0 goto label2;

        i3 = interfaceinvoke $r4.<android.text.Spannable: int length()>();

        i4 = 0;

        $r5 = interfaceinvoke $r4.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, i3, class "Landroid/text/style/URLSpan;");

        r2 = (android.text.style.URLSpan[]) $r5;

        i5 = lengthof r2;

     label1:
        if i4 >= i5 goto label2;

        r3 = r2[i4];

        $i1 = interfaceinvoke $r4.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r3);

        $i2 = interfaceinvoke $r4.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r3);

        $r6 = staticinvoke <android.view.textclassifier.TextClassifier$Utils: java.util.Map entityScores(java.lang.String)>(r1);

        virtualinvoke r0.<android.view.textclassifier.TextLinks$Builder: android.view.textclassifier.TextLinks$Builder addLink(int,int,java.util.Map,android.text.style.URLSpan)>($i1, $i2, $r6, r3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    static void checkArgument(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, $i2;
        boolean z1, z2, z3, z4;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        if i0 < 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z2);

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z3);

        if i1 <= i0 goto label7;

        z4 = 1;

        goto label8;

     label7:
        z4 = 0;

     label8:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z4);

        return;
    }

    static void checkMainThread()
    {
        android.os.Looper $r0, $r1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r0 != $r1 goto label1;

        staticinvoke <android.view.textclassifier.Log: void w(java.lang.String,java.lang.String)>("androidtc", "TextClassifier called on main thread");

     label1:
        return;
    }

    static boolean checkTextLength(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i1 < 0 goto label1;

        if i1 > i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static java.util.Map entityScores(java.lang.String)
    {
        java.lang.String r0;
        android.util.ArrayMap $r2;
        java.lang.Float $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

        return $r2;
    }

    public static android.view.textclassifier.TextLinks generateLegacyLinks(android.view.textclassifier.TextLinks$Request)
    {
        java.lang.String r0;
        java.lang.CharSequence $r2;
        android.view.textclassifier.TextLinks$Builder $r3;
        android.view.textclassifier.TextClassifier$EntityConfig $r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2;
        android.view.textclassifier.TextLinks $r6;
        android.view.textclassifier.TextLinks$Request r7;
        java.util.Collection r8;

        r7 := @parameter0: android.view.textclassifier.TextLinks$Request;

        $r2 = virtualinvoke r7.<android.view.textclassifier.TextLinks$Request: java.lang.CharSequence getText()>();

        r0 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = new android.view.textclassifier.TextLinks$Builder;

        specialinvoke $r3.<android.view.textclassifier.TextLinks$Builder: void <init>(java.lang.String)>(r0);

        $r4 = virtualinvoke r7.<android.view.textclassifier.TextLinks$Request: android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()>();

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r8 = virtualinvoke $r4.<android.view.textclassifier.TextClassifier$EntityConfig: java.util.Collection resolveEntityListModifications(java.util.Collection)>($r5);

        $z0 = interfaceinvoke r8.<java.util.Collection: boolean contains(java.lang.Object)>("url");

        if $z0 == 0 goto label1;

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void addLinks(android.view.textclassifier.TextLinks$Builder,java.lang.String,java.lang.String)>($r3, r0, "url");

     label1:
        $z1 = interfaceinvoke r8.<java.util.Collection: boolean contains(java.lang.Object)>("phone");

        if $z1 == 0 goto label2;

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void addLinks(android.view.textclassifier.TextLinks$Builder,java.lang.String,java.lang.String)>($r3, r0, "phone");

     label2:
        $z2 = interfaceinvoke r8.<java.util.Collection: boolean contains(java.lang.Object)>("email");

        if $z2 == 0 goto label3;

        staticinvoke <android.view.textclassifier.TextClassifier$Utils: void addLinks(android.view.textclassifier.TextLinks$Builder,java.lang.String,java.lang.String)>($r3, r0, "email");

     label3:
        $r6 = virtualinvoke $r3.<android.view.textclassifier.TextLinks$Builder: android.view.textclassifier.TextLinks build()>();

        return $r6;
    }

    public static java.lang.String getSubString(java.lang.String, int, int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        java.text.BreakIterator r0, $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z1, $z2, z3, z4, z5;
        java.lang.String $r7, r9, r10;
        java.lang.Throwable $r8;

        r9 := @parameter0: java.lang.String;

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        i0 := @parameter3: int;

        if i14 < 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z3);

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        if i15 > $i2 goto label03;

        z4 = 1;

        goto label04;

     label03:
        z4 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z4);

        if i14 > i15 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z5);

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i3 >= i0 goto label07;

        return r9;

     label07:
        i1 = i15 - i14;

        if i1 < i0 goto label08;

        $r7 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i14, i15);

        return $r7;

     label08:
        $i4 = i0 - i1;

        $i5 = $i4 / 2;

        $i6 = i14 - $i5;

        $i7 = virtualinvoke r9.<java.lang.String: int length()>();

        $i8 = $i7 - i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i8);

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i10 = virtualinvoke r9.<java.lang.String: int length()>();

        $i11 = i16 + i0;

        i17 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);

        r0 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        entermonitor r0;

     label09:
        $r1 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        virtualinvoke $r1.<java.text.BreakIterator: void setText(java.lang.String)>(r9);

        $r2 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        $z1 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i16);

        if $z1 == 0 goto label11;

     label10:
        goto label12;

     label11:
        $r3 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        $i12 = virtualinvoke $r3.<java.text.BreakIterator: int preceding(int)>(i16);

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

     label12:
        $r4 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        $z2 = virtualinvoke $r4.<java.text.BreakIterator: boolean isBoundary(int)>(i17);

        if $z2 == 0 goto label14;

     label13:
        goto label15;

     label14:
        $r5 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        $i13 = virtualinvoke $r5.<java.text.BreakIterator: int following(int)>(i17);

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(i17, $i13);

     label15:
        $r6 = <android.view.textclassifier.TextClassifier$Utils: java.text.BreakIterator WORD_ITERATOR>;

        virtualinvoke $r6.<java.text.BreakIterator: void setText(java.lang.String)>("");

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i16, i17);

        exitmonitor r0;

     label16:
        return r10;

     label17:
        $r8 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r8;

        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private static int linkMask(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        int i0;
        byte b1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        if i0 == 116079 goto label4;

        if i0 == 96619420 goto label3;

        if i0 == 106642798 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("phone");

        if $z2 == 0 goto label1;

        b1 = 1;

        goto label6;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("email");

        if $z1 == 0 goto label1;

        b1 = 2;

        goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("url");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 == 2 goto label7;

        return 0;

     label7:
        return 2;

     label8:
        return 4;

     label9:
        return 1;
    }
}
