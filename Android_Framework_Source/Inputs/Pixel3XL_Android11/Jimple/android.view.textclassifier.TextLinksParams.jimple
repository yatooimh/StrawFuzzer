public final class android.view.textclassifier.TextLinksParams extends java.lang.Object
{
    private static final java.util.function.Function DEFAULT_SPAN_FACTORY;
    private final int mApplyStrategy;
    private final android.view.textclassifier.TextClassifier$EntityConfig mEntityConfig;
    private final java.util.function.Function mSpanFactory;

    static void <clinit>()
    {
        android.view.textclassifier.'-$$Lambda$TextLinksParams$km8pN8nazHT6NQiHykIrRALWbkE' $r0;
        java.util.function.Function r1;

        $r0 = <android.view.textclassifier._$$Lambda$TextLinksParams$km8pN8nazHT6NQiHykIrRALWbkE: android.view.textclassifier.'-$$Lambda$TextLinksParams$km8pN8nazHT6NQiHykIrRALWbkE' INSTANCE>;

        r1 = (java.util.function.Function) $r0;

        <android.view.textclassifier.TextLinksParams: java.util.function.Function DEFAULT_SPAN_FACTORY> = r1;

        return;
    }

    private void <init>(int, java.util.function.Function)
    {
        android.view.textclassifier.TextLinksParams r0;
        int i0;
        java.util.function.Function r1;
        android.view.textclassifier.TextClassifier$EntityConfig $r2;

        r0 := @this: android.view.textclassifier.TextLinksParams;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.function.Function;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.textclassifier.TextLinksParams: int mApplyStrategy> = i0;

        r0.<android.view.textclassifier.TextLinksParams: java.util.function.Function mSpanFactory> = r1;

        $r2 = staticinvoke <android.view.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig createWithHints(java.util.Collection)>(null);

        r0.<android.view.textclassifier.TextLinksParams: android.view.textclassifier.TextClassifier$EntityConfig mEntityConfig> = $r2;

        return;
    }

    void <init>(int, java.util.function.Function, android.view.textclassifier.TextLinksParams$1)
    {
        android.view.textclassifier.TextLinksParams r0;
        int i0;
        java.util.function.Function r1;
        android.view.textclassifier.TextLinksParams$1 r2;

        r0 := @this: android.view.textclassifier.TextLinksParams;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.function.Function;

        r2 := @parameter2: android.view.textclassifier.TextLinksParams$1;

        specialinvoke r0.<android.view.textclassifier.TextLinksParams: void <init>(int,java.util.function.Function)>(i0, r1);

        return;
    }

    static java.util.function.Function access$000()
    {
        java.util.function.Function $r0;

        $r0 = <android.view.textclassifier.TextLinksParams: java.util.function.Function DEFAULT_SPAN_FACTORY>;

        return $r0;
    }

    static int access$100(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.textclassifier.TextLinksParams: int checkApplyStrategy(int)>(i0);

        return $i1;
    }

    private static int checkApplyStrategy(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid apply strategy. See TextLinksParams.ApplyStrategy for options.");

        throw $r0;

     label2:
        return i0;
    }

    public static android.view.textclassifier.TextLinksParams fromLinkMask(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        android.view.textclassifier.TextLinksParams$Builder $r2, $r4;
        android.view.textclassifier.TextClassifier$EntityConfig $r3;
        android.view.textclassifier.TextLinksParams $r5;

        i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("url");

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("email");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("phone");

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("address");

     label4:
        $r2 = new android.view.textclassifier.TextLinksParams$Builder;

        specialinvoke $r2.<android.view.textclassifier.TextLinksParams$Builder: void <init>()>();

        $r3 = staticinvoke <android.view.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig createWithExplicitEntityList(java.util.Collection)>($r1);

        $r4 = virtualinvoke $r2.<android.view.textclassifier.TextLinksParams$Builder: android.view.textclassifier.TextLinksParams$Builder setEntityConfig(android.view.textclassifier.TextClassifier$EntityConfig)>($r3);

        $r5 = virtualinvoke $r4.<android.view.textclassifier.TextLinksParams$Builder: android.view.textclassifier.TextLinksParams build()>();

        return $r5;
    }

    static android.view.textclassifier.TextLinks$TextLinkSpan lambda$static$0(android.view.textclassifier.TextLinks$TextLink)
    {
        android.view.textclassifier.TextLinks$TextLink r0;
        android.view.textclassifier.TextLinks$TextLinkSpan $r1;

        r0 := @parameter0: android.view.textclassifier.TextLinks$TextLink;

        $r1 = new android.view.textclassifier.TextLinks$TextLinkSpan;

        specialinvoke $r1.<android.view.textclassifier.TextLinks$TextLinkSpan: void <init>(android.view.textclassifier.TextLinks$TextLink)>(r0);

        return $r1;
    }

    public int apply(android.text.Spannable, android.view.textclassifier.TextLinks)
    {
        android.view.textclassifier.TextLinksParams r0;
        android.text.Spannable r1;
        android.view.textclassifier.TextLinks$TextLinkSpan r2;
        android.text.style.ClickableSpan[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r6;
        java.lang.String $r7, r18;
        java.util.Collection $r8, $r9;
        java.lang.Object $r10, $r12;
        java.util.function.Function $r11;
        java.lang.Object[] $r13, $r15;
        android.text.style.ClickableSpan $r14;
        java.lang.Integer $r16;
        android.view.textclassifier.TextLinks r17;
        java.util.Iterator r19;
        android.view.textclassifier.TextLinks$TextLink r20;

        r0 := @this: android.view.textclassifier.TextLinksParams;

        r1 := @parameter0: android.text.Spannable;

        r17 := @parameter1: android.view.textclassifier.TextLinks;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r17);

        r18 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.util.Linkify: boolean containsUnsupportedCharacters(java.lang.String)>(r18);

        if $z0 == 0 goto label01;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = "116321860";

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r15[1] = $r16;

        $r15[2] = "";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r15);

        return 4;

     label01:
        $r6 = virtualinvoke r17.<android.view.textclassifier.TextLinks: java.lang.CharSequence getText()>();

        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z1 != 0 goto label02;

        return 3;

     label02:
        $r8 = virtualinvoke r17.<android.view.textclassifier.TextLinks: java.util.Collection getLinks()>();

        $z2 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label03;

        return 1;

     label03:
        i10 = 0;

        $r9 = virtualinvoke r17.<android.view.textclassifier.TextLinks: java.util.Collection getLinks()>();

        r19 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (android.view.textclassifier.TextLinks$TextLink) $r10;

        $r11 = r0.<android.view.textclassifier.TextLinksParams: java.util.function.Function mSpanFactory>;

        $r12 = interfaceinvoke $r11.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r20);

        r2 = (android.view.textclassifier.TextLinks$TextLinkSpan) $r12;

        i11 = i10;

        if r2 == null goto label08;

        $i1 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getStart()>();

        $i2 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getEnd()>();

        $r13 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "Landroid/text/style/ClickableSpan;");

        r3 = (android.text.style.ClickableSpan[]) $r13;

        $i3 = lengthof r3;

        if $i3 <= 0 goto label07;

        i11 = i10;

        $i6 = r0.<android.view.textclassifier.TextLinksParams: int mApplyStrategy>;

        if $i6 != 1 goto label08;

        i0 = lengthof r3;

        i12 = 0;

     label05:
        if i12 >= i0 goto label06;

        $r14 = r3[i12];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r14);

        i12 = i12 + 1;

        goto label05;

     label06:
        $i7 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getStart()>();

        $i8 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getEnd()>();

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r2, $i7, $i8, 33);

        i11 = i10 + 1;

        goto label08;

     label07:
        $i4 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getStart()>();

        $i5 = virtualinvoke r20.<android.view.textclassifier.TextLinks$TextLink: int getEnd()>();

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r2, $i4, $i5, 33);

        i11 = i10 + 1;

     label08:
        i10 = i11;

        goto label04;

     label09:
        if i10 != 0 goto label10;

        return 2;

     label10:
        return 0;
    }

    public android.view.textclassifier.TextClassifier$EntityConfig getEntityConfig()
    {
        android.view.textclassifier.TextLinksParams r0;
        android.view.textclassifier.TextClassifier$EntityConfig $r1;

        r0 := @this: android.view.textclassifier.TextLinksParams;

        $r1 = r0.<android.view.textclassifier.TextLinksParams: android.view.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        return $r1;
    }
}
