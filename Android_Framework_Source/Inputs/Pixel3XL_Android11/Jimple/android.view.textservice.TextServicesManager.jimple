public final class android.view.textservice.TextServicesManager extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static android.view.textservice.TextServicesManager sInstance;
    private final com.android.internal.textservice.ITextServicesManager mService;
    private final int mUserId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.view.textservice.TextServicesManager: boolean DBG> = 0;

        $r0 = class "Landroid/view/textservice/TextServicesManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.textservice.TextServicesManager: java.lang.String TAG> = $r1;

        return;
    }

    private void <init>(int) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.view.textservice.TextServicesManager r0;
        int i0;
        android.os.IBinder $r1;
        com.android.internal.textservice.ITextServicesManager $r2;

        r0 := @this: android.view.textservice.TextServicesManager;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("textservices");

        $r2 = staticinvoke <com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager asInterface(android.os.IBinder)>($r1);

        r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService> = $r2;

        r0.<android.view.textservice.TextServicesManager: int mUserId> = i0;

        return;
    }

    public static android.view.textservice.TextServicesManager createInstance(android.content.Context) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.content.Context r0;
        android.view.textservice.TextServicesManager $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.view.textservice.TextServicesManager;

        $i0 = virtualinvoke r0.<android.content.Context: int getUserId()>();

        specialinvoke $r1.<android.view.textservice.TextServicesManager: void <init>(int)>($i0);

        return $r1;
    }

    public static android.view.textservice.TextServicesManager getInstance()
    {
        java.lang.IllegalStateException r0;
        int $i0;
        java.lang.Throwable $r1;
        android.os.ServiceManager$ServiceNotFoundException $r2;
        android.view.textservice.TextServicesManager r3, r4, r6;

        entermonitor class "Landroid/view/textservice/TextServicesManager;";

     label01:
        r3 = <android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager sInstance>;

     label02:
        if r3 != null goto label07;

     label03:
        r4 = new android.view.textservice.TextServicesManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        specialinvoke r4.<android.view.textservice.TextServicesManager: void <init>(int)>($i0);

        <android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager sInstance> = r4;

     label04:
        goto label07;

     label05:
        $r2 := @caughtexception;

     label06:
        r0 = new java.lang.IllegalStateException;

        specialinvoke r0.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r2);

        throw r0;

     label07:
        r6 = <android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager sInstance>;

        exitmonitor class "Landroid/view/textservice/TextServicesManager;";

     label08:
        return r6;

     label09:
        $r1 := @caughtexception;

     label10:
        exitmonitor class "Landroid/view/textservice/TextServicesManager;";

     label11:
        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.ServiceManager$ServiceNotFoundException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private static java.lang.String parseLanguageFromLocaleString(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(95);

        if i0 >= 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)
    {
        android.view.textservice.TextServicesManager r0;
        int $i0;
        com.android.internal.textservice.ITextServicesManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.textservice.ISpellCheckerSessionListener r4;

        r0 := @this: android.view.textservice.TextServicesManager;

        r4 := @parameter0: com.android.internal.textservice.ISpellCheckerSessionListener;

     label1:
        $r1 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        interfaceinvoke $r1.<com.android.internal.textservice.ITextServicesManager: void finishSpellCheckerService(int,com.android.internal.textservice.ISpellCheckerSessionListener)>($i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()
    {
        android.view.textservice.TextServicesManager r0;
        int $i0;
        com.android.internal.textservice.ITextServicesManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.view.textservice.SpellCheckerInfo r4;

        r0 := @this: android.view.textservice.TextServicesManager;

     label1:
        $r1 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        r4 = interfaceinvoke $r1.<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)>($i0, null);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)
    {
        android.view.textservice.TextServicesManager r0;
        boolean z0;
        int $i0;
        com.android.internal.textservice.ITextServicesManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.view.textservice.SpellCheckerSubtype r4;

        r0 := @this: android.view.textservice.TextServicesManager;

        z0 := @parameter0: boolean;

     label1:
        $r1 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        r4 = interfaceinvoke $r1.<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)>($i0, z0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()
    {
        android.view.textservice.TextServicesManager r0;
        int $i0;
        com.android.internal.textservice.ITextServicesManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.view.textservice.SpellCheckerInfo[] r4;

        r0 := @this: android.view.textservice.TextServicesManager;

     label1:
        $r1 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        r4 = interfaceinvoke $r1.<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>($i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSpellCheckerEnabled()
    {
        android.view.textservice.TextServicesManager r0;
        boolean z0;
        int $i0;
        com.android.internal.textservice.ITextServicesManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.view.textservice.TextServicesManager;

     label1:
        $r2 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        z0 = interfaceinvoke $r2.<com.android.internal.textservice.ITextServicesManager: boolean isSpellCheckerEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle, java.util.Locale, android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener, boolean)
    {
        android.view.textservice.TextServicesManager r0;
        android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.textservice.SpellCheckerInfo r2;
        java.lang.String r3, r4, $r8, $r9, $r12, $r13, $r14, r24, r25;
        int $i0, $i1, $i2, $i3, $i4, i5;
        com.android.internal.textservice.ITextServicesManager $r5, $r7;
        android.view.textservice.SpellCheckerSession $r6;
        com.android.internal.textservice.ITextServicesSessionListener $r10;
        com.android.internal.textservice.ISpellCheckerSessionListener $r11;
        java.lang.IllegalArgumentException $r15;
        android.os.RemoteException $r16, $r18;
        java.lang.RuntimeException $r17;
        android.os.Bundle r19;
        java.util.Locale r20;
        android.view.textservice.SpellCheckerSubtype r21, r22, r23, r26;

        r0 := @this: android.view.textservice.TextServicesManager;

        r19 := @parameter0: android.os.Bundle;

        r20 := @parameter1: java.util.Locale;

        r1 := @parameter2: android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener;

        z0 := @parameter3: boolean;

        if r1 == null goto label19;

        if z0 != 0 goto label02;

        if r20 == null goto label01;

        goto label02;

     label01:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Locale should not be null if you don\'t refer settings.");

        throw $r15;

     label02:
        if z0 == 0 goto label03;

        $z4 = virtualinvoke r0.<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>();

        if $z4 != 0 goto label03;

        return null;

     label03:
        $r5 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i0 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        r2 = interfaceinvoke $r5.<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)>($i0, null);

     label04:
        if r2 != null goto label05;

        return null;

     label05:
        r21 = null;

        if z0 == 0 goto label09;

        r22 = virtualinvoke r0.<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>(1);

        if r22 != null goto label06;

        return null;

     label06:
        r23 = r22;

        if r20 == null goto label13;

        $r13 = virtualinvoke r22.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        r24 = staticinvoke <android.view.textservice.TextServicesManager: java.lang.String parseLanguageFromLocaleString(java.lang.String)>($r13);

        $i4 = virtualinvoke r24.<java.lang.String: int length()>();

        if $i4 < 2 goto label08;

        $r14 = virtualinvoke r20.<java.util.Locale: java.lang.String getLanguage()>();

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r24);

        if $z3 != 0 goto label07;

        goto label08;

     label07:
        r23 = r22;

        goto label13;

     label08:
        return null;

     label09:
        r3 = virtualinvoke r20.<java.util.Locale: java.lang.String toString()>();

        i5 = 0;

     label10:
        r23 = r21;

        $i1 = virtualinvoke r2.<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>();

        if i5 >= $i1 goto label13;

        r23 = virtualinvoke r2.<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>(i5);

        r25 = virtualinvoke r23.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        r4 = staticinvoke <android.view.textservice.TextServicesManager: java.lang.String parseLanguageFromLocaleString(java.lang.String)>(r25);

        $z1 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label11;

        goto label13;

     label11:
        r26 = r21;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i3 < 2 goto label12;

        r26 = r21;

        $r12 = virtualinvoke r20.<java.util.Locale: java.lang.String getLanguage()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label12;

        r26 = r23;

     label12:
        i5 = i5 + 1;

        r21 = r26;

        goto label10;

     label13:
        if r23 != null goto label14;

        return null;

     label14:
        $r6 = new android.view.textservice.SpellCheckerSession;

        specialinvoke $r6.<android.view.textservice.SpellCheckerSession: void <init>(android.view.textservice.SpellCheckerInfo,android.view.textservice.TextServicesManager,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener)>(r2, r0, r1);

     label15:
        $r7 = r0.<android.view.textservice.TextServicesManager: com.android.internal.textservice.ITextServicesManager mService>;

        $i2 = r0.<android.view.textservice.TextServicesManager: int mUserId>;

        $r8 = virtualinvoke r2.<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>();

        $r9 = virtualinvoke r23.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        $r10 = virtualinvoke $r6.<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>();

        $r11 = virtualinvoke $r6.<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>();

        interfaceinvoke $r7.<com.android.internal.textservice.ITextServicesManager: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>($i2, $r8, $r9, $r10, $r11, r19);

     label16:
        return $r6;

     label17:
        $r16 := @caughtexception;

        $r17 = virtualinvoke $r16.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r17;

     label18:
        $r18 := @caughtexception;

        return null;

     label19:
        throw null;

        catch android.os.RemoteException from label03 to label04 with label18;
        catch android.os.RemoteException from label15 to label16 with label17;
    }
}
