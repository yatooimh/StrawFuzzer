public class android.webkit.UserPackage extends java.lang.Object
{
    public static final int MINIMUM_SUPPORTED_SDK;
    private final android.content.pm.PackageInfo mPackageInfo;
    private final android.content.pm.UserInfo mUserInfo;

    public void <init>(android.content.pm.UserInfo, android.content.pm.PackageInfo)
    {
        android.webkit.UserPackage r0;
        android.content.pm.UserInfo r1;
        android.content.pm.PackageInfo r2;

        r0 := @this: android.webkit.UserPackage;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.content.pm.PackageInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.webkit.UserPackage: android.content.pm.UserInfo mUserInfo> = r1;

        r0.<android.webkit.UserPackage: android.content.pm.PackageInfo mPackageInfo> = r2;

        return;
    }

    private static java.util.List getAllUsers(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.os.UserManager $r2;
        java.util.List $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r2 = (android.os.UserManager) $r1;

        $r3 = virtualinvoke $r2.<android.os.UserManager: java.util.List getUsers(boolean)>(0);

        return $r3;
    }

    public static java.util.List getPackageInfosAllUsers(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        java.util.Iterator r3;
        android.content.pm.UserInfo r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.content.pm.PackageManager $r7;
        android.webkit.UserPackage $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.util.List r10;
        android.content.pm.PackageInfo r11, r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r10 = staticinvoke <android.webkit.UserPackage: java.util.List getAllUsers(android.content.Context)>(r0);

        $r5 = new java.util.ArrayList;

        $i1 = interfaceinvoke r10.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r3 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.UserInfo) $r6;

        r11 = null;

     label2:
        $r7 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = r4.<android.content.pm.UserInfo: int id>;

        r12 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r1, i0, $i2);

     label3:
        r11 = r12;

        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        $r8 = new android.webkit.UserPackage;

        specialinvoke $r8.<android.webkit.UserPackage: void <init>(android.content.pm.UserInfo,android.content.pm.PackageInfo)>(r4, r11);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label6:
        return $r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public static boolean hasCorrectTargetSdkVersion(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r1 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 30 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.content.pm.PackageInfo getPackageInfo()
    {
        android.webkit.UserPackage r0;
        android.content.pm.PackageInfo $r1;

        r0 := @this: android.webkit.UserPackage;

        $r1 = r0.<android.webkit.UserPackage: android.content.pm.PackageInfo mPackageInfo>;

        return $r1;
    }

    public android.content.pm.UserInfo getUserInfo()
    {
        android.webkit.UserPackage r0;
        android.content.pm.UserInfo $r1;

        r0 := @this: android.webkit.UserPackage;

        $r1 = r0.<android.webkit.UserPackage: android.content.pm.UserInfo mUserInfo>;

        return $r1;
    }

    public boolean isEnabledPackage()
    {
        android.webkit.UserPackage r0;
        android.content.pm.PackageInfo r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;

        r0 := @this: android.webkit.UserPackage;

        r1 = r0.<android.webkit.UserPackage: android.content.pm.PackageInfo mPackageInfo>;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = $r2.<android.content.pm.ApplicationInfo: boolean enabled>;

        return $z0;
    }

    public boolean isInstalledPackage()
    {
        android.webkit.UserPackage r0;
        android.content.pm.PackageInfo r1, $r3;
        android.content.pm.ApplicationInfo $r2, $r4;
        int $i0, $i1, $i2, $i3;
        boolean z1;

        r0 := @this: android.webkit.UserPackage;

        r1 = r0.<android.webkit.UserPackage: android.content.pm.PackageInfo mPackageInfo>;

        if r1 != null goto label1;

        return 0;

     label1:
        z1 = 0;

        $r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8388608;

        if $i1 == 0 goto label2;

        z1 = 0;

        $r3 = r0.<android.webkit.UserPackage: android.content.pm.PackageInfo mPackageInfo>;

        $r4 = $r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r4.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i3 = $i2 & 1;

        if $i3 != 0 goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    public static void <clinit>()
    {
        <android.webkit.UserPackage: int MINIMUM_SUPPORTED_SDK> = 30;

        return;
    }
}
