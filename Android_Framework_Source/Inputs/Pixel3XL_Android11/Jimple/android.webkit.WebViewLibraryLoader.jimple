public class android.webkit.WebViewLibraryLoader extends java.lang.Object
{
    private static final java.lang.String CHROMIUM_WEBVIEW_NATIVE_RELRO_32;
    private static final java.lang.String CHROMIUM_WEBVIEW_NATIVE_RELRO_64;
    private static final boolean DEBUG;
    private static final java.lang.String LOGTAG;
    private static boolean sAddressSpaceReserved;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.webkit.WebViewLibraryLoader: boolean DEBUG> = 0;

        <android.webkit.WebViewLibraryLoader: java.lang.String CHROMIUM_WEBVIEW_NATIVE_RELRO_64> = "/data/misc/shared_relro/libwebviewchromium64.relro";

        <android.webkit.WebViewLibraryLoader: java.lang.String CHROMIUM_WEBVIEW_NATIVE_RELRO_32> = "/data/misc/shared_relro/libwebviewchromium32.relro";

        $r0 = class "Landroid/webkit/WebViewLibraryLoader;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG> = $r1;

        <android.webkit.WebViewLibraryLoader: boolean sAddressSpaceReserved> = 0;

        return;
    }

    public void <init>()
    {
        android.webkit.WebViewLibraryLoader r0;

        r0 := @this: android.webkit.WebViewLibraryLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG>;

        return $r0;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <android.webkit.WebViewLibraryLoader: boolean sAddressSpaceReserved>;

        return $z0;
    }

    static void createRelroFile(boolean, java.lang.String, java.lang.String)
    {
        boolean z0, $z1;
        android.app.ActivityManagerInternal r1;
        java.lang.String[] $r2, $r8, $r9;
        android.webkit.WebViewLibraryLoader$1 $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.Throwable $r10;
        java.lang.StringBuilder $r11, r19;
        java.lang.String $r14, r15, r16, r17, r18, r20, r23;
        java.lang.Exception r21;

        z0 := @parameter0: boolean;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: java.lang.String;

        if z0 == 0 goto label1;

        $r9 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        r17 = $r9[0];

        goto label2;

     label1:
        $r2 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        r17 = $r2[0];

     label2:
        $r3 = new android.webkit.WebViewLibraryLoader$1;

        specialinvoke $r3.<android.webkit.WebViewLibraryLoader$1: void <init>(java.lang.String)>(r17);

     label3:
        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        r1 = (android.app.ActivityManagerInternal) $r4;

        $r5 = class "Landroid/webkit/WebViewLibraryLoader$RelroFileCreator;";

        r18 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WebViewLoader-");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        r20 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = r15;

        $r8[1] = r16;

        $z1 = virtualinvoke r1.<android.app.ActivityManagerInternal: boolean startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>(r18, $r8, r20, r17, 1037, $r3);

        if $z1 == 0 goto label5;

     label4:
        goto label7;

     label5:
        r21 = new java.lang.Exception;

        specialinvoke r21.<java.lang.Exception: void <init>(java.lang.String)>("Failed to start the relro file creator process");

        throw r21;

     label6:
        $r10 := @caughtexception;

        r23 = <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error starting relro file creator for abi ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r23, $r14, $r10);

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    private static int createRelros(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i2 = 0;

        $r2 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        staticinvoke <android.webkit.WebViewLibraryLoader: void createRelroFile(boolean,java.lang.String,java.lang.String)>(0, r0, r1);

        i2 = 0 + 1;

     label1:
        i3 = i2;

        $r3 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i1 = lengthof $r3;

        if $i1 <= 0 goto label2;

        staticinvoke <android.webkit.WebViewLibraryLoader: void createRelroFile(boolean,java.lang.String,java.lang.String)>(1, r0, r1);

        i3 = i2 + 1;

     label2:
        return i3;
    }

    public static int loadNativeLibrary(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, $r3, $r4, r5;
        int i0;
        boolean $z0, $z1;
        dalvik.system.VMRuntime $r2;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        $z0 = <android.webkit.WebViewLibraryLoader: boolean sAddressSpaceReserved>;

        if $z0 != 0 goto label1;

        $r4 = <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "can\'t load with relro file; address space not reserved");

        return 2;

     label1:
        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $z1 = virtualinvoke $r2.<dalvik.system.VMRuntime: boolean is64Bit()>();

        if $z1 == 0 goto label2;

        r5 = "/data/misc/shared_relro/libwebviewchromium64.relro";

        goto label3;

     label2:
        r5 = "/data/misc/shared_relro/libwebviewchromium32.relro";

     label3:
        i0 = staticinvoke <android.webkit.WebViewLibraryLoader: int nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.ClassLoader)>(r1, r5, r0);

        if i0 == 0 goto label4;

        $r3 = <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "failed to load with relro file, proceeding without");

     label4:
        return i0;
    }

    static native boolean nativeCreateRelroFile(java.lang.String, java.lang.String, java.lang.ClassLoader);

    static native int nativeLoadWithRelroFile(java.lang.String, java.lang.String, java.lang.ClassLoader);

    static native boolean nativeReserveAddressSpace(long);

    static int prepareNativeLibraries(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        java.lang.String r1, $r3;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r2 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r1 = staticinvoke <android.webkit.WebViewFactory: java.lang.String getWebViewLibrary(android.content.pm.ApplicationInfo)>($r2);

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $i0 = staticinvoke <android.webkit.WebViewLibraryLoader: int createRelros(java.lang.String,java.lang.String)>($r3, r1);

        return $i0;
    }

    static void reserveAddressSpaceInZygote()
    {
        boolean z0, $z1;
        java.lang.String r0, $r7;
        dalvik.system.VMRuntime $r2;
        java.lang.StringBuilder $r3;
        long l1;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("webviewchromium_loader");

        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $z1 = virtualinvoke $r2.<dalvik.system.VMRuntime: boolean is64Bit()>();

        if $z1 == 0 goto label1;

        l1 = 1073741824L;

        goto label2;

     label1:
        l1 = 136314880L;

     label2:
        z0 = staticinvoke <android.webkit.WebViewLibraryLoader: boolean nativeReserveAddressSpace(long)>(l1);

        <android.webkit.WebViewLibraryLoader: boolean sAddressSpaceReserved> = z0;

        if z0 == 0 goto label3;

        goto label4;

     label3:
        r0 = <android.webkit.WebViewLibraryLoader: java.lang.String LOGTAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reserving ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes of address space failed");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r0, $r7);

     label4:
        return;
    }
}
