public final class android.webkit.WebViewUpdateService extends java.lang.Object
{

    private void <init>()
    {
        android.webkit.WebViewUpdateService r0;

        r0 := @this: android.webkit.WebViewUpdateService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.webkit.WebViewProviderInfo[] getAllWebViewPackages()
    {
        android.webkit.WebViewProviderInfo[] $r0, r4;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.webkit.IWebViewUpdateService r3;

        r3 = staticinvoke <android.webkit.WebViewUpdateService: android.webkit.IWebViewUpdateService getUpdateService()>();

        if r3 != null goto label1;

        $r0 = newarray (android.webkit.WebViewProviderInfo)[0];

        return $r0;

     label1:
        r4 = interfaceinvoke r3.<android.webkit.IWebViewUpdateService: android.webkit.WebViewProviderInfo[] getAllWebViewPackages()>();

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String getCurrentWebViewPackageName()
    {
        android.os.RemoteException $r0;
        java.lang.RuntimeException $r1;
        android.webkit.IWebViewUpdateService r2;
        java.lang.String r3;

        r2 = staticinvoke <android.webkit.WebViewUpdateService: android.webkit.IWebViewUpdateService getUpdateService()>();

        if r2 != null goto label1;

        return null;

     label1:
        r3 = interfaceinvoke r2.<android.webkit.IWebViewUpdateService: java.lang.String getCurrentWebViewPackageName()>();

     label2:
        return r3;

     label3:
        $r0 := @caughtexception;

        $r1 = virtualinvoke $r0.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static android.webkit.IWebViewUpdateService getUpdateService()
    {
        android.webkit.IWebViewUpdateService $r0;

        $r0 = staticinvoke <android.webkit.WebViewFactory: android.webkit.IWebViewUpdateService getUpdateService()>();

        return $r0;
    }

    public static android.webkit.WebViewProviderInfo[] getValidWebViewPackages()
    {
        android.webkit.WebViewProviderInfo[] $r0, r4;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.webkit.IWebViewUpdateService r3;

        r3 = staticinvoke <android.webkit.WebViewUpdateService: android.webkit.IWebViewUpdateService getUpdateService()>();

        if r3 != null goto label1;

        $r0 = newarray (android.webkit.WebViewProviderInfo)[0];

        return $r0;

     label1:
        r4 = interfaceinvoke r3.<android.webkit.IWebViewUpdateService: android.webkit.WebViewProviderInfo[] getValidWebViewPackages()>();

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
