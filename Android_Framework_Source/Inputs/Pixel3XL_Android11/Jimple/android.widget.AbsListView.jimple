public abstract class android.widget.AbsListView extends android.widget.AdapterView implements android.text.TextWatcher, android.view.ViewTreeObserver$OnGlobalLayoutListener, android.widget.Filter$FilterListener, android.view.ViewTreeObserver$OnTouchModeChangeListener, android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback
{
    private static final int CHECK_POSITION_SEARCH_DISTANCE;
    public static final int CHOICE_MODE_MULTIPLE;
    public static final int CHOICE_MODE_MULTIPLE_MODAL;
    public static final int CHOICE_MODE_NONE;
    public static final int CHOICE_MODE_SINGLE;
    private static final int INVALID_POINTER;
    static final int LAYOUT_FORCE_BOTTOM;
    static final int LAYOUT_FORCE_TOP;
    static final int LAYOUT_MOVE_SELECTION;
    static final int LAYOUT_NORMAL;
    static final int LAYOUT_SET_SELECTION;
    static final int LAYOUT_SPECIFIC;
    static final int LAYOUT_SYNC;
    static final int OVERSCROLL_LIMIT_DIVISOR;
    private static final boolean PROFILE_FLINGING;
    private static final boolean PROFILE_SCROLLING;
    private static final java.lang.String TAG;
    static final int TOUCH_MODE_DONE_WAITING;
    static final int TOUCH_MODE_DOWN;
    static final int TOUCH_MODE_FLING;
    private static final int TOUCH_MODE_OFF;
    private static final int TOUCH_MODE_ON;
    static final int TOUCH_MODE_OVERFLING;
    static final int TOUCH_MODE_OVERSCROLL;
    static final int TOUCH_MODE_REST;
    static final int TOUCH_MODE_SCROLL;
    static final int TOUCH_MODE_TAP;
    private static final int TOUCH_MODE_UNKNOWN;
    public static final int TRANSCRIPT_MODE_ALWAYS_SCROLL;
    public static final int TRANSCRIPT_MODE_DISABLED;
    public static final int TRANSCRIPT_MODE_NORMAL;
    static final android.view.animation.Interpolator sLinearInterpolator;
    private android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate;
    private int mActivePointerId;
    android.widget.ListAdapter mAdapter;
    boolean mAdapterHasStableIds;
    private int mCacheColorHint;
    boolean mCachingActive;
    boolean mCachingStarted;
    android.util.SparseBooleanArray mCheckStates;
    android.util.LongSparseArray mCheckedIdStates;
    int mCheckedItemCount;
    android.view.ActionMode mChoiceActionMode;
    int mChoiceMode;
    private java.lang.Runnable mClearScrollingCache;
    private android.view.ContextMenu$ContextMenuInfo mContextMenuInfo;
    android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver;
    private android.view.inputmethod.InputConnection mDefInputConnection;
    private boolean mDeferNotifyDataSetChanged;
    private float mDensityScale;
    private int mDirection;
    boolean mDrawSelectorOnTop;
    private android.widget.EdgeEffect mEdgeGlowBottom;
    private android.widget.EdgeEffect mEdgeGlowTop;
    private android.widget.FastScroller mFastScroll;
    boolean mFastScrollAlwaysVisible;
    boolean mFastScrollEnabled;
    private int mFastScrollStyle;
    private boolean mFiltered;
    private int mFirstPositionDistanceGuess;
    private boolean mFlingProfilingStarted;
    private android.widget.AbsListView$FlingRunnable mFlingRunnable;
    private android.os.StrictMode$Span mFlingStrictSpan;
    private boolean mForceTranscriptScroll;
    private boolean mGlobalLayoutListenerAddedFilter;
    private boolean mHasPerformedLongPress;
    private boolean mIsChildViewEnabled;
    private boolean mIsDetaching;
    final boolean[] mIsScrap;
    private int mLastHandledItemCount;
    private int mLastPositionDistanceGuess;
    private int mLastScrollState;
    private int mLastTouchMode;
    int mLastY;
    int mLayoutMode;
    android.graphics.Rect mListPadding;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    int mMotionCorrection;
    int mMotionPosition;
    int mMotionViewNewTop;
    int mMotionViewOriginalTop;
    int mMotionX;
    int mMotionY;
    android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback;
    private int mNestedYOffset;
    private android.widget.AbsListView$OnScrollListener mOnScrollListener;
    int mOverflingDistance;
    int mOverscrollDistance;
    int mOverscrollMax;
    private final java.lang.Thread mOwnerThread;
    private android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress;
    private android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress;
    private android.widget.AbsListView$CheckForTap mPendingCheckForTap;
    private android.widget.AbsListView$SavedState mPendingSync;
    private android.widget.AbsListView$PerformClick mPerformClick;
    android.widget.PopupWindow mPopup;
    private boolean mPopupHidden;
    java.lang.Runnable mPositionScrollAfterLayout;
    android.widget.AbsListView$AbsPositionScroller mPositionScroller;
    private android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection;
    final android.widget.AbsListView$RecycleBin mRecycler;
    private android.widget.RemoteViewsAdapter mRemoteAdapter;
    int mResurrectToPosition;
    private final int[] mScrollConsumed;
    android.view.View mScrollDown;
    private final int[] mScrollOffset;
    private boolean mScrollProfilingStarted;
    private android.os.StrictMode$Span mScrollStrictSpan;
    android.view.View mScrollUp;
    boolean mScrollingCacheEnabled;
    int mSelectedTop;
    int mSelectionBottomPadding;
    int mSelectionLeftPadding;
    int mSelectionRightPadding;
    int mSelectionTopPadding;
    android.graphics.drawable.Drawable mSelector;
    int mSelectorPosition;
    android.graphics.Rect mSelectorRect;
    private int[] mSelectorState;
    private boolean mSmoothScrollbarEnabled;
    boolean mStackFromBottom;
    android.widget.EditText mTextFilter;
    private boolean mTextFilterEnabled;
    private final float[] mTmpPoint;
    private android.graphics.Rect mTouchFrame;
    int mTouchMode;
    private java.lang.Runnable mTouchModeReset;
    private int mTouchSlop;
    private int mTranscriptMode;
    private float mVelocityScale;
    private android.view.VelocityTracker mVelocityTracker;
    private float mVerticalScrollFactor;
    int mWidthMeasureSpec;

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_NORMAL> = 1;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_DISABLED> = 0;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_ALWAYS_SCROLL> = 2;

        <android.widget.AbsListView: int TOUCH_MODE_UNKNOWN> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_TAP> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_SCROLL> = 3;

        <android.widget.AbsListView: int TOUCH_MODE_REST> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_OVERSCROLL> = 5;

        <android.widget.AbsListView: int TOUCH_MODE_OVERFLING> = 6;

        <android.widget.AbsListView: int TOUCH_MODE_ON> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_OFF> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_FLING> = 4;

        <android.widget.AbsListView: int TOUCH_MODE_DOWN> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_DONE_WAITING> = 2;

        <android.widget.AbsListView: java.lang.String TAG> = "AbsListView";

        <android.widget.AbsListView: boolean PROFILE_SCROLLING> = 0;

        <android.widget.AbsListView: boolean PROFILE_FLINGING> = 0;

        <android.widget.AbsListView: int OVERSCROLL_LIMIT_DIVISOR> = 3;

        <android.widget.AbsListView: int LAYOUT_SYNC> = 5;

        <android.widget.AbsListView: int LAYOUT_SPECIFIC> = 4;

        <android.widget.AbsListView: int LAYOUT_SET_SELECTION> = 2;

        <android.widget.AbsListView: int LAYOUT_NORMAL> = 0;

        <android.widget.AbsListView: int LAYOUT_MOVE_SELECTION> = 6;

        <android.widget.AbsListView: int LAYOUT_FORCE_TOP> = 1;

        <android.widget.AbsListView: int LAYOUT_FORCE_BOTTOM> = 3;

        <android.widget.AbsListView: int INVALID_POINTER> = -1;

        <android.widget.AbsListView: int CHOICE_MODE_SINGLE> = 1;

        <android.widget.AbsListView: int CHOICE_MODE_NONE> = 0;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE_MODAL> = 3;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE> = 2;

        <android.widget.AbsListView: int CHECK_POSITION_SEARCH_DISTANCE> = 20;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.widget.AbsListView: android.view.animation.Interpolator sLinearInterpolator> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1, $r3;
        android.widget.AbsListView$RecycleBin $r2;
        boolean[] $r4;
        int[] $r5, $r6, $r13;
        float[] $r7;
        android.widget.EdgeEffect $r8, $r10;
        android.content.Context $r9, $r11, r14;
        java.lang.Thread $r12;
        android.content.res.TypedArray r15;

        r0 := @this: android.widget.AbsListView;

        r14 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context)>(r14);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r1;

        $r2 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r2.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r2;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r3;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r4 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r4;

        $r5 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollOffset> = $r5;

        $r6 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollConsumed> = $r6;

        $r7 = newarray (float)[2];

        r0.<android.widget.AbsListView: float[] mTmpPoint> = $r7;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        $r8 = new android.widget.EdgeEffect;

        $r9 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        specialinvoke $r8.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r9);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = $r8;

        $r10 = new android.widget.EdgeEffect;

        $r11 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        specialinvoke $r10.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r11);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = $r10;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r12;

        virtualinvoke r0.<android.widget.AbsListView: void setVerticalScrollBarEnabled(boolean)>(1);

        $r13 = <com.android.internal.R$styleable: int[] View>;

        r15 = virtualinvoke r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r13);

        virtualinvoke r0.<android.widget.AbsListView: void initializeScrollbarsInternal(android.content.res.TypedArray)>(r15);

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842858);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AbsListView r0;
        android.content.Context r1, $r11, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.content.res.TypedArray r2;
        android.graphics.Rect $r3, $r5;
        android.widget.AbsListView$RecycleBin $r4;
        boolean[] $r6;
        int[] $r7, $r8, $r15, $r16;
        float[] $r9;
        android.widget.EdgeEffect $r10, $r12;
        java.lang.Thread $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.res.Resources $r17;
        android.content.res.Configuration $r18;
        android.util.AttributeSet r19;
        android.graphics.drawable.Drawable r20;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r19 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r19, i0, i1);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r3;

        $r4 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r4.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r4;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r5;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r6 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r6;

        $r7 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollOffset> = $r7;

        $r8 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollConsumed> = $r8;

        $r9 = newarray (float)[2];

        r0.<android.widget.AbsListView: float[] mTmpPoint> = $r9;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        $r10 = new android.widget.EdgeEffect;

        $r11 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        specialinvoke $r10.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r11);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = $r10;

        $r12 = new android.widget.EdgeEffect;

        $r13 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        specialinvoke $r12.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r13);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = $r12;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r14;

        $r15 = <com.android.internal.R$styleable: int[] AbsListView>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r19, $r15, i0, i1);

        $r16 = <com.android.internal.R$styleable: int[] AbsListView>;

        virtualinvoke r0.<android.widget.AbsListView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r16, r19, r2, i0, i1);

        r20 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r20 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>(r20);

     label1:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = $z0;

        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setStackFromBottom(boolean)>($z1);

        $z2 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>($z2);

        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTextFilterEnabled(boolean)>($z3);

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTranscriptMode(int)>($i2);

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setCacheColorHint(int)>($i3);

        $z4 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>($z4);

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setChoiceMode(int)>($i4);

        $z5 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>($z5);

        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollStyle(int)>($i5);

        $z6 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>($z6);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r17 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r18 = virtualinvoke $r17.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i6 = $r18.<android.content.res.Configuration: int uiMode>;

        if $i6 != 6 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void setRevealOnFocusHint(boolean)>(0);

     label2:
        return;
    }

    private boolean acceptFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, z2;
        android.widget.Adapter $r1, $r2;
        android.widget.Filterable $r3;
        android.widget.Filter $r4;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $z1 = $r1 instanceof android.widget.Filterable;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r3 = (android.widget.Filterable) $r2;

        $r4 = interfaceinvoke $r3.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if $r4 == null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static void access$000(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

        return;
    }

    static void access$100(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

        return;
    }

    static float[] access$1000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        float[] $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: float[] mTmpPoint>;

        return $r1;
    }

    static android.widget.AbsListView$CheckForLongPress access$1100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        return $r1;
    }

    static android.widget.AbsListView$CheckForLongPress access$1102(android.widget.AbsListView, android.widget.AbsListView$CheckForLongPress)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.widget.AbsListView$CheckForLongPress;

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress> = r1;

        return r1;
    }

    static java.lang.Runnable access$1602(android.widget.AbsListView, java.lang.Runnable)
    {
        android.widget.AbsListView r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = r1;

        return r1;
    }

    static boolean access$1700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        return $z0;
    }

    static int access$1800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mActivePointerId>;

        return $i0;
    }

    static android.view.VelocityTracker access$1900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        return $r1;
    }

    static int access$2100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        return $i0;
    }

    static int access$2200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        return $i0;
    }

    static android.os.StrictMode$Span access$2300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        return $r1;
    }

    static android.os.StrictMode$Span access$2302(android.widget.AbsListView, android.os.StrictMode$Span)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.os.StrictMode$Span;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = r1;

        return r1;
    }

    static int access$2400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$2500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$2600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$2700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        return $z0;
    }

    static android.widget.EdgeEffect access$2800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        return $r1;
    }

    static android.widget.EdgeEffect access$2900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        return $r1;
    }

    static boolean access$300(android.widget.AbsListView, android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean isItemClickable(android.view.View)>(r1);

        return $z0;
    }

    static void access$3000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;

        r0 := @parameter0: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        return;
    }

    static int access$3100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$3200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$3300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$3400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$3500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$3600(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static int access$3700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$3800(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static void access$3900(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(z0);

        return;
    }

    static int access$4000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPersistentDrawingCache>;

        return $i0;
    }

    static void access$4100(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(z0);

        return;
    }

    static android.widget.EditText access$4200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EditText $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        return $r1;
    }

    static android.view.inputmethod.InputConnection access$4300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.InputConnection $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection>;

        return $r1;
    }

    static android.widget.FastScroller access$4500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        return $r1;
    }

    static void access$4600(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static android.content.Context access$4700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        return $r1;
    }

    static int access$600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static int access$700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static boolean access$902(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        r0.<android.widget.AbsListView: boolean mHasPerformedLongPress> = z0;

        return z0;
    }

    private void addAccessibilityActionIfEnabled(android.view.accessibility.AccessibilityNodeInfo, boolean, android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean z0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r2);

     label1:
        return;
    }

    private boolean canScrollDown()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean z1, z2, z3;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i2 = r0.<android.widget.AbsListView: int mItemCount>;

        $i3 = i1 + i0;

        if $i3 >= i2 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        z2 = z1;

        if z1 != 0 goto label4;

        z2 = z1;

        if i0 <= 0 goto label4;

        z3 = 0;

        $i4 = i0 - 1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i7 = r0.<android.widget.AbsListView: int mBottom>;

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r2.<android.graphics.Rect: int bottom>;

        $i8 = $i7 - $i6;

        if $i5 <= $i8 goto label3;

        z3 = 1;

     label3:
        z2 = z3;

     label4:
        return z2;
    }

    private boolean canScrollUp()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean z1, z2, z3;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if i0 <= 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        z2 = z1;

        if z1 != 0 goto label5;

        z2 = z1;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i1 <= 0 goto label5;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i2 >= $i3 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        z2 = z3;

     label5:
        return z2;
    }

    private void clearScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        java.lang.Runnable $r1, $r2;
        android.widget.AbsListView$4 $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$4;

        specialinvoke $r3.<android.widget.AbsListView$4: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r2);

     label2:
        return;
    }

    private boolean contentFits()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1, $r3;
        android.graphics.Rect $r2, $r4;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        z0 = 1;

        if i0 != 0 goto label1;

        return 1;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 == $i1 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i2 < $i3 goto label3;

        $i4 = i0 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i7 = $r4.<android.graphics.Rect: int bottom>;

        $i8 = $i6 - $i7;

        if $i5 > $i8 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    private void createScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(1);

        r0.<android.widget.AbsListView: boolean mCachingActive> = 1;

        r0.<android.widget.AbsListView: boolean mCachingStarted> = 1;

     label1:
        return;
    }

    private void createTextFilter(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.PopupWindow $r2, $r3, $r4, $r5;
        android.content.Context $r6;
        android.widget.EditText $r7;
        android.view.ViewTreeObserver $r8;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 != null goto label1;

        $r5 = new android.widget.PopupWindow;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.PopupWindow: void <init>(android.content.Context)>($r6);

        virtualinvoke $r5.<android.widget.PopupWindow: void setFocusable(boolean)>(0);

        virtualinvoke $r5.<android.widget.PopupWindow: void setTouchable(boolean)>(0);

        virtualinvoke $r5.<android.widget.PopupWindow: void setInputMethodMode(int)>(2);

        $r7 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke $r5.<android.widget.PopupWindow: void setContentView(android.view.View)>($r7);

        virtualinvoke $r5.<android.widget.PopupWindow: void setWidth(int)>(-2);

        virtualinvoke $r5.<android.widget.PopupWindow: void setHeight(int)>(-2);

        virtualinvoke $r5.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup> = $r5;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r8.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 1;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r4.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974601);

        goto label3;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r3.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974602);

     label3:
        return;
    }

    private void dismissPopup()
    {
        android.widget.AbsListView r0;
        android.widget.PopupWindow r1;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.PopupWindow: void dismiss()>();

     label1:
        return;
    }

    private void drawSelector(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        boolean $z0;
        android.graphics.Rect $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean shouldDrawSelector()>();

        if $z0 == 0 goto label1;

        r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r3);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    private void finishGlows()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        android.widget.EdgeEffect $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void finish()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void finish()>();

     label1:
        return;
    }

    static int getDistance(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, i37, i38, i39, i40, i41, i42, $i43, $i44, $i45;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        i36 := @parameter2: int;

        if i36 == 1 goto label5;

        if i36 == 2 goto label5;

        if i36 == 17 goto label4;

        if i36 == 33 goto label3;

        if i36 == 66 goto label2;

        if i36 != 130 goto label1;

        $i30 = r0.<android.graphics.Rect: int left>;

        $i31 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i32 = $i31 / 2;

        i37 = $i30 + $i32;

        i38 = r0.<android.graphics.Rect: int bottom>;

        $i33 = r1.<android.graphics.Rect: int left>;

        $i34 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i35 = $i34 / 2;

        i39 = $i33 + $i35;

        i40 = r1.<android.graphics.Rect: int top>;

        goto label6;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r2;

     label2:
        i37 = r0.<android.graphics.Rect: int right>;

        $i24 = r0.<android.graphics.Rect: int top>;

        $i25 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i26 = $i25 / 2;

        i38 = $i24 + $i26;

        i39 = r1.<android.graphics.Rect: int left>;

        $i27 = r1.<android.graphics.Rect: int top>;

        $i28 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i29 = $i28 / 2;

        i40 = $i27 + $i29;

        goto label6;

     label3:
        $i18 = r0.<android.graphics.Rect: int left>;

        $i19 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i20 = $i19 / 2;

        i37 = $i18 + $i20;

        i38 = r0.<android.graphics.Rect: int top>;

        $i21 = r1.<android.graphics.Rect: int left>;

        $i22 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i23 = $i22 / 2;

        i39 = $i21 + $i23;

        i40 = r1.<android.graphics.Rect: int bottom>;

        goto label6;

     label4:
        i37 = r0.<android.graphics.Rect: int left>;

        $i12 = r0.<android.graphics.Rect: int top>;

        $i13 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i14 = $i13 / 2;

        i38 = $i12 + $i14;

        i39 = r1.<android.graphics.Rect: int right>;

        $i15 = r1.<android.graphics.Rect: int top>;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i17 = $i16 / 2;

        i40 = $i15 + $i17;

        goto label6;

     label5:
        $i0 = r0.<android.graphics.Rect: int right>;

        $i1 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i2 = $i1 / 2;

        i37 = $i0 + $i2;

        $i3 = r0.<android.graphics.Rect: int top>;

        $i4 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i5 = $i4 / 2;

        i38 = $i3 + $i5;

        $i6 = r1.<android.graphics.Rect: int left>;

        $i7 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i8 = $i7 / 2;

        i39 = $i6 + $i8;

        $i9 = r1.<android.graphics.Rect: int top>;

        $i10 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i11 = $i10 / 2;

        i40 = $i9 + $i11;

     label6:
        i41 = i39 - i37;

        i42 = i40 - i38;

        $i43 = i42 * i42;

        $i44 = i41 * i41;

        $i45 = $i43 + $i44;

        return $i45;
    }

    private int[] getDrawableStateForSelector()
    {
        android.widget.AbsListView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        int[] r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.widget.AdapterView: int[] getDrawableState()>();

        return $r3;

     label1:
        $r2 = <android.widget.AbsListView: int[] ENABLED_STATE_SET>;

        i0 = $r2[0];

        r1 = virtualinvoke r0.<android.widget.AbsListView: int[] onCreateDrawableState(int)>(1);

        $i2 = lengthof r1;

        i8 = $i2 - 1;

     label2:
        i9 = -1;

        if i8 < 0 goto label4;

        $i7 = r1[i8];

        if $i7 != i0 goto label3;

        i9 = i8;

        goto label4;

     label3:
        i8 = i8 + -1;

        goto label2;

     label4:
        if i9 < 0 goto label5;

        $i6 = i9 + 1;

        $i3 = lengthof r1;

        $i4 = $i3 - i9;

        $i5 = $i4 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i6, r1, i9, $i5);

     label5:
        return r1;
    }

    private android.widget.EditText getTextFilterInput()
    {
        android.widget.AbsListView r0;
        android.widget.EditText r1, $r2, $r3, $r7, $r8;
        android.content.Context $r4;
        android.view.LayoutInflater $r5;
        android.view.View $r6;

        r0 := @this: android.widget.AbsListView;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4);

        $r6 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367344, null);

        r1 = (android.widget.EditText) $r6;

        r0.<android.widget.AbsListView: android.widget.EditText mTextFilter> = r1;

        virtualinvoke r1.<android.widget.EditText: void setRawInputType(int)>(177);

        $r7 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r7.<android.widget.EditText: void setImeOptions(int)>(268435456);

        $r8 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r8.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0);

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        return $r3;
    }

    private void initAbsListView()
    {
        android.widget.AbsListView r0;
        android.view.ViewConfiguration r1;
        android.content.Context $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setAlwaysDrawnWithCacheEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>(1);

        $r2 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.AbsListView: int mTouchSlop> = $i0;

        $f0 = virtualinvoke r1.<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>();

        r0.<android.widget.AbsListView: float mVerticalScrollFactor> = $f0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMaximumVelocity> = $i2;

        $i3 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverscrollDistance()>();

        r0.<android.widget.AbsListView: int mOverscrollDistance> = $i3;

        $i4 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverflingDistance()>();

        r0.<android.widget.AbsListView: int mOverflingDistance> = $i4;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r5.<android.util.DisplayMetrics: float density>;

        r0.<android.widget.AbsListView: float mDensityScale> = $f1;

        return;
    }

    private void initOrResetVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker r1, $r2;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r2;

        goto label2;

     label1:
        virtualinvoke r1.<android.view.VelocityTracker: void clear()>();

     label2:
        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label1:
        return;
    }

    private void invalidateBottomGlow()
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.AbsListView;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean getClipToPadding()>();

        i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i6 = i5;

        if z0 == 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        i6 = i5 - $i4;

     label2:
        if z0 == 0 goto label3;

        i7 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        goto label4;

     label3:
        i7 = 0;

     label4:
        i0 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        i8 = i0;

        if z0 == 0 goto label5;

        $i3 = r0.<android.widget.AbsListView: int mPaddingRight>;

        i8 = i0 - $i3;

     label5:
        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i1 = virtualinvoke $r1.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i2 = i6 - $i1;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(i7, $i2, i8, i6);

        return;
    }

    private void invalidateTopGlow()
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.AbsListView;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean getClipToPadding()>();

        i4 = 0;

        if z0 == 0 goto label2;

        i5 = r0.<android.widget.AbsListView: int mPaddingTop>;

        goto label3;

     label2:
        i5 = 0;

     label3:
        if z0 == 0 goto label4;

        i4 = r0.<android.widget.AbsListView: int mPaddingLeft>;

     label4:
        i0 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        i6 = i0;

        if z0 == 0 goto label5;

        $i3 = r0.<android.widget.AbsListView: int mPaddingRight>;

        i6 = i0 - $i3;

     label5:
        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i1 = virtualinvoke $r1.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i2 = $i1 + i5;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(i4, i5, i6, $i2);

        return;
    }

    private boolean isItemClickable(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r1.<android.view.View: boolean hasExplicitFocusable()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private boolean isOwnerThread()
    {
        android.widget.AbsListView r0;
        java.lang.Thread $r1, $r2;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        float $f0, $f1;
        byte b8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i1 = $i0 & 65280;

        i7 = $i1 >> 8;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i7);

        $i3 = r0.<android.widget.AbsListView: int mActivePointerId>;

        if $i2 != $i3 goto label3;

        if i7 != 0 goto label1;

        b8 = 1;

        goto label2;

     label1:
        b8 = 0;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b8);

        $i4 = (int) $f0;

        r0.<android.widget.AbsListView: int mMotionX> = $i4;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b8);

        $i5 = (int) $f1;

        r0.<android.widget.AbsListView: int mMotionY> = $i5;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i6 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b8);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i6;

     label3:
        return;
    }

    private void onTouchCancel()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3;
        android.view.View r1;
        android.widget.AbsListView$FlingRunnable $r2, $r3, $r6;
        android.widget.EdgeEffect $r4, $r5;
        android.widget.AbsListView$CheckForLongPress $r7;
        boolean $z1;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i0 == 5 goto label3;

        if i0 == 6 goto label2;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i2 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = $i2 - $i1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

     label1:
        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r7);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        goto label5;

     label2:
        goto label5;

     label3:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r2 != null goto label4;

        $r6 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r6.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r6;

     label4:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r3.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

     label5:
        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z1 == 0 goto label6;

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onRelease()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onRelease()>();

     label6:
        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        return;
    }

    private void onTouchDown(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        android.widget.AbsListView$AbsPositionScroller r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, i13, i14, $i15;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1, $z3;
        android.widget.AbsListView$CheckForTap $r3, $r7, $r8, $r9, $r10, $r11;
        android.view.View $r4;
        android.widget.Adapter $r5;
        android.widget.ListAdapter $r6;
        long $l11;
        android.widget.AbsListView$FlingRunnable $r12, $r13;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<android.widget.AbsListView: boolean mHasPerformedLongPress> = 0;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i3;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        $i4 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 != 6 goto label2;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r13.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label1:
        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i12 = (int) $f4;

        r0.<android.widget.AbsListView: int mMotionX> = $i12;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i13 = (int) $f5;

        r0.<android.widget.AbsListView: int mMotionY> = i13;

        r0.<android.widget.AbsListView: int mLastY> = i13;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        goto label7;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i0, i1);

        i14 = i2;

        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 != 0 goto label5;

        $i9 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i9 != 4 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        i14 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i1);

        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r12.<android.widget.AbsListView$FlingRunnable: void flywheelTouch()>();

        goto label5;

     label3:
        i14 = i2;

        if i2 < 0 goto label5;

        i14 = i2;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r6 = (android.widget.ListAdapter) $r5;

        $z3 = interfaceinvoke $r6.<android.widget.ListAdapter: boolean isEnabled(int)>(i2);

        if $z3 == 0 goto label5;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        if $r7 != null goto label4;

        $r11 = new android.widget.AbsListView$CheckForTap;

        specialinvoke $r11.<android.widget.AbsListView$CheckForTap: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap> = $r11;

     label4:
        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r8.<android.widget.AbsListView$CheckForTap: float x> = $f2;

        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r9.<android.widget.AbsListView$CheckForTap: float y> = $f3;

        $r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $i10 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l11 = (long) $i10;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r10, $l11);

        i14 = i2;

     label5:
        if i14 < 0 goto label6;

        $i6 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i7 = i14 - $i6;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i7);

        $i8 = virtualinvoke $r4.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i8;

     label6:
        r0.<android.widget.AbsListView: int mMotionX> = i0;

        r0.<android.widget.AbsListView: int mMotionY> = i1;

        r0.<android.widget.AbsListView: int mMotionPosition> = i14;

        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

     label7:
        $i15 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i15 != 0 goto label8;

        $i5 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if $i5 == -1 goto label8;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label8;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r3);

     label8:
        return;
    }

    private void onTouchMove(android.view.MotionEvent, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean $z0, $z1, $z2, $z4;
        android.view.MotionEvent r1, r2;
        android.view.View r3;
        java.lang.Runnable r4;
        float[] r5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        $z0 = r0.<android.widget.AbsListView: boolean mHasPerformedLongPress>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $i1 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i9 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i1);

        i10 = i9;

        if i9 != -1 goto label02;

        i10 = 0;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i8;

     label02:
        $z1 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z1 == 0 goto label03;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label03:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i10);

        i0 = (int) $f1;

        i11 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i11 == 0 goto label05;

        if i11 == 1 goto label05;

        if i11 == 2 goto label05;

        if i11 == 3 goto label04;

        if i11 == 5 goto label04;

        goto label11;

     label04:
        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i10);

        $i7 = (int) $f7;

        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int,int,android.view.MotionEvent)>($i7, i0, r2);

        goto label11;

     label05:
        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i10);

        $i12 = (int) $f8;

        $z4 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int,int,android.view.MotionEvent)>($i12, i0, r2);

        if $z4 == 0 goto label06;

        goto label11;

     label06:
        $i3 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 - $i2;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i10);

        $f3 = (float) i0;

        $i5 = r0.<android.widget.AbsListView: int mTouchSlop>;

        $f2 = (float) $i5;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean pointInView(float,float,float)>(f0, $f3, $f2);

        if $z2 != 0 goto label10;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        if r3 == null goto label07;

        virtualinvoke r3.<android.view.View: void setPressed(boolean)>(0);

     label07:
        $i6 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i6 != 0 goto label08;

        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        goto label09;

     label08:
        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

     label09:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r4);

        r0.<android.widget.AbsListView: int mTouchMode> = 2;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label11;

     label10:
        if r3 == null goto label11;

        r5 = r0.<android.widget.AbsListView: float[] mTmpPoint>;

        r5[0] = f0;

        $f4 = (float) i0;

        r5[1] = $f4;

        virtualinvoke r0.<android.widget.AbsListView: void transformPointToViewLocal(float[],android.view.View)>(r5, r3);

        $f6 = r5[0];

        $f5 = r5[1];

        virtualinvoke r3.<android.view.View: void drawableHotspotChanged(float,float)>($f6, $f5);

     label11:
        return;
    }

    private void onTouchUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i44, i45, $i46, $i47, i48, $i49, $i50, i51, $i52, $i53, i54;
        android.view.View r1, $r14, $r15;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.widget.AbsListView$PerformClick r2, $r7, $r12;
        android.widget.AbsListView$CheckForLongPress $r3;
        android.widget.EdgeEffect $r4, $r5;
        android.graphics.Rect $r6, $r13, $r16, $r17;
        byte $b7, $b16;
        boolean $z1, $z3, $z4, $z7, $z8, $z9, $z10, $z12, z14, z15, $z16;
        android.widget.ListAdapter $r8, $r11;
        android.widget.AbsListView$3 $r9;
        long $l12;
        android.graphics.drawable.TransitionDrawable $r10;
        android.widget.AbsListView$FlingRunnable $r18, $r19, $r20, $r21, $r22, $r23, $r24, r28;
        android.view.MotionEvent r25;
        android.view.VelocityTracker r26, r27;
        android.widget.AbsListView$AbsPositionScroller r29;
        java.lang.Runnable r30, r34;
        android.graphics.drawable.Drawable r31, r32, $r33;
        android.os.StrictMode$Span r36;

        r0 := @this: android.widget.AbsListView;

        r25 := @parameter0: android.view.MotionEvent;

        i44 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i44 == 0 goto label17;

        if i44 == 1 goto label17;

        if i44 == 2 goto label17;

        if i44 == 3 goto label04;

        if i44 == 5 goto label01;

        goto label32;

     label01:
        $r21 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r21 != null goto label02;

        $r24 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r24.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r24;

     label02:
        r26 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i39 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f7 = (float) $i39;

        virtualinvoke r26.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f7);

        $i40 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f8 = virtualinvoke r26.<android.view.VelocityTracker: float getYVelocity(int)>($i40);

        i45 = (int) $f8;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $i41 = staticinvoke <java.lang.Math: int abs(int)>(i45);

        $i42 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i41 <= $i42 goto label03;

        $r23 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i43 = neg i45;

        virtualinvoke $r23.<android.widget.AbsListView$FlingRunnable: void startOverfling(int)>($i43);

        goto label32;

     label03:
        $r22 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r22.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

        goto label32;

     label04:
        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 <= 0 goto label16;

        $r14 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r14.<android.view.View: int getTop()>();

        $i17 = i0 - 1;

        $r15 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i17);

        i2 = virtualinvoke $r15.<android.view.View: int getBottom()>();

        $r16 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i3 = $r16.<android.graphics.Rect: int top>;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r17 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i19 = $r17.<android.graphics.Rect: int bottom>;

        i4 = $i18 - $i19;

        $i20 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i20 != 0 goto label05;

        if i1 < i3 goto label05;

        $i34 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i36 = $i34 + i0;

        $i35 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i36 >= $i35 goto label05;

        $i37 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i38 = $i37 - i4;

        if i2 > $i38 goto label05;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label15;

     label05:
        r27 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i46 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f9 = (float) $i46;

        virtualinvoke r27.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f9);

        $i47 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f10 = virtualinvoke r27.<android.view.VelocityTracker: float getYVelocity(int)>($i47);

        $f11 = r0.<android.widget.AbsListView: float mVelocityScale>;

        $f12 = $f10 * $f11;

        i48 = (int) $f12;

        $i49 = staticinvoke <java.lang.Math: int abs(int)>(i48);

        $i50 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i49 <= $i50 goto label06;

        z14 = 1;

        goto label07;

     label06:
        z14 = 0;

     label07:
        if z14 == 0 goto label12;

        $i23 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i23 != 0 goto label08;

        $i32 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i33 = i3 - $i32;

        if i1 == $i33 goto label12;

     label08:
        $i24 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i26 = $i24 + i0;

        $i25 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i26 != $i25 goto label09;

        $i30 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i31 = $i30 + i4;

        if i2 == $i31 goto label12;

     label09:
        $i27 = neg i48;

        $f5 = (float) $i27;

        $z12 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f5);

        if $z12 != 0 goto label11;

        $r18 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r18 != null goto label10;

        $r20 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r20.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r20;

     label10:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r19 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i28 = neg i48;

        virtualinvoke $r19.<android.widget.AbsListView$FlingRunnable: void start(int)>($i28);

        $i29 = neg i48;

        $f6 = (float) $i29;

        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f6, 1);

        goto label15;

     label11:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label15;

     label12:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if r28 == null goto label13;

        virtualinvoke r28.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label13:
        r29 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r29 == null goto label14;

        virtualinvoke r29.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label14:
        if z14 == 0 goto label15;

        $i21 = neg i48;

        $f3 = (float) $i21;

        $z10 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f3);

        if $z10 != 0 goto label15;

        $i22 = neg i48;

        $f4 = (float) $i22;

        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f4, 0);

     label15:
        goto label32;

     label16:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label32;

     label17:
        i51 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i52 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i53 = i51 - $i52;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i53);

        if r1 == null goto label31;

        $i5 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i5 == 0 goto label18;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

     label18:
        f0 = virtualinvoke r25.<android.view.MotionEvent: float getX()>();

        $r6 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r6.<android.graphics.Rect: int left>;

        $f1 = (float) $i6;

        $b7 = f0 cmpl $f1;

        if $b7 <= 0 goto label19;

        $i13 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r13 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i14 = $r13.<android.graphics.Rect: int right>;

        $i15 = $i13 - $i14;

        $f2 = (float) $i15;

        $b16 = f0 cmpg $f2;

        if $b16 >= 0 goto label19;

        z15 = 1;

        goto label20;

     label19:
        z15 = 0;

     label20:
        if z15 == 0 goto label31;

        $z1 = virtualinvoke r1.<android.view.View: boolean hasExplicitFocusable()>();

        if $z1 != 0 goto label31;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r7 != null goto label21;

        $r12 = new android.widget.AbsListView$PerformClick;

        specialinvoke $r12.<android.widget.AbsListView$PerformClick: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick> = $r12;

     label21:
        r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        r2.<android.widget.AbsListView$PerformClick: int mClickMotionPosition> = i51;

        virtualinvoke r2.<android.widget.AbsListView$PerformClick: void rememberWindowAttachCount()>();

        r0.<android.widget.AbsListView: int mResurrectToPosition> = i51;

        i54 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i54 == 0 goto label23;

        if i54 != 1 goto label22;

        goto label23;

     label22:
        $z8 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z8 != 0 goto label31;

        $r11 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z9 = interfaceinvoke $r11.<android.widget.ListAdapter: boolean isEnabled(int)>(i51);

        if $z9 == 0 goto label31;

        virtualinvoke r2.<android.widget.AbsListView$PerformClick: void run()>();

        goto label31;

     label23:
        $i8 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i8 != 0 goto label24;

        r30 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        goto label25;

     label24:
        r30 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

     label25:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r30);

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $z3 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z3 != 0 goto label29;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z4 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean isEnabled(int)>(i51);

        if $z4 == 0 goto label29;

        r0.<android.widget.AbsListView: int mTouchMode> = 1;

        $i9 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>($i9);

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(1);

        $i10 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i10, r1);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        r31 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r31 == null goto label27;

        r32 = virtualinvoke r31.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r32 == null goto label26;

        $z7 = r32 instanceof android.graphics.drawable.TransitionDrawable;

        if $z7 == 0 goto label26;

        $r10 = (android.graphics.drawable.TransitionDrawable) r32;

        virtualinvoke $r10.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label26:
        $r33 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $f13 = virtualinvoke r25.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r33.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, $f13);

     label27:
        r34 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if r34 == null goto label28;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r34);

     label28:
        $r9 = new android.widget.AbsListView$3;

        specialinvoke $r9.<android.widget.AbsListView$3: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick)>(r0, r1, r2);

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = $r9;

        $i11 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l12 = (long) $i11;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r9, $l12);

        goto label30;

     label29:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

     label30:
        return;

     label31:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

     label32:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $z16 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z16 == 0 goto label33;

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onRelease()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onRelease()>();

     label33:
        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r3);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        r36 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if r36 == null goto label34;

        virtualinvoke r36.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label34:
        return;
    }

    private boolean performStylusButtonPressAction(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ActionMode $r1;
        android.widget.ListAdapter $r2;
        long $l6;
        boolean $z0;
        android.view.MotionEvent r3;
        android.view.View r4;

        r0 := @this: android.widget.AbsListView;

        r3 := @parameter0: android.view.MotionEvent;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 != 3 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r1 != null goto label1;

        $i2 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = $i2 - $i1;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r4 == null goto label1;

        $i5 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i4 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $l6 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>($i4);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long)>(r4, $i5, $l6);

        if $z0 == 0 goto label1;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        virtualinvoke r4.<android.view.View: void setPressed(boolean)>(0);

        return 1;

     label1:
        return 0;
    }

    private void positionPopup()
    {
        android.widget.AbsListView r0;
        int[] r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        float $f0, $f1;
        android.widget.PopupWindow $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i7 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.widget.AbsListView: void getLocationOnScreen(int[])>(r1);

        $i0 = r1[1];

        $i1 = i7 - $i0;

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i4 = $i1 - $i2;

        $f0 = r0.<android.widget.AbsListView: float mDensityScale>;

        $f1 = $f0 * 20.0F;

        $i3 = (int) $f1;

        i8 = $i4 + $i3;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i6 = r1[0];

        virtualinvoke $r6.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>(r0, 81, $i6, i8);

        goto label2;

     label1:
        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i5 = r1[0];

        virtualinvoke $r5.<android.widget.PopupWindow: void update(int,int,int,int)>($i5, i8, -1, -1);

     label2:
        return;
    }

    private void positionSelector(int, android.view.View, boolean, float, float)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean z0, z1, $z2, $z3, z7;
        float f0, f1;
        android.graphics.Rect r1;
        int[] $r2;
        android.widget.AbsListView$SelectionBoundsAdjuster $r3;
        android.view.View r4;
        android.graphics.drawable.Drawable r5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r4 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        $i1 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if i0 == $i1 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        if i0 == -1 goto label3;

        r0.<android.widget.AbsListView: int mSelectorPosition> = i0;

     label3:
        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i2 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $i3 = virtualinvoke r4.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r4.<android.view.View: int getRight()>();

        $i5 = virtualinvoke r4.<android.view.View: int getBottom()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i3, $i4, $i5);

        $z2 = r4 instanceof android.widget.AbsListView$SelectionBoundsAdjuster;

        if $z2 == 0 goto label4;

        $r3 = (android.widget.AbsListView$SelectionBoundsAdjuster) r4;

        interfaceinvoke $r3.<android.widget.AbsListView$SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>(r1);

     label4:
        $i7 = r1.<android.graphics.Rect: int left>;

        $i6 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i8 = $i7 - $i6;

        r1.<android.graphics.Rect: int left> = $i8;

        $i10 = r1.<android.graphics.Rect: int top>;

        $i9 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i11 = $i10 - $i9;

        r1.<android.graphics.Rect: int top> = $i11;

        $i13 = r1.<android.graphics.Rect: int right>;

        $i12 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i14 = $i13 + $i12;

        r1.<android.graphics.Rect: int right> = $i14;

        $i16 = r1.<android.graphics.Rect: int bottom>;

        $i15 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i17 = $i16 + $i15;

        r1.<android.graphics.Rect: int bottom> = $i17;

        z1 = virtualinvoke r4.<android.view.View: boolean isEnabled()>();

        $z3 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        if $z3 == z1 goto label5;

        r0.<android.widget.AbsListView: boolean mIsChildViewEnabled> = z1;

     label5:
        r5 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r5 == null goto label9;

        if z7 == 0 goto label6;

        virtualinvoke r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        $r2 = <android.util.StateSet: int[] NOTHING>;

        virtualinvoke r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label6:
        virtualinvoke r5.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        if z7 == 0 goto label8;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getVisibility()>();

        if $i18 != 0 goto label7;

        virtualinvoke r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(1, 0);

     label7:
        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

     label8:
        if z0 == 0 goto label9;

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label9:
        return;
    }

    private void recycleVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker r1;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private void scrollIfNeeded(int, int, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i62, i63, i64, i65, i66, i67, i68, i69, $i71, $i72, i73, i74, i76, i77, i78, i79, i80, i81, $i82, $i83;
        int[] r1, $r2, $r3, $r11, $r18, $r20, r22, r26;
        boolean $z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11;
        android.widget.EdgeEffect $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.os.StrictMode$Span $r10, $r19;
        android.view.MotionEvent r21;
        android.view.ViewParent r23;
        android.view.View r24, r25, r28;
        android.view.VelocityTracker r27;
        byte b75;

        r0 := @this: android.widget.AbsListView;

        i47 := @parameter0: int;

        i0 := @parameter1: int;

        r21 := @parameter2: android.view.MotionEvent;

        $i1 = r0.<android.widget.AbsListView: int mMotionY>;

        i48 = i0 - $i1;

        i49 = i48;

        $i2 = r0.<android.widget.AbsListView: int mLastY>;

        if $i2 != -2147483648 goto label01;

        $i46 = r0.<android.widget.AbsListView: int mMotionCorrection>;

        i49 = i48 - $i46;

     label01:
        i50 = r0.<android.widget.AbsListView: int mLastY>;

        if i50 == -2147483648 goto label02;

        i51 = i50 - i0;

        goto label03;

     label02:
        i51 = neg i49;

     label03:
        $r3 = r0.<android.widget.AbsListView: int[] mScrollConsumed>;

        $r2 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(0, i51, $r3, $r2);

        if $z0 == 0 goto label05;

        r22 = r0.<android.widget.AbsListView: int[] mScrollConsumed>;

        i52 = r22[1];

        r1 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i41 = r1[1];

        i53 = neg $i41;

        i54 = r22[1];

        if r21 == null goto label04;

        $i42 = r1[1];

        $f27 = (float) $i42;

        virtualinvoke r21.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f27);

        $i44 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $r20 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i43 = $r20[1];

        $i45 = $i44 + $i43;

        r0.<android.widget.AbsListView: int mNestedYOffset> = $i45;

     label04:
        i55 = i49 + i52;

        i56 = i54;

        i57 = i55;

        goto label06;

     label05:
        i57 = i49;

        i53 = 0;

        i56 = 0;

     label06:
        i58 = r0.<android.widget.AbsListView: int mLastY>;

        if i58 == -2147483648 goto label07;

        $i40 = i0 - i58;

        i59 = $i40 + i56;

        goto label08;

     label07:
        i59 = i57;

     label08:
        i62 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i62 != 3 goto label32;

        $r10 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r10 != null goto label09;

        $r19 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("AbsListView-scroll");

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = $r19;

     label09:
        $i16 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 == $i16 goto label31;

        $i17 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i18 = $i17 & 524288;

        if $i18 != 0 goto label10;

        $i38 = staticinvoke <java.lang.Math: int abs(int)>(i57);

        $i39 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if $i38 <= $i39 goto label10;

        r23 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r23 == null goto label10;

        interfaceinvoke r23.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label10:
        i63 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if i63 < 0 goto label11;

        $i37 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i64 = i63 - $i37;

        goto label12;

     label11:
        $i19 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i64 = $i19 / 2;

     label12:
        r24 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i64);

        if r24 == null goto label13;

        i65 = virtualinvoke r24.<android.view.View: int getTop()>();

        goto label14;

     label13:
        i65 = 0;

     label14:
        if i59 == 0 goto label15;

        z10 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i57, i59);

        goto label16;

     label15:
        z10 = 0;

     label16:
        r25 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i64);

        if r25 == null goto label29;

        i66 = virtualinvoke r25.<android.view.View: int getTop()>();

        if z10 == 0 goto label27;

        $i23 = neg i59;

        $i22 = i66 - i65;

        i67 = $i23 - $i22;

        $i24 = i67 - i59;

        $r11 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $z6 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i24, 0, i67, $r11);

        if $z6 == 0 goto label18;

        r26 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i32 = r26[1];

        i68 = 0 - $i32;

        if r21 == null goto label17;

        $i33 = r26[1];

        $f26 = (float) $i33;

        virtualinvoke r21.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f26);

        $i35 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $r18 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i34 = $r18[1];

        $i36 = $i35 + $i34;

        r0.<android.widget.AbsListView: int mNestedYOffset> = $i36;

     label17:
        goto label28;

     label18:
        $i26 = r0.<android.widget.AbsListView: int mScrollY>;

        $i25 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        z11 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i67, 0, $i26, 0, 0, 0, $i25, 1);

        if z11 == 0 goto label19;

        r27 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if r27 == null goto label19;

        virtualinvoke r27.<android.view.VelocityTracker: void clear()>();

     label19:
        i69 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i69 == 0 goto label22;

        if i69 != 1 goto label21;

        $z9 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z9 != 0 goto label20;

        goto label22;

     label20:
        i68 = 0;

        goto label28;

     label21:
        i68 = 0;

        goto label28;

     label22:
        if z11 != 0 goto label23;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

     label23:
        if i59 <= 0 goto label25;

        $r15 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i29 = neg i67;

        $f20 = (float) $i29;

        $i30 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f21 = (float) $i30;

        $f22 = $f20 / $f21;

        $f23 = (float) i47;

        $i31 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f24 = (float) $i31;

        $f25 = $f23 / $f24;

        virtualinvoke $r15.<android.widget.EdgeEffect: void onPull(float,float)>($f22, $f25);

        $r16 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z8 = virtualinvoke $r16.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z8 != 0 goto label24;

        $r17 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r17.<android.widget.EdgeEffect: void onRelease()>();

     label24:
        specialinvoke r0.<android.widget.AbsListView: void invalidateTopGlow()>();

        i68 = 0;

        goto label28;

     label25:
        i68 = 0;

        if i59 >= 0 goto label28;

        $r12 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f13 = (float) i67;

        $i27 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f14 = (float) $i27;

        $f15 = $f13 / $f14;

        $f16 = (float) i47;

        $i28 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f17 = (float) $i28;

        $f18 = $f16 / $f17;

        $f19 = 1.0F - $f18;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onPull(float,float)>($f15, $f19);

        $r13 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z7 = virtualinvoke $r13.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 != 0 goto label26;

        $r14 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r14.<android.widget.EdgeEffect: void onRelease()>();

     label26:
        specialinvoke r0.<android.widget.AbsListView: void invalidateBottomGlow()>();

        i68 = 0;

        goto label28;

     label27:
        i68 = 0;

     label28:
        $i71 = i0 + i68;

        $i72 = $i71 + i53;

        r0.<android.widget.AbsListView: int mMotionY> = $i72;

        goto label30;

     label29:
        i68 = 0;

     label30:
        $i20 = i0 + i68;

        $i21 = $i20 + i53;

        r0.<android.widget.AbsListView: int mLastY> = $i21;

        goto label50;

     label31:
        goto label50;

     label32:
        if i62 != 5 goto label50;

        $i3 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 == $i3 goto label50;

        i73 = r0.<android.widget.AbsListView: int mScrollY>;

        i74 = i73 - i59;

        $i4 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 <= $i4 goto label33;

        b75 = 1;

        goto label34;

     label33:
        b75 = -1;

     label34:
        $i5 = r0.<android.widget.AbsListView: int mDirection>;

        if $i5 != 0 goto label35;

        r0.<android.widget.AbsListView: int mDirection> = b75;

     label35:
        i76 = neg i59;

        if i74 >= 0 goto label36;

        if i73 >= 0 goto label37;

     label36:
        if i74 <= 0 goto label38;

        if i73 > 0 goto label38;

     label37:
        i77 = neg i73;

        i76 = i77;

        i78 = i59 + i77;

        goto label39;

     label38:
        i78 = 0;

     label39:
        if i76 == 0 goto label46;

        $i11 = r0.<android.widget.AbsListView: int mScrollY>;

        $i10 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i76, 0, $i11, 0, 0, 0, $i10, 1);

        i79 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i79 == 0 goto label42;

        if i79 != 1 goto label41;

        $z5 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z5 != 0 goto label40;

        goto label42;

     label40:
        goto label46;

     label41:
        goto label46;

     label42:
        if i57 <= 0 goto label44;

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f7 = (float) i76;

        $i14 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f8 = (float) $i14;

        $f9 = $f7 / $f8;

        $f10 = (float) i47;

        $i15 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f11 = (float) $i15;

        $f12 = $f10 / $f11;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onPull(float,float)>($f9, $f12);

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z4 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z4 != 0 goto label43;

        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r9.<android.widget.EdgeEffect: void onRelease()>();

     label43:
        specialinvoke r0.<android.widget.AbsListView: void invalidateTopGlow()>();

        goto label46;

     label44:
        if i57 >= 0 goto label46;

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f0 = (float) i76;

        $i12 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f1 = (float) $i12;

        $f2 = $f0 / $f1;

        $f3 = (float) i47;

        $i13 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f4 = (float) $i13;

        $f5 = $f3 / $f4;

        $f6 = 1.0F - $f5;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onPull(float,float)>($f2, $f6);

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z3 = virtualinvoke $r5.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z3 != 0 goto label45;

        $r6 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onRelease()>();

     label45:
        specialinvoke r0.<android.widget.AbsListView: void invalidateBottomGlow()>();

        goto label46;

     label46:
        if i78 == 0 goto label49;

        $i6 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i6 == 0 goto label47;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

     label47:
        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i78, i78);

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        i80 = virtualinvoke r0.<android.widget.AbsListView: int findClosestMotionRow(int)>(i0);

        i81 = 0;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i7 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i8 = i80 - $i7;

        r28 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        if r28 == null goto label48;

        i81 = virtualinvoke r28.<android.view.View: int getTop()>();

     label48:
        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = i81;

        $i9 = i0 + i53;

        r0.<android.widget.AbsListView: int mMotionY> = $i9;

        r0.<android.widget.AbsListView: int mMotionPosition> = i80;

     label49:
        $i82 = i0 + 0;

        $i83 = $i82 + i53;

        r0.<android.widget.AbsListView: int mLastY> = $i83;

        r0.<android.widget.AbsListView: int mDirection> = b75;

        goto label50;

     label50:
        return;
    }

    private void setFastScrollerAlwaysVisibleUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.FastScroller: void setAlwaysShow(boolean)>(z0);

     label1:
        return;
    }

    private void setFastScrollerEnabledUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller $r1, r2, r4;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.FastScroller: void setEnabled(boolean)>(z0);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        $r1 = new android.widget.FastScroller;

        $i0 = r0.<android.widget.AbsListView: int mFastScrollStyle>;

        specialinvoke $r1.<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)>(r0, $i0);

        r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll> = $r1;

        virtualinvoke $r1.<android.widget.FastScroller: void setEnabled(boolean)>(1);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void resolvePadding()>();

        r4 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r4 == null goto label3;

        virtualinvoke r4.<android.widget.FastScroller: void updateLayout()>();

     label3:
        return;
    }

    private void setItemViewLayoutParams(android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2, $r6, $r7;
        boolean $z0, $z1, $z2;
        android.widget.ListAdapter $r3, $r4, $r5;
        long $l2;
        android.widget.AbsListView$LayoutParams r8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 != null goto label1;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r8 = (android.widget.AbsListView$LayoutParams) $r7;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        r8 = (android.widget.AbsListView$LayoutParams) $r6;

        goto label3;

     label2:
        r8 = (android.widget.AbsListView$LayoutParams) r2;

     label3:
        $z2 = r0.<android.widget.AbsListView: boolean mAdapterHasStableIds>;

        if $z2 == 0 goto label4;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l2 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i0);

        r8.<android.widget.AbsListView$LayoutParams: long itemId> = $l2;

     label4:
        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i1 = interfaceinvoke $r3.<android.widget.ListAdapter: int getItemViewType(int)>(i0);

        r8.<android.widget.AbsListView$LayoutParams: int viewType> = $i1;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z1 = interfaceinvoke $r4.<android.widget.ListAdapter: boolean isEnabled(int)>(i0);

        r8.<android.widget.AbsListView$LayoutParams: boolean isEnabled> = $z1;

        if r8 == r2 goto label5;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r8);

     label5:
        return;
    }

    private boolean shouldDisplayEdgeEffects()
    {
        android.widget.AbsListView r0;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if $i0 == 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean showContextMenuForChildInternal(android.view.View, float, float, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1, $r4;
        float f0, f1;
        boolean z0, z1, z2;
        int i0, $i2, $i3;
        long l1;
        android.widget.ListAdapter $r2;
        android.widget.AdapterView$OnItemLongClickListener $r3, $r6;
        android.view.ContextMenu$ContextMenuInfo $r5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getPositionForView(android.view.View)>(r1);

        if i0 >= 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>(i0);

        z1 = 0;

        $r3 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r3 == null goto label2;

        $r6 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z1 = interfaceinvoke $r6.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r1, i0, l1);

     label2:
        z2 = z1;

        if z1 != 0 goto label4;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = i0 - $i2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>($r4, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r5;

        if z0 == 0 goto label3;

        z2 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View,float,float)>(r1, f0, f1);

        goto label4;

     label3:
        z2 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r1);

     label4:
        return z2;
    }

    private boolean showContextMenuInternal(float, float, boolean)
    {
        android.widget.AbsListView r0;
        float f0, f1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i2, $i3, $i4, $i5;
        long l1;
        android.view.View r1;
        android.widget.ListAdapter $r2;
        android.view.ContextMenu$ContextMenuInfo $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $i3 = (int) f0;

        $i2 = (int) f1;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>($i3, $i2);

        if i0 == -1 goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i5 = i0 - $i4;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i5);

        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r1, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r3;

        if z0 == 0 goto label1;

        $z4 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View,float,float)>(r0, f0, f1);

        return $z4;

     label1:
        $z3 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

        return $z3;

     label2:
        if z0 == 0 goto label3;

        $z2 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenu(float,float)>(f0, f1);

        return $z2;

     label3:
        $z1 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenu()>();

        return $z1;
    }

    private void showPopup()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

        virtualinvoke r0.<android.widget.AbsListView: void checkFocus()>();

     label1:
        return;
    }

    private boolean startScrollIfNeeded(int, int, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        android.view.MotionEvent r1;
        boolean z1;
        android.widget.AbsListView$CheckForLongPress $r2;
        android.view.View r3;
        android.view.ViewParent r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        $i4 = r0.<android.widget.AbsListView: int mMotionY>;

        i2 = i1 - $i4;

        i3 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i5 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i5 == 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        if z1 != 0 goto label03;

        $i8 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if i3 <= $i8 goto label10;

     label03:
        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getNestedScrollAxes()>();

        $i7 = $i6 & 2;

        if $i7 != 0 goto label10;

        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        if z1 == 0 goto label04;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        goto label07;

     label04:
        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        i9 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if i2 <= 0 goto label05;

        goto label06;

     label05:
        i9 = neg i9;

     label06:
        r0.<android.widget.AbsListView: int mMotionCorrection> = i9;

     label07:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i10 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i11 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i12 = $i10 - $i11;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i12);

        if r3 == null goto label08;

        virtualinvoke r3.<android.view.View: void setPressed(boolean)>(0);

     label08:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(1);

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r4 == null goto label09;

        interfaceinvoke r4.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label09:
        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int,int,android.view.MotionEvent)>(i0, i1, r1);

        return 1;

     label10:
        return 0;
    }

    private void updateOnScreenCheckedViews()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, i4;
        android.view.View r1;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0, $z1, $z2, z3;
        android.util.SparseBooleanArray $r4, $r5;
        android.widget.Checkable $r6;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i3 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i3 < 11 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        i4 = 0;

     label3:
        if i4 >= i1 goto label6;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i4);

        i2 = i0 + i4;

        $z0 = r1 instanceof android.widget.Checkable;

        if $z0 == 0 goto label4;

        $r6 = (android.widget.Checkable) r1;

        $r5 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z2 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i2);

        interfaceinvoke $r6.<android.widget.Checkable: void setChecked(boolean)>($z2);

        goto label5;

     label4:
        if z3 == 0 goto label5;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z1 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i2);

        virtualinvoke r1.<android.view.View: void setActivated(boolean)>($z1);

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return;
    }

    private void useDefaultSelector()
    {
        android.widget.AbsListView r0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17301602);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.widget.AbsListView r0;
        java.util.ArrayList r1;
        int i0, i1, $i2, i3;
        android.widget.ListAdapter r2;
        android.view.View r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r2 != null goto label1;

        return;

     label1:
        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i3);

        $i2 = i1 + i3;

        $z0 = interfaceinvoke r2.<android.widget.ListAdapter: boolean isEnabled(int)>($i2);

        if $z0 == 0 goto label3;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label3:
        virtualinvoke r3.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.widget.AbsListView r0;
        android.text.Editable r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean canScrollList(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        android.graphics.Rect r1;
        android.view.View $r2, $r3;
        boolean z1, z2;

        r0 := @this: android.widget.AbsListView;

        i9 := @parameter0: int;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        z1 = 0;

        if i0 != 0 goto label1;

        return 0;

     label1:
        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        if i9 <= 0 goto label4;

        $i3 = i0 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        i10 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i5 = i1 + i0;

        $i4 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i5 < $i4 goto label2;

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i8 = $i6 - $i7;

        if i10 <= $i8 goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;

     label4:
        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i11 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if i1 > 0 goto label5;

        z2 = 0;

        $i2 = r1.<android.graphics.Rect: int top>;

        if i11 >= $i2 goto label6;

     label5:
        z2 = 1;

     label6:
        return z2;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        android.widget.EditText $r2;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.AbsListView$LayoutParams;

        return $z0;
    }

    public void clearChoices()
    {
        android.widget.AbsListView r0;
        android.util.SparseBooleanArray r1;
        android.util.LongSparseArray r2;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.util.SparseBooleanArray: void clear()>();

     label1:
        r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.util.LongSparseArray: void clear()>();

     label2:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        return;
    }

    public void clearTextFilter()
    {
        android.widget.AbsListView r0;
        android.widget.PopupWindow r1;
        boolean $z0, $z1;
        android.widget.EditText $r2;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke $r2.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

     label1:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0;
        android.view.View r1, r2;

        r0 := @this: android.widget.AbsListView;

        i8 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i8 <= 0 goto label4;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        i9 = i8 * 100;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        i10 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i11 = i9;

        if i10 <= 0 goto label1;

        $i6 = i0 * 100;

        $i7 = $i6 / i10;

        i11 = i9 + $i7;

     label1:
        $i1 = i8 - 1;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i1);

        i12 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i13 = virtualinvoke r2.<android.view.View: int getHeight()>();

        i14 = i11;

        if i13 <= 0 goto label2;

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i3 = i12 - $i2;

        $i4 = $i3 * 100;

        $i5 = $i4 / i13;

        i14 = i11 - $i5;

     label2:
        return i14;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, $i18;
        android.view.View r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 < 0 goto label6;

        if i1 <= 0 goto label6;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i14 = virtualinvoke r1.<android.view.View: int getTop()>();

        i15 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i15 <= 0 goto label1;

        $i6 = i0 * 100;

        $i4 = i14 * 100;

        $i5 = $i4 / i15;

        $i8 = $i6 - $i5;

        $i7 = r0.<android.widget.AbsListView: int mScrollY>;

        $f0 = (float) $i7;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f1 = (float) $i9;

        $f3 = $f0 / $f1;

        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        $f2 = (float) $i10;

        $f4 = $f3 * $f2;

        $f5 = $f4 * 100.0F;

        $i11 = (int) $f5;

        $i12 = $i8 + $i11;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i12, 0);

        return $i13;

     label1:
        goto label6;

     label2:
        i16 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 != 0 goto label3;

        i17 = 0;

        goto label5;

     label3:
        $i2 = i0 + i1;

        if $i2 != i16 goto label4;

        i17 = i16;

        goto label5;

     label4:
        $i3 = i1 / 2;

        i17 = $i3 + i0;

     label5:
        $f6 = (float) i0;

        $f7 = (float) i1;

        $f8 = (float) i17;

        $f9 = (float) i16;

        $f10 = $f8 / $f9;

        $f11 = $f7 * $f10;

        $f12 = $f6 + $f11;

        $i18 = (int) $f12;

        return $i18;

     label6:
        return 0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        $i2 = $i1 * 100;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 0);

        i9 = i0;

        $i3 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i3 == 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mScrollY>;

        $f0 = (float) $i4;

        $i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f1 = (float) $i5;

        $f3 = $f0 / $f1;

        $i6 = r0.<android.widget.AbsListView: int mItemCount>;

        $f2 = (float) $i6;

        $f4 = $f3 * $f2;

        $f5 = $f4 * 100.0F;

        $i7 = (int) $f5;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i7);

        i9 = i0 + $i8;

        goto label2;

     label1:
        i9 = r0.<android.widget.AbsListView: int mItemCount>;

     label2:
        return i9;
    }

    void confirmCheckedPositionsById()
    {
        android.widget.AbsListView r0;
        long l0, $l4, $l11;
        int i1, i2, $i3, $i6, $i7, $i8, $i9, $i10, i13, i14;
        android.widget.AbsListView$MultiChoiceModeWrapper r1;
        android.util.SparseBooleanArray $r2, $r9, $r12;
        android.util.LongSparseArray $r3, $r4, $r5, $r10, $r13;
        java.lang.Object $r6;
        java.lang.Integer $r7, $r14;
        android.widget.ListAdapter $r8, $r11;
        byte $b5, $b12;
        boolean z0, z1;
        android.view.ActionMode r15, r16;

        r0 := @this: android.widget.AbsListView;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void clear()>();

        z0 = 0;

        i13 = 0;

     label01:
        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $i3 = virtualinvoke $r3.<android.util.LongSparseArray: int size()>();

        if i13 >= $i3 goto label10;

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        l0 = virtualinvoke $r4.<android.util.LongSparseArray: long keyAt(int)>(i13);

        $r5 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r6 = virtualinvoke $r5.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i13);

        $r7 = (java.lang.Integer) $r6;

        i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l4 = interfaceinvoke $r8.<android.widget.ListAdapter: long getItemId(int)>(i1);

        $b5 = l0 cmp $l4;

        if $b5 == 0 goto label08;

        $i6 = i1 - 20;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i8 = i1 + 20;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

     label02:
        if i14 >= i2 goto label04;

        $r11 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l11 = interfaceinvoke $r11.<android.widget.ListAdapter: long getItemId(int)>(i14);

        $b12 = l0 cmp $l11;

        if $b12 != 0 goto label03;

        $r12 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r12.<android.util.SparseBooleanArray: void put(int,boolean)>(i14, 1);

        $r13 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        virtualinvoke $r13.<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>(i13, $r14);

        z1 = 1;

        goto label05;

     label03:
        i14 = i14 + 1;

        goto label02;

     label04:
        z1 = 0;

     label05:
        if z1 != 0 goto label07;

        $r10 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r10.<android.util.LongSparseArray: void delete(long)>(l0);

        i13 = i13 + -1;

        $i9 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i10 = $i9 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i10;

        z0 = 1;

        r15 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if r15 == null goto label06;

        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if r1 == null goto label06;

        virtualinvoke r1.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>(r15, i1, l0, 0);

        goto label07;

     label06:
        goto label07;

     label07:
        goto label09;

     label08:
        $r9 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r9.<android.util.SparseBooleanArray: void put(int,boolean)>(i1, 1);

     label09:
        i13 = i13 + 1;

        goto label01;

     label10:
        if z0 == 0 goto label11;

        r16 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if r16 == null goto label11;

        virtualinvoke r16.<android.view.ActionMode: void invalidate()>();

     label11:
        return;
    }

    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0;
        long l1;
        android.widget.AdapterView$AdapterContextMenuInfo $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = new android.widget.AdapterView$AdapterContextMenuInfo;

        specialinvoke $r2.<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>(r1, i0, l1);

        return $r2;
    }

    android.widget.AbsListView$AbsPositionScroller createPositionScroller()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$PositionScroller $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r1.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        return $r1;
    }

    public void deferNotifyDataSetChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 1;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24;
        boolean z0, z2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        i24 = 0;

        $i2 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i3 = $i2 & 34;

        if $i3 != 34 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label3;

        i24 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i0 = r0.<android.widget.AbsListView: int mScrollX>;

        i1 = r0.<android.widget.AbsListView: int mScrollY>;

        $i6 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i21 = $i6 + i0;

        $i7 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i20 = $i7 + i1;

        $i8 = r0.<android.widget.AbsListView: int mRight>;

        $i10 = $i8 + i0;

        $i9 = r0.<android.widget.AbsListView: int mLeft>;

        $i12 = $i10 - $i9;

        $i11 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i19 = $i12 - $i11;

        $i13 = r0.<android.widget.AbsListView: int mBottom>;

        $i15 = $i13 + i1;

        $i14 = r0.<android.widget.AbsListView: int mTop>;

        $i17 = $i15 - $i14;

        $i16 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i18 = $i17 - $i16;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i21, $i20, $i19, $i18);

        $i22 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i23 = $i22 & -35;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i23;

     label3:
        z0 = r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop>;

        if z0 != 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label4:
        specialinvoke r0.<android.widget.AdapterView: void dispatchDraw(android.graphics.Canvas)>(r1);

        if z0 == 0 goto label5;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label5:
        if z2 == 0 goto label6;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i24);

        $i4 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i5 = 34 | $i4;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i5;

     label6:
        return;
    }

    public void dispatchDrawableHotspotChanged(float, float)
    {
        android.widget.AbsListView r0;
        float f0, f1;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        boolean z0, z1, $z2, $z4, $z6, $z7;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35;
        android.widget.EdgeEffect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.AdapterView: void draw(android.graphics.Canvas)>(r1);

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean shouldDisplayEdgeEffects()>();

        if $z2 == 0 goto label7;

        i26 = r0.<android.widget.AbsListView: int mScrollY>;

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean getClipToPadding()>();

        if z0 == 0 goto label1;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i19 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i21 = $i18 - $i19;

        $i20 = r0.<android.widget.AbsListView: int mPaddingRight>;

        i27 = $i21 - $i20;

        $i22 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i23 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i25 = $i22 - $i23;

        $i24 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        i28 = $i25 - $i24;

        i29 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        i30 = r0.<android.widget.AbsListView: int mPaddingTop>;

        goto label2;

     label1:
        i27 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        i28 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i29 = 0;

        i30 = 0;

     label2:
        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void setSize(int,int)>(i27, i28);

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>(i27, i28);

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        z1 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if z1 != 0 goto label4;

        i31 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i12 = i29 + i27;

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i13 = virtualinvoke $r7.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i14 = $i13 + i30;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i29, i30, $i12, $i14);

        $i15 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i16 = $i15 + i26;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i16);

        $f4 = (float) i29;

        $i17 = i1 + i30;

        $f3 = (float) $i17;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f4, $f3);

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z6 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z6 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void invalidateTopGlow()>();

     label3:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i31);

     label4:
        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z7 = virtualinvoke $r9.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 != 0 goto label7;

        i32 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i2 = i30 + i28;

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i3 = virtualinvoke $r5.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i6 = $i2 - $i3;

        $i5 = i29 + i27;

        $i4 = i30 + i28;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i29, $i6, $i5, $i4);

        i33 = neg i27;

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i8 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i9 = $i8 + i26;

        i34 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i9);

        i35 = 0;

        if z0 == 0 goto label5;

        i35 = r0.<android.widget.AbsListView: int mPaddingBottom>;

     label5:
        $i10 = i33 + i29;

        $f1 = (float) $i10;

        $i11 = i34 - i35;

        $f0 = (float) $i11;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $f2 = (float) i27;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f2, 0.0F);

        $r6 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z4 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z4 == 0 goto label6;

        specialinvoke r0.<android.widget.AbsListView: void invalidateBottomGlow()>();

     label6:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i32);

     label7:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void drawableStateChanged()>();

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.AbsListView r0;
        android.view.ViewHierarchyEncoder r1;
        android.view.View r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.widget.AdapterView: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getCacheColorHint()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("drawing:cacheColorHint", $i0);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isFastScrollEnabled()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("list:fastScrollEnabled", $z0);

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isScrollingCacheEnabled()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("list:scrollingCacheEnabled", $z1);

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("list:smoothScrollbarEnabled", $z2);

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isStackFromBottom()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("list:stackFromBottom", $z3);

        $z4 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("list:textFilterEnabled", $z4);

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getSelectedView()>();

        if r2 == null goto label1;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addPropertyKey(java.lang.String)>("selectedView");

        virtualinvoke r2.<android.view.View: void encode(android.view.ViewHierarchyEncoder)>(r1);

     label1:
        return;
    }

    abstract void fillGap(boolean);

    int findClosestMotionRow(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, i3, i4;

        r0 := @this: android.widget.AbsListView;

        i3 := @parameter0: int;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 != 0 goto label1;

        return -1;

     label1:
        i4 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i3);

        if i4 == -1 goto label2;

        goto label3;

     label2:
        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = $i1 + i0;

        i4 = $i2 - 1;

     label3:
        return i4;
    }

    abstract int findMotionRow(int);

    public void fling(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r3.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r3;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r2.<android.widget.AbsListView$FlingRunnable: void start(int)>(i0);

        return;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$LayoutParams $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r1.<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>(-1, -2, 0);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.AbsListView$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.AbsListView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = class "Landroid/widget/AbsListView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    android.view.View getAccessibilityFocusedChild(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.ViewParent r1, r4;
        boolean $z0, $z1;
        android.view.View r2, r3;

        r0 := @this: android.widget.AbsListView;

        r2 := @parameter0: android.view.View;

        r1 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        r3 = r2;

        r4 = r1;

     label1:
        $z0 = r4 instanceof android.view.View;

        if $z0 == 0 goto label2;

        if r4 == r0 goto label2;

        r3 = (android.view.View) r4;

        r4 = interfaceinvoke r4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        $z1 = r4 instanceof android.view.View;

        if $z1 != 0 goto label3;

        return null;

     label3:
        return r3;
    }

    public int getBottomEdgeEffectColor()
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i0 = virtualinvoke $r1.<android.widget.EdgeEffect: int getColor()>();

        return $i0;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        float f0, $f1, f2;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i13 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f2 = specialinvoke r0.<android.widget.AdapterView: float getBottomFadingEdgeStrength()>();

        if i13 != 0 goto label1;

        return f2;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = $i1 + i13;

        $i5 = $i2 - 1;

        $i3 = r0.<android.widget.AbsListView: int mItemCount>;

        $i4 = $i3 - 1;

        if $i5 >= $i4 goto label2;

        return 1.0F;

     label2:
        $i6 = i13 - 1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        i14 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f0 = (float) $i7;

        $i8 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i9 = i14 - $i8;

        if i0 <= $i9 goto label3;

        $i11 = i0 - i14;

        $i10 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i12 = $i11 + $i10;

        $f1 = (float) $i12;

        f2 = $f1 / f0;

        goto label3;

     label3:
        return f2;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = r0.<android.widget.AbsListView: int mPaddingBottom>;

     label2:
        return i2;
    }

    public int getCacheColorHint()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public int getCheckedItemCount()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        return $i0;
    }

    public long[] getCheckedItemIds()
    {
        android.widget.AbsListView r0;
        android.util.LongSparseArray r1, $r3;
        int i0, $i1, i3;
        long[] r2, $r5;
        android.widget.ListAdapter $r4;
        long $l2;

        r0 := @this: android.widget.AbsListView;

        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label4;

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 != null goto label1;

        goto label4;

     label1:
        r1 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i0 = virtualinvoke r1.<android.util.LongSparseArray: int size()>();

        r2 = newarray (long)[i0];

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $l2 = virtualinvoke r1.<android.util.LongSparseArray: long keyAt(int)>(i3);

        r2[i3] = $l2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r2;

     label4:
        $r5 = newarray (long)[0];

        return $r5;
    }

    public int getCheckedItemPosition()
    {
        android.widget.AbsListView r0;
        android.util.SparseBooleanArray r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 != 1 goto label1;

        r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

        if $i1 != 1 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i2 = virtualinvoke $r2.<android.util.SparseBooleanArray: int keyAt(int)>(0);

        return $i2;

     label1:
        return -1;
    }

    public android.util.SparseBooleanArray getCheckedItemPositions()
    {
        android.widget.AbsListView r0;
        int $i0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        return $r1;

     label1:
        return null;
    }

    public int getChoiceMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        return $i0;
    }

    protected android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()
    {
        android.widget.AbsListView r0;
        android.view.ContextMenu$ContextMenuInfo $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo>;

        return $r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        android.graphics.Rect r1;
        android.view.View r2;
        android.view.ViewParent $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getSelectedView()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        virtualinvoke r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, r1);

        goto label2;

     label1:
        specialinvoke r0.<android.widget.AdapterView: void getFocusedRect(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    int getFooterViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    int getHeaderViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    int getHeightForPosition(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, i3, i4, i5, i6;
        android.view.View r1, $r4;
        boolean[] $r2;
        android.widget.AbsListView$RecycleBin $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i5 = i0 - i3;

        if i5 < 0 goto label1;

        if i5 >= i4 goto label1;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i5);

        $i2 = virtualinvoke $r4.<android.view.View: int getHeight()>();

        return $i2;

     label1:
        $r2 = r0.<android.widget.AbsListView: boolean[] mIsScrap>;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View obtainView(int,boolean[])>(i0, $r2);

        $i1 = r0.<android.widget.AbsListView: int mWidthMeasureSpec>;

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i1, 0);

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r1, i0);

        return i6;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        i3 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        i3 = neg $i2;

     label2:
        return i3;
    }

    public int getListPaddingBottom()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public int getListPaddingLeft()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getListPaddingRight()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        return $i0;
    }

    public int getListPaddingTop()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int top>;

        return $i0;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = r0.<android.widget.AbsListView: int mPaddingRight>;

     label2:
        return i2;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label1;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 - $i2;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        return $r1;

     label1:
        return null;
    }

    int getSelectionModeForAccessibility()
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChoiceMode()>();

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        return 0;

     label1:
        return 2;

     label2:
        return 1;
    }

    public android.graphics.drawable.Drawable getSelector()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        return $r1;
    }

    public int getSolidColor()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public java.lang.CharSequence getTextFilter()
    {
        android.widget.AbsListView r0;
        android.widget.EditText r1;
        boolean $z0;
        android.text.Editable $r2;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.widget.EditText: android.text.Editable getText()>();

        return $r2;

     label1:
        return null;
    }

    public int getTopEdgeEffectColor()
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i0 = virtualinvoke $r1.<android.widget.EdgeEffect: int getColor()>();

        return $i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        float f0, $f1, f2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i6 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f2 = specialinvoke r0.<android.widget.AdapterView: float getTopFadingEdgeStrength()>();

        if i6 != 0 goto label1;

        return f2;

     label1:
        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i0 <= 0 goto label2;

        return 1.0F;

     label2:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i7 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f0 = (float) $i1;

        $i2 = r0.<android.widget.AbsListView: int mPaddingTop>;

        if i7 >= $i2 goto label3;

        $i3 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i4 = i7 - $i3;

        $i5 = neg $i4;

        $f1 = (float) $i5;

        f2 = $f1 / f0;

        goto label3;

     label3:
        return f2;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        i3 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingTop>;

        i3 = neg $i2;

     label2:
        return i3;
    }

    public int getTranscriptMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        return $i0;
    }

    public int getVerticalScrollbarWidth()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller r1, $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.FastScroller: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $i2 = virtualinvoke $r2.<android.widget.FastScroller: int getWidth()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;

     label1:
        $i0 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        return $i0;
    }

    void handleBoundsChange()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, i3;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 <= 0 goto label5;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i3);

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 == null goto label3;

        $i1 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i1 < 1 goto label3;

        $i2 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 >= 1 goto label4;

     label3:
        virtualinvoke r1.<android.view.View: void forceLayout()>();

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return;
    }

    protected void handleDataChanged()
    {
        android.widget.AbsListView r0;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        long $l8, $l10;
        byte $b11, b35;
        android.widget.ListAdapter r1;
        android.widget.AbsListView$RecycleBin $r2;
        android.view.View r3;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mItemCount>;

        i1 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        $i4 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mLastHandledItemCount> = $i4;

        $i5 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i5 == 0 goto label01;

        r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r1 == null goto label01;

        $z4 = interfaceinvoke r1.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z4 == 0 goto label01;

        virtualinvoke r0.<android.widget.AbsListView: void confirmCheckedPositionsById()>();

     label01:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clearTransientStateViews()>();

        if i0 <= 0 goto label18;

        $z0 = r0.<android.widget.AbsListView: boolean mNeedSync>;

        if $z0 == 0 goto label13;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        i25 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if i25 != 2 goto label02;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label02:
        if i25 != 1 goto label07;

        $z2 = r0.<android.widget.AbsListView: boolean mForceTranscriptScroll>;

        if $z2 == 0 goto label03;

        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label03:
        i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i21 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i26 = $i20 - $i21;

        $i22 = i3 - 1;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i22);

        if r3 == null goto label04;

        i27 = virtualinvoke r3.<android.view.View: int getBottom()>();

        goto label05;

     label04:
        i27 = i26;

     label05:
        $i23 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i24 = $i23 + i3;

        if $i24 < i1 goto label06;

        if i27 > i26 goto label06;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label06:
        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label07:
        i28 = r0.<android.widget.AbsListView: int mSyncMode>;

        if i28 == 0 goto label09;

        if i28 == 1 goto label08;

        goto label13;

     label08:
        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i16 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        $i18 = i0 - 1;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i19;

        return;

     label09:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 == 0 goto label10;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i12 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $i14 = i0 - 1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i15;

        return;

     label10:
        i29 = virtualinvoke r0.<android.widget.AbsListView: int findSyncPosition()>();

        if i29 < 0 goto label13;

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i29, 1);

        if $i7 != i29 goto label13;

        r0.<android.widget.AbsListView: int mSyncPosition> = i29;

        $l8 = r0.<android.widget.AbsListView: long mSyncHeight>;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $l10 = (long) $i9;

        $b11 = $l8 cmp $l10;

        if $b11 != 0 goto label11;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        goto label12;

     label11:
        r0.<android.widget.AbsListView: int mLayoutMode> = 2;

     label12:
        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i29);

        return;

     label13:
        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z5 != 0 goto label17;

        i30 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        i31 = i30;

        if i30 < i0 goto label14;

        i31 = i0 - 1;

     label14:
        i32 = i31;

        if i31 >= 0 goto label15;

        i32 = 0;

     label15:
        i33 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i32, 1);

        if i33 < 0 goto label16;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i33);

        return;

     label16:
        i34 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i32, 0);

        if i34 < 0 goto label18;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i34);

        return;

     label17:
        $i6 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        if $i6 < 0 goto label18;

        return;

     label18:
        $z6 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z6 == 0 goto label19;

        b35 = 3;

        goto label20;

     label19:
        b35 = 1;

     label20:
        r0.<android.widget.AbsListView: int mLayoutMode> = b35;

        r0.<android.widget.AbsListView: int mSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: int mNextSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mNextSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void checkSelectionChanged()>();

        return;
    }

    protected boolean handleScrollBarDragging(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean hasTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    void hideSelector()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 == -1 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mLayoutMode>;

        if $i1 == 4 goto label1;

        $i6 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i6;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        if $i2 < 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i4 == $i3 goto label2;

        $i5 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i5;

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

     label3:
        return;
    }

    protected void internalSetPadding(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void internalSetPadding(int,int,int,int)>(i0, i1, i2, i3);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isLayoutRequested()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void handleBoundsChange()>();

     label1:
        return;
    }

    public void invalidateViews()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    void invokeOnItemScrollListener()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.FastScroller r1;
        android.widget.AbsListView$OnScrollListener r2;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke r1.<android.widget.FastScroller: void onScroll(int,int,int)>($i3, $i4, $i5);

     label1:
        r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if r2 == null goto label2;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        interfaceinvoke r2.<android.widget.AbsListView$OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>(r0, $i0, $i1, $i2);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

    public boolean isDrawSelectorOnTop()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop>;

        return $z0;
    }

    public boolean isFastScrollAlwaysVisible()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller r1, $r2;
        boolean $z1, $z2, $z3, $z4, z5, z6;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        z5 = 1;

        if r1 != null goto label3;

        $z3 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z3 == 0 goto label1;

        $z4 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z4 == 0 goto label1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        return z5;

     label3:
        $z1 = virtualinvoke r1.<android.widget.FastScroller: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z2 = virtualinvoke $r2.<android.widget.FastScroller: boolean isAlwaysShowEnabled()>();

        if $z2 == 0 goto label4;

        z6 = 1;

        goto label5;

     label4:
        z6 = 0;

     label5:
        return z6;
    }

    public boolean isFastScrollEnabled()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 != null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        return $z1;

     label1:
        $z0 = virtualinvoke r1.<android.widget.FastScroller: boolean isEnabled()>();

        return $z0;
    }

    protected boolean isInFilterMode()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    public boolean isItemChecked(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.util.SparseBooleanArray r1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label1;

        r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;

     label1:
        return 0;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.AbsListView r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 == 34 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isScrollingCacheEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        return $z0;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        return $z0;
    }

    public boolean isStackFromBottom()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        return $z0;
    }

    public boolean isTextFilterEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        return $z0;
    }

    protected boolean isVerticalScrollBarHidden()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isFastScrollEnabled()>();

        return $z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void jumpDrawablesToCurrentState()>();

        r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    void keyPressed()
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9;
        int $i0, $i1, $i2, $i3, $i5;
        android.widget.AbsListView$CheckForKeyLongPress $r1, $r2, $r3, $r4;
        long $l4;
        android.graphics.drawable.TransitionDrawable $r5, $r6;
        android.graphics.drawable.Drawable r7, r10;
        android.graphics.Rect r8;
        android.view.View r9;

        r0 := @this: android.widget.AbsListView;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label9;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 != 0 goto label1;

        goto label9;

     label1:
        r7 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        r8 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        if r7 == null goto label8;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isFocused()>();

        if $z3 != 0 goto label2;

        $z9 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z9 == 0 goto label8;

     label2:
        $z4 = virtualinvoke r8.<android.graphics.Rect: boolean isEmpty()>();

        if $z4 != 0 goto label8;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = $i1 - $i0;

        r9 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i2);

        if r9 == null goto label4;

        $z8 = virtualinvoke r9.<android.view.View: boolean hasExplicitFocusable()>();

        if $z8 == 0 goto label3;

        return;

     label3:
        virtualinvoke r9.<android.view.View: void setPressed(boolean)>(1);

     label4:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        r10 = virtualinvoke r7.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r10 == null goto label6;

        $z7 = r10 instanceof android.graphics.drawable.TransitionDrawable;

        if $z7 == 0 goto label6;

        if z0 == 0 goto label5;

        $r6 = (android.graphics.drawable.TransitionDrawable) r10;

        $i5 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        virtualinvoke $r6.<android.graphics.drawable.TransitionDrawable: void startTransition(int)>($i5);

        goto label6;

     label5:
        $r5 = (android.graphics.drawable.TransitionDrawable) r10;

        virtualinvoke $r5.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label6:
        if z0 == 0 goto label8;

        $z5 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z5 != 0 goto label8;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r1 != null goto label7;

        $r4 = new android.widget.AbsListView$CheckForKeyLongPress;

        specialinvoke $r4.<android.widget.AbsListView$CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress> = $r4;

     label7:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke $r2.<android.widget.AbsListView$CheckForKeyLongPress: void rememberWindowAttachCount()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l4 = (long) $i3;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r3, $l4);

     label8:
        return;

     label9:
        return;
    }

    protected void layoutChildren()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    android.view.View obtainView(int, boolean[])
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[] r1;
        android.widget.AbsListView$RecycleBin $r2, $r3, $r11, $r16;
        android.widget.ListAdapter $r4, $r14, $r15;
        android.content.Context $r5;
        android.view.accessibility.AccessibilityManager $r6;
        boolean $z0, $z1;
        android.widget.AbsListView$ListItemAccessibilityDelegate $r7, $r9, $r10;
        android.view.View$AccessibilityDelegate $r8;
        android.view.ViewGroup$LayoutParams $r12;
        android.widget.AbsListView$LayoutParams $r13;
        android.view.View r17, r18, r19, r20;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: boolean[];

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "obtainView");

        r1[0] = 0;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r17 = virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>(i0);

        if r17 == null goto label2;

        $r12 = virtualinvoke r17.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r13 = (android.widget.AbsListView$LayoutParams) $r12;

        $i3 = $r13.<android.widget.AbsListView$LayoutParams: int viewType>;

        $r14 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i4 = interfaceinvoke $r14.<android.widget.ListAdapter: int getItemViewType(int)>(i0);

        if $i3 != $i4 goto label1;

        $r15 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r18 = interfaceinvoke $r15.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r17, r0);

        if r18 == r17 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void setItemViewLayoutParams(android.view.View,int)>(r18, i0);

        $r16 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r16.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r18, i0);

     label1:
        r1[0] = 1;

        virtualinvoke r17.<android.view.View: void dispatchFinishTemporaryDetach()>();

        return r17;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r19 = virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>(i0);

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r20 = interfaceinvoke $r4.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r19, r0);

        if r19 == null goto label4;

        if r20 == r19 goto label3;

        $r11 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r11.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r19, i0);

        goto label4;

     label3:
        $z1 = virtualinvoke r20.<android.view.View: boolean isTemporarilyDetached()>();

        if $z1 == 0 goto label4;

        r1[0] = 1;

        virtualinvoke r20.<android.view.View: void dispatchFinishTemporaryDetach()>();

     label4:
        i1 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if i1 == 0 goto label5;

        virtualinvoke r20.<android.view.View: void setDrawingCacheBackgroundColor(int)>(i1);

     label5:
        $i2 = virtualinvoke r20.<android.view.View: int getImportantForAccessibility()>();

        if $i2 != 0 goto label6;

        virtualinvoke r20.<android.view.View: void setImportantForAccessibility(int)>(1);

     label6:
        specialinvoke r0.<android.widget.AbsListView: void setItemViewLayoutParams(android.view.View,int)>(r20, i0);

        $r5 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        $r6 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r5);

        $z0 = virtualinvoke $r6.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label8;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        if $r7 != null goto label7;

        $r10 = new android.widget.AbsListView$ListItemAccessibilityDelegate;

        specialinvoke $r10.<android.widget.AbsListView$ListItemAccessibilityDelegate: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate> = $r10;

     label7:
        $r8 = virtualinvoke r20.<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>();

        if $r8 != null goto label8;

        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke r20.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r9);

     label8:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r20;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;
        android.widget.AbsListView$AdapterDataSetObserver $r1, $r2;
        android.widget.ListAdapter $r3, $r4, $r7;
        int $i0, $i1;
        android.widget.PopupWindow $r5;
        android.view.ViewTreeObserver r6;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onAttachedToWindow()>();

        r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r6.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r5 == null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter>;

        if $z1 != 0 goto label1;

        virtualinvoke r6.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label1:
        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r7 == null goto label2;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if $r1 != null goto label2;

        $r2 = new android.widget.AbsListView$AdapterDataSetObserver;

        specialinvoke $r2.<android.widget.AbsListView$AdapterDataSetObserver: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = $r2;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        interfaceinvoke $r3.<android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r2);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i0;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i1 = interfaceinvoke $r4.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i1;

     label2:
        return;
    }

    public void onCancelPendingInputEvents()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$PerformClick r1;
        android.widget.AbsListView$CheckForTap r2;
        android.widget.AbsListView$CheckForLongPress r3;
        android.widget.AbsListView$CheckForKeyLongPress r4;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onCancelPendingInputEvents()>();

        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if r1 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r1);

     label1:
        r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        if r2 == null goto label2;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r2);

     label2:
        r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        if r3 == null goto label3;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r3);

     label3:
        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if r4 == null goto label4;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r4);

     label4:
        return;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.EditorInfo r1;
        boolean $z0;
        android.widget.AbsListView$InputConnectionWrapper $r2, $r3, $r5;
        android.view.inputmethod.BaseInputConnection $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        if $r2 != null goto label1;

        $r4 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r4.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>(r0, 0);

        r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection> = $r4;

        $r5 = new android.widget.AbsListView$InputConnectionWrapper;

        specialinvoke $r5.<android.widget.AbsListView$InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>(r0, r1);

        r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection> = $r5;

     label1:
        r1.<android.view.inputmethod.EditorInfo: int inputType> = 177;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 6;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        return $r3;

     label2:
        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter r1;
        android.widget.AbsListView$RecycleBin $r2;
        boolean $z0;
        java.lang.Runnable $r3, r11, r13;
        android.widget.PopupWindow $r4;
        android.view.ViewTreeObserver r5;
        android.widget.AbsListView$AdapterDataSetObserver r6;
        android.os.StrictMode$Span r7, r8;
        android.widget.AbsListView$FlingRunnable r9;
        android.widget.AbsListView$AbsPositionScroller r10;
        android.widget.AbsListView$PerformClick r12;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onDetachedFromWindow()>();

        r0.<android.widget.AbsListView: boolean mIsDetaching> = 1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clear()>();

        r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r5.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r4 == null goto label1;

        virtualinvoke r5.<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 0;

     label1:
        r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r1 == null goto label2;

        r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if r6 == null goto label2;

        interfaceinvoke r1.<android.widget.ListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>(r6);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = null;

     label2:
        r7 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if r7 == null goto label3;

        virtualinvoke r7.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label3:
        r8 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        if r8 == null goto label4;

        virtualinvoke r8.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label4:
        r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if r9 == null goto label5;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r9);

     label5:
        r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r10 == null goto label6;

        virtualinvoke r10.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label6:
        r11 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if r11 == null goto label7;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r11);

     label7:
        r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if r12 == null goto label8;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r12);

     label8:
        r13 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if r13 == null goto label9;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r13);

        $r3 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

     label9:
        r0.<android.widget.AbsListView: boolean mIsDetaching> = 0;

        return;
    }

    protected void onDisplayHint(int)
    {
        android.widget.AbsListView r0;
        int i0;
        boolean $z0, $z1, $z2, z3;
        android.widget.PopupWindow r1, r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onDisplayHint(int)>(i0);

        if i0 == 0 goto label2;

        if i0 == 4 goto label1;

        goto label3;

     label1:
        r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r1 == null goto label3;

        $z2 = virtualinvoke r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        goto label3;

     label2:
        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label3;

        r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r2 == null goto label3;

        $z1 = virtualinvoke r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 != 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label3:
        if i0 != 4 goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        r0.<android.widget.AbsListView: boolean mPopupHidden> = z3;

        return;
    }

    public void onFilterComplete(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label1;

        if i0 <= 0 goto label1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label1:
        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3;
        android.graphics.Rect r1;
        android.widget.ListAdapter $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<android.widget.AdapterView: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        if z0 == 0 goto label2;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z2 != 0 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label1;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i2;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r3.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i3;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label2:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z7;
        android.widget.AbsListView$CheckForLongPress $r2;
        android.widget.AbsListView$CheckForTap $r3;
        int i0, i1, i2, i3;
        float f0, $f1, $f2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 == 8 goto label4;

        if i0 == 11 goto label1;

        goto label8;

     label1:
        $z3 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(2);

        if $z3 == 0 goto label8;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionButton()>();

        if i1 == 32 goto label2;

        if i1 != 2 goto label8;

     label2:
        i2 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i2 == 0 goto label3;

        if i2 != 1 goto label8;

     label3:
        $z4 = specialinvoke r0.<android.widget.AbsListView: boolean performStylusButtonPressAction(android.view.MotionEvent)>(r1);

        if $z4 == 0 goto label8;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r3);

        goto label8;

     label4:
        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(2);

        if $z0 == 0 goto label5;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        goto label7;

     label5:
        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4194304);

        if $z1 == 0 goto label6;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(26);

        goto label7;

     label6:
        f0 = 0.0F;

     label7:
        $f1 = r0.<android.widget.AbsListView: float mVerticalScrollFactor>;

        $f2 = $f1 * f0;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f2);

        if i3 == 0 goto label8;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i3, i3);

        if $z2 != 0 goto label8;

        return 1;

     label8:
        $z7 = specialinvoke r0.<android.widget.AdapterView: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z7;
    }

    public void onGlobalLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.PopupWindow r1, r2;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isShown()>();

        if $z0 == 0 goto label1;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label2;

        r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r1 == null goto label2;

        $z3 = virtualinvoke r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label2;

        $z4 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z4 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        goto label2;

     label1:
        r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

     label2:
        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.view.View, int, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.view.ViewGroup$LayoutParams r3;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, $z7;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4, $r5, $r6, $r7;
        android.widget.AbsListView$LayoutParams $r8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo;

        if i0 != -1 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<android.view.View: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $z4 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z4 == 0 goto label2;

        z5 = 1;

        goto label3;

     label2:
        z5 = 0;

     label3:
        r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        z6 = z5;

        $z7 = r3 instanceof android.widget.AbsListView$LayoutParams;

        if $z7 == 0 goto label4;

        $r8 = (android.widget.AbsListView$LayoutParams) r3;

        $z3 = $r8.<android.widget.AbsListView$LayoutParams: boolean isEnabled>;

        z6 = z5 & $z3;

     label4:
        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>(z6);

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if i0 != $i1 goto label5;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>(1);

        $r7 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLEAR_SELECTION>;

        specialinvoke r0.<android.widget.AbsListView: void addAccessibilityActionIfEnabled(android.view.accessibility.AccessibilityNodeInfo,boolean,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r2, z6, $r7);

        goto label6;

     label5:
        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SELECT>;

        specialinvoke r0.<android.widget.AbsListView: void addAccessibilityActionIfEnabled(android.view.accessibility.AccessibilityNodeInfo,boolean,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r2, z6, $r4);

     label6:
        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean isItemClickable(android.view.View)>(r1);

        if $z1 == 0 goto label7;

        $r6 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLICK>;

        specialinvoke r0.<android.widget.AbsListView: void addAccessibilityActionIfEnabled(android.view.accessibility.AccessibilityNodeInfo,boolean,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r2, z6, $r6);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>(z6);

     label7:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        if $z2 == 0 goto label8;

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_LONG_CLICK>;

        specialinvoke r0.<android.widget.AbsListView: void addAccessibilityActionIfEnabled(android.view.accessibility.AccessibilityNodeInfo,boolean,android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r2, z6, $r5);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>(1);

     label8:
        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean $z0, $z2, $z3;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollUp()>();

        if $z2 == 0 goto label1;

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_UP>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r5);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label1:
        $z3 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollDown()>();

        if $z3 == 0 goto label2;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r2);

        $r3 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_DOWN>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label2:
        $r6 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLICK>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r6);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>(0);

        return;
    }

    public boolean onInterceptHoverEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        android.widget.FastScroller r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15;
        boolean $z0, $z1, $z3, $z4;
        float $f0, $f1, $f2, $f3;
        android.view.View $r2;
        android.view.VelocityTracker $r3, $r6;
        android.widget.AbsListView$AbsPositionScroller r4;
        android.widget.FastScroller r5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        i10 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r4 == null goto label01;

        virtualinvoke r4.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label01:
        $z0 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        if $z0 != 0 goto label15;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z1 != 0 goto label02;

        goto label15;

     label02:
        r5 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r5 == null goto label03;

        $z4 = virtualinvoke r5.<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if $z4 == 0 goto label03;

        return 1;

     label03:
        if i10 == 0 goto label10;

        if i10 == 1 goto label09;

        if i10 == 2 goto label05;

        if i10 == 3 goto label09;

        if i10 == 6 goto label04;

        goto label13;

     label04:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label13;

     label05:
        $i6 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i6 == 0 goto label06;

        goto label08;

     label06:
        $i7 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i11 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i7);

        i12 = i11;

        if i11 != -1 goto label07;

        i12 = 0;

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i9;

     label07:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i12);

        i13 = (int) $f2;

        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        $r3 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i12);

        $i8 = (int) $f3;

        $z3 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int,int,android.view.MotionEvent)>($i8, i13, null);

        if $z3 == 0 goto label08;

        return 1;

     label08:
        goto label13;

     label09:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void stopNestedScroll()>();

        goto label13;

     label10:
        i14 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i14 == 6 goto label14;

        if i14 != 5 goto label11;

        goto label14;

     label11:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i15 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = (int) $f1;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i2;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i0);

        if i14 == 4 goto label12;

        if i1 < 0 goto label12;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = i1 - $i3;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r2.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i5;

        r0.<android.widget.AbsListView: int mMotionX> = i15;

        r0.<android.widget.AbsListView: int mMotionY> = i0;

        r0.<android.widget.AbsListView: int mMotionPosition> = i1;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label12:
        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        specialinvoke r0.<android.widget.AbsListView: void initOrResetVelocityTracker()>();

        $r6 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        if i14 != 4 goto label13;

        return 1;

     label13:
        return 0;

     label14:
        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        return 1;

     label15:
        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean $z0, $z1, $z2, $z3, $z5;
        android.widget.ListAdapter $r1, $r2;
        long $l7;
        android.view.KeyEvent r3;
        android.view.View r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r3 := @parameter1: android.view.KeyEvent;

        $z0 = staticinvoke <android.view.KeyEvent: boolean isConfirmKey(int)>(i0);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 != 0 goto label1;

        return 1;

     label1:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z3 == 0 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label3;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r1 == null goto label3;

        $i2 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r2.<android.widget.ListAdapter: int getCount()>();

        if $i2 >= $i3 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = $i5 - $i4;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r4 == null goto label2;

        $i8 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $l7 = r0.<android.widget.AbsListView: long mSelectedRowId>;

        virtualinvoke r0.<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>(r4, $i8, $l7);

        virtualinvoke r4.<android.view.View: void setPressed(boolean)>(0);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        return 1;

     label3:
        $z5 = specialinvoke r0.<android.widget.AdapterView: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r3);

        return $z5;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        android.widget.FastScroller r1;
        android.widget.AbsListView$RecycleBin $r2;
        android.view.View $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i7 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>(z0, i6, i0, i7, i1);

        r0.<android.widget.AbsListView: boolean mInLayout> = 1;

        i8 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if z0 == 0 goto label3;

        i9 = 0;

     label1:
        if i9 >= i8 goto label2;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i9);

        virtualinvoke $r3.<android.view.View: void forceLayout()>();

        i9 = i9 + 1;

        goto label1;

     label2:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void markChildrenDirty()>();

     label3:
        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        $i2 = i1 - i0;

        $i3 = $i2 / 3;

        r0.<android.widget.AbsListView: int mOverscrollMax> = $i3;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label4;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke r1.<android.widget.FastScroller: void onItemCountChanged(int,int)>($i4, $i5);

     label4:
        r0.<android.widget.AbsListView: boolean mInLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Rect r2;
        boolean z0;
        android.view.View r3;

        r0 := @this: android.widget.AbsListView;

        i19 := @parameter0: int;

        i20 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.AbsListView: void useDefaultSelector()>();

     label1:
        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i1 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i3 = $i2 + $i1;

        r2.<android.graphics.Rect: int left> = $i3;

        $i5 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i4 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i6 = $i5 + $i4;

        r2.<android.graphics.Rect: int top> = $i6;

        $i8 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i7 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i9 = $i8 + $i7;

        r2.<android.graphics.Rect: int right> = $i9;

        $i11 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i10 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i12 = $i11 + $i10;

        r2.<android.graphics.Rect: int bottom> = $i12;

        i21 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        z0 = 1;

        if i21 != 1 goto label6;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i13 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i14 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i22 = $i13 - $i14;

        $i15 = i0 - 1;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i15);

        if r3 == null goto label2;

        i23 = virtualinvoke r3.<android.view.View: int getBottom()>();

        goto label3;

     label2:
        i23 = i22;

     label3:
        $i16 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i18 = $i16 + i0;

        $i17 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        if $i18 < $i17 goto label4;

        if i23 > i22 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = z0;

     label6:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        float f0, f1, $f2, $f3;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, $i2, $i4;
        byte $b3;
        android.widget.AbsListView$FlingRunnable $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if z0 != 0 goto label3;

        if i0 <= 0 goto label3;

        $i1 = (int) f1;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean canScrollList(int)>($i1);

        if $z1 == 0 goto label3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i2 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 <= 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r2 != null goto label1;

        $r4 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r4.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r4;

     label1:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, f1);

        if $z2 != 0 goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i4 = (int) f1;

        virtualinvoke $r3.<android.widget.AbsListView$FlingRunnable: void start(int)>($i4);

     label2:
        return 1;

     label3:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z3;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        boolean $z1;
        android.view.View r1, r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i8 := @parameter4: int;

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i3 = $i2 / 2;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r2 == null goto label1;

        i9 = virtualinvoke r2.<android.view.View: int getTop()>();

        goto label2;

     label1:
        i9 = 0;

     label2:
        if r2 == null goto label3;

        $i6 = neg i8;

        $i5 = neg i8;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>($i6, $i5);

        if $z1 == 0 goto label6;

     label3:
        if r2 == null goto label4;

        $i4 = virtualinvoke r2.<android.view.View: int getTop()>();

        i10 = $i4 - i9;

        i8 = i8 - i10;

        goto label5;

     label4:
        i10 = 0;

     label5:
        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, i10, 0, i8, null);

     label6:
        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AdapterView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r1, r2, i0);

        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, z1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i2 == i1 goto label1;

        $i5 = r0.<android.widget.AbsListView: int mScrollX>;

        $i4 = r0.<android.widget.AbsListView: int mScrollX>;

        $i3 = r0.<android.widget.AbsListView: int mScrollY>;

        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>($i5, i1, $i4, $i3);

        r0.<android.widget.AbsListView: int mScrollY> = i1;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label1:
        return;
    }

    public boolean onRemoteAdapterConnected()
    {
        android.widget.AbsListView r0;
        android.widget.RemoteViewsAdapter r1, $r3;
        android.widget.ListAdapter $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r1 == $r2 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>(r1);

        $z0 = r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r3.<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>();

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

     label1:
        return 0;

     label2:
        if r1 == null goto label3;

        virtualinvoke r1.<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>();

        return 1;

     label3:
        return 0;
    }

    public void onRemoteAdapterDisconnected()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    public android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent, int)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0;
        android.view.PointerIcon $r2, r4;
        android.widget.FastScroller r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.widget.FastScroller: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>(r1, i0);

        if r4 == null goto label1;

        return r4;

     label1:
        $r2 = specialinvoke r0.<android.widget.AdapterView: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>(r1, i0);

        return $r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AbsListView r0;
        android.os.Parcelable $r1, r6;
        int $i0, $i6, $i7, $i9, $i10, $i12, $i13;
        long $l1, $l2, $l4, $l8, $l11;
        byte $b3, $b5;
        android.util.LongSparseArray $r2, $r4;
        boolean $z0;
        android.view.ActionMode $r3;
        android.util.SparseBooleanArray $r5, $r9;
        android.widget.AbsListView$SavedState r7;
        java.lang.String $r8;
        android.widget.AbsListView$MultiChoiceModeWrapper r10;

        r0 := @this: android.widget.AbsListView;

        r6 := @parameter0: android.os.Parcelable;

        r7 = (android.widget.AbsListView$SavedState) r6;

        $r1 = virtualinvoke r7.<android.widget.AbsListView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r7.<android.widget.AbsListView$SavedState: int height>;

        $l1 = (long) $i0;

        r0.<android.widget.AbsListView: long mSyncHeight> = $l1;

        $l2 = r7.<android.widget.AbsListView$SavedState: long selectedId>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label1;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r7;

        $l11 = r7.<android.widget.AbsListView$SavedState: long selectedId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l11;

        $i12 = r7.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i12;

        $i13 = r7.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i13;

        r0.<android.widget.AbsListView: int mSyncMode> = 0;

        goto label2;

     label1:
        $l4 = r7.<android.widget.AbsListView$SavedState: long firstId>;

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r7;

        $l8 = r7.<android.widget.AbsListView$SavedState: long firstId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l8;

        $i9 = r7.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i9;

        $i10 = r7.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i10;

        r0.<android.widget.AbsListView: int mSyncMode> = 1;

     label2:
        $r8 = r7.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        virtualinvoke r0.<android.widget.AbsListView: void setFilterText(java.lang.String)>($r8);

        $r9 = r7.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        if $r9 == null goto label3;

        $r5 = r7.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r5;

     label3:
        $r2 = r7.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        if $r2 == null goto label4;

        $r4 = r7.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r4;

     label4:
        $i6 = r7.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

        $z0 = r7.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        if $z0 == 0 goto label5;

        $i7 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i7 != 3 goto label5;

        r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if r10 == null goto label5;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r10);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r3;

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onRtlPropertiesChanged(int)>(i0);

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalScrollbarPosition()>();

        virtualinvoke r1.<android.widget.FastScroller: void setScrollbarPosition(int)>($i1);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AbsListView r0;
        long l0, $l2, $l6, $l11, $l12;
        android.widget.AbsListView$SavedState $r2, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r26, r28;
        android.os.Parcelable $r3;
        android.util.LongSparseArray $r4, $r5, $r6, $r7, $r8, $r27;
        int $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16, i17, $i18, i20, i21, $i22, i23, i24;
        java.lang.Object $r9;
        java.lang.Integer $r10;
        android.util.SparseBooleanArray $r11, $r25, r31;
        android.view.ActionMode $r12;
        java.lang.String $r13, $r21;
        android.view.View $r14;
        android.widget.ListAdapter $r15;
        boolean $z0, z1, z2, $z3;
        byte $b19;
        android.widget.EditText r29;
        android.text.Editable r30;
        android.widget.RemoteViewsAdapter r33;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        $r2 = new android.widget.AbsListView$SavedState;

        $r3 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r2.<android.widget.AbsListView$SavedState: void <init>(android.os.Parcelable)>($r3);

        r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        if r28 == null goto label01;

        $l11 = r28.<android.widget.AbsListView$SavedState: long selectedId>;

        $r2.<android.widget.AbsListView$SavedState: long selectedId> = $l11;

        $r16 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $l12 = $r16.<android.widget.AbsListView$SavedState: long firstId>;

        $r2.<android.widget.AbsListView$SavedState: long firstId> = $l12;

        $r17 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i13 = $r17.<android.widget.AbsListView$SavedState: int viewTop>;

        $r2.<android.widget.AbsListView$SavedState: int viewTop> = $i13;

        $r18 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i14 = $r18.<android.widget.AbsListView$SavedState: int position>;

        $r2.<android.widget.AbsListView$SavedState: int position> = $i14;

        $r19 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i15 = $r19.<android.widget.AbsListView$SavedState: int height>;

        $r2.<android.widget.AbsListView$SavedState: int height> = $i15;

        $r20 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r21 = $r20.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        $r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r21;

        $r22 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $z0 = $r22.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        $r2.<android.widget.AbsListView$SavedState: boolean inActionMode> = $z0;

        $r23 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i16 = $r23.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        $r2.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i16;

        $r24 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r25 = $r24.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        $r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r25;

        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r27 = $r26.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        $r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = $r27;

        return $r2;

     label01:
        i17 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        z1 = 1;

        if i17 <= 0 goto label02;

        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i10 <= 0 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        l0 = virtualinvoke r0.<android.widget.AbsListView: long getSelectedItemId()>();

        $r2.<android.widget.AbsListView$SavedState: long selectedId> = l0;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r2.<android.widget.AbsListView$SavedState: int height> = $i18;

        $b19 = l0 cmp 0L;

        if $b19 < 0 goto label04;

        $i8 = r0.<android.widget.AbsListView: int mSelectedTop>;

        $r2.<android.widget.AbsListView$SavedState: int viewTop> = $i8;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        $r2.<android.widget.AbsListView$SavedState: int position> = $i9;

        $r2.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        goto label07;

     label04:
        if z2 == 0 goto label06;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i3 <= 0 goto label06;

        $r14 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r14.<android.view.View: int getTop()>();

        $r2.<android.widget.AbsListView$SavedState: int viewTop> = $i4;

        i20 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i21 = i20;

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        if i20 < $i5 goto label05;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        i21 = $i7 - 1;

     label05:
        $r2.<android.widget.AbsListView$SavedState: int position> = i21;

        $r15 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l6 = interfaceinvoke $r15.<android.widget.ListAdapter: long getItemId(int)>(i21);

        $r2.<android.widget.AbsListView$SavedState: long firstId> = $l6;

        goto label07;

     label06:
        $r2.<android.widget.AbsListView$SavedState: int viewTop> = 0;

        $r2.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        $r2.<android.widget.AbsListView$SavedState: int position> = 0;

     label07:
        $r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = null;

        $z3 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z3 == 0 goto label08;

        r29 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r29 == null goto label08;

        r30 = virtualinvoke r29.<android.widget.EditText: android.text.Editable getText()>();

        if r30 == null goto label08;

        $r13 = virtualinvoke r30.<java.lang.Object: java.lang.String toString()>();

        $r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r13;

     label08:
        $i22 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i22 != 3 goto label09;

        $r12 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r12 == null goto label09;

        goto label10;

     label09:
        z1 = 0;

     label10:
        $r2.<android.widget.AbsListView$SavedState: boolean inActionMode> = z1;

        r31 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if r31 == null goto label11;

        $r11 = virtualinvoke r31.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        $r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r11;

     label11:
        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r4 == null goto label14;

        $r5 = new android.util.LongSparseArray;

        specialinvoke $r5.<android.util.LongSparseArray: void <init>()>();

        $r6 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i23 = virtualinvoke $r6.<android.util.LongSparseArray: int size()>();

        i24 = 0;

     label12:
        if i24 >= i23 goto label13;

        $r7 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $l2 = virtualinvoke $r7.<android.util.LongSparseArray: long keyAt(int)>(i24);

        $r8 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r9 = virtualinvoke $r8.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i24);

        $r10 = (java.lang.Integer) $r9;

        virtualinvoke $r5.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l2, $r10);

        i24 = i24 + 1;

        goto label12;

     label13:
        $r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = $r5;

     label14:
        $i1 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $r2.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i1;

        r33 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if r33 == null goto label15;

        virtualinvoke r33.<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>();

     label15:
        return $r2;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.widget.AbsListView: void handleBoundsChange()>();

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        boolean z0, $z1, $z2;
        android.widget.PopupWindow $r2;
        android.widget.Filterable $r3;
        java.lang.IllegalStateException $r4;
        android.widget.ListAdapter r5;
        android.widget.Filter r6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z0 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if z0 != 0 goto label1;

        if i3 <= 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        goto label2;

     label1:
        if z0 == 0 goto label2;

        if i3 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

     label2:
        r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = r5 instanceof android.widget.Filterable;

        if $z2 == 0 goto label4;

        $r3 = (android.widget.Filterable) r5;

        r6 = interfaceinvoke $r3.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if r6 == null goto label3;

        virtualinvoke r6.<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>(r1, r0);

        goto label4;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call onTextChanged with a non filterable adapter");

        throw $r4;

     label4:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6, z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15;
        float $f0, $f1, $f2;
        android.view.View $r1, $r2;
        android.view.MotionEvent r3, r6;
        android.widget.AbsListView$AbsPositionScroller r4;
        android.widget.FastScroller r5;
        android.view.VelocityTracker r7;

        r0 := @this: android.widget.AbsListView;

        r3 := @parameter0: android.view.MotionEvent;

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        z7 = 0;

        if z0 != 0 goto label03;

        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z5 != 0 goto label01;

        $z6 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        if $z6 == 0 goto label02;

     label01:
        z7 = 1;

     label02:
        return z7;

     label03:
        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r4 == null goto label04;

        virtualinvoke r4.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label04:
        $z1 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        if $z1 != 0 goto label18;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z2 != 0 goto label05;

        goto label18;

     label05:
        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        r5 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r5 == null goto label06;

        $z4 = virtualinvoke r5.<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>(r3);

        if $z4 == 0 goto label06;

        return 1;

     label06:
        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        r6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r3);

        i7 = virtualinvoke r3.<android.view.MotionEvent: int getActionMasked()>();

        if i7 != 0 goto label07;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

     label07:
        $i0 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $f0 = (float) $i0;

        virtualinvoke r6.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        if i7 == 0 goto label15;

        if i7 == 1 goto label14;

        if i7 == 2 goto label13;

        if i7 == 3 goto label12;

        if i7 == 5 goto label10;

        if i7 == 6 goto label08;

        goto label16;

     label08:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r3);

        i8 = r0.<android.widget.AbsListView: int mMotionX>;

        i9 = r0.<android.widget.AbsListView: int mMotionY>;

        i10 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i8, i9);

        if i10 < 0 goto label09;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i5 = i10 - $i4;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i5);

        $i6 = virtualinvoke $r2.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i6;

        r0.<android.widget.AbsListView: int mMotionPosition> = i10;

     label09:
        r0.<android.widget.AbsListView: int mLastY> = i9;

        goto label16;

     label10:
        i11 = virtualinvoke r3.<android.view.MotionEvent: int getActionIndex()>();

        i12 = virtualinvoke r3.<android.view.MotionEvent: int getPointerId(int)>(i11);

        $f1 = virtualinvoke r3.<android.view.MotionEvent: float getX(int)>(i11);

        i13 = (int) $f1;

        $f2 = virtualinvoke r3.<android.view.MotionEvent: float getY(int)>(i11);

        i14 = (int) $f2;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = i12;

        r0.<android.widget.AbsListView: int mMotionX> = i13;

        r0.<android.widget.AbsListView: int mMotionY> = i14;

        i15 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i13, i14);

        if i15 < 0 goto label11;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = i15 - $i1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i3;

        r0.<android.widget.AbsListView: int mMotionPosition> = i15;

     label11:
        r0.<android.widget.AbsListView: int mLastY> = i14;

        goto label16;

     label12:
        specialinvoke r0.<android.widget.AbsListView: void onTouchCancel()>();

        goto label16;

     label13:
        specialinvoke r0.<android.widget.AbsListView: void onTouchMove(android.view.MotionEvent,android.view.MotionEvent)>(r3, r6);

        goto label16;

     label14:
        specialinvoke r0.<android.widget.AbsListView: void onTouchUp(android.view.MotionEvent)>(r3);

        goto label16;

     label15:
        specialinvoke r0.<android.widget.AbsListView: void onTouchDown(android.view.MotionEvent)>(r3);

     label16:
        r7 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if r7 == null goto label17;

        virtualinvoke r7.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r6);

     label17:
        virtualinvoke r6.<android.view.MotionEvent: void recycle()>();

        return 1;

     label18:
        return 0;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        android.widget.AbsListView$FlingRunnable r1;
        android.widget.AbsListView$AbsPositionScroller r2;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        if $i2 <= 0 goto label1;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i3 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label6;

     label2:
        i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i0 == 5 goto label3;

        if i0 != 6 goto label6;

     label3:
        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if r1 == null goto label4;

        virtualinvoke r1.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label4:
        r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label5:
        $i1 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i1 == 0 goto label6;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label6:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, z1, $z2, $z3, $z5;
        int i0, $i1, $i2, i3, i4;
        android.widget.AbsListView$FlingRunnable $r1, $r2, r3;
        android.widget.AbsListView$AbsPositionScroller r4;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.AdapterView: void onWindowFocusChanged(boolean)>(z0);

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        z1 = $z2 ^ 1;

        if z0 != 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(0);

        r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if r3 == null goto label2;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r3);

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        staticinvoke <android.widget.AbsListView$FlingRunnable: boolean access$502(android.widget.AbsListView$FlingRunnable,boolean)>($r1, 0);

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r2.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label1:
        $i2 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i2 == 0 goto label2;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label2:
        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        if z1 != 1 goto label6;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i1;

        goto label6;

     label3:
        $z3 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z3 == 0 goto label4;

        $z5 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z5 != 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label4:
        i0 = r0.<android.widget.AbsListView: int mLastTouchMode>;

        i3 = (int) z1;

        if i3 == i0 goto label6;

        if i0 == -1 goto label6;

        if z1 != 1 goto label5;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        goto label6;

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label6:
        i4 = (int) z1;

        r0.<android.widget.AbsListView: int mLastTouchMode> = i4;

        return;
    }

    public boolean performAccessibilityActionInternal(int, android.os.Bundle)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.Rect $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if i0 == 4096 goto label4;

        if i0 == 8192 goto label2;

        if i0 == 16908344 goto label2;

        if i0 == 16908346 goto label4;

        return 0;

     label2:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z3 == 0 goto label3;

        $z4 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollUp()>();

        if $z4 == 0 goto label3;

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i7 = $r4.<android.graphics.Rect: int top>;

        $i9 = $i6 - $i7;

        $r5 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i8 = $r5.<android.graphics.Rect: int bottom>;

        $i10 = $i9 - $i8;

        $i11 = neg $i10;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>($i11, 200);

        return 1;

     label3:
        return 0;

     label4:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollDown()>();

        if $z2 == 0 goto label5;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i4 = $i1 - $i2;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r3.<android.graphics.Rect: int bottom>;

        $i5 = $i4 - $i3;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>($i5, 200);

        return 1;

     label5:
        return 0;
    }

    public boolean performItemClick(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i9, $i10;
        long l1, $l7, $l8, $l11;
        android.view.ActionMode r2, $r24;
        boolean $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z13, z14, z15;
        android.util.SparseBooleanArray $r3, $r4, $r13, $r14, $r15, $r16, $r17;
        android.util.LongSparseArray $r5, $r9, $r11, $r18, $r20, $r22;
        android.widget.AbsListView$MultiChoiceModeWrapper $r6;
        android.widget.ListAdapter $r7, $r8, $r10, $r19, $r21;
        java.lang.Integer $r12, $r23;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z10 = 0;

        z11 = 1;

        i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if i2 == 0 goto label15;

        if i2 == 2 goto label07;

        if i2 != 3 goto label01;

        $r24 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r24 == null goto label01;

        goto label07;

     label01:
        z11 = 1;

        z13 = 0;

        $i9 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i9 != 1 goto label06;

        $r13 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z6 = virtualinvoke $r13.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        $z7 = $z6 ^ 1;

        if $z7 == 0 goto label03;

        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r16.<android.util.SparseBooleanArray: void clear()>();

        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r17.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r18 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r18 == null goto label02;

        $r19 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z9 = interfaceinvoke $r19.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z9 == 0 goto label02;

        $r20 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r20.<android.util.LongSparseArray: void clear()>();

        $r22 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r21 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l11 = interfaceinvoke $r21.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r22.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l11, $r23);

     label02:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

        goto label05;

     label03:
        $r14 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i10 = virtualinvoke $r14.<android.util.SparseBooleanArray: int size()>();

        if $i10 == 0 goto label04;

        $r15 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z8 = virtualinvoke $r15.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z8 != 0 goto label05;

     label04:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

     label05:
        z13 = 1;

        z11 = 1;

        goto label13;

     label06:
        goto label13;

     label07:
        $r3 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z4 = virtualinvoke $r3.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        z14 = $z4 ^ 1;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z14);

        $r5 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r5 == null goto label09;

        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z5 = interfaceinvoke $r7.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z5 == 0 goto label09;

        if z14 == 0 goto label08;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r10 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r10.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r11.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l8, $r12);

        goto label09;

     label08:
        $r9 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l7 = interfaceinvoke $r8.<android.widget.ListAdapter: long getItemId(int)>(i0);

        virtualinvoke $r9.<android.util.LongSparseArray: void delete(long)>($l7);

     label09:
        if z14 == 0 goto label10;

        $i5 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i6 = $i5 + 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

        goto label11;

     label10:
        $i3 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i4 = $i3 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i4;

     label11:
        r2 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        z11 = 1;

        if r2 == null goto label12;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        virtualinvoke $r6.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>(r2, i0, l1, z14);

        z11 = 0;

     label12:
        z13 = 1;

        goto label06;

     label13:
        if z13 == 0 goto label14;

        specialinvoke r0.<android.widget.AbsListView: void updateOnScreenCheckedViews()>();

     label14:
        z10 = 1;

     label15:
        z15 = z10;

        if z11 == 0 goto label16;

        $z3 = specialinvoke r0.<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>(r1, i0, l1);

        z15 = z10 | $z3;

     label16:
        return z15;
    }

    boolean performLongPress(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0;
        long l1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long,float,float)>(r1, i0, l1, -1.0F, -1.0F);

        return $z0;
    }

    boolean performLongPress(android.view.View, int, long, float, float)
    {
        android.widget.AbsListView r0;
        int i0, $i2;
        long l1;
        float f0, f1;
        android.widget.AdapterView$OnItemLongClickListener $r1, $r3;
        android.view.ContextMenu$ContextMenuInfo $r2;
        byte $b3, $b4;
        android.view.ActionMode $r4, r7;
        android.widget.AbsListView$MultiChoiceModeWrapper $r5;
        android.view.View r6;
        boolean z2, z3;

        r0 := @this: android.widget.AbsListView;

        r6 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r4 != null goto label1;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r5);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = r7;

        if r7 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setItemChecked(int,boolean)>(i0, 1);

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

     label1:
        return 1;

     label2:
        z2 = 0;

        $r1 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r1 == null goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z2 = interfaceinvoke $r3.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r6, i0, l1);

     label3:
        z3 = z2;

        if z2 != 0 goto label5;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r6, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r2;

        $b3 = f0 cmpl -1.0F;

        if $b3 == 0 goto label4;

        $b4 = f1 cmpl -1.0F;

        if $b4 == 0 goto label4;

        z3 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View,float,float)>(r0, f0, f1);

        goto label5;

     label4:
        z3 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

     label5:
        if z3 == 0 goto label6;

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

     label6:
        return z3;
    }

    public int pointToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        android.graphics.Rect $r1, r2, r3;
        android.view.View r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

        r3 = r2;

        if r2 != null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame> = $r1;

        r3 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

     label1:
        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i6 = $i2 - 1;

     label2:
        if i6 < 0 goto label4;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i6);

        $i3 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i3 != 0 goto label3;

        virtualinvoke r4.<android.view.View: void getHitRect(android.graphics.Rect)>(r3);

        $z0 = virtualinvoke r3.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i5 = $i4 + i6;

        return $i5;

     label3:
        i6 = i6 + -1;

        goto label2;

     label4:
        return -1;
    }

    public long pointToRowId(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i2, i3;
        android.widget.ListAdapter $r1;
        long $l1;

        r0 := @this: android.widget.AbsListView;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i2, i0);

        if i3 < 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l1 = interfaceinvoke $r1.<android.widget.ListAdapter: long getItemId(int)>(i3);

        return $l1;

     label1:
        return -9223372036854775808L;
    }

    void positionSelector(int, android.view.View)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.View r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View,boolean,float,float)>(i0, r1, 0, -1.0F, -1.0F);

        return;
    }

    void positionSelectorLikeFocus(int, android.view.View)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.view.View r1;
        android.graphics.Rect r2;
        android.graphics.drawable.Drawable $r3;
        float $f0, $f1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r3 == null goto label1;

        $i1 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if $i1 == i0 goto label1;

        if i0 == -1 goto label1;

        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $f0 = virtualinvoke r2.<android.graphics.Rect: float exactCenterX()>();

        $f1 = virtualinvoke r2.<android.graphics.Rect: float exactCenterY()>();

        specialinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View,boolean,float,float)>(i0, r1, 1, $f0, $f1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>(i0, r1);

     label2:
        return;
    }

    void positionSelectorLikeTouch(int, android.view.View, float, float)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.View r1;
        float f0, f1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View,boolean,float,float)>(i0, r1, 1, f0, f1);

        return;
    }

    public void reclaimViews(java.util.List)
    {
        android.widget.AbsListView r0;
        java.util.List r1;
        int i0, $i1, i2;
        android.widget.AbsListView$RecyclerListener r2;
        android.view.View r3;
        android.widget.AbsListView$LayoutParams r4;
        android.widget.AbsListView$RecycleBin $r5, $r6, $r8;
        android.view.ViewGroup$LayoutParams $r7;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.List;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r2 = staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$4400(android.widget.AbsListView$RecycleBin)>($r5);

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        $r7 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.AbsListView$LayoutParams) $r7;

        if r4 == null goto label2;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $i1 = r4.<android.widget.AbsListView$LayoutParams: int viewType>;

        $z0 = virtualinvoke $r8.<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>($i1);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r3.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>(null);

        if r2 == null goto label2;

        interfaceinvoke r2.<android.widget.AbsListView$RecyclerListener: void onMovedToScrapHeap(android.view.View)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void reclaimScrapViews(java.util.List)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        return;
    }

    int reconcileSelectedPosition()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        i5 = i0;

        if i0 >= 0 goto label1;

        i5 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, i5);

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        $i3 = $i2 - 1;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        return $i4;
    }

    void reportScrollStateChange(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.AbsListView$OnScrollListener r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mLastScrollState>;

        if i0 == $i1 goto label1;

        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if r1 == null goto label1;

        r0.<android.widget.AbsListView: int mLastScrollState> = i0;

        interfaceinvoke r1.<android.widget.AbsListView$OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>(r0, i0);

     label1:
        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

     label1:
        specialinvoke r0.<android.widget.AdapterView: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public void requestLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.widget.AdapterView: void requestLayout()>();

     label1:
        return;
    }

    void requestLayoutIfNecessary()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label1:
        return;
    }

    void resetList()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        r0.<android.widget.AbsListView: int mFirstPosition> = 0;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 0;

        r0.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = null;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mOldSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mOldSelectedRowId> = -9223372036854775808L;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    boolean resurrectSelection()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i21, i22, i23, i24, i25, i26, i28, i29, i30, i31, i32, i34, i35, i36, i37, i38, i39, i41;
        android.graphics.Rect $r1, $r2;
        android.view.View $r3, r4, r5;
        boolean z2, z3;
        android.widget.AbsListView$FlingRunnable $r6;
        android.widget.AbsListView$AbsPositionScroller r7;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 > 0 goto label01;

        return 0;

     label01:
        i21 = 0;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i22 = $r1.<android.graphics.Rect: int top>;

        $i4 = r0.<android.widget.AbsListView: int mBottom>;

        $i3 = r0.<android.widget.AbsListView: int mTop>;

        $i6 = $i4 - $i3;

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i5 = $r2.<android.graphics.Rect: int bottom>;

        i23 = $i6 - $i5;

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i24 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        z2 = 1;

        if i24 < i1 goto label04;

        $i13 = i1 + i0;

        if i24 >= $i13 goto label04;

        $i14 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i15 = i24 - $i14;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i15);

        i25 = virtualinvoke r4.<android.view.View: int getTop()>();

        i26 = virtualinvoke r4.<android.view.View: int getBottom()>();

        if i25 >= i22 goto label02;

        $i19 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i25 = i22 + $i19;

        goto label03;

     label02:
        if i26 <= i23 goto label03;

        $i16 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        $i17 = i23 - $i16;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i25 = $i17 - $i18;

     label03:
        goto label16;

     label04:
        if i24 >= i1 goto label10;

        i28 = 0;

     label05:
        i29 = i21;

        i24 = i1;

        if i28 >= i0 goto label09;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i28);

        i30 = virtualinvoke $r3.<android.view.View: int getTop()>();

        i31 = i21;

        i32 = i22;

        if i28 != 0 goto label07;

        if i1 > 0 goto label06;

        i31 = i30;

        i32 = i22;

        if i30 >= i22 goto label07;

     label06:
        $i12 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i32 = i22 + $i12;

        i31 = i30;

     label07:
        if i30 < i32 goto label08;

        i34 = i1 + i28;

        i29 = i30;

        i24 = i34;

        goto label09;

     label08:
        i28 = i28 + 1;

        i21 = i31;

        i22 = i32;

        goto label05;

     label09:
        i25 = i29;

        goto label16;

     label10:
        i35 = r0.<android.widget.AbsListView: int mItemCount>;

        z2 = 0;

        i36 = i0 - 1;

        i25 = 0;

     label11:
        if i36 < 0 goto label15;

        r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i36);

        i37 = virtualinvoke r5.<android.view.View: int getTop()>();

        i2 = virtualinvoke r5.<android.view.View: int getBottom()>();

        i38 = i25;

        i39 = i23;

        $i9 = i0 - 1;

        if i36 != $i9 goto label13;

        $i10 = i1 + i0;

        if $i10 < i35 goto label12;

        i38 = i37;

        i39 = i23;

        if i2 <= i23 goto label13;

     label12:
        $i11 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i39 = i23 - $i11;

        i38 = i37;

     label13:
        if i2 > i39 goto label14;

        i25 = i37;

        i24 = i1 + i36;

        goto label16;

     label14:
        i36 = i36 + -1;

        i25 = i38;

        i23 = i39;

        goto label11;

     label15:
        $i7 = i1 + i0;

        i24 = $i7 - 1;

     label16:
        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r6);

        r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r7 == null goto label17;

        virtualinvoke r7.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label17:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        r0.<android.widget.AbsListView: int mSpecificTop> = i25;

        i41 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i24, z2);

        if i41 < i1 goto label18;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        if i41 > $i8 goto label18;

        r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        virtualinvoke r0.<android.widget.AbsListView: void setSelectionInt(int)>(i41);

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        goto label19;

     label18:
        i41 = -1;

     label19:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        z3 = 0;

        if i41 < 0 goto label20;

        z3 = 1;

     label20:
        return z3;
    }

    boolean resurrectSelectionIfNeeded()
    {
        android.widget.AbsListView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 >= 0 goto label1;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return 1;

     label1:
        return 0;
    }

    public void scrollListBy(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i2 = neg i0;

        $i1 = neg i0;

        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>($i2, $i1);

        return;
    }

    boolean sendToTextFilter(int, int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i5, $i6, $i7;
        android.view.KeyEvent r1, r9;
        boolean $z1, $z2, $z3, $z4, $z5, z7, z9, z10, z11;
        android.widget.EditText $r2, $r3, $r4, $r5;
        long $l4;
        android.widget.PopupWindow r6;
        android.view.KeyEvent$DispatcherState r7;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean acceptFilter()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        z7 = 0;

        if i0 == 4 goto label05;

        if i0 == 62 goto label04;

        if i0 == 66 goto label03;

        if i0 == 160 goto label03;

        tableswitch(i0)
        {
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label03;
            case 23: goto label03;
            default: goto label02;
        };

     label02:
        z9 = 1;

        goto label10;

     label03:
        z9 = 0;

        goto label10;

     label04:
        z9 = r0.<android.widget.AbsListView: boolean mFiltered>;

        goto label10;

     label05:
        z10 = 0;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label09;

        r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z10 = 0;

        if r6 == null goto label09;

        z10 = 0;

        $z3 = virtualinvoke r6.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 == 0 goto label09;

        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i5 != 0 goto label08;

        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i7 != 0 goto label08;

        r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r7 == null goto label06;

        virtualinvoke r7.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label06:
        z10 = 1;

     label07:
        goto label09;

     label08:
        z10 = 0;

        $i6 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i6 != 1 goto label07;

        z10 = 0;

        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z4 == 0 goto label09;

        z10 = 0;

        $z5 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z5 != 0 goto label09;

        z10 = 1;

        $r5 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r5.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

     label09:
        z9 = 0;

        z7 = z10;

     label10:
        z11 = z7;

        if z9 == 0 goto label15;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        r9 = r1;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 <= 0 goto label11;

        $l4 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        r9 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r1, $l4, 0);

     label11:
        i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if i2 == 0 goto label14;

        if i2 == 1 goto label13;

        if i2 == 2 goto label12;

        z11 = z7;

        goto label15;

     label12:
        $r4 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z11 = virtualinvoke $r4.<android.widget.EditText: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        goto label15;

     label13:
        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z11 = virtualinvoke $r3.<android.widget.EditText: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r9);

        goto label15;

     label14:
        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z11 = virtualinvoke $r2.<android.widget.EditText: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r9);

     label15:
        return z11;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.AbsListView r0;
        android.widget.Adapter r1;
        android.widget.ListAdapter $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.ListAdapter) r1;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r2);

        return;
    }

    public void setAdapter(android.widget.ListAdapter)
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter r1, $r2;
        boolean z0;
        int $i0;
        android.util.LongSparseArray $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.ListAdapter;

        if r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        z0 = interfaceinvoke $r2.<android.widget.ListAdapter: boolean hasStableIds()>();

        r0.<android.widget.AbsListView: boolean mAdapterHasStableIds> = z0;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        if z0 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 != null goto label1;

        $r4 = new android.util.LongSparseArray;

        specialinvoke $r4.<android.util.LongSparseArray: void <init>()>();

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r4;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void clearChoices()>();

        return;
    }

    public void setBottomEdgeEffectColor(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setColor(int)>(i0);

        specialinvoke r0.<android.widget.AbsListView: void invalidateBottomGlow()>();

        return;
    }

    public void setCacheColorHint(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, i3;
        android.widget.AbsListView$RecycleBin $r1;
        android.view.View $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i2 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if i0 == $i2 goto label3;

        r0.<android.widget.AbsListView: int mCacheColorHint> = i0;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i3);

        virtualinvoke $r2.<android.view.View: void setDrawingCacheBackgroundColor(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)>(i0);

     label3:
        return;
    }

    public void setChoiceMode(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;
        android.util.SparseBooleanArray $r1, $r4;
        android.util.LongSparseArray $r2, $r3;
        boolean $z0;
        android.view.ActionMode r5;
        android.widget.ListAdapter r6;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mChoiceMode> = i0;

        r5 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if r5 == null goto label1;

        virtualinvoke r5.<android.view.ActionMode: void finish()>();

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = null;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label4;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 != null goto label2;

        $r4 = new android.util.SparseBooleanArray;

        specialinvoke $r4.<android.util.SparseBooleanArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r4;

     label2:
        $r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r2 != null goto label3;

        r6 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r6 == null goto label3;

        $z0 = interfaceinvoke r6.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r3 = new android.util.LongSparseArray;

        specialinvoke $r3.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r3;

     label3:
        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label4;

        virtualinvoke r0.<android.widget.AbsListView: void clearChoices()>();

        virtualinvoke r0.<android.widget.AbsListView: void setLongClickable(boolean)>(1);

     label4:
        return;
    }

    public void setDrawSelectorOnTop(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = z0;

        return;
    }

    public void setEdgeEffectColor(int)
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.AbsListView: void setTopEdgeEffectColor(int)>(i0);

        virtualinvoke r0.<android.widget.AbsListView: void setBottomEdgeEffectColor(int)>(i0);

        return;
    }

    public void setFastScrollAlwaysVisible(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z3, $z4;
        android.widget.AbsListView$2 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z1 == z0 goto label3;

        if z0 == 0 goto label1;

        $z3 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z3 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>(1);

     label1:
        r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible> = z0;

        $z4 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z4 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

        goto label3;

     label2:
        $r1 = new android.widget.AbsListView$2;

        specialinvoke $r1.<android.widget.AbsListView$2: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

     label3:
        return;
    }

    public void setFastScrollEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        android.widget.AbsListView$1 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z1 == z0 goto label2;

        r0.<android.widget.AbsListView: boolean mFastScrollEnabled> = z0;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

        goto label2;

     label1:
        $r1 = new android.widget.AbsListView$1;

        specialinvoke $r1.<android.widget.AbsListView$1: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

     label2:
        return;
    }

    public void setFastScrollStyle(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 != null goto label1;

        r0.<android.widget.AbsListView: int mFastScrollStyle> = i0;

        goto label2;

     label1:
        virtualinvoke r1.<android.widget.FastScroller: void setStyle(int)>(i0);

     label2:
        return;
    }

    public void setFilterText(java.lang.String)
    {
        android.widget.AbsListView r0;
        java.lang.String r1;
        android.widget.ListAdapter r2;
        boolean $z0, $z1, $z2;
        android.widget.EditText $r3, $r4;
        int $i0;
        android.widget.PopupWindow $r5;
        android.widget.AbsListView$AdapterDataSetObserver $r6;
        android.widget.Filterable $r7;
        android.widget.Filter $r8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(0);

        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r3.<android.widget.EditText: void setText(java.lang.CharSequence)>(r1);

        $r4 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r4.<android.widget.EditText: void setSelection(int)>($i0);

        r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = r2 instanceof android.widget.Filterable;

        if $z2 == 0 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r5 != null goto label1;

        $r7 = (android.widget.Filterable) r2;

        $r8 = interfaceinvoke $r7.<android.widget.Filterable: android.widget.Filter getFilter()>();

        virtualinvoke $r8.<android.widget.Filter: void filter(java.lang.CharSequence)>(r1);

     label1:
        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        virtualinvoke $r6.<android.widget.AbsListView$AdapterDataSetObserver: void clearSavedState()>();

     label2:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, i4;
        boolean z0, $z1, $z2, z3;
        android.widget.PopupWindow r1;

        r0 := @this: android.widget.AbsListView;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean setFrame(int,int,int,int)>(i4, i0, i1, i2);

        if z0 == 0 goto label3;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i3 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        $z1 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z1 == 0 goto label3;

        if z3 == 0 goto label3;

        r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if r1 == null goto label3;

        $z2 = virtualinvoke r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

     label3:
        return z0;
    }

    public void setFriction(float)
    {
        android.widget.AbsListView r0;
        float f0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r4;
        android.widget.OverScroller $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r4 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r4.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r4;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $r3 = staticinvoke <android.widget.AbsListView$FlingRunnable: android.widget.OverScroller access$2000(android.widget.AbsListView$FlingRunnable)>($r2);

        virtualinvoke $r3.<android.widget.OverScroller: void setFriction(float)>(f0);

        return;
    }

    public void setItemChecked(int, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, z11, z12, $z13;
        android.widget.AbsListView$MultiChoiceModeWrapper r1, $r7, $r26;
        long l0, $l5, $l6, $l8;
        android.util.SparseBooleanArray $r2, $r3, $r15, $r16, $r17, $r18;
        android.util.LongSparseArray $r4, $r10, $r12, $r14, $r20, $r22;
        android.widget.ListAdapter $r5, $r8, $r9, $r11, $r19, $r23;
        android.view.ActionMode $r6, $r24, $r27, $r28;
        int $i1, $i2, $i3, $i4, $i7, i9, i10, i11;
        java.lang.Integer $r13, $r21;
        java.lang.IllegalStateException $r25;

        r0 := @this: android.widget.AbsListView;

        i9 := @parameter0: int;

        z0 := @parameter1: boolean;

        i10 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if i10 != 0 goto label01;

        return;

     label01:
        if z0 == 0 goto label03;

        if i10 != 3 goto label03;

        $r24 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r24 != null goto label03;

        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if r1 == null goto label02;

        $z7 = virtualinvoke r1.<android.widget.AbsListView$MultiChoiceModeWrapper: boolean hasWrappedCallback()>();

        if $z7 == 0 goto label02;

        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r27 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r26);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r27;

        goto label03;

     label02:
        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AbsListView: attempted to start selection mode for CHOICE_MODE_MULTIPLE_MODAL but no choice mode callback was supplied. Call setMultiChoiceModeListener to set a callback.");

        throw $r25;

     label03:
        i11 = r0.<android.widget.AbsListView: int mChoiceMode>;

        z8 = 0;

        if i11 == 2 goto label14;

        if i11 != 3 goto label04;

        goto label14;

     label04:
        $r14 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r14 == null goto label05;

        $r23 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r23.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z6 == 0 goto label05;

        z9 = 1;

        goto label06;

     label05:
        z9 = 0;

     label06:
        $z10 = virtualinvoke r0.<android.widget.AbsListView: boolean isItemChecked(int)>(i9);

        if $z10 == z0 goto label07;

        z11 = 1;

        goto label08;

     label07:
        z11 = 0;

     label08:
        if z0 != 0 goto label09;

        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean isItemChecked(int)>(i9);

        if $z5 == 0 goto label10;

     label09:
        $r15 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r15.<android.util.SparseBooleanArray: void clear()>();

        if z9 == 0 goto label10;

        $r22 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r22.<android.util.LongSparseArray: void clear()>();

     label10:
        if z0 == 0 goto label12;

        $r18 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r18.<android.util.SparseBooleanArray: void put(int,boolean)>(i9, 1);

        if z9 == 0 goto label11;

        $r20 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r19 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r19.<android.widget.ListAdapter: long getItemId(int)>(i9);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        virtualinvoke $r20.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l8, $r21);

     label11:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

        z12 = z11;

        goto label21;

     label12:
        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i7 = virtualinvoke $r16.<android.util.SparseBooleanArray: int size()>();

        if $i7 == 0 goto label13;

        z12 = z11;

        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z4 = virtualinvoke $r17.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z4 != 0 goto label21;

     label13:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        z12 = z11;

        goto label21;

     label14:
        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        z1 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i9);

        $r3 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i9, z0);

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r4 == null goto label16;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z3 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z3 == 0 goto label16;

        if z0 == 0 goto label15;

        $r12 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r11 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l6 = interfaceinvoke $r11.<android.widget.ListAdapter: long getItemId(int)>(i9);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        virtualinvoke $r12.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l6, $r13);

        goto label16;

     label15:
        $r10 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l5 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i9);

        virtualinvoke $r10.<android.util.LongSparseArray: void delete(long)>($l5);

     label16:
        if z1 == z0 goto label17;

        z8 = 1;

     label17:
        if z8 == 0 goto label19;

        if z0 == 0 goto label18;

        $i3 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i4 = $i3 + 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i4;

        goto label19;

     label18:
        $i1 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i2 = $i1 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i2;

     label19:
        $r28 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r28 == null goto label20;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l0 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i9);

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r6 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r7.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r6, i9, l0, z0);

     label20:
        z12 = z8;

     label21:
        $z13 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z13 != 0 goto label22;

        $z2 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z2 != 0 goto label22;

        if z12 == 0 goto label22;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

     label22:
        return;
    }

    public void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$MultiChoiceModeListener r1;
        android.widget.AbsListView$MultiChoiceModeWrapper $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$MultiChoiceModeListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r2 != null goto label1;

        $r4 = new android.widget.AbsListView$MultiChoiceModeWrapper;

        specialinvoke $r4.<android.widget.AbsListView$MultiChoiceModeWrapper: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback> = $r4;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        virtualinvoke $r3.<android.widget.AbsListView$MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView$MultiChoiceModeListener)>(r1);

        return;
    }

    public void setOnScrollListener(android.widget.AbsListView$OnScrollListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$OnScrollListener r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$OnScrollListener;

        r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener> = r1;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return;
    }

    public void setRecyclerListener(android.widget.AbsListView$RecyclerListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$RecyclerListener r1;
        android.widget.AbsListView$RecycleBin $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$RecyclerListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$4402(android.widget.AbsListView$RecycleBin,android.widget.AbsListView$RecyclerListener)>($r2, r1);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent)
    {
        android.widget.AbsListView r0;
        android.content.Intent r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent,boolean)>(r1, 0);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        android.widget.RemoteViewsAdapter $r1, $r2, $r4, $r7;
        android.content.Context $r3;
        android.content.Intent$FilterComparison $r5, $r6;
        android.content.Intent $r8, r9;

        r0 := @this: android.widget.AbsListView;

        r9 := @parameter0: android.content.Intent;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r1 == null goto label1;

        $r5 = new android.content.Intent$FilterComparison;

        specialinvoke $r5.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r9);

        $r6 = new android.content.Intent$FilterComparison;

        $r7 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r8 = virtualinvoke $r7.<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>();

        specialinvoke $r6.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r8);

        $z2 = virtualinvoke $r5.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        $r2 = new android.widget.RemoteViewsAdapter;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback,boolean)>($r3, r9, r0, z0);

        r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter> = $r2;

        $z1 = virtualinvoke $r2.<android.widget.RemoteViewsAdapter: boolean isDataReady()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r4);

     label2:
        return;
    }

    public java.lang.Runnable setRemoteViewsAdapterAsync(android.content.Intent)
    {
        android.widget.AbsListView r0;
        android.content.Intent r1;
        android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction;

        specialinvoke $r2.<android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction: void <init>(android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback,android.content.Intent)>(r0, r1);

        return $r2;
    }

    public void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.AbsListView r0;
        android.widget.RemoteViews$OnClickHandler r1;
        android.widget.RemoteViewsAdapter r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.RemoteViews$OnClickHandler;

        r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>(r1);

     label1:
        return;
    }

    public void setScrollBarStyle(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setScrollBarStyle(int)>(i0);

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.FastScroller: void setScrollBarStyle(int)>(i0);

     label1:
        return;
    }

    public void setScrollIndicators(android.view.View, android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r0.<android.widget.AbsListView: android.view.View mScrollUp> = r1;

        r0.<android.widget.AbsListView: android.view.View mScrollDown> = r2;

        return;
    }

    public void setScrollingCacheEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label1:
        r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled> = z0;

        return;
    }

    public void setSelectionFromTop(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, i5;
        android.widget.AbsListView$AbsPositionScroller r1;
        android.widget.ListAdapter $r2, $r4;
        boolean $z0, $z1;
        android.graphics.Rect $r3;
        long $l4;

        r0 := @this: android.widget.AbsListView;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i5, 1);

        i5 = i1;

        if i1 < 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i1);

        i5 = i1;

        goto label3;

     label2:
        r0.<android.widget.AbsListView: int mResurrectToPosition> = i5;

     label3:
        if i5 < 0 goto label6;

        r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $i3 = $i2 + i0;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i3;

        $z1 = r0.<android.widget.AbsListView: boolean mNeedSync>;

        if $z1 == 0 goto label4;

        r0.<android.widget.AbsListView: int mSyncPosition> = i5;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l4 = interfaceinvoke $r4.<android.widget.ListAdapter: long getItemId(int)>(i5);

        r0.<android.widget.AbsListView: long mSyncRowId> = $l4;

     label4:
        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r1 == null goto label5;

        virtualinvoke r1.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

     label6:
        return;
    }

    abstract void setSelectionInt(int);

    public void setSelector(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setSelector(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r3, r4;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r4 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke r0.<android.widget.AbsListView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r3);

     label1:
        r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector> = r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i0 = $r2.<android.graphics.Rect: int left>;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = $i0;

        $i1 = $r2.<android.graphics.Rect: int top>;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = $i1;

        $i2 = $r2.<android.graphics.Rect: int right>;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = $i2;

        $i3 = $r2.<android.graphics.Rect: int bottom>;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = $i3;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = z0;

        return;
    }

    public void setStackFromBottom(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 == z0 goto label1;

        r0.<android.widget.AbsListView: boolean mStackFromBottom> = z0;

        virtualinvoke r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

     label1:
        return;
    }

    public void setTextFilterEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mTextFilterEnabled> = z0;

        return;
    }

    public void setTopEdgeEffectColor(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setColor(int)>(i0);

        specialinvoke r0.<android.widget.AbsListView: void invalidateTopGlow()>();

        return;
    }

    public void setTranscriptMode(int)
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mTranscriptMode> = i0;

        return;
    }

    public void setVelocityScale(float)
    {
        android.widget.AbsListView r0;
        float f0;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        r0.<android.widget.AbsListView: float mVelocityScale> = f0;

        return;
    }

    public void setVerticalScrollbarPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setVerticalScrollbarPosition(int)>(i0);

        r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.FastScroller: void setScrollbarPosition(int)>(i0);

     label1:
        return;
    }

    void setVisibleRangeHint(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.RemoteViewsAdapter r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>(i0, i1);

     label1:
        return;
    }

    public final boolean shouldDrawSelector()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    boolean shouldShowSelector()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z3 == 0 goto label2;

     label1:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z2 == 0 goto label3;

     label2:
        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        return z4;
    }

    public boolean showContextMenu()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean showContextMenuInternal(float,float,boolean)>(0.0F, 0.0F, 0);

        return $z0;
    }

    public boolean showContextMenu(float, float)
    {
        android.widget.AbsListView r0;
        float f0, f1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean showContextMenuInternal(float,float,boolean)>(f0, f1, 1);

        return $z0;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isShowingContextMenuWithCoords()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean showContextMenuForChildInternal(android.view.View,float,float,boolean)>(r1, 0.0F, 0.0F, 0);

        return $z1;
    }

    public boolean showContextMenuForChild(android.view.View, float, float)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        float f0, f1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean showContextMenuForChildInternal(android.view.View,float,float,boolean)>(r1, f0, f1, 1);

        return $z0;
    }

    public void smoothScrollBy(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean,boolean)>(i0, i1, 0, 0);

        return;
    }

    void smoothScrollBy(int, int, boolean, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, z1;
        android.widget.AbsListView$AbsPositionScroller r1;
        android.widget.AbsListView$FlingRunnable $r2, $r5, $r6, $r7;
        android.view.View $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r2 != null goto label1;

        $r5 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r5.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r5;

     label1:
        i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i4 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i6 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        if i0 == 0 goto label4;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i7 == 0 goto label4;

        if i3 == 0 goto label4;

        if i2 != 0 goto label2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i11 = virtualinvoke $r4.<android.view.View: int getTop()>();

        if $i11 != i4 goto label2;

        if i0 < 0 goto label4;

     label2:
        $i12 = i2 + i3;

        $i13 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i12 != $i13 goto label3;

        $i8 = i3 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        $i9 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i10 = i5 - i6;

        if $i9 != $i10 goto label3;

        if i0 <= 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r6.<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean,boolean)>(i0, i1, z0, z1);

        goto label5;

     label4:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r7.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if r1 == null goto label5;

        virtualinvoke r1.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label5:
        return;
    }

    void smoothScrollByOffset(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i10, i11, i12, $i13, $i14, $i15, $i16;
        android.view.View r1;
        float f0, $f1, $f2;
        android.graphics.Rect $r3;
        boolean $z0;
        byte $b8, $b9;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i10 = -1;

        if i0 >= 0 goto label1;

        i10 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        goto label2;

     label1:
        if i0 <= 0 goto label2;

        i10 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

     label2:
        if i10 <= -1 goto label5;

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        $i3 = i10 - $i2;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r1 == null goto label5;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        i11 = i10;

        $z0 = virtualinvoke r1.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r3);

        if $z0 == 0 goto label4;

        i12 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i1 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i4 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i5 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i6 = $i4 * $i5;

        $f2 = (float) $i6;

        $i7 = i12 * i1;

        $f1 = (float) $i7;

        f0 = $f2 / $f1;

        if i0 >= 0 goto label3;

        $b9 = f0 cmpg 0.75F;

        if $b9 >= 0 goto label3;

        i11 = i10 + 1;

        goto label4;

     label3:
        i11 = i10;

        if i0 <= 0 goto label4;

        i11 = i10;

        $b8 = f0 cmpg 0.75F;

        if $b8 >= 0 goto label4;

        i11 = i10 - 1;

     label4:
        $i13 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i14 = i11 + i0;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollToPosition(int)>($i16);

     label5:
        return;
    }

    public void smoothScrollToPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void start(int)>(i0);

        return;
    }

    public void smoothScrollToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void start(int,int)>(i0, i1);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void startWithOffset(int,int)>(i0, i1);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void startWithOffset(int,int,int)>(i0, i1, i2);

        return;
    }

    boolean touchModeDrawsInPressedState()
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean trackMotionScroll(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, i58, i59, i60, i61, i62, i63, i64, $i65, $i66, i67, i69, i70, i71, i72, i74, i75, i76, i77, i78, i79, $i80, $i81, i82, i83, i84, i85;
        boolean z0, $z1, z2, z3, z4, z6, z7;
        android.view.View $r1, $r2, $r4, $r5, r10, r11;
        android.graphics.Rect $r3, r9;
        android.widget.AbsListView$RecycleBin $r6, $r7, $r8, $r12;

        r0 := @this: android.widget.AbsListView;

        i58 := @parameter0: int;

        i59 := @parameter1: int;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 != 0 goto label01;

        return 1;

     label01:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i7 = i0 - 1;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i7);

        i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        r9 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i60 = 0;

        i61 = 0;

        $i8 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i9 = $i8 & 34;

        if $i9 != 34 goto label02;

        i60 = r9.<android.graphics.Rect: int top>;

        i61 = r9.<android.graphics.Rect: int bottom>;

     label02:
        $i10 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i3 = $i10 - i61;

        $i11 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i12 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i14 = $i11 - $i12;

        $i13 = r0.<android.widget.AbsListView: int mPaddingTop>;

        i62 = $i14 - $i13;

        if i58 >= 0 goto label03;

        $i56 = i62 - 1;

        $i57 = neg $i56;

        i63 = staticinvoke <java.lang.Math: int max(int,int)>($i57, i58);

        goto label04;

     label03:
        $i15 = i62 - 1;

        i63 = staticinvoke <java.lang.Math: int min(int,int)>($i15, i58);

     label04:
        if i59 >= 0 goto label05;

        $i54 = i62 - 1;

        $i55 = neg $i54;

        i64 = staticinvoke <java.lang.Math: int max(int,int)>($i55, i59);

        goto label06;

     label05:
        $i16 = i62 - 1;

        i64 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i59);

     label06:
        i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if i4 != 0 goto label07;

        $i52 = r9.<android.graphics.Rect: int top>;

        $i53 = i1 - $i52;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i53;

        goto label08;

     label07:
        $i17 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i18 = $i17 + i64;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i18;

     label08:
        $i20 = i4 + i0;

        $i19 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i20 != $i19 goto label09;

        $i50 = r9.<android.graphics.Rect: int bottom>;

        $i51 = $i50 + i2;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i51;

        goto label10;

     label09:
        $i21 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i22 = $i21 + i64;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i22;

     label10:
        if i4 != 0 goto label11;

        $i49 = r9.<android.graphics.Rect: int top>;

        if i1 < $i49 goto label11;

        if i64 < 0 goto label11;

        z2 = 1;

        goto label12;

     label11:
        z2 = 0;

     label12:
        $i65 = i4 + i0;

        $i66 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i65 != $i66 goto label13;

        $i46 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i47 = r9.<android.graphics.Rect: int bottom>;

        $i48 = $i46 - $i47;

        if i2 > $i48 goto label13;

        if i64 > 0 goto label13;

        z3 = 1;

        goto label14;

     label13:
        z3 = 0;

     label14:
        if z2 != 0 goto label40;

        if z3 == 0 goto label15;

        goto label40;

     label15:
        if i64 >= 0 goto label16;

        z4 = 1;

        goto label17;

     label16:
        z4 = 0;

     label17:
        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if z0 == 0 goto label18;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

     label18:
        i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeaderViewsCount()>();

        $i23 = r0.<android.widget.AbsListView: int mItemCount>;

        $i24 = virtualinvoke r0.<android.widget.AbsListView: int getFooterViewsCount()>();

        i6 = $i23 - $i24;

        i67 = 0;

        i69 = 0;

        if z4 == 0 goto label24;

        i70 = neg i64;

        i71 = i70;

        $i42 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i43 = $i42 & 34;

        if $i43 != 34 goto label19;

        $i45 = r9.<android.graphics.Rect: int top>;

        i71 = i70 + $i45;

     label19:
        i72 = 0;

     label20:
        if i72 >= i0 goto label23;

        r10 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i72);

        $i44 = virtualinvoke r10.<android.view.View: int getBottom()>();

        if $i44 < i71 goto label21;

        goto label23;

     label21:
        i69 = i69 + 1;

        i74 = i4 + i72;

        if i74 < i5 goto label22;

        if i74 >= i6 goto label22;

        virtualinvoke r10.<android.view.View: void clearAccessibilityFocus()>();

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r8.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r10, i74);

        goto label22;

     label22:
        i72 = i72 + 1;

        goto label20;

     label23:
        i67 = 0;

        goto label29;

     label24:
        $i25 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i75 = $i25 - i64;

        i76 = i75;

        $i26 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i27 = $i26 & 34;

        if $i27 != 34 goto label25;

        $i41 = r9.<android.graphics.Rect: int bottom>;

        i76 = i75 - $i41;

     label25:
        i77 = i0 - 1;

        i69 = 0;

        i78 = i77;

     label26:
        if i78 < 0 goto label29;

        r11 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i78);

        $i40 = virtualinvoke r11.<android.view.View: int getTop()>();

        if $i40 > i76 goto label27;

        goto label29;

     label27:
        i67 = i78;

        i69 = i69 + 1;

        i79 = i4 + i78;

        if i79 < i5 goto label28;

        if i79 >= i6 goto label28;

        virtualinvoke r11.<android.view.View: void clearAccessibilityFocus()>();

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r7.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r11, i79);

        goto label28;

     label28:
        i78 = i78 + -1;

        goto label26;

     label29:
        $i80 = r0.<android.widget.AbsListView: int mMotionViewOriginalTop>;

        $i81 = $i80 + i63;

        r0.<android.widget.AbsListView: int mMotionViewNewTop> = $i81;

        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 1;

        if i69 <= 0 goto label30;

        virtualinvoke r0.<android.widget.AbsListView: void detachViewsFromParent(int,int)>(i67, i69);

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void removeSkippedScrap()>();

     label30:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

        if $z1 != 0 goto label31;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label31:
        virtualinvoke r0.<android.widget.AbsListView: void offsetChildrenTopAndBottom(int)>(i64);

        if z4 == 0 goto label32;

        $i38 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i39 = $i38 + i69;

        r0.<android.widget.AbsListView: int mFirstPosition> = $i39;

     label32:
        i82 = staticinvoke <java.lang.Math: int abs(int)>(i64);

        $i28 = i60 - i1;

        if $i28 < i82 goto label33;

        $i37 = i2 - i3;

        if $i37 >= i82 goto label34;

     label33:
        virtualinvoke r0.<android.widget.AbsListView: void fillGap(boolean)>(z4);

     label34:
        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r12.<android.widget.AbsListView$RecycleBin: void fullyDetachScrapViews()>();

        z6 = 0;

        if z0 != 0 goto label37;

        $i32 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i32 == -1 goto label36;

        $i34 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i33 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i83 = $i34 - $i33;

        if i83 < 0 goto label35;

        $i35 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i83 >= $i35 goto label35;

        $i36 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i83);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i36, $r5);

        z6 = 1;

        goto label35;

     label35:
        goto label38;

     label36:
        goto label37;

     label37:
        i84 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if i84 == -1 goto label35;

        $i29 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i85 = i84 - $i29;

        z6 = 0;

        if i85 < 0 goto label38;

        z6 = 0;

        $i30 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i85 >= $i30 goto label38;

        $i31 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i85);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i31, $r4);

        z6 = 1;

     label38:
        if z6 != 0 goto label39;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label39:
        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 0;

     label40:
        if i64 == 0 goto label41;

        z7 = 1;

        goto label42;

     label41:
        z7 = 0;

     label42:
        return z7;
    }

    void updateScrollIndicators()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;
        android.view.View r1, r2;
        byte b1, b2;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if r1 == null goto label3;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollUp()>();

        if $z1 == 0 goto label1;

        b1 = 0;

        goto label2;

     label1:
        b1 = 4;

     label2:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(b1);

     label3:
        r2 = r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        if r2 == null goto label6;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollDown()>();

        if $z0 == 0 goto label4;

        b2 = 0;

        goto label5;

     label4:
        b2 = 4;

     label5:
        virtualinvoke r2.<android.view.View: void setVisibility(int)>(b2);

     label6:
        return;
    }

    void updateSelectorState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1, $z3;
        int[] $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        if $z1 == 0 goto label1;

        $r3 = specialinvoke r0.<android.widget.AbsListView: int[] getDrawableStateForSelector()>();

        $z3 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        if $z3 == 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

        goto label2;

     label1:
        $r2 = <android.util.StateSet: int[] NOTHING>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label2:
        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == r1 goto label2;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
