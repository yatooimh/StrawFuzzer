public abstract class android.widget.AbsSpinner extends android.widget.AdapterView
{
    private static final java.lang.String LOG_TAG;
    android.widget.SpinnerAdapter mAdapter;
    private android.database.DataSetObserver mDataSetObserver;
    int mHeightMeasureSpec;
    final android.widget.AbsSpinner$RecycleBin mRecycler;
    int mSelectionBottomPadding;
    int mSelectionLeftPadding;
    int mSelectionRightPadding;
    int mSelectionTopPadding;
    final android.graphics.Rect mSpinnerPadding;
    private android.graphics.Rect mTouchFrame;
    int mWidthMeasureSpec;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/widget/AbsSpinner;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.AbsSpinner: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.AbsSpinner r0;
        android.content.Context r1;
        android.graphics.Rect $r2;
        android.widget.AbsSpinner$RecycleBin $r3;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsSpinner: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionBottomPadding> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding> = $r2;

        $r3 = new android.widget.AbsSpinner$RecycleBin;

        specialinvoke $r3.<android.widget.AbsSpinner$RecycleBin: void <init>(android.widget.AbsSpinner)>(r0);

        r0.<android.widget.AbsSpinner: android.widget.AbsSpinner$RecycleBin mRecycler> = $r3;

        specialinvoke r0.<android.widget.AbsSpinner: void initAbsSpinner()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsSpinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsSpinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AbsSpinner r0;
        int i0, i1, $i2;
        android.content.res.TypedArray r1;
        android.graphics.Rect $r2;
        android.widget.AbsSpinner$RecycleBin $r3;
        int[] $r4, $r5;
        android.widget.ArrayAdapter $r6;
        android.content.Context r7;
        android.util.AttributeSet r8;
        java.lang.CharSequence[] r9;

        r0 := @this: android.widget.AbsSpinner;

        r7 := @parameter0: android.content.Context;

        r8 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r7, r8, i0, i1);

        r0.<android.widget.AbsSpinner: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsSpinner: int mSelectionBottomPadding> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding> = $r2;

        $r3 = new android.widget.AbsSpinner$RecycleBin;

        specialinvoke $r3.<android.widget.AbsSpinner$RecycleBin: void <init>(android.widget.AbsSpinner)>(r0);

        r0.<android.widget.AbsSpinner: android.widget.AbsSpinner$RecycleBin mRecycler> = $r3;

        $i2 = virtualinvoke r0.<android.widget.AbsSpinner: int getImportantForAutofill()>();

        if $i2 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsSpinner: void setImportantForAutofill(int)>(1);

     label1:
        specialinvoke r0.<android.widget.AbsSpinner: void initAbsSpinner()>();

        $r4 = <com.android.internal.R$styleable: int[] AbsSpinner>;

        r1 = virtualinvoke r7.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r8, $r4, i0, i1);

        $r5 = <com.android.internal.R$styleable: int[] AbsSpinner>;

        virtualinvoke r0.<android.widget.AbsSpinner: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r7, $r5, r8, r1, i0, i1);

        r9 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(0);

        if r9 == null goto label2;

        $r6 = new android.widget.ArrayAdapter;

        specialinvoke $r6.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>(r7, 17367048, r9);

        virtualinvoke $r6.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(17367049);

        virtualinvoke r0.<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r6);

     label2:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    static void access$000(android.widget.AbsSpinner, android.view.View, boolean)
    {
        android.widget.AbsSpinner r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsSpinner;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsSpinner: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    private void initAbsSpinner()
    {
        android.widget.AbsSpinner r0;

        r0 := @this: android.widget.AbsSpinner;

        virtualinvoke r0.<android.widget.AbsSpinner: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsSpinner: void setWillNotDraw(boolean)>(0);

        return;
    }

    public void autofill(android.view.autofill.AutofillValue)
    {
        android.widget.AbsSpinner r0;
        android.view.autofill.AutofillValue r1;
        java.lang.String r2, $r8;
        boolean $z0, $z1;
        int $i0;
        java.lang.StringBuilder $r4;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.view.autofill.AutofillValue;

        $z0 = virtualinvoke r0.<android.widget.AbsSpinner: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<android.view.autofill.AutofillValue: boolean isList()>();

        if $z1 != 0 goto label2;

        r2 = <android.widget.AbsSpinner: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be autofilled into ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r2, $r8);

        return;

     label2:
        $i0 = virtualinvoke r1.<android.view.autofill.AutofillValue: int getListValue()>();

        virtualinvoke r0.<android.widget.AbsSpinner: void setSelection(int)>($i0);

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.widget.AbsSpinner r0;
        android.util.SparseArray r1;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.util.SparseArray;

        specialinvoke r0.<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>(r1);

        virtualinvoke r0.<android.widget.AbsSpinner: void handleDataChanged()>();

        return;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.AbsSpinner r0;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @this: android.widget.AbsSpinner;

        $r1 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.AbsSpinner r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.AbsSpinner;

        $r1 = class "Landroid/widget/AbsSpinner;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public volatile android.widget.Adapter getAdapter()
    {
        android.widget.AbsSpinner r0;
        android.widget.SpinnerAdapter $r1;

        r0 := @this: android.widget.AbsSpinner;

        $r1 = virtualinvoke r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>();

        return $r1;
    }

    public android.widget.SpinnerAdapter getAdapter()
    {
        android.widget.AbsSpinner r0;
        android.widget.SpinnerAdapter $r1;

        r0 := @this: android.widget.AbsSpinner;

        $r1 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        return $r1;
    }

    public int getAutofillType()
    {
        android.widget.AbsSpinner r0;
        boolean $z0;
        byte b0;

        r0 := @this: android.widget.AbsSpinner;

        $z0 = virtualinvoke r0.<android.widget.AbsSpinner: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        b0 = 3;

        goto label2;

     label1:
        b0 = 0;

     label2:
        return b0;
    }

    public android.view.autofill.AutofillValue getAutofillValue()
    {
        android.widget.AbsSpinner r0;
        boolean $z0;
        int $i0;
        android.view.autofill.AutofillValue r1;

        r0 := @this: android.widget.AbsSpinner;

        $z0 = virtualinvoke r0.<android.widget.AbsSpinner: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.widget.AbsSpinner: int getSelectedItemPosition()>();

        r1 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forList(int)>($i0);

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    int getChildHeight(android.view.View)
    {
        android.widget.AbsSpinner r0;
        android.view.View r1;
        int $i0;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        return $i0;
    }

    int getChildWidth(android.view.View)
    {
        android.widget.AbsSpinner r0;
        android.view.View r1;
        int $i0;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        return $i0;
    }

    public int getCount()
    {
        android.widget.AbsSpinner r0;
        int $i0;

        r0 := @this: android.widget.AbsSpinner;

        $i0 = r0.<android.widget.AbsSpinner: int mItemCount>;

        return $i0;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AbsSpinner r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: android.widget.AbsSpinner;

        $i0 = r0.<android.widget.AbsSpinner: int mItemCount>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.widget.AbsSpinner: int mSelectedPosition>;

        if $i1 < 0 goto label1;

        $i3 = r0.<android.widget.AbsSpinner: int mSelectedPosition>;

        $i2 = r0.<android.widget.AbsSpinner: int mFirstPosition>;

        $i4 = $i3 - $i2;

        $r1 = virtualinvoke r0.<android.widget.AbsSpinner: android.view.View getChildAt(int)>($i4);

        return $r1;

     label1:
        return null;
    }

    abstract void layout(int, boolean);

    protected void onMeasure(int, int)
    {
        android.widget.AbsSpinner r0;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i28, i29, i30, i31, i32, $i33, i34, $i35, i36, i37, $i38;
        boolean $z1, z2;
        android.graphics.Rect $r1, $r2, $r3, $r4, $r8, $r9, $r10, $r11, r14, r15, r16, r17;
        android.widget.AbsSpinner$RecycleBin $r5, $r6;
        android.view.ViewGroup$LayoutParams $r7, $r12;
        android.widget.SpinnerAdapter $r13, r18;
        android.view.View r19, r20, r21;

        r0 := @this: android.widget.AbsSpinner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        r14 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        i19 = r0.<android.widget.AbsSpinner: int mPaddingLeft>;

        i20 = r0.<android.widget.AbsSpinner: int mSelectionLeftPadding>;

        if i19 <= i20 goto label1;

        i20 = r0.<android.widget.AbsSpinner: int mPaddingLeft>;

        goto label1;

     label1:
        r14.<android.graphics.Rect: int left> = i20;

        r15 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        i21 = r0.<android.widget.AbsSpinner: int mPaddingTop>;

        i22 = r0.<android.widget.AbsSpinner: int mSelectionTopPadding>;

        if i21 <= i22 goto label2;

        i22 = r0.<android.widget.AbsSpinner: int mPaddingTop>;

        goto label2;

     label2:
        r15.<android.graphics.Rect: int top> = i22;

        r16 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        i23 = r0.<android.widget.AbsSpinner: int mPaddingRight>;

        i24 = r0.<android.widget.AbsSpinner: int mSelectionRightPadding>;

        if i23 <= i24 goto label3;

        i24 = r0.<android.widget.AbsSpinner: int mPaddingRight>;

        goto label3;

     label3:
        r16.<android.graphics.Rect: int right> = i24;

        r17 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        i25 = r0.<android.widget.AbsSpinner: int mPaddingBottom>;

        i26 = r0.<android.widget.AbsSpinner: int mSelectionBottomPadding>;

        if i25 <= i26 goto label4;

        i26 = r0.<android.widget.AbsSpinner: int mPaddingBottom>;

        goto label4;

     label4:
        r17.<android.graphics.Rect: int bottom> = i26;

        $z1 = r0.<android.widget.AbsSpinner: boolean mDataChanged>;

        if $z1 == 0 goto label5;

        virtualinvoke r0.<android.widget.AbsSpinner: void handleDataChanged()>();

     label5:
        i4 = virtualinvoke r0.<android.widget.AbsSpinner: int getSelectedItemPosition()>();

        i28 = 0;

        i29 = 0;

        z2 = 1;

        if i4 < 0 goto label8;

        r18 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        i28 = 0;

        i29 = 0;

        z2 = 1;

        if r18 == null goto label8;

        i28 = 0;

        i29 = 0;

        z2 = 1;

        $i9 = interfaceinvoke r18.<android.widget.SpinnerAdapter: int getCount()>();

        if i4 >= $i9 goto label8;

        $r5 = r0.<android.widget.AbsSpinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        r19 = virtualinvoke $r5.<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)>(i4);

        r20 = r19;

        if r19 != null goto label6;

        $r13 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        r21 = interfaceinvoke $r13.<android.widget.SpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i4, null, r0);

        r20 = r21;

        $i18 = virtualinvoke r21.<android.view.View: int getImportantForAccessibility()>();

        if $i18 != 0 goto label6;

        virtualinvoke r21.<android.view.View: void setImportantForAccessibility(int)>(1);

        r20 = r21;

     label6:
        i28 = 0;

        i29 = 0;

        z2 = 1;

        if r20 == null goto label8;

        $r6 = r0.<android.widget.AbsSpinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)>(i4, r20);

        $r7 = virtualinvoke r20.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r7 != null goto label7;

        r0.<android.widget.AbsSpinner: boolean mBlockLayoutRequests> = 1;

        $r12 = virtualinvoke r0.<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        virtualinvoke r20.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r12);

        r0.<android.widget.AbsSpinner: boolean mBlockLayoutRequests> = 0;

     label7:
        virtualinvoke r0.<android.widget.AbsSpinner: void measureChild(android.view.View,int,int)>(r20, i0, i1);

        $i10 = virtualinvoke r0.<android.widget.AbsSpinner: int getChildHeight(android.view.View)>(r20);

        $r8 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i11 = $r8.<android.graphics.Rect: int top>;

        $i13 = $i10 + $i11;

        $r9 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i12 = $r9.<android.graphics.Rect: int bottom>;

        i28 = $i13 + $i12;

        $i14 = virtualinvoke r0.<android.widget.AbsSpinner: int getChildWidth(android.view.View)>(r20);

        $r10 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i15 = $r10.<android.graphics.Rect: int left>;

        $i17 = $i14 + $i15;

        $r11 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i16 = $r11.<android.graphics.Rect: int right>;

        i29 = $i17 + $i16;

        z2 = 0;

     label8:
        i30 = i28;

        i31 = i29;

        if z2 == 0 goto label9;

        $r1 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i6 = $r1.<android.graphics.Rect: int top>;

        $r2 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i5 = $r2.<android.graphics.Rect: int bottom>;

        i32 = $i6 + $i5;

        i30 = i32;

        i31 = i29;

        if i2 != 0 goto label9;

        $r3 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i8 = $r3.<android.graphics.Rect: int left>;

        $r4 = r0.<android.widget.AbsSpinner: android.graphics.Rect mSpinnerPadding>;

        $i7 = $r4.<android.graphics.Rect: int right>;

        i31 = $i8 + $i7;

        i30 = i32;

     label9:
        $i33 = virtualinvoke r0.<android.widget.AbsSpinner: int getSuggestedMinimumHeight()>();

        i34 = staticinvoke <java.lang.Math: int max(int,int)>(i30, $i33);

        $i35 = virtualinvoke r0.<android.widget.AbsSpinner: int getSuggestedMinimumWidth()>();

        i36 = staticinvoke <java.lang.Math: int max(int,int)>(i31, $i35);

        i37 = staticinvoke <android.widget.AbsSpinner: int resolveSizeAndState(int,int,int)>(i34, i1, 0);

        $i38 = staticinvoke <android.widget.AbsSpinner: int resolveSizeAndState(int,int,int)>(i36, i0, 0);

        virtualinvoke r0.<android.widget.AbsSpinner: void setMeasuredDimension(int,int)>($i38, i37);

        r0.<android.widget.AbsSpinner: int mHeightMeasureSpec> = i1;

        r0.<android.widget.AbsSpinner: int mWidthMeasureSpec> = i0;

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AbsSpinner r0;
        android.os.Parcelable $r1, r2;
        long $l0, $l2;
        byte $b1;
        int $i3;
        android.widget.AbsSpinner$SavedState r3;

        r0 := @this: android.widget.AbsSpinner;

        r2 := @parameter0: android.os.Parcelable;

        r3 = (android.widget.AbsSpinner$SavedState) r2;

        $r1 = virtualinvoke r3.<android.widget.AbsSpinner$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $l0 = r3.<android.widget.AbsSpinner$SavedState: long selectedId>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        r0.<android.widget.AbsSpinner: boolean mDataChanged> = 1;

        r0.<android.widget.AbsSpinner: boolean mNeedSync> = 1;

        $l2 = r3.<android.widget.AbsSpinner$SavedState: long selectedId>;

        r0.<android.widget.AbsSpinner: long mSyncRowId> = $l2;

        $i3 = r3.<android.widget.AbsSpinner$SavedState: int position>;

        r0.<android.widget.AbsSpinner: int mSyncPosition> = $i3;

        r0.<android.widget.AbsSpinner: int mSyncMode> = 0;

        virtualinvoke r0.<android.widget.AbsSpinner: void requestLayout()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AbsSpinner r0;
        android.widget.AbsSpinner$SavedState $r2;
        android.os.Parcelable $r3;
        long $l0, $l1;
        byte $b2;
        int $i3;

        r0 := @this: android.widget.AbsSpinner;

        $r2 = new android.widget.AbsSpinner$SavedState;

        $r3 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r2.<android.widget.AbsSpinner$SavedState: void <init>(android.os.Parcelable)>($r3);

        $l0 = virtualinvoke r0.<android.widget.AbsSpinner: long getSelectedItemId()>();

        $r2.<android.widget.AbsSpinner$SavedState: long selectedId> = $l0;

        $l1 = $r2.<android.widget.AbsSpinner$SavedState: long selectedId>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.widget.AbsSpinner: int getSelectedItemPosition()>();

        $r2.<android.widget.AbsSpinner$SavedState: int position> = $i3;

        goto label2;

     label1:
        $r2.<android.widget.AbsSpinner$SavedState: int position> = -1;

     label2:
        return $r2;
    }

    public int pointToPosition(int, int)
    {
        android.widget.AbsSpinner r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        android.graphics.Rect $r1, r2, r3;
        android.view.View r4;

        r0 := @this: android.widget.AbsSpinner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 = r0.<android.widget.AbsSpinner: android.graphics.Rect mTouchFrame>;

        r3 = r2;

        if r2 != null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsSpinner: android.graphics.Rect mTouchFrame> = $r1;

        r3 = r0.<android.widget.AbsSpinner: android.graphics.Rect mTouchFrame>;

     label1:
        $i2 = virtualinvoke r0.<android.widget.AbsSpinner: int getChildCount()>();

        i6 = $i2 - 1;

     label2:
        if i6 < 0 goto label4;

        r4 = virtualinvoke r0.<android.widget.AbsSpinner: android.view.View getChildAt(int)>(i6);

        $i3 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i3 != 0 goto label3;

        virtualinvoke r4.<android.view.View: void getHitRect(android.graphics.Rect)>(r3);

        $z0 = virtualinvoke r3.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $i4 = r0.<android.widget.AbsSpinner: int mFirstPosition>;

        $i5 = $i4 + i6;

        return $i5;

     label3:
        i6 = i6 + -1;

        goto label2;

     label4:
        return -1;
    }

    void recycleAllViews()
    {
        android.widget.AbsSpinner r0;
        int i0, i1, $i2, i3;
        android.widget.AbsSpinner$RecycleBin r1;
        android.view.View $r2;

        r0 := @this: android.widget.AbsSpinner;

        i0 = virtualinvoke r0.<android.widget.AbsSpinner: int getChildCount()>();

        r1 = r0.<android.widget.AbsSpinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        i1 = r0.<android.widget.AbsSpinner: int mFirstPosition>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = i1 + i3;

        $r2 = virtualinvoke r0.<android.widget.AbsSpinner: android.view.View getChildAt(int)>(i3);

        virtualinvoke r1.<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)>($i2, $r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void requestLayout()
    {
        android.widget.AbsSpinner r0;
        boolean $z0;

        r0 := @this: android.widget.AbsSpinner;

        $z0 = r0.<android.widget.AbsSpinner: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.AdapterView: void requestLayout()>();

     label1:
        return;
    }

    void resetList()
    {
        android.widget.AbsSpinner r0;

        r0 := @this: android.widget.AbsSpinner;

        r0.<android.widget.AbsSpinner: boolean mDataChanged> = 0;

        r0.<android.widget.AbsSpinner: boolean mNeedSync> = 0;

        virtualinvoke r0.<android.widget.AbsSpinner: void removeAllViewsInLayout()>();

        r0.<android.widget.AbsSpinner: int mOldSelectedPosition> = -1;

        r0.<android.widget.AbsSpinner: long mOldSelectedRowId> = -9223372036854775808L;

        virtualinvoke r0.<android.widget.AbsSpinner: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsSpinner: void setNextSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsSpinner: void invalidate()>();

        return;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.AbsSpinner r0;
        android.widget.Adapter r1;
        android.widget.SpinnerAdapter $r2;

        r0 := @this: android.widget.AbsSpinner;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.SpinnerAdapter) r1;

        virtualinvoke r0.<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r2);

        return;
    }

    public void setAdapter(android.widget.SpinnerAdapter)
    {
        android.widget.AbsSpinner r0;
        android.widget.SpinnerAdapter r1, $r2, $r3, $r5, r7;
        int $i0, $i1, $i2, $i3;
        android.widget.AdapterView$AdapterDataSetObserver $r4;
        android.database.DataSetObserver $r6;
        byte b4;

        r0 := @this: android.widget.AbsSpinner;

        r7 := @parameter0: android.widget.SpinnerAdapter;

        r1 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        if r1 == null goto label1;

        $r6 = r0.<android.widget.AbsSpinner: android.database.DataSetObserver mDataSetObserver>;

        interfaceinvoke r1.<android.widget.SpinnerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r6);

        virtualinvoke r0.<android.widget.AbsSpinner: void resetList()>();

     label1:
        r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter> = r7;

        b4 = -1;

        r0.<android.widget.AbsSpinner: int mOldSelectedPosition> = -1;

        r0.<android.widget.AbsSpinner: long mOldSelectedRowId> = -9223372036854775808L;

        $r2 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        if $r2 == null goto label4;

        $i0 = r0.<android.widget.AbsSpinner: int mItemCount>;

        r0.<android.widget.AbsSpinner: int mOldItemCount> = $i0;

        $r3 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        $i1 = interfaceinvoke $r3.<android.widget.SpinnerAdapter: int getCount()>();

        r0.<android.widget.AbsSpinner: int mItemCount> = $i1;

        virtualinvoke r0.<android.widget.AbsSpinner: void checkFocus()>();

        $r4 = new android.widget.AdapterView$AdapterDataSetObserver;

        specialinvoke $r4.<android.widget.AdapterView$AdapterDataSetObserver: void <init>(android.widget.AdapterView)>(r0);

        r0.<android.widget.AbsSpinner: android.database.DataSetObserver mDataSetObserver> = $r4;

        $r5 = r0.<android.widget.AbsSpinner: android.widget.SpinnerAdapter mAdapter>;

        interfaceinvoke $r5.<android.widget.SpinnerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r4);

        $i2 = r0.<android.widget.AbsSpinner: int mItemCount>;

        if $i2 <= 0 goto label2;

        b4 = 0;

     label2:
        virtualinvoke r0.<android.widget.AbsSpinner: void setSelectedPositionInt(int)>(b4);

        virtualinvoke r0.<android.widget.AbsSpinner: void setNextSelectedPositionInt(int)>(b4);

        $i3 = r0.<android.widget.AbsSpinner: int mItemCount>;

        if $i3 != 0 goto label3;

        virtualinvoke r0.<android.widget.AbsSpinner: void checkSelectionChanged()>();

     label3:
        goto label5;

     label4:
        virtualinvoke r0.<android.widget.AbsSpinner: void checkFocus()>();

        virtualinvoke r0.<android.widget.AbsSpinner: void resetList()>();

        virtualinvoke r0.<android.widget.AbsSpinner: void checkSelectionChanged()>();

     label5:
        virtualinvoke r0.<android.widget.AbsSpinner: void requestLayout()>();

        return;
    }

    public void setSelection(int)
    {
        android.widget.AbsSpinner r0;
        int i0;

        r0 := @this: android.widget.AbsSpinner;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.AbsSpinner: void setNextSelectedPositionInt(int)>(i0);

        virtualinvoke r0.<android.widget.AbsSpinner: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsSpinner: void invalidate()>();

        return;
    }

    public void setSelection(int, boolean)
    {
        android.widget.AbsSpinner r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z1, z2;

        r0 := @this: android.widget.AbsSpinner;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $i1 = r0.<android.widget.AbsSpinner: int mFirstPosition>;

        if $i1 > i0 goto label1;

        $i2 = r0.<android.widget.AbsSpinner: int mFirstPosition>;

        $i3 = virtualinvoke r0.<android.widget.AbsSpinner: int getChildCount()>();

        $i4 = $i2 + $i3;

        $i5 = $i4 - 1;

        if i0 > $i5 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        virtualinvoke r0.<android.widget.AbsSpinner: void setSelectionInt(int,boolean)>(i0, z2);

        return;
    }

    void setSelectionInt(int, boolean)
    {
        android.widget.AbsSpinner r0;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.widget.AbsSpinner;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<android.widget.AbsSpinner: int mOldSelectedPosition>;

        if i0 == $i2 goto label1;

        r0.<android.widget.AbsSpinner: boolean mBlockLayoutRequests> = 1;

        i1 = r0.<android.widget.AbsSpinner: int mSelectedPosition>;

        virtualinvoke r0.<android.widget.AbsSpinner: void setNextSelectedPositionInt(int)>(i0);

        $i3 = i0 - i1;

        virtualinvoke r0.<android.widget.AbsSpinner: void layout(int,boolean)>($i3, z0);

        r0.<android.widget.AbsSpinner: boolean mBlockLayoutRequests> = 0;

     label1:
        return;
    }
}
