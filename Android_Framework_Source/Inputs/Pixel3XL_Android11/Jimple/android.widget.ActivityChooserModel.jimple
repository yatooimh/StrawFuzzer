public class android.widget.ActivityChooserModel extends android.database.DataSetObservable
{
    private static final java.lang.String ATTRIBUTE_ACTIVITY;
    private static final java.lang.String ATTRIBUTE_TIME;
    private static final java.lang.String ATTRIBUTE_WEIGHT;
    private static final boolean DEBUG;
    private static final int DEFAULT_ACTIVITY_INFLATION;
    private static final float DEFAULT_HISTORICAL_RECORD_WEIGHT;
    public static final java.lang.String DEFAULT_HISTORY_FILE_NAME;
    public static final int DEFAULT_HISTORY_MAX_LENGTH;
    private static final java.lang.String HISTORY_FILE_EXTENSION;
    private static final int INVALID_INDEX;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String TAG_HISTORICAL_RECORD;
    private static final java.lang.String TAG_HISTORICAL_RECORDS;
    private static final java.util.Map sDataModelRegistry;
    private static final java.lang.Object sRegistryLock;
    private final java.util.List mActivities;
    private android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy;
    private android.widget.ActivityChooserModel$ActivitySorter mActivitySorter;
    private boolean mCanReadHistoricalData;
    private final android.content.Context mContext;
    private final java.util.List mHistoricalRecords;
    private boolean mHistoricalRecordsChanged;
    private final java.lang.String mHistoryFileName;
    private int mHistoryMaxSize;
    private final java.lang.Object mInstanceLock;
    private android.content.Intent mIntent;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;
    private boolean mReadShareHistoryCalled;
    private boolean mReloadActivities;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORDS> = "historical-records";

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORD> = "historical-record";

        <android.widget.ActivityChooserModel: int INVALID_INDEX> = -1;

        <android.widget.ActivityChooserModel: java.lang.String HISTORY_FILE_EXTENSION> = ".xml";

        <android.widget.ActivityChooserModel: int DEFAULT_HISTORY_MAX_LENGTH> = 50;

        <android.widget.ActivityChooserModel: java.lang.String DEFAULT_HISTORY_FILE_NAME> = "activity_choser_model_history.xml";

        <android.widget.ActivityChooserModel: float DEFAULT_HISTORICAL_RECORD_WEIGHT> = 1.0F;

        <android.widget.ActivityChooserModel: int DEFAULT_ACTIVITY_INFLATION> = 5;

        <android.widget.ActivityChooserModel: boolean DEBUG> = 0;

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_WEIGHT> = "weight";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_TIME> = "time";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_ACTIVITY> = "activity";

        $r0 = class "Landroid/widget/ActivityChooserModel;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.ActivityChooserModel: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry> = $r3;

        return;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.String r1, $r11;
        java.lang.Object $r2;
        java.util.ArrayList $r3, $r4;
        android.widget.ActivityChooserModel$DataModelPackageMonitor $r5;
        android.widget.ActivityChooserModel$DefaultSorter $r6;
        android.content.Context $r7, r12, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8;
        com.android.internal.content.PackageMonitor $r14;

        r0 := @this: android.widget.ActivityChooserModel;

        r12 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.database.DataSetObservable: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mActivities> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords> = $r4;

        $r5 = new android.widget.ActivityChooserModel$DataModelPackageMonitor;

        specialinvoke $r5.<android.widget.ActivityChooserModel$DataModelPackageMonitor: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor> = $r5;

        $r6 = new android.widget.ActivityChooserModel$DefaultSorter;

        specialinvoke $r6.<android.widget.ActivityChooserModel$DefaultSorter: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = $r6;

        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = 50;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r7 = virtualinvoke r12.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.widget.ActivityChooserModel: android.content.Context mContext> = $r7;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = $r11;

        goto label2;

     label1:
        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = r1;

     label2:
        $r14 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r15 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        virtualinvoke $r14.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>($r15, null, 1);

        return;
    }

    static android.content.Context access$300(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        return $r0;
    }

    static java.lang.String access$500(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        return $r1;
    }

    static boolean access$602(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = z0;

        return z0;
    }

    static boolean access$702(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = z0;

        return z0;
    }

    private boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$HistoricalRecord r1;
        boolean z0;
        java.util.List $r2;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$HistoricalRecord;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: void persistHistoricalDataIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return z0;
    }

    private void ensureConsistentState()
    {
        android.widget.ActivityChooserModel r0;
        boolean z0, z1, $z2;

        r0 := @this: android.widget.ActivityChooserModel;

        z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()>();

        z1 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        $z2 = z0 | z1;

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return;
    }

    public static android.widget.ActivityChooserModel get(android.content.Context, java.lang.String)
    {
        java.lang.String r0;
        java.lang.Object r1, $r4;
        android.widget.ActivityChooserModel r2, r9;
        java.util.Map $r3, $r5;
        java.lang.Throwable $r7;
        android.content.Context r8;

        r8 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String;

        r1 = <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock>;

        entermonitor r1;

     label1:
        $r3 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (android.widget.ActivityChooserModel) $r4;

     label2:
        r9 = r2;

        if r2 != null goto label5;

     label3:
        r9 = new android.widget.ActivityChooserModel;

        specialinvoke r9.<android.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>(r8, r0);

     label4:
        $r5 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r9);

     label5:
        exitmonitor r1;

     label6:
        return r9;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private boolean loadActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        java.util.List r1, $r5, $r13;
        int i0, $i1, $i2, $i3, i4;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ActivityInfo r3;
        boolean $z0, $z1;
        android.content.Intent $r4, $r8;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r9;
        java.lang.String $r10;
        android.content.pm.ApplicationInfo $r11;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r12;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mReloadActivities>;

        if $z0 == 0 goto label4;

        $r4 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r4 == null goto label4;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        r1 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r8, 0);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (android.content.pm.ResolveInfo) $r9;

        r3 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = r3.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r11 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = r3.<android.content.pm.ActivityInfo: boolean exported>;

        $i3 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>($r10, $i1, $i2, $z1);

        if $i3 != 0 goto label2;

        $r13 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r12 = new android.widget.ActivityChooserModel$ActivityResolveInfo;

        specialinvoke $r12.<android.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(android.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>(r0, r2);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    private void persistHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, $r8;
        android.widget.ActivityChooserModel$PersistHistoryAsyncTask $r3;
        java.lang.Object[] $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled>;

        if $z0 == 0 goto label3;

        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 != 0 goto label1;

        return;

     label1:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 0;

        $r2 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z2 != 0 goto label2;

        $r3 = new android.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        specialinvoke $r3.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        $r7 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = new java.util.ArrayList;

        $r6 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r4[0] = $r5;

        $r8 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r4[1] = $r8;

        virtualinvoke $r3.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r7, $r4);

     label2:
        return;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No preceding call to #readHistoricalData");

        throw $r1;
    }

    private void pruneExcessiveHistoricalRecordsIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        int i0, $i1, $i2, i3;
        android.widget.ActivityChooserModel$HistoricalRecord r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        i0 = $i1 - $i2;

        if i0 > 0 goto label1;

        return;

     label1:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r1 = (android.widget.ActivityChooserModel$HistoricalRecord) $r4;

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    private boolean readHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 == 0 goto label1;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void readHistoricalDataImpl()>();

        return 1;

     label1:
        return 0;
    }

    private void readHistoricalDataImpl()
    {
        android.widget.ActivityChooserModel r0;
        java.util.List r1;
        long l0;
        float f0;
        java.lang.String $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r20, $r22, r28, r34, r37;
        android.content.Context $r3;
        java.nio.charset.Charset $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r12, $r13, $r18, $r23, $r24, $r25, r47, r48;
        java.io.FileInputStream r26;
        org.xmlpull.v1.XmlPullParser r27;
        int i3, i4;
        android.widget.ActivityChooserModel$HistoricalRecord r42;
        org.xmlpull.v1.XmlPullParserException r43, r44;
        java.lang.StringBuilder r45, r46;

        r0 := @this: android.widget.ActivityChooserModel;

     label01:
        $r3 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r2 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        r26 = virtualinvoke $r3.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r2);

     label02:
        r27 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r26, $r5);

     label03:
        i3 = 0;

     label04:
        if i3 == 1 goto label07;

        if i3 == 2 goto label07;

     label05:
        i3 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        goto label04;

     label07:
        $r6 = "historical-records";

        $r7 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label16;

        r1 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label08:
        i4 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: int next()>();

     label09:
        if i4 != 1 goto label12;

        if r26 == null goto label29;

     label10:
        virtualinvoke r26.<java.io.FileInputStream: void close()>();

     label11:
        goto label27;

     label12:
        if i4 == 3 goto label08;

        if i4 != 4 goto label13;

        goto label08;

     label13:
        $r8 = "historical-record";

        $r9 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label15;

        r28 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "activity");

        $r10 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "time");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        $r11 = interfaceinvoke r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "weight");

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r11);

        r42 = new android.widget.ActivityChooserModel$HistoricalRecord;

        specialinvoke r42.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>(r28, l0, f0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r42);

     label14:
        goto label08;

     label15:
        r43 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r43.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file not well-formed.");

        r47 = (java.lang.Throwable) r43;

        throw r47;

     label16:
        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file does not start with historical-records tag.");

        r48 = (java.lang.Throwable) r44;

        throw r48;

     label17:
        $r12 := @caughtexception;

        goto label30;

     label18:
        $r13 := @caughtexception;

     label19:
        r34 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r15 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r34, $r17, $r13);

     label20:
        if r26 == null goto label29;

     label21:
        virtualinvoke r26.<java.io.FileInputStream: void close()>();

     label22:
        goto label27;

     label23:
        $r18 := @caughtexception;

     label24:
        r37 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r20 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r37, $r22, $r18);

     label25:
        if r26 == null goto label29;

     label26:
        virtualinvoke r26.<java.io.FileInputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r25 := @caughtexception;

        goto label27;

     label29:
        return;

     label30:
        if r26 == null goto label34;

     label31:
        virtualinvoke r26.<java.io.FileInputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r23 := @caughtexception;

     label34:
        throw $r12;

     label35:
        $r24 := @caughtexception;

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label23;
        catch java.io.IOException from label02 to label03 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label23;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label23;
        catch java.io.IOException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label23;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label10 to label11 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label23;
        catch java.io.IOException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label23;
        catch java.io.IOException from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label23;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
        catch java.io.IOException from label21 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label17;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label31 to label32 with label33;
    }

    private boolean sortActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$ActivitySorter $r1, $r6;
        android.content.Intent $r2, $r7;
        java.util.List $r3, $r4, $r5, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        $r7 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        $r8 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        interfaceinvoke $r6.<android.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>($r7, $r8, $r9);

        return 1;

     label1:
        return 0;
    }

    public android.content.Intent chooseActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r4;
        android.content.Intent $r2, $r11, r18, r19;
        java.util.List $r3;
        android.content.pm.ResolveInfo $r5, $r7;
        android.content.pm.ActivityInfo $r6, $r8;
        java.lang.String $r9, $r10;
        android.widget.ActivityChooserModel$OnChooseActivityListener $r13, $r14;
        long $l1;
        boolean $z1;
        java.lang.Throwable $r15;
        android.widget.ActivityChooserModel$ActivityResolveInfo r16;
        android.content.ComponentName r17;
        android.widget.ActivityChooserModel$HistoricalRecord r20;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r2 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r16 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r4;

        r17 = new android.content.ComponentName;

        $r5 = r16.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r7 = r16.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r8 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r9 = $r8.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r9);

        r18 = new android.content.Intent;

        $r11 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        specialinvoke r18.<android.content.Intent: void <init>(android.content.Intent)>($r11);

        virtualinvoke r18.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r17);

        $r13 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        if $r13 == null goto label5;

        r19 = new android.content.Intent;

        specialinvoke r19.<android.content.Intent: void <init>(android.content.Intent)>(r18);

        $r14 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        $z1 = interfaceinvoke $r14.<android.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>(r0, r19);

        if $z1 == 0 goto label5;

        exitmonitor r1;

     label4:
        return null;

     label5:
        r20 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r20.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r17, $l1, 1.0F);

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>(r20);

        exitmonitor r1;

     label6:
        return r18;

     label7:
        $r15 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.widget.ActivityChooserModel r0;
        com.android.internal.content.PackageMonitor $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        virtualinvoke $r1.<com.android.internal.content.PackageMonitor: void unregister()>();

        return;
    }

    public android.content.pm.ResolveInfo getActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r3;
        java.util.List $r2;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r4;
        java.lang.Throwable $r5;
        android.content.pm.ResolveInfo r6;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        r6 = $r4.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getActivityCount()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        int i0;
        java.util.List $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getActivityIndex(android.content.pm.ResolveInfo)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3;
        java.util.List r2;
        int i0, i1;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r4;
        android.content.pm.ResolveInfo $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: android.widget.ActivityChooserModel;

        r7 := @parameter0: android.content.pm.ResolveInfo;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        r2 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

     label04:
        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        $r5 = $r4.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        if $r5 != r7 goto label06;

        exitmonitor r1;

     label05:
        return i1;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return -1;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.content.pm.ResolveInfo getDefaultActivity()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r4;
        java.util.List $r2, $r3;
        boolean $z0;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r5;
        java.lang.Throwable $r6;
        android.content.pm.ResolveInfo r7;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r4;

        r7 = $r5.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return r7;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getHistoryMaxSize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getHistorySize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        int i0;
        java.util.List $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent getIntent()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.content.Intent r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setActivitySorter(android.widget.ActivityChooserModel$ActivitySorter)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        android.widget.ActivityChooserModel$ActivitySorter $r2, r4;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r4 := @parameter0: android.widget.ActivityChooserModel$ActivitySorter;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r2 != r4 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = r4;

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setDefaultActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r3, $r5;
        java.util.List $r2, $r4;
        android.content.pm.ResolveInfo $r6, $r8;
        android.content.pm.ActivityInfo $r7, $r9;
        java.lang.String $r10, $r11;
        long $l1;
        float $f0, $f1, $f2, f3;
        java.lang.Throwable $r12;
        android.widget.ActivityChooserModel$ActivityResolveInfo r13, r14;
        android.content.ComponentName r15;
        android.widget.ActivityChooserModel$HistoricalRecord r16;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r13 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r14 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r5;

     label02:
        if r14 == null goto label05;

     label03:
        $f1 = r14.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f0 = r13.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f2 = $f1 - $f0;

        f3 = $f2 + 5.0F;

     label04:
        goto label06;

     label05:
        f3 = 1.0F;

     label06:
        r15 = new android.content.ComponentName;

        $r6 = r13.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r8 = r13.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r10);

        r16 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r16.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r15, $l1, f3);

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>(r16);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void setHistoryMaxSize(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        if $i1 != i0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = i0;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setIntent(android.content.Intent)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        android.content.Intent $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r4 := @parameter0: android.content.Intent;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r2 != r4 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent> = r4;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setOnChooseActivityListener(android.widget.ActivityChooserModel$OnChooseActivityListener)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.widget.ActivityChooserModel$OnChooseActivityListener r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r3 := @parameter0: android.widget.ActivityChooserModel$OnChooseActivityListener;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
