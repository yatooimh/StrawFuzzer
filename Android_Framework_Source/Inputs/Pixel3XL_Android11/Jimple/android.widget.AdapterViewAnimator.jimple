public abstract class android.widget.AdapterViewAnimator extends android.widget.AdapterView implements android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback, android.widget.Advanceable
{
    private static final int DEFAULT_ANIMATION_DURATION;
    private static final java.lang.String TAG;
    static final int TOUCH_MODE_DOWN_IN_CURRENT_VIEW;
    static final int TOUCH_MODE_HANDLED;
    static final int TOUCH_MODE_NONE;
    int mActiveOffset;
    android.widget.Adapter mAdapter;
    boolean mAnimateFirstTime;
    int mCurrentWindowEnd;
    int mCurrentWindowStart;
    int mCurrentWindowStartUnbounded;
    android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver;
    boolean mDeferNotifyDataSetChanged;
    boolean mFirstTime;
    android.animation.ObjectAnimator mInAnimation;
    boolean mLoopViews;
    int mMaxNumActiveViews;
    android.animation.ObjectAnimator mOutAnimation;
    private java.lang.Runnable mPendingCheckForTap;
    java.util.ArrayList mPreviousViews;
    int mReferenceChildHeight;
    int mReferenceChildWidth;
    android.widget.RemoteViewsAdapter mRemoteViewsAdapter;
    private int mRestoreWhichChild;
    private int mTouchMode;
    java.util.HashMap mViewsMap;
    int mWhichChild;

    public void <init>(android.content.Context)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3;
        android.content.res.TypedArray r3;
        java.util.HashMap $r4;
        int[] $r5, $r6;
        android.animation.ObjectAnimator $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i1, i0);

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = 0;

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = -1;

        r0.<android.widget.AdapterViewAnimator: boolean mAnimateFirstTime> = 1;

        r0.<android.widget.AdapterViewAnimator: int mActiveOffset> = 0;

        r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews> = 1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap> = $r4;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = 0;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = -1;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded> = 0;

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AdapterViewAnimator: boolean mFirstTime> = 1;

        r0.<android.widget.AdapterViewAnimator: boolean mLoopViews> = 1;

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth> = -1;

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight> = -1;

        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        $r5 = <com.android.internal.R$styleable: int[] AdapterViewAnimator>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i1, i0);

        $r6 = <com.android.internal.R$styleable: int[] AdapterViewAnimator>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r6, r2, r3, i1, i0);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i2 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>(r1, i2);

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>($r7);

     label2:
        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i3 <= 0 goto label3;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>(r1, i3);

        goto label4;

     label3:
        $r8 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>($r8);

     label4:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>($z0);

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        r0.<android.widget.AdapterViewAnimator: boolean mLoopViews> = $z1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.AdapterViewAnimator: void initViewAnimator()>();

        return;
    }

    static int access$000(android.widget.AdapterViewAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;

        r0 := @parameter0: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mTouchMode>;

        return $i0;
    }

    private void addChild(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)>(r1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, -1, $r2);

        $i1 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        if $i1 == -1 goto label1;

        $i4 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        if $i4 != -1 goto label2;

     label1:
        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i0);

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth> = $i2;

        $i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight> = $i3;

     label2:
        return;
    }

    private android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1, $r7;
        java.util.Iterator r2;
        android.widget.AdapterViewAnimator$ViewAndMetaData r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r6;

        $r7 = r3.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        if $r7 != r1 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private void initViewAnimator()
    {
        android.widget.AdapterViewAnimator r0;
        java.util.ArrayList $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews> = $r1;

        return;
    }

    private void measureChildren()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.view.View $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getChildCount()>();

        i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getMeasuredWidth()>();

        i2 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        i3 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getMeasuredHeight()>();

        i5 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        i6 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        i13 = 0;

     label1:
        if i13 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getChildAt(int)>(i13);

        $i7 = i1 - i2;

        $i8 = $i7 - i3;

        $i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i8, 1073741824);

        $i10 = i4 - i5;

        $i11 = $i10 - i6;

        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i9, $i12);

        i13 = i13 + 1;

        goto label1;

     label2:
        return;
    }

    private void setDisplayedChild(int, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0, $z3, $z4, z5;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        android.widget.Adapter $r1;
        android.view.View $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        i4 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label8;

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = i4;

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        if i4 < i0 goto label3;

        $z4 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z4 == 0 goto label1;

        i5 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i5 = $i3 - 1;

     label2:
        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = i5;

        goto label6;

     label3:
        if i4 >= 0 goto label6;

        $z3 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z3 == 0 goto label4;

        $i2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i6 = $i2 - 1;

        goto label5;

     label4:
        i6 = 0;

     label5:
        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = i6;

     label6:
        z5 = 0;

        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getFocusedChild()>();

        if $r2 == null goto label7;

        z5 = 1;

     label7:
        $i1 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>($i1, z0);

        if z5 == 0 goto label8;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean requestFocus(int)>(2);

     label8:
        return;
    }

    public void advance()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showNext()>();

        return;
    }

    void applyTransformForChildAtIndex(android.view.View, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return;
    }

    void cancelHandleClick()
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>(r1);

     label1:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        return;
    }

    void checkForAndHandleDataChanged()
    {
        android.widget.AdapterViewAnimator r0;
        boolean $z0;
        android.widget.AdapterViewAnimator$2 $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $z0 = r0.<android.widget.AdapterViewAnimator: boolean mDataChanged>;

        if $z0 == 0 goto label1;

        $r1 = new android.widget.AdapterViewAnimator$2;

        specialinvoke $r1.<android.widget.AdapterViewAnimator$2: void <init>(android.widget.AdapterViewAnimator)>(r0);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean post(java.lang.Runnable)>($r1);

     label1:
        r0.<android.widget.AdapterViewAnimator: boolean mDataChanged> = 0;

        return;
    }

    void configureViewAnimator(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews> = i0;

        r0.<android.widget.AdapterViewAnimator: int mActiveOffset> = i1;

        $r1 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void removeAllViewsInLayout()>();

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = 0;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = -1;

        return;
    }

    android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.ViewGroup$LayoutParams $r1, r3;
        android.view.View r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r2 := @parameter0: android.view.View;

        r3 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r3 == null goto label1;

        return r3;

     label1:
        $r1 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r1.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(0, 0);

        return $r1;
    }

    public void deferNotifyDataSetChanged()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 1;

        return;
    }

    public void fyiWillBeAdvancedByHostKThx()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.AdapterViewAnimator r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = class "Landroid/widget/AdapterViewAnimator;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public android.widget.Adapter getAdapter()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        return $r1;
    }

    public int getBaseline()
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View $r1, $r2;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        i0 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

        goto label2;

     label1:
        i0 = specialinvoke r0.<android.widget.AdapterView: int getBaseline()>();

     label2:
        return i0;
    }

    public android.view.View getCurrentView()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>($i0);

        return $r1;
    }

    android.animation.ObjectAnimator getDefaultInAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;
        float[] $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(null, "alpha", $r2);

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(200L);

        return r1;
    }

    android.animation.ObjectAnimator getDefaultOutAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;
        float[] $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r2 = newarray (float)[2];

        $r2[0] = 1.0F;

        $r2[1] = 0.0F;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(null, "alpha", $r2);

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(200L);

        return r1;
    }

    public int getDisplayedChild()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        return $i0;
    }

    android.widget.FrameLayout getFrameForChild()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.FrameLayout $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = new android.widget.FrameLayout;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.content.Context mContext>;

        specialinvoke $r1.<android.widget.FrameLayout: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    public android.animation.ObjectAnimator getInAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        return $r1;
    }

    int getNumActiveViews()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label1;

        $i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $i3 = $i1 + 1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        return $i4;

     label1:
        $i0 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        return $i0;
    }

    public android.animation.ObjectAnimator getOutAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        return $r1;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>($i0);

        return $r1;
    }

    android.view.View getViewAtRelativeIndex(int)
    {
        android.widget.AdapterViewAnimator r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        android.widget.Adapter $r1;
        java.util.HashMap $r2, $r5;
        java.lang.Integer $r3, $r6;
        java.lang.Object $r4, $r7;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r8;
        android.view.View $r9;

        r0 := @this: android.widget.AdapterViewAnimator;

        i5 := @parameter0: int;

        if i5 < 0 goto label1;

        $i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        $i1 = $i0 - 1;

        if i5 > $i1 goto label1;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded>;

        $i3 = $i2 + i5;

        $i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i6 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>($i3, $i4);

        $r2 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        $r5 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r7;

        $r9 = $r8.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        return $r9;

     label1:
        return null;
    }

    int getWindowSize()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, $i1, $i2, $i3;
        android.widget.Adapter $r1;
        boolean $z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label2;

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        if i0 > $i1 goto label1;

        $z0 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        $i3 = $i2 * i0;

        return $i3;

     label1:
        return i0;

     label2:
        return 0;
    }

    void hideTapFeedback(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

        return;
    }

    int modulo(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $i2 = i0 % i1;

        $i3 = $i2 + i1;

        $i4 = $i3 % i1;

        return $i4;

     label1:
        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12, i13;

        r0 := @this: android.widget.AdapterViewAnimator;

        z0 := @parameter0: boolean;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i8 := @parameter3: int;

        i9 := @parameter4: int;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void checkForAndHandleDataChanged()>();

        i10 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getChildCount()>();

        i11 = 0;

     label1:
        if i11 >= i10 goto label2;

        r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getChildAt(int)>(i11);

        i0 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i1 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        i13 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i4 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i3 = i0 + i12;

        $i2 = i1 + i13;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i5, $i4, $i3, $i2);

        i11 = i11 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25;
        boolean z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        i19 := @parameter0: int;

        i20 := @parameter1: int;

        i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i19);

        i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i20);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i19);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i20);

        i21 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        i22 = 0;

        if i21 == -1 goto label1;

        $i18 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        if $i18 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if i3 != 0 goto label5;

        if z0 == 0 goto label3;

        $i15 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        $i14 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i17 = $i15 + $i14;

        $i16 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        i23 = $i17 + $i16;

        goto label4;

     label3:
        i23 = 0;

     label4:
        goto label6;

     label5:
        i23 = i1;

        if i3 != -2147483648 goto label6;

        i23 = i1;

        if z0 == 0 goto label6;

        $i11 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        $i10 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i13 = $i11 + $i10;

        $i12 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        i23 = $i13 + $i12;

        if i23 <= i1 goto label6;

        i23 = i1 | 16777216;

        goto label6;

     label6:
        if i2 != 0 goto label8;

        if z0 == 0 goto label7;

        i24 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        i25 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i9 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        $i8 = i24 + i25;

        i22 = $i9 + $i8;

        goto label7;

     label7:
        goto label9;

     label8:
        i22 = i0;

        if i3 != -2147483648 goto label9;

        i22 = i0;

        if z0 == 0 goto label9;

        $i5 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        $i4 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i7 = $i5 + $i4;

        $i6 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        i22 = $i7 + $i6;

        if i22 <= i0 goto label9;

        i22 = i0 | 16777216;

        goto label9;

     label9:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setMeasuredDimension(int,int)>(i22, i23);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void measureChildren()>();

        return;
    }

    public boolean onRemoteAdapterConnected()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.RemoteViewsAdapter r1, $r3;
        int i0;
        android.widget.Adapter $r2;
        boolean $z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if r1 == $r2 goto label3;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>(r1);

        $z0 = r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r3.<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>();

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

     label1:
        i0 = r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild>;

        if i0 <= -1 goto label2;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>(i0, 0);

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = -1;

     label2:
        return 0;

     label3:
        if r1 == null goto label4;

        virtualinvoke r1.<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>();

        return 1;

     label4:
        return 0;
    }

    public void onRemoteAdapterDisconnected()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, $i1;
        android.os.Parcelable $r1, r4;
        android.widget.RemoteViewsAdapter $r2;
        android.widget.Adapter $r3;
        android.widget.AdapterViewAnimator$SavedState r5;

        r0 := @this: android.widget.AdapterViewAnimator;

        r4 := @parameter0: android.os.Parcelable;

        r5 = (android.widget.AdapterViewAnimator$SavedState) r4;

        $r1 = virtualinvoke r5.<android.widget.AdapterViewAnimator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        i0 = r5.<android.widget.AdapterViewAnimator$SavedState: int whichChild>;

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = i0;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r3 != null goto label1;

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = i0;

        goto label2;

     label1:
        $i1 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>($i1, 0);

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AdapterViewAnimator r0;
        android.os.Parcelable r1;
        android.widget.RemoteViewsAdapter r2;
        android.widget.AdapterViewAnimator$SavedState $r3;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>();

     label1:
        $r3 = new android.widget.AdapterViewAnimator$SavedState;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        specialinvoke $r3.<android.widget.AdapterViewAnimator$SavedState: void <init>(android.os.Parcelable,int)>(r1, $i0);

        return $r3;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, $i1, $i3, $i4;
        android.widget.AdapterViewAnimator$ViewAndMetaData r1;
        float $f0, $f1, $f2, $f3;
        boolean $z2, $z4, z6;
        java.lang.Runnable $r2, $r3, $r6;
        long $l2, $l5;
        android.widget.AdapterViewAnimator$CheckForTap $r4;
        android.widget.AdapterViewAnimator$1 $r5;
        android.view.MotionEvent r7;
        android.view.View r8, r9, r11;
        android.os.Handler r10;

        r0 := @this: android.widget.AdapterViewAnimator;

        r7 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r7.<android.view.MotionEvent: int getAction()>();

        if i0 == 0 goto label6;

        if i0 == 1 goto label3;

        if i0 == 3 goto label1;

        z6 = 0;

        goto label8;

     label1:
        r8 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if r8 == null goto label2;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>(r8);

     label2:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        z6 = 0;

        goto label8;

     label3:
        z6 = 0;

        $i3 = r0.<android.widget.AdapterViewAnimator: int mTouchMode>;

        if $i3 != 1 goto label5;

        r9 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        r1 = specialinvoke r0.<android.widget.AdapterViewAnimator: android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)>(r9);

        z6 = 0;

        if r9 == null goto label5;

        z6 = 0;

        $f2 = virtualinvoke r7.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r7.<android.view.MotionEvent: float getY()>();

        $z4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>($f2, $f3, r9, null);

        if $z4 == 0 goto label5;

        r10 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.os.Handler getHandler()>();

        if r10 == null goto label4;

        $r6 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        virtualinvoke r10.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

     label4:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showTapFeedback(android.view.View)>(r9);

        $r5 = new android.widget.AdapterViewAnimator$1;

        specialinvoke $r5.<android.widget.AdapterViewAnimator$1: void <init>(android.widget.AdapterViewAnimator,android.view.View,android.widget.AdapterViewAnimator$ViewAndMetaData)>(r0, r9, r1);

        $i4 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l5 = (long) $i4;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean postDelayed(java.lang.Runnable,long)>($r5, $l5);

        z6 = 1;

     label5:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        goto label8;

     label6:
        r11 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        z6 = 0;

        if r11 == null goto label8;

        z6 = 0;

        $f0 = virtualinvoke r7.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r7.<android.view.MotionEvent: float getY()>();

        $z2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>($f0, $f1, r11, null);

        if $z2 == 0 goto label8;

        $r2 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        if $r2 != null goto label7;

        $r4 = new android.widget.AdapterViewAnimator$CheckForTap;

        specialinvoke $r4.<android.widget.AdapterViewAnimator$CheckForTap: void <init>(android.widget.AdapterViewAnimator)>(r0);

        r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap> = $r4;

     label7:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 1;

        $r3 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l2 = (long) $i1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean postDelayed(java.lang.Runnable,long)>($r3, $l2);

        z6 = 0;

     label8:
        return z6;
    }

    void refreshChildren()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        android.view.View r1, $r11;
        android.widget.FrameLayout r2;
        android.widget.Adapter $r3, $r4;
        java.util.HashMap $r5, $r7;
        java.lang.Integer $r6, $r8;
        boolean $z0;
        java.lang.Object $r9;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r10;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r3 != null goto label1;

        return;

     label1:
        i6 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart>;

     label2:
        $i2 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        if i6 > $i2 goto label5;

        $i3 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i6, $i3);

        i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i6, i1);

        r1 = interfaceinvoke $r4.<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>($i4, null, r0);

        $i5 = virtualinvoke r1.<android.view.View: int getImportantForAccessibility()>();

        if $i5 != 0 goto label3;

        virtualinvoke r1.<android.view.View: void setImportantForAccessibility(int)>(1);

     label3:
        $r5 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r7 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r9;

        $r11 = $r10.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        r2 = (android.widget.FrameLayout) $r11;

        if r1 == null goto label4;

        virtualinvoke r2.<android.widget.FrameLayout: void removeAllViewsInLayout()>();

        virtualinvoke r2.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    public void setAdapter(android.widget.Adapter)
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter r1, $r4, $r5, r6, $r7;
        android.widget.AdapterView$AdapterDataSetObserver r2, $r3;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r6 := @parameter0: android.widget.Adapter;

        r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if r1 == null goto label1;

        r2 = r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        if r2 == null goto label1;

        interfaceinvoke r1.<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>(r2);

     label1:
        r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter> = r6;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void checkFocus()>();

        $r7 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r7 == null goto label2;

        $r3 = new android.widget.AdapterView$AdapterDataSetObserver;

        specialinvoke $r3.<android.widget.AdapterView$AdapterDataSetObserver: void <init>(android.widget.AdapterView)>(r0);

        r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver> = $r3;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        interfaceinvoke $r4.<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>($r3);

        $r5 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $i0 = interfaceinvoke $r5.<android.widget.Adapter: int getCount()>();

        r0.<android.widget.AdapterViewAnimator: int mItemCount> = $i0;

     label2:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setFocusable(boolean)>(1);

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = 0;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>(0, 0);

        return;
    }

    public void setAnimateFirstView(boolean)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        z0 := @parameter0: boolean;

        r0.<android.widget.AdapterViewAnimator: boolean mAnimateFirstTime> = z0;

        return;
    }

    public void setDisplayedChild(int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>(i0, 1);

        return;
    }

    public void setInAnimation(android.animation.ObjectAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.animation.ObjectAnimator;

        r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation> = r1;

        return;
    }

    public void setInAnimation(android.content.Context, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        int i0;
        android.animation.Animator $r2;
        android.animation.ObjectAnimator $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r1, i0);

        $r3 = (android.animation.ObjectAnimator) $r2;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>($r3);

        return;
    }

    public void setOutAnimation(android.animation.ObjectAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.animation.ObjectAnimator;

        r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation> = r1;

        return;
    }

    public void setOutAnimation(android.content.Context, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        int i0;
        android.animation.Animator $r2;
        android.animation.ObjectAnimator $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r1, i0);

        $r3 = (android.animation.ObjectAnimator) $r2;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>($r3);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Intent r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent,boolean)>(r1, 0);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0, $z1, $z2;
        android.widget.RemoteViewsAdapter $r1, $r2, $r4, $r7;
        android.content.Context $r3;
        android.content.Intent$FilterComparison $r5, $r6;
        android.content.Intent $r8, r9;

        r0 := @this: android.widget.AdapterViewAnimator;

        r9 := @parameter0: android.content.Intent;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r1 == null goto label1;

        $r5 = new android.content.Intent$FilterComparison;

        specialinvoke $r5.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r9);

        $r6 = new android.content.Intent$FilterComparison;

        $r7 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        $r8 = virtualinvoke $r7.<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>();

        specialinvoke $r6.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r8);

        $z2 = virtualinvoke $r5.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

        $r2 = new android.widget.RemoteViewsAdapter;

        $r3 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback,boolean)>($r3, r9, r0, z0);

        r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter> = $r2;

        $z1 = virtualinvoke $r2.<android.widget.RemoteViewsAdapter: boolean isDataReady()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>($r4);

     label2:
        return;
    }

    public java.lang.Runnable setRemoteViewsAdapterAsync(android.content.Intent)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Intent r1;
        android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction;

        specialinvoke $r2.<android.widget.RemoteViewsAdapter$AsyncRemoteAdapterAction: void <init>(android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback,android.content.Intent)>(r0, r1);

        return $r2;
    }

    public void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.RemoteViews$OnClickHandler r1;
        android.widget.RemoteViewsAdapter r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.widget.RemoteViews$OnClickHandler;

        r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>(r1);

     label1:
        return;
    }

    public void setSelection(int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>(i0);

        return;
    }

    public void showNext()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0, $i1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        $i1 = $i0 + 1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>($i1);

        return;
    }

    void showOnly(int, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0, $z1, $z2, $z3, $z4, $z6, z7, $z8, z10, z11;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i33, i34, i35, i36;
        android.view.View r1, r51, r54, r55, $r61;
        long l4;
        android.widget.Adapter $r2, $r13, $r14;
        java.util.ArrayList $r3, $r4, $r27, $r40, $r41, $r46;
        java.util.HashMap $r5, $r9, $r11, $r15, $r19, $r23, $r29, $r34, $r37, $r42, $r47, $r57;
        java.util.Set $r6;
        android.widget.RemoteViewsAdapter $r7, $r8;
        java.lang.Integer $r10, $r12, $r16, $r20, $r24, $r28, $r30, r53, $r58;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r17, $r22, $r26, $r32, $r36, $r39, $r45, $r60;
        java.lang.Object $r21, $r25, $r31, $r33, $r35, $r38, $r43, $r44, $r48, $r59;
        android.view.ViewGroup $r50;
        java.util.Iterator r52;
        android.widget.FrameLayout r56;

        r0 := @this: android.widget.AdapterViewAnimator;

        i21 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r2 != null goto label01;

        return;

     label01:
        i22 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        if i22 != 0 goto label02;

        return;

     label02:
        i23 = 0;

     label03:
        $r3 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $i5 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i23 >= $i5 goto label05;

        $r42 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r41 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r43 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        $r44 = virtualinvoke $r42.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r43);

        $r45 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r44;

        r51 = $r45.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r47 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r46 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r48 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r48);

        virtualinvoke r51.<android.view.View: void clearAnimation()>();

        $z6 = r51 instanceof android.view.ViewGroup;

        if $z6 == 0 goto label04;

        $r50 = (android.view.ViewGroup) r51;

        virtualinvoke $r50.<android.view.ViewGroup: void removeAllViewsInLayout()>();

     label04:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r51, -1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void removeViewInLayout(android.view.View)>(r51);

        i23 = i23 + 1;

        goto label03;

     label05:
        $r4 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $i6 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        i0 = i21 - $i6;

        $i7 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        $i8 = $i7 + i0;

        i1 = $i8 - 1;

        i24 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        $i9 = i22 - 1;

        i25 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i1);

        $z1 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z1 == 0 goto label06;

        i24 = i0;

        i25 = i1;

        goto label06;

     label06:
        $i10 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i26 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i24, $i10);

        $i11 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i27 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i25, $i11);

        if i26 <= i27 goto label07;

        z7 = 1;

        goto label08;

     label07:
        z7 = 0;

     label08:
        $r5 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r52 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z8 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label14;

        $r33 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.lang.Integer) $r33;

        if z7 != 0 goto label11;

        $i19 = virtualinvoke r53.<java.lang.Integer: int intValue()>();

        if $i19 < i26 goto label10;

        $i20 = virtualinvoke r53.<java.lang.Integer: int intValue()>();

        if $i20 <= i27 goto label11;

     label10:
        z10 = 1;

        goto label12;

     label11:
        z10 = 0;

        if z7 == 0 goto label12;

        z10 = 0;

        $i17 = virtualinvoke r53.<java.lang.Integer: int intValue()>();

        if $i17 <= i27 goto label12;

        z10 = 0;

        $i18 = virtualinvoke r53.<java.lang.Integer: int intValue()>();

        if $i18 >= i26 goto label12;

        z10 = 1;

     label12:
        if z10 == 0 goto label13;

        $r34 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r35 = virtualinvoke $r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r53);

        $r36 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r35;

        r1 = $r36.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r37 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r38 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r53);

        $r39 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r38;

        i28 = $r39.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex>;

        $r40 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r53);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(i28, -1, r1, z0);

     label13:
        goto label09;

     label14:
        $i12 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart>;

        if i24 != $i12 goto label16;

        $i15 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        if i25 != $i15 goto label16;

        $i16 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded>;

        if i0 == $i16 goto label15;

        goto label16;

     label15:
        goto label26;

     label16:
        i29 = i24;

     label17:
        if i29 > i25 goto label25;

        $i14 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i29, $i14);

        $r9 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z2 = virtualinvoke $r9.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r10);

        if $z2 == 0 goto label18;

        $r29 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r31 = virtualinvoke $r29.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r30);

        $r32 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r31;

        i33 = $r32.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex>;

        goto label19;

     label18:
        i33 = -1;

     label19:
        i3 = i29 - i0;

        $r11 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z3 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r12);

        if $z3 == 0 goto label20;

        $r27 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z4 = virtualinvoke $r27.<java.util.ArrayList: boolean contains(java.lang.Object)>($r28);

        if $z4 != 0 goto label20;

        z11 = 1;

        goto label21;

     label20:
        z11 = 0;

     label21:
        if z11 == 0 goto label22;

        $r19 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r21 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r20);

        $r22 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r21;

        r54 = $r22.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r23 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r25 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r24);

        $r26 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r25;

        $r26.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex> = i3;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r54, i3);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(i33, i3, r54, z0);

        goto label24;

     label22:
        i34 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i29, i22);

        $r13 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        r55 = interfaceinvoke $r13.<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i34, null, r0);

        $r14 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        l4 = interfaceinvoke $r14.<android.widget.Adapter: long getItemId(int)>(i34);

        r56 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>();

        if r55 == null goto label23;

        virtualinvoke r56.<android.widget.FrameLayout: void addView(android.view.View)>(r55);

     label23:
        $r15 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r17 = new android.widget.AdapterViewAnimator$ViewAndMetaData;

        specialinvoke $r17.<android.widget.AdapterViewAnimator$ViewAndMetaData: void <init>(android.widget.AdapterViewAnimator,android.view.View,int,int,long)>(r0, r56, i3, i34, l4);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void addChild(android.view.View)>(r56);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r56, i3);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(-1, i3, r56, z0);

     label24:
        $r57 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r59 = virtualinvoke $r57.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r58);

        $r60 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r59;

        $r61 = $r60.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        virtualinvoke $r61.<android.view.View: void bringToFront()>();

        i29 = i29 + 1;

        goto label17;

     label25:
        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = i24;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = i25;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded> = i0;

        $r7 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r7 == null goto label26;

        i35 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i24, i22);

        $i13 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        i36 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>($i13, i22);

        $r8 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r8.<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>(i35, i36);

        goto label26;

     label26:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void requestLayout()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void invalidate()>();

        return;
    }

    public void showPrevious()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0, $i1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        $i1 = $i0 - 1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>($i1);

        return;
    }

    void showTapFeedback(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(1);

        return;
    }

    void transformViewForTransition(int, int, android.view.View, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1;
        android.view.View r1;
        boolean z0;
        android.animation.ObjectAnimator $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        if i0 != -1 goto label1;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        virtualinvoke $r4.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

        $r5 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void start()>();

        goto label2;

     label1:
        if i1 != -1 goto label2;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

        $r3 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.widget.AdapterViewAnimator: int TOUCH_MODE_NONE> = 0;

        <android.widget.AdapterViewAnimator: int TOUCH_MODE_HANDLED> = 2;

        <android.widget.AdapterViewAnimator: int TOUCH_MODE_DOWN_IN_CURRENT_VIEW> = 1;

        <android.widget.AdapterViewAnimator: java.lang.String TAG> = "RemoteViewAnimator";

        <android.widget.AdapterViewAnimator: int DEFAULT_ANIMATION_DURATION> = 200;

        return;
    }
}
