public class android.widget.AnalogClock extends android.view.View
{
    private boolean mAttached;
    private boolean mChanged;
    private java.time.Clock mClock;
    private android.graphics.drawable.Drawable mDial;
    private int mDialHeight;
    private int mDialWidth;
    private float mHour;
    private android.graphics.drawable.Drawable mHourHand;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private android.graphics.drawable.Drawable mMinuteHand;
    private float mMinutes;

    public void <init>(android.content.Context)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;
        int i0, i1, $i2, $i3;
        android.content.res.TypedArray r2;
        android.widget.AnalogClock$1 $r3;
        int[] $r5, $r6;
        java.time.Clock $r7;
        android.graphics.drawable.Drawable $r8, $r9, $r10, $r11, $r12, r14, r15, r16;
        android.util.AttributeSet r13;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        r13 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r13, i0, i1);

        $r3 = new android.widget.AnalogClock$1;

        specialinvoke $r3.<android.widget.AnalogClock$1: void <init>(android.widget.AnalogClock)>(r0);

        r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver> = $r3;

        virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = <com.android.internal.R$styleable: int[] AnalogClock>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r13, $r5, i0, i1);

        $r6 = <com.android.internal.R$styleable: int[] AnalogClock>;

        virtualinvoke r0.<android.widget.AnalogClock: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r6, r13, r2, i0, i1);

        r14 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = r14;

        if r14 != null goto label1;

        $r12 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302125);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = $r12;

     label1:
        r15 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = r15;

        if r15 != null goto label2;

        $r11 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302126);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = $r11;

     label2:
        r16 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = r16;

        if r16 != null goto label3;

        $r10 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302127);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = $r10;

     label3:
        $r7 = staticinvoke <java.time.Clock: java.time.Clock systemDefaultZone()>();

        r0.<android.widget.AnalogClock: java.time.Clock mClock> = $r7;

        $r8 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i2 = virtualinvoke $r8.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.AnalogClock: int mDialWidth> = $i2;

        $r9 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i3 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.AnalogClock: int mDialHeight> = $i3;

        return;
    }

    static java.time.Clock access$002(android.widget.AnalogClock, java.time.Clock)
    {
        android.widget.AnalogClock r0;
        java.time.Clock r1;

        r0 := @parameter0: android.widget.AnalogClock;

        r1 := @parameter1: java.time.Clock;

        r0.<android.widget.AnalogClock: java.time.Clock mClock> = r1;

        return r1;
    }

    static void access$100(android.widget.AnalogClock)
    {
        android.widget.AnalogClock r0;

        r0 := @parameter0: android.widget.AnalogClock;

        specialinvoke r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    private void onTimeChanged()
    {
        android.widget.AnalogClock r0;
        long l0;
        java.time.LocalDateTime r1;
        int i1, i2, i3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.time.Clock $r2, $r3;
        java.time.ZoneId $r4;

        r0 := @this: android.widget.AnalogClock;

        $r2 = r0.<android.widget.AnalogClock: java.time.Clock mClock>;

        l0 = virtualinvoke $r2.<java.time.Clock: long millis()>();

        $r3 = r0.<android.widget.AnalogClock: java.time.Clock mClock>;

        $r4 = virtualinvoke $r3.<java.time.Clock: java.time.ZoneId getZone()>();

        r1 = staticinvoke <android.widget.AnalogClock: java.time.LocalDateTime toLocalDateTime(long,java.time.ZoneId)>(l0, $r4);

        i1 = virtualinvoke r1.<java.time.LocalDateTime: int getHour()>();

        i2 = virtualinvoke r1.<java.time.LocalDateTime: int getMinute()>();

        i3 = virtualinvoke r1.<java.time.LocalDateTime: int getSecond()>();

        $f3 = (float) i2;

        $f1 = (float) i3;

        $f2 = $f1 / 60.0F;

        f0 = $f3 + $f2;

        r0.<android.widget.AnalogClock: float mMinutes> = f0;

        $f5 = (float) i1;

        $f4 = f0 / 60.0F;

        $f6 = $f5 + $f4;

        r0.<android.widget.AnalogClock: float mHour> = $f6;

        r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        specialinvoke r0.<android.widget.AnalogClock: void updateContentDescription(long)>(l0);

        return;
    }

    private static java.time.LocalDateTime toLocalDateTime(long, java.time.ZoneId)
    {
        long l0;
        java.time.ZoneId r0;
        java.time.Instant $r1;
        java.time.LocalDateTime $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.time.ZoneId;

        $r1 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(l0);

        $r2 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r1, r0);

        return $r2;
    }

    private void updateContentDescription(long)
    {
        android.widget.AnalogClock r0;
        long l0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.AnalogClock;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.AnalogClock: android.content.Context mContext>;

        $r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r1, l0, 129);

        virtualinvoke r0.<android.widget.AnalogClock: void setContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AnalogClock r0;
        boolean $z0;
        java.time.Clock $r2;
        android.content.IntentFilter $r3;
        android.content.Context $r4;
        android.content.BroadcastReceiver $r5;
        android.os.UserHandle $r6;
        android.os.Handler $r7;

        r0 := @this: android.widget.AnalogClock;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $z0 = r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 != 0 goto label1;

        r0.<android.widget.AnalogClock: boolean mAttached> = 1;

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r4 = virtualinvoke r0.<android.widget.AnalogClock: android.content.Context getContext()>();

        $r5 = r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        $r6 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r7 = virtualinvoke r0.<android.widget.AnalogClock: android.os.Handler getHandler()>();

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r5, $r6, $r3, null, $r7);

     label1:
        $r2 = staticinvoke <java.time.Clock: java.time.Clock systemDefaultZone()>();

        r0.<android.widget.AnalogClock: java.time.Clock mClock> = $r2;

        specialinvoke r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AnalogClock r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.BroadcastReceiver $r2;

        r0 := @this: android.widget.AnalogClock;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        $z0 = r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.AnalogClock: android.content.Context getContext()>();

        $r2 = r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        r0.<android.widget.AnalogClock: boolean mAttached> = 0;

     label1:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.AnalogClock r0;
        android.graphics.Canvas r1;
        boolean z0, z1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.drawable.Drawable r2, r3, r4;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        z0 = r0.<android.widget.AnalogClock: boolean mChanged>;

        if z0 == 0 goto label1;

        r0.<android.widget.AnalogClock: boolean mChanged> = 0;

     label1:
        $i5 = r0.<android.widget.AnalogClock: int mRight>;

        $i4 = r0.<android.widget.AnalogClock: int mLeft>;

        i35 = $i5 - $i4;

        $i7 = r0.<android.widget.AnalogClock: int mBottom>;

        $i6 = r0.<android.widget.AnalogClock: int mTop>;

        i0 = $i7 - $i6;

        i1 = i35 / 2;

        i2 = i0 / 2;

        r2 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i36 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        z1 = 0;

        if i35 < i3 goto label2;

        if i0 >= i36 goto label3;

     label2:
        z1 = 1;

        $f2 = (float) i35;

        $f1 = (float) i3;

        $f6 = $f2 / $f1;

        $f4 = (float) i0;

        $f3 = (float) i36;

        $f5 = $f4 / $f3;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f6, $f5);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f8 = (float) i1;

        $f7 = (float) i2;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>(f0, f0, $f8, $f7);

     label3:
        if z0 == 0 goto label4;

        $i27 = i3 / 2;

        $i34 = i1 - $i27;

        $i28 = i36 / 2;

        $i33 = i2 - $i28;

        $i29 = i3 / 2;

        $i32 = $i29 + i1;

        $i30 = i36 / 2;

        $i31 = $i30 + i2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i34, $i33, $i32, $i31);

     label4:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f9 = r0.<android.widget.AnalogClock: float mHour>;

        $f10 = $f9 / 12.0F;

        $f13 = $f10 * 360.0F;

        $f12 = (float) i1;

        $f11 = (float) i2;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f13, $f12, $f11);

        r3 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand>;

        if z0 == 0 goto label5;

        i37 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i38 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i19 = i37 / 2;

        $i26 = i1 - $i19;

        $i20 = i38 / 2;

        $i25 = i2 - $i20;

        $i21 = i37 / 2;

        $i24 = $i21 + i1;

        $i22 = i38 / 2;

        $i23 = i2 + $i22;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i26, $i25, $i24, $i23);

     label5:
        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f14 = r0.<android.widget.AnalogClock: float mMinutes>;

        $f15 = $f14 / 60.0F;

        $f18 = $f15 * 360.0F;

        $f17 = (float) i1;

        $f16 = (float) i2;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f18, $f17, $f16);

        r4 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand>;

        if z0 == 0 goto label6;

        i39 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i40 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i11 = i39 / 2;

        $i18 = i1 - $i11;

        $i12 = i40 / 2;

        $i17 = i2 - $i12;

        $i13 = i39 / 2;

        $i16 = $i13 + i1;

        $i14 = i40 / 2;

        $i15 = i2 + $i14;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i18, $i17, $i16, $i15);

     label6:
        virtualinvoke r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        if z1 == 0 goto label7;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label7:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AnalogClock r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float $f1, $f2, $f3, $f4, f6, f7, f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.widget.AnalogClock;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        f6 = 1.0F;

        if i4 == 0 goto label1;

        i6 = r0.<android.widget.AnalogClock: int mDialWidth>;

        f6 = 1.0F;

        if i2 >= i6 goto label1;

        $f4 = (float) i2;

        $f3 = (float) i6;

        f6 = $f4 / $f3;

     label1:
        f7 = 1.0F;

        if i5 == 0 goto label2;

        i7 = r0.<android.widget.AnalogClock: int mDialHeight>;

        f7 = 1.0F;

        if i3 >= i7 goto label2;

        $f2 = (float) i3;

        $f1 = (float) i7;

        f7 = $f2 / $f1;

     label2:
        f8 = staticinvoke <java.lang.Math: float min(float,float)>(f6, f7);

        $i8 = r0.<android.widget.AnalogClock: int mDialWidth>;

        $f9 = (float) $i8;

        $f10 = $f9 * f8;

        $i9 = (int) $f10;

        $i10 = staticinvoke <android.widget.AnalogClock: int resolveSizeAndState(int,int,int)>($i9, i0, 0);

        $i11 = r0.<android.widget.AnalogClock: int mDialHeight>;

        $f11 = (float) $i11;

        $f12 = $f11 * f8;

        $i12 = (int) $f12;

        $i13 = staticinvoke <android.widget.AnalogClock: int resolveSizeAndState(int,int,int)>($i12, i1, 0);

        virtualinvoke r0.<android.widget.AnalogClock: void setMeasuredDimension(int,int)>($i10, $i13);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AnalogClock r0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.AnalogClock;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        return;
    }
}
