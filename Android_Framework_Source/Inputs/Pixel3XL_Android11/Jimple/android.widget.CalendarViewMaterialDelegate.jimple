class android.widget.CalendarViewMaterialDelegate extends android.widget.CalendarView$AbstractCalendarViewDelegate
{
    private final android.widget.DayPickerView mDayPickerView;
    private android.widget.CalendarView$OnDateChangeListener mOnDateChangeListener;
    private final android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener;

    public void <init>(android.widget.CalendarView, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.CalendarView r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.widget.CalendarViewMaterialDelegate$1 $r3;
        android.widget.DayPickerView $r4, $r6;
        android.widget.DayPickerView$OnDaySelectedListener $r5;
        android.content.Context r7;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        r1 := @parameter0: android.widget.CalendarView;

        r7 := @parameter1: android.content.Context;

        r2 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.CalendarView$AbstractCalendarViewDelegate: void <init>(android.widget.CalendarView,android.content.Context)>(r1, r7);

        $r3 = new android.widget.CalendarViewMaterialDelegate$1;

        specialinvoke $r3.<android.widget.CalendarViewMaterialDelegate$1: void <init>(android.widget.CalendarViewMaterialDelegate)>(r0);

        r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener> = $r3;

        $r4 = new android.widget.DayPickerView;

        specialinvoke $r4.<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r7, r2, i0, i1);

        r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView> = $r4;

        $r5 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener>;

        virtualinvoke $r4.<android.widget.DayPickerView: void setOnDaySelectedListener(android.widget.DayPickerView$OnDaySelectedListener)>($r5);

        $r6 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke r1.<android.widget.CalendarView: void addView(android.view.View)>($r6);

        return;
    }

    static android.widget.CalendarView$OnDateChangeListener access$000(android.widget.CalendarViewMaterialDelegate)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.CalendarView$OnDateChangeListener $r1;

        r0 := @parameter0: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.CalendarView$OnDateChangeListener mOnDateChangeListener>;

        return $r1;
    }

    public boolean getBoundsForDate(long, android.graphics.Rect)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        long l0;
        android.graphics.Rect r1;
        int[] r2, r3;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.widget.DayPickerView $r4, $r5;
        boolean $z0;
        android.widget.CalendarView $r6;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.Rect;

        $r4 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $z0 = virtualinvoke $r4.<android.widget.DayPickerView: boolean getBoundsForDate(long,android.graphics.Rect)>(l0, r1);

        if $z0 == 0 goto label1;

        r2 = newarray (int)[2];

        r3 = newarray (int)[2];

        $r5 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r5.<android.widget.DayPickerView: void getLocationOnScreen(int[])>(r2);

        $r6 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.CalendarView mDelegator>;

        virtualinvoke $r6.<android.widget.CalendarView: void getLocationOnScreen(int[])>(r3);

        $i3 = r2[1];

        $i2 = r3[1];

        i1 = $i3 - $i2;

        $i4 = r1.<android.graphics.Rect: int top>;

        $i5 = $i4 + i1;

        r1.<android.graphics.Rect: int top> = $i5;

        $i6 = r1.<android.graphics.Rect: int bottom>;

        $i7 = $i6 + i1;

        r1.<android.graphics.Rect: int bottom> = $i7;

        return 1;

     label1:
        return 0;
    }

    public long getDate()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        long $l0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $l0 = virtualinvoke $r1.<android.widget.DayPickerView: long getDate()>();

        return $l0;
    }

    public int getDateTextAppearance()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        int $i0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerView: int getDayTextAppearance()>();

        return $i0;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        int $i0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerView: int getFirstDayOfWeek()>();

        return $i0;
    }

    public long getMaxDate()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        long $l0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $l0 = virtualinvoke $r1.<android.widget.DayPickerView: long getMaxDate()>();

        return $l0;
    }

    public long getMinDate()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        long $l0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $l0 = virtualinvoke $r1.<android.widget.DayPickerView: long getMinDate()>();

        return $l0;
    }

    public int getWeekDayTextAppearance()
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.DayPickerView $r1;
        int $i0;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerView: int getDayOfWeekTextAppearance()>();

        return $i0;
    }

    public void setDate(long)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        long l0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setDate(long,boolean)>(l0, 1);

        return;
    }

    public void setDate(long, boolean, boolean)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        long l0;
        boolean z0, z1;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setDate(long,boolean)>(l0, z0);

        return;
    }

    public void setDateTextAppearance(int)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        int i0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setDayTextAppearance(int)>(i0);

        return;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        int i0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    public void setMaxDate(long)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        long l0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setMaxDate(long)>(l0);

        return;
    }

    public void setMinDate(long)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        long l0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setMinDate(long)>(l0);

        return;
    }

    public void setOnDateChangeListener(android.widget.CalendarView$OnDateChangeListener)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        android.widget.CalendarView$OnDateChangeListener r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        r1 := @parameter0: android.widget.CalendarView$OnDateChangeListener;

        r0.<android.widget.CalendarViewMaterialDelegate: android.widget.CalendarView$OnDateChangeListener mOnDateChangeListener> = r1;

        return;
    }

    public void setWeekDayTextAppearance(int)
    {
        android.widget.CalendarViewMaterialDelegate r0;
        int i0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.CalendarViewMaterialDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.CalendarViewMaterialDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setDayOfWeekTextAppearance(int)>(i0);

        return;
    }
}
