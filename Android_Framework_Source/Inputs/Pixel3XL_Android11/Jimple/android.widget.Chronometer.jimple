public class android.widget.Chronometer extends android.widget.TextView
{
    private static final int HOUR_IN_SEC;
    private static final int MIN_IN_SEC;
    private static final java.lang.String TAG;
    private long mBase;
    private boolean mCountDown;
    private java.lang.String mFormat;
    private java.lang.StringBuilder mFormatBuilder;
    private java.util.Formatter mFormatter;
    private java.lang.Object[] mFormatterArgs;
    private java.util.Locale mFormatterLocale;
    private boolean mLogged;
    private long mNow;
    private android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener;
    private java.lang.StringBuilder mRecycle;
    private boolean mRunning;
    private boolean mStarted;
    private final java.lang.Runnable mTickRunnable;
    private boolean mVisible;

    public void <init>(android.content.Context)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.content.res.TypedArray r3;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r5;
        android.widget.Chronometer$1 $r6;
        int[] $r7, $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r4 = newarray (java.lang.Object)[1];

        r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(8);

        r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle> = $r5;

        $r6 = new android.widget.Chronometer$1;

        specialinvoke $r6.<android.widget.Chronometer$1: void <init>(android.widget.Chronometer)>(r0);

        r0.<android.widget.Chronometer: java.lang.Runnable mTickRunnable> = $r6;

        $r7 = <com.android.internal.R$styleable: int[] Chronometer>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, i0, i1);

        $r8 = <com.android.internal.R$styleable: int[] Chronometer>;

        virtualinvoke r0.<android.widget.Chronometer: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r8, r2, r3, i0, i1);

        $r9 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r0.<android.widget.Chronometer: void setFormat(java.lang.String)>($r9);

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        virtualinvoke r0.<android.widget.Chronometer: void setCountDown(boolean)>($z0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.Chronometer: void init()>();

        return;
    }

    static boolean access$000(android.widget.Chronometer)
    {
        android.widget.Chronometer r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Chronometer;

        $z0 = r0.<android.widget.Chronometer: boolean mRunning>;

        return $z0;
    }

    static void access$100(android.widget.Chronometer, long)
    {
        android.widget.Chronometer r0;
        long l0;

        r0 := @parameter0: android.widget.Chronometer;

        l0 := @parameter1: long;

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>(l0);

        return;
    }

    static java.lang.Runnable access$200(android.widget.Chronometer)
    {
        android.widget.Chronometer r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: java.lang.Runnable mTickRunnable>;

        return $r1;
    }

    private static java.lang.String formatDuration(long)
    {
        long l0, $l2;
        java.lang.Integer $r3, $r13, $r16;
        android.icu.util.TimeUnit $r4, $r14, $r17;
        java.util.Locale $r5;
        android.icu.text.MeasureFormat$FormatWidth $r6;
        android.icu.text.MeasureFormat $r7;
        int $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        android.icu.util.Measure[] $r8, $r10;
        java.lang.Object[] $r9;
        java.lang.String $r11;
        java.util.ArrayList r18;
        android.icu.util.Measure r19, r20, r21;
        android.icu.util.MeasureUnit r22, r23, r24;

        l0 := @parameter0: long;

        $l2 = l0 / 1000L;

        i6 = (int) $l2;

        i7 = i6;

        if i6 >= 0 goto label1;

        i7 = neg i6;

     label1:
        i8 = 0;

        i9 = i7;

        if i7 < 3600 goto label2;

        i8 = i7 / 3600;

        $i5 = i8 * 3600;

        i9 = i7 - $i5;

     label2:
        i10 = i9;

        i11 = 0;

        if i9 < 60 goto label3;

        i11 = i9 / 60;

        $i4 = i11 * 60;

        i10 = i9 - $i4;

     label3:
        r18 = new java.util.ArrayList;

        specialinvoke r18.<java.util.ArrayList: void <init>()>();

        if i8 <= 0 goto label4;

        r19 = new android.icu.util.Measure;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r17 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit HOUR>;

        r22 = (android.icu.util.MeasureUnit) $r17;

        specialinvoke r19.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r16, r22);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

     label4:
        if i11 <= 0 goto label5;

        r20 = new android.icu.util.Measure;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r14 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit MINUTE>;

        r23 = (android.icu.util.MeasureUnit) $r14;

        specialinvoke r20.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r13, r23);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

     label5:
        r21 = new android.icu.util.Measure;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r4 = <android.icu.util.MeasureUnit: android.icu.util.TimeUnit SECOND>;

        r24 = (android.icu.util.MeasureUnit) $r4;

        specialinvoke r21.<android.icu.util.Measure: void <init>(java.lang.Number,android.icu.util.MeasureUnit)>($r3, r24);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = <android.icu.text.MeasureFormat$FormatWidth: android.icu.text.MeasureFormat$FormatWidth WIDE>;

        $r7 = staticinvoke <android.icu.text.MeasureFormat: android.icu.text.MeasureFormat getInstance(java.util.Locale,android.icu.text.MeasureFormat$FormatWidth)>($r5, $r6);

        $i3 = virtualinvoke r18.<java.util.ArrayList: int size()>();

        $r8 = newarray (android.icu.util.Measure)[$i3];

        $r9 = virtualinvoke r18.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (android.icu.util.Measure[]) $r9;

        $r11 = virtualinvoke $r7.<android.icu.text.MeasureFormat: java.lang.String formatMeasures(android.icu.util.Measure[])>($r10);

        return $r11;
    }

    private void init()
    {
        android.widget.Chronometer r0;
        long l0;

        r0 := @this: android.widget.Chronometer;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<android.widget.Chronometer: long mBase> = l0;

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>(l0);

        return;
    }

    private void updateRunning()
    {
        android.widget.Chronometer r0;
        boolean $z0, $z3, $z4, z5, $z6;
        java.lang.Runnable $r1, $r2;
        long $l0;

        r0 := @this: android.widget.Chronometer;

        $z0 = r0.<android.widget.Chronometer: boolean mVisible>;

        if $z0 == 0 goto label1;

        $z3 = r0.<android.widget.Chronometer: boolean mStarted>;

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r0.<android.widget.Chronometer: boolean isShown()>();

        if $z4 == 0 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        $z6 = r0.<android.widget.Chronometer: boolean mRunning>;

        if z5 == $z6 goto label5;

        if z5 == 0 goto label3;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l0);

        virtualinvoke r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $r2 = r0.<android.widget.Chronometer: java.lang.Runnable mTickRunnable>;

        virtualinvoke r0.<android.widget.Chronometer: boolean postDelayed(java.lang.Runnable,long)>($r2, 1000L);

        goto label4;

     label3:
        $r1 = r0.<android.widget.Chronometer: java.lang.Runnable mTickRunnable>;

        virtualinvoke r0.<android.widget.Chronometer: boolean removeCallbacks(java.lang.Runnable)>($r1);

     label4:
        r0.<android.widget.Chronometer: boolean mRunning> = z5;

     label5:
        return;
    }

    private void updateText(long)
    {
        android.widget.Chronometer r0;
        long l0, $l1, $l3, l5, l6, l7;
        java.util.Formatter r1, $r4, $r22;
        boolean $z0, $z1, $z2, z3;
        byte $b2;
        java.lang.StringBuilder $r2, $r5, $r20, $r25, r27;
        java.lang.String $r3, $r13, $r15, r16, r17, r18, $r23;
        java.util.Locale $r7, r19;
        android.content.res.Resources $r8;
        java.lang.Object[] $r9, $r21, $r24;
        java.lang.Throwable $r10, $r11;

        r0 := @this: android.widget.Chronometer;

        l5 := @parameter0: long;

        entermonitor r0;

     label01:
        r0.<android.widget.Chronometer: long mNow> = l5;

        $z0 = r0.<android.widget.Chronometer: boolean mCountDown>;

        if $z0 == 0 goto label03;

        $l3 = r0.<android.widget.Chronometer: long mBase>;

        l6 = $l3 - l5;

     label02:
        goto label04;

     label03:
        $l1 = r0.<android.widget.Chronometer: long mBase>;

        l6 = l5 - $l1;

     label04:
        l0 = l6 / 1000L;

     label05:
        z3 = 0;

        l7 = l0;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label06;

        l7 = neg l0;

        z3 = 1;

     label06:
        $r2 = r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle>;

        r16 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>($r2, l7);

     label07:
        r17 = r16;

        if z3 == 0 goto label09;

     label08:
        $r8 = virtualinvoke r0.<android.widget.Chronometer: android.content.res.Resources getResources()>();

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r16;

        r17 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040649, $r9);

     label09:
        r18 = r17;

     label10:
        $r3 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        if $r3 == null goto label18;

        r19 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        if $r4 == null goto label11;

        $r7 = r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale>;

        $z1 = virtualinvoke r19.<java.util.Locale: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label12;

     label11:
        r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale> = r19;

        r1 = new java.util.Formatter;

        $r5 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        specialinvoke r1.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r5, r19);

        r0.<android.widget.Chronometer: java.util.Formatter mFormatter> = r1;

     label12:
        $r20 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        virtualinvoke $r20.<java.lang.StringBuilder: void setLength(int)>(0);

        $r21 = r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

        $r21[0] = r17;

     label13:
        $r22 = r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        $r23 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        $r24 = r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

        virtualinvoke $r22.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r23, $r24);

        $r25 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        r18 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        goto label18;

     label15:
        $r11 := @caughtexception;

        r18 = r17;

     label16:
        $z2 = r0.<android.widget.Chronometer: boolean mLogged>;

        if $z2 != 0 goto label18;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal format string: ");

        $r13 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Chronometer", $r15);

        r0.<android.widget.Chronometer: boolean mLogged> = 1;

     label17:
        r18 = r17;

     label18:
        virtualinvoke r0.<android.widget.Chronometer: void setText(java.lang.CharSequence)>(r18);

     label19:
        exitmonitor r0;

        return;

     label20:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.util.IllegalFormatException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    void dispatchChronometerTick()
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener r1;

        r0 := @this: android.widget.Chronometer;

        r1 = r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.widget.Chronometer$OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>(r0);

     label1:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.Chronometer r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.Chronometer;

        $r1 = class "Landroid/widget/Chronometer;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public long getBase()
    {
        android.widget.Chronometer r0;
        long $l0;

        r0 := @this: android.widget.Chronometer;

        $l0 = r0.<android.widget.Chronometer: long mBase>;

        return $l0;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.widget.Chronometer r0;
        long $l0, $l1, $l2;
        java.lang.String $r1;

        r0 := @this: android.widget.Chronometer;

        $l1 = r0.<android.widget.Chronometer: long mNow>;

        $l0 = r0.<android.widget.Chronometer: long mBase>;

        $l2 = $l1 - $l0;

        $r1 = staticinvoke <android.widget.Chronometer: java.lang.String formatDuration(long)>($l2);

        return $r1;
    }

    public java.lang.String getFormat()
    {
        android.widget.Chronometer r0;
        java.lang.String $r1;

        r0 := @this: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        return $r1;
    }

    public android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener $r1;

        r0 := @this: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        return $r1;
    }

    public boolean isCountDown()
    {
        android.widget.Chronometer r0;
        boolean $z0;

        r0 := @this: android.widget.Chronometer;

        $z0 = r0.<android.widget.Chronometer: boolean mCountDown>;

        return $z0;
    }

    public boolean isTheFinalCountDown()
    {
        android.widget.Chronometer r0;
        android.content.Intent r1, $r3, $r4;
        android.net.Uri $r2;
        java.lang.Exception $r5;
        android.content.Context r6;

        r0 := @this: android.widget.Chronometer;

     label1:
        r6 = virtualinvoke r0.<android.widget.Chronometer: android.content.Context getContext()>();

        r1 = new android.content.Intent;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("https://youtu.be/9jK-NcRmVcw");

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r2);

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.BROWSABLE");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(528384);

        virtualinvoke r6.<android.content.Context: void startActivity(android.content.Intent)>($r4);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        specialinvoke r0.<android.widget.TextView: void onDetachedFromWindow()>();

        r0.<android.widget.Chronometer: boolean mVisible> = 0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.widget.Chronometer r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.widget.Chronometer r0;
        int i0;
        boolean z0;

        r0 := @this: android.widget.Chronometer;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void onWindowVisibilityChanged(int)>(i0);

        if i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.widget.Chronometer: boolean mVisible> = z0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void setBase(long)
    {
        android.widget.Chronometer r0;
        long l0, $l1;

        r0 := @this: android.widget.Chronometer;

        l0 := @parameter0: long;

        r0.<android.widget.Chronometer: long mBase> = l0;

        virtualinvoke r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l1);

        return;
    }

    public void setCountDown(boolean)
    {
        android.widget.Chronometer r0;
        boolean z0;
        long $l0;

        r0 := @this: android.widget.Chronometer;

        z0 := @parameter0: boolean;

        r0.<android.widget.Chronometer: boolean mCountDown> = z0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l0);

        return;
    }

    public void setFormat(java.lang.String)
    {
        android.widget.Chronometer r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: java.lang.String;

        r0.<android.widget.Chronometer: java.lang.String mFormat> = r1;

        if r1 == null goto label1;

        $r2 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder> = $r3;

     label1:
        return;
    }

    public void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener r1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.widget.Chronometer$OnChronometerTickListener;

        r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener> = r1;

        return;
    }

    public void setStarted(boolean)
    {
        android.widget.Chronometer r0;
        boolean z0;

        r0 := @this: android.widget.Chronometer;

        z0 := @parameter0: boolean;

        r0.<android.widget.Chronometer: boolean mStarted> = z0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void start()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        r0.<android.widget.Chronometer: boolean mStarted> = 1;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void stop()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        r0.<android.widget.Chronometer: boolean mStarted> = 0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Chronometer: java.lang.String TAG> = "Chronometer";

        <android.widget.Chronometer: int MIN_IN_SEC> = 60;

        <android.widget.Chronometer: int HOUR_IN_SEC> = 3600;

        return;
    }
}
