public abstract class android.widget.CompoundButton extends android.widget.Button implements android.widget.Checkable
{
    private static final int[] CHECKED_STATE_SET;
    private static final java.lang.String LOG_TAG;
    private boolean mBroadcasting;
    private android.graphics.BlendMode mButtonBlendMode;
    private android.graphics.drawable.Drawable mButtonDrawable;
    private android.content.res.ColorStateList mButtonTintList;
    private boolean mChecked;
    private boolean mCheckedFromResource;
    private java.lang.CharSequence mCustomStateDescription;
    private boolean mHasButtonBlendMode;
    private boolean mHasButtonTint;
    private android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener;
    private android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int[] $r2;

        $r0 = class "Landroid/widget/CompoundButton;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.CompoundButton: java.lang.String LOG_TAG> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 16842912;

        <android.widget.CompoundButton: int[] CHECKED_STATE_SET> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.CompoundButton r0;
        android.util.AttributeSet r1;
        int i0, i1, $i2;
        android.content.res.TypedArray r2;
        int[] $r3, $r4;
        boolean $z0, $z1, $z2;
        android.content.res.ColorStateList $r5;
        android.graphics.BlendMode $r6, $r7;
        android.content.Context r8;
        android.graphics.drawable.Drawable r9;

        r0 := @this: android.widget.CompoundButton;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r8, r1, i0, i1);

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = null;

        r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode> = null;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 0;

        r0.<android.widget.CompoundButton: boolean mHasButtonBlendMode> = 0;

        r0.<android.widget.CompoundButton: boolean mCheckedFromResource> = 0;

        r0.<android.widget.CompoundButton: java.lang.CharSequence mCustomStateDescription> = null;

        $r3 = <com.android.internal.R$styleable: int[] CompoundButton>;

        r2 = virtualinvoke r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r3, i0, i1);

        $r4 = <com.android.internal.R$styleable: int[] CompoundButton>;

        virtualinvoke r0.<android.widget.CompoundButton: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r8, $r4, r1, r2, i0, i1);

        r9 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if r9 == null goto label1;

        virtualinvoke r0.<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>(r9);

     label1:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        $r6 = r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode>;

        $r7 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>($i2, $r6);

        r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode> = $r7;

        r0.<android.widget.CompoundButton: boolean mHasButtonBlendMode> = 1;

     label2:
        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(2);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(2);

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = $r5;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 1;

     label3:
        $z2 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z2);

        r0.<android.widget.CompoundButton: boolean mCheckedFromResource> = 1;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    private void applyButtonTint()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z5;
        int[] $r6;
        android.graphics.BlendMode $r7;
        android.content.res.ColorStateList $r9;

        r0 := @this: android.widget.CompoundButton;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r2 == null goto label4;

        $z0 = r0.<android.widget.CompoundButton: boolean mHasButtonTint>;

        if $z0 != 0 goto label1;

        $z5 = r0.<android.widget.CompoundButton: boolean mHasButtonBlendMode>;

        if $z5 == 0 goto label4;

     label1:
        $r3 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        r1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable> = r1;

        $z1 = r0.<android.widget.CompoundButton: boolean mHasButtonTint>;

        if $z1 == 0 goto label2;

        $r9 = r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r9);

     label2:
        $z2 = r0.<android.widget.CompoundButton: boolean mHasButtonBlendMode>;

        if $z2 == 0 goto label3;

        $r8 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $r7 = r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r7);

     label3:
        $r4 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $z3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label4;

        $r5 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $r6 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

     label4:
        return;
    }

    public void autofill(android.view.autofill.AutofillValue)
    {
        android.widget.CompoundButton r0;
        android.view.autofill.AutofillValue r1;
        java.lang.String r2, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.autofill.AutofillValue;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<android.view.autofill.AutofillValue: boolean isToggle()>();

        if $z1 != 0 goto label2;

        r2 = <android.widget.CompoundButton: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be autofilled into ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r2, $r8);

        return;

     label2:
        $z2 = virtualinvoke r1.<android.view.autofill.AutofillValue: boolean getToggleValue()>();

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z2);

        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.CompoundButton r0;
        float f0, f1;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.CompoundButton;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.widget.Button: void drawableHotspotChanged(float,float)>(f0, f1);

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1;
        int[] $r2;

        r0 := @this: android.widget.CompoundButton;

        specialinvoke r0.<android.widget.Button: void drawableStateChanged()>();

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.widget.CompoundButton: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.CompoundButton r0;
        android.view.ViewHierarchyEncoder r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.widget.Button: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("checked", $z0);

        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.CompoundButton r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.CompoundButton;

        $r1 = class "Landroid/widget/CompoundButton;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getAutofillType()
    {
        android.widget.CompoundButton r0;
        boolean $z0;
        byte b0;

        r0 := @this: android.widget.CompoundButton;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 0;

     label2:
        return b0;
    }

    public android.view.autofill.AutofillValue getAutofillValue()
    {
        android.widget.CompoundButton r0;
        boolean $z0, $z1;
        android.view.autofill.AutofillValue r1;

        r0 := @this: android.widget.CompoundButton;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        r1 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forToggle(boolean)>($z1);

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public android.graphics.drawable.Drawable getButtonDrawable()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        return $r1;
    }

    protected java.lang.CharSequence getButtonStateDescription()
    {
        android.widget.CompoundButton r0;
        boolean $z0;
        android.content.res.Resources $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: android.widget.CompoundButton;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.CompoundButton: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039802);

        return $r4;

     label1:
        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(17040671);

        return $r2;
    }

    public android.graphics.BlendMode getButtonTintBlendMode()
    {
        android.widget.CompoundButton r0;
        android.graphics.BlendMode $r1;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode>;

        return $r1;
    }

    public android.content.res.ColorStateList getButtonTintList()
    {
        android.widget.CompoundButton r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList>;

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getButtonTintMode()
    {
        android.widget.CompoundButton r0;
        android.graphics.BlendMode r1;
        android.graphics.PorterDuff$Mode r2;

        r0 := @this: android.widget.CompoundButton;

        r1 = r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode>;

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.PorterDuff$Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>(r1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.CompoundButton r0;
        int i0, $i1, i2;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 = specialinvoke r0.<android.widget.Button: int getCompoundPaddingLeft()>();

        i2 = i0;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 != 0 goto label1;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        i2 = i0;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i2 = i0 + $i1;

     label1:
        return i2;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.CompoundButton r0;
        int i0, $i1, i2;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 = specialinvoke r0.<android.widget.Button: int getCompoundPaddingRight()>();

        i2 = i0;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        i2 = i0;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i2 = i0 + $i1;

     label1:
        return i2;
    }

    public int getHorizontalOffsetForDrawables()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: android.widget.CompoundButton;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public boolean isChecked()
    {
        android.widget.CompoundButton r0;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        return $z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.CompoundButton;

        specialinvoke r0.<android.widget.Button: void jumpDrawablesToCurrentState()>();

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.CompoundButton r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.Button: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.CompoundButton: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.CompoundButton: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.CompoundButton r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r2 == null goto label7;

        $i3 = virtualinvoke r0.<android.widget.CompoundButton: int getGravity()>();

        i8 = $i3 & 112;

        i9 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i10 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if i8 == 16 goto label2;

        if i8 == 80 goto label1;

        i11 = 0;

        goto label3;

     label1:
        $i7 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        i11 = $i7 - i9;

        goto label3;

     label2:
        $i4 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        $i5 = $i4 - i9;

        i11 = $i5 / 2;

     label3:
        i0 = i11 + i9;

        $z1 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z1 == 0 goto label4;

        $i6 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

        i12 = $i6 - i10;

        goto label5;

     label4:
        i12 = 0;

     label5:
        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 == 0 goto label6;

        i10 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

        goto label6;

     label6:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i12, i11, i10, i0);

        r3 = virtualinvoke r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable getBackground()>();

        if r3 == null goto label7;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i12, i11, i10, i0);

     label7:
        specialinvoke r0.<android.widget.Button: void onDraw(android.graphics.Canvas)>(r1);

        if r2 == null goto label9;

        i13 = r0.<android.widget.CompoundButton: int mScrollX>;

        i14 = r0.<android.widget.CompoundButton: int mScrollY>;

        if i13 != 0 goto label8;

        if i14 != 0 goto label8;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label9;

     label8:
        $f1 = (float) i13;

        $f0 = (float) i14;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $i1 = neg i13;

        $f3 = (float) $i1;

        $i2 = neg i14;

        $f2 = (float) $i2;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, $f2);

     label9:
        return;
    }

    public void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.CompoundButton r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.Button: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.CompoundButton r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.Button: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>(1);

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        return;
    }

    protected void onProvideStructure(android.view.ViewStructure, int, int)
    {
        android.widget.CompoundButton r0;
        android.view.ViewStructure r1;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.ViewStructure;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.widget.Button: void onProvideStructure(android.view.ViewStructure,int,int)>(r1, i0, i1);

        if i0 != 1 goto label1;

        $z0 = r0.<android.widget.CompoundButton: boolean mCheckedFromResource>;

        $z1 = 1 ^ $z0;

        virtualinvoke r1.<android.view.ViewStructure: void setDataIsSensitive(boolean)>($z1);

     label1:
        return;
    }

    public void onResolveDrawables(int)
    {
        android.widget.CompoundButton r0;
        int i0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.CompoundButton;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.Button: void onResolveDrawables(int)>(i0);

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>(i0);

     label1:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.CompoundButton r0;
        android.os.Parcelable $r1, r2;
        boolean $z0;
        android.widget.CompoundButton$SavedState r3;

        r0 := @this: android.widget.CompoundButton;

        r2 := @parameter0: android.os.Parcelable;

        r3 = (android.widget.CompoundButton$SavedState) r2;

        $r1 = virtualinvoke r3.<android.widget.CompoundButton$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.Button: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $z0 = r3.<android.widget.CompoundButton$SavedState: boolean checked>;

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z0);

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.CompoundButton r0;
        android.widget.CompoundButton$SavedState $r2;
        android.os.Parcelable $r3;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        $r2 = new android.widget.CompoundButton$SavedState;

        $r3 = specialinvoke r0.<android.widget.Button: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r2.<android.widget.CompoundButton$SavedState: void <init>(android.os.Parcelable)>($r3);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        $r2.<android.widget.CompoundButton$SavedState: boolean checked> = $z0;

        return $r2;
    }

    public boolean performClick()
    {
        android.widget.CompoundButton r0;
        boolean z0;

        r0 := @this: android.widget.CompoundButton;

        virtualinvoke r0.<android.widget.CompoundButton: void toggle()>();

        z0 = specialinvoke r0.<android.widget.Button: boolean performClick()>();

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.CompoundButton: void playSoundEffect(int)>(0);

     label1:
        return z0;
    }

    public void setButtonDrawable(int)
    {
        android.widget.CompoundButton r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.widget.CompoundButton;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>(r2);

        return;
    }

    public void setButtonDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1, r2, $r4;
        int $i0, $i1, $i2;
        boolean $z1, z4;
        int[] $r3;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r2 == r1 goto label5;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r4 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke r0.<android.widget.CompoundButton: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r4);

     label1:
        r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable> = r1;

        if r1 == null goto label5;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r0.<android.widget.CompoundButton: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0);

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label2:
        $i1 = virtualinvoke r0.<android.widget.CompoundButton: int getVisibility()>();

        if $i1 != 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z4, 0);

        $i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r0.<android.widget.CompoundButton: void setMinHeight(int)>($i2);

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

     label5:
        return;
    }

    public void setButtonTintBlendMode(android.graphics.BlendMode)
    {
        android.widget.CompoundButton r0;
        android.graphics.BlendMode r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.BlendMode;

        r0.<android.widget.CompoundButton: android.graphics.BlendMode mButtonBlendMode> = r1;

        r0.<android.widget.CompoundButton: boolean mHasButtonBlendMode> = 1;

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    public void setButtonTintList(android.content.res.ColorStateList)
    {
        android.widget.CompoundButton r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = r1;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 1;

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    public void setButtonTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.CompoundButton r0;
        int $i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        if r1 == null goto label1;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void setButtonTintBlendMode(android.graphics.BlendMode)>(r2);

        return;
    }

    public void setChecked(boolean)
    {
        android.widget.CompoundButton r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.widget.CompoundButton$OnCheckedChangeListener r3, r4;
        android.view.autofill.AutofillManager r5;

        r0 := @this: android.widget.CompoundButton;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.CompoundButton: boolean mChecked>;

        if $z1 == z0 goto label5;

        r0.<android.widget.CompoundButton: boolean mCheckedFromResource> = 0;

        r0.<android.widget.CompoundButton: boolean mChecked> = z0;

        virtualinvoke r0.<android.widget.CompoundButton: void refreshDrawableState()>();

        $z2 = r0.<android.widget.CompoundButton: boolean mBroadcasting>;

        if $z2 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.CompoundButton: boolean mBroadcasting> = 1;

        r3 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener>;

        if r3 == null goto label2;

        $z4 = r0.<android.widget.CompoundButton: boolean mChecked>;

        interfaceinvoke r3.<android.widget.CompoundButton$OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>(r0, $z4);

     label2:
        r4 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener>;

        if r4 == null goto label3;

        $z3 = r0.<android.widget.CompoundButton: boolean mChecked>;

        interfaceinvoke r4.<android.widget.CompoundButton$OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>(r0, $z3);

     label3:
        $r1 = r0.<android.widget.CompoundButton: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r5 = (android.view.autofill.AutofillManager) $r2;

        if r5 == null goto label4;

        virtualinvoke r5.<android.view.autofill.AutofillManager: void notifyValueChanged(android.view.View)>(r0);

     label4:
        r0.<android.widget.CompoundButton: boolean mBroadcasting> = 0;

     label5:
        virtualinvoke r0.<android.widget.CompoundButton: void setDefaultStateDescritption()>();

        return;
    }

    protected void setDefaultStateDescritption()
    {
        android.widget.CompoundButton r0;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: java.lang.CharSequence mCustomStateDescription>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<android.widget.CompoundButton: java.lang.CharSequence getButtonStateDescription()>();

        specialinvoke r0.<android.widget.Button: void setStateDescription(java.lang.CharSequence)>($r2);

     label1:
        return;
    }

    public void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
    {
        android.widget.CompoundButton r0;
        android.widget.CompoundButton$OnCheckedChangeListener r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.widget.CompoundButton$OnCheckedChangeListener;

        r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener> = r1;

        return;
    }

    void setOnCheckedChangeWidgetListener(android.widget.CompoundButton$OnCheckedChangeListener)
    {
        android.widget.CompoundButton r0;
        android.widget.CompoundButton$OnCheckedChangeListener r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.widget.CompoundButton$OnCheckedChangeListener;

        r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener> = r1;

        return;
    }

    public void setStateDescription(java.lang.CharSequence)
    {
        android.widget.CompoundButton r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.CompoundButton: java.lang.CharSequence mCustomStateDescription> = r1;

        if r1 != null goto label1;

        virtualinvoke r0.<android.widget.CompoundButton: void setDefaultStateDescritption()>();

        goto label2;

     label1:
        specialinvoke r0.<android.widget.Button: void setStateDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void toggle()
    {
        android.widget.CompoundButton r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z1);

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, z1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.Button: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 != $r2 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
