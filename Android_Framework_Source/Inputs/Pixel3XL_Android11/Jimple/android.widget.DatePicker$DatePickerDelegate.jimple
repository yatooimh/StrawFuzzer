interface  android.widget.DatePicker$DatePickerDelegate extends java.lang.Object
{

    public abstract void autofill(android.view.autofill.AutofillValue);

    public abstract boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent);

    public abstract android.view.autofill.AutofillValue getAutofillValue();

    public abstract android.widget.CalendarView getCalendarView();

    public abstract boolean getCalendarViewShown();

    public abstract int getDayOfMonth();

    public abstract int getFirstDayOfWeek();

    public abstract android.icu.util.Calendar getMaxDate();

    public abstract android.icu.util.Calendar getMinDate();

    public abstract int getMonth();

    public abstract boolean getSpinnersShown();

    public abstract int getYear();

    public abstract void init(int, int, int, android.widget.DatePicker$OnDateChangedListener);

    public abstract boolean isEnabled();

    public abstract void onConfigurationChanged(android.content.res.Configuration);

    public abstract void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent);

    public abstract void onRestoreInstanceState(android.os.Parcelable);

    public abstract android.os.Parcelable onSaveInstanceState(android.os.Parcelable);

    public abstract void setAutoFillChangeListener(android.widget.DatePicker$OnDateChangedListener);

    public abstract void setCalendarViewShown(boolean);

    public abstract void setEnabled(boolean);

    public abstract void setFirstDayOfWeek(int);

    public abstract void setMaxDate(long);

    public abstract void setMinDate(long);

    public abstract void setOnDateChangedListener(android.widget.DatePicker$OnDateChangedListener);

    public abstract void setSpinnersShown(boolean);

    public abstract void setValidationCallback(android.widget.DatePicker$ValidationCallback);

    public abstract void updateDate(int, int, int);
}
