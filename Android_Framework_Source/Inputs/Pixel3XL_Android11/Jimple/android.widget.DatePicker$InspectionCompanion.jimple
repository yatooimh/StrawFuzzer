public final class android.widget.DatePicker$InspectionCompanion extends java.lang.Object implements android.view.inspector.InspectionCompanion
{
    private int mCalendarViewShownId;
    private int mDatePickerModeId;
    private int mDayOfMonthId;
    private int mFirstDayOfWeekId;
    private int mMaxDateId;
    private int mMinDateId;
    private int mMonthId;
    private boolean mPropertiesMapped;
    private int mSpinnersShownId;
    private int mYearId;

    public void <init>()
    {
        android.widget.DatePicker$InspectionCompanion r0;

        r0 := @this: android.widget.DatePicker$InspectionCompanion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.DatePicker$InspectionCompanion: boolean mPropertiesMapped> = 0;

        return;
    }

    public void mapProperties(android.view.inspector.PropertyMapper)
    {
        android.widget.DatePicker$InspectionCompanion r0;
        android.view.inspector.PropertyMapper r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.util.SparseArray $r3;
        android.widget._$$Lambda$QY3N4tzLteuFdjRnyJFCbR1ajSI $r5;

        r0 := @this: android.widget.DatePicker$InspectionCompanion;

        r1 := @parameter0: android.view.inspector.PropertyMapper;

        $i0 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapBoolean(java.lang.String,int)>("calendarViewShown", 16843596);

        r0.<android.widget.DatePicker$InspectionCompanion: int mCalendarViewShownId> = $i0;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(1, "spinner");

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(2, "calendar");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r5 = new android.widget._$$Lambda$QY3N4tzLteuFdjRnyJFCbR1ajSI;

        specialinvoke $r5.<android.widget._$$Lambda$QY3N4tzLteuFdjRnyJFCbR1ajSI: void <init>(android.util.SparseArray)>($r3);

        $i1 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapIntEnum(java.lang.String,int,java.util.function.IntFunction)>("datePickerMode", 16843955, $r5);

        r0.<android.widget.DatePicker$InspectionCompanion: int mDatePickerModeId> = $i1;

        $i2 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapInt(java.lang.String,int)>("dayOfMonth", 0);

        r0.<android.widget.DatePicker$InspectionCompanion: int mDayOfMonthId> = $i2;

        $i3 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapInt(java.lang.String,int)>("firstDayOfWeek", 16843581);

        r0.<android.widget.DatePicker$InspectionCompanion: int mFirstDayOfWeekId> = $i3;

        $i4 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapLong(java.lang.String,int)>("maxDate", 16843584);

        r0.<android.widget.DatePicker$InspectionCompanion: int mMaxDateId> = $i4;

        $i5 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapLong(java.lang.String,int)>("minDate", 16843583);

        r0.<android.widget.DatePicker$InspectionCompanion: int mMinDateId> = $i5;

        $i6 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapInt(java.lang.String,int)>("month", 0);

        r0.<android.widget.DatePicker$InspectionCompanion: int mMonthId> = $i6;

        $i7 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapBoolean(java.lang.String,int)>("spinnersShown", 16843595);

        r0.<android.widget.DatePicker$InspectionCompanion: int mSpinnersShownId> = $i7;

        $i8 = interfaceinvoke r1.<android.view.inspector.PropertyMapper: int mapInt(java.lang.String,int)>("year", 0);

        r0.<android.widget.DatePicker$InspectionCompanion: int mYearId> = $i8;

        r0.<android.widget.DatePicker$InspectionCompanion: boolean mPropertiesMapped> = 1;

        return;
    }

    public void readProperties(android.widget.DatePicker, android.view.inspector.PropertyReader)
    {
        android.widget.DatePicker$InspectionCompanion r0;
        android.widget.DatePicker r1;
        android.view.inspector.PropertyReader r2;
        boolean $z0, $z1, $z2;
        android.view.inspector.InspectionCompanion$UninitializedPropertyMapException $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i15;
        long $l8, $l10;

        r0 := @this: android.widget.DatePicker$InspectionCompanion;

        r1 := @parameter0: android.widget.DatePicker;

        r2 := @parameter1: android.view.inspector.PropertyReader;

        $z0 = r0.<android.widget.DatePicker$InspectionCompanion: boolean mPropertiesMapped>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.widget.DatePicker$InspectionCompanion: int mCalendarViewShownId>;

        $z1 = virtualinvoke r1.<android.widget.DatePicker: boolean getCalendarViewShown()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readBoolean(int,boolean)>($i0, $z1);

        $i1 = r0.<android.widget.DatePicker$InspectionCompanion: int mDatePickerModeId>;

        $i2 = virtualinvoke r1.<android.widget.DatePicker: int getMode()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readIntEnum(int,int)>($i1, $i2);

        $i3 = r0.<android.widget.DatePicker$InspectionCompanion: int mDayOfMonthId>;

        $i4 = virtualinvoke r1.<android.widget.DatePicker: int getDayOfMonth()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readInt(int,int)>($i3, $i4);

        $i5 = r0.<android.widget.DatePicker$InspectionCompanion: int mFirstDayOfWeekId>;

        $i6 = virtualinvoke r1.<android.widget.DatePicker: int getFirstDayOfWeek()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readInt(int,int)>($i5, $i6);

        $i7 = r0.<android.widget.DatePicker$InspectionCompanion: int mMaxDateId>;

        $l8 = virtualinvoke r1.<android.widget.DatePicker: long getMaxDate()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readLong(int,long)>($i7, $l8);

        $i9 = r0.<android.widget.DatePicker$InspectionCompanion: int mMinDateId>;

        $l10 = virtualinvoke r1.<android.widget.DatePicker: long getMinDate()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readLong(int,long)>($i9, $l10);

        $i11 = r0.<android.widget.DatePicker$InspectionCompanion: int mMonthId>;

        $i12 = virtualinvoke r1.<android.widget.DatePicker: int getMonth()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readInt(int,int)>($i11, $i12);

        $i13 = r0.<android.widget.DatePicker$InspectionCompanion: int mSpinnersShownId>;

        $z2 = virtualinvoke r1.<android.widget.DatePicker: boolean getSpinnersShown()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readBoolean(int,boolean)>($i13, $z2);

        $i14 = r0.<android.widget.DatePicker$InspectionCompanion: int mYearId>;

        $i15 = virtualinvoke r1.<android.widget.DatePicker: int getYear()>();

        interfaceinvoke r2.<android.view.inspector.PropertyReader: void readInt(int,int)>($i14, $i15);

        return;

     label1:
        $r3 = new android.view.inspector.InspectionCompanion$UninitializedPropertyMapException;

        specialinvoke $r3.<android.view.inspector.InspectionCompanion$UninitializedPropertyMapException: void <init>()>();

        throw $r3;
    }

    public volatile void readProperties(java.lang.Object, android.view.inspector.PropertyReader)
    {
        android.widget.DatePicker$InspectionCompanion r0;
        java.lang.Object r1;
        android.view.inspector.PropertyReader r2;
        android.widget.DatePicker $r3;

        r0 := @this: android.widget.DatePicker$InspectionCompanion;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.view.inspector.PropertyReader;

        $r3 = (android.widget.DatePicker) r1;

        virtualinvoke r0.<android.widget.DatePicker$InspectionCompanion: void readProperties(android.widget.DatePicker,android.view.inspector.PropertyReader)>($r3, r2);

        return;
    }
}
