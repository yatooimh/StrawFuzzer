class android.widget.DatePickerCalendarDelegate extends android.widget.DatePicker$AbstractDatePickerDelegate
{
    private static final int ANIMATION_DURATION;
    private static final int[] ATTRS_DISABLED_ALPHA;
    private static final int[] ATTRS_TEXT_COLOR;
    private static final int DEFAULT_END_YEAR;
    private static final int DEFAULT_START_YEAR;
    private static final int UNINITIALIZED;
    private static final int USE_LOCALE;
    private static final int VIEW_MONTH_DAY;
    private static final int VIEW_YEAR;
    private android.widget.ViewAnimator mAnimator;
    private android.view.ViewGroup mContainer;
    private int mCurrentView;
    private android.widget.DayPickerView mDayPickerView;
    private int mFirstDayOfWeek;
    private android.widget.TextView mHeaderMonthDay;
    private android.widget.TextView mHeaderYear;
    private final android.icu.util.Calendar mMaxDate;
    private final android.icu.util.Calendar mMinDate;
    private android.icu.text.DateFormat mMonthDayFormat;
    private final android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener;
    private final android.view.View$OnClickListener mOnHeaderClickListener;
    private final android.widget.YearPickerView$OnYearSelectedListener mOnYearSelectedListener;
    private java.lang.String mSelectDay;
    private java.lang.String mSelectYear;
    private final android.icu.util.Calendar mTempDate;
    private android.icu.text.DateFormat mYearFormat;
    private android.widget.YearPickerView mYearPickerView;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <android.widget.DatePickerCalendarDelegate: int VIEW_YEAR> = 1;

        <android.widget.DatePickerCalendarDelegate: int VIEW_MONTH_DAY> = 0;

        <android.widget.DatePickerCalendarDelegate: int USE_LOCALE> = 0;

        <android.widget.DatePickerCalendarDelegate: int UNINITIALIZED> = -1;

        <android.widget.DatePickerCalendarDelegate: int DEFAULT_START_YEAR> = 1900;

        <android.widget.DatePickerCalendarDelegate: int DEFAULT_END_YEAR> = 2100;

        <android.widget.DatePickerCalendarDelegate: int ANIMATION_DURATION> = 300;

        $r0 = newarray (int)[1];

        $r0[0] = 16842904;

        <android.widget.DatePickerCalendarDelegate: int[] ATTRS_TEXT_COLOR> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842803;

        <android.widget.DatePickerCalendarDelegate: int[] ATTRS_DISABLED_ALPHA> = $r1;

        return;
    }

    public void <init>(android.widget.DatePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i1, $i2, $i6, i7, i8;
        android.content.res.Resources r1;
        android.view.ViewGroup r2, $r20, $r22, $r28, r61;
        android.widget.DatePickerCalendarDelegate$1 $r3;
        android.widget.DatePickerCalendarDelegate$2 $r4;
        android.widget._$$Lambda$DatePickerCalendarDelegate$GuCiuXPsIV2EU6oKGRXrsGY_DHM $r5;
        android.icu.util.Calendar $r6, $r7, $r8, $r9, $r10, $r11, $r31, $r33, $r35, $r41, $r42, $r43;
        android.widget.DatePicker $r12, $r18, $r21, r56;
        int[] $r13, $r53;
        android.content.Context $r14, $r15, $r54, r57;
        java.lang.Object $r16;
        android.view.LayoutInflater $r17;
        android.view.View $r19, $r23, $r24, $r26, $r29, $r30, $r40;
        android.view.View$OnClickListener $r25, $r27;
        boolean $z0;
        android.widget.DayPickerView $r32, $r34, $r36, $r38, r68;
        long $l3, $l4, $l5;
        android.widget.DayPickerView$OnDaySelectedListener $r37;
        android.widget.ViewAnimator $r39, r67;
        android.widget.YearPickerView $r44, $r46, r69;
        android.widget.YearPickerView$OnYearSelectedListener $r45;
        java.lang.String $r47, $r48;
        java.util.Locale $r49, r59;
        android.graphics.drawable.Drawable $r50;
        android.widget.TextView $r51, $r52, r62, r63;
        android.content.res.ColorStateList $r55, r64, r66;
        android.util.AttributeSet r58;
        android.content.res.TypedArray r60, r65;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r56 := @parameter0: android.widget.DatePicker;

        r57 := @parameter1: android.content.Context;

        r58 := @parameter2: android.util.AttributeSet;

        i7 := @parameter3: int;

        i0 := @parameter4: int;

        specialinvoke r0.<android.widget.DatePicker$AbstractDatePickerDelegate: void <init>(android.widget.DatePicker,android.content.Context)>(r56, r57);

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = -1;

        r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek> = 0;

        $r3 = new android.widget.DatePickerCalendarDelegate$1;

        specialinvoke $r3.<android.widget.DatePickerCalendarDelegate$1: void <init>(android.widget.DatePickerCalendarDelegate)>(r0);

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener> = $r3;

        $r4 = new android.widget.DatePickerCalendarDelegate$2;

        specialinvoke $r4.<android.widget.DatePickerCalendarDelegate$2: void <init>(android.widget.DatePickerCalendarDelegate)>(r0);

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView$OnYearSelectedListener mOnYearSelectedListener> = $r4;

        $r5 = new android.widget._$$Lambda$DatePickerCalendarDelegate$GuCiuXPsIV2EU6oKGRXrsGY_DHM;

        specialinvoke $r5.<android.widget._$$Lambda$DatePickerCalendarDelegate$GuCiuXPsIV2EU6oKGRXrsGY_DHM: void <init>(android.widget.DatePickerCalendarDelegate)>(r0);

        r0.<android.widget.DatePickerCalendarDelegate: android.view.View$OnClickListener mOnHeaderClickListener> = $r5;

        r59 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Locale mCurrentLocale>;

        $r6 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>(r59);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate> = $r6;

        $r7 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>(r59);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate> = $r7;

        $r8 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>(r59);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate> = $r8;

        $r9 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>(r59);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate> = $r9;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        virtualinvoke $r10.<android.icu.util.Calendar: void set(int,int,int)>(1900, 0, 1);

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r11.<android.icu.util.Calendar: void set(int,int,int)>(2100, 11, 31);

        $r12 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        r1 = virtualinvoke $r12.<android.widget.DatePicker: android.content.res.Resources getResources()>();

        $r14 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r13 = <com.android.internal.R$styleable: int[] DatePicker>;

        r60 = virtualinvoke $r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r58, $r13, i7, i0);

        $r15 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r17 = (android.view.LayoutInflater) $r16;

        $i1 = virtualinvoke r60.<android.content.res.TypedArray: int getResourceId(int,int)>(19, 17367142);

        $r18 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        $r19 = virtualinvoke $r17.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, $r18, 0);

        r61 = (android.view.ViewGroup) $r19;

        r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer> = r61;

        virtualinvoke r61.<android.view.ViewGroup: void setSaveFromParentEnabled(boolean)>(0);

        $r21 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        $r20 = r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer>;

        virtualinvoke $r21.<android.widget.DatePicker: void addView(android.view.View)>($r20);

        $r22 = r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer>;

        $r23 = virtualinvoke $r22.<android.view.ViewGroup: android.view.View findViewById(int)>(16908908);

        r2 = (android.view.ViewGroup) $r23;

        $r24 = virtualinvoke r2.<android.view.ViewGroup: android.view.View findViewById(int)>(16908910);

        r62 = (android.widget.TextView) $r24;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear> = r62;

        $r25 = r0.<android.widget.DatePickerCalendarDelegate: android.view.View$OnClickListener mOnHeaderClickListener>;

        virtualinvoke r62.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r25);

        $r26 = virtualinvoke r2.<android.view.ViewGroup: android.view.View findViewById(int)>(16908909);

        r63 = (android.widget.TextView) $r26;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay> = r63;

        $r27 = r0.<android.widget.DatePickerCalendarDelegate: android.view.View$OnClickListener mOnHeaderClickListener>;

        virtualinvoke r63.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r27);

        r64 = null;

        i8 = virtualinvoke r60.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        if i8 == 0 goto label1;

        $r54 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r53 = <android.widget.DatePickerCalendarDelegate: int[] ATTRS_TEXT_COLOR>;

        r65 = virtualinvoke $r54.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r53, 0, i8);

        $r55 = virtualinvoke r65.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(0);

        r64 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: android.content.res.ColorStateList applyLegacyColorFixes(android.content.res.ColorStateList)>($r55);

        virtualinvoke r65.<android.content.res.TypedArray: void recycle()>();

     label1:
        r66 = r64;

        if r64 != null goto label2;

        r66 = virtualinvoke r60.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(18);

     label2:
        if r66 == null goto label3;

        $r51 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        virtualinvoke $r51.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r66);

        $r52 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay>;

        virtualinvoke $r52.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r66);

     label3:
        $z0 = virtualinvoke r60.<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>(0);

        if $z0 == 0 goto label4;

        $r50 = virtualinvoke r60.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r2.<android.view.ViewGroup: void setBackground(android.graphics.drawable.Drawable)>($r50);

     label4:
        virtualinvoke r60.<android.content.res.TypedArray: void recycle()>();

        $r28 = r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer>;

        $r29 = virtualinvoke $r28.<android.view.ViewGroup: android.view.View findViewById(int)>(16908757);

        r67 = (android.widget.ViewAnimator) $r29;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator> = r67;

        $r30 = virtualinvoke r67.<android.widget.ViewAnimator: android.view.View findViewById(int)>(16908907);

        r68 = (android.widget.DayPickerView) $r30;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView> = r68;

        $i2 = r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek>;

        virtualinvoke r68.<android.widget.DayPickerView: void setFirstDayOfWeek(int)>($i2);

        $r32 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r31 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $l3 = virtualinvoke $r31.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r32.<android.widget.DayPickerView: void setMinDate(long)>($l3);

        $r34 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r33 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        $l4 = virtualinvoke $r33.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r34.<android.widget.DayPickerView: void setMaxDate(long)>($l4);

        $r36 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r35 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $l5 = virtualinvoke $r35.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r36.<android.widget.DayPickerView: void setDate(long)>($l5);

        $r38 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r37 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener>;

        virtualinvoke $r38.<android.widget.DayPickerView: void setOnDaySelectedListener(android.widget.DayPickerView$OnDaySelectedListener)>($r37);

        $r39 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        $r40 = virtualinvoke $r39.<android.widget.ViewAnimator: android.view.View findViewById(int)>(16908911);

        r69 = (android.widget.YearPickerView) $r40;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView> = r69;

        $r42 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $r41 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        virtualinvoke r69.<android.widget.YearPickerView: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>($r42, $r41);

        $r44 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $r43 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i6 = virtualinvoke $r43.<android.icu.util.Calendar: int get(int)>(1);

        virtualinvoke $r44.<android.widget.YearPickerView: void setYear(int)>($i6);

        $r46 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $r45 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView$OnYearSelectedListener mOnYearSelectedListener>;

        virtualinvoke $r46.<android.widget.YearPickerView: void setOnYearSelectedListener(android.widget.YearPickerView$OnYearSelectedListener)>($r45);

        $r47 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041201);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectDay> = $r47;

        $r48 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17041207);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectYear> = $r48;

        $r49 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Locale mCurrentLocale>;

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void onLocaleChanged(java.util.Locale)>($r49);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(0);

        return;
    }

    static void access$000(android.widget.DatePickerCalendarDelegate, boolean, boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0, z1;

        r0 := @parameter0: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onDateChanged(boolean,boolean)>(z0, z1);

        return;
    }

    static int access$100(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.widget.DatePickerCalendarDelegate: int getDaysInMonth(int,int)>(i0, i1);

        return $i2;
    }

    static void access$200(android.widget.DatePickerCalendarDelegate, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0;

        r0 := @parameter0: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(i0);

        return;
    }

    static android.widget.TextView access$300(android.widget.DatePickerCalendarDelegate)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.TextView $r1;

        r0 := @parameter0: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        return $r1;
    }

    private android.content.res.ColorStateList applyLegacyColorFixes(android.content.res.ColorStateList)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean $z0, $z1;
        int[] $r1, $r6, $r7, $r8, $r9, r11;
        android.content.Context $r2;
        android.content.res.TypedArray $r3;
        float $f0;
        android.content.res.ColorStateList $r4, r10;
        int[][] $r5;
        int i0, i1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r10 := @parameter0: android.content.res.ColorStateList;

        if r10 == null goto label6;

        $z0 = virtualinvoke r10.<android.content.res.ColorStateList: boolean hasState(int)>(16843518);

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $z1 = virtualinvoke r10.<android.content.res.ColorStateList: boolean hasState(int)>(16842913);

        if $z1 == 0 goto label2;

        $r8 = staticinvoke <android.util.StateSet: int[] get(int)>(10);

        i0 = virtualinvoke r10.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, 0);

        $r9 = staticinvoke <android.util.StateSet: int[] get(int)>(8);

        i1 = virtualinvoke r10.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r9, 0);

        goto label3;

     label2:
        i0 = virtualinvoke r10.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r1 = <android.widget.DatePickerCalendarDelegate: int[] ATTRS_DISABLED_ALPHA>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r1);

        $f0 = virtualinvoke $r3.<android.content.res.TypedArray: float getFloat(int,float)>(0, 0.3F);

        i1 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: int multiplyAlphaComponent(int,float)>(i0, $f0);

     label3:
        if i0 == 0 goto label5;

        if i1 != 0 goto label4;

        goto label5;

     label4:
        r11 = newarray (int)[0];

        $r4 = new android.content.res.ColorStateList;

        $r5 = newarray (int[])[2];

        $r6 = newarray (int)[1];

        $r6[0] = 16843518;

        $r5[0] = $r6;

        $r5[1] = r11;

        $r7 = newarray (int)[2];

        $r7[0] = i0;

        $r7[1] = i1;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r5, $r7);

        return $r4;

     label5:
        return null;

     label6:
        return r10;
    }

    private static int getDaysInMonth(int, int)
    {
        int i0, $i1, $i2, $i3, i4;
        java.lang.IllegalArgumentException $r0;
        byte b5;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        tableswitch(i4)
        {
            case 0: goto label7;
            case 1: goto label3;
            case 2: goto label7;
            case 3: goto label2;
            case 4: goto label7;
            case 5: goto label2;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label2;
            case 9: goto label7;
            case 10: goto label2;
            case 11: goto label7;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Month");

        throw $r0;

     label2:
        return 30;

     label3:
        $i1 = i0 % 4;

        if $i1 != 0 goto label5;

        $i2 = i0 % 100;

        if $i2 != 0 goto label4;

        $i3 = i0 % 400;

        if $i3 != 0 goto label5;

     label4:
        b5 = 29;

        goto label6;

     label5:
        b5 = 28;

     label6:
        return b5;

     label7:
        return 31;
    }

    private int multiplyAlphaComponent(int, float)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float f0, $f1, $f2, $f3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = i0 >> 24;

        $i2 = $i1 & 255;

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i3 = (int) $f3;

        $i5 = $i3 << 24;

        $i4 = 16777215 & i0;

        $i6 = $i5 | $i4;

        return $i6;
    }

    private void onCurrentDateChanged(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;
        android.widget.TextView $r1, $r5, $r9;
        android.icu.util.Calendar $r2, $r6;
        android.icu.text.DateFormat $r3, $r7;
        java.util.Date $r4, $r8;
        android.widget.ViewAnimator $r10;
        java.lang.String $r11, r12, r13;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.text.DateFormat mYearFormat>;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $r4 = virtualinvoke $r2.<android.icu.util.Calendar: java.util.Date getTime()>();

        r12 = virtualinvoke $r3.<android.icu.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r12);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.text.DateFormat mMonthDayFormat>;

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $r8 = virtualinvoke $r6.<android.icu.util.Calendar: java.util.Date getTime()>();

        r13 = virtualinvoke $r7.<android.icu.text.DateFormat: java.lang.String format(java.util.Date)>($r8);

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay>;

        virtualinvoke $r9.<android.widget.TextView: void setText(java.lang.CharSequence)>(r13);

        if z0 == 0 goto label2;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        $r11 = virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: java.lang.String getFormattedCurrentDate()>();

        virtualinvoke $r10.<android.widget.ViewAnimator: void announceForAccessibility(java.lang.CharSequence)>($r11);

     label2:
        return;
    }

    private void onDateChanged(boolean, boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0, z1;
        int i0, i1, i2;
        android.icu.util.Calendar $r1, $r3, $r4, $r13;
        android.widget.DatePicker$OnDateChangedListener $r2, $r5, $r6, $r8, $r10, $r11;
        android.widget.DatePicker $r7, $r9;
        android.widget.DayPickerView $r12;
        long $l3;
        android.widget.YearPickerView $r14;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i0 = virtualinvoke $r1.<android.icu.util.Calendar: int get(int)>(1);

        if z1 == 0 goto label3;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        if $r2 != null goto label1;

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mAutoFillChangeListener>;

        if $r11 == null goto label3;

     label1:
        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i1 = virtualinvoke $r3.<android.icu.util.Calendar: int get(int)>(2);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i2 = virtualinvoke $r4.<android.icu.util.Calendar: int get(int)>(5);

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        if $r5 == null goto label2;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        interfaceinvoke $r10.<android.widget.DatePicker$OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>($r9, i0, i1, i2);

     label2:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mAutoFillChangeListener>;

        if $r6 == null goto label3;

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mAutoFillChangeListener>;

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        interfaceinvoke $r8.<android.widget.DatePicker$OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>($r7, i0, i1, i2);

     label3:
        $r12 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r13 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $l3 = virtualinvoke $r13.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r12.<android.widget.DayPickerView: void setDate(long)>($l3);

        $r14 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r14.<android.widget.YearPickerView: void setYear(int)>(i0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onCurrentDateChanged(boolean)>(z0);

        if z0 == 0 goto label4;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void tryVibrate()>();

     label4:
        return;
    }

    private void setCurrentView(int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, $i3, $i4;
        android.icu.util.Calendar $r1, $r8;
        android.widget.DayPickerView $r2;
        long $l2;
        java.lang.String $r3, $r12;
        android.widget.ViewAnimator $r4, $r7, $r13, $r16;
        android.widget.TextView $r5, $r6, $r14, $r15;
        android.widget.YearPickerView $r9, $r11;
        android.widget._$$Lambda$DatePickerCalendarDelegate$_6rynvAYPe1gU9xVgvSm4VMsr2M $r10;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label1;

        goto label5;

     label1:
        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i1 = virtualinvoke $r8.<android.icu.util.Calendar: int get(int)>(1);

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r9.<android.widget.YearPickerView: void setYear(int)>(i1);

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $r10 = new android.widget._$$Lambda$DatePickerCalendarDelegate$_6rynvAYPe1gU9xVgvSm4VMsr2M;

        specialinvoke $r10.<android.widget._$$Lambda$DatePickerCalendarDelegate$_6rynvAYPe1gU9xVgvSm4VMsr2M: void <init>(android.widget.DatePickerCalendarDelegate)>(r0);

        virtualinvoke $r11.<android.widget.YearPickerView: boolean post(java.lang.Runnable)>($r10);

        $i4 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i4 == i0 goto label2;

        $r14 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay>;

        virtualinvoke $r14.<android.widget.TextView: void setActivated(boolean)>(0);

        $r15 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        virtualinvoke $r15.<android.widget.TextView: void setActivated(boolean)>(1);

        $r16 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        virtualinvoke $r16.<android.widget.ViewAnimator: void setDisplayedChild(int)>(1);

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = i0;

     label2:
        $r13 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        $r12 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectYear>;

        virtualinvoke $r13.<android.widget.ViewAnimator: void announceForAccessibility(java.lang.CharSequence)>($r12);

        goto label5;

     label3:
        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $l2 = virtualinvoke $r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r2.<android.widget.DayPickerView: void setDate(long)>($l2);

        $i3 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i3 == i0 goto label4;

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay>;

        virtualinvoke $r5.<android.widget.TextView: void setActivated(boolean)>(1);

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        virtualinvoke $r6.<android.widget.TextView: void setActivated(boolean)>(0);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        virtualinvoke $r7.<android.widget.ViewAnimator: void setDisplayedChild(int)>(0);

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = i0;

     label4:
        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.ViewAnimator mAnimator>;

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectDay>;

        virtualinvoke $r4.<android.widget.ViewAnimator: void announceForAccessibility(java.lang.CharSequence)>($r3);

     label5:
        return;
    }

    private void setDate(int, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;
        android.icu.util.Calendar $r1, $r2, $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        virtualinvoke $r1.<android.icu.util.Calendar: void set(int,int)>(1, i0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<android.icu.util.Calendar: void set(int,int)>(2, i1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        virtualinvoke $r3.<android.icu.util.Calendar: void set(int,int)>(5, i2);

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void resetAutofilledValue()>();

        return;
    }

    private void tryVibrate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.DatePicker $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke $r1.<android.widget.DatePicker: boolean performHapticFeedback(int)>(5);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = class "Landroid/widget/DatePicker;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public android.widget.CalendarView getCalendarView()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported by calendar-mode DatePicker");

        throw $r1;
    }

    public boolean getCalendarViewShown()
    {
        android.widget.DatePickerCalendarDelegate r0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        return 0;
    }

    public int getDayOfMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.icu.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<android.icu.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i1;
        android.icu.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 = r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek>;

        if i0 == 0 goto label1;

        return i0;

     label1:
        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i1 = virtualinvoke $r1.<android.icu.util.Calendar: int getFirstDayOfWeek()>();

        return $i1;
    }

    public android.icu.util.Calendar getMaxDate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.icu.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        return $r1;
    }

    public android.icu.util.Calendar getMinDate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.icu.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        return $r1;
    }

    public int getMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.icu.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<android.icu.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public boolean getSpinnersShown()
    {
        android.widget.DatePickerCalendarDelegate r0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        return 0;
    }

    public int getYear()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.icu.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<android.icu.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;
        android.widget.DatePicker$OnDateChangedListener r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.widget.DatePicker$OnDateChangedListener;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setDate(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onDateChanged(boolean,boolean)>(0, 0);

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener> = r1;

        return;
    }

    public boolean isEnabled()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.ViewGroup $r1;
        boolean $z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer>;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean isEnabled()>();

        return $z0;
    }

    public void lambda$new$0$DatePickerCalendarDelegate(android.view.View)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.View r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void tryVibrate()>();

        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

        tableswitch($i0)
        {
            case 16908909: goto label3;
            case 16908910: goto label2;
            default: goto label1;
        };

     label1:
        goto label4;

     label2:
        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(1);

        goto label4;

     label3:
        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(0);

     label4:
        return;
    }

    public void lambda$setCurrentView$1$DatePickerCalendarDelegate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.View r1;
        android.widget.YearPickerView $r2, $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r2.<android.widget.YearPickerView: boolean requestFocus()>();

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        r1 = virtualinvoke $r3.<android.widget.YearPickerView: android.view.View getSelectedView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label1:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.content.res.Configuration r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentLocale(java.util.Locale)>($r2);

        return;
    }

    protected void onLocaleChanged(java.util.Locale)
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Locale r1;
        android.icu.text.DateFormat r2, $r5;
        android.widget.TextView $r3;
        android.icu.text.DisplayContext $r4;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: java.util.Locale;

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = staticinvoke <android.icu.text.DateFormat: android.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale)>("EMMMd", r1);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.text.DateFormat mMonthDayFormat> = r2;

        $r4 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_STANDALONE>;

        virtualinvoke r2.<android.icu.text.DateFormat: void setContext(android.icu.text.DisplayContext)>($r4);

        $r5 = staticinvoke <android.icu.text.DateFormat: android.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale)>("y", r1);

        r0.<android.widget.DatePickerCalendarDelegate: android.icu.text.DateFormat mYearFormat> = $r5;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onCurrentDateChanged(boolean)>(0);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i1, $i2, $i3, i6, i7;
        boolean $z0;
        android.icu.util.Calendar $r1, $r2, $r3;
        long $l4, $l5;
        android.widget.YearPickerView $r4;
        android.widget.DayPickerView $r5;
        android.os.Parcelable r6;
        android.widget.DatePicker$AbstractDatePickerDelegate$SavedState r7;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r6 := @parameter0: android.os.Parcelable;

        $z0 = r6 instanceof android.widget.DatePicker$AbstractDatePickerDelegate$SavedState;

        if $z0 == 0 goto label2;

        r7 = (android.widget.DatePicker$AbstractDatePickerDelegate$SavedState) r6;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $i1 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getSelectedYear()>();

        $i2 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getSelectedMonth()>();

        $i3 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getSelectedDay()>();

        virtualinvoke $r1.<android.icu.util.Calendar: void set(int,int,int)>($i1, $i2, $i3);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $l4 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: long getMinDate()>();

        virtualinvoke $r2.<android.icu.util.Calendar: void setTimeInMillis(long)>($l4);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        $l5 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: long getMaxDate()>();

        virtualinvoke $r3.<android.icu.util.Calendar: void setTimeInMillis(long)>($l5);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onCurrentDateChanged(boolean)>(0);

        i6 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getCurrentView()>();

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(i6);

        i0 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getListPosition()>();

        if i0 == -1 goto label2;

        if i6 != 0 goto label1;

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r5.<android.widget.DayPickerView: void setPosition(int)>(i0);

        goto label2;

     label1:
        if i6 != 1 goto label2;

        i7 = virtualinvoke r7.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: int getListPositionOffset()>();

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r4.<android.widget.YearPickerView: void setSelectionFromTop(int,int)>(i0, i7);

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.os.Parcelable r1;
        int i0, i1, i2, i3, i4, i5, $i8;
        android.icu.util.Calendar $r2, $r3, $r4, $r9, $r10;
        android.widget.YearPickerView $r5, $r6;
        android.widget.DayPickerView $r7;
        android.widget.DatePicker$AbstractDatePickerDelegate$SavedState $r8;
        long $l6, $l7;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i0 = virtualinvoke $r2.<android.icu.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i1 = virtualinvoke $r3.<android.icu.util.Calendar: int get(int)>(2);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        i2 = virtualinvoke $r4.<android.icu.util.Calendar: int get(int)>(5);

        i3 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if i3 != 0 goto label1;

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        i4 = virtualinvoke $r7.<android.widget.DayPickerView: int getMostVisiblePosition()>();

        i5 = -1;

        goto label3;

     label1:
        if i3 != 1 goto label2;

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        i4 = virtualinvoke $r5.<android.widget.YearPickerView: int getFirstVisiblePosition()>();

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        i5 = virtualinvoke $r6.<android.widget.YearPickerView: int getFirstPositionOffset()>();

        goto label3;

     label2:
        i4 = -1;

        i5 = -1;

     label3:
        $r8 = new android.widget.DatePicker$AbstractDatePickerDelegate$SavedState;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $l6 = virtualinvoke $r9.<android.icu.util.Calendar: long getTimeInMillis()>();

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        $l7 = virtualinvoke $r10.<android.icu.util.Calendar: long getTimeInMillis()>();

        $i8 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        specialinvoke $r8.<android.widget.DatePicker$AbstractDatePickerDelegate$SavedState: void <init>(android.os.Parcelable,int,int,int,long,long,int,int,int)>(r1, i0, i1, i2, $l6, $l7, $i8, i4, i5);

        return $r8;
    }

    public void setCalendarViewShown(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;
        android.view.ViewGroup $r1;
        android.widget.DayPickerView $r2;
        android.widget.YearPickerView $r3;
        android.widget.TextView $r4, $r5;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.view.ViewGroup mContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r2.<android.widget.DayPickerView: void setEnabled(boolean)>(z0);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r3.<android.widget.YearPickerView: void setEnabled(boolean)>(z0);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYear>;

        virtualinvoke $r4.<android.widget.TextView: void setEnabled(boolean)>(z0);

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthDay>;

        virtualinvoke $r5.<android.widget.TextView: void setEnabled(boolean)>(z0);

        return;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0;
        android.widget.DayPickerView $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek> = i0;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r1.<android.widget.DayPickerView: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    public void setMaxDate(long)
    {
        android.widget.DatePickerCalendarDelegate r0;
        long l0;
        android.icu.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        android.widget.DayPickerView $r7;
        android.widget.YearPickerView $r10;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        virtualinvoke $r1.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<android.icu.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        $i2 = virtualinvoke $r3.<android.icu.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r12 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $i3 = virtualinvoke $r12.<android.icu.util.Calendar: int get(int)>(6);

        $r13 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        $i4 = virtualinvoke $r13.<android.icu.util.Calendar: int get(int)>(6);

        if $i3 != $i4 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $z0 = virtualinvoke $r5.<android.icu.util.Calendar: boolean after(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        virtualinvoke $r11.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onDateChanged(boolean,boolean)>(0, 1);

     label2:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r6.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r7.<android.widget.DayPickerView: void setMaxDate(long)>(l0);

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r10.<android.widget.YearPickerView: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>($r9, $r8);

        return;
    }

    public void setMinDate(long)
    {
        android.widget.DatePickerCalendarDelegate r0;
        long l0;
        android.icu.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        android.widget.DayPickerView $r7;
        android.widget.YearPickerView $r10;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        virtualinvoke $r1.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<android.icu.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $i2 = virtualinvoke $r3.<android.icu.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r12 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $i3 = virtualinvoke $r12.<android.icu.util.Calendar: int get(int)>(6);

        $r13 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $i4 = virtualinvoke $r13.<android.icu.util.Calendar: int get(int)>(6);

        if $i3 != $i4 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mTempDate>;

        $z0 = virtualinvoke $r5.<android.icu.util.Calendar: boolean before(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mCurrentDate>;

        virtualinvoke $r11.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onDateChanged(boolean,boolean)>(0, 1);

     label2:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        virtualinvoke $r6.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r7.<android.widget.DayPickerView: void setMinDate(long)>(l0);

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMinDate>;

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r10.<android.widget.YearPickerView: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>($r9, $r8);

        return;
    }

    public void setSpinnersShown(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        return;
    }

    public void updateDate(int, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setDate(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void onDateChanged(boolean,boolean)>(0, 1);

        return;
    }
}
