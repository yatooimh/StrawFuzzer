class android.widget.DayPickerView extends android.view.ViewGroup
{
    private static final int[] ATTRS_TEXT_COLOR;
    private static final int DEFAULT_END_YEAR;
    private static final int DEFAULT_LAYOUT;
    private static final int DEFAULT_START_YEAR;
    private final android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private final android.widget.DayPickerPagerAdapter mAdapter;
    private final android.icu.util.Calendar mMaxDate;
    private final android.icu.util.Calendar mMinDate;
    private final android.widget.ImageButton mNextButton;
    private final android.view.View$OnClickListener mOnClickListener;
    private android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener;
    private final com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangedListener;
    private final android.widget.ImageButton mPrevButton;
    private final android.icu.util.Calendar mSelectedDay;
    private android.icu.util.Calendar mTempCalendar;
    private final com.android.internal.widget.ViewPager mViewPager;

    static void <clinit>()
    {
        int[] $r0;

        <android.widget.DayPickerView: int DEFAULT_START_YEAR> = 1900;

        <android.widget.DayPickerView: int DEFAULT_LAYOUT> = 17367145;

        <android.widget.DayPickerView: int DEFAULT_END_YEAR> = 2100;

        $r0 = newarray (int)[1];

        $r0[0] = 16842904;

        <android.widget.DayPickerView: int[] ATTRS_TEXT_COLOR> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.DayPickerView r0;
        android.content.Context r1;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.DayPickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843613);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.DayPickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DayPickerView r0;
        java.lang.String r1, r37;
        int i0, i1, $i5, $i6, i9, i10, i11, i12;
        long l2, l3, l4, $l8;
        android.icu.util.Calendar $r2, $r3, $r4, r48;
        android.widget.DayPickerView$2 $r5;
        android.widget.DayPickerView$3 $r6;
        java.lang.Object $r7;
        android.view.accessibility.AccessibilityManager $r8;
        int[] $r9, $r10, $r30;
        java.util.Locale $r11;
        libcore.icu.LocaleData $r12;
        java.lang.Integer $r13;
        android.widget.DayPickerPagerAdapter $r14, $r15, $r16, $r17, $r24, $r29;
        android.view.View $r18, $r19, $r21, $r23, r42;
        android.view.View$OnClickListener $r20, $r22;
        com.android.internal.widget.ViewPager$OnPageChangeListener $r25;
        com.android.internal.widget.ViewPager $r26, r45;
        boolean $z0, $z1;
        byte $b7;
        java.lang.IllegalArgumentException $r27;
        android.widget.DayPickerView$1 $r28;
        android.content.Context $r31, r34;
        android.widget.ImageButton $r32, $r33, r43, r44;
        android.util.AttributeSet r35;
        android.content.res.TypedArray r36, r46;
        android.content.res.ColorStateList r38, r47;
        android.view.LayoutInflater r40;
        android.view.ViewGroup r41;

        r0 := @this: android.widget.DayPickerView;

        r34 := @parameter0: android.content.Context;

        r35 := @parameter1: android.util.AttributeSet;

        i9 := @parameter2: int;

        i10 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r34, r35, i9, i10);

        $r2 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: android.icu.util.Calendar mSelectedDay> = $r2;

        $r3 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate> = $r3;

        $r4 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate> = $r4;

        $r5 = new android.widget.DayPickerView$2;

        specialinvoke $r5.<android.widget.DayPickerView$2: void <init>(android.widget.DayPickerView)>(r0);

        r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangedListener> = $r5;

        $r6 = new android.widget.DayPickerView$3;

        specialinvoke $r6.<android.widget.DayPickerView$3: void <init>(android.widget.DayPickerView)>(r0);

        r0.<android.widget.DayPickerView: android.view.View$OnClickListener mOnClickListener> = $r6;

        $r7 = virtualinvoke r34.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r8 = (android.view.accessibility.AccessibilityManager) $r7;

        r0.<android.widget.DayPickerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r8;

        $r9 = <com.android.internal.R$styleable: int[] CalendarView>;

        r36 = virtualinvoke r34.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r35, $r9, i9, i10);

        $r10 = <com.android.internal.R$styleable: int[] CalendarView>;

        virtualinvoke r0.<android.widget.DayPickerView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r34, $r10, r35, r36, i9, i10);

        $r11 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r12 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r11);

        $r13 = $r12.<libcore.icu.LocaleData: java.lang.Integer firstDayOfWeek>;

        $i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        i11 = virtualinvoke r36.<android.content.res.TypedArray: int getInt(int,int)>(0, $i5);

        r37 = virtualinvoke r36.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r1 = virtualinvoke r36.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        i0 = virtualinvoke r36.<android.content.res.TypedArray: int getResourceId(int,int)>(16, 16974791);

        i1 = virtualinvoke r36.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 16974790);

        i12 = virtualinvoke r36.<android.content.res.TypedArray: int getResourceId(int,int)>(12, 16974789);

        r38 = virtualinvoke r36.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(15);

        virtualinvoke r36.<android.content.res.TypedArray: void recycle()>();

        $r14 = new android.widget.DayPickerPagerAdapter;

        specialinvoke $r14.<android.widget.DayPickerPagerAdapter: void <init>(android.content.Context,int,int)>(r34, 17367143, 16909190);

        r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter> = $r14;

        virtualinvoke $r14.<android.widget.DayPickerPagerAdapter: void setMonthTextAppearance(int)>(i0);

        $r15 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r15.<android.widget.DayPickerPagerAdapter: void setDayOfWeekTextAppearance(int)>(i1);

        $r16 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r16.<android.widget.DayPickerPagerAdapter: void setDayTextAppearance(int)>(i12);

        $r17 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r17.<android.widget.DayPickerPagerAdapter: void setDaySelectorColor(android.content.res.ColorStateList)>(r38);

        r40 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r34);

        $r18 = virtualinvoke r40.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367145, r0, 0);

        r41 = (android.view.ViewGroup) $r18;

     label1:
        $i6 = virtualinvoke r41.<android.view.ViewGroup: int getChildCount()>();

        if $i6 <= 0 goto label2;

        r42 = virtualinvoke r41.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        virtualinvoke r41.<android.view.ViewGroup: void removeViewAt(int)>(0);

        virtualinvoke r0.<android.widget.DayPickerView: void addView(android.view.View)>(r42);

        goto label1;

     label2:
        $r19 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View findViewById(int)>(16909314);

        r43 = (android.widget.ImageButton) $r19;

        r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton> = r43;

        $r20 = r0.<android.widget.DayPickerView: android.view.View$OnClickListener mOnClickListener>;

        virtualinvoke r43.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r20);

        $r21 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View findViewById(int)>(16909204);

        r44 = (android.widget.ImageButton) $r21;

        r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton> = r44;

        $r22 = r0.<android.widget.DayPickerView: android.view.View$OnClickListener mOnClickListener>;

        virtualinvoke r44.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r22);

        $r23 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View findViewById(int)>(16908915);

        r45 = (com.android.internal.widget.ViewPager) $r23;

        r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager> = r45;

        $r24 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke r45.<com.android.internal.widget.ViewPager: void setAdapter(com.android.internal.widget.PagerAdapter)>($r24);

        $r26 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $r25 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangedListener>;

        virtualinvoke $r26.<com.android.internal.widget.ViewPager: void setOnPageChangeListener(com.android.internal.widget.ViewPager$OnPageChangeListener)>($r25);

        if i0 == 0 goto label4;

        $r31 = r0.<android.widget.DayPickerView: android.content.Context mContext>;

        $r30 = <android.widget.DayPickerView: int[] ATTRS_TEXT_COLOR>;

        r46 = virtualinvoke $r31.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r30, 0, i0);

        r47 = virtualinvoke r46.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(0);

        if r47 == null goto label3;

        $r32 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        virtualinvoke $r32.<android.widget.ImageButton: void setImageTintList(android.content.res.ColorStateList)>(r47);

        $r33 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

        virtualinvoke $r33.<android.widget.ImageButton: void setImageTintList(android.content.res.ColorStateList)>(r47);

     label3:
        virtualinvoke r46.<android.content.res.TypedArray: void recycle()>();

        goto label4;

     label4:
        r48 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        $z0 = staticinvoke <android.widget.CalendarView: boolean parseDate(java.lang.String,android.icu.util.Calendar)>(r37, r48);

        if $z0 != 0 goto label5;

        virtualinvoke r48.<android.icu.util.Calendar: void set(int,int,int)>(1900, 0, 1);

     label5:
        l2 = virtualinvoke r48.<android.icu.util.Calendar: long getTimeInMillis()>();

        $z1 = staticinvoke <android.widget.CalendarView: boolean parseDate(java.lang.String,android.icu.util.Calendar)>(r1, r48);

        if $z1 != 0 goto label6;

        virtualinvoke r48.<android.icu.util.Calendar: void set(int,int,int)>(2100, 11, 31);

        goto label6;

     label6:
        l3 = virtualinvoke r48.<android.icu.util.Calendar: long getTimeInMillis()>();

        $b7 = l3 cmp l2;

        if $b7 < 0 goto label7;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l4 = staticinvoke <android.util.MathUtils: long constrain(long,long,long)>($l8, l2, l3);

        virtualinvoke r0.<android.widget.DayPickerView: void setFirstDayOfWeek(int)>(i11);

        virtualinvoke r0.<android.widget.DayPickerView: void setMinDate(long)>(l2);

        virtualinvoke r0.<android.widget.DayPickerView: void setMaxDate(long)>(l3);

        virtualinvoke r0.<android.widget.DayPickerView: void setDate(long,boolean)>(l4, 0);

        $r29 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $r28 = new android.widget.DayPickerView$1;

        specialinvoke $r28.<android.widget.DayPickerView$1: void <init>(android.widget.DayPickerView)>(r0);

        virtualinvoke $r29.<android.widget.DayPickerPagerAdapter: void setOnDaySelectedListener(android.widget.DayPickerPagerAdapter$OnDaySelectedListener)>($r28);

        return;

     label7:
        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxDate must be >= minDate");

        throw $r27;
    }

    static android.widget.DayPickerView$OnDaySelectedListener access$000(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerView$OnDaySelectedListener $r1;

        r0 := @parameter0: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener>;

        return $r1;
    }

    static android.widget.ImageButton access$100(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        android.widget.ImageButton $r1;

        r0 := @parameter0: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        return $r1;
    }

    static android.widget.ImageButton access$200(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        android.widget.ImageButton $r1;

        r0 := @parameter0: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

        return $r1;
    }

    static void access$300(android.widget.DayPickerView, int)
    {
        android.widget.DayPickerView r0;
        int i0;

        r0 := @parameter0: android.widget.DayPickerView;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.DayPickerView: void updateButtonVisibility(int)>(i0);

        return;
    }

    static android.view.accessibility.AccessibilityManager access$400(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        android.view.accessibility.AccessibilityManager $r1;

        r0 := @parameter0: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        return $r1;
    }

    static com.android.internal.widget.ViewPager access$500(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        com.android.internal.widget.ViewPager $r1;

        r0 := @parameter0: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        return $r1;
    }

    private int getDiffMonths(android.icu.util.Calendar, android.icu.util.Calendar)
    {
        android.widget.DayPickerView r0;
        android.icu.util.Calendar r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.icu.util.Calendar;

        r2 := @parameter1: android.icu.util.Calendar;

        i0 = virtualinvoke r2.<android.icu.util.Calendar: int get(int)>(1);

        i1 = virtualinvoke r1.<android.icu.util.Calendar: int get(int)>(1);

        $i2 = virtualinvoke r2.<android.icu.util.Calendar: int get(int)>(2);

        $i3 = virtualinvoke r1.<android.icu.util.Calendar: int get(int)>(2);

        $i6 = $i2 - $i3;

        $i4 = i0 - i1;

        $i5 = $i4 * 12;

        $i7 = $i6 + $i5;

        return $i7;
    }

    private int getPositionFromDay(long)
    {
        android.widget.DayPickerView r0;
        long l0;
        int i1, $i2, $i3;
        android.icu.util.Calendar $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        $r2 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        i1 = specialinvoke r0.<android.widget.DayPickerView: int getDiffMonths(android.icu.util.Calendar,android.icu.util.Calendar)>($r2, $r1);

        $r3 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        $r4 = specialinvoke r0.<android.widget.DayPickerView: android.icu.util.Calendar getTempCalendarForTime(long)>(l0);

        $i2 = specialinvoke r0.<android.widget.DayPickerView: int getDiffMonths(android.icu.util.Calendar,android.icu.util.Calendar)>($r3, $r4);

        $i3 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i2, 0, i1);

        return $i3;
    }

    private android.icu.util.Calendar getTempCalendarForTime(long)
    {
        android.widget.DayPickerView r0;
        long l0;
        android.icu.util.Calendar $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar> = $r4;

     label1:
        $r2 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        virtualinvoke $r2.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r3 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        return $r3;
    }

    private void setDate(long, boolean, boolean)
    {
        android.widget.DayPickerView r0;
        long l0, $l1, $l3, l5;
        boolean z0, z1, z2;
        android.icu.util.Calendar $r1, $r2, $r4, $r5, $r8, $r9;
        byte $b2, $b4;
        android.widget.DayPickerPagerAdapter $r6;
        com.android.internal.widget.ViewPager $r7, $r10;
        int i6, $i7;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 = 0;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        $l1 = virtualinvoke $r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label1;

        $r9 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        l5 = virtualinvoke $r9.<android.icu.util.Calendar: long getTimeInMillis()>();

        z2 = 1;

        goto label2;

     label1:
        l5 = l0;

        $r2 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        $l3 = virtualinvoke $r2.<android.icu.util.Calendar: long getTimeInMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label2;

        $r8 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        l5 = virtualinvoke $r8.<android.icu.util.Calendar: long getTimeInMillis()>();

        z2 = 1;

     label2:
        specialinvoke r0.<android.widget.DayPickerView: android.icu.util.Calendar getTempCalendarForTime(long)>(l5);

        if z1 != 0 goto label3;

        if z2 == 0 goto label4;

     label3:
        $r4 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mSelectedDay>;

        virtualinvoke $r4.<android.icu.util.Calendar: void setTimeInMillis(long)>(l5);

     label4:
        i6 = specialinvoke r0.<android.widget.DayPickerView: int getPositionFromDay(long)>(l5);

        $r10 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $i7 = virtualinvoke $r10.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        if i6 == $i7 goto label5;

        $r7 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        virtualinvoke $r7.<com.android.internal.widget.ViewPager: void setCurrentItem(int,boolean)>(i6, z0);

     label5:
        $r6 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $r5 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        virtualinvoke $r6.<android.widget.DayPickerPagerAdapter: void setSelectedDay(android.icu.util.Calendar)>($r5);

        return;
    }

    private void updateButtonVisibility(int)
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerPagerAdapter $r1;
        int $i1, $i2, i3;
        boolean z1, z2;
        android.widget.ImageButton r2, r3;
        byte b4, b5;

        r0 := @this: android.widget.DayPickerView;

        i3 := @parameter0: int;

        if i3 <= 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $i1 = virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: int getCount()>();

        $i2 = $i1 - 1;

        if i3 >= $i2 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        r2 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        if z1 == 0 goto label5;

        b4 = 0;

        goto label6;

     label5:
        b4 = 4;

     label6:
        virtualinvoke r2.<android.widget.ImageButton: void setVisibility(int)>(b4);

        r3 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

        if z2 == 0 goto label7;

        b5 = 0;

        goto label8;

     label7:
        b5 = 4;

     label8:
        virtualinvoke r3.<android.widget.ImageButton: void setVisibility(int)>(b5);

        return;
    }

    public boolean getBoundsForDate(long, android.graphics.Rect)
    {
        android.widget.DayPickerView r0;
        long l0;
        android.graphics.Rect r1;
        int $i1, $i2;
        com.android.internal.widget.ViewPager $r2;
        android.icu.util.Calendar $r3, $r4;
        android.widget.DayPickerPagerAdapter $r5;
        boolean $z0;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.Rect;

        $i1 = specialinvoke r0.<android.widget.DayPickerView: int getPositionFromDay(long)>(l0);

        $r2 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $i2 = virtualinvoke $r2.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        if $i1 == $i2 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        virtualinvoke $r3.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $r5 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $r4 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mTempCalendar>;

        $z0 = virtualinvoke $r5.<android.widget.DayPickerPagerAdapter: boolean getBoundsForDate(android.icu.util.Calendar,android.graphics.Rect)>($r4, r1);

        return $z0;
    }

    public long getDate()
    {
        android.widget.DayPickerView r0;
        android.icu.util.Calendar $r1;
        long $l0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mSelectedDay>;

        $l0 = virtualinvoke $r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public int getDayOfWeekTextAppearance()
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerPagerAdapter $r1;
        int $i0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: int getDayOfWeekTextAppearance()>();

        return $i0;
    }

    public int getDayTextAppearance()
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerPagerAdapter $r1;
        int $i0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: int getDayTextAppearance()>();

        return $i0;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerPagerAdapter $r1;
        int $i0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: int getFirstDayOfWeek()>();

        return $i0;
    }

    public long getMaxDate()
    {
        android.widget.DayPickerView r0;
        android.icu.util.Calendar $r1;
        long $l0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        $l0 = virtualinvoke $r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public long getMinDate()
    {
        android.widget.DayPickerView r0;
        android.icu.util.Calendar $r1;
        long $l0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        $l0 = virtualinvoke $r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public int getMostVisiblePosition()
    {
        android.widget.DayPickerView r0;
        com.android.internal.widget.ViewPager $r1;
        int $i0;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        return $i0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.DayPickerView r0;
        boolean z0, $z1;
        android.widget.SimpleMonthView r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32;
        com.android.internal.widget.ViewPager $r2, $r3;
        android.view.View $r4;
        android.widget.ImageButton r5, r6;

        r0 := @this: android.widget.DayPickerView;

        z0 := @parameter0: boolean;

        i20 := @parameter1: int;

        i21 := @parameter2: int;

        i22 := @parameter3: int;

        i23 := @parameter4: int;

        $z1 = virtualinvoke r0.<android.widget.DayPickerView: boolean isLayoutRtl()>();

        if $z1 == 0 goto label1;

        r5 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

        r6 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        goto label2;

     label1:
        r5 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        r6 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

     label2:
        i24 = i22 - i20;

        $r2 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $i2 = i23 - i21;

        virtualinvoke $r2.<com.android.internal.widget.ViewPager: void layout(int,int,int,int)>(0, 0, i24, $i2);

        $r3 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(0);

        r1 = (android.widget.SimpleMonthView) $r4;

        i25 = virtualinvoke r1.<android.widget.SimpleMonthView: int getMonthHeight()>();

        i26 = virtualinvoke r1.<android.widget.SimpleMonthView: int getCellWidth()>();

        i0 = virtualinvoke r5.<android.widget.ImageButton: int getMeasuredWidth()>();

        i27 = virtualinvoke r5.<android.widget.ImageButton: int getMeasuredHeight()>();

        $i3 = virtualinvoke r1.<android.widget.SimpleMonthView: int getPaddingTop()>();

        $i4 = i25 - i27;

        $i5 = $i4 / 2;

        i28 = $i3 + $i5;

        $i6 = virtualinvoke r1.<android.widget.SimpleMonthView: int getPaddingLeft()>();

        $i7 = i26 - i0;

        $i8 = $i7 / 2;

        i1 = $i6 + $i8;

        $i10 = i1 + i0;

        $i9 = i28 + i27;

        virtualinvoke r5.<android.widget.ImageButton: void layout(int,int,int,int)>(i1, i28, $i10, $i9);

        i29 = virtualinvoke r6.<android.widget.ImageButton: int getMeasuredWidth()>();

        i30 = virtualinvoke r6.<android.widget.ImageButton: int getMeasuredHeight()>();

        $i11 = virtualinvoke r1.<android.widget.SimpleMonthView: int getPaddingTop()>();

        $i12 = i25 - i30;

        $i13 = $i12 / 2;

        i31 = $i11 + $i13;

        $i14 = virtualinvoke r1.<android.widget.SimpleMonthView: int getPaddingRight()>();

        $i17 = i24 - $i14;

        $i15 = i26 - i29;

        $i16 = $i15 / 2;

        i32 = $i17 - $i16;

        $i19 = i32 - i29;

        $i18 = i31 + i30;

        virtualinvoke r6.<android.widget.ImageButton: void layout(int,int,int,int)>($i19, i31, i32, $i18);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.DayPickerView r0;
        com.android.internal.widget.ViewPager r1;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        android.widget.ImageButton $r2, $r3;

        r0 := @this: android.widget.DayPickerView;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r1 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        virtualinvoke r0.<android.widget.DayPickerView: void measureChild(android.view.View,int,int)>(r1, i2, i3);

        $i0 = virtualinvoke r1.<com.android.internal.widget.ViewPager: int getMeasuredWidthAndState()>();

        $i1 = virtualinvoke r1.<com.android.internal.widget.ViewPager: int getMeasuredHeightAndState()>();

        virtualinvoke r0.<android.widget.DayPickerView: void setMeasuredDimension(int,int)>($i0, $i1);

        i4 = virtualinvoke r1.<com.android.internal.widget.ViewPager: int getMeasuredWidth()>();

        i5 = virtualinvoke r1.<com.android.internal.widget.ViewPager: int getMeasuredHeight()>();

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, -2147483648);

        i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, -2147483648);

        $r2 = r0.<android.widget.DayPickerView: android.widget.ImageButton mPrevButton>;

        virtualinvoke $r2.<android.widget.ImageButton: void measure(int,int)>(i6, i7);

        $r3 = r0.<android.widget.DayPickerView: android.widget.ImageButton mNextButton>;

        virtualinvoke $r3.<android.widget.ImageButton: void measure(int,int)>(i6, i7);

        return;
    }

    public void onRangeChanged()
    {
        android.widget.DayPickerView r0;
        android.icu.util.Calendar $r1, $r2, $r4;
        android.widget.DayPickerPagerAdapter $r3;
        long $l0;
        com.android.internal.widget.ViewPager $r5;
        int $i1;

        r0 := @this: android.widget.DayPickerView;

        $r3 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        $r2 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r3.<android.widget.DayPickerPagerAdapter: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>($r2, $r1);

        $r4 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mSelectedDay>;

        $l0 = virtualinvoke $r4.<android.icu.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<android.widget.DayPickerView: void setDate(long,boolean,boolean)>($l0, 0, 0);

        $r5 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        $i1 = virtualinvoke $r5.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        specialinvoke r0.<android.widget.DayPickerView: void updateButtonVisibility(int)>($i1);

        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.DayPickerView r0;
        int i0;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>(i0);

        virtualinvoke r0.<android.widget.DayPickerView: void requestLayout()>();

        return;
    }

    public void setDate(long)
    {
        android.widget.DayPickerView r0;
        long l0;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.widget.DayPickerView: void setDate(long,boolean)>(l0, 0);

        return;
    }

    public void setDate(long, boolean)
    {
        android.widget.DayPickerView r0;
        long l0;
        boolean z0;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.DayPickerView: void setDate(long,boolean,boolean)>(l0, z0, 1);

        return;
    }

    public void setDayOfWeekTextAppearance(int)
    {
        android.widget.DayPickerView r0;
        int i0;
        android.widget.DayPickerPagerAdapter $r1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: void setDayOfWeekTextAppearance(int)>(i0);

        return;
    }

    public void setDayTextAppearance(int)
    {
        android.widget.DayPickerView r0;
        int i0;
        android.widget.DayPickerPagerAdapter $r1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: void setDayTextAppearance(int)>(i0);

        return;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.DayPickerView r0;
        int i0;
        android.widget.DayPickerPagerAdapter $r1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DayPickerPagerAdapter mAdapter>;

        virtualinvoke $r1.<android.widget.DayPickerPagerAdapter: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    public void setMaxDate(long)
    {
        android.widget.DayPickerView r0;
        long l0;
        android.icu.util.Calendar $r1;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMaxDate>;

        virtualinvoke $r1.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<android.widget.DayPickerView: void onRangeChanged()>();

        return;
    }

    public void setMinDate(long)
    {
        android.widget.DayPickerView r0;
        long l0;
        android.icu.util.Calendar $r1;

        r0 := @this: android.widget.DayPickerView;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DayPickerView: android.icu.util.Calendar mMinDate>;

        virtualinvoke $r1.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r0.<android.widget.DayPickerView: void onRangeChanged()>();

        return;
    }

    public void setOnDaySelectedListener(android.widget.DayPickerView$OnDaySelectedListener)
    {
        android.widget.DayPickerView r0;
        android.widget.DayPickerView$OnDaySelectedListener r1;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.widget.DayPickerView$OnDaySelectedListener;

        r0.<android.widget.DayPickerView: android.widget.DayPickerView$OnDaySelectedListener mOnDaySelectedListener> = r1;

        return;
    }

    public void setPosition(int)
    {
        android.widget.DayPickerView r0;
        int i0;
        com.android.internal.widget.ViewPager $r1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DayPickerView: com.android.internal.widget.ViewPager mViewPager>;

        virtualinvoke $r1.<com.android.internal.widget.ViewPager: void setCurrentItem(int,boolean)>(i0, 0);

        return;
    }
}
