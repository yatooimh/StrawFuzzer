public class android.widget.Editor$SelectionModifierCursorController extends java.lang.Object implements android.widget.Editor$CursorController
{
    private static final int DRAG_ACCELERATOR_MODE_CHARACTER;
    private static final int DRAG_ACCELERATOR_MODE_INACTIVE;
    private static final int DRAG_ACCELERATOR_MODE_PARAGRAPH;
    private static final int DRAG_ACCELERATOR_MODE_WORD;
    private int mDragAcceleratorMode;
    private android.widget.Editor$SelectionHandleView mEndHandle;
    private boolean mGestureStayedInTapRegion;
    private boolean mHaventMovedEnoughToStartDrag;
    private int mLineSelectionIsOn;
    private int mMaxTouchOffset;
    private int mMinTouchOffset;
    private android.widget.Editor$SelectionHandleView mStartHandle;
    private int mStartOffset;
    private boolean mSwitchedLines;
    final android.widget.Editor this$0;

    void <init>(android.widget.Editor)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.widget.Editor;

        r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset> = -1;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mLineSelectionIsOn> = -1;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mSwitchedLines> = 0;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mDragAcceleratorMode> = 0;

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

        return;
    }

    static android.widget.Editor$SelectionHandleView access$3900(android.widget.Editor$SelectionModifierCursorController)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView $r1;

        r0 := @parameter0: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        return $r1;
    }

    static void access$4000(android.widget.Editor$SelectionModifierCursorController)
    {
        android.widget.Editor$SelectionModifierCursorController r0;

        r0 := @parameter0: android.widget.Editor$SelectionModifierCursorController;

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void initHandles()>();

        return;
    }

    static android.widget.Editor$SelectionHandleView access$5200(android.widget.Editor$SelectionModifierCursorController)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView $r1;

        r0 := @parameter0: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        return $r1;
    }

    static void access$8200(android.widget.Editor$SelectionModifierCursorController)
    {
        android.widget.Editor$SelectionModifierCursorController r0;

        r0 := @parameter0: android.widget.Editor$SelectionModifierCursorController;

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void reloadHandleDrawables()>();

        return;
    }

    private void initHandles()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView $r1, $r2, $r3, $r4, $r6, $r10;
        android.widget.Editor $r5, $r7, $r11, r14, r15;
        android.graphics.drawable.Drawable $r8, $r9, $r12, $r13;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if $r1 != null goto label1;

        r14 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r10 = new android.widget.Editor$SelectionHandleView;

        $r13 = r14.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        $r11 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r12 = $r11.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        specialinvoke $r10.<android.widget.Editor$SelectionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int)>(r14, $r13, $r12, 16909404, 0);

        r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle> = $r10;

     label1:
        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        if $r2 != null goto label2;

        r15 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r6 = new android.widget.Editor$SelectionHandleView;

        $r9 = r15.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r8 = $r7.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        specialinvoke $r6.<android.widget.Editor$SelectionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int)>(r15, $r9, $r8, 16909403, 1);

        r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle> = $r6;

     label2:
        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        virtualinvoke $r3.<android.widget.Editor$SelectionHandleView: void show()>();

        $r4 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        virtualinvoke $r4.<android.widget.Editor$SelectionHandleView: void show()>();

        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        virtualinvoke $r5.<android.widget.Editor: void hideInsertionPointCursorController()>();

        return;
    }

    private void reloadHandleDrawables()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1, $r10;
        android.widget.Editor $r2, $r3, $r6, $r7;
        android.graphics.drawable.Drawable $r4, $r5, $r8, $r9;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r5 = $r2.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r4 = $r3.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        virtualinvoke r1.<android.widget.Editor$SelectionHandleView: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r5, $r4);

        $r10 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        $r6 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r9 = $r6.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r8 = $r7.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        virtualinvoke $r10.<android.widget.Editor$SelectionHandleView: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r9, $r8);

        return;
    }

    private void resetDragAcceleratorState()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int i0, i1;
        android.widget.Editor $r1, $r3, $r5, $r9;
        android.widget.TextView $r2, $r4, $r6, $r10;
        java.lang.CharSequence $r7, $r11;
        android.text.Spannable $r8, $r12;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset> = -1;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mDragAcceleratorMode> = 0;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mSwitchedLines> = 0;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r1);

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r4 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r3);

        i1 = virtualinvoke $r4.<android.widget.TextView: int getSelectionEnd()>();

        if i0 < 0 goto label2;

        if i1 >= 0 goto label1;

        goto label2;

     label1:
        if i0 <= i1 goto label3;

        $r9 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r10 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r9);

        $r11 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r12 = (android.text.Spannable) $r11;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r12, i1, i0);

        goto label3;

     label2:
        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r6 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r5);

        $r7 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r8 = (android.text.Spannable) $r7;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r8);

     label3:
        return;
    }

    private boolean selectCurrentParagraphAndStartDrag()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor $r1, $r3, $r4, $r5, $r7;
        java.lang.Runnable $r2, $r8;
        boolean $z0;
        android.widget.TextView $r6;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: java.lang.Runnable access$7400(android.widget.Editor)>($r1);

        if $r2 == null goto label1;

        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r6 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r5);

        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r8 = staticinvoke <android.widget.Editor: java.lang.Runnable access$7400(android.widget.Editor)>($r7);

        virtualinvoke $r6.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r8);

     label1:
        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        virtualinvoke $r3.<android.widget.Editor: void stopTextActionMode()>();

        $r4 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $z0 = staticinvoke <android.widget.Editor: boolean access$7900(android.widget.Editor)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void enterDrag(int)>(3);

        return 1;
    }

    private void updateCharacterBasedSelection(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        android.widget.Editor $r2;
        android.widget.TextView $r3;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r2);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = virtualinvoke $r3.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $i1 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4098);

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateSelectionInternal(int,int,boolean)>($i1, i0, $z0);

        return;
    }

    private void updateMinAndMaxOffsets(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, i4;
        android.widget.Editor $r2;
        android.widget.TextView $r3;
        float $f0, $f1;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r2);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i4);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i4);

        i1 = virtualinvoke $r3.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $i2 = r0.<android.widget.Editor$SelectionModifierCursorController: int mMinTouchOffset>;

        if i1 >= $i2 goto label2;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMinTouchOffset> = i1;

     label2:
        $i3 = r0.<android.widget.Editor$SelectionModifierCursorController: int mMaxTouchOffset>;

        if i1 <= $i3 goto label3;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMaxTouchOffset> = i1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    private void updateParagraphBasedSelection(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        long l0;
        android.widget.Editor $r2, $r4;
        android.widget.TextView $r3;
        float $f0, $f1;
        int $i1, $i2, i3, i4, i5, i6, i7;
        boolean $z0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r2);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i3 = virtualinvoke $r3.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $i1 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i1);

        $i2 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i2);

        $r4 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        l0 = staticinvoke <android.widget.Editor: long access$8000(android.widget.Editor,int,int)>($r4, i4, i5);

        i6 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l0);

        i7 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l0);

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4098);

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateSelectionInternal(int,int,boolean)>(i6, i7, $z0);

        return;
    }

    private void updateSelection(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        int i0;
        android.widget.Editor $r2;
        android.widget.TextView $r3;
        android.text.Layout $r4;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r2);

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r4 == null goto label4;

        i0 = r0.<android.widget.Editor$SelectionModifierCursorController: int mDragAcceleratorMode>;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label4;

     label1:
        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateParagraphBasedSelection(android.view.MotionEvent)>(r1);

        goto label4;

     label2:
        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateWordBasedSelection(android.view.MotionEvent)>(r1);

        goto label4;

     label3:
        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateCharacterBasedSelection(android.view.MotionEvent)>(r1);

     label4:
        return;
    }

    private void updateSelectionInternal(int, int, boolean)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int i0, i1, $i2, $i3;
        boolean z0, $z2, z3;
        android.widget.Editor $r1, $r3, $r4, $r6, $r8;
        android.widget.TextView $r2, $r5, $r7, $r9;
        java.lang.CharSequence $r10;
        android.text.Spannable $r11;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $z2 = staticinvoke <android.widget.Editor: boolean access$4700(android.widget.Editor)>($r3);

        if $z2 == 0 goto label2;

        $r4 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r5 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r4);

        $i2 = virtualinvoke $r5.<android.widget.TextView: int getSelectionStart()>();

        if $i2 != i0 goto label1;

        $r6 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r7 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r6);

        $i3 = virtualinvoke $r7.<android.widget.TextView: int getSelectionEnd()>();

        if $i3 == i1 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        $r8 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r9 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r8);

        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r11 = (android.text.Spannable) $r10;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r11, i0, i1);

        if z3 == 0 goto label4;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r1);

        virtualinvoke $r2.<android.widget.TextView: boolean performHapticFeedback(int)>(9);

     label4:
        return;
    }

    private void updateWordBasedSelection(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z4;
        float f0, f1, f2, f3;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, i8, $i9, i10, i11;
        android.widget.Editor $r2, $r5, $r6, $r7, $r8, $r9, $r10, r14, $r17;
        android.widget.TextView $r3, $r11, $r15, $r18;
        android.content.Context $r4;
        android.view.ViewConfiguration r12;
        android.widget.Editor$SelectionHandleView r13;
        android.text.Layout $r16;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag>;

        if $z1 == 0 goto label1;

        return;

     label1:
        z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(8194);

        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r2);

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.content.Context getContext()>();

        r12 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r4);

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        if z0 == 0 goto label2;

        $r10 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r11 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r10);

        i5 = virtualinvoke $r11.<android.widget.TextView: int getLineAtCoordinate(float)>(f1);

        goto label6;

     label2:
        f2 = f1;

        $z2 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mSwitchedLines>;

        if $z2 == 0 goto label5;

        i6 = virtualinvoke r12.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r13 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r13 == null goto label3;

        f3 = virtualinvoke r13.<android.widget.Editor$SelectionHandleView: float getIdealVerticalOffset()>();

        goto label4;

     label3:
        f3 = (float) i6;

     label4:
        f2 = f1 - f3;

     label5:
        r14 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r15 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>(r14);

        $r16 = virtualinvoke $r15.<android.widget.TextView: android.text.Layout getLayout()>();

        $i7 = r0.<android.widget.Editor$SelectionModifierCursorController: int mLineSelectionIsOn>;

        i5 = virtualinvoke r14.<android.widget.Editor: int getCurrentLineAdjustedForSlop(android.text.Layout,int,float)>($r16, $i7, f2);

        $z3 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mSwitchedLines>;

        if $z3 != 0 goto label6;

        $i4 = r0.<android.widget.Editor$SelectionModifierCursorController: int mLineSelectionIsOn>;

        if i5 == $i4 goto label6;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mSwitchedLines> = 1;

        return;

     label6:
        $r17 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r18 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r17);

        i8 = virtualinvoke $r18.<android.widget.TextView: int getOffsetAtCoordinate(int,float)>(i5, f0);

        $i9 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        if $i9 >= i8 goto label7;

        $r8 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        i10 = staticinvoke <android.widget.Editor: int access$6800(android.widget.Editor,int)>($r8, i8);

        $r9 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $i3 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        i11 = staticinvoke <android.widget.Editor: int access$6900(android.widget.Editor,int)>($r9, $i3);

        goto label8;

     label7:
        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        i0 = staticinvoke <android.widget.Editor: int access$6900(android.widget.Editor,int)>($r5, i8);

        $r6 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $i2 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        i1 = staticinvoke <android.widget.Editor: int access$6800(android.widget.Editor,int)>($r6, $i2);

        i10 = i0;

        i11 = i1;

        if i1 != i0 goto label8;

        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        i10 = staticinvoke <android.widget.Editor: int access$7100(android.widget.Editor,int,boolean)>($r7, i0, 0);

        i11 = i1;

     label8:
        r0.<android.widget.Editor$SelectionModifierCursorController: int mLineSelectionIsOn> = i5;

        $z4 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4098);

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateSelectionInternal(int,int,boolean)>(i11, i10, $z4);

        return;
    }

    public void enterDrag(int)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int i0, $i1, $i2;
        android.widget.Editor $r1, $r3, $r5, $r7, $r9, $r11, $r14;
        android.widget.TextView $r2, $r8, $r12, $r15;
        android.widget.EditorTouchState $r4, $r6, $r10;
        float $f0, $f1, $f2;
        android.view.ViewParent $r13;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void show()>();

        r0.<android.widget.Editor$SelectionModifierCursorController: int mDragAcceleratorMode> = i0;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r1);

        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r4 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r3);

        $f0 = virtualinvoke $r4.<android.widget.EditorTouchState: float getLastDownX()>();

        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r6 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r5);

        $f1 = virtualinvoke $r6.<android.widget.EditorTouchState: float getLastDownY()>();

        $i1 = virtualinvoke $r2.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset> = $i1;

        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r8 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r7);

        $r9 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r10 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r9);

        $f2 = virtualinvoke $r10.<android.widget.EditorTouchState: float getLastDownY()>();

        $i2 = virtualinvoke $r8.<android.widget.TextView: int getLineAtCoordinate(float)>($f2);

        r0.<android.widget.Editor$SelectionModifierCursorController: int mLineSelectionIsOn> = $i2;

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void hide()>();

        $r11 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r12 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r11);

        $r13 = virtualinvoke $r12.<android.widget.TextView: android.view.ViewParent getParent()>();

        interfaceinvoke $r13.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $r14 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r15 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r14);

        virtualinvoke $r15.<android.widget.TextView: void cancelLongPress()>();

        return;
    }

    public int getMaxTouchOffset()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int $i0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $i0 = r0.<android.widget.Editor$SelectionModifierCursorController: int mMaxTouchOffset>;

        return $i0;
    }

    public int getMinTouchOffset()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int $i0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $i0 = r0.<android.widget.Editor$SelectionModifierCursorController: int mMinTouchOffset>;

        return $i0;
    }

    public void hide()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1, r2;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$SelectionHandleView: void hide()>();

     label1:
        r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.Editor$SelectionHandleView: void hide()>();

     label2:
        return;
    }

    public void invalidateHandles()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1, r2;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$SelectionHandleView: void invalidate()>();

     label1:
        r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.Editor$SelectionHandleView: void invalidate()>();

     label2:
        return;
    }

    public boolean isActive()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor$SelectionHandleView: boolean isShowing()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isCursorBeingModified()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $z0 = virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: boolean isDragAcceleratorActive()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: boolean isSelectionStartDragged()>();

        if $z1 != 0 goto label2;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<android.widget.Editor$SelectionHandleView: boolean isDragging()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    public boolean isDragAcceleratorActive()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $i0 = r0.<android.widget.Editor$SelectionModifierCursorController: int mDragAcceleratorMode>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSelectionStartDragged()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor$SelectionHandleView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor$SelectionHandleView: boolean isDragging()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void onDetached()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor $r1;
        android.widget.TextView $r2;
        android.view.ViewTreeObserver $r3;
        android.widget.Editor$SelectionHandleView r4, r5;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r3.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        r4 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.widget.Editor$SelectionHandleView: void onDetached()>();

     label1:
        r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mEndHandle>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.widget.Editor$SelectionHandleView: void onDetached()>();

     label2:
        return;
    }

    public void onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.view.MotionEvent r1;
        float f0, f1, $f2, $f3;
        boolean z0, $z1, $z2, $z3, $z4, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        android.widget.Editor $r2, $r3, $r5, $r7, $r9, $r10, $r11, $r13, $r16, $r18, $r19, $r21, $r23, $r24, $r25, $r27, $r29, $r30, $r32, $r35, $r37, $r39, $r45, $r47;
        android.widget.TextView $r4, $r14, $r17, $r20, $r22, $r26, $r28, $r33, $r40;
        android.widget.EditorTouchState $r6, $r8, $r12, $r31, $r36, $r38, $r46;
        android.view.ViewParent $r15;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7;
        android.content.Context $r34, $r41;
        android.content.pm.PackageManager $r42;
        android.view.ViewConfiguration r43;
        android.widget.Editor$SelectionHandleView r44;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r1 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(8194);

        i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i4 == 0 goto label11;

        if i4 == 1 goto label09;

        if i4 == 2 goto label02;

        if i4 == 5 goto label01;

        if i4 == 6 goto label01;

        goto label17;

     label01:
        $r39 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r40 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r39);

        $r41 = virtualinvoke $r40.<android.widget.TextView: android.content.Context getContext()>();

        $r42 = virtualinvoke $r41.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z21 = virtualinvoke $r42.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.touchscreen.multitouch.distinct");

        if $z21 == 0 goto label17;

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateMinAndMaxOffsets(android.view.MotionEvent)>(r1);

        goto label17;

     label02:
        $z12 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mGestureStayedInTapRegion>;

        if $z12 == 0 goto label03;

        $r32 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r33 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r32);

        $r34 = virtualinvoke $r33.<android.widget.TextView: android.content.Context getContext()>();

        r43 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r34);

        $r35 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r36 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r35);

        $f2 = virtualinvoke $r36.<android.widget.EditorTouchState: float getLastDownX()>();

        $r37 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r38 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r37);

        $f3 = virtualinvoke $r38.<android.widget.EditorTouchState: float getLastDownY()>();

        $i3 = virtualinvoke r43.<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>();

        $z20 = staticinvoke <android.widget.EditorTouchState: boolean isDistanceWithin(float,float,float,float,int)>($f2, $f3, f0, f1, $i3);

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mGestureStayedInTapRegion> = $z20;

     label03:
        $z13 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag>;

        if $z13 == 0 goto label04;

        $r30 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r31 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r30);

        $z18 = virtualinvoke $r31.<android.widget.EditorTouchState: boolean isMovedEnoughForDrag()>();

        $z19 = $z18 ^ 1;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag> = $z19;

     label04:
        if z0 == 0 goto label07;

        $z15 = virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: boolean isDragAcceleratorActive()>();

        if $z15 != 0 goto label07;

        $r19 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r20 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r19);

        i5 = virtualinvoke $r20.<android.widget.TextView: int getOffsetForPosition(float,float)>(f0, f1);

        $r21 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r22 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r21);

        $z16 = virtualinvoke $r22.<android.widget.TextView: boolean hasSelection()>();

        if $z16 == 0 goto label06;

        $z17 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag>;

        if $z17 == 0 goto label05;

        $i2 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        if $i2 == i5 goto label06;

     label05:
        $r25 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r26 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r25);

        $i0 = virtualinvoke $r26.<android.widget.TextView: int getSelectionStart()>();

        if i5 < $i0 goto label06;

        $r27 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r28 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r27);

        $i1 = virtualinvoke $r28.<android.widget.TextView: int getSelectionEnd()>();

        if i5 > $i1 goto label06;

        $r29 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        staticinvoke <android.widget.Editor: void access$7800(android.widget.Editor)>($r29);

        goto label17;

     label06:
        $i6 = r0.<android.widget.Editor$SelectionModifierCursorController: int mStartOffset>;

        if $i6 == i5 goto label07;

        $r23 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        virtualinvoke $r23.<android.widget.Editor: void stopTextActionMode()>();

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void enterDrag(int)>(1);

        $r24 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r24.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag> = 0;

     label07:
        r44 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor$SelectionHandleView mStartHandle>;

        if r44 == null goto label08;

        $z14 = virtualinvoke r44.<android.widget.Editor$SelectionHandleView: boolean isShowing()>();

        if $z14 == 0 goto label08;

        goto label17;

     label08:
        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateSelection(android.view.MotionEvent)>(r1);

        goto label17;

     label09:
        $z9 = virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: boolean isDragAcceleratorActive()>();

        if $z9 != 0 goto label10;

        goto label17;

     label10:
        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void updateSelection(android.view.MotionEvent)>(r1);

        $r13 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r14 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r13);

        $r15 = virtualinvoke $r14.<android.widget.TextView: android.view.ViewParent getParent()>();

        interfaceinvoke $r15.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(0);

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void resetDragAcceleratorState()>();

        $r16 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r17 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r16);

        $z10 = virtualinvoke $r17.<android.widget.TextView: boolean hasSelection()>();

        if $z10 == 0 goto label17;

        $r18 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $z11 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag>;

        virtualinvoke $r18.<android.widget.Editor: void startSelectionActionModeAsync(boolean)>($z11);

        goto label17;

     label11:
        $r2 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $z1 = staticinvoke <android.widget.Editor: boolean access$2100(android.widget.Editor)>($r2);

        if $z1 == 0 goto label12;

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void hide()>();

        goto label17;

     label12:
        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r4 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r3);

        i7 = virtualinvoke $r4.<android.widget.TextView: int getOffsetForPosition(float,float)>(f0, f1);

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMaxTouchOffset> = i7;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMinTouchOffset> = i7;

        $z2 = r0.<android.widget.Editor$SelectionModifierCursorController: boolean mGestureStayedInTapRegion>;

        if $z2 == 0 goto label16;

        $r5 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r6 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r5);

        $z3 = virtualinvoke $r6.<android.widget.EditorTouchState: boolean isMultiTapInSameArea()>();

        if $z3 == 0 goto label16;

        if z0 != 0 goto label13;

        $r10 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $z7 = staticinvoke <android.widget.Editor: boolean access$7600(android.widget.Editor,float,float)>($r10, f0, f1);

        if $z7 != 0 goto label13;

        $r11 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r12 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r11);

        $z8 = virtualinvoke $r12.<android.widget.EditorTouchState: boolean isOnHandle()>();

        if $z8 == 0 goto label16;

     label13:
        $r45 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r46 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r45);

        $z22 = virtualinvoke $r46.<android.widget.EditorTouchState: boolean isDoubleTap()>();

        if $z22 == 0 goto label14;

        $r9 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        staticinvoke <android.widget.Editor: boolean access$7700(android.widget.Editor)>($r9);

        goto label15;

     label14:
        $r7 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r8 = staticinvoke <android.widget.Editor: android.widget.EditorTouchState access$6600(android.widget.Editor)>($r7);

        $z4 = virtualinvoke $r8.<android.widget.EditorTouchState: boolean isTripleClick()>();

        if $z4 == 0 goto label15;

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: boolean selectCurrentParagraphAndStartDrag()>();

     label15:
        $r47 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r47.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

     label16:
        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mGestureStayedInTapRegion> = 1;

        r0.<android.widget.Editor$SelectionModifierCursorController: boolean mHaventMovedEnoughToStartDrag> = 1;

     label17:
        return;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        boolean z0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void hide()>();

     label1:
        return;
    }

    public void resetTouchOffsets()
    {
        android.widget.Editor$SelectionModifierCursorController r0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMaxTouchOffset> = -1;

        r0.<android.widget.Editor$SelectionModifierCursorController: int mMinTouchOffset> = -1;

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void resetDragAcceleratorState()>();

        return;
    }

    public void show()
    {
        android.widget.Editor$SelectionModifierCursorController r0;
        android.widget.Editor $r1, $r3;
        android.widget.TextView $r2;
        boolean $z0;

        r0 := @this: android.widget.Editor$SelectionModifierCursorController;

        $r1 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$300(android.widget.Editor)>($r1);

        $z0 = virtualinvoke $r2.<android.widget.TextView: boolean isInBatchEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.widget.Editor$SelectionModifierCursorController: android.widget.Editor this$0>;

        virtualinvoke $r3.<android.widget.Editor: void loadHandleDrawables(boolean)>(0);

        specialinvoke r0.<android.widget.Editor$SelectionModifierCursorController: void initHandles()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Editor$SelectionModifierCursorController: int DRAG_ACCELERATOR_MODE_WORD> = 2;

        <android.widget.Editor$SelectionModifierCursorController: int DRAG_ACCELERATOR_MODE_PARAGRAPH> = 3;

        <android.widget.Editor$SelectionModifierCursorController: int DRAG_ACCELERATOR_MODE_INACTIVE> = 0;

        <android.widget.Editor$SelectionModifierCursorController: int DRAG_ACCELERATOR_MODE_CHARACTER> = 1;

        return;
    }
}
