class android.widget.Editor$TextRenderNode extends java.lang.Object
{
    boolean isDirty;
    boolean needsToBeShifted;
    android.graphics.RenderNode renderNode;

    public void <init>(java.lang.String)
    {
        android.widget.Editor$TextRenderNode r0;
        java.lang.String r1;
        android.graphics.RenderNode $r2;

        r0 := @this: android.widget.Editor$TextRenderNode;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.graphics.RenderNode: android.graphics.RenderNode create(java.lang.String,android.graphics.RenderNode$AnimationHost)>(r1, null);

        r0.<android.widget.Editor$TextRenderNode: android.graphics.RenderNode renderNode> = $r2;

        r0.<android.widget.Editor$TextRenderNode: boolean isDirty> = 1;

        r0.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted> = 1;

        return;
    }

    boolean needsRecord()
    {
        android.widget.Editor$TextRenderNode r0;
        boolean $z0, $z1, z2;
        android.graphics.RenderNode $r1;

        r0 := @this: android.widget.Editor$TextRenderNode;

        $z0 = r0.<android.widget.Editor$TextRenderNode: boolean isDirty>;

        if $z0 != 0 goto label2;

        $r1 = r0.<android.widget.Editor$TextRenderNode: android.graphics.RenderNode renderNode>;

        $z1 = virtualinvoke $r1.<android.graphics.RenderNode: boolean hasDisplayList()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }
}
