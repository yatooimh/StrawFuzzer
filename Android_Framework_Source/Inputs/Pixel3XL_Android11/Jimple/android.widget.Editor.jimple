public class android.widget.Editor extends java.lang.Object
{
    static final int BLINK;
    private static final boolean DEBUG_UNDO;
    private static final int DELAY_BEFORE_HANDLE_FADES_OUT;
    private static final int DRAG_SHADOW_MAX_TEXT_LENGTH;
    static final int EXTRACT_NOTHING;
    static final int EXTRACT_UNKNOWN;
    private static final boolean FLAG_USE_MAGNIFIER;
    public static final int HANDLE_TYPE_SELECTION_END;
    public static final int HANDLE_TYPE_SELECTION_START;
    private static final int LINE_CHANGE_SLOP_MAX_DP;
    private static final int LINE_CHANGE_SLOP_MIN_DP;
    private static final float LINE_SLOP_MULTIPLIER_FOR_HANDLEVIEWS;
    private static final int MAX_LINE_HEIGHT_FOR_MAGNIFIER;
    private static final int MENU_ITEM_ORDER_ASSIST;
    private static final int MENU_ITEM_ORDER_AUTOFILL;
    private static final int MENU_ITEM_ORDER_COPY;
    private static final int MENU_ITEM_ORDER_CUT;
    private static final int MENU_ITEM_ORDER_PASTE;
    private static final int MENU_ITEM_ORDER_PASTE_AS_PLAIN_TEXT;
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START;
    private static final int MENU_ITEM_ORDER_REDO;
    private static final int MENU_ITEM_ORDER_REPLACE;
    private static final int MENU_ITEM_ORDER_SECONDARY_ASSIST_ACTIONS_START;
    private static final int MENU_ITEM_ORDER_SELECT_ALL;
    private static final int MENU_ITEM_ORDER_SHARE;
    private static final int MENU_ITEM_ORDER_UNDO;
    private static final int MIN_LINE_HEIGHT_FOR_MAGNIFIER;
    private static final int RECENT_CUT_COPY_DURATION_MS;
    private static final java.lang.String TAG;
    private static final java.lang.String UNDO_OWNER_TAG;
    private static final int UNSET_LINE;
    private static final int UNSET_X_VALUE;
    boolean mAllowUndo;
    private android.widget.Editor$Blink mBlink;
    private float mContextMenuAnchorX;
    private float mContextMenuAnchorY;
    private android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter;
    boolean mCreatedWithASelection;
    private final android.widget.Editor$CursorAnchorInfoNotifier mCursorAnchorInfoNotifier;
    boolean mCursorVisible;
    android.view.ActionMode$Callback mCustomInsertionActionModeCallback;
    android.view.ActionMode$Callback mCustomSelectionActionModeCallback;
    boolean mDiscardNextActionUp;
    android.graphics.drawable.Drawable mDrawableForCursor;
    java.lang.CharSequence mError;
    private android.widget.Editor$ErrorPopup mErrorPopup;
    boolean mErrorWasChanged;
    private boolean mFlagCursorDragFromAnywhereEnabled;
    private boolean mFlagInsertionHandleGesturesEnabled;
    boolean mFrozenWithFocus;
    private final boolean mHapticTextHandleEnabled;
    boolean mIgnoreActionUpEvent;
    boolean mInBatchEditControllers;
    private float mInitialZoom;
    android.widget.Editor$InputContentType mInputContentType;
    android.widget.Editor$InputMethodState mInputMethodState;
    int mInputType;
    private java.lang.Runnable mInsertionActionModeRunnable;
    private boolean mInsertionControllerEnabled;
    android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController;
    boolean mIsBeingLongClicked;
    boolean mIsBeingLongClickedByAccessibility;
    boolean mIsInsertionActionModeStartPending;
    android.text.method.KeyListener mKeyListener;
    private int mLastButtonState;
    private int mLineChangeSlopMax;
    private int mLineChangeSlopMin;
    private android.widget.Editor$MagnifierMotionAnimator mMagnifierAnimator;
    private final android.view.ViewTreeObserver$OnDrawListener mMagnifierOnDrawListener;
    private int mMaxLineHeightForMagnifier;
    private final com.android.internal.logging.MetricsLogger mMetricsLogger;
    private int mMinLineHeightForMagnifier;
    private final boolean mNewMagnifierEnabled;
    private final android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener;
    private android.widget.Editor$PositionListener mPositionListener;
    private boolean mPreserveSelection;
    final android.widget.Editor$ProcessTextIntentActionsHandler mProcessTextIntentActionsHandler;
    private boolean mRenderCursorRegardlessTiming;
    private boolean mRequestingLinkActionMode;
    private boolean mRestartActionModeOnNextRefresh;
    boolean mSelectAllOnFocus;
    android.graphics.drawable.Drawable mSelectHandleCenter;
    android.graphics.drawable.Drawable mSelectHandleLeft;
    android.graphics.drawable.Drawable mSelectHandleRight;
    private android.widget.SelectionActionModeHelper mSelectionActionModeHelper;
    private boolean mSelectionControllerEnabled;
    android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController;
    boolean mSelectionMoved;
    private long mShowCursor;
    private boolean mShowErrorAfterAttach;
    private final java.lang.Runnable mShowFloatingToolbar;
    boolean mShowSoftInputOnFocus;
    private java.lang.Runnable mShowSuggestionRunnable;
    private android.widget.Editor$SpanController mSpanController;
    android.widget.SpellChecker mSpellChecker;
    private final android.widget.Editor$SuggestionHelper mSuggestionHelper;
    android.text.style.SuggestionRangeSpan mSuggestionRangeSpan;
    private android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow;
    private android.graphics.Rect mTempRect;
    private android.view.ActionMode mTextActionMode;
    boolean mTextIsSelectable;
    private android.widget.Editor$TextRenderNode[] mTextRenderNodes;
    private final android.widget.TextView mTextView;
    boolean mTouchFocusSelected;
    private final android.widget.EditorTouchState mTouchState;
    final android.widget.Editor$UndoInputFilter mUndoInputFilter;
    private final android.content.UndoManager mUndoManager;
    private android.content.UndoOwner mUndoOwner;
    private final java.lang.Runnable mUpdateMagnifierRunnable;
    private boolean mUpdateWordIteratorText;
    private android.text.method.WordIterator mWordIterator;
    private android.text.method.WordIterator mWordIteratorWithText;

    void <init>(android.widget.TextView)
    {
        android.widget.Editor r0;
        android.widget.TextView r1, $r16, $r19, $r23;
        android.content.UndoManager $r3;
        android.content.UndoOwner $r4;
        android.widget.Editor$UndoInputFilter $r5;
        com.android.internal.logging.MetricsLogger $r6;
        android.widget.Editor$1 $r7;
        android.widget.Editor$2 $r8;
        android.widget.EditorTouchState $r9;
        android.widget.Editor$CursorAnchorInfoNotifier $r10;
        android.widget.Editor$3 $r11;
        android.widget.Editor$SuggestionHelper $r12;
        android.widget.Editor$5 $r13;
        android.text.InputFilter[] $r14;
        android.widget.Editor$ProcessTextIntentActionsHandler $r15;
        android.content.Context $r17, $r20, $r24;
        android.content.res.Resources $r18, $r21, $r25;
        boolean $z1, z2, z3, z4;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.DisplayMetrics $r22, $r26;
        float $f0, $f1;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.TextView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.content.UndoManager;

        specialinvoke $r3.<android.content.UndoManager: void <init>()>();

        r0.<android.widget.Editor: android.content.UndoManager mUndoManager> = $r3;

        $r4 = virtualinvoke $r3.<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>("Editor", r0);

        r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = $r4;

        $r5 = new android.widget.Editor$UndoInputFilter;

        specialinvoke $r5.<android.widget.Editor$UndoInputFilter: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter> = $r5;

        r0.<android.widget.Editor: boolean mAllowUndo> = 1;

        $r6 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r6.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<android.widget.Editor: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r6;

        $r7 = new android.widget.Editor$1;

        specialinvoke $r7.<android.widget.Editor$1: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: java.lang.Runnable mUpdateMagnifierRunnable> = $r7;

        $r8 = new android.widget.Editor$2;

        specialinvoke $r8.<android.widget.Editor$2: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.view.ViewTreeObserver$OnDrawListener mMagnifierOnDrawListener> = $r8;

        r0.<android.widget.Editor: int mInputType> = 0;

        r0.<android.widget.Editor: boolean mCursorVisible> = 1;

        r0.<android.widget.Editor: boolean mShowSoftInputOnFocus> = 1;

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor> = null;

        $r9 = new android.widget.EditorTouchState;

        specialinvoke $r9.<android.widget.EditorTouchState: void <init>()>();

        r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState> = $r9;

        $r10 = new android.widget.Editor$CursorAnchorInfoNotifier;

        specialinvoke $r10.<android.widget.Editor$CursorAnchorInfoNotifier: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$CursorAnchorInfoNotifier mCursorAnchorInfoNotifier> = $r10;

        $r11 = new android.widget.Editor$3;

        specialinvoke $r11.<android.widget.Editor$3: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: java.lang.Runnable mShowFloatingToolbar> = $r11;

        r0.<android.widget.Editor: boolean mIsInsertionActionModeStartPending> = 0;

        $r12 = new android.widget.Editor$SuggestionHelper;

        specialinvoke $r12.<android.widget.Editor$SuggestionHelper: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$SuggestionHelper mSuggestionHelper> = $r12;

        r0.<android.widget.Editor: float mInitialZoom> = 1.0F;

        $r13 = new android.widget.Editor$5;

        specialinvoke $r13.<android.widget.Editor$5: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener> = $r13;

        r0.<android.widget.Editor: android.widget.TextView mTextView> = r1;

        $r14 = virtualinvoke r1.<android.widget.TextView: android.text.InputFilter[] getFilters()>();

        virtualinvoke r1.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r14);

        $r15 = new android.widget.Editor$ProcessTextIntentActionsHandler;

        specialinvoke $r15.<android.widget.Editor$ProcessTextIntentActionsHandler: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$ProcessTextIntentActionsHandler mProcessTextIntentActionsHandler> = $r15;

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r17 = virtualinvoke $r16.<android.widget.TextView: android.content.Context getContext()>();

        $r18 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r18.<android.content.res.Resources: boolean getBoolean(int)>(17891443);

        r0.<android.widget.Editor: boolean mHapticTextHandleEnabled> = $z1;

        $i0 = staticinvoke <android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>("widget__enable_cursor_drag_from_anywhere", 1);

        if $i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r0.<android.widget.Editor: boolean mFlagCursorDragFromAnywhereEnabled> = z2;

        $i1 = staticinvoke <android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>("widget__enable_insertion_handle_gestures", 0);

        if $i1 == 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        r0.<android.widget.Editor: boolean mFlagInsertionHandleGesturesEnabled> = z3;

        z4 = 0;

        $i2 = staticinvoke <android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>("widget__enable_new_magnifier", 0);

        if $i2 == 0 goto label5;

        z4 = 1;

     label5:
        r0.<android.widget.Editor: boolean mNewMagnifierEnabled> = z4;

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r20 = virtualinvoke $r19.<android.widget.TextView: android.content.Context getContext()>();

        $r21 = virtualinvoke $r20.<android.content.Context: android.content.res.Resources getResources()>();

        $r22 = virtualinvoke $r21.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 45.0F, $r22);

        $i3 = (int) $f0;

        r0.<android.widget.Editor: int mLineChangeSlopMax> = $i3;

        $r23 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r24 = virtualinvoke $r23.<android.widget.TextView: android.content.Context getContext()>();

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        $r26 = virtualinvoke $r25.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 12.0F, $r26);

        $i4 = (int) $f1;

        r0.<android.widget.Editor: int mLineChangeSlopMin> = $i4;

        return;
    }

    static android.widget.Editor$MagnifierMotionAnimator access$000(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.Editor$MagnifierMotionAnimator $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$MagnifierMotionAnimator mMagnifierAnimator>;

        return $r1;
    }

    static boolean access$1200(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean shouldBlink()>();

        return $z0;
    }

    static void access$1500(android.widget.Editor, android.widget.Editor$SuggestionInfo)
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionInfo r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.widget.Editor$SuggestionInfo;

        specialinvoke r0.<android.widget.Editor: void replaceWithSuggestion(android.widget.Editor$SuggestionInfo)>(r1);

        return;
    }

    static void access$1600(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void sendUpdateSelection()>();

        return;
    }

    static java.lang.Runnable access$200(android.widget.Editor)
    {
        android.widget.Editor r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: java.lang.Runnable mUpdateMagnifierRunnable>;

        return $r1;
    }

    static boolean access$2100(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        return $z0;
    }

    static android.widget.Editor$PositionListener access$2200(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()>();

        return $r1;
    }

    static boolean access$2300(android.widget.Editor, int)
    {
        android.widget.Editor r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isOffsetVisible(int)>(i0);

        return $z0;
    }

    static android.widget.TextView access$300(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        return $r1;
    }

    static android.text.style.SuggestionSpan access$3100(android.widget.Editor, android.widget.Editor$SuggestionSpanInfo)
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionSpanInfo r1;
        android.text.style.SuggestionSpan $r2;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.widget.Editor$SuggestionSpanInfo;

        $r2 = specialinvoke r0.<android.widget.Editor: android.text.style.SuggestionSpan findEquivalentSuggestionSpan(android.widget.Editor$SuggestionSpanInfo)>(r1);

        return $r2;
    }

    static void access$3200(android.widget.Editor, int, int, boolean)
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(i0, i1, z0);

        return;
    }

    static android.graphics.Rect access$3700(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        return $r1;
    }

    static android.graphics.Rect access$3702(android.widget.Editor, android.graphics.Rect)
    {
        android.widget.Editor r0;
        android.graphics.Rect r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.Rect;

        r0.<android.widget.Editor: android.graphics.Rect mTempRect> = r1;

        return r1;
    }

    static android.widget.Editor$SuggestionHelper access$3800(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionHelper $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionHelper mSuggestionHelper>;

        return $r1;
    }

    static boolean access$4100(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean shouldOfferToShowSuggestions()>();

        return $z0;
    }

    static android.widget.SelectionActionModeHelper access$4200(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.SelectionActionModeHelper $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        return $r1;
    }

    static boolean access$4300(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mPreserveSelection>;

        return $z0;
    }

    static boolean access$4302(android.widget.Editor, boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        z0 := @parameter1: boolean;

        r0.<android.widget.Editor: boolean mPreserveSelection> = z0;

        return z0;
    }

    static boolean access$4402(android.widget.Editor, boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        z0 := @parameter1: boolean;

        r0.<android.widget.Editor: boolean mRequestingLinkActionMode> = z0;

        return z0;
    }

    static int access$4500(android.widget.Editor, android.graphics.drawable.Drawable, float)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;
        float f0;
        int $i0;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        f0 := @parameter2: float;

        $i0 = specialinvoke r0.<android.widget.Editor: int clampHorizontalPosition(android.graphics.drawable.Drawable,float)>(r1, f0);

        return $i0;
    }

    static android.view.inputmethod.InputMethodManager access$4600(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.view.inputmethod.InputMethodManager $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        return $r1;
    }

    static boolean access$4700(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mHapticTextHandleEnabled>;

        return $z0;
    }

    static boolean access$4800(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mNewMagnifierEnabled>;

        return $z0;
    }

    static int access$4900(android.widget.Editor)
    {
        android.widget.Editor r0;
        int $i0;

        r0 := @parameter0: android.widget.Editor;

        $i0 = r0.<android.widget.Editor: int mMaxLineHeightForMagnifier>;

        return $i0;
    }

    static android.view.ActionMode access$500(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        return $r1;
    }

    static android.view.ActionMode access$502(android.widget.Editor, android.view.ActionMode)
    {
        android.widget.Editor r0;
        android.view.ActionMode r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.view.ActionMode;

        r0.<android.widget.Editor: android.view.ActionMode mTextActionMode> = r1;

        return r1;
    }

    static android.widget.Editor$MagnifierMotionAnimator access$5300(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.Editor$MagnifierMotionAnimator $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.Editor$MagnifierMotionAnimator getMagnifierAnimator()>();

        return $r1;
    }

    static boolean access$5402(android.widget.Editor, boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        z0 := @parameter1: boolean;

        r0.<android.widget.Editor: boolean mRenderCursorRegardlessTiming> = z0;

        return z0;
    }

    static void access$5500(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void suspendBlink()>();

        return;
    }

    static float access$5600(android.widget.Editor)
    {
        android.widget.Editor r0;
        float $f0;

        r0 := @parameter0: android.widget.Editor;

        $f0 = r0.<android.widget.Editor: float mInitialZoom>;

        return $f0;
    }

    static int access$5700(android.widget.Editor)
    {
        android.widget.Editor r0;
        int $i0;

        r0 := @parameter0: android.widget.Editor;

        $i0 = r0.<android.widget.Editor: int mMinLineHeightForMagnifier>;

        return $i0;
    }

    static void access$6000(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void resumeBlink()>();

        return;
    }

    static void access$6100(android.widget.Editor, android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.view.MotionEvent;

        specialinvoke r0.<android.widget.Editor: void updateFloatingToolbarVisibility(android.view.MotionEvent)>(r1);

        return;
    }

    static boolean access$6300(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mFlagInsertionHandleGesturesEnabled>;

        return $z0;
    }

    static boolean access$6400(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mFlagCursorDragFromAnywhereEnabled>;

        return $z0;
    }

    static void access$6500(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void toggleInsertionActionMode()>();

        return;
    }

    static android.widget.EditorTouchState access$6600(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.EditorTouchState $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        return $r1;
    }

    static void access$6700(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void invalidateActionMode()>();

        return;
    }

    static int access$6800(android.widget.Editor, int)
    {
        android.widget.Editor r0;
        int i0, $i1;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.widget.Editor: int getWordEnd(int)>(i0);

        return $i1;
    }

    static int access$6900(android.widget.Editor, int)
    {
        android.widget.Editor r0;
        int i0, $i1;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.widget.Editor: int getWordStart(int)>(i0);

        return $i1;
    }

    static android.text.method.WordIterator access$7000(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.text.method.WordIterator $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        return $r1;
    }

    static int access$7100(android.widget.Editor, int, boolean)
    {
        android.widget.Editor r0;
        int i0, $i1;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = specialinvoke r0.<android.widget.Editor: int getNextCursorOffset(int,boolean)>(i0, z0);

        return $i1;
    }

    static java.lang.Runnable access$7400(android.widget.Editor)
    {
        android.widget.Editor r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable>;

        return $r1;
    }

    static java.lang.Runnable access$7402(android.widget.Editor, java.lang.Runnable)
    {
        android.widget.Editor r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable> = r1;

        return r1;
    }

    static boolean access$7500(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isCursorInsideEasyCorrectionSpan()>();

        return $z0;
    }

    static boolean access$7600(android.widget.Editor, float, float)
    {
        android.widget.Editor r0;
        float f0, f1;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isPositionOnText(float,float)>(f0, f1);

        return $z0;
    }

    static boolean access$7700(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean selectCurrentWordAndStartDrag()>();

        return $z0;
    }

    static void access$7800(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void startDragAndDrop()>();

        return;
    }

    static boolean access$7900(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean selectCurrentParagraph()>();

        return $z0;
    }

    static long access$8000(android.widget.Editor, int, int)
    {
        android.widget.Editor r0;
        int i0, i1;
        long $l2;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l2 = specialinvoke r0.<android.widget.Editor: long getParagraphsRange(int,int)>(i0, i1);

        return $l2;
    }

    static android.widget.Editor$CorrectionHighlighter access$8302(android.widget.Editor, android.widget.Editor$CorrectionHighlighter)
    {
        android.widget.Editor r0;
        android.widget.Editor$CorrectionHighlighter r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.widget.Editor$CorrectionHighlighter;

        r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter> = r1;

        return r1;
    }

    static android.content.UndoManager access$8400(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.content.UndoManager $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        return $r1;
    }

    static android.content.UndoOwner access$8800(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.content.UndoOwner $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        return $r1;
    }

    static boolean access$9000(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.widget.Editor: boolean isValidRange(java.lang.CharSequence,int,int)>(r0, i0, i1);

        return $z0;
    }

    private void chooseSize(android.widget.PopupWindow, java.lang.CharSequence, android.widget.TextView)
    {
        android.widget.Editor r0;
        android.widget.PopupWindow r1;
        android.widget.TextView r2, $r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        android.content.res.Resources $r4;
        android.text.TextPaint $r5;
        android.text.StaticLayout$Builder $r6, $r7;
        boolean $z0;
        double $d0, $d1;
        float $f0, f1;
        java.lang.CharSequence r8;
        android.text.StaticLayout r9;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.PopupWindow;

        r8 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.widget.TextView;

        i0 = virtualinvoke r2.<android.widget.TextView: int getPaddingLeft()>();

        i1 = virtualinvoke r2.<android.widget.TextView: int getPaddingRight()>();

        i2 = virtualinvoke r2.<android.widget.TextView: int getPaddingTop()>();

        i3 = virtualinvoke r2.<android.widget.TextView: int getPaddingBottom()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.content.res.Resources getResources()>();

        i12 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105514);

        $i4 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        $r5 = virtualinvoke r2.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r6 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r8, 0, $i4, $r5, i12);

        $z0 = r2.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        $r7 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z0);

        r9 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        f1 = 0.0F;

        i13 = 0;

     label1:
        $i5 = virtualinvoke r9.<android.text.StaticLayout: int getLineCount()>();

        if i13 >= $i5 goto label2;

        $f0 = virtualinvoke r9.<android.text.StaticLayout: float getLineWidth(int)>(i13);

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f0);

        i13 = i13 + 1;

        goto label1;

     label2:
        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i7 = (int) $d1;

        $i6 = i0 + i1;

        $i8 = $i7 + $i6;

        virtualinvoke r1.<android.widget.PopupWindow: void setWidth(int)>($i8);

        $i9 = virtualinvoke r9.<android.text.StaticLayout: int getHeight()>();

        $i10 = i2 + i3;

        $i11 = $i9 + $i10;

        virtualinvoke r1.<android.widget.PopupWindow: void setHeight(int)>($i11);

        return;
    }

    private int clampHorizontalPosition(android.graphics.drawable.Drawable, float)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i8, $i9, $i12, $i13, $i14, i15, i16, $i17, $i18;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10;
        android.graphics.Rect $r2, $r3, $r8, $r11, $r12, $r13, $r14;
        android.widget.TextView $r4, $r5, $r6, $r7, $r9;
        byte $b6, $b7, $b10, $b11;
        java.lang.CharSequence $r10;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f9 := @parameter1: float;

        $f1 = f9 - 0.5F;

        f10 = staticinvoke <java.lang.Math: float max(float,float)>(0.5F, $f1);

        $r2 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        if $r2 != null goto label1;

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.Editor: android.graphics.Rect mTempRect> = $r13;

     label1:
        i15 = 0;

        if r1 == null goto label2;

        $r12 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r12);

        i15 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label3;

     label2:
        $r3 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label3:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r4.<android.widget.TextView: int getScrollX()>();

        $f2 = (float) i0;

        f0 = f10 - $f2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r5.<android.widget.TextView: int getWidth()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i3 = virtualinvoke $r6.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $i2 - $i3;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i5 = virtualinvoke $r7.<android.widget.TextView: int getCompoundPaddingRight()>();

        i1 = $i4 - $i5;

        $f3 = (float) i1;

        $f4 = $f3 - 1.0F;

        $b6 = f0 cmpl $f4;

        if $b6 < 0 goto label4;

        $i14 = i1 + i0;

        $r11 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i12 = $r11.<android.graphics.Rect: int right>;

        $i13 = i15 - $i12;

        i16 = $i14 - $i13;

        goto label7;

     label4:
        $f5 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b7 = $f5 cmpg 1.0F;

        if $b7 <= 0 goto label6;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 == 0 goto label5;

        $i9 = 1048576 - i0;

        $f8 = (float) $i9;

        $f6 = (float) i1;

        $f7 = $f6 + 1.0F;

        $b10 = $f8 cmpg $f7;

        if $b10 > 0 goto label5;

        $b11 = f10 cmpg 1.0F;

        if $b11 > 0 goto label5;

        goto label6;

     label5:
        $i17 = (int) f10;

        $r14 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i18 = $r14.<android.graphics.Rect: int left>;

        i16 = $i17 - $i18;

        goto label7;

     label6:
        $r8 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i8 = $r8.<android.graphics.Rect: int left>;

        i16 = i0 - $i8;

     label7:
        return i16;
    }

    private android.widget.Magnifier$Builder createBuilderWithInlineMagnifierDefaults()
    {
        android.widget.Editor r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, $i6, $i7, $i8, i9, $i10, $i11, i12, $i13, $i14, $i15, $i16;
        android.widget.Magnifier$Builder $r2, $r17, $r18, $r19, $r20, $r21, $r26;
        android.widget.TextView $r3, $r6, $r10, $r14, $r16, $r22;
        byte $b2, $b3, $b4, $b5;
        android.content.Context $r7, $r11, $r23;
        android.content.res.Resources $r8, $r12;
        android.util.DisplayMetrics $r9, $r13;
        android.text.Layout r15;
        int[] $r24;
        android.content.res.TypedArray r25;

        r0 := @this: android.widget.Editor;

        $r2 = new android.widget.Magnifier$Builder;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        specialinvoke $r2.<android.widget.Magnifier$Builder: void <init>(android.view.View)>($r3);

        f1 = staticinvoke <android.app.AppGlobals: float getFloatCoreSetting(java.lang.String,float)>("widget__magnifier_zoom_factor", 1.5F);

        f0 = staticinvoke <android.app.AppGlobals: float getFloatCoreSetting(java.lang.String,float)>("widget__magnifier_aspect_ratio", 5.5F);

        $b2 = f1 cmpg 1.2F;

        if $b2 < 0 goto label1;

        f2 = f1;

        $b4 = f1 cmpl 1.8F;

        if $b4 <= 0 goto label2;

     label1:
        f2 = 1.5F;

     label2:
        $b5 = f0 cmpg 3.0F;

        if $b5 < 0 goto label3;

        f3 = f0;

        $b3 = f0 cmpl 8.0F;

        if $b3 <= 0 goto label4;

     label3:
        f3 = 5.5F;

     label4:
        r0.<android.widget.Editor: float mInitialZoom> = f2;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f4 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 20.0F, $r9);

        $i6 = (int) $f4;

        r0.<android.widget.Editor: int mMinLineHeightForMagnifier> = $i6;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: android.content.Context getContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f5 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 32.0F, $r13);

        $i7 = (int) $f5;

        r0.<android.widget.Editor: int mMaxLineHeightForMagnifier> = $i7;

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r15 = virtualinvoke $r14.<android.widget.TextView: android.text.Layout getLayout()>();

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i8 = virtualinvoke $r16.<android.widget.TextView: int getSelectionStart()>();

        i9 = virtualinvoke r15.<android.text.Layout: int getLineForOffset(int)>($i8);

        $i10 = virtualinvoke r15.<android.text.Layout: int getLineBottomWithoutSpacing(int)>(i9);

        $i11 = virtualinvoke r15.<android.text.Layout: int getLineTop(int)>(i9);

        i12 = $i10 - $i11;

        $f6 = (float) i12;

        $f7 = $f6 * f2;

        i0 = (int) $f7;

        $i13 = r0.<android.widget.Editor: int mMinLineHeightForMagnifier>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i13);

        $f8 = (float) $i14;

        $f9 = $f8 * f3;

        i1 = (int) $f9;

        $r17 = virtualinvoke $r2.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setFishEyeStyle()>();

        $r18 = virtualinvoke $r17.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setSize(int,int)>(i1, i0);

        $r19 = virtualinvoke $r18.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setSourceSize(int,int)>(i1, i12);

        $r20 = virtualinvoke $r19.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setElevation(float)>(0.0F);

        $r21 = virtualinvoke $r20.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setInitialZoom(float)>(f2);

        virtualinvoke $r21.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setClippingEnabled(boolean)>(0);

        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r23 = virtualinvoke $r22.<android.widget.TextView: android.content.Context getContext()>();

        $r24 = <com.android.internal.R$styleable: int[] Magnifier>;

        r25 = virtualinvoke $r23.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r24, 17956984, 0);

        $i15 = virtualinvoke r25.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, 0);

        $i16 = virtualinvoke r25.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, 0);

        virtualinvoke $r2.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setDefaultSourceToMagnifierOffset(int,int)>($i15, $i16);

        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        $r26 = virtualinvoke $r2.<android.widget.Magnifier$Builder: android.widget.Magnifier$Builder setSourceBounds(int,int,int,int)>(1, 0, 1, 0);

        return $r26;
    }

    private void discardTextDisplayLists()
    {
        android.widget.Editor r0;
        android.widget.Editor$TextRenderNode[] $r1, r4;
        int $i0, i1;
        android.widget.Editor$TextRenderNode $r2, $r3;
        boolean $z0;
        android.graphics.RenderNode r5;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        if $r1 == null goto label5;

        i1 = 0;

     label1:
        r4 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $i0 = lengthof r4;

        if i1 >= $i0 goto label5;

        $r2 = r4[i1];

        if $r2 == null goto label2;

        $r3 = r4[i1];

        r5 = $r3.<android.widget.Editor$TextRenderNode: android.graphics.RenderNode renderNode>;

        goto label3;

     label2:
        r5 = null;

     label3:
        if r5 == null goto label4;

        $z0 = virtualinvoke r5.<android.graphics.RenderNode: boolean hasDisplayList()>();

        if $z0 == 0 goto label4;

        virtualinvoke r5.<android.graphics.RenderNode: void discardDisplayList()>();

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private void downgradeEasyCorrectionSpans()
    {
        android.widget.Editor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.widget.TextView $r1;
        boolean $z0;
        java.lang.Object[] $r2;
        android.text.style.SuggestionSpan $r3, $r4;
        java.lang.CharSequence r5;
        android.text.Spannable r6;
        android.text.style.SuggestionSpan[] r7;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r5 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r5 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        r6 = (android.text.Spannable) r5;

        $i1 = interfaceinvoke r6.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke r6.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Landroid/text/style/SuggestionSpan;");

        r7 = (android.text.style.SuggestionSpan[]) $r2;

        i6 = 0;

     label1:
        $i2 = lengthof r7;

        if i6 >= $i2 goto label3;

        $r3 = r7[i6];

        i0 = virtualinvoke $r3.<android.text.style.SuggestionSpan: int getFlags()>();

        $i3 = i0 & 1;

        if $i3 == 0 goto label2;

        $i4 = i0 & 2;

        if $i4 != 0 goto label2;

        $r4 = r7[i6];

        $i5 = i0 & -2;

        virtualinvoke $r4.<android.text.style.SuggestionSpan: void setFlags(int)>($i5);

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    private void drawCursor(android.graphics.Canvas, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        int i0, $i1;
        android.graphics.drawable.Drawable r2;
        float $f0, $f1;
        boolean z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $f1 = (float) i0;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f1);

     label3:
        r2 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if r2 == null goto label4;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label4:
        if z0 == 0 goto label5;

        $i1 = neg i0;

        $f0 = (float) $i1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label5:
        return;
    }

    private void drawHardwareAccelerated(android.graphics.Canvas, android.text.Layout, android.graphics.Path, android.graphics.Paint, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        android.text.Layout r2;
        android.graphics.Path r3;
        android.graphics.Paint r4;
        int i0, i2, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, i22, i23, i25, i26, i27, i28;
        long l1;
        android.text.DynamicLayout r5;
        int[] r6, r7;
        android.util.ArraySet r8;
        boolean $z1, $z2;
        android.widget.Editor$TextRenderNode[] $r9, $r21, r23, r24, r25;
        java.lang.Object $r10, $r16;
        java.lang.Integer $r11, $r17;
        android.widget.Editor$TextRenderNode $r12, $r13, $r14, $r15, $r18, $r19;
        java.lang.Object[] $r20;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.Layout;

        r3 := @parameter2: android.graphics.Path;

        r4 := @parameter3: android.graphics.Paint;

        i0 := @parameter4: int;

        l1 = virtualinvoke r2.<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>(r1);

        i11 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l1);

        i2 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l1);

        if i2 >= 0 goto label01;

        return;

     label01:
        virtualinvoke r2.<android.text.Layout: void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int)>(r1, r3, r4, i0, i11, i2);

        $z1 = r2 instanceof android.text.DynamicLayout;

        if $z1 == 0 goto label19;

        $r9 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        if $r9 != null goto label02;

        $r20 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(class "Landroid/widget/Editor$TextRenderNode;");

        $r21 = (android.widget.Editor$TextRenderNode[]) $r20;

        r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes> = $r21;

     label02:
        r5 = (android.text.DynamicLayout) r2;

        r6 = virtualinvoke r5.<android.text.DynamicLayout: int[] getBlockEndLines()>();

        r7 = virtualinvoke r5.<android.text.DynamicLayout: int[] getBlockIndices()>();

        i12 = virtualinvoke r5.<android.text.DynamicLayout: int getNumberOfBlocks()>();

        i13 = virtualinvoke r5.<android.text.DynamicLayout: int getIndexFirstChangedBlock()>();

        r8 = virtualinvoke r5.<android.text.DynamicLayout: android.util.ArraySet getBlocksAlwaysNeedToBeRedrawn()>();

        if r8 == null goto label05;

        i14 = 0;

     label03:
        $i9 = virtualinvoke r8.<android.util.ArraySet: int size()>();

        if i14 >= $i9 goto label05;

        $r16 = virtualinvoke r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i14);

        $r17 = (java.lang.Integer) $r16;

        $i10 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        i15 = virtualinvoke r5.<android.text.DynamicLayout: int getBlockIndex(int)>($i10);

        if i15 == -1 goto label04;

        r23 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r18 = r23[i15];

        if $r18 == null goto label04;

        $r19 = r23[i15];

        $r19.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted> = 1;

     label04:
        i14 = i14 + 1;

        goto label03;

     label05:
        i16 = staticinvoke <java.util.Arrays: int binarySearch(int[],int,int,int)>(r6, 0, i12, i11);

        i17 = i16;

        if i16 >= 0 goto label06;

        $i8 = i16 + 1;

        i17 = neg $i8;

     label06:
        i18 = staticinvoke <java.lang.Math: int min(int,int)>(i13, i17);

        i19 = 0;

     label07:
        if i18 >= i12 goto label11;

        i20 = r7[i18];

        if i18 < i13 goto label08;

        if i20 == -1 goto label08;

        r24 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r14 = r24[i20];

        if $r14 == null goto label08;

        $r15 = r24[i20];

        $r15.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted> = 1;

     label08:
        $i21 = r6[i18];

        if $i21 >= i11 goto label09;

        goto label10;

     label09:
        i22 = specialinvoke r0.<android.widget.Editor: int drawHardwareAcceleratedInner(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int,int[],int[],int,int,int)>(r1, r2, r3, r4, i0, r6, r7, i18, i12, i19);

        i19 = i22;

        $i6 = r6[i18];

        if $i6 < i2 goto label10;

        $i7 = i18 + 1;

        i23 = staticinvoke <java.lang.Math: int max(int,int)>(i13, $i7);

        i19 = i22;

        goto label12;

     label10:
        i18 = i18 + 1;

        goto label07;

     label11:
        i23 = i12;

     label12:
        if r8 == null goto label18;

        i25 = i19;

        i26 = 0;

     label13:
        $i5 = virtualinvoke r8.<android.util.ArraySet: int size()>();

        if i26 >= $i5 goto label17;

        $r10 = virtualinvoke r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i26);

        $r11 = (java.lang.Integer) $r10;

        i27 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        i28 = virtualinvoke r5.<android.text.DynamicLayout: int getBlockIndex(int)>(i27);

        if i28 == -1 goto label15;

        r25 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r12 = r25[i28];

        if $r12 == null goto label15;

        $r13 = r25[i28];

        $z2 = $r13.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted>;

        if $z2 == 0 goto label14;

        goto label15;

     label14:
        goto label16;

     label15:
        i25 = specialinvoke r0.<android.widget.Editor: int drawHardwareAcceleratedInner(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int,int[],int[],int,int,int)>(r1, r2, r3, r4, i0, r6, r7, i27, i12, i25);

     label16:
        i26 = i26 + 1;

        goto label13;

     label17:
        goto label18;

     label18:
        virtualinvoke r5.<android.text.DynamicLayout: void setIndexFirstChangedBlock(int)>(i23);

        goto label20;

     label19:
        virtualinvoke r2.<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>(r1, i11, i2);

     label20:
        return;
    }

    private int drawHardwareAcceleratedInner(android.graphics.Canvas, android.text.Layout, android.graphics.Path, android.graphics.Paint, int, int[], int[], int, int, int)
    {
        android.widget.Editor r0;
        android.text.Layout r1;
        int[] r2, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19;
        boolean z0, $z1, $z2, z6;
        android.widget.Editor$TextRenderNode $r4, $r6, $r8, $r10, $r14, $r16, $r20, $r22, $r23;
        android.widget.Editor$TextRenderNode[] $r5, $r7, $r9, $r13, $r15, r28, r29;
        android.widget.TextView $r11, $r12;
        float $f0, $f1, $f2, f3, f4, f5, f6;
        java.lang.StringBuilder $r17;
        java.lang.String $r21;
        java.lang.Throwable $r24;
        android.graphics.Canvas r25;
        android.graphics.Path r26;
        android.graphics.Paint r27;
        android.graphics.RenderNode r31;
        android.graphics.RecordingCanvas r32, $r34;

        r0 := @this: android.widget.Editor;

        r25 := @parameter0: android.graphics.Canvas;

        r1 := @parameter1: android.text.Layout;

        r26 := @parameter2: android.graphics.Path;

        r27 := @parameter3: android.graphics.Paint;

        i9 := @parameter4: int;

        r2 := @parameter5: int[];

        r3 := @parameter6: int[];

        i10 := @parameter7: int;

        i11 := @parameter8: int;

        i12 := @parameter9: int;

        i0 = r2[i10];

        i13 = r3[i10];

        if i13 != -1 goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = 0;

     label02:
        if z6 == 0 goto label04;

        i14 = specialinvoke r0.<android.widget.Editor: int getAvailableDisplayListIndex(int[],int,int)>(r3, i11, i12);

        r3[i10] = i14;

        r28 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r22 = r28[i14];

        if $r22 == null goto label03;

        $r23 = r28[i14];

        $r23.<android.widget.Editor$TextRenderNode: boolean isDirty> = 1;

     label03:
        i15 = i14 + 1;

        goto label05;

     label04:
        i15 = i12;

        i14 = i13;

     label05:
        r29 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r4 = r29[i14];

        if $r4 != null goto label06;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r20 = new android.widget.Editor$TextRenderNode;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.widget.Editor$TextRenderNode: void <init>(java.lang.String)>($r21);

        r29[i14] = $r20;

     label06:
        $r5 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r6 = $r5[i14];

        z0 = virtualinvoke $r6.<android.widget.Editor$TextRenderNode: boolean needsRecord()>();

        $r7 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r8 = $r7[i14];

        r31 = $r8.<android.widget.Editor$TextRenderNode: android.graphics.RenderNode renderNode>;

        $r9 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r10 = $r9[i14];

        $z1 = $r10.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted>;

        if $z1 != 0 goto label08;

        if z0 == 0 goto label07;

        goto label08;

     label07:
        goto label19;

     label08:
        if i10 != 0 goto label09;

        i16 = 0;

        goto label10;

     label09:
        $i3 = i10 - 1;

        $i4 = r2[$i3];

        i16 = $i4 + 1;

     label10:
        i1 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i16);

        i2 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i0);

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i17 = virtualinvoke $r11.<android.widget.TextView: int getWidth()>();

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r12.<android.widget.TextView: boolean getHorizontallyScrolling()>();

        if $z2 == 0 goto label13;

        f3 = 3.4028235E38F;

        f4 = 1.4E-45F;

        i18 = i16;

     label11:
        if i18 > i0 goto label12;

        $f1 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i18);

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(f3, $f1);

        $f2 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i18);

        f4 = staticinvoke <java.lang.Math: float max(float,float)>(f4, $f2);

        i18 = i18 + 1;

        goto label11;

     label12:
        i19 = (int) f3;

        $f0 = 0.5F + f4;

        i17 = (int) $f0;

        goto label14;

     label13:
        i19 = 0;

     label14:
        if z0 == 0 goto label18;

        $i6 = i17 - i19;

        $i5 = i2 - i1;

        r32 = virtualinvoke r31.<android.graphics.RenderNode: android.graphics.RecordingCanvas beginRecording(int,int)>($i6, $i5);

        $i7 = neg i19;

        f5 = (float) $i7;

        $i8 = neg i1;

        f6 = (float) $i8;

     label15:
        virtualinvoke r32.<android.graphics.RecordingCanvas: void translate(float,float)>(f5, f6);

        virtualinvoke r1.<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>(r32, i16, i0);

        $r15 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r16 = $r15[i14];

        $r16.<android.widget.Editor$TextRenderNode: boolean isDirty> = 0;

     label16:
        virtualinvoke r31.<android.graphics.RenderNode: void endRecording()>();

        virtualinvoke r31.<android.graphics.RenderNode: boolean setClipToBounds(boolean)>(0);

        goto label18;

     label17:
        $r24 := @caughtexception;

        virtualinvoke r31.<android.graphics.RenderNode: void endRecording()>();

        virtualinvoke r31.<android.graphics.RenderNode: boolean setClipToBounds(boolean)>(0);

        throw $r24;

     label18:
        virtualinvoke r31.<android.graphics.RenderNode: boolean setLeftTopRightBottom(int,int,int,int)>(i19, i1, i17, i2);

        $r13 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r14 = $r13[i14];

        $r14.<android.widget.Editor$TextRenderNode: boolean needsToBeShifted> = 0;

     label19:
        $r34 = (android.graphics.RecordingCanvas) r25;

        virtualinvoke $r34.<android.graphics.RecordingCanvas: void drawRenderNode(android.graphics.RenderNode)>(r31);

        return i15;

        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private void ensureNoSelectionIfNonSelectable()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1, $r2, $r3, $r5, $r7;
        boolean $z0, $z1;
        java.lang.CharSequence $r4;
        android.text.Spannable $r6;
        int $i0, $i1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r1.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r2.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = (android.text.Spannable) $r4;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = virtualinvoke $r5.<android.widget.TextView: int length()>();

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r7.<android.widget.TextView: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r6, $i0, $i1);

     label1:
        return;
    }

    private boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest, int, int, int, android.view.inputmethod.ExtractedText)
    {
        android.widget.Editor r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        java.lang.CharSequence r3, $r11, $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, $i23, $i24;
        android.text.Spanned r4;
        java.lang.Object[] r5;
        android.widget.TextView $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1;
        java.lang.String $r12;
        java.lang.Object $r14, $r15;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        i11 := @parameter3: int;

        r2 := @parameter4: android.view.inputmethod.ExtractedText;

        if r1 == null goto label18;

        if r2 != null goto label01;

        goto label18;

     label01:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r3 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        if r3 != null goto label02;

        return 0;

     label02:
        if i9 == -2 goto label14;

        i0 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if i9 >= 0 goto label03;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = -1;

        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = -1;

        i12 = 0;

        i13 = i0;

        goto label11;

     label03:
        i14 = i10 + i11;

        i15 = i9;

        i16 = i14;

        $z1 = r3 instanceof android.text.Spanned;

        if $z1 == 0 goto label07;

        r4 = (android.text.Spanned) r3;

        r5 = interfaceinvoke r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i9, i14, class "Landroid/text/ParcelableSpan;");

        i17 = lengthof r5;

     label04:
        i15 = i9;

        i16 = i14;

        if i17 <= 0 goto label07;

        i17 = i17 + -1;

        $r14 = r5[i17];

        i18 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r14);

        i19 = i9;

        if i18 >= i9 goto label05;

        i19 = i18;

     label05:
        $r15 = r5[i17];

        i20 = interfaceinvoke r4.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r15);

        i21 = i14;

        if i20 <= i14 goto label06;

        i21 = i20;

     label06:
        i9 = i19;

        i14 = i21;

        goto label04;

     label07:
        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = i15;

        $i8 = i16 - i11;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = $i8;

        if i15 <= i0 goto label08;

        i22 = i0;

        goto label09;

     label08:
        i22 = i15;

        if i15 >= 0 goto label09;

        i22 = 0;

     label09:
        if i16 <= i0 goto label10;

        i13 = i0;

        i12 = i22;

        goto label11;

     label10:
        i12 = i22;

        i13 = i16;

        if i16 >= 0 goto label11;

        i13 = 0;

        i12 = i22;

     label11:
        $i23 = r1.<android.view.inputmethod.ExtractedTextRequest: int flags>;

        $i24 = $i23 & 1;

        if $i24 == 0 goto label12;

        $r13 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i12, i13);

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r13;

        goto label13;

     label12:
        $r12 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r3, i12, i13);

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r12;

     label13:
        goto label15;

     label14:
        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = 0;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = 0;

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = "";

     label15:
        r2.<android.view.inputmethod.ExtractedText: int flags> = 0;

        $i1 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r3, 2048);

        if $i1 == 0 goto label16;

        $i6 = r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i7 = $i6 | 2;

        r2.<android.view.inputmethod.ExtractedText: int flags> = $i7;

     label16:
        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r7.<android.widget.TextView: boolean isSingleLine()>();

        if $z0 == 0 goto label17;

        $i4 = r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i5 = $i4 | 1;

        r2.<android.view.inputmethod.ExtractedText: int flags> = $i5;

     label17:
        r2.<android.view.inputmethod.ExtractedText: int startOffset> = 0;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r8.<android.widget.TextView: int getSelectionStart()>();

        r2.<android.view.inputmethod.ExtractedText: int selectionStart> = $i2;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i3 = virtualinvoke $r9.<android.widget.TextView: int getSelectionEnd()>();

        r2.<android.view.inputmethod.ExtractedText: int selectionEnd> = $i3;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getHint()>();

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence hint> = $r11;

        return 1;

     label18:
        return 0;
    }

    private boolean extractedTextModeWillBeStarted()
    {
        android.widget.Editor r0;
        android.view.inputmethod.InputMethodManager r1;
        android.widget.TextView $r2;
        boolean $z1, z2, z3;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z2 = virtualinvoke $r2.<android.widget.TextView: boolean isInExtractedMode()>();

        if z2 != 0 goto label2;

        r1 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        z3 = 0;

        if r1 == null goto label1;

        z3 = 0;

        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>();

        if $z1 == 0 goto label1;

        z3 = 1;

     label1:
        return z3;

     label2:
        return 0;
    }

    private android.text.style.SuggestionSpan findEquivalentSuggestionSpan(android.widget.Editor$SuggestionSpanInfo)
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionSpanInfo r1;
        android.text.Editable r2;
        android.text.style.SuggestionSpan[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.text.style.SuggestionSpan r4, $r7, $r9, $r10;
        android.widget.TextView $r5;
        java.lang.CharSequence $r6;
        java.lang.Object[] $r8;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.Editor$SuggestionSpanInfo;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        r2 = (android.text.Editable) $r6;

        $r7 = r1.<android.widget.Editor$SuggestionSpanInfo: android.text.style.SuggestionSpan mSuggestionSpan>;

        $i1 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>($r7);

        if $i1 < 0 goto label1;

        $r10 = r1.<android.widget.Editor$SuggestionSpanInfo: android.text.style.SuggestionSpan mSuggestionSpan>;

        return $r10;

     label1:
        $i3 = r1.<android.widget.Editor$SuggestionSpanInfo: int mSpanStart>;

        $i2 = r1.<android.widget.Editor$SuggestionSpanInfo: int mSpanEnd>;

        $r8 = interfaceinvoke r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i3, $i2, class "Landroid/text/style/SuggestionSpan;");

        r3 = (android.text.style.SuggestionSpan[]) $r8;

        i0 = lengthof r3;

        i8 = 0;

     label2:
        if i8 >= i0 goto label6;

        r4 = r3[i8];

        $i4 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r4);

        $i5 = r1.<android.widget.Editor$SuggestionSpanInfo: int mSpanStart>;

        if $i4 == $i5 goto label3;

        goto label5;

     label3:
        $i6 = interfaceinvoke r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r4);

        $i7 = r1.<android.widget.Editor$SuggestionSpanInfo: int mSpanEnd>;

        if $i6 == $i7 goto label4;

        goto label5;

     label4:
        $r9 = r1.<android.widget.Editor$SuggestionSpanInfo: android.text.style.SuggestionSpan mSuggestionSpan>;

        $z0 = virtualinvoke r4.<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label5;

        return r4;

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        return null;
    }

    private int getAvailableDisplayListIndex(int[], int, int)
    {
        android.widget.Editor r0;
        int[] r1;
        int i0, i1, $i2, i3, i4;
        android.widget.Editor$TextRenderNode[] $r2, $r3, $r5;
        java.lang.Object[] $r4;
        boolean z1;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        i1 = lengthof $r2;

     label1:
        if i3 >= i1 goto label6;

        i4 = 0;

     label2:
        z1 = 0;

        if i4 >= i0 goto label4;

        $i2 = r1[i4];

        if $i2 != i3 goto label3;

        z1 = 1;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if z1 == 0 goto label5;

        i3 = i3 + 1;

        goto label1;

     label5:
        return i3;

     label6:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r4 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>($r3, i1, null);

        $r5 = (android.widget.Editor$TextRenderNode[]) $r4;

        r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes> = $r5;

        return i1;
    }

    private long getCharClusterRange(int)
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0, $i1, $i3, $i5, i7, i8, i9;
        long $l2, $l4, $l6;

        r0 := @this: android.widget.Editor;

        i7 := @parameter0: int;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if i7 >= $i0 goto label1;

        i8 = specialinvoke r0.<android.widget.Editor: int getNextCursorOffset(int,boolean)>(i7, 1);

        $i5 = specialinvoke r0.<android.widget.Editor: int getNextCursorOffset(int,boolean)>(i8, 0);

        $l6 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i5, i8);

        return $l6;

     label1:
        $i1 = i7 - 1;

        if $i1 < 0 goto label2;

        i9 = specialinvoke r0.<android.widget.Editor: int getNextCursorOffset(int,boolean)>(i7, 0);

        $i3 = specialinvoke r0.<android.widget.Editor: int getNextCursorOffset(int,boolean)>(i9, 1);

        $l4 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i9, $i3);

        return $l4;

     label2:
        $l2 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i7, i7);

        return $l2;
    }

    private int getErrorX()
    {
        android.widget.Editor r0;
        float f0, $f1, $f2, $f3, $f4;
        android.widget.TextView$Drawables r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i12, i13, i14, i15, i16, i17;
        android.widget.TextView $r2, $r5, $r6, $r7, $r8, $r10;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        android.widget.Editor$ErrorPopup $r9;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r4.<android.util.DisplayMetrics: float density>;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = $r5.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r6.<android.widget.TextView: int getLayoutDirection()>();

        i11 = 0;

        if i0 == 1 goto label2;

        if r1 == null goto label1;

        i11 = r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

     label1:
        $i3 = neg i11;

        i12 = $i3 / 2;

        $f3 = 25.0F * f0;

        $f4 = $f3 + 0.5F;

        i13 = (int) $f4;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i4 = virtualinvoke $r8.<android.widget.TextView: int getWidth()>();

        $r9 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i5 = virtualinvoke $r9.<android.widget.Editor$ErrorPopup: int getWidth()>();

        $i6 = $i4 - $i5;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i7 = virtualinvoke $r10.<android.widget.TextView: int getPaddingRight()>();

        $i9 = $i6 - $i7;

        $i8 = i12 + i13;

        i14 = $i9 + $i8;

        goto label4;

     label2:
        i15 = 0;

        if r1 == null goto label3;

        i15 = r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

     label3:
        i16 = i15 / 2;

        $f1 = 25.0F * f0;

        $f2 = $f1 + 0.5F;

        i17 = (int) $f2;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r7.<android.widget.TextView: int getPaddingLeft()>();

        $i2 = i16 - i17;

        i14 = $i1 + $i2;

     label4:
        return i14;
    }

    private int getErrorY()
    {
        android.widget.Editor r0;
        int i0, i1, i2, i3, i4, i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.widget.TextView$Drawables r1;
        float f0, $f1, $f2;
        android.widget.TextView $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getCompoundPaddingTop()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getBottom()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i2 = virtualinvoke $r4.<android.widget.TextView: int getTop()>();

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i3 = virtualinvoke $r5.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = $r6.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i4 = virtualinvoke $r7.<android.widget.TextView: int getLayoutDirection()>();

        i6 = 0;

        if i4 == 1 goto label2;

        if r1 == null goto label1;

        i6 = r1.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

     label1:
        goto label3;

     label2:
        i6 = 0;

        if r1 == null goto label3;

        i6 = r1.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

     label3:
        $i7 = i1 - i2;

        $i8 = $i7 - i3;

        $i9 = $i8 - i0;

        $i10 = $i9 - i6;

        i11 = $i10 / 2;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r10.<android.util.DisplayMetrics: float density>;

        $i12 = i11 + i0;

        $i13 = $i12 + i6;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i14 = virtualinvoke $r11.<android.widget.TextView: int getHeight()>();

        $i15 = $i13 - $i14;

        $f1 = 2.0F * f0;

        $f2 = $f1 + 0.5F;

        $i16 = (int) $f2;

        $i17 = $i15 - $i16;

        return $i17;
    }

    private android.view.inputmethod.InputMethodManager getInputMethodManager()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        return $r4;
    }

    private int getLastTapPosition()
    {
        android.widget.Editor r0;
        android.widget.Editor$SelectionModifierCursorController r1;
        int i0, $i1, i2;
        android.widget.TextView $r2, $r4;
        java.lang.CharSequence $r3, $r5;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r1 == null goto label2;

        i0 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        if i0 < 0 goto label2;

        i2 = i0;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if i0 <= $i1 goto label1;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        i2 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

     label1:
        return i2;

     label2:
        return -1;
    }

    private long getLastTouchOffsets()
    {
        android.widget.Editor r0;
        android.widget.Editor$SelectionModifierCursorController r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: android.widget.Editor;

        r1 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        $i0 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        $i1 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>();

        $l2 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i0, $i1);

        return $l2;
    }

    private android.widget.Editor$MagnifierMotionAnimator getMagnifierAnimator()
    {
        android.widget.Editor r0;
        android.widget.Editor$MagnifierMotionAnimator $r1, $r3, $r6;
        boolean $z0;
        android.widget.TextView $r2;
        android.widget.Magnifier $r4;
        android.widget.Magnifier$Builder r5;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$MagnifierMotionAnimator mMagnifierAnimator>;

        if $r1 != null goto label3;

        $z0 = r0.<android.widget.Editor: boolean mNewMagnifierEnabled>;

        if $z0 == 0 goto label1;

        r5 = specialinvoke r0.<android.widget.Editor: android.widget.Magnifier$Builder createBuilderWithInlineMagnifierDefaults()>();

        goto label2;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r5 = staticinvoke <android.widget.Magnifier: android.widget.Magnifier$Builder createBuilderWithOldMagnifierDefaults(android.view.View)>($r2);

     label2:
        $r3 = new android.widget.Editor$MagnifierMotionAnimator;

        $r4 = virtualinvoke r5.<android.widget.Magnifier$Builder: android.widget.Magnifier build()>();

        specialinvoke $r3.<android.widget.Editor$MagnifierMotionAnimator: void <init>(android.widget.Magnifier,android.widget.Editor$1)>($r4, null);

        r0.<android.widget.Editor: android.widget.Editor$MagnifierMotionAnimator mMagnifierAnimator> = $r3;

     label3:
        $r6 = r0.<android.widget.Editor: android.widget.Editor$MagnifierMotionAnimator mMagnifierAnimator>;

        return $r6;
    }

    private int getNextCursorOffset(int, boolean)
    {
        android.widget.Editor r0;
        boolean z0, $z1;
        android.text.Layout r1;
        android.widget.TextView $r2;
        int i0, i1;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label1;

        return i0;

     label1:
        $z1 = virtualinvoke r1.<android.text.Layout: boolean isRtlCharAt(int)>(i0);

        if z0 != $z1 goto label2;

        i1 = virtualinvoke r1.<android.text.Layout: int getOffsetToLeftOf(int)>(i0);

        goto label3;

     label2:
        i1 = virtualinvoke r1.<android.text.Layout: int getOffsetToRightOf(int)>(i0);

     label3:
        return i1;
    }

    private long getParagraphsRange(int, int)
    {
        android.widget.Editor r0;
        android.text.Layout r1;
        java.lang.CharSequence r2;
        android.widget.TextView $r3, $r4;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, i11, i12, i13, i14, $i15, $i16;
        long $l2, $l10;
        char $c5, $c9;

        r0 := @this: android.widget.Editor;

        i11 := @parameter0: int;

        i12 := @parameter1: int;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r3.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label1;

        $l10 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(-1, -1);

        return $l10;

     label1:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r2 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        i13 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i11);

     label2:
        if i13 <= 0 goto label4;

        $i6 = i13 - 1;

        $i7 = virtualinvoke r1.<android.text.Layout: int getLineEnd(int)>($i6);

        $i8 = $i7 - 1;

        $c9 = interfaceinvoke r2.<java.lang.CharSequence: char charAt(int)>($i8);

        if $c9 != 10 goto label3;

        goto label4;

     label3:
        i13 = i13 + -1;

        goto label2;

     label4:
        i14 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i12);

     label5:
        $i15 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        $i16 = $i15 - 1;

        if i14 >= $i16 goto label7;

        $i3 = virtualinvoke r1.<android.text.Layout: int getLineEnd(int)>(i14);

        $i4 = $i3 - 1;

        $c5 = interfaceinvoke r2.<java.lang.CharSequence: char charAt(int)>($i4);

        if $c5 != 10 goto label6;

        goto label7;

     label6:
        i14 = i14 + 1;

        goto label5;

     label7:
        $i0 = virtualinvoke r1.<android.text.Layout: int getLineStart(int)>(i13);

        $i1 = virtualinvoke r1.<android.text.Layout: int getLineEnd(int)>(i14);

        $l2 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i0, $i1);

        return $l2;
    }

    private android.widget.Editor$PositionListener getPositionListener()
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        if $r1 != null goto label1;

        $r3 = new android.widget.Editor$PositionListener;

        specialinvoke $r3.<android.widget.Editor$PositionListener: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener> = $r3;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        return $r2;
    }

    private android.widget.SelectionActionModeHelper getSelectionActionModeHelper()
    {
        android.widget.Editor r0;
        android.widget.SelectionActionModeHelper $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.SelectionActionModeHelper mSelectionActionModeHelper>;

        if $r1 != null goto label1;

        $r3 = new android.widget.SelectionActionModeHelper;

        specialinvoke $r3.<android.widget.SelectionActionModeHelper: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.SelectionActionModeHelper mSelectionActionModeHelper> = $r3;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.SelectionActionModeHelper mSelectionActionModeHelper>;

        return $r2;
    }

    private android.view.View$DragShadowBuilder getTextThumbnailBuilder(int, int)
    {
        android.widget.Editor r0;
        int i0, $i1, $i2, $i3, $i4, i6, i7, i8;
        android.widget.TextView r1, $r2, $r6, $r8;
        android.content.Context $r3;
        android.view.View $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.CharSequence $r7;
        android.content.res.ColorStateList $r9;
        android.view.ViewGroup$LayoutParams $r10;
        android.view.View$DragShadowBuilder $r11;
        long $l5;

        r0 := @this: android.widget.Editor;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r3, 17367323, null);

        r1 = (android.widget.TextView) $r4;

        if r1 == null goto label2;

        i7 = i0;

        $i1 = i0 - i6;

        if $i1 <= 20 goto label1;

        $i4 = i6 + 20;

        $l5 = specialinvoke r0.<android.widget.Editor: long getCharClusterRange(int)>($i4);

        i7 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>($l5);

     label1:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i6, i7);

        virtualinvoke r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r9);

        virtualinvoke r1.<android.widget.TextView: void setTextAppearance(int)>(16);

        virtualinvoke r1.<android.widget.TextView: void setGravity(int)>(17);

        $r10 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r10.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r1.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r10);

        i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r1.<android.widget.TextView: void measure(int,int)>(i8, i8);

        $i2 = virtualinvoke r1.<android.widget.TextView: int getMeasuredWidth()>();

        $i3 = virtualinvoke r1.<android.widget.TextView: int getMeasuredHeight()>();

        virtualinvoke r1.<android.widget.TextView: void layout(int,int,int,int)>(0, 0, $i2, $i3);

        virtualinvoke r1.<android.widget.TextView: void invalidate()>();

        $r11 = new android.view.View$DragShadowBuilder;

        specialinvoke $r11.<android.view.View$DragShadowBuilder: void <init>(android.view.View)>(r1);

        return $r11;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to inflate text drag thumbnail");

        throw $r5;
    }

    private int getWordEnd(int)
    {
        android.widget.Editor r0;
        int i0, i1, i2;
        android.text.method.WordIterator $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i1 = virtualinvoke $r1.<android.text.method.WordIterator: int nextBoundary(int)>(i0);

        $r2 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        $z0 = virtualinvoke $r2.<android.text.method.WordIterator: boolean isAfterPunctuation(int)>(i1);

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i2 = virtualinvoke $r4.<android.text.method.WordIterator: int getPunctuationEnd(int)>(i0);

        goto label2;

     label1:
        $r3 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i2 = virtualinvoke $r3.<android.text.method.WordIterator: int getNextWordEndOnTwoWordBoundary(int)>(i0);

     label2:
        if i2 != -1 goto label3;

        return i0;

     label3:
        return i2;
    }

    private android.text.method.WordIterator getWordIteratorWithText()
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1;
        android.text.method.WordIterator $r2, $r3, $r5, $r6;
        boolean $z0;
        android.widget.TextView $r4, $r7;
        int $i0;
        java.util.Locale $r8;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIteratorWithText>;

        if $r2 != null goto label1;

        $r6 = new android.text.method.WordIterator;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.util.Locale getTextServicesLocale()>();

        specialinvoke $r6.<android.text.method.WordIterator: void <init>(java.util.Locale)>($r8);

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIteratorWithText> = $r6;

        r0.<android.widget.Editor: boolean mUpdateWordIteratorText> = 1;

     label1:
        $z0 = r0.<android.widget.Editor: boolean mUpdateWordIteratorText>;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIteratorWithText>;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke $r5.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        r0.<android.widget.Editor: boolean mUpdateWordIteratorText> = 0;

     label2:
        $r3 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIteratorWithText>;

        return $r3;
    }

    private int getWordStart(int)
    {
        android.widget.Editor r0;
        int i0, i1, i2;
        android.text.method.WordIterator $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i1 = virtualinvoke $r1.<android.text.method.WordIterator: int prevBoundary(int)>(i0);

        $r2 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        $z0 = virtualinvoke $r2.<android.text.method.WordIterator: boolean isOnPunctuation(int)>(i1);

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i2 = virtualinvoke $r4.<android.text.method.WordIterator: int getPunctuationBeginning(int)>(i0);

        goto label2;

     label1:
        $r3 = specialinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIteratorWithText()>();

        i2 = virtualinvoke $r3.<android.text.method.WordIterator: int getPrevWordBeginningOnTwoWordsBoundary(int)>(i0);

     label2:
        if i2 != -1 goto label3;

        return i0;

     label3:
        return i2;
    }

    private void hideCursorControllers()
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionsPopupWindow $r1, $r3, $r4;
        android.widget.TextView $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r2.<android.widget.TextView: boolean isInExtractedMode()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        $z1 = virtualinvoke $r4.<android.widget.Editor$SuggestionsPopupWindow: boolean isShowingUp()>();

        if $z1 != 0 goto label2;

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        virtualinvoke $r3.<android.widget.Editor$SuggestionsPopupWindow: void hide()>();

     label2:
        virtualinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        return;
    }

    private void hideError()
    {
        android.widget.Editor r0;
        android.widget.Editor$ErrorPopup r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor$ErrorPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r2.<android.widget.Editor$ErrorPopup: void dismiss()>();

     label1:
        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

        return;
    }

    private void hideSpanControllers()
    {
        android.widget.Editor r0;
        android.widget.Editor$SpanController r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$SpanController: void hide()>();

     label1:
        return;
    }

    private void invalidateActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ActionMode: void invalidate()>();

     label1:
        return;
    }

    private boolean isCursorInsideEasyCorrectionSpan()
    {
        android.widget.Editor r0;
        android.text.style.SuggestionSpan[] r1;
        android.widget.TextView $r2, $r4, $r6;
        java.lang.CharSequence $r3;
        android.text.Spannable $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r7;
        android.text.style.SuggestionSpan $r8;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Spannable) $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = virtualinvoke $r4.<android.widget.TextView: int getSelectionStart()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r6.<android.widget.TextView: int getSelectionEnd()>();

        $r7 = interfaceinvoke $r5.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "Landroid/text/style/SuggestionSpan;");

        r1 = (android.text.style.SuggestionSpan[]) $r7;

        i5 = 0;

     label1:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label3;

        $r8 = r1[i5];

        $i3 = virtualinvoke $r8.<android.text.style.SuggestionSpan: int getFlags()>();

        $i4 = $i3 & 1;

        if $i4 == 0 goto label2;

        return 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isCursorVisible()
    {
        android.widget.Editor r0;
        boolean $z0, $z1, z2;
        android.widget.TextView $r1;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mCursorVisible>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isOffsetVisible(int)
    {
        android.widget.Editor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        android.widget.TextView $r1, $r2, r4;
        float $f0, $f1, $f2;
        boolean $z0;
        android.text.Layout r3;

        r0 := @this: android.widget.Editor;

        i6 := @parameter0: int;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r3 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r3.<android.text.Layout: int getLineForOffset(int)>(i6);

        i0 = virtualinvoke r3.<android.text.Layout: int getLineBottom(int)>($i1);

        $f0 = virtualinvoke r3.<android.text.Layout: float getPrimaryHorizontal(int)>(i6);

        i7 = (int) $f0;

        r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke r4.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i3 = $i2 + i7;

        $f1 = (float) $i3;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i4 = virtualinvoke $r2.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i5 = $i4 + i0;

        $f2 = (float) $i5;

        $z0 = virtualinvoke r4.<android.widget.TextView: boolean isPositionVisible(float,float)>($f1, $f2);

        return $z0;
    }

    private boolean isPositionOnText(float, float)
    {
        android.widget.Editor r0;
        float f0, $f1, $f2, f3, f4;
        android.text.Layout r1;
        int i0;
        android.widget.TextView $r2, $r3, $r4;
        byte $b1, $b2;

        r0 := @this: android.widget.Editor;

        f3 := @parameter0: float;

        f0 := @parameter1: float;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r3.<android.widget.TextView: int getLineAtCoordinate(float)>(f0);

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        f4 = virtualinvoke $r4.<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>(f3);

        $f1 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i0);

        $b1 = f4 cmpg $f1;

        if $b1 >= 0 goto label2;

        return 0;

     label2:
        $f2 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i0);

        $b2 = f4 cmpl $f2;

        if $b2 <= 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    private static boolean isValidRange(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 0 goto label1;

        if i0 > i1 goto label1;

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static transient void logCursor(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, $r7, $r9;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Editor", r0);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Editor", $r9);

     label2:
        return;
    }

    private boolean needsToSelectAllToSelectWordOrParagraph()
    {
        android.widget.Editor r0;
        int i0, i1, i2;
        android.widget.TextView $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r1.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r2.<android.widget.TextView: int getInputType()>();

        i0 = i1 & 15;

        i2 = i1 & 4080;

        if i0 == 2 goto label3;

        if i0 == 3 goto label3;

        if i0 == 4 goto label3;

        if i2 == 16 goto label3;

        if i2 == 32 goto label3;

        if i2 == 208 goto label3;

        if i2 != 176 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private void replaceWithSuggestion(android.widget.Editor$SuggestionInfo)
    {
        android.widget.Editor r0;
        android.text.style.SuggestionSpan r1, $r17, r20;
        android.text.Editable r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i25, i26;
        java.lang.String r3, r21;
        android.text.style.SuggestionSpan[] r4;
        int[] r5, r6, r7;
        android.widget.Editor$SuggestionSpanInfo $r8;
        android.widget.TextView $r9, $r14, $r16, $r18;
        java.lang.CharSequence $r10, $r13;
        java.lang.Object[] $r11;
        android.text.SpannableStringBuilder $r12;
        java.lang.String[] $r15;
        android.widget.Editor$SuggestionInfo r19;

        r0 := @this: android.widget.Editor;

        r19 := @parameter0: android.widget.Editor$SuggestionInfo;

        $r8 = r19.<android.widget.Editor$SuggestionInfo: android.widget.Editor$SuggestionSpanInfo mSuggestionSpanInfo>;

        r1 = specialinvoke r0.<android.widget.Editor: android.text.style.SuggestionSpan findEquivalentSuggestionSpan(android.widget.Editor$SuggestionSpanInfo)>($r8);

        if r1 != null goto label1;

        return;

     label1:
        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        r2 = (android.text.Editable) $r10;

        i0 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r1);

        i1 = interfaceinvoke r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r1);

        if i0 < 0 goto label9;

        if i1 > i0 goto label2;

        goto label9;

     label2:
        r3 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r2, i0, i1);

        $r11 = interfaceinvoke r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "Landroid/text/style/SuggestionSpan;");

        r4 = (android.text.style.SuggestionSpan[]) $r11;

        i18 = lengthof r4;

        r5 = newarray (int)[i18];

        r6 = newarray (int)[i18];

        r7 = newarray (int)[i18];

        i19 = 0;

     label3:
        if i19 >= i18 goto label5;

        r20 = r4[i19];

        $i12 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>(r20);

        r5[i19] = $i12;

        $i13 = interfaceinvoke r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r20);

        r6[i19] = $i13;

        $i14 = interfaceinvoke r2.<android.text.Editable: int getSpanFlags(java.lang.Object)>(r20);

        r7[i19] = $i14;

        i20 = virtualinvoke r20.<android.text.style.SuggestionSpan: int getFlags()>();

        $i15 = i20 & 2;

        if $i15 == 0 goto label4;

        $i16 = i20 & -3;

        $i17 = $i16 & -2;

        virtualinvoke r20.<android.text.style.SuggestionSpan: void setFlags(int)>($i17);

     label4:
        i19 = i19 + 1;

        goto label3;

     label5:
        i21 = r19.<android.widget.Editor$SuggestionInfo: int mSuggestionStart>;

        i22 = r19.<android.widget.Editor$SuggestionInfo: int mSuggestionEnd>;

        $r12 = r19.<android.widget.Editor$SuggestionInfo: android.text.SpannableStringBuilder mText>;

        $r13 = virtualinvoke $r12.<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>(i21, i22);

        r21 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r14.<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>(i0, i1, r21);

        $r15 = virtualinvoke r1.<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>();

        $i3 = r19.<android.widget.Editor$SuggestionInfo: int mSuggestionIndex>;

        $r15[$i3] = r3;

        $i4 = virtualinvoke r21.<java.lang.String: int length()>();

        $i5 = i1 - i0;

        i2 = $i4 - $i5;

        i25 = 0;

     label6:
        if i25 >= i18 goto label8;

        $i6 = r5[i25];

        if $i6 > i0 goto label7;

        $i7 = r6[i25];

        if $i7 < i1 goto label7;

        $r18 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r17 = r4[i25];

        $i11 = r5[i25];

        $i8 = r6[i25];

        $i10 = $i8 + i2;

        $i9 = r7[i25];

        virtualinvoke $r18.<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)>($r17, $i11, $i10, $i9);

        goto label7;

     label7:
        i25 = i25 + 1;

        goto label6;

     label8:
        i26 = i1 + i2;

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r16.<android.widget.TextView: void setCursorPosition_internal(int,int)>(i26, i26);

        return;

     label9:
        return;
    }

    private void resumeBlink()
    {
        android.widget.Editor r0;
        android.widget.Editor$Blink r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$Blink: void uncancel()>();

        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

     label1:
        return;
    }

    private boolean selectCurrentParagraph()
    {
        android.widget.Editor r0;
        int i0, i1, $i2, $i3;
        android.widget.TextView $r1, $r2, $r5;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r3;
        android.text.Spannable $r4;
        long l4, l5;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r1.<android.widget.TextView: boolean canSelectText()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<android.widget.Editor: boolean needsToSelectAllToSelectWordOrParagraph()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r5.<android.widget.TextView: boolean selectAllText()>();

        return $z2;

     label2:
        l4 = specialinvoke r0.<android.widget.Editor: long getLastTouchOffsets()>();

        $i2 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l4);

        $i3 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l4);

        l5 = specialinvoke r0.<android.widget.Editor: long getParagraphsRange(int,int)>($i2, $i3);

        i0 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l5);

        i1 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l5);

        if i0 >= i1 goto label3;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r4 = (android.text.Spannable) $r3;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, i0, i1);

        return 1;

     label3:
        return 0;
    }

    private boolean selectCurrentWordAndStartDrag()
    {
        android.widget.Editor r0;
        java.lang.Runnable r1;
        boolean $z0, $z1, $z2, $z3;
        android.widget.TextView $r2, $r4;
        android.widget.Editor$SelectionModifierCursorController $r3;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable>;

        if r1 == null goto label1;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r4.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r1);

     label1:
        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r0.<android.widget.Editor: boolean checkField()>();

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r2.<android.widget.TextView: boolean hasSelection()>();

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r0.<android.widget.Editor: boolean selectCurrentWord()>();

        if $z3 != 0 goto label4;

        return 0;

     label4:
        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        $r3 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r3.<android.widget.Editor$SelectionModifierCursorController: void enterDrag(int)>(2);

        return 1;
    }

    private void sendUpdateSelection()
    {
        android.widget.Editor r0;
        int i0, i1, i2, $i3, i4, i5, i6;
        android.text.Spannable r1;
        android.widget.TextView $r2, $r3, $r4, $r6, $r7;
        java.lang.CharSequence $r5, $r8;
        boolean $z0;
        android.widget.Editor$InputMethodState r9;
        android.view.inputmethod.InputMethodManager r10;

        r0 := @this: android.widget.Editor;

        r9 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r9 == null goto label3;

        $i3 = r9.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i3 > 0 goto label3;

        r10 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r10 == null goto label3;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionEnd()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = $r5 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        r1 = (android.text.Spannable) $r8;

        i4 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanStart(android.text.Spannable)>(r1);

        i2 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r1);

        i5 = i4;

        i6 = i2;

        goto label2;

     label1:
        i5 = -1;

        i6 = -1;

     label2:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r10.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>($r6, i0, i1, i5, i6);

     label3:
        return;
    }

    private void setErrorIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;
        android.widget.TextView r2, $r3, $r4, $r5, $r6, $r7;
        android.widget.TextView$Drawables $r8, r10, r11;
        android.content.Context $r9;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r10 = $r3.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r11 = r10;

        if r10 != null goto label1;

        r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = new android.widget.TextView$Drawables;

        $r9 = virtualinvoke r2.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r8.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r9);

        r11 = $r8;

        r2.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r8;

     label1:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r11.<android.widget.TextView$Drawables: void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)>(r1, $r4);

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r5.<android.widget.TextView: void resetResolvedDrawables()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r6.<android.widget.TextView: void invalidate()>();

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r7.<android.widget.TextView: void requestLayout()>();

        return;
    }

    private boolean shouldBlink()
    {
        android.widget.Editor r0;
        boolean z0, $z1, z2;
        int i0, i1;
        android.widget.TextView $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        z0 = specialinvoke r0.<android.widget.Editor: boolean isCursorVisible()>();

        z2 = 0;

        if z0 == 0 goto label5;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean isFocused()>();

        if $z1 != 0 goto label1;

        goto label5;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        if i0 >= 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionEnd()>();

        if i1 >= 0 goto label3;

        return 0;

     label3:
        if i0 != i1 goto label4;

        z2 = 1;

     label4:
        return z2;

     label5:
        return 0;
    }

    private boolean shouldFilterOutTouchEvent(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(8194);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.widget.Editor: int mLastButtonState>;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        $i3 = $i1 ^ $i2;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 == 0 goto label4;

        if i0 != 1 goto label5;

     label4:
        if z2 != 0 goto label5;

        return 1;

     label5:
        if i0 != 2 goto label6;

        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isButtonPressed(int)>(1);

        if $z1 != 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private boolean shouldOfferToShowSuggestions()
    {
        android.widget.Editor r0;
        android.text.Spannable r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        android.widget.TextView $r2, $r3, $r4, $r6, $r8;
        boolean $z0, z1, z2, z3;
        java.lang.Object[] $r5;
        java.lang.CharSequence $r7, $r9, r16;
        android.text.style.SuggestionSpan $r10, $r11, $r12, $r14;
        java.lang.String[] $r13, $r15;
        android.text.style.SuggestionSpan[] r17;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r16 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r16 instanceof android.text.Spannable;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r1 = (android.text.Spannable) r16;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r3.<android.widget.TextView: int getSelectionStart()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i8 = virtualinvoke $r4.<android.widget.TextView: int getSelectionEnd()>();

        $r5 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i8, class "Landroid/text/style/SuggestionSpan;");

        r17 = (android.text.style.SuggestionSpan[]) $r5;

        $i3 = lengthof r17;

        if $i3 != 0 goto label02;

        return 0;

     label02:
        if i0 != i8 goto label06;

        i9 = 0;

     label03:
        $i6 = lengthof r17;

        if i9 >= $i6 goto label05;

        $r14 = r17[i9];

        $r15 = virtualinvoke $r14.<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>();

        $i7 = lengthof $r15;

        if $i7 <= 0 goto label04;

        return 1;

     label04:
        i9 = i9 + 1;

        goto label03;

     label05:
        return 0;

     label06:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        i10 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        i11 = 0;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();

        i12 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        i13 = 0;

        z1 = 0;

        i14 = 0;

     label07:
        $i4 = lengthof r17;

        if i14 >= $i4 goto label13;

        $r10 = r17[i14];

        i1 = interfaceinvoke r1.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r10);

        $r11 = r17[i14];

        i2 = interfaceinvoke r1.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r11);

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i10, i1);

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, i2);

        i15 = i12;

        i16 = i13;

        z2 = z1;

        if i0 < i1 goto label12;

        if i0 <= i2 goto label08;

        i15 = i12;

        i16 = i13;

        z2 = z1;

        goto label12;

     label08:
        if z1 != 0 goto label10;

        $r12 = r17[i14];

        $r13 = virtualinvoke $r12.<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>();

        $i5 = lengthof $r13;

        if $i5 <= 0 goto label09;

        goto label10;

     label09:
        z3 = 0;

        goto label11;

     label10:
        z3 = 1;

     label11:
        i15 = staticinvoke <java.lang.Math: int min(int,int)>(i12, i1);

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(i13, i2);

        z2 = z3;

     label12:
        i14 = i14 + 1;

        i12 = i15;

        i13 = i16;

        z1 = z2;

        goto label07;

     label13:
        if z1 != 0 goto label14;

        return 0;

     label14:
        if i12 < i13 goto label15;

        return 0;

     label15:
        if i10 < i12 goto label17;

        if i11 <= i13 goto label16;

        goto label17;

     label16:
        return 1;

     label17:
        return 0;
    }

    private void showError()
    {
        android.widget.Editor r0;
        float f0, $f1, $f2, $f3, $f4;
        android.widget.TextView $r1, $r10, $r11, $r15, r20, r22;
        android.os.IBinder $r2;
        android.widget.Editor$ErrorPopup $r3, $r4, $r7, $r9, $r18, $r19, r23;
        android.view.View $r5, $r14;
        java.lang.CharSequence $r6, $r8;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.content.Context $r12;
        android.view.LayoutInflater $r13;
        android.content.res.Resources $r16;
        android.util.DisplayMetrics $r17;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        if $r2 != null goto label1;

        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 1;

        return;

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if $r3 != null goto label2;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r12 = virtualinvoke $r11.<android.widget.TextView: android.content.Context getContext()>();

        $r13 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r12);

        $r14 = virtualinvoke $r13.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367334, null);

        r20 = (android.widget.TextView) $r14;

        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r16 = virtualinvoke $r15.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r17.<android.util.DisplayMetrics: float density>;

        $r18 = new android.widget.Editor$ErrorPopup;

        $f1 = 200.0F * f0;

        $f2 = $f1 + 0.5F;

        $i3 = (int) $f2;

        $f3 = 50.0F * f0;

        $f4 = $f3 + 0.5F;

        $i2 = (int) $f4;

        specialinvoke $r18.<android.widget.Editor$ErrorPopup: void <init>(android.widget.TextView,int,int)>(r20, $i3, $i2);

        r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup> = $r18;

        virtualinvoke $r18.<android.widget.Editor$ErrorPopup: void setFocusable(boolean)>(0);

        $r19 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r19.<android.widget.Editor$ErrorPopup: void setInputMethodMode(int)>(1);

     label2:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r5 = virtualinvoke $r4.<android.widget.Editor$ErrorPopup: android.view.View getContentView()>();

        r22 = (android.widget.TextView) $r5;

        $r7 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r6 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        specialinvoke r0.<android.widget.Editor: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r7, $r6, r22);

        $r8 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        virtualinvoke r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r9 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = specialinvoke r0.<android.widget.Editor: int getErrorX()>();

        $i1 = specialinvoke r0.<android.widget.Editor: int getErrorY()>();

        virtualinvoke $r9.<android.widget.Editor$ErrorPopup: void showAsDropDown(android.view.View,int,int,int)>($r10, $i0, $i1, 51);

        r23 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $z0 = virtualinvoke r23.<android.widget.Editor$ErrorPopup: boolean isAboveAnchor()>();

        virtualinvoke r23.<android.widget.Editor$ErrorPopup: void fixDirection(boolean)>($z0);

        return;
    }

    private void showFloatingToolbar()
    {
        android.widget.Editor r0;
        int i0;
        android.view.ActionMode $r1;
        long $l1;
        java.lang.Runnable $r2;
        android.widget.TextView $r3;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r1 == null goto label1;

        i0 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = r0.<android.widget.Editor: java.lang.Runnable mShowFloatingToolbar>;

        $l1 = (long) i0;

        virtualinvoke $r3.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r2, $l1);

        virtualinvoke r0.<android.widget.Editor: void invalidateActionModeAsync()>();

     label1:
        return;
    }

    private void startDragAndDrop()
    {
        android.widget.Editor r0;
        int i0, i1;
        android.content.ClipData r1;
        android.widget.SelectionActionModeHelper $r3;
        android.widget.TextView $r4, $r5, $r6, $r7, $r10, $r11;
        boolean $z0, $z2;
        java.lang.CharSequence $r8;
        android.widget.Editor$DragLocalState $r9;
        android.view.View$DragShadowBuilder $r12;
        android.widget.Editor$SelectionModifierCursorController $r13;

        r0 := @this: android.widget.Editor;

        $r3 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        virtualinvoke $r3.<android.widget.SelectionActionModeHelper: void onSelectionDrag()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r4.<android.widget.TextView: boolean isInExtractedMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r5.<android.widget.TextView: int getSelectionStart()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r6.<android.widget.TextView: int getSelectionEnd()>();

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i0, i1);

        r1 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r8);

        $r9 = new android.widget.Editor$DragLocalState;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        specialinvoke $r9.<android.widget.Editor$DragLocalState: void <init>(android.widget.TextView,int,int)>($r10, i0, i1);

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r12 = specialinvoke r0.<android.widget.Editor: android.view.View$DragShadowBuilder getTextThumbnailBuilder(int,int)>(i0, i1);

        virtualinvoke $r11.<android.widget.TextView: boolean startDragAndDrop(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>(r1, $r12, $r9, 256);

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        $z2 = virtualinvoke r0.<android.widget.Editor: boolean hasSelectionController()>();

        if $z2 == 0 goto label2;

        $r13 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r13.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

     label2:
        return;
    }

    private void stopTextActionModeWithPreservingSelection()
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r1 == null goto label1;

        r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh> = 1;

     label1:
        r0.<android.widget.Editor: boolean mPreserveSelection> = 1;

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        r0.<android.widget.Editor: boolean mPreserveSelection> = 0;

        return;
    }

    private void suspendBlink()
    {
        android.widget.Editor r0;
        android.widget.Editor$Blink r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$Blink: void cancel()>();

     label1:
        return;
    }

    private void toggleInsertionActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.Editor: void startInsertionActionMode()>();

     label2:
        return;
    }

    private boolean touchPositionIsInSelection()
    {
        android.widget.Editor r0;
        android.widget.Editor$SelectionModifierCursorController r1;
        android.widget.TextView $r2, $r3, $r4;
        java.lang.CharSequence $r5;
        android.text.Spannable $r6;
        int i0, i1, i2, i3, i4, i5;
        boolean z1;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionEnd()>();

        if i0 != i1 goto label1;

        return 0;

     label1:
        i2 = i0;

        i3 = i1;

        if i0 <= i1 goto label2;

        i2 = i1;

        i3 = i0;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = (android.text.Spannable) $r5;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r6, i1, i0);

     label2:
        r1 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        i4 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        i5 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>();

        z1 = 0;

        if i4 < i2 goto label3;

        z1 = 0;

        if i5 >= i3 goto label3;

        z1 = 1;

     label3:
        return z1;
    }

    private void updateCursorPosition(int, int, float)
    {
        android.widget.Editor r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        float f0;
        android.graphics.drawable.Drawable $r1, $r2, $r5;
        android.graphics.Rect $r3, $r4;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        virtualinvoke r0.<android.widget.Editor: void loadCursorDrawable()>();

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        i2 = specialinvoke r0.<android.widget.Editor: int clampHorizontalPosition(android.graphics.drawable.Drawable,float)>($r1, f0);

        $r2 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        i3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r5 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        $r3 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i4 = $r3.<android.graphics.Rect: int top>;

        $i8 = i0 - $i4;

        $i7 = i2 + i3;

        $r4 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i5 = $r4.<android.graphics.Rect: int bottom>;

        $i6 = $i5 + i1;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i2, $i8, $i7, $i6);

        return;
    }

    private void updateFloatingToolbarVisibility(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;
        int i0;
        android.view.ActionMode $r2;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r2 == null goto label3;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        if i0 == 3 goto label2;

        goto label3;

     label1:
        virtualinvoke r0.<android.widget.Editor: void hideFloatingToolbar(int)>(-1);

        goto label3;

     label2:
        specialinvoke r0.<android.widget.Editor: void showFloatingToolbar()>();

     label3:
        return;
    }

    private void updateSpellCheckSpans(int, int, boolean)
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z3;
        android.widget.SpellChecker r1, $r7, $r8;
        android.widget.TextView $r2, $r3, $r4, $r5, $r6, $r9;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void removeAdjacentSuggestionSpans(int)>(i0);

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void removeAdjacentSuggestionSpans(int)>(i1);

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r4.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r5.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z2 == 0 goto label2;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r6.<android.widget.TextView: boolean isInExtractedMode()>();

        if $z3 != 0 goto label2;

        $r7 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r7 != null goto label1;

        if z0 == 0 goto label1;

        $r8 = new android.widget.SpellChecker;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        specialinvoke $r8.<android.widget.SpellChecker: void <init>(android.widget.TextView)>($r9);

        r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker> = $r8;

     label1:
        r1 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.widget.SpellChecker: void spellCheck(int,int)>(i0, i1);

     label2:
        return;
    }

    public void addSpanWatchers(android.text.Spannable)
    {
        android.widget.Editor r0;
        android.text.Spannable r1;
        int i0;
        android.text.method.KeyListener r2;
        android.widget.Editor$SpanController $r3, $r4, $r5;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.text.Spannable;

        i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        r2 = r0.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if r2 == null goto label1;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r2, 0, i0, 18);

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        if $r3 != null goto label2;

        $r5 = new android.widget.Editor$SpanController;

        specialinvoke $r5.<android.widget.Editor$SpanController: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController> = $r5;

     label2:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r4, 0, i0, 18);

        return;
    }

    void adjustInputType(boolean, boolean, boolean, boolean)
    {
        android.widget.Editor r0;
        boolean z0, z1, z2, z3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        i0 = r0.<android.widget.Editor: int mInputType>;

        $i1 = i0 & 15;

        if $i1 != 1 goto label3;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $i5 = r0.<android.widget.Editor: int mInputType>;

        $i6 = $i5 & -4081;

        $i7 = $i6 | 128;

        r0.<android.widget.Editor: int mInputType> = $i7;

     label2:
        if z2 == 0 goto label4;

        $i8 = r0.<android.widget.Editor: int mInputType>;

        $i9 = $i8 & -4081;

        $i10 = $i9 | 224;

        r0.<android.widget.Editor: int mInputType> = $i10;

        goto label4;

     label3:
        $i2 = i0 & 15;

        if $i2 != 2 goto label4;

        if z3 == 0 goto label4;

        $i3 = i0 & -4081;

        $i4 = $i3 | 16;

        r0.<android.widget.Editor: int mInputType> = $i4;

     label4:
        return;
    }

    public void beginBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int i0, $i1, $i2;
        boolean $z0;
        android.widget.Editor$UndoInputFilter $r2;
        android.widget.TextView $r3, $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: boolean mInBatchEditControllers> = 1;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label3;

        $i1 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        i0 = $i1 + 1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = i0;

        if i0 != 1 goto label3;

        r1.<android.widget.Editor$InputMethodState: boolean mCursorChanged> = 0;

        r1.<android.widget.Editor$InputMethodState: int mChangedDelta> = 0;

        $z0 = r1.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z0 == 0 goto label1;

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = 0;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i2 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i2;

        goto label2;

     label1:
        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = -1;

        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r2.<android.widget.Editor$UndoInputFilter: void beginBatchEdit()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void onBeginBatchEdit()>();

     label3:
        return;
    }

    boolean canRedo()
    {
        android.widget.Editor r0;
        android.content.UndoOwner r1;
        boolean $z0, z1;
        android.content.UndoOwner[] $r2;
        android.content.UndoManager $r3;
        int $i0;

        r0 := @this: android.widget.Editor;

        z1 = 1;

        r1 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        $z0 = r0.<android.widget.Editor: boolean mAllowUndo>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r2 = newarray (android.content.UndoOwner)[1];

        $r2[0] = r1;

        $i0 = virtualinvoke $r3.<android.content.UndoManager: int countRedos(android.content.UndoOwner[])>($r2);

        if $i0 <= 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean canUndo()
    {
        android.widget.Editor r0;
        android.content.UndoOwner r1;
        boolean $z0, z1;
        android.content.UndoOwner[] $r2;
        android.content.UndoManager $r3;
        int $i0;

        r0 := @this: android.widget.Editor;

        z1 = 1;

        r1 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        $z0 = r0.<android.widget.Editor: boolean mAllowUndo>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r2 = newarray (android.content.UndoOwner)[1];

        $r2[0] = r1;

        $i0 = virtualinvoke $r3.<android.content.UndoManager: int countUndos(android.content.UndoOwner[])>($r2);

        if $i0 <= 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean checkField()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r1.<android.widget.TextView: boolean canSelectText()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r2.<android.widget.TextView: boolean requestFocus()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextView", "TextView does not support text selection. Selection cancelled.");

        return 0;
    }

    void createInputContentTypeIfNeeded()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputContentType $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor$InputContentType;

        specialinvoke $r2.<android.widget.Editor$InputContentType: void <init>()>();

        r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType> = $r2;

     label1:
        return;
    }

    void createInputMethodStateIfNeeded()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor$InputMethodState;

        specialinvoke $r2.<android.widget.Editor$InputMethodState: void <init>()>();

        r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState> = $r2;

     label1:
        return;
    }

    public void endBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int i0, $i1;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: boolean mInBatchEditControllers> = 0;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label1;

        $i1 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        i0 = $i1 - 1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = i0;

        if i0 != 0 goto label1;

        virtualinvoke r0.<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>(r1);

     label1:
        return;
    }

    void ensureEndedBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int $i0;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label1;

        $i0 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i0 == 0 goto label1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = 0;

        virtualinvoke r0.<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>(r1);

     label1:
        return;
    }

    boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.Editor r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        r2 := @parameter1: android.view.inputmethod.ExtractedText;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>(r1, -1, -1, -1, r2);

        return $z0;
    }

    void finishBatchEdit(android.widget.Editor$InputMethodState)
    {
        android.widget.Editor r0;
        android.widget.TextView $r1, $r3, $r4, $r5;
        android.widget.Editor$UndoInputFilter $r2;
        boolean $z0, $z2, $z3, $z4, $z5, $z6;
        android.widget.Editor$InputMethodState r6;
        android.view.ActionMode $r7;
        android.widget.Editor$CursorController r8;

        r0 := @this: android.widget.Editor;

        r6 := @parameter0: android.widget.Editor$InputMethodState;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r1.<android.widget.TextView: void onEndBatchEdit()>();

        $r2 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r2.<android.widget.Editor$UndoInputFilter: void endBatchEdit()>();

        $z0 = r6.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z0 != 0 goto label2;

        $z5 = r6.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z5 == 0 goto label1;

        goto label2;

     label1:
        $z6 = r6.<android.widget.Editor$InputMethodState: boolean mCursorChanged>;

        if $z6 == 0 goto label3;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r5.<android.widget.TextView: void invalidateCursor()>();

        goto label3;

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void updateAfterEdit()>();

        virtualinvoke r0.<android.widget.Editor: boolean reportExtractedText()>();

     label3:
        specialinvoke r0.<android.widget.Editor: void sendUpdateSelection()>();

        $r7 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r7 == null goto label6;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r4.<android.widget.TextView: boolean hasSelection()>();

        if $z2 == 0 goto label4;

        r8 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        goto label5;

     label4:
        r8 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

     label5:
        if r8 == null goto label6;

        $z3 = interfaceinvoke r8.<android.widget.Editor$CursorController: boolean isActive()>();

        if $z3 != 0 goto label6;

        $z4 = interfaceinvoke r8.<android.widget.Editor$CursorController: boolean isCursorBeingModified()>();

        if $z4 != 0 goto label6;

        interfaceinvoke r8.<android.widget.Editor$CursorController: void show()>();

     label6:
        return;
    }

    void forgetUndoRedo()
    {
        android.widget.Editor r0;
        android.content.UndoOwner[] r1;
        android.content.UndoOwner $r2;
        android.content.UndoManager $r3, $r4;

        r0 := @this: android.widget.Editor;

        r1 = newarray (android.content.UndoOwner)[1];

        $r2 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        r1[0] = $r2;

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        virtualinvoke $r3.<android.content.UndoManager: int forgetUndos(android.content.UndoOwner[],int)>(r1, -1);

        $r4 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        virtualinvoke $r4.<android.content.UndoManager: int forgetRedos(android.content.UndoOwner[],int)>(r1, -1);

        return;
    }

    public int getCurrentLineAdjustedForSlop(android.text.Layout, int, float)
    {
        android.widget.Editor r0;
        android.text.Layout r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, i25, i26;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.widget.TextView $r2, $r3;
        byte $b21, $b24;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.text.Layout;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r2.<android.widget.TextView: int getLineAtCoordinate(float)>(f0);

        if r1 == null goto label5;

        $i3 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        if i0 > $i3 goto label5;

        $i4 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        if $i4 <= 0 goto label5;

        if i0 >= 0 goto label1;

        goto label5;

     label1:
        $i5 = i1 - i0;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        if $i6 < 2 goto label2;

        return i1;

     label2:
        $i7 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i0);

        $i8 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i0);

        i25 = $i7 - $i8;

        $i9 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i1);

        $i10 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        $i11 = $i9 - $i10;

        $f2 = (float) $i11;

        $f3 = $f2 * 0.5F;

        i2 = (int) $f3;

        $i14 = r0.<android.widget.Editor: int mLineChangeSlopMin>;

        $i13 = r0.<android.widget.Editor: int mLineChangeSlopMax>;

        $i12 = i25 + i2;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

        $i17 = $i16 - i25;

        i26 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i17);

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i18 = virtualinvoke $r3.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        f1 = (float) $i18;

        if i1 <= i0 goto label3;

        $i22 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i0);

        $i23 = $i22 + i26;

        $f6 = (float) $i23;

        $f7 = $f6 + f1;

        $b24 = f0 cmpl $f7;

        if $b24 < 0 goto label3;

        return i1;

     label3:
        if i1 >= i0 goto label4;

        $i19 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i0);

        $i20 = $i19 - i26;

        $f4 = (float) $i20;

        $f5 = $f4 + f1;

        $b21 = f0 cmpg $f5;

        if $b21 > 0 goto label4;

        return i1;

     label4:
        return i0;

     label5:
        return i1;
    }

    public android.graphics.drawable.Drawable getCursorDrawable()
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        return $r1;
    }

    public boolean getFlagCursorDragFromAnywhereEnabled()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mFlagCursorDragFromAnywhereEnabled>;

        return $z0;
    }

    public boolean getFlagInsertionHandleGesturesEnabled()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mFlagInsertionHandleGesturesEnabled>;

        return $z0;
    }

    public android.widget.Editor$InsertionPointCursorController getInsertionController()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$InsertionPointCursorController $r1, $r2, $r3, $r6;
        android.widget.TextView $r4;
        android.view.ViewTreeObserver $r5;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r1 != null goto label2;

        $r3 = new android.widget.Editor$InsertionPointCursorController;

        specialinvoke $r3.<android.widget.Editor$InsertionPointCursorController: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController> = $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r6);

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        return $r2;
    }

    float getLastUpPositionX()
    {
        android.widget.Editor r0;
        android.widget.EditorTouchState $r1;
        float $f0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f0 = virtualinvoke $r1.<android.widget.EditorTouchState: float getLastUpX()>();

        return $f0;
    }

    float getLastUpPositionY()
    {
        android.widget.Editor r0;
        android.widget.EditorTouchState $r1;
        float $f0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f0 = virtualinvoke $r1.<android.widget.EditorTouchState: float getLastUpY()>();

        return $f0;
    }

    public android.widget.Editor$SelectionModifierCursorController getSelectionController()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$SelectionModifierCursorController $r1, $r2, $r3, $r6;
        android.widget.TextView $r4;
        android.view.ViewTreeObserver $r5;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r1 != null goto label2;

        $r3 = new android.widget.Editor$SelectionModifierCursorController;

        specialinvoke $r3.<android.widget.Editor$SelectionModifierCursorController: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController> = $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r6);

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        return $r2;
    }

    android.view.ActionMode getTextActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        return $r1;
    }

    android.widget.TextView getTextView()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        return $r1;
    }

    public android.text.method.WordIterator getWordIterator()
    {
        android.widget.Editor r0;
        android.text.method.WordIterator $r1, $r2, $r3;
        android.widget.TextView $r4;
        java.util.Locale $r5;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator>;

        if $r1 != null goto label1;

        $r3 = new android.text.method.WordIterator;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.util.Locale getTextServicesLocale()>();

        specialinvoke $r3.<android.text.method.WordIterator: void <init>(java.util.Locale)>($r5);

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = $r3;

     label1:
        $r2 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator>;

        return $r2;
    }

    boolean hasInsertionController()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        return $z0;
    }

    boolean hasSelectionController()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        return $z0;
    }

    void hideCursorAndSpanControllers()
    {
        android.widget.Editor r0;

        r0 := @this: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void hideCursorControllers()>();

        specialinvoke r0.<android.widget.Editor: void hideSpanControllers()>();

        return;
    }

    void hideFloatingToolbar(int)
    {
        android.widget.Editor r0;
        int i0;
        android.view.ActionMode $r1, $r4;
        java.lang.Runnable $r2;
        android.widget.TextView $r3;
        long $l1;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r1 == null goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = r0.<android.widget.Editor: java.lang.Runnable mShowFloatingToolbar>;

        virtualinvoke $r3.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r4 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        $l1 = (long) i0;

        virtualinvoke $r4.<android.view.ActionMode: void hide(long)>($l1);

     label1:
        return;
    }

    void hideInsertionPointCursorController()
    {
        android.widget.Editor r0;
        android.widget.Editor$InsertionPointCursorController r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$InsertionPointCursorController: void hide()>();

     label1:
        return;
    }

    void invalidateActionModeAsync()
    {
        android.widget.Editor r0;
        android.widget.SelectionActionModeHelper $r1;

        r0 := @this: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        virtualinvoke $r1.<android.widget.SelectionActionModeHelper: void invalidateActionModeAsync()>();

        return;
    }

    void invalidateHandlesAndActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1;
        android.widget.Editor$SelectionModifierCursorController r2;
        android.widget.Editor$InsertionPointCursorController r3;

        r0 := @this: android.widget.Editor;

        r2 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.Editor$SelectionModifierCursorController: void invalidateHandles()>();

     label1:
        r3 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.widget.Editor$InsertionPointCursorController: void invalidateHandle()>();

     label2:
        $r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r1 == null goto label3;

        specialinvoke r0.<android.widget.Editor: void invalidateActionMode()>();

     label3:
        return;
    }

    void invalidateTextDisplayList()
    {
        android.widget.Editor r0;
        android.widget.Editor$TextRenderNode[] r1, $r2;
        int $i0, i1;
        android.widget.Editor$TextRenderNode $r3, $r4;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        if $r2 == null goto label3;

        i1 = 0;

     label1:
        r1 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r3 = r1[i1];

        if $r3 == null goto label2;

        $r4 = r1[i1];

        $r4.<android.widget.Editor$TextRenderNode: boolean isDirty> = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void invalidateTextDisplayList(android.text.Layout, int, int)
    {
        android.widget.Editor r0;
        int i0, i1, i2, $i3, $i4, i5, i6, i7, i8, i9;
        int[] r1, r2;
        android.widget.Editor$TextRenderNode[] $r3, $r4;
        boolean $z0;
        android.widget.Editor$TextRenderNode $r5;
        android.text.Layout r6;
        android.text.DynamicLayout r7;

        r0 := @this: android.widget.Editor;

        r6 := @parameter0: android.text.Layout;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        if $r3 == null goto label6;

        $z0 = r6 instanceof android.text.DynamicLayout;

        if $z0 == 0 goto label6;

        i0 = virtualinvoke r6.<android.text.Layout: int getLineForOffset(int)>(i5);

        i1 = virtualinvoke r6.<android.text.Layout: int getLineForOffset(int)>(i6);

        r7 = (android.text.DynamicLayout) r6;

        r1 = virtualinvoke r7.<android.text.DynamicLayout: int[] getBlockEndLines()>();

        r2 = virtualinvoke r7.<android.text.DynamicLayout: int[] getBlockIndices()>();

        i2 = virtualinvoke r7.<android.text.DynamicLayout: int getNumberOfBlocks()>();

        i7 = 0;

     label1:
        i8 = i7;

        if i7 >= i2 goto label3;

        $i4 = r1[i7];

        if $i4 < i0 goto label2;

        i8 = i7;

        goto label3;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        if i8 >= i2 goto label6;

        i9 = r2[i8];

        if i9 == -1 goto label4;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$TextRenderNode[] mTextRenderNodes>;

        $r5 = $r4[i9];

        $r5.<android.widget.Editor$TextRenderNode: boolean isDirty> = 1;

     label4:
        $i3 = r1[i8];

        if $i3 < i1 goto label5;

        goto label6;

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        return;
    }

    public void lambda$startActionModeInternal$0$Editor()
    {
        android.widget.Editor r0;

        r0 := @this: android.widget.Editor;

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        return;
    }

    void loadCursorDrawable()
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.widget.TextView $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if $r1 != null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.graphics.drawable.Drawable getTextCursorDrawable()>();

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor> = $r3;

     label1:
        return;
    }

    void loadHandleDrawables(boolean)
    {
        android.widget.Editor r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1, $r3, $r5, $r7, $r9, $r11;
        android.widget.TextView $r2, $r8, $r10;
        android.widget.Editor$SelectionModifierCursorController $r4;
        android.widget.Editor$InsertionPointCursorController $r6;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleCenter>;

        if $r1 == null goto label1;

        if z0 == 0 goto label2;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandle()>();

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleCenter> = $r3;

        $z1 = virtualinvoke r0.<android.widget.Editor: boolean hasInsertionController()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        staticinvoke <android.widget.Editor$InsertionPointCursorController: void access$8100(android.widget.Editor$InsertionPointCursorController)>($r6);

     label2:
        $r7 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        if $r7 == null goto label3;

        $r5 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        if $r5 == null goto label3;

        if z0 == 0 goto label4;

     label3:
        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleLeft()>();

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft> = $r9;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: android.graphics.drawable.Drawable getTextSelectHandleRight()>();

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight> = $r11;

        $z2 = virtualinvoke r0.<android.widget.Editor: boolean hasSelectionController()>();

        if $z2 == 0 goto label4;

        $r4 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        staticinvoke <android.widget.Editor$SelectionModifierCursorController: void access$8200(android.widget.Editor$SelectionModifierCursorController)>($r4);

     label4:
        return;
    }

    void makeBlink()
    {
        android.widget.Editor r0;
        android.widget.Editor$Blink r1, $r3, $r4, $r6, $r8;
        boolean $z0;
        android.widget.TextView $r2, $r5, $r7;
        long $l0;

        r0 := @this: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean shouldBlink()>();

        if $z0 == 0 goto label2;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.widget.Editor: long mShowCursor> = $l0;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r3 != null goto label1;

        $r8 = new android.widget.Editor$Blink;

        specialinvoke $r8.<android.widget.Editor$Blink: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$Blink mBlink> = $r8;

     label1:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r5.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r7.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r6, 500L);

        goto label3;

     label2:
        r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if r1 == null goto label3;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r1);

     label3:
        return;
    }

    void onAttachedToWindow()
    {
        android.widget.Editor r0;
        android.view.ViewTreeObserver r1;
        boolean $z0, $z1, $z2;
        android.widget.TextView $r2, $r9, $r11;
        android.widget.Editor$PositionListener $r3;
        android.widget.Editor$CursorAnchorInfoNotifier $r4;
        android.view.ViewTreeObserver$OnDrawListener $r5;
        android.widget.Editor$SelectionModifierCursorController $r6, r8;
        android.widget.Editor$InsertionPointCursorController r7;
        java.lang.CharSequence $r10;
        int $i0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mShowErrorAfterAttach>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.Editor: void showError()>();

        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $z1 = virtualinvoke r1.<android.view.ViewTreeObserver: boolean isAlive()>();

        if $z1 == 0 goto label4;

        r7 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if r7 == null goto label2;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r7);

     label2:
        r8 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r8 == null goto label3;

        virtualinvoke r8.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r6);

     label3:
        $r5 = r0.<android.widget.Editor: android.view.ViewTreeObserver$OnDrawListener mMagnifierOnDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)>($r5);

     label4:
        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(0, $i0, 1);

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r11.<android.widget.TextView: boolean hasSelection()>();

        if $z2 == 0 goto label5;

        virtualinvoke r0.<android.widget.Editor: void refreshTextActionMode()>();

     label5:
        $r3 = specialinvoke r0.<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()>();

        $r4 = r0.<android.widget.Editor: android.widget.Editor$CursorAnchorInfoNotifier mCursorAnchorInfoNotifier>;

        virtualinvoke $r3.<android.widget.Editor$PositionListener: void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean)>($r4, 1);

        specialinvoke r0.<android.widget.Editor: void resumeBlink()>();

        return;
    }

    public void onCommitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.widget.Editor r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.widget.Editor$CorrectionHighlighter r2, $r3, $r5;
        android.widget.Editor$UndoInputFilter $r4;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        r2 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        if r2 != null goto label1;

        $r5 = new android.widget.Editor$CorrectionHighlighter;

        specialinvoke $r5.<android.widget.Editor$CorrectionHighlighter: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter> = $r5;

        goto label2;

     label1:
        staticinvoke <android.widget.Editor$CorrectionHighlighter: void access$1000(android.widget.Editor$CorrectionHighlighter,boolean)>(r2, 0);

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        virtualinvoke $r3.<android.widget.Editor$CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>(r1);

        $r4 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r4.<android.widget.Editor$UndoInputFilter: void freezeLastEdit()>();

        return;
    }

    void onCreateContextMenu(android.view.ContextMenu)
    {
        android.widget.Editor r0;
        android.view.ContextMenu r1;
        android.widget.Editor$SuggestionInfo[] r2;
        android.view.SubMenu r3;
        android.widget.Editor$SuggestionInfo r4, $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        float $f0, $f1, $f2, $f3;
        android.widget.TextView $r5, $r6, $r11, $r16, $r22, $r28, $r32, $r37, $r42, $r48, $r53, $r63, $r64, $r67, $r68;
        android.view.MenuItem $r7, $r8, $r10, $r13, $r15, $r18, $r19, $r21, $r24, $r25, $r27, $r30, $r31, $r33, $r36, $r38, $r41, $r43, $r46, $r47, $r49, $r52, $r54, $r59;
        android.view.MenuItem$OnMenuItemClickListener $r9, $r14, $r20, $r26, $r34, $r39, $r44, $r50, $r55;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        android.widget.Editor$SuggestionHelper $r57;
        android.text.SpannableStringBuilder $r58;
        android.widget.Editor$4 $r60;
        java.lang.CharSequence $r65;
        android.text.Spannable $r66;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.ContextMenu;

        $z0 = r0.<android.widget.Editor: boolean mIsBeingLongClicked>;

        if $z0 != 0 goto label10;

        $f0 = r0.<android.widget.Editor: float mContextMenuAnchorX>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z1 != 0 goto label10;

        $f1 = r0.<android.widget.Editor: float mContextMenuAnchorY>;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z2 == 0 goto label01;

        goto label10;

     label01:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f3 = r0.<android.widget.Editor: float mContextMenuAnchorX>;

        $f2 = r0.<android.widget.Editor: float mContextMenuAnchorY>;

        i3 = virtualinvoke $r5.<android.widget.TextView: int getOffsetForPosition(float,float)>($f3, $f2);

        if i3 != -1 goto label02;

        return;

     label02:
        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r6.<android.widget.TextView: boolean canSelectText()>();

        if $z3 == 0 goto label05;

        $r63 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z13 = virtualinvoke $r63.<android.widget.TextView: boolean hasSelection()>();

        if $z13 == 0 goto label03;

        $r67 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r67.<android.widget.TextView: int getSelectionStart()>();

        if i3 < $i1 goto label03;

        $r68 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r68.<android.widget.TextView: int getSelectionEnd()>();

        if i3 > $i2 goto label03;

        z14 = 1;

        goto label04;

     label03:
        z14 = 0;

     label04:
        if z14 != 0 goto label05;

        $r64 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r65 = virtualinvoke $r64.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r66 = (android.text.Spannable) $r65;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r66, i3);

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

     label05:
        $z15 = specialinvoke r0.<android.widget.Editor: boolean shouldOfferToShowSuggestions()>();

        if $z15 == 0 goto label09;

        r2 = newarray (android.widget.Editor$SuggestionInfo)[5];

        i4 = 0;

     label06:
        $i0 = lengthof r2;

        if i4 >= $i0 goto label07;

        $r62 = new android.widget.Editor$SuggestionInfo;

        specialinvoke $r62.<android.widget.Editor$SuggestionInfo: void <init>(android.widget.Editor$1)>(null);

        r2[i4] = $r62;

        i4 = i4 + 1;

        goto label06;

     label07:
        r3 = interfaceinvoke r1.<android.view.ContextMenu: android.view.SubMenu addSubMenu(int,int,int,int)>(0, 0, 9, 17041125);

        $r57 = r0.<android.widget.Editor: android.widget.Editor$SuggestionHelper mSuggestionHelper>;

        i5 = virtualinvoke $r57.<android.widget.Editor$SuggestionHelper: int getSuggestionInfo(android.widget.Editor$SuggestionInfo[],android.widget.Editor$SuggestionSpanInfo)>(r2, null);

        i6 = 0;

     label08:
        if i6 >= i5 goto label09;

        r4 = r2[i6];

        $r58 = r4.<android.widget.Editor$SuggestionInfo: android.text.SpannableStringBuilder mText>;

        $r59 = interfaceinvoke r3.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 0, i6, $r58);

        $r60 = new android.widget.Editor$4;

        specialinvoke $r60.<android.widget.Editor$4: void <init>(android.widget.Editor,android.widget.Editor$SuggestionInfo)>(r0, r4);

        interfaceinvoke $r59.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r60);

        i6 = i6 + 1;

        goto label08;

     label09:
        $r7 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908338, 2, 17041371);

        $r8 = interfaceinvoke $r7.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(122);

        $r9 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        $r10 = interfaceinvoke $r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r9);

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z4 = virtualinvoke $r11.<android.widget.TextView: boolean canUndo()>();

        interfaceinvoke $r10.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z4);

        $r13 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908339, 3, 17041107);

        $r14 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        $r15 = interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r14);

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z5 = virtualinvoke $r16.<android.widget.TextView: boolean canRedo()>();

        interfaceinvoke $r15.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z5);

        $r18 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908320, 4, 17039363);

        $r19 = interfaceinvoke $r18.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(120);

        $r20 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        $r21 = interfaceinvoke $r19.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r20);

        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z6 = virtualinvoke $r22.<android.widget.TextView: boolean canCut()>();

        interfaceinvoke $r21.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z6);

        $r24 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908321, 5, 17039361);

        $r25 = interfaceinvoke $r24.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(99);

        $r26 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        $r27 = interfaceinvoke $r25.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r26);

        $r28 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z7 = virtualinvoke $r28.<android.widget.TextView: boolean canCopy()>();

        interfaceinvoke $r27.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z7);

        $r30 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908322, 6, 17039371);

        $r31 = interfaceinvoke $r30.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(118);

        $r32 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z8 = virtualinvoke $r32.<android.widget.TextView: boolean canPaste()>();

        $r33 = interfaceinvoke $r31.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z8);

        $r34 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        interfaceinvoke $r33.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r34);

        $r36 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908337, 11, 17039385);

        $r37 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z9 = virtualinvoke $r37.<android.widget.TextView: boolean canPasteAsPlainText()>();

        $r38 = interfaceinvoke $r36.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z9);

        $r39 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        interfaceinvoke $r38.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r39);

        $r41 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908341, 7, 17041229);

        $r42 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z10 = virtualinvoke $r42.<android.widget.TextView: boolean canShare()>();

        $r43 = interfaceinvoke $r41.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z10);

        $r44 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        interfaceinvoke $r43.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r44);

        $r46 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908319, 8, 17039373);

        $r47 = interfaceinvoke $r46.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(97);

        $r48 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z11 = virtualinvoke $r48.<android.widget.TextView: boolean canSelectAllText()>();

        $r49 = interfaceinvoke $r47.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z11);

        $r50 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        interfaceinvoke $r49.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r50);

        $r52 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 16908355, 10, 17039386);

        $r53 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z12 = virtualinvoke $r53.<android.widget.TextView: boolean canRequestAutofill()>();

        $r54 = interfaceinvoke $r52.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z12);

        $r55 = r0.<android.widget.Editor: android.view.MenuItem$OnMenuItemClickListener mOnContextMenuItemClickListener>;

        interfaceinvoke $r54.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r55);

        r0.<android.widget.Editor: boolean mPreserveSelection> = 1;

        return;

     label10:
        return;
    }

    void onDetachedFromWindow()
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1;
        android.widget.Editor$CursorAnchorInfoNotifier $r2;
        java.lang.CharSequence $r3;
        java.lang.Runnable $r4, r12, r13;
        android.widget.TextView $r5, $r6, $r8, $r9;
        boolean $z1;
        android.view.ViewTreeObserver$OnDrawListener $r7;
        android.widget.Editor$InsertionPointCursorController r10;
        android.widget.Editor$SelectionModifierCursorController r11;
        android.widget.SpellChecker r14;
        android.view.ViewTreeObserver r15;

        r0 := @this: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()>();

        $r2 = r0.<android.widget.Editor: android.widget.Editor$CursorAnchorInfoNotifier mCursorAnchorInfoNotifier>;

        virtualinvoke $r1.<android.widget.Editor$PositionListener: void removeSubscriber(android.widget.Editor$TextViewPositionListener)>($r2);

        $r3 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.Editor: void hideError()>();

     label1:
        specialinvoke r0.<android.widget.Editor: void suspendBlink()>();

        r10 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if r10 == null goto label2;

        virtualinvoke r10.<android.widget.Editor$InsertionPointCursorController: void onDetached()>();

     label2:
        r11 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r11 == null goto label3;

        virtualinvoke r11.<android.widget.Editor$SelectionModifierCursorController: void onDetached()>();

     label3:
        r12 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        if r12 == null goto label4;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r9.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r12);

     label4:
        r13 = r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable>;

        if r13 == null goto label5;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r8.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r13);

     label5:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = r0.<android.widget.Editor: java.lang.Runnable mShowFloatingToolbar>;

        virtualinvoke $r5.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        specialinvoke r0.<android.widget.Editor: void discardTextDisplayLists()>();

        r14 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if r14 == null goto label6;

        virtualinvoke r14.<android.widget.SpellChecker: void closeSession()>();

        r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker> = null;

     label6:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r15 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $z1 = virtualinvoke r15.<android.view.ViewTreeObserver: boolean isAlive()>();

        if $z1 == 0 goto label7;

        $r7 = r0.<android.widget.Editor: android.view.ViewTreeObserver$OnDrawListener mMagnifierOnDrawListener>;

        virtualinvoke r15.<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)>($r7);

     label7:
        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        return;
    }

    void onDraw(android.graphics.Canvas, android.text.Layout, android.graphics.Path, android.graphics.Paint, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        android.text.Layout r2;
        android.graphics.Paint r3;
        int i0, i1, i2, $i3;
        android.widget.TextView $r4, $r5, $r8, $r16;
        boolean $z0, $z1, $z2, $z3, $z5, $z6;
        android.widget.SelectionActionModeHelper $r6, r14;
        android.graphics.drawable.Drawable $r7;
        android.graphics.Path r9, r13, r15;
        android.widget.Editor$InputMethodState r10;
        android.view.inputmethod.InputMethodManager r11;
        android.widget.Editor$CorrectionHighlighter r12;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.Layout;

        r9 := @parameter2: android.graphics.Path;

        r3 := @parameter3: android.graphics.Paint;

        i0 := @parameter4: int;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r4.<android.widget.TextView: int getSelectionStart()>();

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i2 = virtualinvoke $r5.<android.widget.TextView: int getSelectionEnd()>();

        r10 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r10 == null goto label2;

        $i3 = r10.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i3 != 0 goto label2;

        r11 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r11 == null goto label2;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke r11.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r8);

        if $z2 == 0 goto label2;

        $z3 = r10.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z3 != 0 goto label1;

        $z5 = r10.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z5 == 0 goto label2;

     label1:
        virtualinvoke r0.<android.widget.Editor: boolean reportExtractedText()>();

     label2:
        r12 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        if r12 == null goto label3;

        virtualinvoke r12.<android.widget.Editor$CorrectionHighlighter: void draw(android.graphics.Canvas,int)>(r1, i0);

     label3:
        r13 = r9;

        if r9 == null goto label4;

        r13 = r9;

        if i1 != i2 goto label4;

        r13 = r9;

        $r7 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if $r7 == null goto label4;

        specialinvoke r0.<android.widget.Editor: void drawCursor(android.graphics.Canvas,int)>(r1, i0);

        r13 = null;

     label4:
        r14 = r0.<android.widget.Editor: android.widget.SelectionActionModeHelper mSelectionActionModeHelper>;

        r15 = r13;

        if r14 == null goto label5;

        virtualinvoke r14.<android.widget.SelectionActionModeHelper: void onDraw(android.graphics.Canvas)>(r1);

        r15 = r13;

        $r6 = r0.<android.widget.Editor: android.widget.SelectionActionModeHelper mSelectionActionModeHelper>;

        $z1 = virtualinvoke $r6.<android.widget.SelectionActionModeHelper: boolean isDrawingHighlight()>();

        if $z1 == 0 goto label5;

        r15 = null;

     label5:
        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z6 = virtualinvoke $r16.<android.widget.TextView: boolean canHaveDisplayList()>();

        if $z6 == 0 goto label6;

        $z0 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label6;

        specialinvoke r0.<android.widget.Editor: void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>(r1, r2, r15, r3, i0);

        goto label7;

     label6:
        virtualinvoke r2.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r15, r3, i0);

     label7:
        return;
    }

    void onDrop(android.view.DragEvent)
    {
        android.widget.Editor r0;
        android.content.ClipData r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20;
        android.text.SpannableStringBuilder $r3;
        android.widget.TextView $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r16, $r17, $r19, $r25, $r31, $r33, $r36, $r38;
        android.widget.Editor$UndoInputFilter $r5, $r15, $r26, $r39;
        float $f0, $f1;
        boolean $z0, $z1, $z2, z4;
        java.lang.CharSequence $r9, $r13, $r21, $r32, $r34, r37;
        char $c8, $c9;
        android.content.ClipData$Item $r18;
        android.content.Context $r20;
        java.lang.Throwable $r23, $r24;
        android.view.DragEvent r27;
        android.view.DragAndDropPermissions r28;
        java.lang.Object r29;
        android.widget.Editor$DragLocalState r30;
        android.text.Spannable $r35;

        r0 := @this: android.widget.Editor;

        r27 := @parameter0: android.view.DragEvent;

        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>()>();

        r28 = staticinvoke <android.view.DragAndDropPermissions: android.view.DragAndDropPermissions obtain(android.view.DragEvent)>(r27);

        if r28 == null goto label01;

        virtualinvoke r28.<android.view.DragAndDropPermissions: boolean takeTransient()>();

     label01:
        r2 = virtualinvoke r27.<android.view.DragEvent: android.content.ClipData getClipData()>();

        i13 = virtualinvoke r2.<android.content.ClipData: int getItemCount()>();

     label02:
        i14 = 0;

     label03:
        if i14 >= i13 goto label06;

     label04:
        $r18 = virtualinvoke r2.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i14);

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r20 = virtualinvoke $r19.<android.widget.TextView: android.content.Context getContext()>();

        $r21 = virtualinvoke $r18.<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>($r20);

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r21);

     label05:
        i14 = i14 + 1;

        goto label03;

     label06:
        if r28 == null goto label07;

        virtualinvoke r28.<android.view.DragAndDropPermissions: void release()>();

     label07:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r4.<android.widget.TextView: void beginBatchEdit()>();

        $r5 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r5.<android.widget.Editor$UndoInputFilter: void freezeLastEdit()>();

     label08:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f0 = virtualinvoke r27.<android.view.DragEvent: float getX()>();

        $f1 = virtualinvoke r27.<android.view.DragEvent: float getY()>();

        i0 = virtualinvoke $r6.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        r29 = virtualinvoke r27.<android.view.DragEvent: java.lang.Object getLocalState()>();

     label09:
        r30 = null;

     label10:
        $z0 = r29 instanceof android.widget.Editor$DragLocalState;

        if $z0 == 0 goto label11;

        r30 = (android.widget.Editor$DragLocalState) r29;

     label11:
        if r30 == null goto label14;

     label12:
        $r17 = r30.<android.widget.Editor$DragLocalState: android.widget.TextView sourceTextView>;

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        if $r17 != $r16 goto label14;

     label13:
        z4 = 1;

        goto label15;

     label14:
        z4 = 0;

     label15:
        if z4 == 0 goto label18;

     label16:
        $i12 = r30.<android.widget.Editor$DragLocalState: int start>;

        if i0 < $i12 goto label18;

        i15 = r30.<android.widget.Editor$DragLocalState: int end>;

     label17:
        if i0 >= i15 goto label18;

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r14.<android.widget.TextView: void endBatchEdit()>();

        $r15 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r15.<android.widget.Editor$UndoInputFilter: void freezeLastEdit()>();

        return;

     label18:
        $r31 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r32 = virtualinvoke $r31.<android.widget.TextView: java.lang.CharSequence getText()>();

        i1 = interfaceinvoke $r32.<java.lang.CharSequence: int length()>();

        $r33 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r34 = virtualinvoke $r33.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r35 = (android.text.Spannable) $r34;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r35, i0);

        $r36 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r36.<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>(i0, i0, $r3);

     label19:
        if z4 == 0 goto label30;

     label20:
        i2 = r30.<android.widget.Editor$DragLocalState: int start>;

        i3 = r30.<android.widget.Editor$DragLocalState: int end>;

     label21:
        i16 = i2;

        i17 = i3;

        if i0 > i2 goto label24;

     label22:
        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r13 = virtualinvoke $r12.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i11 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        i18 = $i11 - i1;

     label23:
        i16 = i2 + i18;

        i17 = i3 + i18;

     label24:
        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r7.<android.widget.TextView: void deleteText_internal(int,int)>(i16, i17);

        $i4 = i16 - 1;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i5 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        $i6 = i16 + 1;

        i20 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

     label25:
        $i7 = i19 + 1;

        if i20 <= $i7 goto label29;

     label26:
        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r37 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i19, i20);

        $c8 = interfaceinvoke r37.<java.lang.CharSequence: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c8);

        if $z1 == 0 goto label28;

        $c9 = interfaceinvoke r37.<java.lang.CharSequence: char charAt(int)>(1);

        $z2 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c9);

        if $z2 == 0 goto label28;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i10 = i19 + 1;

        virtualinvoke $r11.<android.widget.TextView: void deleteText_internal(int,int)>(i19, $i10);

     label27:
        goto label30;

     label28:
        goto label30;

     label29:
        goto label30;

     label30:
        $r38 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r38.<android.widget.TextView: void endBatchEdit()>();

        $r39 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r39.<android.widget.Editor$UndoInputFilter: void freezeLastEdit()>();

        return;

     label31:
        $r24 := @caughtexception;

        $r25 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r25.<android.widget.TextView: void endBatchEdit()>();

        $r26 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r26.<android.widget.Editor$UndoInputFilter: void freezeLastEdit()>();

        throw $r24;

     label32:
        $r23 := @caughtexception;

        if r28 == null goto label33;

        virtualinvoke r28.<android.view.DragAndDropPermissions: void release()>();

     label33:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label12 to label13 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
    }

    void onFocusChanged(boolean, int)
    {
        android.widget.Editor r0;
        int i0, i1, i2, $i4, i5;
        android.widget.TextView r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r19, $r20;
        long $l3;
        java.lang.CharSequence $r2, $r12, $r14, $r17, $r21, $r23;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, z7, z8, $z9, z10, $z11, $z12;
        android.text.Spannable $r13, $r15, $r18;
        android.text.method.MovementMethod r22;
        android.widget.Editor$SelectionModifierCursorController r24;

        r0 := @this: android.widget.Editor;

        z7 := @parameter0: boolean;

        i0 := @parameter1: int;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.widget.Editor: long mShowCursor> = $l3;

        virtualinvoke r0.<android.widget.Editor: void ensureEndedBatchEdit()>();

        if z7 == 0 goto label13;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r6.<android.widget.TextView: int getSelectionStart()>();

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i2 = virtualinvoke $r7.<android.widget.TextView: int getSelectionEnd()>();

        $z2 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z2 == 0 goto label01;

        if i1 != 0 goto label01;

        $r20 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r21 = virtualinvoke $r20.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i4 = interfaceinvoke $r21.<java.lang.CharSequence: int length()>();

        if i2 != $i4 goto label01;

        z8 = 1;

        goto label02;

     label01:
        z8 = 0;

     label02:
        $z9 = r0.<android.widget.Editor: boolean mFrozenWithFocus>;

        if $z9 == 0 goto label03;

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z6 = virtualinvoke $r19.<android.widget.TextView: boolean hasSelection()>();

        if $z6 == 0 goto label03;

        if z8 != 0 goto label03;

        z10 = 1;

        goto label04;

     label03:
        z10 = 0;

     label04:
        r0.<android.widget.Editor: boolean mCreatedWithASelection> = z10;

        $z11 = r0.<android.widget.Editor: boolean mFrozenWithFocus>;

        if $z11 == 0 goto label05;

        if i1 < 0 goto label05;

        if i2 >= 0 goto label11;

     label05:
        i5 = specialinvoke r0.<android.widget.Editor: int getLastTapPosition()>();

        if i5 < 0 goto label06;

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r17 = virtualinvoke $r16.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r18 = (android.text.Spannable) $r17;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r18, i5);

     label06:
        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r22 = virtualinvoke $r8.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if r22 == null goto label07;

        r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r14 = virtualinvoke r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r15 = (android.text.Spannable) $r14;

        interfaceinvoke r22.<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>(r1, $r15, i0);

     label07:
        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r9.<android.widget.TextView: boolean isInExtractedMode()>();

        if $z3 != 0 goto label08;

        $z5 = r0.<android.widget.Editor: boolean mSelectionMoved>;

        if $z5 == 0 goto label09;

     label08:
        if i1 < 0 goto label09;

        if i2 < 0 goto label09;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r12 = virtualinvoke $r11.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r13 = (android.text.Spannable) $r12;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r13, i1, i2);

     label09:
        $z12 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z12 == 0 goto label10;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r10.<android.widget.TextView: boolean selectAllText()>();

     label10:
        r0.<android.widget.Editor: boolean mTouchFocusSelected> = 1;

     label11:
        r0.<android.widget.Editor: boolean mFrozenWithFocus> = 0;

        r0.<android.widget.Editor: boolean mSelectionMoved> = 0;

        $r23 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r23 == null goto label12;

        specialinvoke r0.<android.widget.Editor: void showError()>();

     label12:
        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

        goto label20;

     label13:
        $r2 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r2 == null goto label14;

        specialinvoke r0.<android.widget.Editor: void hideError()>();

     label14:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void onEndBatchEdit()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r4.<android.widget.TextView: boolean isInExtractedMode()>();

        if $z0 == 0 goto label15;

        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        goto label18;

     label15:
        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r5.<android.widget.TextView: boolean isTemporarilyDetached()>();

        if $z1 == 0 goto label16;

        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        goto label17;

     label16:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

     label17:
        specialinvoke r0.<android.widget.Editor: void downgradeEasyCorrectionSpans()>();

     label18:
        r24 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r24 == null goto label19;

        virtualinvoke r24.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

     label19:
        specialinvoke r0.<android.widget.Editor: void ensureNoSelectionIfNonSelectable()>();

     label20:
        return;
    }

    void onLocaleChanged()
    {
        android.widget.Editor r0;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = null;

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIteratorWithText> = null;

        return;
    }

    void onScreenStateChanged(int)
    {
        android.widget.Editor r0;
        int i0;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        goto label3;

     label1:
        specialinvoke r0.<android.widget.Editor: void resumeBlink()>();

        goto label3;

     label2:
        specialinvoke r0.<android.widget.Editor: void suspendBlink()>();

     label3:
        return;
    }

    void onScrollChanged()
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener r1;
        android.view.ActionMode r2;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$PositionListener: void onScrollChanged()>();

     label1:
        r2 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.view.ActionMode: void invalidateContentRect()>();

     label2:
        return;
    }

    final void onTextOperationUserChanged()
    {
        android.widget.Editor r0;
        android.widget.SpellChecker r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.SpellChecker: void resetSession()>();

     label1:
        return;
    }

    public void onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;
        android.widget.TextView $r2, $r5;
        android.content.Context $r3;
        android.widget.EditorTouchState $r4;
        android.widget.Editor$SelectionModifierCursorController $r6;
        android.widget.Editor$InsertionPointCursorController $r7;
        android.view.ViewConfiguration r8;
        java.lang.Runnable r9;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = specialinvoke r0.<android.widget.Editor: boolean shouldFilterOutTouchEvent(android.view.MotionEvent)>(r1);

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        r0.<android.widget.Editor: int mLastButtonState> = $i0;

        if z0 == 0 goto label2;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i2 != 1 goto label1;

        r0.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

     label1:
        return;

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.content.Context getContext()>();

        r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        $r4 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        virtualinvoke $r4.<android.widget.EditorTouchState: void update(android.view.MotionEvent,android.view.ViewConfiguration)>(r1, r8);

        specialinvoke r0.<android.widget.Editor: void updateFloatingToolbarVisibility(android.view.MotionEvent)>(r1);

        $z1 = virtualinvoke r0.<android.widget.Editor: boolean hasInsertionController()>();

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r7.<android.widget.Editor$InsertionPointCursorController: void onTouchEvent(android.view.MotionEvent)>(r1);

     label3:
        $z2 = virtualinvoke r0.<android.widget.Editor: boolean hasSelectionController()>();

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r6.<android.widget.Editor$SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>(r1);

     label4:
        r9 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        if r9 == null goto label5;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r5.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r9);

        r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable> = null;

     label5:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i1 != 0 goto label6;

        r0.<android.widget.Editor: boolean mTouchFocusSelected> = 0;

        r0.<android.widget.Editor: boolean mIgnoreActionUpEvent> = 0;

     label6:
        return;
    }

    void onTouchUpEvent(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z8, z9, $z10;
        android.widget.SelectionActionModeHelper $r2;
        android.widget.TextView $r3, $r4, $r8, $r9, $r11, $r13;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, i4;
        android.widget.Editor$InsertionPointCursorController $r5, $r6;
        android.widget._$$Lambda$DZXn7FbDDFyBvNjI_iG9_hfa7kw $r7;
        long $l3;
        android.text.Spannable $r10;
        android.view.MotionEvent r12;
        android.widget.SpellChecker r14;
        java.lang.Runnable r15;

        r0 := @this: android.widget.Editor;

        r12 := @parameter0: android.view.MotionEvent;

        $r2 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        $r3 = virtualinvoke r0.<android.widget.Editor: android.widget.TextView getTextView()>();

        $f0 = virtualinvoke r12.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r12.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r3.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $z1 = virtualinvoke $r2.<android.widget.SelectionActionModeHelper: boolean resetSelection(int)>($i0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $z2 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z2 == 0 goto label2;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z8 = virtualinvoke $r11.<android.widget.TextView: boolean didTouchFocusSelect()>();

        if $z8 == 0 goto label2;

        z9 = 1;

        goto label3;

     label2:
        z9 = 0;

     label3:
        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        $r13 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r13.<android.widget.TextView: java.lang.CharSequence getText()>();

        if z9 != 0 goto label8;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label8;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f2 = virtualinvoke r12.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r12.<android.view.MotionEvent: float getY()>();

        i4 = virtualinvoke $r4.<android.widget.TextView: int getOffsetForPosition(float,float)>($f2, $f3);

        $z3 = r0.<android.widget.Editor: boolean mRequestingLinkActionMode>;

        z0 = 1 ^ $z3;

        if z0 == 0 goto label4;

        $r10 = (android.text.Spannable) r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r10, i4);

        r14 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if r14 == null goto label4;

        virtualinvoke r14.<android.widget.SpellChecker: void onSelectionChanged()>();

     label4:
        $z10 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z10 != 0 goto label8;

        $z4 = specialinvoke r0.<android.widget.Editor: boolean isCursorInsideEasyCorrectionSpan()>();

        if $z4 == 0 goto label6;

        r15 = r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable>;

        if r15 == null goto label5;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r9.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r15);

     label5:
        $r7 = new android.widget._$$Lambda$DZXn7FbDDFyBvNjI_iG9_hfa7kw;

        specialinvoke $r7.<android.widget._$$Lambda$DZXn7FbDDFyBvNjI_iG9_hfa7kw: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable> = $r7;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $l3 = (long) $i2;

        virtualinvoke $r8.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r7, $l3);

        goto label8;

     label6:
        $z5 = virtualinvoke r0.<android.widget.Editor: boolean hasInsertionController()>();

        if $z5 == 0 goto label8;

        if z0 == 0 goto label7;

        $r6 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r6.<android.widget.Editor$InsertionPointCursorController: void show()>();

        goto label8;

     label7:
        $r5 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r5.<android.widget.Editor$InsertionPointCursorController: void hide()>();

     label8:
        return;
    }

    void onWindowFocusChanged(boolean)
    {
        android.widget.Editor r0;
        boolean z0, $z1, $z2;
        android.widget.TextView $r1;
        android.widget.Editor$Blink r2, r3;
        android.widget.Editor$InputContentType r4;
        android.widget.Editor$SuggestionsPopupWindow r5;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        r2 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.Editor$Blink: void uncancel()>();

        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

     label1:
        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z2 != 0 goto label6;

        virtualinvoke r0.<android.widget.Editor: void refreshTextActionMode()>();

        goto label6;

     label2:
        r3 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if r3 == null goto label3;

        virtualinvoke r3.<android.widget.Editor$Blink: void cancel()>();

     label3:
        r4 = r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if r4 == null goto label4;

        r4.<android.widget.Editor$InputContentType: boolean enterDown> = 0;

     label4:
        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        r5 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if r5 == null goto label5;

        virtualinvoke r5.<android.widget.Editor$SuggestionsPopupWindow: void onParentLostFocus()>();

     label5:
        virtualinvoke r0.<android.widget.Editor: void ensureEndedBatchEdit()>();

        specialinvoke r0.<android.widget.Editor: void ensureNoSelectionIfNonSelectable()>();

     label6:
        return;
    }

    public boolean performLongClick(boolean)
    {
        android.widget.Editor r0;
        int i0;
        boolean $z0, $z1, $z3, $z4, $z5, z6, z7, z8, z9, z10;
        android.widget.TextView $r1, $r4, $r6, $r12, $r14, $r18;
        android.content.Context $r2, $r5, $r7, $r19;
        android.view.ActionMode $r3;
        android.widget.EditorTouchState $r8, $r9, $r10, $r11, $r13;
        float $f0, $f1, $f2, $f3;
        java.lang.CharSequence $r15;
        android.text.Spannable $r16;
        android.widget.Editor$InsertionPointCursorController $r17;

        r0 := @this: android.widget.Editor;

        z6 := @parameter0: boolean;

        $z0 = r0.<android.widget.Editor: boolean mIsBeingLongClickedByAccessibility>;

        if $z0 == 0 goto label2;

        if z6 != 0 goto label1;

        specialinvoke r0.<android.widget.Editor: void toggleInsertionActionMode()>();

     label1:
        return 1;

     label2:
        z7 = z6;

        if z6 != 0 goto label3;

        z7 = z6;

        $r8 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f0 = virtualinvoke $r8.<android.widget.EditorTouchState: float getLastDownX()>();

        $r9 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f1 = virtualinvoke $r9.<android.widget.EditorTouchState: float getLastDownY()>();

        $z3 = specialinvoke r0.<android.widget.Editor: boolean isPositionOnText(float,float)>($f0, $f1);

        if $z3 != 0 goto label3;

        z7 = z6;

        $r10 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $z4 = virtualinvoke $r10.<android.widget.EditorTouchState: boolean isOnHandle()>();

        if $z4 != 0 goto label3;

        z7 = z6;

        $z5 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z5 == 0 goto label3;

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f2 = virtualinvoke $r11.<android.widget.EditorTouchState: float getLastDownX()>();

        $r13 = r0.<android.widget.Editor: android.widget.EditorTouchState mTouchState>;

        $f3 = virtualinvoke $r13.<android.widget.EditorTouchState: float getLastDownY()>();

        i0 = virtualinvoke $r12.<android.widget.TextView: int getOffsetForPosition(float,float)>($f2, $f3);

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r15 = virtualinvoke $r14.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r16 = (android.text.Spannable) $r15;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r16, i0);

        $r17 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r17.<android.widget.Editor$InsertionPointCursorController: void show()>();

        r0.<android.widget.Editor: boolean mIsInsertionActionModeStartPending> = 1;

        z7 = 1;

        $r18 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r19 = virtualinvoke $r18.<android.widget.TextView: android.content.Context getContext()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,int)>($r19, 629, 0);

     label3:
        z8 = z7;

        if z7 != 0 goto label6;

        z8 = z7;

        $r3 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r3 == null goto label6;

        $z1 = specialinvoke r0.<android.widget.Editor: boolean touchPositionIsInSelection()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<android.widget.Editor: void startDragAndDrop()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.content.Context getContext()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,int)>($r7, 629, 2);

        goto label5;

     label4:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        specialinvoke r0.<android.widget.Editor: boolean selectCurrentWordAndStartDrag()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.content.Context getContext()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,int)>($r5, 629, 1);

     label5:
        z8 = 1;

     label6:
        z9 = z8;

        if z8 != 0 goto label7;

        z10 = specialinvoke r0.<android.widget.Editor: boolean selectCurrentWordAndStartDrag()>();

        z9 = z10;

        if z10 == 0 goto label7;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.content.Context getContext()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,int)>($r2, 629, 1);

        z9 = z10;

     label7:
        return z9;
    }

    void prepareCursorControllers()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1, $r3, $r4;
        android.view.View $r2;
        boolean $z1, $z2, z3, z4, z5, z6, z7, $z8, $z9;
        android.text.Layout $r5;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams r6;
        android.view.WindowManager$LayoutParams r7;
        android.widget.Editor$InsertionPointCursorController r8;
        android.widget.Editor$SelectionModifierCursorController r9;

        r0 := @this: android.widget.Editor;

        z3 = 0;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.view.View getRootView()>();

        r6 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        z4 = r6 instanceof android.view.WindowManager$LayoutParams;

        if z4 == 0 goto label03;

        r7 = (android.view.WindowManager$LayoutParams) r6;

        $i0 = r7.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 < 1000 goto label02;

        $i1 = r7.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 <= 1999 goto label01;

        goto label02;

     label01:
        z3 = 0;

        goto label03;

     label02:
        z3 = 1;

     label03:
        if z3 == 0 goto label04;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r5 == null goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        if z5 == 0 goto label06;

        $z2 = specialinvoke r0.<android.widget.Editor: boolean isCursorVisible()>();

        if $z2 == 0 goto label06;

        z6 = 1;

        goto label07;

     label06:
        z6 = 0;

     label07:
        r0.<android.widget.Editor: boolean mInsertionControllerEnabled> = z6;

        if z5 == 0 goto label08;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r3.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z1 == 0 goto label08;

        z7 = 1;

        goto label09;

     label08:
        z7 = 0;

     label09:
        r0.<android.widget.Editor: boolean mSelectionControllerEnabled> = z7;

        $z8 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z8 != 0 goto label10;

        virtualinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        r8 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if r8 == null goto label10;

        virtualinvoke r8.<android.widget.Editor$InsertionPointCursorController: void onDetached()>();

        r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController> = null;

     label10:
        $z9 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        if $z9 != 0 goto label11;

        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        r9 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r9 == null goto label11;

        virtualinvoke r9.<android.widget.Editor$SelectionModifierCursorController: void onDetached()>();

        r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController> = null;

     label11:
        return;
    }

    void redo()
    {
        android.widget.Editor r0;
        android.content.UndoOwner r1;
        boolean $z0;
        android.content.UndoOwner[] $r2;
        android.content.UndoManager $r3;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mAllowUndo>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r2 = newarray (android.content.UndoOwner)[1];

        $r2[0] = r1;

        virtualinvoke $r3.<android.content.UndoManager: int redo(android.content.UndoOwner[],int)>($r2, 1);

        return;
    }

    void refreshTextActionMode()
    {
        android.widget.Editor r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.widget.Editor$SelectionModifierCursorController r1;
        android.widget.TextView $r2;
        android.view.ActionMode $r3, $r4, r6;
        android.widget.Editor$InsertionPointCursorController r5;

        r0 := @this: android.widget.Editor;

        $z1 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z1 == 0 goto label01;

        r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh> = 0;

        return;

     label01:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z0 = virtualinvoke $r2.<android.widget.TextView: boolean hasSelection()>();

        r1 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        r5 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        if r1 == null goto label02;

        $z6 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: boolean isCursorBeingModified()>();

        if $z6 != 0 goto label03;

     label02:
        if r5 == null goto label04;

        $z5 = virtualinvoke r5.<android.widget.Editor$InsertionPointCursorController: boolean isCursorBeingModified()>();

        if $z5 == 0 goto label04;

     label03:
        r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh> = 0;

        return;

     label04:
        if z0 == 0 goto label08;

        virtualinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        $r3 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r3 != null goto label05;

        $z4 = r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh>;

        if $z4 == 0 goto label11;

        virtualinvoke r0.<android.widget.Editor: void startSelectionActionModeAsync(boolean)>(0);

        goto label11;

     label05:
        if r1 == null goto label07;

        $z3 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: boolean isActive()>();

        if $z3 != 0 goto label06;

        goto label07;

     label06:
        $r4 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        virtualinvoke $r4.<android.view.ActionMode: void invalidateContentRect()>();

        goto label11;

     label07:
        specialinvoke r0.<android.widget.Editor: void stopTextActionModeWithPreservingSelection()>();

        virtualinvoke r0.<android.widget.Editor: void startSelectionActionModeAsync(boolean)>(0);

        goto label11;

     label08:
        if r5 == null goto label10;

        $z2 = virtualinvoke r5.<android.widget.Editor$InsertionPointCursorController: boolean isActive()>();

        if $z2 != 0 goto label09;

        goto label10;

     label09:
        r6 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if r6 == null goto label11;

        virtualinvoke r6.<android.view.ActionMode: void invalidateContentRect()>();

        goto label11;

     label10:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

     label11:
        r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh> = 0;

        return;
    }

    void replace()
    {
        android.widget.Editor r0;
        int i0, $i1, $i2, $i3;
        android.widget.Editor$SuggestionsPopupWindow $r1, $r2, $r8;
        android.widget.TextView $r3, $r4, $r5;
        java.lang.CharSequence $r6;
        android.text.Spannable $r7;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r1 != null goto label1;

        $r8 = new android.widget.Editor$SuggestionsPopupWindow;

        specialinvoke $r8.<android.widget.Editor$SuggestionsPopupWindow: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow> = $r8;

     label1:
        virtualinvoke r0.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        virtualinvoke $r2.<android.widget.Editor$SuggestionsPopupWindow: void show()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionStart()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r4.<android.widget.TextView: int getSelectionEnd()>();

        $i3 = $i1 + $i2;

        i0 = $i3 / 2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r7 = (android.text.Spannable) $r6;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r7, i0);

        return;
    }

    boolean reportExtractedText()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        boolean z0, $z1, $z2;
        android.view.inputmethod.ExtractedTextRequest r2;
        android.view.inputmethod.InputMethodManager r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.inputmethod.ExtractedText $r4, $r6;
        android.widget.TextView $r5;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 != null goto label1;

        return 0;

     label1:
        z0 = r1.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if z0 != 0 goto label2;

        $z1 = r1.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

        r1.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged> = 0;

        r2 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest>;

        if r2 != null goto label3;

        return 0;

     label3:
        r3 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r3 != null goto label4;

        return 0;

     label4:
        $i0 = r1.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i0 >= 0 goto label5;

        if z0 != 0 goto label5;

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -2;

     label5:
        $i2 = r1.<android.widget.Editor$InputMethodState: int mChangedStart>;

        $i3 = r1.<android.widget.Editor$InputMethodState: int mChangedEnd>;

        $i4 = r1.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $r6 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedText mExtractedText>;

        $z2 = specialinvoke r0.<android.widget.Editor: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>(r2, $i2, $i3, $i4, $r6);

        if $z2 == 0 goto label6;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = r2.<android.view.inputmethod.ExtractedTextRequest: int token>;

        $r4 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedText mExtractedText>;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>($r5, $i1, $r4);

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedDelta> = 0;

        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

        return 1;

     label6:
        return 0;
    }

    void restoreInstanceState(android.os.ParcelableParcel)
    {
        android.widget.Editor r0;
        android.os.ParcelableParcel r1;
        android.os.Parcel r2;
        android.content.UndoManager $r3, $r6;
        java.lang.ClassLoader $r4;
        android.widget.Editor$UndoInputFilter $r5;
        android.content.UndoOwner $r7;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.os.ParcelableParcel;

        r2 = virtualinvoke r1.<android.os.ParcelableParcel: android.os.Parcel getParcel()>();

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r4 = virtualinvoke r1.<android.os.ParcelableParcel: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r3.<android.content.UndoManager: void restoreInstanceState(android.os.Parcel,java.lang.ClassLoader)>(r2, $r4);

        $r5 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r5.<android.widget.Editor$UndoInputFilter: void restoreInstanceState(android.os.Parcel)>(r2);

        $r6 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r7 = virtualinvoke $r6.<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>("Editor", r0);

        r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = $r7;

        return;
    }

    android.os.ParcelableParcel saveInstanceState()
    {
        android.widget.Editor r0;
        android.os.Parcel r2;
        android.os.ParcelableParcel $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        android.content.UndoManager $r6;
        android.widget.Editor$UndoInputFilter $r7;

        r0 := @this: android.widget.Editor;

        $r3 = new android.os.ParcelableParcel;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<android.os.ParcelableParcel: void <init>(java.lang.ClassLoader)>($r5);

        r2 = virtualinvoke $r3.<android.os.ParcelableParcel: android.os.Parcel getParcel()>();

        $r6 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        virtualinvoke $r6.<android.content.UndoManager: void saveInstanceState(android.os.Parcel)>(r2);

        $r7 = r0.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        virtualinvoke $r7.<android.widget.Editor$UndoInputFilter: void saveInstanceState(android.os.Parcel)>(r2);

        return $r3;
    }

    boolean selectCurrentWord()
    {
        android.widget.Editor r0;
        boolean z0, $z1, $z2, z3;
        int i0, $i1, $i2, $i3, i5, i6, i7;
        android.widget.TextView $r1, $r2, $r4, $r6, $r10, $r12, $r15, $r18, $r22;
        java.lang.CharSequence $r3, $r5, $r7, $r11, $r13, $r16, $r23;
        android.text.Spanned $r8, $r14, $r17;
        java.lang.Object[] $r9;
        long l4, l8;
        android.text.style.URLSpan[] r19;
        android.text.style.URLSpan r20;
        android.text.method.WordIterator r21;
        android.text.Spannable $r24;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z0 = virtualinvoke $r1.<android.widget.TextView: boolean canSelectText()>();

        z3 = 0;

        if z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = specialinvoke r0.<android.widget.Editor: boolean needsToSelectAllToSelectWordOrParagraph()>();

        if $z1 == 0 goto label02;

        $r18 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r18.<android.widget.TextView: boolean selectAllText()>();

        return $z2;

     label02:
        l4 = specialinvoke r0.<android.widget.Editor: long getLastTouchOffsets()>();

        i0 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l4);

        i5 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l4);

        if i0 < 0 goto label11;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if i0 <= $i1 goto label03;

        goto label11;

     label03:
        if i5 < 0 goto label10;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i2 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if i5 <= $i2 goto label04;

        goto label10;

     label04:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r8 = (android.text.Spanned) $r7;

        $r9 = interfaceinvoke $r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i5, class "Landroid/text/style/URLSpan;");

        r19 = (android.text.style.URLSpan[]) $r9;

        $i3 = lengthof r19;

        if $i3 < 1 goto label05;

        r20 = r19[0];

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r13 = virtualinvoke $r12.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r14 = (android.text.Spanned) $r13;

        i6 = interfaceinvoke $r14.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r20);

        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r16 = virtualinvoke $r15.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r17 = (android.text.Spanned) $r16;

        i7 = interfaceinvoke $r17.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r20);

        goto label08;

     label05:
        r21 = virtualinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIterator()>();

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        virtualinvoke r21.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>($r11, i0, i5);

        i6 = virtualinvoke r21.<android.text.method.WordIterator: int getBeginning(int)>(i0);

        i7 = virtualinvoke r21.<android.text.method.WordIterator: int getEnd(int)>(i5);

        if i6 == -1 goto label07;

        if i7 == -1 goto label07;

        if i6 != i7 goto label06;

        goto label07;

     label06:
        goto label08;

     label07:
        l8 = specialinvoke r0.<android.widget.Editor: long getCharClusterRange(int)>(i0);

        i6 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l8);

        i7 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l8);

     label08:
        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r23 = virtualinvoke $r22.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r24 = (android.text.Spannable) $r23;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r24, i6, i7);

        if i7 <= i6 goto label09;

        z3 = 1;

     label09:
        return z3;

     label10:
        return 0;

     label11:
        return 0;
    }

    void sendOnTextChanged(int, int, int)
    {
        android.widget.Editor r0;
        int i0, i1, i2, $i3, $i4;
        android.widget.Editor$SelectionModifierCursorController r1;
        android.widget.SelectionActionModeHelper $r2;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        $i3 = i0 + i1;

        virtualinvoke $r2.<android.widget.SelectionActionModeHelper: void onTextChanged(int,int)>(i0, $i3);

        $i4 = i0 + i2;

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(i0, $i4, 0);

        r0.<android.widget.Editor: boolean mUpdateWordIteratorText> = 1;

        specialinvoke r0.<android.widget.Editor: void hideCursorControllers()>();

        r1 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

     label1:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        return;
    }

    void setContextMenuAnchor(float, float)
    {
        android.widget.Editor r0;
        float f0, f1;

        r0 := @this: android.widget.Editor;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.widget.Editor: float mContextMenuAnchorX> = f0;

        r0.<android.widget.Editor: float mContextMenuAnchorY> = f1;

        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;
        android.widget.TextView $r2;
        boolean $z0, $z1;
        android.widget.Editor$ErrorPopup $r3, r6;
        java.lang.CharSequence r4, r5;

        r0 := @this: android.widget.Editor;

        r4 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r5 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r4);

        r0.<android.widget.Editor: java.lang.CharSequence mError> = r5;

        r0.<android.widget.Editor: boolean mErrorWasChanged> = 1;

        if r5 != null goto label3;

        specialinvoke r0.<android.widget.Editor: void setErrorIcon(android.graphics.drawable.Drawable)>(null);

        r6 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if r6 == null goto label2;

        $z1 = virtualinvoke r6.<android.widget.Editor$ErrorPopup: boolean isShowing()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r3.<android.widget.Editor$ErrorPopup: void dismiss()>();

     label1:
        r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup> = null;

     label2:
        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

        goto label4;

     label3:
        specialinvoke r0.<android.widget.Editor: void setErrorIcon(android.graphics.drawable.Drawable)>(r1);

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r2.<android.widget.TextView: boolean isFocused()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<android.widget.Editor: void showError()>();

     label4:
        return;
    }

    public void setFlagCursorDragFromAnywhereEnabled(boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        r0.<android.widget.Editor: boolean mFlagCursorDragFromAnywhereEnabled> = z0;

        return;
    }

    public void setFlagInsertionHandleGesturesEnabled(boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        r0.<android.widget.Editor: boolean mFlagInsertionHandleGesturesEnabled> = z0;

        return;
    }

    void setFrame()
    {
        android.widget.Editor r0;
        android.view.View $r1;
        java.lang.CharSequence $r2;
        android.widget.Editor$ErrorPopup $r3, $r4, $r6, $r7, r8;
        android.widget.TextView $r5, r9;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Editor;

        r8 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if r8 == null goto label1;

        $r1 = virtualinvoke r8.<android.widget.Editor$ErrorPopup: android.view.View getContentView()>();

        r9 = (android.widget.TextView) $r1;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r2 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        specialinvoke r0.<android.widget.Editor: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r3, $r2, r9);

        $r4 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = specialinvoke r0.<android.widget.Editor: int getErrorX()>();

        $i1 = specialinvoke r0.<android.widget.Editor: int getErrorY()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i2 = virtualinvoke $r6.<android.widget.Editor$ErrorPopup: int getWidth()>();

        $r7 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i3 = virtualinvoke $r7.<android.widget.Editor$ErrorPopup: int getHeight()>();

        virtualinvoke $r4.<android.widget.Editor$ErrorPopup: void update(android.view.View,int,int,int,int)>($r5, $i0, $i1, $i2, $i3);

     label1:
        return;
    }

    public void setLineChangeSlopMinMaxForTesting(int, int)
    {
        android.widget.Editor r0;
        int i0, i1;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.Editor: int mLineChangeSlopMin> = i0;

        r0.<android.widget.Editor: int mLineChangeSlopMax> = i1;

        return;
    }

    void setRestartActionModeOnNextRefresh(boolean)
    {
        android.widget.Editor r0;
        boolean z0;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        r0.<android.widget.Editor: boolean mRestartActionModeOnNextRefresh> = z0;

        return;
    }

    boolean shouldRenderCursor()
    {
        android.widget.Editor r0;
        boolean z0, $z1, z2;
        long $l0, $l1, $l2, $l3;
        byte $b4;

        r0 := @this: android.widget.Editor;

        z0 = specialinvoke r0.<android.widget.Editor: boolean isCursorVisible()>();

        z2 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<android.widget.Editor: boolean mRenderCursorRegardlessTiming>;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<android.widget.Editor: long mShowCursor>;

        $l2 = $l0 - $l1;

        $l3 = $l2 % 1000L;

        $b4 = $l3 cmp 500L;

        if $b4 >= 0 goto label3;

        z2 = 1;

     label3:
        return z2;
    }

    boolean startActionModeInternal(int)
    {
        android.widget.Editor r0;
        int i0;
        android.widget.TextView r1, $r5, $r6, $r7, $r8, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, z10, z11;
        android.view.ActionMode $r2, $r4, r14, $r15;
        android.widget.Editor$TextActionModeCallback $r3;
        android.widget._$$Lambda$Editor$TdqUlJ6RRep0wXYHaRH51nTa08I $r9;
        com.android.internal.view.FloatingActionMode $r10;
        android.view.inputmethod.InputMethodManager r16;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r2 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r2 == null goto label02;

        specialinvoke r0.<android.widget.Editor: void invalidateActionMode()>();

        return 0;

     label02:
        if i0 == 2 goto label04;

        $z8 = virtualinvoke r0.<android.widget.Editor: boolean checkField()>();

        if $z8 == 0 goto label03;

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z9 = virtualinvoke $r12.<android.widget.TextView: boolean hasSelection()>();

        if $z9 != 0 goto label04;

     label03:
        return 0;

     label04:
        $r3 = new android.widget.Editor$TextActionModeCallback;

        specialinvoke $r3.<android.widget.Editor$TextActionModeCallback: void <init>(android.widget.Editor,int)>(r0, i0);

        r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z10 = 1;

        $r4 = virtualinvoke r1.<android.widget.TextView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)>($r3, 1);

        r0.<android.widget.Editor: android.view.ActionMode mTextActionMode> = $r4;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r5.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 != 0 goto label06;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z7 = virtualinvoke $r11.<android.widget.TextView: boolean isTextSelectable()>();

        if $z7 == 0 goto label05;

        goto label06;

     label05:
        z11 = 0;

        goto label07;

     label06:
        z11 = 1;

     label07:
        if i0 != 2 goto label08;

        if z11 != 0 goto label08;

        r14 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        $z6 = r14 instanceof com.android.internal.view.FloatingActionMode;

        if $z6 == 0 goto label08;

        $r10 = (com.android.internal.view.FloatingActionMode) r14;

        $r9 = new android.widget._$$Lambda$Editor$TdqUlJ6RRep0wXYHaRH51nTa08I;

        specialinvoke $r9.<android.widget._$$Lambda$Editor$TdqUlJ6RRep0wXYHaRH51nTa08I: void <init>(android.widget.Editor)>(r0);

        virtualinvoke $r10.<com.android.internal.view.FloatingActionMode: void setOutsideTouchable(boolean,android.widget.PopupWindow$OnDismissListener)>(1, $r9);

     label08:
        $r15 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if $r15 == null goto label09;

        goto label10;

     label09:
        z10 = 0;

     label10:
        if z10 == 0 goto label11;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r6.<android.widget.TextView: boolean isTextEditable()>();

        if $z2 == 0 goto label11;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r7.<android.widget.TextView: boolean isTextSelectable()>();

        if $z3 != 0 goto label11;

        $z4 = r0.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z4 == 0 goto label11;

        r16 = specialinvoke r0.<android.widget.Editor: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r16 == null goto label11;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r16.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>($r8, 0, null);

     label11:
        return z10;
    }

    void startInsertionActionMode()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$TextActionModeCallback $r1;
        android.widget.TextView $r2, $r5;
        android.widget.Editor$InsertionPointCursorController $r3, $r4;
        java.lang.Runnable r6;
        android.view.ActionMode r8;

        r0 := @this: android.widget.Editor;

        r6 = r0.<android.widget.Editor: java.lang.Runnable mInsertionActionModeRunnable>;

        if r6 == null goto label1;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r5.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>(r6);

     label1:
        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        $r1 = new android.widget.Editor$TextActionModeCallback;

        specialinvoke $r1.<android.widget.Editor$TextActionModeCallback: void <init>(android.widget.Editor,int)>(r0, 1);

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r8 = virtualinvoke $r2.<android.widget.TextView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)>($r1, 1);

        r0.<android.widget.Editor: android.view.ActionMode mTextActionMode> = r8;

        if r8 == null goto label3;

        $r3 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r4.<android.widget.Editor$InsertionPointCursorController: void show()>();

     label3:
        return;
    }

    void startLinkActionModeAsync(int, int)
    {
        android.widget.Editor r0;
        int i0, i1;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        android.widget.SelectionActionModeHelper $r3;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.widget.Editor: void stopTextActionMode()>();

        r0.<android.widget.Editor: boolean mRequestingLinkActionMode> = 1;

        $r3 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        virtualinvoke $r3.<android.widget.SelectionActionModeHelper: void startLinkActionModeAsync(int,int)>(i0, i1);

        return;
    }

    void startSelectionActionModeAsync(boolean)
    {
        android.widget.Editor r0;
        boolean z0;
        android.widget.SelectionActionModeHelper $r1;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.SelectionActionModeHelper getSelectionActionModeHelper()>();

        virtualinvoke $r1.<android.widget.SelectionActionModeHelper: void startSelectionActionModeAsync(boolean)>(z0);

        return;
    }

    protected void stopTextActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode r1;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.view.ActionMode mTextActionMode>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ActionMode: void finish()>();

     label1:
        return;
    }

    void undo()
    {
        android.widget.Editor r0;
        android.content.UndoOwner r1;
        boolean $z0;
        android.content.UndoOwner[] $r2;
        android.content.UndoManager $r3;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mAllowUndo>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.widget.Editor: android.content.UndoOwner mUndoOwner>;

        $r3 = r0.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        $r2 = newarray (android.content.UndoOwner)[1];

        $r2[0] = r1;

        virtualinvoke $r3.<android.content.UndoManager: int undo(android.content.UndoOwner[],int)>($r2, 1);

        return;
    }

    void updateCursorPosition()
    {
        android.widget.Editor r0;
        android.text.Layout r1;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2;
        android.widget.TextView $r3, $r4;
        boolean $z0;
        float $f0;

        r0 := @this: android.widget.Editor;

        virtualinvoke r0.<android.widget.Editor: void loadCursorDrawable()>();

        $r2 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r3.<android.widget.TextView: android.text.Layout getLayout()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r4.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        $i2 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        $i3 = virtualinvoke r1.<android.text.Layout: int getLineBottomWithoutSpacing(int)>(i1);

        $z0 = virtualinvoke r1.<android.text.Layout: boolean shouldClampCursor(int)>(i1);

        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i0, $z0);

        specialinvoke r0.<android.widget.Editor: void updateCursorPosition(int,int,float)>($i2, $i3, $f0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Editor: int UNSET_X_VALUE> = -1;

        <android.widget.Editor: int UNSET_LINE> = -1;

        <android.widget.Editor: java.lang.String UNDO_OWNER_TAG> = "Editor";

        <android.widget.Editor: java.lang.String TAG> = "Editor";

        <android.widget.Editor: int RECENT_CUT_COPY_DURATION_MS> = 15000;

        <android.widget.Editor: int MIN_LINE_HEIGHT_FOR_MAGNIFIER> = 20;

        <android.widget.Editor: int MENU_ITEM_ORDER_UNDO> = 2;

        <android.widget.Editor: int MENU_ITEM_ORDER_SHARE> = 7;

        <android.widget.Editor: int MENU_ITEM_ORDER_SELECT_ALL> = 8;

        <android.widget.Editor: int MENU_ITEM_ORDER_SECONDARY_ASSIST_ACTIONS_START> = 50;

        <android.widget.Editor: int MENU_ITEM_ORDER_REPLACE> = 9;

        <android.widget.Editor: int MENU_ITEM_ORDER_REDO> = 3;

        <android.widget.Editor: int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START> = 100;

        <android.widget.Editor: int MENU_ITEM_ORDER_PASTE_AS_PLAIN_TEXT> = 11;

        <android.widget.Editor: int MENU_ITEM_ORDER_PASTE> = 6;

        <android.widget.Editor: int MENU_ITEM_ORDER_CUT> = 4;

        <android.widget.Editor: int MENU_ITEM_ORDER_COPY> = 5;

        <android.widget.Editor: int MENU_ITEM_ORDER_AUTOFILL> = 10;

        <android.widget.Editor: int MENU_ITEM_ORDER_ASSIST> = 0;

        <android.widget.Editor: int MAX_LINE_HEIGHT_FOR_MAGNIFIER> = 32;

        <android.widget.Editor: float LINE_SLOP_MULTIPLIER_FOR_HANDLEVIEWS> = 0.5F;

        <android.widget.Editor: int LINE_CHANGE_SLOP_MIN_DP> = 12;

        <android.widget.Editor: int LINE_CHANGE_SLOP_MAX_DP> = 45;

        <android.widget.Editor: int HANDLE_TYPE_SELECTION_START> = 0;

        <android.widget.Editor: int HANDLE_TYPE_SELECTION_END> = 1;

        <android.widget.Editor: boolean FLAG_USE_MAGNIFIER> = 1;

        <android.widget.Editor: int EXTRACT_UNKNOWN> = -1;

        <android.widget.Editor: int EXTRACT_NOTHING> = -2;

        <android.widget.Editor: int DRAG_SHADOW_MAX_TEXT_LENGTH> = 20;

        <android.widget.Editor: int DELAY_BEFORE_HANDLE_FADES_OUT> = 4000;

        <android.widget.Editor: boolean DEBUG_UNDO> = 0;

        <android.widget.Editor: int BLINK> = 500;

        return;
    }
}
