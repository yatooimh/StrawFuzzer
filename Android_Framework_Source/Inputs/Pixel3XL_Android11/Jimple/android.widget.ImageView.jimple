public class android.widget.ImageView extends android.view.View
{
    private static final java.lang.String LOG_TAG;
    private static boolean sCompatAdjustViewBounds;
    private static boolean sCompatDone;
    private static boolean sCompatDrawableVisibilityDispatch;
    private static boolean sCompatUseCorrectStreamDensity;
    private static final android.graphics.Matrix$ScaleToFit[] sS2FArray;
    private static final android.widget.ImageView$ScaleType[] sScaleTypeArray;
    private boolean mAdjustViewBounds;
    private int mAlpha;
    private int mBaseline;
    private boolean mBaselineAlignBottom;
    private android.graphics.ColorFilter mColorFilter;
    private boolean mCropToPadding;
    private android.graphics.Matrix mDrawMatrix;
    private android.graphics.drawable.Drawable mDrawable;
    private android.graphics.BlendMode mDrawableBlendMode;
    private int mDrawableHeight;
    private android.content.res.ColorStateList mDrawableTintList;
    private int mDrawableWidth;
    private boolean mHasAlpha;
    private boolean mHasColorFilter;
    private boolean mHasDrawableBlendMode;
    private boolean mHasDrawableTint;
    private boolean mHasXfermode;
    private boolean mHaveFrame;
    private int mLevel;
    private android.graphics.Matrix mMatrix;
    private int mMaxHeight;
    private int mMaxWidth;
    private boolean mMergeState;
    private android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable;
    private int mResource;
    private android.widget.ImageView$ScaleType mScaleType;
    private int[] mState;
    private final android.graphics.RectF mTempDst;
    private final android.graphics.RectF mTempSrc;
    private android.net.Uri mUri;
    private final int mViewAlphaScale;
    private android.graphics.Xfermode mXfermode;

    static void <clinit>()
    {
        android.widget.ImageView$ScaleType[] $r0;
        android.widget.ImageView$ScaleType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        android.graphics.Matrix$ScaleToFit[] $r9;
        android.graphics.Matrix$ScaleToFit $r10, $r11, $r12, $r13;

        <android.widget.ImageView: java.lang.String LOG_TAG> = "ImageView";

        $r0 = newarray (android.widget.ImageView$ScaleType)[8];

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r0[0] = $r1;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r0[1] = $r2;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_START>;

        $r0[2] = $r3;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        $r0[3] = $r4;

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_END>;

        $r0[4] = $r5;

        $r6 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r0[5] = $r6;

        $r7 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r0[6] = $r7;

        $r8 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r0[7] = $r8;

        <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray> = $r0;

        $r9 = newarray (android.graphics.Matrix$ScaleToFit)[4];

        $r10 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        $r9[0] = $r10;

        $r11 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit START>;

        $r9[1] = $r11;

        $r12 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        $r9[2] = $r12;

        $r13 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit END>;

        $r9[3] = $r13;

        <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray> = $r9;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.graphics.RectF $r2, $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = null;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 0;

        r0.<android.widget.ImageView: boolean mHasXfermode> = 0;

        r0.<android.widget.ImageView: int mAlpha> = 255;

        r0.<android.widget.ImageView: boolean mHasAlpha> = 0;

        r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable> = null;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = null;

        r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode> = null;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 0;

        r0.<android.widget.ImageView: boolean mHasDrawableBlendMode> = 0;

        r0.<android.widget.ImageView: int[] mState> = null;

        r0.<android.widget.ImageView: boolean mMergeState> = 0;

        r0.<android.widget.ImageView: int mLevel> = 0;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r2;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r3;

        r0.<android.widget.ImageView: int mBaseline> = -1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = 0;

        specialinvoke r0.<android.widget.ImageView: void initImageView()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.ImageView r0;
        android.util.AttributeSet r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.content.res.TypedArray r2;
        android.graphics.RectF $r3, $r4;
        int[] $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.BlendMode $r7, $r8, $r10;
        android.content.res.ColorStateList $r9;
        android.widget.ImageView$ScaleType[] $r11;
        android.widget.ImageView$ScaleType $r12;
        android.content.Context r13;
        android.graphics.drawable.Drawable r14;

        r0 := @this: android.widget.ImageView;

        r13 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r13, r1, i6, i0);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = null;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 0;

        r0.<android.widget.ImageView: boolean mHasXfermode> = 0;

        r0.<android.widget.ImageView: int mAlpha> = 255;

        r0.<android.widget.ImageView: boolean mHasAlpha> = 0;

        r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable> = null;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = null;

        r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode> = null;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 0;

        r0.<android.widget.ImageView: boolean mHasDrawableBlendMode> = 0;

        r0.<android.widget.ImageView: int[] mState> = null;

        r0.<android.widget.ImageView: boolean mMergeState> = 0;

        r0.<android.widget.ImageView: int mLevel> = 0;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r4;

        r0.<android.widget.ImageView: int mBaseline> = -1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = 0;

        specialinvoke r0.<android.widget.ImageView: void initImageView()>();

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getImportantForAutofill()>();

        if $i1 != 0 goto label1;

        virtualinvoke r0.<android.widget.ImageView: void setImportantForAutofill(int)>(2);

     label1:
        $r5 = <com.android.internal.R$styleable: int[] ImageView>;

        r2 = virtualinvoke r13.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r5, i6, i0);

        $r6 = <com.android.internal.R$styleable: int[] ImageView>;

        virtualinvoke r0.<android.widget.ImageView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r13, $r6, r1, r2, i6, i0);

        r14 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r14 == null goto label2;

        virtualinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r14);

     label2:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = $z0;

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, -1);

        r0.<android.widget.ImageView: int mBaseline> = $i2;

        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke r0.<android.widget.ImageView: void setAdjustViewBounds(boolean)>($z1);

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, 2147483647);

        virtualinvoke r0.<android.widget.ImageView: void setMaxWidth(int)>($i3);

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, 2147483647);

        virtualinvoke r0.<android.widget.ImageView: void setMaxHeight(int)>($i4);

        i7 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if i7 < 0 goto label3;

        $r11 = <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray>;

        $r12 = $r11[i7];

        virtualinvoke r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r12);

     label3:
        $z2 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(5);

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = $r9;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 1;

        $r10 = <android.graphics.BlendMode: android.graphics.BlendMode SRC_ATOP>;

        r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode> = $r10;

        r0.<android.widget.ImageView: boolean mHasDrawableBlendMode> = 1;

     label4:
        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(9);

        if $z3 == 0 goto label5;

        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(9, -1);

        $r7 = r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode>;

        $r8 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>($i5, $r7);

        r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode> = $r8;

        r0.<android.widget.ImageView: boolean mHasDrawableBlendMode> = 1;

     label5:
        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        i8 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(10, 255);

        if i8 == 255 goto label6;

        virtualinvoke r0.<android.widget.ImageView: void setImageAlpha(int)>(i8);

     label6:
        $z4 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        r0.<android.widget.ImageView: boolean mCropToPadding> = $z4;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    static android.net.Uri access$002(android.widget.ImageView, android.net.Uri)
    {
        android.widget.ImageView r0;
        android.net.Uri r1;

        r0 := @parameter0: android.widget.ImageView;

        r1 := @parameter1: android.net.Uri;

        r0.<android.widget.ImageView: android.net.Uri mUri> = r1;

        return r1;
    }

    static int access$102(android.widget.ImageView, int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @parameter0: android.widget.ImageView;

        i0 := @parameter1: int;

        r0.<android.widget.ImageView: int mResource> = i0;

        return i0;
    }

    private void applyAlpha()
    {
        android.widget.ImageView r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.widget.ImageView;

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $z0 = r0.<android.widget.ImageView: boolean mHasAlpha>;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r2;

        $i0 = r0.<android.widget.ImageView: int mAlpha>;

        $i1 = $i0 * 256;

        $i2 = $i1 >> 8;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2);

     label1:
        return;
    }

    private void applyColorFilter()
    {
        android.widget.ImageView r0;
        boolean $z0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.widget.ImageView;

        r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label1;

        $z0 = r0.<android.widget.ImageView: boolean mHasColorFilter>;

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r3;

        $r1 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

     label1:
        return;
    }

    private void applyImageTint()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z5;
        int[] $r6;
        android.graphics.BlendMode $r7;
        android.content.res.ColorStateList $r9;

        r0 := @this: android.widget.ImageView;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label4;

        $z0 = r0.<android.widget.ImageView: boolean mHasDrawableTint>;

        if $z0 != 0 goto label1;

        $z5 = r0.<android.widget.ImageView: boolean mHasDrawableBlendMode>;

        if $z5 == 0 goto label4;

     label1:
        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        r1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r1;

        $z1 = r0.<android.widget.ImageView: boolean mHasDrawableTint>;

        if $z1 == 0 goto label2;

        $r9 = r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r9);

     label2:
        $z2 = r0.<android.widget.ImageView: boolean mHasDrawableBlendMode>;

        if $z2 == 0 goto label3;

        $r8 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r7 = r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r7);

     label3:
        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $z3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label4;

        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r6 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

     label4:
        return;
    }

    private void applyXfermode()
    {
        android.widget.ImageView r0;
        boolean $z0;
        android.graphics.Xfermode $r1;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.widget.ImageView;

        r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label1;

        $z0 = r0.<android.widget.ImageView: boolean mHasXfermode>;

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r3;

        $r1 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setXfermode(android.graphics.Xfermode)>($r1);

     label1:
        return;
    }

    private void configureBounds()
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.graphics.drawable.Drawable $r1, $r4, $r29;
        boolean $z0, $z4, z5;
        android.widget.ImageView$ScaleType $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, f30, f31, f32, f33, $f34, $f35, $f36, $f37, $f38, f39, $f40, $f41, $f42, $f43, $f44, f45;
        android.graphics.RectF $r13, $r14, $r16, $r17;
        android.graphics.Matrix$ScaleToFit $r18;
        android.graphics.Matrix $r19, $r20, $r21, $r22, $r23, $r24, r25, $r26, $r27, r28;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label19;

        $z0 = r0.<android.widget.ImageView: boolean mHaveFrame>;

        if $z0 != 0 goto label01;

        goto label19;

     label01:
        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        $i4 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $i5 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.ImageView: int mPaddingRight>;

        i2 = $i7 - $i6;

        $i8 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $i9 = r0.<android.widget.ImageView: int mPaddingTop>;

        $i11 = $i8 - $i9;

        $i10 = r0.<android.widget.ImageView: int mPaddingBottom>;

        i3 = $i11 - $i10;

        if i0 < 0 goto label02;

        if i2 != i0 goto label03;

     label02:
        if i1 < 0 goto label04;

        if i3 != i1 goto label03;

        goto label04;

     label03:
        z5 = 0;

        goto label05;

     label04:
        z5 = 1;

     label05:
        if i0 <= 0 goto label17;

        if i1 <= 0 goto label17;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r2 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r3 != $r2 goto label06;

        goto label17;

     label06:
        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        $r6 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r5 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r6 != $r5 goto label08;

        $r23 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z4 = virtualinvoke $r23.<android.graphics.Matrix: boolean isIdentity()>();

        if $z4 == 0 goto label07;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label18;

     label07:
        $r24 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r24;

        goto label18;

     label08:
        if z5 == 0 goto label09;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label18;

     label09:
        $r8 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r7 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r8 != $r7 goto label10;

        r25 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = r25;

        $i16 = i2 - i0;

        $f24 = (float) $i16;

        $f25 = $f24 * 0.5F;

        $i17 = staticinvoke <java.lang.Math: int round(float)>($f25);

        $f28 = (float) $i17;

        $i18 = i3 - i1;

        $f26 = (float) $i18;

        $f27 = $f26 * 0.5F;

        $i19 = staticinvoke <java.lang.Math: int round(float)>($f27);

        $f29 = (float) $i19;

        virtualinvoke r25.<android.graphics.Matrix: void setTranslate(float,float)>($f28, $f29);

        goto label18;

     label10:
        $r10 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r9 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r10 != $r9 goto label13;

        $r20 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r20;

        f30 = 0.0F;

        f31 = 0.0F;

        $i13 = i0 * i3;

        $i12 = i2 * i1;

        if $i13 <= $i12 goto label11;

        $f19 = (float) i3;

        $f18 = (float) i1;

        f32 = $f19 / $f18;

        $f22 = (float) i2;

        $f20 = (float) i0;

        $f21 = $f20 * f32;

        $f23 = $f22 - $f21;

        f30 = $f23 * 0.5F;

        goto label12;

     label11:
        $f11 = (float) i2;

        $f10 = (float) i0;

        f32 = $f11 / $f10;

        $f14 = (float) i3;

        $f12 = (float) i1;

        $f13 = $f12 * f32;

        $f15 = $f14 - $f13;

        f31 = $f15 * 0.5F;

     label12:
        $r21 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r21.<android.graphics.Matrix: void setScale(float,float)>(f32, f32);

        $r22 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $i14 = staticinvoke <java.lang.Math: int round(float)>(f30);

        $f16 = (float) $i14;

        $i15 = staticinvoke <java.lang.Math: int round(float)>(f31);

        $f17 = (float) $i15;

        virtualinvoke $r22.<android.graphics.Matrix: boolean postTranslate(float,float)>($f16, $f17);

        goto label18;

     label13:
        $r12 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r11 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r12 != $r11 goto label16;

        $r19 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r19;

        if i0 > i2 goto label14;

        if i1 > i3 goto label14;

        f33 = 1.0F;

        goto label15;

     label14:
        $f5 = (float) i2;

        $f4 = (float) i0;

        $f9 = $f5 / $f4;

        $f7 = (float) i3;

        $f6 = (float) i1;

        $f8 = $f7 / $f6;

        f33 = staticinvoke <java.lang.Math: float min(float,float)>($f9, $f8);

     label15:
        $f34 = (float) i2;

        $f35 = (float) i0;

        $f36 = $f35 * f33;

        $f37 = $f34 - $f36;

        $f38 = $f37 * 0.5F;

        $i20 = staticinvoke <java.lang.Math: int round(float)>($f38);

        f39 = (float) $i20;

        $f40 = (float) i3;

        $f41 = (float) i1;

        $f42 = $f41 * f33;

        $f43 = $f40 - $f42;

        $f44 = $f43 * 0.5F;

        $i21 = staticinvoke <java.lang.Math: int round(float)>($f44);

        f45 = (float) $i21;

        $r26 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r26.<android.graphics.Matrix: void setScale(float,float)>(f33, f33);

        $r27 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r27.<android.graphics.Matrix: boolean postTranslate(float,float)>(f39, f45);

        goto label18;

     label16:
        $r13 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke $r13.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $r14 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $f3 = (float) i2;

        $f2 = (float) i3;

        virtualinvoke $r14.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f3, $f2);

        r28 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = r28;

        $r16 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $r17 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $r15 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r18 = staticinvoke <android.widget.ImageView: android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)>($r15);

        virtualinvoke r28.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r16, $r17, $r18);

        goto label18;

     label17:
        $r29 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r29.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i2, i3);

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

     label18:
        return;

     label19:
        return;
    }

    private android.graphics.drawable.Drawable getDrawableFromUri(android.net.Uri)
    {
        android.widget.ImageView r0;
        android.net.Uri r1;
        java.lang.String $r2, $r3, $r8, $r9, $r20, $r25, r26;
        boolean $z0, $z1, $z2, $z3;
        android.content.Context $r4, $r11, $r13;
        android.content.ContentResolver $r5, $r12;
        android.graphics.ImageDecoder$Source $r6;
        android.widget.'-$$Lambda$ImageView$GWf2-Z-LHjSbTbrF-I3WzfR0LeM' $r7;
        android.graphics.drawable.Drawable $r10, r28, r32;
        android.content.res.Resources $r14, r31;
        int $i0;
        android.content.res.Resources$Theme $r15;
        java.lang.Throwable $r16;
        java.lang.Exception $r21;
        android.content.ContentResolver$OpenResourceIdResult r27;
        java.lang.StringBuilder r35, r36;
        android.graphics.ImageDecoder$OnHeaderDecodedListener r37;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.net.Uri;

        r26 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $r2 = "android.resource";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z0 == 0 goto label04;

     label01:
        $r11 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r27 = virtualinvoke $r12.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>(r1);

        $r14 = r27.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i0 = r27.<android.content.ContentResolver$OpenResourceIdResult: int id>;

        $r13 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r15 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r28 = virtualinvoke $r14.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r15);

     label02:
        return r28;

     label03:
        $r21 := @caughtexception;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r25, $r21);

        goto label12;

     label04:
        $r3 = "content";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z1 != 0 goto label06;

        $r8 = "file";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z3 == 0 goto label05;

        goto label06;

     label05:
        $r9 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r9);

        return $r10;

     label06:
        $z2 = <android.widget.ImageView: boolean sCompatUseCorrectStreamDensity>;

        if $z2 == 0 goto label08;

        r31 = virtualinvoke r0.<android.widget.ImageView: android.content.res.Resources getResources()>();

     label07:
        goto label09;

     label08:
        r31 = null;

     label09:
        $r4 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(android.content.ContentResolver,android.net.Uri,android.content.res.Resources)>($r5, r1, r31);

        $r7 = <android.widget._$$Lambda$ImageView$GWf2_Z_LHjSbTbrF_I3WzfR0LeM: android.widget.'-$$Lambda$ImageView$GWf2-Z-LHjSbTbrF-I3WzfR0LeM' INSTANCE>;

        r37 = (android.graphics.ImageDecoder$OnHeaderDecodedListener) $r7;

        r32 = staticinvoke <android.graphics.ImageDecoder: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r6, r37);

     label10:
        return r32;

     label11:
        $r16 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r20, $r16);

     label12:
        return null;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    private void initImageView()
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.Matrix $r1;
        android.widget.ImageView$ScaleType $r2;
        boolean $z1, z2, z3, z4;
        android.content.Context $r3;
        android.content.pm.ApplicationInfo $r4;

        r0 := @this: android.widget.ImageView;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.Matrix mMatrix> = $r1;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = $r2;

        $z1 = <android.widget.ImageView: boolean sCompatDone>;

        if $z1 != 0 goto label6;

        $r3 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i0 > 17 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        <android.widget.ImageView: boolean sCompatAdjustViewBounds> = z2;

        if i0 <= 23 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        <android.widget.ImageView: boolean sCompatUseCorrectStreamDensity> = z3;

        z4 = 0;

        if i0 >= 24 goto label5;

        z4 = 1;

     label5:
        <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch> = z4;

        <android.widget.ImageView: boolean sCompatDone> = 1;

     label6:
        return;
    }

    private boolean isFilledByImage()
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1;
        android.graphics.RectF r2, r3;
        boolean $z1, z3, z4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0, $b1, $b3, $b5;
        int $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.drawable.Drawable r4;
        android.graphics.Rect r5;

        r0 := @this: android.widget.ImageView;

        r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        z3 = 0;

        if r4 != null goto label1;

        return 0;

     label1:
        r5 = virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        r1 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if r1 != null goto label3;

        $i6 = r5.<android.graphics.Rect: int left>;

        if $i6 > 0 goto label2;

        $i7 = r5.<android.graphics.Rect: int top>;

        if $i7 > 0 goto label2;

        $i8 = r5.<android.graphics.Rect: int right>;

        $i9 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        if $i8 < $i9 goto label2;

        $i10 = r5.<android.graphics.Rect: int bottom>;

        $i11 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        if $i10 < $i11 goto label2;

        z3 = 1;

        goto label2;

     label2:
        return z3;

     label3:
        $z1 = virtualinvoke r1.<android.graphics.Matrix: boolean rectStaysRect()>();

        if $z1 == 0 goto label6;

        r2 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        r3 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        virtualinvoke r2.<android.graphics.RectF: void set(android.graphics.Rect)>(r5);

        virtualinvoke r1.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r3, r2);

        $f0 = r3.<android.graphics.RectF: float left>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label4;

        $f1 = r3.<android.graphics.RectF: float top>;

        $b1 = $f1 cmpg 0.0F;

        if $b1 > 0 goto label4;

        $f2 = r3.<android.graphics.RectF: float right>;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 < 0 goto label4;

        $f4 = r3.<android.graphics.RectF: float bottom>;

        $i4 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $f5 = (float) $i4;

        $b5 = $f4 cmpl $f5;

        if $b5 < 0 goto label4;

        z4 = 1;

        goto label5;

     label4:
        z4 = 0;

     label5:
        return z4;

     label6:
        return 0;
    }

    static void lambda$getDrawableFromUri$0(android.graphics.ImageDecoder, android.graphics.ImageDecoder$ImageInfo, android.graphics.ImageDecoder$Source)
    {
        android.graphics.ImageDecoder r0;
        android.graphics.ImageDecoder$ImageInfo r1;
        android.graphics.ImageDecoder$Source r2;

        r0 := @parameter0: android.graphics.ImageDecoder;

        r1 := @parameter1: android.graphics.ImageDecoder$ImageInfo;

        r2 := @parameter2: android.graphics.ImageDecoder$Source;

        virtualinvoke r0.<android.graphics.ImageDecoder: void setAllocator(int)>(1);

        return;
    }

    private void resizeFromDrawable()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1, $i2, i3, i4, i5;

        r0 := @this: android.widget.ImageView;

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label4;

        i3 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i4 = i3;

        if i3 >= 0 goto label1;

        i4 = r0.<android.widget.ImageView: int mDrawableWidth>;

     label1:
        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i5 = i0;

        if i0 >= 0 goto label2;

        i5 = r0.<android.widget.ImageView: int mDrawableHeight>;

     label2:
        $i1 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i4 != $i1 goto label3;

        $i2 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i5 == $i2 goto label4;

     label3:
        r0.<android.widget.ImageView: int mDrawableWidth> = i4;

        r0.<android.widget.ImageView: int mDrawableHeight> = i5;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label4:
        return;
    }

    private int resolveAdjustedSize(int, int, int)
    {
        android.widget.ImageView r0;
        int i0, i2, $i3, i4, i5, i6, i7;

        r0 := @this: android.widget.ImageView;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i5);

        i6 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i5);

        if i2 == -2147483648 goto label3;

        if i2 == 0 goto label2;

        if i2 == 1073741824 goto label1;

        i7 = i4;

        goto label4;

     label1:
        i7 = i6;

        goto label4;

     label2:
        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i0);

        goto label4;

     label3:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i6);

        i7 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i0);

     label4:
        return i7;
    }

    private void resolveUri()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r2, r15, r16, r19;
        android.content.res.Resources $r3;
        int $i0, $i2, $i3;
        java.lang.StringBuilder $r4, $r11;
        android.net.Uri $r6, r18;
        java.lang.String $r8, $r14;
        android.content.Context $r9;
        java.lang.Exception $r10;

        r0 := @this: android.widget.ImageView;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.widget.ImageView: android.content.res.Resources getResources()>();

        if $r3 != null goto label2;

        return;

     label2:
        r15 = null;

        $i0 = r0.<android.widget.ImageView: int mResource>;

        if $i0 == 0 goto label7;

     label3:
        $r9 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $i2 = r0.<android.widget.ImageView: int mResource>;

        r16 = virtualinvoke $r9.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i2);

     label4:
        r15 = r16;

        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource: ");

        $i3 = r0.<android.widget.ImageView: int mResource>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r14, $r10);

        r0.<android.widget.ImageView: int mResource> = 0;

     label6:
        goto label8;

     label7:
        r18 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if r18 == null goto label9;

        r19 = specialinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawableFromUri(android.net.Uri)>(r18);

        r15 = r19;

        if r19 != null goto label8;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolveUri failed on bad bitmap uri: ");

        $r6 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImageView", $r8);

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        r15 = r19;

     label8:
        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(r15);

        return;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView$ScaleType r0;
        int $i0, $i1;
        android.graphics.Matrix$ScaleToFit[] $r1;
        android.graphics.Matrix$ScaleToFit $r2;

        r0 := @parameter0: android.widget.ImageView$ScaleType;

        $r1 = <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray>;

        $i0 = r0.<android.widget.ImageView$ScaleType: int nativeInt>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    private void updateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r3, $r4, $r5, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z3, $z4, $z5, $z8, $z9, $z11, $z12, z14, z15, z16;
        int[] $r2;
        android.graphics.drawable.BitmapDrawable r6;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r6 = r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable>;

        if r1 == r6 goto label01;

        if r6 == null goto label01;

        virtualinvoke r6.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>(null);

     label01:
        z14 = 0;

        r7 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r7 == null goto label04;

        if r7 != r1 goto label02;

        z15 = 1;

        goto label03;

     label02:
        z15 = 0;

     label03:
        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke r0.<android.widget.ImageView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r4);

        z14 = z15;

        $z11 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z11 != 0 goto label04;

        z14 = z15;

        if z15 != 0 goto label04;

        z14 = z15;

        $z12 = virtualinvoke r0.<android.widget.ImageView: boolean isAttachedToWindow()>();

        if $z12 == 0 goto label04;

        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        z14 = z15;

     label04:
        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r1;

        if r1 == null goto label10;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0);

        $z3 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label05;

        $r2 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label05:
        if z14 == 0 goto label06;

        $z9 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z9 == 0 goto label09;

     label06:
        $z4 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z4 == 0 goto label07;

        z16 = 0;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getVisibility()>();

        if $i2 != 0 goto label08;

        z16 = 1;

        goto label08;

     label07:
        z16 = 0;

        $z5 = virtualinvoke r0.<android.widget.ImageView: boolean isAttachedToWindow()>();

        if $z5 == 0 goto label08;

        z16 = 0;

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getWindowVisibility()>();

        if $i1 != 0 goto label08;

        z16 = 0;

        $z8 = virtualinvoke r0.<android.widget.ImageView: boolean isShown()>();

        if $z8 == 0 goto label08;

        z16 = 1;

     label08:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z16, 1);

     label09:
        $i3 = r0.<android.widget.ImageView: int mLevel>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i3);

        $i4 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.ImageView: int mDrawableWidth> = $i4;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.ImageView: int mDrawableHeight> = $i5;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        specialinvoke r0.<android.widget.ImageView: void applyColorFilter()>();

        specialinvoke r0.<android.widget.ImageView: void applyAlpha()>();

        specialinvoke r0.<android.widget.ImageView: void applyXfermode()>();

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        goto label11;

     label10:
        r0.<android.widget.ImageView: int mDrawableHeight> = -1;

        r0.<android.widget.ImageView: int mDrawableWidth> = -1;

     label11:
        return;
    }

    public void animateTransform(android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r3, $r4, $r5;
        android.graphics.drawable.Drawable r2, $r6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Matrix;

        r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r2 != null goto label1;

        return;

     label1:
        if r1 != null goto label2;

        i0 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        i1 = r0.<android.widget.ImageView: int mPaddingLeft>;

        i2 = r0.<android.widget.ImageView: int mPaddingRight>;

        i3 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        i4 = r0.<android.widget.ImageView: int mPaddingTop>;

        i5 = r0.<android.widget.ImageView: int mPaddingBottom>;

        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i8 = i0 - i1;

        $i11 = $i8 - i2;

        $i9 = i3 - i4;

        $i10 = $i9 - i5;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i11, $i10);

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label4;

     label2:
        $i7 = r0.<android.widget.ImageView: int mDrawableWidth>;

        $i6 = r0.<android.widget.ImageView: int mDrawableHeight>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i7, $i6);

        $r3 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r3 != null goto label3;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r5;

     label3:
        $r4 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r1);

     label4:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        return;
    }

    public final void clearColorFilter()
    {
        android.widget.ImageView r0;

        r0 := @this: android.widget.ImageView;

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>(null);

        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.ImageView r0;
        float f0, f1;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.ImageView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.view.View: void drawableHotspotChanged(float,float)>(f0, f1);

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1;
        int[] $r2;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.ImageView r0;
        android.view.ViewHierarchyEncoder r1;
        int $i0;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.view.View: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getBaseline()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("layout:baseline", $i0);

        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.ImageView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.ImageView;

        $r1 = class "Landroid/widget/ImageView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public boolean getAdjustViewBounds()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mAdjustViewBounds>;

        return $z0;
    }

    public int getBaseline()
    {
        android.widget.ImageView r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getMeasuredHeight()>();

        return $i1;

     label1:
        $i0 = r0.<android.widget.ImageView: int mBaseline>;

        return $i0;
    }

    public boolean getBaselineAlignBottom()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        return $z0;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.widget.ImageView r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public boolean getCropToPadding()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        return $z0;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.BitmapDrawable $r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.ImageView;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable>;

        if $r2 != $r1 goto label1;

        r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable> = null;

     label1:
        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        return $r3;
    }

    public int getImageAlpha()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mAlpha>;

        return $i0;
    }

    public android.graphics.Matrix getImageMatrix()
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r2, $r3;

        r0 := @this: android.widget.ImageView;

        r1 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if r1 != null goto label1;

        $r2 = new android.graphics.Matrix;

        $r3 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke $r2.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r3);

        return $r2;

     label1:
        return r1;
    }

    public android.graphics.BlendMode getImageTintBlendMode()
    {
        android.widget.ImageView r0;
        android.graphics.BlendMode $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode>;

        return $r1;
    }

    public android.content.res.ColorStateList getImageTintList()
    {
        android.widget.ImageView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList>;

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getImageTintMode()
    {
        android.widget.ImageView r0;
        android.graphics.BlendMode r1;
        android.graphics.PorterDuff$Mode r2;

        r0 := @this: android.widget.ImageView;

        r1 = r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode>;

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.PorterDuff$Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>(r1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getMaxHeight()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mMaxHeight>;

        return $i0;
    }

    public int getMaxWidth()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mMaxWidth>;

        return $i0;
    }

    public android.widget.ImageView$ScaleType getScaleType()
    {
        android.widget.ImageView r0;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        return $r1;
    }

    public boolean hasOverlappingRendering()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean z0;

        r0 := @this: android.widget.ImageView;

        $r1 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;
        int i0, i1, $i2, $i3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 != $r2 goto label3;

        if r1 == null goto label2;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i2 goto label1;

        $i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i3 goto label2;

     label1:
        r0.<android.widget.ImageView: int mDrawableWidth> = i0;

        r0.<android.widget.ImageView: int mDrawableHeight> = i1;

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

     label2:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        goto label4;

     label3:
        specialinvoke r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label4:
        return;
    }

    public boolean isDefaultFocusHighlightNeeded(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, r2, r3, $r4;
        boolean $z1, $z2, z3, z4, $z5;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        $z1 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $z2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean hasFocusStateSpecified()>();

        if $z2 != 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        z4 = 0;

        $z5 = specialinvoke r0.<android.view.View: boolean isDefaultFocusHighlightNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2);

        if $z5 == 0 goto label4;

        z4 = 0;

        if z3 == 0 goto label4;

        z4 = 1;

     label4:
        return z4;
    }

    public boolean isOpaque()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1, z2;
        android.graphics.Xfermode $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.ImageView;

        $z0 = specialinvoke r0.<android.view.View: boolean isOpaque()>();

        if $z0 != 0 goto label2;

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        if $r2 != null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 != -1 goto label1;

        $i1 = r0.<android.widget.ImageView: int mAlpha>;

        $i2 = $i1 * 256;

        $i3 = $i2 >> 8;

        if $i3 != 255 goto label1;

        $z1 = specialinvoke r0.<android.widget.ImageView: boolean isFilledByImage()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, z2;
        int $i0;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label3;

        $z0 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getVisibility()>();

        if $i0 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z2, 0);

     label3:
        return;
    }

    public int[] onCreateDrawableState(int)
    {
        android.widget.ImageView r0;
        int i0, $i1, $i2;
        int[] r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ImageView: int[] mState>;

        if r1 != null goto label1;

        $r5 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(i0);

        return $r5;

     label1:
        $z0 = r0.<android.widget.ImageView: boolean mMergeState>;

        if $z0 != 0 goto label2;

        return r1;

     label2:
        $i1 = lengthof r1;

        $i2 = $i1 + i0;

        $r2 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>($i2);

        $r3 = r0.<android.widget.ImageView: int[] mState>;

        $r4 = staticinvoke <android.widget.ImageView: int[] mergeDrawableStates(int[],int[])>($r2, $r3);

        return $r4;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $z0 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label1:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.ImageView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.graphics.Matrix r2, $r4;
        android.graphics.drawable.Drawable $r3, $r5, $r6;
        float $f0, $f1;
        boolean $z1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r3 != null goto label1;

        return;

     label1:
        $i3 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if $i3 == 0 goto label7;

        $i4 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if $i4 != 0 goto label2;

        goto label7;

     label2:
        $r4 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r4 != null goto label3;

        $i24 = r0.<android.widget.ImageView: int mPaddingTop>;

        if $i24 != 0 goto label3;

        $i25 = r0.<android.widget.ImageView: int mPaddingLeft>;

        if $i25 != 0 goto label3;

        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label6;

     label3:
        i0 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z1 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        if $z1 == 0 goto label4;

        i1 = r0.<android.widget.ImageView: int mScrollX>;

        i2 = r0.<android.widget.ImageView: int mScrollY>;

        $i8 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $i23 = $i8 + i1;

        $i9 = r0.<android.widget.ImageView: int mPaddingTop>;

        $i22 = $i9 + i2;

        $i10 = r0.<android.widget.ImageView: int mRight>;

        $i12 = $i10 + i1;

        $i11 = r0.<android.widget.ImageView: int mLeft>;

        $i14 = $i12 - $i11;

        $i13 = r0.<android.widget.ImageView: int mPaddingRight>;

        $i21 = $i14 - $i13;

        $i15 = r0.<android.widget.ImageView: int mBottom>;

        $i17 = $i15 + i2;

        $i16 = r0.<android.widget.ImageView: int mTop>;

        $i19 = $i17 - $i16;

        $i18 = r0.<android.widget.ImageView: int mPaddingBottom>;

        $i20 = $i19 - $i18;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i23, $i22, $i21, $i20);

     label4:
        $i6 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $f1 = (float) $i6;

        $i7 = r0.<android.widget.ImageView: int mPaddingTop>;

        $f0 = (float) $i7;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        r2 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if r2 == null goto label5;

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r2);

     label5:
        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

     label6:
        return;

     label7:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53;
        android.graphics.drawable.Drawable $r1;
        boolean $z0, $z1, $z2, z3, z4, z6, z7, z9;
        byte $b9, $b14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11;
        double $d0;

        r0 := @this: android.widget.ImageView;

        i31 := @parameter0: int;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        f11 = 0.0F;

        z3 = 0;

        z4 = 0;

        i32 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i31);

        i33 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 != null goto label01;

        r0.<android.widget.ImageView: int mDrawableWidth> = -1;

        r0.<android.widget.ImageView: int mDrawableHeight> = -1;

        i34 = 0;

        i35 = 0;

        goto label09;

     label01:
        i36 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i37 = r0.<android.widget.ImageView: int mDrawableHeight>;

        i38 = i36;

        if i36 > 0 goto label02;

        i38 = 1;

     label02:
        i39 = i37;

        if i37 > 0 goto label03;

        i39 = 1;

     label03:
        $z0 = r0.<android.widget.ImageView: boolean mAdjustViewBounds>;

        if $z0 == 0 goto label08;

        if i32 == 1073741824 goto label04;

        z6 = 1;

        goto label05;

     label04:
        z6 = 0;

     label05:
        z3 = z6;

        if i33 == 1073741824 goto label06;

        z7 = 1;

        goto label07;

     label06:
        z7 = 0;

     label07:
        z4 = z7;

        $f10 = (float) i38;

        $f9 = (float) i39;

        f11 = $f10 / $f9;

        i34 = i39;

        i35 = i38;

        goto label09;

     label08:
        i34 = i39;

        i35 = i38;

     label09:
        i1 = r0.<android.widget.ImageView: int mPaddingLeft>;

        i2 = r0.<android.widget.ImageView: int mPaddingRight>;

        i42 = r0.<android.widget.ImageView: int mPaddingTop>;

        i43 = r0.<android.widget.ImageView: int mPaddingBottom>;

        if z3 != 0 goto label11;

        if z4 == 0 goto label10;

        goto label11;

     label10:
        $i25 = i1 + i2;

        $i26 = i35 + $i25;

        $i27 = virtualinvoke r0.<android.widget.ImageView: int getSuggestedMinimumWidth()>();

        i44 = staticinvoke <java.lang.Math: int max(int,int)>($i26, $i27);

        $i28 = i42 + i43;

        $i29 = i34 + $i28;

        $i30 = virtualinvoke r0.<android.widget.ImageView: int getSuggestedMinimumHeight()>();

        i45 = staticinvoke <java.lang.Math: int max(int,int)>($i29, $i30);

        i46 = staticinvoke <android.widget.ImageView: int resolveSizeAndState(int,int,int)>(i44, i31, 0);

        i47 = staticinvoke <android.widget.ImageView: int resolveSizeAndState(int,int,int)>(i45, i0, 0);

        goto label20;

     label11:
        $i3 = i35 + i1;

        $i5 = $i3 + i2;

        $i4 = r0.<android.widget.ImageView: int mMaxWidth>;

        i46 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i5, $i4, i31);

        $i6 = i34 + i42;

        $i8 = $i6 + i43;

        $i7 = r0.<android.widget.ImageView: int mMaxHeight>;

        i48 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i8, $i7, i0);

        $b9 = f11 cmpl 0.0F;

        if $b9 == 0 goto label19;

        i47 = i48;

        i49 = i46;

        $i10 = i46 - i1;

        $i11 = $i10 - i2;

        $f1 = (float) $i11;

        $i12 = i48 - i42;

        $i13 = $i12 - i43;

        $f0 = (float) $i13;

        $f2 = $f1 / $f0;

        $f3 = $f2 - f11;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $d0 = (double) $f4;

        $b14 = $d0 cmpl 1.0E-7;

        if $b14 <= 0 goto label18;

        if z3 == 0 goto label15;

        $i20 = i48 - i42;

        $i21 = $i20 - i43;

        $f7 = (float) $i21;

        $f8 = $f7 * f11;

        $i22 = (int) $f8;

        $i23 = $i22 + i1;

        i50 = $i23 + i2;

        if z4 != 0 goto label12;

        $z2 = <android.widget.ImageView: boolean sCompatAdjustViewBounds>;

        if $z2 != 0 goto label12;

        $i24 = r0.<android.widget.ImageView: int mMaxWidth>;

        i51 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>(i50, $i24, i31);

        goto label13;

     label12:
        i51 = i46;

     label13:
        if i50 > i51 goto label14;

        i51 = i50;

        z9 = 1;

        goto label16;

     label14:
        z9 = 0;

        goto label16;

     label15:
        i51 = i46;

        z9 = 0;

     label16:
        i47 = i48;

        i49 = i51;

        if z9 != 0 goto label18;

        i47 = i48;

        i49 = i51;

        if z4 == 0 goto label18;

        $i15 = i51 - i1;

        $i16 = $i15 - i2;

        $f5 = (float) $i16;

        $f6 = $f5 / f11;

        $i17 = (int) $f6;

        $i18 = $i17 + i42;

        i52 = $i18 + i43;

        i53 = i48;

        if z3 != 0 goto label17;

        i53 = i48;

        $z1 = <android.widget.ImageView: boolean sCompatAdjustViewBounds>;

        if $z1 != 0 goto label17;

        $i19 = r0.<android.widget.ImageView: int mMaxHeight>;

        i53 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>(i52, $i19, i0);

     label17:
        i47 = i53;

        i49 = i51;

        if i52 > i53 goto label18;

        i47 = i52;

        i49 = i51;

     label18:
        i46 = i49;

        goto label20;

     label19:
        i47 = i48;

     label20:
        virtualinvoke r0.<android.widget.ImageView: void setMeasuredDimension(int,int)>(i46, i47);

        return;
    }

    public void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.ImageView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        r2 = virtualinvoke r0.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>(i0);

     label1:
        return;
    }

    public void onVisibilityAggregated(boolean)
    {
        android.widget.ImageView r0;
        boolean z0, $z1;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void onVisibilityAggregated(boolean)>(z0);

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $z1 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z1 != 0 goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, 0);

     label1:
        return;
    }

    public void setAdjustViewBounds(boolean)
    {
        android.widget.ImageView r0;
        boolean z0;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = z0;

        if z0 == 0 goto label1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        virtualinvoke r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.widget.ImageView r0;
        int $i0, i1, i2;

        r0 := @this: android.widget.ImageView;

        i1 := @parameter0: int;

        i2 = i1 & 255;

        $i0 = r0.<android.widget.ImageView: int mAlpha>;

        if $i0 == i2 goto label1;

        r0.<android.widget.ImageView: int mAlpha> = i2;

        r0.<android.widget.ImageView: boolean mHasAlpha> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyAlpha()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    public void setBaseline(int)
    {
        android.widget.ImageView r0;
        int i0, $i1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.ImageView: int mBaseline>;

        if $i1 == i0 goto label1;

        r0.<android.widget.ImageView: int mBaseline> = i0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label1:
        return;
    }

    public void setBaselineAlignBottom(boolean)
    {
        android.widget.ImageView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        if $z1 == z0 goto label1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = z0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label1:
        return;
    }

    public final void setColorFilter(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, $r1);

        return;
    }

    public final void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.PorterDuffColorFilter $r2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>($r2);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.widget.ImageView r0;
        android.graphics.ColorFilter r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        if $r2 == r1 goto label1;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = r1;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyColorFilter()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    public void setCropToPadding(boolean)
    {
        android.widget.ImageView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        if $z1 == z0 goto label1;

        r0.<android.widget.ImageView: boolean mCropToPadding> = z0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.widget.ImageView: boolean mHaveFrame> = 1;

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        return z0;
    }

    public void setImageAlpha(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.ImageView: void setAlpha(int)>(i0);

        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        android.widget.ImageView r0;
        android.graphics.Bitmap r1;
        android.graphics.drawable.BitmapDrawable r2, $r3, $r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        r2 = r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable>;

        if r2 != null goto label1;

        $r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r4.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r6, r1);

        r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable> = $r4;

        goto label2;

     label1:
        virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>(r1);

     label2:
        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.BitmapDrawable mRecycleableBitmapDrawable>;

        virtualinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;
        int i0, i1, $i2, $i3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == r1 goto label3;

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(r1);

        $i2 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i2 goto label1;

        $i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label2:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label3:
        return;
    }

    public void setImageIcon(android.graphics.drawable.Icon)
    {
        android.widget.ImageView r0;
        android.content.Context $r1;
        android.graphics.drawable.Icon r2;
        android.graphics.drawable.Drawable r3;

        r0 := @this: android.widget.ImageView;

        r2 := @parameter0: android.graphics.drawable.Icon;

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        $r1 = r0.<android.widget.ImageView: android.content.Context mContext>;

        r3 = virtualinvoke r2.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r1);

     label2:
        virtualinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r3);

        return;
    }

    public java.lang.Runnable setImageIconAsync(android.graphics.drawable.Icon)
    {
        android.widget.ImageView r0;
        android.content.Context $r1;
        android.widget.ImageView$ImageDrawableCallback $r2;
        android.graphics.drawable.Icon r3;
        android.graphics.drawable.Drawable r4;

        r0 := @this: android.widget.ImageView;

        r3 := @parameter0: android.graphics.drawable.Icon;

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        $r1 = r0.<android.widget.ImageView: android.content.Context mContext>;

        r4 = virtualinvoke r3.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r1);

     label2:
        $r2 = new android.widget.ImageView$ImageDrawableCallback;

        specialinvoke $r2.<android.widget.ImageView$ImageDrawableCallback: void <init>(android.widget.ImageView,android.graphics.drawable.Drawable,android.net.Uri,int)>(r0, r4, null, 0);

        return $r2;
    }

    public void setImageLevel(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mLevel> = i0;

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

     label1:
        return;
    }

    public void setImageMatrix(android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r2, $r3, $r4, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Matrix;

        r5 = r1;

        if r1 == null goto label1;

        r5 = r1;

        $z2 = virtualinvoke r1.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 == 0 goto label1;

        r5 = null;

     label1:
        if r5 != null goto label2;

        $r4 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z1 = virtualinvoke $r4.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 == 0 goto label3;

     label2:
        if r5 == null goto label4;

        $r2 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z0 = virtualinvoke $r2.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label4;

     label3:
        $r3 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r5);

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public void setImageResource(int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i1 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i2 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.ImageView: int mResource> = i0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        $i3 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i1 != $i3 goto label1;

        $i4 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i2 == $i4 goto label2;

     label1:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label2:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        return;
    }

    public java.lang.Runnable setImageResourceAsync(int)
    {
        android.widget.ImageView r0;
        int i0, i1;
        android.content.Context $r2;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.graphics.drawable.Drawable r6;
        android.widget.ImageView$ImageDrawableCallback $r8;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r6 = null;

        i1 = i0;

        if i0 == 0 goto label4;

     label1:
        $r2 = virtualinvoke r0.<android.widget.ImageView: android.content.Context getContext()>();

        r6 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label2:
        i1 = i0;

        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r5, $r3);

        i1 = 0;

        r6 = null;

     label4:
        $r8 = new android.widget.ImageView$ImageDrawableCallback;

        specialinvoke $r8.<android.widget.ImageView$ImageDrawableCallback: void <init>(android.widget.ImageView,android.graphics.drawable.Drawable,android.net.Uri,int)>(r0, r6, null, i1);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setImageState(int[], boolean)
    {
        android.widget.ImageView r0;
        int[] r1;
        boolean z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r0.<android.widget.ImageView: int[] mState> = r1;

        r0.<android.widget.ImageView: boolean mMergeState> = z0;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.widget.ImageView: void refreshDrawableState()>();

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

     label1:
        return;
    }

    public void setImageTintBlendMode(android.graphics.BlendMode)
    {
        android.widget.ImageView r0;
        android.graphics.BlendMode r1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.BlendMode;

        r0.<android.widget.ImageView: android.graphics.BlendMode mDrawableBlendMode> = r1;

        r0.<android.widget.ImageView: boolean mHasDrawableBlendMode> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        return;
    }

    public void setImageTintList(android.content.res.ColorStateList)
    {
        android.widget.ImageView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = r1;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        return;
    }

    public void setImageTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.ImageView r0;
        int $i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        if r1 == null goto label1;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.ImageView: void setImageTintBlendMode(android.graphics.BlendMode)>(r2);

        return;
    }

    public void setImageURI(android.net.Uri)
    {
        android.widget.ImageView r0;
        android.net.Uri r1, r2;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.net.Uri;

        $i2 = r0.<android.widget.ImageView: int mResource>;

        if $i2 != 0 goto label1;

        r2 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if r2 == r1 goto label4;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

     label1:
        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = r1;

        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        $i4 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i4 goto label2;

        $i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i3 goto label3;

     label2:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label3:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public java.lang.Runnable setImageURIAsync(android.net.Uri)
    {
        android.widget.ImageView r0;
        int i0;
        android.net.Uri r1, r3;
        android.widget.ImageView$ImageDrawableCallback $r2;
        boolean $z0;
        android.graphics.drawable.Drawable r4;

        r0 := @this: android.widget.ImageView;

        r3 := @parameter0: android.net.Uri;

        i0 = r0.<android.widget.ImageView: int mResource>;

        r4 = null;

        if i0 != 0 goto label2;

        r1 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if r1 == r3 goto label1;

        if r3 == null goto label2;

        if r1 == null goto label2;

        $z0 = virtualinvoke r3.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        return null;

     label2:
        if r3 != null goto label3;

        goto label4;

     label3:
        r4 = specialinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawableFromUri(android.net.Uri)>(r3);

     label4:
        if r4 != null goto label5;

        r3 = null;

     label5:
        $r2 = new android.widget.ImageView$ImageDrawableCallback;

        specialinvoke $r2.<android.widget.ImageView$ImageDrawableCallback: void <init>(android.widget.ImageView,android.graphics.drawable.Drawable,android.net.Uri,int)>(r0, r4, r3, 0);

        return $r2;
    }

    public void setMaxHeight(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mMaxHeight> = i0;

        return;
    }

    public void setMaxWidth(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mMaxWidth> = i0;

        return;
    }

    public void setScaleType(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView r0;
        android.widget.ImageView$ScaleType r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.widget.ImageView$ScaleType;

        if r1 == null goto label2;

        $r2 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 == r1 goto label1;

        r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = r1;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;

     label2:
        throw null;
    }

    public void setSelected(boolean)
    {
        android.widget.ImageView r0;
        boolean z0;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

        return;
    }

    public void setVisibility(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, z2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void setVisibility(int)>(i0);

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label3;

        $z0 = <android.widget.ImageView: boolean sCompatDrawableVisibilityDispatch>;

        if $z0 == 0 goto label3;

        if i0 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z2, 0);

     label3:
        return;
    }

    public final void setXfermode(android.graphics.Xfermode)
    {
        android.widget.ImageView r0;
        android.graphics.Xfermode r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        if $r2 == r1 goto label1;

        r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode> = r1;

        r0.<android.widget.ImageView: boolean mHasXfermode> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyXfermode()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, z1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == r1 goto label2;

        $z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
