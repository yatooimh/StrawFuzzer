public class android.widget.LinearLayout extends android.view.ViewGroup
{
    public static final int HORIZONTAL;
    private static final int INDEX_BOTTOM;
    private static final int INDEX_CENTER_VERTICAL;
    private static final int INDEX_FILL;
    private static final int INDEX_TOP;
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_END;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_NONE;
    public static final int VERTICAL;
    private static final int VERTICAL_GRAVITY_COUNT;
    private static boolean sCompatibilityDone;
    private static boolean sRemeasureWeightedChildren;
    private final boolean mAllowInconsistentMeasurement;
    private boolean mBaselineAligned;
    private int mBaselineAlignedChildIndex;
    private int mBaselineChildTop;
    private android.graphics.drawable.Drawable mDivider;
    private int mDividerHeight;
    private int mDividerPadding;
    private int mDividerWidth;
    private int mGravity;
    private int mLayoutDirection;
    private int[] mMaxAscent;
    private int[] mMaxDescent;
    private int mOrientation;
    private int mShowDividers;
    private int mTotalLength;
    private boolean mUseLargestChild;
    private float mWeightSum;

    static void <clinit>()
    {
        <android.widget.LinearLayout: int VERTICAL_GRAVITY_COUNT> = 4;

        <android.widget.LinearLayout: int VERTICAL> = 1;

        <android.widget.LinearLayout: int SHOW_DIVIDER_NONE> = 0;

        <android.widget.LinearLayout: int SHOW_DIVIDER_MIDDLE> = 2;

        <android.widget.LinearLayout: int SHOW_DIVIDER_END> = 4;

        <android.widget.LinearLayout: int SHOW_DIVIDER_BEGINNING> = 1;

        <android.widget.LinearLayout: int INDEX_TOP> = 1;

        <android.widget.LinearLayout: int INDEX_FILL> = 3;

        <android.widget.LinearLayout: int INDEX_CENTER_VERTICAL> = 0;

        <android.widget.LinearLayout: int INDEX_BOTTOM> = 2;

        <android.widget.LinearLayout: int HORIZONTAL> = 0;

        <android.widget.LinearLayout: boolean sCompatibilityDone> = 0;

        <android.widget.LinearLayout: boolean sRemeasureWeightedChildren> = 1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.content.res.TypedArray r3;
        boolean $z1, $z2, z3, z4, z5;
        float $f0;
        android.graphics.drawable.Drawable $r4;
        android.content.pm.ApplicationInfo $r5, $r6;
        int[] $r7, $r8;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i6, i0);

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = -1;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        r0.<android.widget.LinearLayout: int mGravity> = 8388659;

        r0.<android.widget.LinearLayout: int mLayoutDirection> = -1;

        $z1 = <android.widget.LinearLayout: boolean sCompatibilityDone>;

        if $z1 != 0 goto label3;

        if r1 == null goto label3;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i5 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i5 < 28 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        <android.widget.LinearLayout: boolean sRemeasureWeightedChildren> = z3;

        <android.widget.LinearLayout: boolean sCompatibilityDone> = 1;

     label3:
        $r7 = <com.android.internal.R$styleable: int[] LinearLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, i6, i0);

        $r8 = <com.android.internal.R$styleable: int[] LinearLayout>;

        virtualinvoke r0.<android.widget.LinearLayout: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r8, r2, r3, i6, i0);

        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if i7 < 0 goto label4;

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>(i7);

     label4:
        i8 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if i8 < 0 goto label5;

        virtualinvoke r0.<android.widget.LinearLayout: void setGravity(int)>(i8);

     label5:
        z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if z4 != 0 goto label6;

        virtualinvoke r0.<android.widget.LinearLayout: void setBaselineAligned(boolean)>(z4);

     label6:
        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(4, -1.0F);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f0;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = $i1;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = $z2;

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r0.<android.widget.LinearLayout: int mShowDividers> = $i2;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, 0);

        r0.<android.widget.LinearLayout: int mDividerPadding> = $i3;

        $r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(5);

        virtualinvoke r0.<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>($r4);

        $r5 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i4 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 > 23 goto label7;

        z5 = 1;

        goto label8;

     label7:
        z5 = 0;

     label8:
        r0.<android.widget.LinearLayout: boolean mAllowInconsistentMeasurement> = z5;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private boolean allViewsAreGoneBefore(int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int $i0, i1, i2;

        r0 := @this: android.widget.LinearLayout;

        i1 := @parameter0: int;

        i2 = i1 + -1;

     label1:
        if i2 < 0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i2);

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label2;

        return 0;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return 1;
    }

    private void forceUniformHeight(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredHeight()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

        i8 = 0;

     label1:
        if i8 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i8);

        if r1 == null goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i6 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i6 != -1 goto label2;

        i3 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        $i7 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        r2.<android.widget.LinearLayout$LayoutParams: int width> = $i7;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, 0, i2, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int width> = i3;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        return;
    }

    private void forceUniformWidth(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

        i8 = 0;

     label1:
        if i8 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i8);

        if r1 == null goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i6 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i6 != -1 goto label2;

        i3 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        $i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        r2.<android.widget.LinearLayout$LayoutParams: int height> = $i7;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i2, 0, i1, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int height> = i3;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        return;
    }

    private android.view.View getLastNonGoneChild()
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int $i0, $i1, i2;

        r0 := @this: android.widget.LinearLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i2);

        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i1 == 8 goto label2;

        return r1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return null;
    }

    private boolean isShowingDividers()
    {
        android.widget.LinearLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mShowDividers>;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i1, $i5, $i4);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        return $z0;
    }

    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;
        boolean z0, $z1, $z2;
        android.view.ViewGroup$LayoutParams $r2, $r3;
        android.view.View r4, r6;
        android.widget.LinearLayout$LayoutParams r5, r7;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i18 = 0;

     label01:
        if i18 >= i0 goto label05;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i18);

        if r4 == null goto label04;

        $i11 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i11 == 8 goto label04;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i18);

        if $z2 == 0 goto label04;

        $r3 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r3;

        if z0 == 0 goto label02;

        $i16 = virtualinvoke r4.<android.view.View: int getRight()>();

        $i17 = r5.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i19 = $i16 + $i17;

        goto label03;

     label02:
        $i12 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $i13 = r5.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i15 = $i12 - $i13;

        $i14 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i19 = $i15 - $i14;

     label03:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i19);

     label04:
        i18 = i18 + 1;

        goto label01;

     label05:
        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z1 == 0 goto label10;

        r6 = specialinvoke r0.<android.widget.LinearLayout: android.view.View getLastNonGoneChild()>();

        if r6 != null goto label07;

        if z0 == 0 goto label06;

        i20 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        goto label09;

     label06:
        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i8 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i10 = $i7 - $i8;

        $i9 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i20 = $i10 - $i9;

        goto label09;

     label07:
        $r2 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.LinearLayout$LayoutParams) $r2;

        if z0 == 0 goto label08;

        $i3 = virtualinvoke r6.<android.view.View: int getLeft()>();

        $i4 = r7.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i6 = $i3 - $i4;

        $i5 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i20 = $i6 - $i5;

        goto label09;

     label08:
        $i1 = virtualinvoke r6.<android.view.View: int getRight()>();

        $i2 = r7.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i20 = $i1 + $i2;

     label09:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i20);

     label10:
        return;
    }

    void drawDividersVertical(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r2, $r3;
        android.view.View r4, r6;
        android.widget.LinearLayout$LayoutParams r5, r7;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i13 = 0;

     label1:
        if i13 >= i0 goto label3;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i13);

        if r4 == null goto label2;

        $i7 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i7 == 8 goto label2;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i13);

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i8 = virtualinvoke r4.<android.view.View: int getTop()>();

        $i9 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i11 = $i8 - $i9;

        $i10 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i12 = $i11 - $i10;

        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, $i12);

     label2:
        i13 = i13 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z0 == 0 goto label6;

        r6 = specialinvoke r0.<android.widget.LinearLayout: android.view.View getLastNonGoneChild()>();

        if r6 != null goto label4;

        $i3 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i6 = $i3 - $i4;

        $i5 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i14 = $i6 - $i5;

        goto label5;

     label4:
        $r2 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i1 = virtualinvoke r6.<android.view.View: int getBottom()>();

        $i2 = r7.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i14 = $i1 + $i2;

     label5:
        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, i14);

     label6:
        return;
    }

    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i7 - $i6;

        $i8 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i9 = $i8 + i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, i0, $i10, $i9);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i4 = $i1 + $i2;

        $i3 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i5 = $i3 + i0;

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i9 = $i6 - $i7;

        $i8 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i9 - $i8;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, $i4, $i5, $i10);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.LinearLayout r0;
        android.view.ViewHierarchyEncoder r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.view.ViewGroup: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $z0 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("layout:baselineAligned", $z0);

        $i0 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("layout:baselineAlignedChildIndex", $i0);

        $i1 = r0.<android.widget.LinearLayout: int mBaselineChildTop>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("measurement:baselineChildTop", $i1);

        $i2 = r0.<android.widget.LinearLayout: int mOrientation>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("measurement:orientation", $i2);

        $i3 = r0.<android.widget.LinearLayout: int mGravity>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("measurement:gravity", $i3);

        $i4 = r0.<android.widget.LinearLayout: int mTotalLength>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("measurement:totalLength", $i4);

        $i5 = r0.<android.widget.LinearLayout: int mTotalLength>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("layout:totalLength", $i5);

        $z1 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("layout:useLargestChild", $z1);

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        int i0;
        android.widget.LinearLayout$LayoutParams $r1, $r2;

        r0 := @this: android.widget.LinearLayout;

        i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if i0 != 0 goto label1;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r2;

     label1:
        if i0 != 1 goto label2;

        $r1 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r1.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;

     label2:
        return null;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;
        android.widget.LinearLayout$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = <android.widget.LinearLayout: boolean sPreserveMarginParamsInLayoutParamConversion>;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z1 == 0 goto label1;

        $r5 = new android.widget.LinearLayout$LayoutParams;

        $r6 = (android.widget.LinearLayout$LayoutParams) r1;

        specialinvoke $r5.<android.widget.LinearLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>($r6);

        return $r5;

     label1:
        $z2 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label2;

        $r3 = new android.widget.LinearLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.LinearLayout r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.LinearLayout;

        $r1 = class "Landroid/widget/LinearLayout;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getBaseline()
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, $i27, $i28, $i29;
        java.lang.RuntimeException $r2, $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r5;

        r0 := @this: android.widget.LinearLayout;

        $i2 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i2 >= 0 goto label1;

        $i22 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i22;

     label1:
        i23 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        i24 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if i23 <= i24 goto label7;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i24);

        i0 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        if i0 != -1 goto label3;

        $i21 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i21 != 0 goto label2;

        return -1;

     label2:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");

        throw $r3;

     label3:
        i25 = r0.<android.widget.LinearLayout: int mBaselineChildTop>;

        i26 = i25;

        $i3 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i3 != 1 goto label6;

        $i4 = r0.<android.widget.LinearLayout: int mGravity>;

        i1 = $i4 & 112;

        i26 = i25;

        if i1 == 48 goto label6;

        if i1 == 16 goto label5;

        if i1 == 80 goto label4;

        i26 = i25;

        goto label6;

     label4:
        $i16 = r0.<android.widget.LinearLayout: int mBottom>;

        $i15 = r0.<android.widget.LinearLayout: int mTop>;

        $i18 = $i16 - $i15;

        $i17 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i20 = $i18 - $i17;

        $i19 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i26 = $i20 - $i19;

        goto label6;

     label5:
        $i6 = r0.<android.widget.LinearLayout: int mBottom>;

        $i5 = r0.<android.widget.LinearLayout: int mTop>;

        $i8 = $i6 - $i5;

        $i7 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i10 = $i8 - $i7;

        $i9 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i12 = $i10 - $i9;

        $i11 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i13 = $i12 - $i11;

        $i14 = $i13 / 2;

        i26 = i25 + $i14;

     label6:
        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.LinearLayout$LayoutParams) $r4;

        $i27 = $r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i28 = $i27 + i26;

        $i29 = $i28 + i0;

        return $i29;

     label7:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");

        throw $r2;
    }

    public int getBaselineAlignedChildIndex()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        return $i0;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return 0;
    }

    public android.graphics.drawable.Drawable getDividerDrawable()
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        return $r1;
    }

    public int getDividerPadding()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        return $i0;
    }

    public int getDividerWidth()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        return $i0;
    }

    public int getGravity()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mGravity>;

        return $i0;
    }

    int getLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getOrientation()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        return $i0;
    }

    public int getShowDividers()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mShowDividers>;

        return $i0;
    }

    android.view.View getVirtualChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0;
        android.view.View $r1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i0);

        return $r1;
    }

    int getVirtualChildCount()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        return $i0;
    }

    public float getWeightSum()
    {
        android.widget.LinearLayout r0;
        float $f0;

        r0 := @this: android.widget.LinearLayout;

        $f0 = r0.<android.widget.LinearLayout: float mWeightSum>;

        return $f0;
    }

    protected boolean hasDividerBeforeChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z2, z3, z4, z5;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        z3 = 0;

        if i0 != i1 goto label2;

        $i6 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i7 = $i6 & 4;

        if $i7 == 0 goto label1;

        z3 = 1;

     label1:
        return z3;

     label2:
        $z2 = specialinvoke r0.<android.widget.LinearLayout: boolean allViewsAreGoneBefore(int)>(i0);

        if $z2 == 0 goto label4;

        z4 = 0;

        $i4 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i5 = $i4 & 1;

        if $i5 == 0 goto label3;

        z4 = 1;

     label3:
        return z4;

     label4:
        z5 = 0;

        $i2 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label5;

        z5 = 1;

     label5:
        return z5;
    }

    public boolean isBaselineAligned()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        return $z0;
    }

    public boolean isMeasureWithLargestChildEnabled()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        return $z0;
    }

    void layoutHorizontal(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i50, i51, i52, i53, i54, i55, i56, i58, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70;
        int[] r1, r2;
        android.view.View r3;
        android.widget.LinearLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams $r5;
        byte b57;

        r0 := @this: android.widget.LinearLayout;

        i50 := @parameter0: int;

        i51 := @parameter1: int;

        i52 := @parameter2: int;

        i53 := @parameter3: int;

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i0 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        i1 = i53 - i51;

        i2 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i3 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i4 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i5 = r0.<android.widget.LinearLayout: int mGravity>;

        z1 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        r1 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        i6 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        $i12 = i5 & 8388615;

        i54 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i12, i6);

        if i54 == 1 goto label02;

        if i54 == 5 goto label01;

        i55 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        goto label03;

     label01:
        $i46 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i47 = $i46 + i52;

        $i49 = $i47 - i50;

        $i48 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i55 = $i49 - $i48;

        goto label03;

     label02:
        $i17 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i14 = i52 - i50;

        $i13 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i15 = $i14 - $i13;

        $i16 = $i15 / 2;

        i55 = $i17 + $i16;

     label03:
        if z0 == 0 goto label04;

        i56 = i4 - 1;

        b57 = -1;

        goto label05;

     label04:
        i56 = 0;

        b57 = 1;

     label05:
        i58 = 0;

        i60 = i55;

     label06:
        if i58 >= i4 goto label19;

        $i18 = b57 * i58;

        i8 = i56 + $i18;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i8);

        if r3 != null goto label07;

        $i45 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i8);

        i60 = i60 + $i45;

        goto label18;

     label07:
        $i19 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i19 == 8 goto label18;

        i9 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i10 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.LinearLayout$LayoutParams) $r5;

        if z1 == 0 goto label08;

        $i44 = r4.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i44 == -1 goto label08;

        i61 = virtualinvoke r3.<android.view.View: int getBaseline()>();

        goto label09;

     label08:
        i61 = -1;

     label09:
        i62 = r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i62 >= 0 goto label10;

        i62 = i5 & 112;

        goto label10;

     label10:
        i63 = i62 & 112;

        if i63 == 16 goto label15;

        if i63 == 48 goto label13;

        if i63 == 80 goto label11;

        i64 = i0;

        goto label16;

     label11:
        $i38 = i1 - i2;

        $i40 = $i38 - i10;

        $i39 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i65 = $i40 - $i39;

        if i61 == -1 goto label12;

        i11 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        $i42 = r2[2];

        $i41 = i11 - i61;

        $i43 = $i42 - $i41;

        i64 = i65 - $i43;

        goto label16;

     label12:
        i64 = i65;

        goto label16;

     label13:
        $i35 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i66 = $i35 + i0;

        if i61 == -1 goto label14;

        $i36 = r1[1];

        $i37 = $i36 - i61;

        i64 = i66 + $i37;

        goto label16;

     label14:
        i64 = i66;

        goto label16;

     label15:
        $i20 = i1 - i0;

        $i21 = $i20 - i3;

        $i22 = $i21 - i10;

        $i23 = $i22 / 2;

        $i25 = $i23 + i0;

        $i24 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i27 = $i25 + $i24;

        $i26 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i64 = $i27 - $i26;

     label16:
        i67 = i60;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i8);

        if $z2 == 0 goto label17;

        $i34 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i67 = i60 + $i34;

     label17:
        $i28 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i68 = i67 + $i28;

        $i29 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r3);

        $i30 = i68 + $i29;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r3, $i30, i64, i9, i10);

        i69 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i70 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i31 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i8);

        i58 = i58 + $i31;

        $i32 = i9 + i69;

        $i33 = $i32 + i70;

        i60 = i68 + $i33;

        goto label18;

     label18:
        i58 = i58 + 1;

        goto label06;

     label19:
        return;
    }

    void layoutVertical(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        i40 := @parameter0: int;

        i41 := @parameter1: int;

        i42 := @parameter2: int;

        i43 := @parameter3: int;

        i0 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        i1 = i42 - i40;

        i2 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i3 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i4 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i5 = r0.<android.widget.LinearLayout: int mGravity>;

        i44 = i5 & 112;

        if i44 == 16 goto label02;

        if i44 == 80 goto label01;

        i45 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        goto label03;

     label01:
        $i36 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i37 = $i36 + i43;

        $i39 = $i37 - i41;

        $i38 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i45 = $i39 - $i38;

        goto label03;

     label02:
        $i12 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i9 = i43 - i41;

        $i8 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i10 = $i9 - $i8;

        $i11 = $i10 / 2;

        i45 = $i12 + $i11;

     label03:
        i46 = 0;

        i47 = i0;

     label04:
        i48 = i47;

        if i46 >= i4 goto label12;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i46);

        if r1 != null goto label05;

        $i35 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i46);

        i45 = i45 + $i35;

        goto label11;

     label05:
        $i13 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i13 == 8 goto label11;

        i6 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        i49 = r2.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i49 >= 0 goto label06;

        i49 = i5 & 8388615;

        goto label06;

     label06:
        $i14 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        $i15 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i49, $i14);

        i50 = $i15 & 7;

        if i50 == 1 goto label08;

        if i50 == 5 goto label07;

        $i34 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i51 = $i34 + i48;

        goto label09;

     label07:
        $i31 = i1 - i2;

        $i33 = $i31 - i6;

        $i32 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i51 = $i33 - $i32;

        goto label09;

     label08:
        $i16 = i1 - i0;

        $i17 = $i16 - i3;

        $i18 = $i17 - i6;

        $i19 = $i18 / 2;

        $i21 = $i19 + i48;

        $i20 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i23 = $i21 + $i20;

        $i22 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i51 = $i23 - $i22;

     label09:
        i52 = i45;

        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i46);

        if $z0 == 0 goto label10;

        $i30 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i52 = i45 + $i30;

     label10:
        $i24 = r2.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i53 = i52 + $i24;

        $i25 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r1);

        $i26 = i53 + $i25;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r1, i51, $i26, i6, i7);

        i54 = r2.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i55 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r1);

        $i27 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r1, i46);

        i46 = i46 + $i27;

        $i28 = i7 + i54;

        $i29 = $i28 + i55;

        i45 = i53 + $i29;

        goto label11;

     label11:
        i46 = i46 + 1;

        i47 = i48;

        goto label04;

     label12:
        return;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, i2, i3, i4);

        return;
    }

    void measureHorizontal(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i51, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i127, $i128, $i129, $i130, $i131, $i132, $i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, $i150, $i151, i152, $i153, i154, $i155, i156, i157, i158, i159, i161, i162, $i163, i164, i168, i169, $i170, i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, i188, i189, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, i199, i200, i201, i202, i203, i204, i206, i209, i211, i212, i213, i214, i215, i216, i217, i219, i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, i234, $i235, $i236, i237, $i238, i239, i240, i241, i242, i243, i244, i245, i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273;
        int[] r1, r2, $r4, $r5, $r6, $r12;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, z10, z11, z13, z14, z15, $z17, z18, z19;
        android.view.View r3, r15, r17, r18;
        byte $b7, $b18, $b50, $b52, $b85, $b126, $b160;
        android.view.ViewGroup$LayoutParams $r7, $r8, $r10, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, f8, f9;
        android.widget.LinearLayout$LayoutParams $r9, r13, r16, r19;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i134 = 0;

        i2 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i135 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $r4 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        if $r4 == null goto label01;

        $r12 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        if $r12 != null goto label02;

     label01:
        $r5 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxAscent> = $r5;

        $r6 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxDescent> = $r6;

     label02:
        r1 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        z0 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        z1 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        if i135 != 1073741824 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        i136 = 0;

        i137 = 0;

        i138 = 0;

        i139 = 0;

        f6 = 0.0F;

        i140 = 0;

        i141 = 0;

        z8 = 1;

        i142 = -2147483648;

        z9 = 0;

        z10 = 0;

     label05:
        if i138 >= i2 goto label35;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i138);

        if r3 != null goto label06;

        $i131 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i132 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i138);

        $i133 = $i131 + $i132;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i133;

        goto label34;

     label06:
        $i83 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i83 != 8 goto label07;

        $i130 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i138);

        i138 = i138 + $i130;

        goto label34;

     label07:
        i4 = i137 + 1;

        $z6 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i138);

        if $z6 == 0 goto label08;

        $i128 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i127 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i129 = $i128 + $i127;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i129;

     label08:
        $r11 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r13 = (android.widget.LinearLayout$LayoutParams) $r11;

        $f4 = r13.<android.widget.LinearLayout$LayoutParams: float weight>;

        f6 = f6 + $f4;

        $i84 = r13.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i84 != 0 goto label09;

        $f5 = r13.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b126 = $f5 cmpl 0.0F;

        if $b126 <= 0 goto label09;

        z11 = 1;

        goto label10;

     label09:
        z11 = 0;

     label10:
        if i135 != 1073741824 goto label14;

        if z11 == 0 goto label14;

        if z7 == 0 goto label11;

        $i124 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i122 = r13.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i121 = r13.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i123 = $i122 + $i121;

        $i125 = $i124 + $i123;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i125;

        goto label12;

     label11:
        i143 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i113 = r13.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i115 = $i113 + i143;

        $i114 = r13.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i116 = $i115 + $i114;

        $i117 = staticinvoke <java.lang.Math: int max(int,int)>(i143, $i116);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i117;

     label12:
        if z0 == 0 goto label13;

        $i118 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i144 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i118, 0);

        $i119 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i120 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i119, 0);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i144, $i120);

        goto label21;

     label13:
        z9 = 1;

        goto label21;

     label14:
        if z11 == 0 goto label15;

        r13.<android.widget.LinearLayout$LayoutParams: int width> = -2;

     label15:
        $b85 = f6 cmpl 0.0F;

        if $b85 != 0 goto label16;

        i145 = r0.<android.widget.LinearLayout: int mTotalLength>;

        goto label17;

     label16:
        i145 = 0;

     label17:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r3, i138, i0, i145, i1, 0);

        i146 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        if z11 == 0 goto label18;

        r13.<android.widget.LinearLayout$LayoutParams: int width> = 0;

        i136 = i136 + i146;

        goto label18;

     label18:
        if z7 == 0 goto label19;

        $i108 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i105 = r13.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i107 = $i105 + i146;

        $i106 = r13.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i109 = $i107 + $i106;

        $i110 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i111 = $i109 + $i110;

        $i112 = $i108 + $i111;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i112;

        goto label20;

     label19:
        i147 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i87 = i147 + i146;

        $i86 = r13.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i89 = $i87 + $i86;

        $i88 = r13.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i90 = $i89 + $i88;

        $i91 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i92 = $i90 + $i91;

        $i93 = staticinvoke <java.lang.Math: int max(int,int)>(i147, $i92);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i93;

     label20:
        if z1 == 0 goto label21;

        i142 = staticinvoke <java.lang.Math: int max(int,int)>(i146, i142);

        goto label21;

     label21:
        i148 = i134;

        i149 = i141;

        z13 = 0;

        z14 = z10;

        if i3 == 1073741824 goto label22;

        z13 = 0;

        z14 = z10;

        $i104 = r13.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i104 != -1 goto label22;

        z14 = 1;

        z13 = 1;

     label22:
        $i150 = r13.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i151 = r13.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i152 = $i150 + $i151;

        $i153 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i154 = $i153 + i152;

        $i155 = virtualinvoke r3.<android.view.View: int getMeasuredState()>();

        i5 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i140, $i155);

        if z0 == 0 goto label26;

        i156 = virtualinvoke r3.<android.view.View: int getBaseline()>();

        if i156 == -1 goto label25;

        $i95 = r13.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i95 >= 0 goto label23;

        i157 = r0.<android.widget.LinearLayout: int mGravity>;

        goto label24;

     label23:
        i157 = r13.<android.widget.LinearLayout$LayoutParams: int gravity>;

     label24:
        $i96 = i157 & 112;

        $i97 = $i96 >> 4;

        $i98 = $i97 & -2;

        i158 = $i98 >> 1;

        $i99 = r1[i158];

        $i100 = staticinvoke <java.lang.Math: int max(int,int)>($i99, i156);

        r1[i158] = $i100;

        $i102 = r2[i158];

        $i101 = i154 - i156;

        $i103 = staticinvoke <java.lang.Math: int max(int,int)>($i102, $i101);

        r2[i158] = $i103;

        goto label26;

     label25:
        goto label26;

     label26:
        i159 = i152;

        i139 = staticinvoke <java.lang.Math: int max(int,int)>(i139, i154);

        if z8 == 0 goto label27;

        $i94 = r13.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i94 != -1 goto label27;

        z15 = 1;

        goto label28;

     label27:
        z15 = 0;

     label28:
        $f7 = r13.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b160 = $f7 cmpl 0.0F;

        if $b160 <= 0 goto label30;

        if z13 == 0 goto label29;

        i154 = i152;

        goto label29;

     label29:
        i161 = staticinvoke <java.lang.Math: int max(int,int)>(i149, i154);

        i162 = i148;

        goto label33;

     label30:
        if z13 == 0 goto label31;

        goto label32;

     label31:
        i159 = i154;

     label32:
        i162 = staticinvoke <java.lang.Math: int max(int,int)>(i148, i159);

        i161 = i149;

     label33:
        $i163 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i138);

        i164 = i138 + $i163;

        i137 = i4;

        z10 = z14;

        z8 = z15;

        i138 = i164;

        i140 = i5;

        i134 = i162;

        i141 = i161;

     label34:
        i138 = i138 + 1;

        goto label05;

     label35:
        i168 = i134;

        i169 = i142;

        if i137 <= 0 goto label36;

        $z5 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i2);

        if $z5 == 0 goto label36;

        $i81 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i80 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i82 = $i81 + $i80;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i82;

        goto label36;

     label36:
        $i170 = r1[1];

        if $i170 != -1 goto label38;

        $i77 = r1[0];

        if $i77 != -1 goto label38;

        $i78 = r1[2];

        if $i78 != -1 goto label38;

        $i79 = r1[3];

        if $i79 == -1 goto label37;

        goto label38;

     label37:
        i171 = i139;

        goto label39;

     label38:
        $i172 = r1[3];

        $i173 = r1[0];

        $i174 = r1[1];

        $i175 = r1[2];

        $i176 = staticinvoke <java.lang.Math: int max(int,int)>($i174, $i175);

        $i177 = staticinvoke <java.lang.Math: int max(int,int)>($i173, $i176);

        $i178 = staticinvoke <java.lang.Math: int max(int,int)>($i172, $i177);

        $i179 = r2[3];

        $i180 = r2[0];

        $i181 = r2[1];

        $i182 = r2[2];

        $i183 = staticinvoke <java.lang.Math: int max(int,int)>($i181, $i182);

        $i184 = staticinvoke <java.lang.Math: int max(int,int)>($i180, $i183);

        $i185 = staticinvoke <java.lang.Math: int max(int,int)>($i179, $i184);

        $i186 = $i178 + $i185;

        i171 = staticinvoke <java.lang.Math: int max(int,int)>(i139, $i186);

     label39:
        if z1 == 0 goto label48;

        if i135 == -2147483648 goto label41;

        if i135 != 0 goto label40;

        goto label41;

     label40:
        goto label48;

     label41:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i188 = 0;

     label42:
        if i188 >= i2 goto label47;

        r15 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i188);

        if r15 != null goto label43;

        $i74 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i75 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i188);

        $i76 = $i74 + $i75;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i76;

        goto label46;

     label43:
        $i56 = virtualinvoke r15.<android.view.View: int getVisibility()>();

        if $i56 != 8 goto label44;

        $i73 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r15, i188);

        i188 = i188 + $i73;

        goto label46;

     label44:
        $r10 = virtualinvoke r15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r16 = (android.widget.LinearLayout$LayoutParams) $r10;

        if z7 == 0 goto label45;

        $i68 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i65 = r16.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i67 = $i65 + i169;

        $i66 = r16.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i69 = $i67 + $i66;

        $i70 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r15);

        $i71 = $i69 + $i70;

        $i72 = $i68 + $i71;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i72;

        goto label46;

     label45:
        i189 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i58 = i189 + i169;

        $i57 = r16.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i60 = $i58 + $i57;

        $i59 = r16.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i61 = $i60 + $i59;

        $i62 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r15);

        $i63 = $i61 + $i62;

        $i64 = staticinvoke <java.lang.Math: int max(int,int)>(i189, $i63);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i64;

     label46:
        i188 = i188 + 1;

        goto label42;

     label47:
        goto label48;

     label48:
        $i191 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i192 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i193 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i194 = $i192 + $i193;

        $i195 = $i191 + $i194;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i195;

        $i196 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i197 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        $i198 = staticinvoke <java.lang.Math: int max(int,int)>($i196, $i197);

        i199 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i198, i0, 0);

        i200 = i199 & 16777215;

        i201 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $z17 = r0.<android.widget.LinearLayout: boolean mAllowInconsistentMeasurement>;

        if $z17 == 0 goto label49;

        i136 = 0;

        goto label49;

     label49:
        $i6 = i200 - i201;

        i202 = $i6 + i136;

        if z9 != 0 goto label59;

        $z4 = <android.widget.LinearLayout: boolean sRemeasureWeightedChildren>;

        if $z4 != 0 goto label50;

        if i202 == 0 goto label51;

     label50:
        $b50 = f6 cmpl 0.0F;

        if $b50 <= 0 goto label51;

        goto label59;

     label51:
        i203 = staticinvoke <java.lang.Math: int max(int,int)>(i168, i141);

        if z1 == 0 goto label57;

        if i135 == 1073741824 goto label57;

        i204 = 0;

     label52:
        if i204 >= i2 goto label56;

        r17 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i204);

        if r17 == null goto label55;

        $i51 = virtualinvoke r17.<android.view.View: int getVisibility()>();

        if $i51 != 8 goto label53;

        goto label55;

     label53:
        $r8 = virtualinvoke r17.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r9 = (android.widget.LinearLayout$LayoutParams) $r8;

        $f3 = $r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b52 = $f3 cmpl 0.0F;

        if $b52 <= 0 goto label54;

        $i53 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i169, 1073741824);

        $i54 = virtualinvoke r17.<android.view.View: int getMeasuredHeight()>();

        $i55 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i54, 1073741824);

        virtualinvoke r17.<android.view.View: void measure(int,int)>($i53, $i55);

        goto label55;

     label54:
        goto label55;

     label55:
        i204 = i204 + 1;

        goto label52;

     label56:
        i206 = i203;

        goto label58;

     label57:
        i206 = i203;

     label58:
        i209 = i171;

        i211 = i206;

        i212 = i140;

        goto label85;

     label59:
        f8 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b7 = f8 cmpl 0.0F;

        if $b7 <= 0 goto label60;

        f6 = f8;

        goto label60;

     label60:
        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i213 = 0;

        i214 = -1;

        i215 = i199;

        i216 = i202;

        i217 = i140;

        i211 = i168;

     label61:
        if i213 >= i2 goto label81;

        r18 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i213);

        if r18 == null goto label80;

        $i17 = virtualinvoke r18.<android.view.View: int getVisibility()>();

        if $i17 != 8 goto label62;

        goto label80;

     label62:
        $r7 = virtualinvoke r18.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r19 = (android.widget.LinearLayout$LayoutParams) $r7;

        f9 = r19.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b18 = f9 cmpl 0.0F;

        if $b18 <= 0 goto label67;

        $f0 = (float) i216;

        $f1 = $f0 * f9;

        $f2 = $f1 / f6;

        i219 = (int) $f2;

        $z2 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        if $z2 == 0 goto label63;

        if i135 == 1073741824 goto label63;

        i220 = i169;

        goto label66;

     label63:
        $i48 = r19.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i48 != 0 goto label65;

        $z3 = r0.<android.widget.LinearLayout: boolean mAllowInconsistentMeasurement>;

        if $z3 == 0 goto label64;

        if i135 != 1073741824 goto label65;

     label64:
        i220 = i219;

        goto label66;

     label65:
        $i49 = virtualinvoke r18.<android.view.View: int getMeasuredWidth()>();

        i220 = $i49 + i219;

     label66:
        $i221 = staticinvoke <java.lang.Math: int max(int,int)>(0, i220);

        $i222 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i221, 1073741824);

        $i223 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i224 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i225 = $i223 + $i224;

        $i226 = r19.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i227 = $i225 + $i226;

        $i228 = r19.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i229 = $i227 + $i228;

        $i230 = r19.<android.widget.LinearLayout$LayoutParams: int height>;

        $i231 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i1, $i229, $i230);

        virtualinvoke r18.<android.view.View: void measure(int,int)>($i222, $i231);

        $i232 = virtualinvoke r18.<android.view.View: int getMeasuredState()>();

        $i233 = $i232 & -16777216;

        i217 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i217, $i233);

        i216 = i216 - i219;

        f6 = f6 - f9;

        goto label67;

     label67:
        if z7 == 0 goto label68;

        $i39 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i40 = virtualinvoke r18.<android.view.View: int getMeasuredWidth()>();

        $i41 = r19.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i43 = $i40 + $i41;

        $i42 = r19.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i44 = $i43 + $i42;

        $i45 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r18);

        $i46 = $i44 + $i45;

        $i47 = $i39 + $i46;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i47;

        goto label69;

     label68:
        i234 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i19 = virtualinvoke r18.<android.view.View: int getMeasuredWidth()>();

        $i21 = $i19 + i234;

        $i20 = r19.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i23 = $i21 + $i20;

        $i22 = r19.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i24 = $i23 + $i22;

        $i25 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r18);

        $i26 = $i24 + $i25;

        $i27 = staticinvoke <java.lang.Math: int max(int,int)>(i234, $i26);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i27;

     label69:
        if i3 == 1073741824 goto label70;

        $i38 = r19.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i38 != -1 goto label70;

        z18 = 1;

        goto label71;

     label70:
        z18 = 0;

     label71:
        $i235 = r19.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i236 = r19.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i237 = $i235 + $i236;

        $i238 = virtualinvoke r18.<android.view.View: int getMeasuredHeight()>();

        i239 = $i238 + i237;

        i240 = staticinvoke <java.lang.Math: int max(int,int)>(i214, i239);

        if z18 == 0 goto label72;

        i241 = i237;

        goto label73;

     label72:
        i241 = i239;

     label73:
        i242 = staticinvoke <java.lang.Math: int max(int,int)>(i211, i241);

        if z8 == 0 goto label74;

        $i37 = r19.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i37 != -1 goto label74;

        z19 = 1;

        goto label75;

     label74:
        z19 = 0;

     label75:
        if z0 == 0 goto label79;

        i243 = virtualinvoke r18.<android.view.View: int getBaseline()>();

        if i243 == -1 goto label78;

        $i28 = r19.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i28 >= 0 goto label76;

        i244 = r0.<android.widget.LinearLayout: int mGravity>;

        goto label77;

     label76:
        i244 = r19.<android.widget.LinearLayout$LayoutParams: int gravity>;

     label77:
        $i29 = i244 & 112;

        $i30 = $i29 >> 4;

        $i31 = $i30 & -2;

        i245 = $i31 >> 1;

        $i32 = r1[i245];

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>($i32, i243);

        r1[i245] = $i33;

        $i35 = r2[i245];

        $i34 = i239 - i243;

        $i36 = staticinvoke <java.lang.Math: int max(int,int)>($i35, $i34);

        r2[i245] = $i36;

        goto label79;

     label78:
        goto label79;

     label79:
        z8 = z19;

        i211 = i242;

        i214 = i240;

        goto label80;

     label80:
        i213 = i213 + 1;

        goto label61;

     label81:
        i199 = i215;

        $i11 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i9 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i8 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i10 = $i9 + $i8;

        $i12 = $i11 + $i10;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i12;

        $i13 = r1[1];

        if $i13 != -1 goto label83;

        $i14 = r1[0];

        if $i14 != -1 goto label83;

        $i15 = r1[2];

        if $i15 != -1 goto label83;

        $i16 = r1[3];

        if $i16 == -1 goto label82;

        goto label83;

     label82:
        i246 = i214;

        goto label84;

     label83:
        $i247 = r1[3];

        $i248 = r1[0];

        $i249 = r1[1];

        $i250 = r1[2];

        $i251 = staticinvoke <java.lang.Math: int max(int,int)>($i249, $i250);

        $i252 = staticinvoke <java.lang.Math: int max(int,int)>($i248, $i251);

        $i253 = staticinvoke <java.lang.Math: int max(int,int)>($i247, $i252);

        $i254 = r2[3];

        $i255 = r2[0];

        $i256 = r2[1];

        $i257 = r2[2];

        $i258 = staticinvoke <java.lang.Math: int max(int,int)>($i256, $i257);

        $i259 = staticinvoke <java.lang.Math: int max(int,int)>($i255, $i258);

        $i260 = staticinvoke <java.lang.Math: int max(int,int)>($i254, $i259);

        $i261 = $i253 + $i260;

        i246 = staticinvoke <java.lang.Math: int max(int,int)>(i214, $i261);

     label84:
        i209 = i246;

        i212 = i217;

     label85:
        i263 = i209;

        if z8 != 0 goto label86;

        i263 = i209;

        if i3 == 1073741824 goto label86;

        i263 = i211;

     label86:
        $i264 = -16777216 & i212;

        $i265 = i199 | $i264;

        $i266 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i267 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i268 = $i266 + $i267;

        $i269 = i263 + $i268;

        $i270 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        $i271 = staticinvoke <java.lang.Math: int max(int,int)>($i269, $i270);

        $i272 = i212 << 16;

        $i273 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i271, i1, $i272);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i265, $i273);

        if z10 == 0 goto label87;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformHeight(int,int)>(i2, i0);

        goto label87;

     label87:
        return;
    }

    int measureNullChild(int)
    {
        android.widget.LinearLayout r0;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        return 0;
    }

    void measureVertical(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i68, $i69, $i70, $i71, $i72, $i73, $i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, $i92, $i93, i94, $i95, i96, $i97, i99, i100, i101, i104, i106, i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, i116, i117, i118, i119, i120, i121, i123, i124, i127, i128, i129, i130, i131, $i132, i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, i145, i146, i147, i148, i149, i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9, z11, z12, z13, $z14, z15, z16;
        byte $b9, $b16, $b24, $b26, $b48, $b59, $b67, $b98;
        android.view.ViewGroup$LayoutParams $r2, $r3, $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8, f9, f10;
        android.widget.LinearLayout$LayoutParams $r4, r9, r11, r14;
        java.lang.RuntimeException $r7;
        android.view.View r8, r10, r12, r13;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i75 = 0;

        i2 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i5 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        z0 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        i76 = 0;

        f7 = 0.0F;

        i77 = 0;

        i78 = 0;

        z6 = 0;

        i79 = 0;

        i80 = -2147483648;

        z7 = 1;

        z8 = 0;

        i81 = 0;

        i82 = 0;

     label01:
        if i81 >= i2 goto label26;

        r8 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i81);

        if r8 != null goto label02;

        $i72 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i73 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i81);

        $i74 = $i72 + $i73;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i74;

        goto label25;

     label02:
        $i46 = virtualinvoke r8.<android.view.View: int getVisibility()>();

        if $i46 != 8 goto label03;

        $i71 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r8, i81);

        i81 = i81 + $i71;

        goto label25;

     label03:
        $z5 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i81);

        if $z5 == 0 goto label04;

        $i69 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i68 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i70 = $i69 + $i68;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i70;

     label04:
        $r6 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.widget.LinearLayout$LayoutParams) $r6;

        $f4 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        f7 = f7 + $f4;

        $i47 = r9.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i47 != 0 goto label05;

        $f6 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b67 = $f6 cmpl 0.0F;

        if $b67 <= 0 goto label05;

        z9 = 1;

        goto label06;

     label05:
        z9 = 0;

     label06:
        if i4 != 1073741824 goto label07;

        if z9 == 0 goto label07;

        i83 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i62 = r9.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i64 = $i62 + i83;

        $i63 = r9.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i65 = $i64 + $i63;

        $i66 = staticinvoke <java.lang.Math: int max(int,int)>(i83, $i65);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i66;

        z6 = 1;

        goto label13;

     label07:
        if z9 == 0 goto label08;

        r9.<android.widget.LinearLayout$LayoutParams: int height> = -2;

     label08:
        $b48 = f7 cmpl 0.0F;

        if $b48 != 0 goto label09;

        i84 = r0.<android.widget.LinearLayout: int mTotalLength>;

        goto label10;

     label09:
        i84 = 0;

     label10:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r8, i81, i0, 0, i1, i84);

        i85 = virtualinvoke r8.<android.view.View: int getMeasuredHeight()>();

        i86 = i82;

        if z9 == 0 goto label11;

        r9.<android.widget.LinearLayout$LayoutParams: int height> = 0;

        i86 = i82 + i85;

     label11:
        i87 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i50 = i87 + i85;

        $i49 = r9.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i52 = $i50 + $i49;

        $i51 = r9.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i53 = $i52 + $i51;

        $i54 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r8);

        $i55 = $i53 + $i54;

        $i56 = staticinvoke <java.lang.Math: int max(int,int)>(i87, $i55);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i56;

        if z0 == 0 goto label12;

        i80 = staticinvoke <java.lang.Math: int max(int,int)>(i85, i80);

        i82 = i86;

        goto label13;

     label12:
        i82 = i86;

     label13:
        i88 = i81;

        i89 = i79;

        i90 = i75;

        if i5 < 0 goto label14;

        $i60 = i81 + 1;

        if i5 != $i60 goto label14;

        $i61 = r0.<android.widget.LinearLayout: int mTotalLength>;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = $i61;

        goto label14;

     label14:
        if i88 >= i5 goto label16;

        $f5 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b59 = $f5 cmpl 0.0F;

        if $b59 > 0 goto label15;

        goto label16;

     label15:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");

        throw $r7;

     label16:
        z11 = 0;

        z12 = z8;

        if i3 == 1073741824 goto label17;

        z11 = 0;

        z12 = z8;

        $i58 = r9.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i58 != -1 goto label17;

        z12 = 1;

        z11 = 1;

     label17:
        $i92 = r9.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i93 = r9.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i94 = $i92 + $i93;

        $i95 = virtualinvoke r8.<android.view.View: int getMeasuredWidth()>();

        i96 = $i95 + i94;

        i76 = staticinvoke <java.lang.Math: int max(int,int)>(i76, i96);

        $i97 = virtualinvoke r8.<android.view.View: int getMeasuredState()>();

        i6 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i77, $i97);

        if z7 == 0 goto label18;

        $i57 = r9.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i57 != -1 goto label18;

        z13 = 1;

        goto label19;

     label18:
        z13 = 0;

     label19:
        $f8 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b98 = $f8 cmpl 0.0F;

        if $b98 <= 0 goto label22;

        if z11 == 0 goto label20;

        goto label21;

     label20:
        i94 = i96;

     label21:
        i99 = staticinvoke <java.lang.Math: int max(int,int)>(i90, i94);

        i100 = i89;

        goto label24;

     label22:
        if z11 == 0 goto label23;

        i96 = i94;

        goto label23;

     label23:
        i100 = staticinvoke <java.lang.Math: int max(int,int)>(i89, i96);

        i99 = i90;

     label24:
        i101 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r8, i88);

        i78 = i78 + 1;

        i81 = i88 + i101;

        z8 = z12;

        z7 = z13;

        i77 = i6;

        i79 = i100;

        i75 = i99;

     label25:
        i81 = i81 + 1;

        goto label01;

     label26:
        i104 = i79;

        if i78 <= 0 goto label27;

        $z4 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i2);

        if $z4 == 0 goto label27;

        $i44 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i43 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i45 = $i44 + $i43;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i45;

        goto label27;

     label27:
        if z0 == 0 goto label35;

        if i4 == -2147483648 goto label29;

        if i4 != 0 goto label28;

        goto label29;

     label28:
        goto label35;

     label29:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i106 = 0;

     label30:
        if i106 >= i2 goto label34;

        r10 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i106);

        if r10 != null goto label31;

        $i40 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i41 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i106);

        $i42 = $i40 + $i41;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i42;

        goto label33;

     label31:
        $i30 = virtualinvoke r10.<android.view.View: int getVisibility()>();

        if $i30 != 8 goto label32;

        $i39 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r10, i106);

        i106 = i106 + $i39;

        goto label33;

     label32:
        $r5 = virtualinvoke r10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r11 = (android.widget.LinearLayout$LayoutParams) $r5;

        i107 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i32 = i107 + i80;

        $i31 = r11.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i34 = $i32 + $i31;

        $i33 = r11.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i35 = $i34 + $i33;

        $i36 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r10);

        $i37 = $i35 + $i36;

        $i38 = staticinvoke <java.lang.Math: int max(int,int)>(i107, $i37);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i38;

     label33:
        i106 = i106 + 1;

        goto label30;

     label34:
        goto label35;

     label35:
        $i108 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i109 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i110 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i111 = $i109 + $i110;

        $i112 = $i108 + $i111;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i112;

        $i113 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i114 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        $i115 = staticinvoke <java.lang.Math: int max(int,int)>($i113, $i114);

        i116 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i115, i1, 0);

        i117 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $z14 = r0.<android.widget.LinearLayout: boolean mAllowInconsistentMeasurement>;

        if $z14 == 0 goto label36;

        i82 = 0;

        goto label36;

     label36:
        $i7 = i116 & 16777215;

        $i8 = $i7 - i117;

        i118 = $i8 + i82;

        if z6 != 0 goto label46;

        $z3 = <android.widget.LinearLayout: boolean sRemeasureWeightedChildren>;

        if $z3 != 0 goto label37;

        if i118 == 0 goto label38;

     label37:
        $b24 = f7 cmpl 0.0F;

        if $b24 <= 0 goto label38;

        goto label46;

     label38:
        i119 = staticinvoke <java.lang.Math: int max(int,int)>(i104, i75);

        if z0 == 0 goto label44;

        if i4 == 1073741824 goto label44;

        i120 = 0;

     label39:
        if i120 >= i2 goto label43;

        r12 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i120);

        if r12 == null goto label42;

        $i25 = virtualinvoke r12.<android.view.View: int getVisibility()>();

        if $i25 != 8 goto label40;

        goto label42;

     label40:
        $r3 = virtualinvoke r12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $f3 = $r4.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b26 = $f3 cmpl 0.0F;

        if $b26 <= 0 goto label41;

        $i27 = virtualinvoke r12.<android.view.View: int getMeasuredWidth()>();

        $i28 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i27, 1073741824);

        $i29 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i80, 1073741824);

        virtualinvoke r12.<android.view.View: void measure(int,int)>($i28, $i29);

        goto label42;

     label41:
        goto label42;

     label42:
        i120 = i120 + 1;

        goto label39;

     label43:
        i121 = i77;

        goto label45;

     label44:
        i121 = i77;

     label45:
        i123 = i119;

        i124 = i121;

        goto label63;

     label46:
        f9 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b9 = f9 cmpl 0.0F;

        if $b9 <= 0 goto label47;

        f7 = f9;

        goto label47;

     label47:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i124 = i77;

        i127 = i104;

        i128 = 0;

     label48:
        if i128 >= i2 goto label62;

        r13 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i128);

        if r13 == null goto label61;

        $i15 = virtualinvoke r13.<android.view.View: int getVisibility()>();

        if $i15 != 8 goto label49;

        goto label61;

     label49:
        $r2 = virtualinvoke r13.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r14 = (android.widget.LinearLayout$LayoutParams) $r2;

        f10 = r14.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b16 = f10 cmpl 0.0F;

        if $b16 <= 0 goto label54;

        $f0 = (float) i118;

        $f1 = $f0 * f10;

        $f2 = $f1 / f7;

        i129 = (int) $f2;

        i130 = i118 - i129;

        $z1 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        if $z1 == 0 goto label50;

        if i4 == 1073741824 goto label50;

        i131 = i80;

        goto label53;

     label50:
        $i22 = r14.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i22 != 0 goto label52;

        $z2 = r0.<android.widget.LinearLayout: boolean mAllowInconsistentMeasurement>;

        if $z2 == 0 goto label51;

        if i4 != 1073741824 goto label52;

     label51:
        i131 = i129;

        goto label53;

     label52:
        $i23 = virtualinvoke r13.<android.view.View: int getMeasuredHeight()>();

        i131 = $i23 + i129;

     label53:
        $i132 = staticinvoke <java.lang.Math: int max(int,int)>(0, i131);

        i133 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i132, 1073741824);

        $i134 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i135 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i136 = $i134 + $i135;

        $i137 = r14.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i138 = $i136 + $i137;

        $i139 = r14.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i140 = $i138 + $i139;

        $i141 = r14.<android.widget.LinearLayout$LayoutParams: int width>;

        $i142 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i0, $i140, $i141);

        virtualinvoke r13.<android.view.View: void measure(int,int)>($i142, i133);

        $i143 = virtualinvoke r13.<android.view.View: int getMeasuredState()>();

        $i144 = $i143 & -256;

        i124 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i124, $i144);

        f7 = f7 - f10;

        i118 = i130;

        goto label54;

     label54:
        $i18 = r14.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i17 = r14.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i145 = $i18 + $i17;

        $i19 = virtualinvoke r13.<android.view.View: int getMeasuredWidth()>();

        i146 = $i19 + i145;

        i147 = staticinvoke <java.lang.Math: int max(int,int)>(i76, i146);

        if i3 == 1073741824 goto label55;

        $i21 = r14.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i21 != -1 goto label55;

        z15 = 1;

        goto label56;

     label55:
        z15 = 0;

     label56:
        if z15 == 0 goto label57;

        i148 = i145;

        goto label58;

     label57:
        i148 = i146;

     label58:
        i149 = staticinvoke <java.lang.Math: int max(int,int)>(i127, i148);

        if z7 == 0 goto label59;

        $i20 = r14.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i20 != -1 goto label59;

        z16 = 1;

        goto label60;

     label59:
        z16 = 0;

     label60:
        i150 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i151 = virtualinvoke r13.<android.view.View: int getMeasuredHeight()>();

        $i152 = i150 + $i151;

        $i153 = r14.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i154 = $i152 + $i153;

        $i155 = r14.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i156 = $i154 + $i155;

        $i157 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r13);

        $i158 = $i156 + $i157;

        $i159 = staticinvoke <java.lang.Math: int max(int,int)>(i150, $i158);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i159;

        z7 = z16;

        i127 = i149;

        i76 = i147;

        goto label61;

     label61:
        i128 = i128 + 1;

        goto label48;

     label62:
        $i13 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i11 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i10 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i12 = $i11 + $i10;

        $i14 = $i13 + $i12;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i14;

        i123 = i127;

     label63:
        i160 = i76;

        if z7 != 0 goto label64;

        i160 = i76;

        if i3 == 1073741824 goto label64;

        i160 = i123;

     label64:
        $i161 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i162 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i163 = $i161 + $i162;

        $i164 = i160 + $i163;

        $i165 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        $i166 = staticinvoke <java.lang.Math: int max(int,int)>($i164, $i165);

        $i167 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i166, i0, i124);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i167, i116);

        if z8 == 0 goto label65;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformWidth(int,int)>(i2, i1);

        goto label65;

     label65:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersVertical(android.graphics.Canvas)>(r1);

        goto label3;

     label2:
        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>(r1);

     label3:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        boolean z0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i4 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void layoutVertical(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void layoutHorizontal(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i2 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void measureVertical(int,int)>(i0, i1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void measureHorizontal(int,int)>(i0, i1);

     label2:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>(i0);

        $i1 = r0.<android.widget.LinearLayout: int mLayoutDirection>;

        if i0 == $i1 goto label1;

        r0.<android.widget.LinearLayout: int mLayoutDirection> = i0;

        $i2 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i2 != 0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setBaselineAligned(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = z0;

        return;
    }

    public void setBaselineAlignedChildIndex(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 >= $i2 goto label1;

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = i0;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider> = r1;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.LinearLayout: int mDividerWidth> = $i0;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.LinearLayout: int mDividerHeight> = $i1;

        goto label3;

     label2:
        r0.<android.widget.LinearLayout: int mDividerWidth> = 0;

        r0.<android.widget.LinearLayout: int mDividerHeight> = 0;

     label3:
        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean isShowingDividers()>();

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>($z1);

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public void setDividerPadding(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.widget.LinearLayout: int mDividerPadding> = i0;

        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean isShowingDividers()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        virtualinvoke r0.<android.widget.LinearLayout: void invalidate()>();

     label2:
        return;
    }

    public void setGravity(int)
    {
        android.widget.LinearLayout r0;
        int $i0, $i1, $i2, i3, i4, i5;

        r0 := @this: android.widget.LinearLayout;

        i3 := @parameter0: int;

        $i0 = r0.<android.widget.LinearLayout: int mGravity>;

        if $i0 == i3 goto label3;

        i4 = i3;

        $i1 = 8388615 & i3;

        if $i1 != 0 goto label1;

        i4 = i3 | 8388611;

     label1:
        i5 = i4;

        $i2 = i4 & 112;

        if $i2 != 0 goto label2;

        i5 = i4 | 48;

     label2:
        r0.<android.widget.LinearLayout: int mGravity> = i5;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label3:
        return;
    }

    public void setHorizontalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: android.widget.LinearLayout;

        i4 := @parameter0: int;

        i5 = i4 & 8388615;

        i0 = r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = 8388615 & i0;

        if $i1 == i5 goto label1;

        $i2 = -8388616 & i0;

        $i3 = $i2 | i5;

        r0.<android.widget.LinearLayout: int mGravity> = $i3;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setMeasureWithLargestChildEnabled(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = z0;

        return;
    }

    public void setOrientation(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 == i0 goto label1;

        r0.<android.widget.LinearLayout: int mOrientation> = i0;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setShowDividers(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mShowDividers>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.widget.LinearLayout: int mShowDividers> = i0;

        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean isShowingDividers()>();

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>($z1);

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public void setVerticalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: android.widget.LinearLayout;

        i4 := @parameter0: int;

        i5 = i4 & 112;

        i0 = r0.<android.widget.LinearLayout: int mGravity>;

        $i1 = i0 & 112;

        if $i1 == i5 goto label1;

        $i2 = i0 & -113;

        $i3 = $i2 | i5;

        r0.<android.widget.LinearLayout: int mGravity> = $i3;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setWeightSum(float)
    {
        android.widget.LinearLayout r0;
        float f0, $f1;

        r0 := @this: android.widget.LinearLayout;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, f0);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f1;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.widget.LinearLayout r0;

        r0 := @this: android.widget.LinearLayout;

        return 0;
    }
}
