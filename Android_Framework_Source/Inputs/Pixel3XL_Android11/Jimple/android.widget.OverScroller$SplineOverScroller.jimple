class android.widget.OverScroller$SplineOverScroller extends java.lang.Object
{
    private static final int BALLISTIC;
    private static final int CUBIC;
    private static float DECELERATION_RATE;
    private static final float END_TENSION;
    private static final float GRAVITY;
    private static final float INFLEXION;
    private static final int NB_SAMPLES;
    private static final float P1;
    private static final float P2;
    private static final int SPLINE;
    private static final float[] SPLINE_POSITION;
    private static final float[] SPLINE_TIME;
    private static final float START_TENSION;
    private float mCurrVelocity;
    private int mCurrentPosition;
    private float mDeceleration;
    private int mDuration;
    private int mFinal;
    private boolean mFinished;
    private float mFlingFriction;
    private int mOver;
    private float mPhysicalCoeff;
    private int mSplineDistance;
    private int mSplineDuration;
    private int mStart;
    private long mStartTime;
    private int mState;
    private int mVelocity;

    static void <clinit>()
    {
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20, $f21, $f22, f23, $f24, $f25, f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, f34, $f35, $f36, f37, $f38, $f39, f40, $f41, $f42, f43, $f44, $f45, $f46, $f47, $f48, $f49, f50, $f51, $f52;
        float[] r0, $r1, $r2, $r3, $r4, $r5;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1, $b3, $b4;
        int i2;

        <android.widget.OverScroller$SplineOverScroller: float START_TENSION> = 0.5F;

        <android.widget.OverScroller$SplineOverScroller: int SPLINE> = 0;

        <android.widget.OverScroller$SplineOverScroller: float P2> = 0.35000002F;

        <android.widget.OverScroller$SplineOverScroller: float P1> = 0.175F;

        <android.widget.OverScroller$SplineOverScroller: int NB_SAMPLES> = 100;

        <android.widget.OverScroller$SplineOverScroller: float INFLEXION> = 0.35F;

        <android.widget.OverScroller$SplineOverScroller: float GRAVITY> = 2000.0F;

        <android.widget.OverScroller$SplineOverScroller: float END_TENSION> = 1.0F;

        <android.widget.OverScroller$SplineOverScroller: int CUBIC> = 1;

        <android.widget.OverScroller$SplineOverScroller: int BALLISTIC> = 2;

        $d0 = staticinvoke <java.lang.Math: double log(double)>(0.78);

        $d1 = staticinvoke <java.lang.Math: double log(double)>(0.9);

        $d2 = $d0 / $d1;

        $f1 = (float) $d2;

        <android.widget.OverScroller$SplineOverScroller: float DECELERATION_RATE> = $f1;

        $r1 = newarray (float)[101];

        <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_POSITION> = $r1;

        $r2 = newarray (float)[101];

        <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_TIME> = $r2;

        f18 = 0.0F;

        f19 = 0.0F;

        i2 = 0;

     label1:
        if i2 >= 100 goto label8;

        $f2 = (float) i2;

        f0 = $f2 / 100.0F;

        f20 = 1.0F;

     label2:
        $f21 = f20 - f18;

        $f22 = $f21 / 2.0F;

        f23 = $f22 + f18;

        $f24 = f23 * 3.0F;

        $f25 = 1.0F - f23;

        f26 = $f24 * $f25;

        $f27 = 1.0F - f23;

        $f28 = $f27 * 0.175F;

        $f29 = f23 * 0.35000002F;

        $f30 = $f28 + $f29;

        $f31 = $f30 * f26;

        $f32 = f23 * f23;

        $f33 = $f32 * f23;

        f34 = $f31 + $f33;

        $f35 = f34 - f0;

        $f36 = staticinvoke <java.lang.Math: float abs(float)>($f35);

        $d3 = (double) $f36;

        $b3 = $d3 cmpg 1.0E-5;

        if $b3 >= 0 goto label6;

        $r4 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_POSITION>;

        $f3 = 1.0F - f23;

        $f4 = $f3 * 0.5F;

        $f5 = $f4 + f23;

        $f8 = $f5 * f26;

        $f6 = f23 * f23;

        $f7 = $f6 * f23;

        $f9 = $f8 + $f7;

        $r4[i2] = $f9;

        f37 = 1.0F;

     label3:
        $f38 = f37 - f19;

        $f39 = $f38 / 2.0F;

        f40 = $f39 + f19;

        $f41 = f40 * 3.0F;

        $f42 = 1.0F - f40;

        f43 = $f41 * $f42;

        $f44 = 1.0F - f40;

        $f45 = $f44 * 0.5F;

        $f46 = $f45 + f40;

        $f47 = $f46 * f43;

        $f48 = f40 * f40;

        $f49 = $f48 * f40;

        f50 = $f47 + $f49;

        $f51 = f50 - f0;

        $f52 = staticinvoke <java.lang.Math: float abs(float)>($f51);

        $d4 = (double) $f52;

        $b4 = $d4 cmpg 1.0E-5;

        if $b4 >= 0 goto label4;

        $r5 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_TIME>;

        $f10 = 1.0F - f40;

        $f12 = $f10 * 0.175F;

        $f11 = 0.35000002F * f40;

        $f13 = $f12 + $f11;

        $f16 = f43 * $f13;

        $f14 = f40 * f40;

        $f15 = $f14 * f40;

        $f17 = $f16 + $f15;

        $r5[i2] = $f17;

        i2 = i2 + 1;

        goto label1;

     label4:
        $b1 = f50 cmpl f0;

        if $b1 <= 0 goto label5;

        f37 = f40;

        goto label3;

     label5:
        f19 = f40;

        goto label3;

     label6:
        $b0 = f34 cmpl f0;

        if $b0 <= 0 goto label7;

        f20 = f23;

        goto label2;

     label7:
        f18 = f23;

        goto label2;

     label8:
        r0 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_POSITION>;

        $r3 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_TIME>;

        $r3[100] = 1.0F;

        r0[100] = 1.0F;

        return;
    }

    void <init>(android.content.Context)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        android.content.Context r1;
        float $f0, $f1, $f2, $f3, $f4;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

        r0.<android.widget.OverScroller$SplineOverScroller: float mFlingFriction> = $f0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mState> = 0;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r3.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 * 160.0F;

        $f3 = 386.0878F * $f2;

        $f4 = $f3 * 0.84F;

        r0.<android.widget.OverScroller$SplineOverScroller: float mPhysicalCoeff> = $f4;

        return;
    }

    static boolean access$000(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        boolean $z0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $z0 = r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished>;

        return $z0;
    }

    static boolean access$002(android.widget.OverScroller$SplineOverScroller, boolean)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        boolean z0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        z0 := @parameter1: boolean;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = z0;

        return z0;
    }

    static int access$100(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition>;

        return $i0;
    }

    static float access$200(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        float $f0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $f0 = r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity>;

        return $f0;
    }

    static int access$300(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        return $i0;
    }

    static int access$400(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        return $i0;
    }

    static int access$500(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        return $i0;
    }

    static long access$600(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        long $l0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $l0 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        return $l0;
    }

    static int access$700(android.widget.OverScroller$SplineOverScroller)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @parameter0: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mState>;

        return $i0;
    }

    private void adjustDuration(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18;
        float[] r1;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i1 - i8;

        $f5 = (float) $i2;

        $i3 = i0 - i8;

        $f4 = (float) $i3;

        $f6 = $f5 / $f4;

        f17 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f7 = f17 * 100.0F;

        i9 = (int) $f7;

        if i9 >= 100 goto label1;

        $f8 = (float) i9;

        f0 = $f8 / 100.0F;

        $i4 = i9 + 1;

        $f9 = (float) $i4;

        f1 = $f9 / 100.0F;

        r1 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_TIME>;

        f2 = r1[i9];

        $i5 = i9 + 1;

        f3 = r1[$i5];

        $f11 = f17 - f0;

        $f10 = f1 - f0;

        f18 = $f11 / $f10;

        $i6 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        $f15 = (float) $i6;

        $f12 = f3 - f2;

        $f13 = f18 * $f12;

        $f14 = $f13 + f2;

        $f16 = $f15 * $f14;

        $i7 = (int) $f16;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = $i7;

     label1:
        return;
    }

    private void fitOnBounceCurve(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, f17, f18;
        double $d0, $d1, $d2, $d3, $d4;
        long $l7, $l8, $l9;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = neg i2;

        f15 = (float) $i3;

        f16 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        f17 = f15 / f16;

        $f1 = (float) i2;

        $f0 = (float) i2;

        $f2 = $f1 * $f0;

        $f3 = $f2 / 2.0F;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>(f16);

        $f5 = $f3 / $f4;

        $i4 = i1 - i0;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i4);

        $f6 = (float) $i5;

        $f7 = $f5 + $f6;

        $d0 = (double) $f7;

        $d1 = $d0 * 2.0;

        $f8 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $d2 = (double) $f9;

        $d3 = $d1 / $d2;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        f18 = (float) $d4;

        $l8 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        $f10 = f18 - f17;

        $f11 = $f10 * 1000.0F;

        $i6 = (int) $f11;

        $l7 = (long) $i6;

        $l9 = $l8 - $l7;

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l9;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i1;

        $f12 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $f13 = neg $f12;

        $f14 = $f13 * f18;

        $i10 = (int) $f14;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = $i10;

        return;
    }

    private static float getDeceleration(int)
    {
        int i0;
        float f0;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        f0 = -2000.0F;

        goto label2;

     label1:
        f0 = 2000.0F;

     label2:
        return f0;
    }

    private double getSplineDeceleration(int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f0 = (float) $i1;

        $f4 = $f0 * 0.35F;

        $f2 = r0.<android.widget.OverScroller$SplineOverScroller: float mFlingFriction>;

        $f1 = r0.<android.widget.OverScroller$SplineOverScroller: float mPhysicalCoeff>;

        $f3 = $f2 * $f1;

        $f5 = $f4 / $f3;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        return $d1;
    }

    private double getSplineFlingDistance(int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        float f0, $f1, $f2, $f3;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        d0 = specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: double getSplineDeceleration(int)>(i0);

        f0 = <android.widget.OverScroller$SplineOverScroller: float DECELERATION_RATE>;

        d1 = (double) f0;

        $f2 = r0.<android.widget.OverScroller$SplineOverScroller: float mFlingFriction>;

        $f1 = r0.<android.widget.OverScroller$SplineOverScroller: float mPhysicalCoeff>;

        $f3 = $f2 * $f1;

        $d6 = (double) $f3;

        $d3 = (double) f0;

        $d2 = d1 - 1.0;

        $d4 = $d3 / $d2;

        $d5 = $d4 * d0;

        $d7 = staticinvoke <java.lang.Math: double exp(double)>($d5);

        $d8 = $d6 * $d7;

        return $d8;
    }

    private int getSplineFlingDuration(int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        $d0 = specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: double getSplineDeceleration(int)>(i0);

        $f0 = <android.widget.OverScroller$SplineOverScroller: float DECELERATION_RATE>;

        $d1 = (double) $f0;

        $d2 = $d1 - 1.0;

        $d3 = $d0 / $d2;

        $d4 = staticinvoke <java.lang.Math: double exp(double)>($d3);

        $d5 = $d4 * 1000.0;

        $i1 = (int) $d5;

        return $i1;
    }

    private void onEdgeReached()
    {
        android.widget.OverScroller$SplineOverScroller r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        byte $b1;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i9 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        $f4 = (float) i9;

        $f3 = (float) i9;

        f0 = $f4 * $f3;

        $f5 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f7 = $f6 * 2.0F;

        f1 = f0 / $f7;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        $f8 = (float) $i0;

        f2 = staticinvoke <java.lang.Math: float signum(float)>($f8);

        i10 = r0.<android.widget.OverScroller$SplineOverScroller: int mOver>;

        f19 = f1;

        $f9 = (float) i10;

        $b1 = f1 cmpl $f9;

        if $b1 <= 0 goto label1;

        $f14 = neg f2;

        $f17 = $f14 * f0;

        $f15 = (float) i10;

        $f16 = $f15 * 2.0F;

        $f18 = $f17 / $f16;

        r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration> = $f18;

        f19 = (float) i10;

     label1:
        $i2 = (int) f19;

        r0.<android.widget.OverScroller$SplineOverScroller: int mOver> = $i2;

        r0.<android.widget.OverScroller$SplineOverScroller: int mState> = 2;

        i11 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        $i3 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        if $i3 <= 0 goto label2;

        goto label3;

     label2:
        f19 = neg f19;

     label3:
        $i4 = (int) f19;

        $i5 = i11 + $i4;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = $i5;

        $i6 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        $f10 = (float) $i6;

        $f12 = $f10 * 1000.0F;

        $f11 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $f13 = $f12 / $f11;

        $i7 = (int) $f13;

        $i8 = neg $i7;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = $i8;

        return;
    }

    private void startAfterEdge(int, int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2, $i3, $i4, $i6, i8, i9, i10;
        double $d0, $d1;
        byte $b5;
        boolean z0, z1;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        i1 := @parameter3: int;

        z0 = 1;

        if i0 <= i8 goto label01;

        if i0 >= i9 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OverScroller", "startAfterEdge called from a valid position");

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 1;

        return;

     label01:
        if i0 <= i9 goto label02;

        z1 = 1;

        goto label03;

     label02:
        z1 = 0;

     label03:
        if z1 == 0 goto label04;

        i10 = i9;

        goto label05;

     label04:
        i10 = i8;

     label05:
        i2 = i0 - i10;

        $i3 = i2 * i1;

        if $i3 < 0 goto label06;

        goto label07;

     label06:
        z0 = 0;

     label07:
        if z0 == 0 goto label08;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startBounceAfterEdge(int,int,int)>(i0, i10, i1);

        goto label13;

     label08:
        $d0 = specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: double getSplineFlingDistance(int)>(i1);

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $d1 = (double) $i4;

        $b5 = $d0 cmpl $d1;

        if $b5 <= 0 goto label12;

        if z1 == 0 goto label09;

        goto label10;

     label09:
        i8 = i0;

     label10:
        if z1 == 0 goto label11;

        i9 = i0;

        goto label11;

     label11:
        $i6 = r0.<android.widget.OverScroller$SplineOverScroller: int mOver>;

        virtualinvoke r0.<android.widget.OverScroller$SplineOverScroller: void fling(int,int,int,int,int)>(i0, i1, i8, i9, $i6);

        goto label13;

     label12:
        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startSpringback(int,int,int)>(i0, i10, i1);

     label13:
        return;
    }

    private void startBounceAfterEdge(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2, i3;
        float $f0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i2 != 0 goto label1;

        i3 = i0 - i1;

        goto label2;

     label1:
        i3 = i2;

     label2:
        $f0 = staticinvoke <android.widget.OverScroller$SplineOverScroller: float getDeceleration(int)>(i3);

        r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration> = $f0;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void fitOnBounceCurve(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void onEdgeReached()>();

        return;
    }

    private void startSpringback(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        float $f0, $f1;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mState> = 1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i5;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i5;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i0;

        i6 = i5 - i0;

        $f0 = staticinvoke <android.widget.OverScroller$SplineOverScroller: float getDeceleration(int)>(i6);

        r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration> = $f0;

        $i2 = neg i6;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = $i2;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>(i6);

        r0.<android.widget.OverScroller$SplineOverScroller: int mOver> = $i3;

        $d0 = (double) i6;

        $d2 = $d0 * -2.0;

        $f1 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $d1 = (double) $f1;

        $d3 = $d2 / $d1;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        $d5 = $d4 * 1000.0;

        $i4 = (int) $d5;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = $i4;

        return;
    }

    boolean continueWhenFinished()
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0, $i1, $i2, $i6, $i10, $i11, i12, i13, i14;
        float $f0, $f1;
        long $l3, $l4, $l5, $l7, $l8, $l9;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i12 = r0.<android.widget.OverScroller$SplineOverScroller: int mState>;

        if i12 == 0 goto label3;

        if i12 == 1 goto label2;

        if i12 == 2 goto label1;

        goto label4;

     label1:
        $l8 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        $i6 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        $l7 = (long) $i6;

        $l9 = $l8 + $l7;

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l9;

        $i11 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        $i10 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startSpringback(int,int,int)>($i11, $i10, 0);

        goto label4;

     label2:
        return 0;

     label3:
        $i1 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDuration>;

        if $i1 >= $i0 goto label5;

        i13 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i13;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i13;

        $f0 = r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity>;

        i14 = (int) $f0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = i14;

        $f1 = staticinvoke <android.widget.OverScroller$SplineOverScroller: float getDeceleration(int)>(i14);

        r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration> = $f1;

        $l4 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        $i2 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l5;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void onEdgeReached()>();

     label4:
        virtualinvoke r0.<android.widget.OverScroller$SplineOverScroller: boolean update()>();

        return 1;

     label5:
        return 0;
    }

    void extendDuration(int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, $i4, $i5;
        long $l1, $l2, $l3;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l2 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        $l3 = $l1 - $l2;

        $i4 = (int) $l3;

        $i5 = $i4 + i0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = $i5;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 0;

        return;
    }

    void finish()
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int $i0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        $i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = $i0;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 1;

        return;
    }

    void fling(int, int, int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, $i3, $i4, i5, i6, i7, i8, i9, i10, i11;
        float $f0, $f1, $f2;
        long $l2;
        double $d0, $d1, d2;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i7 := @parameter4: int;

        r0.<android.widget.OverScroller$SplineOverScroller: int mOver> = i7;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = i6;

        $f0 = (float) i6;

        r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity> = $f0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDuration> = 0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = 0;

        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l2;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i5;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i5;

        if i5 > i1 goto label5;

        if i5 >= i0 goto label1;

        goto label5;

     label1:
        r0.<android.widget.OverScroller$SplineOverScroller: int mState> = 0;

        d2 = 0.0;

        if i6 == 0 goto label2;

        i8 = specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: int getSplineFlingDuration(int)>(i6);

        r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDuration> = i8;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = i8;

        d2 = specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: double getSplineFlingDistance(int)>(i6);

     label2:
        $f1 = (float) i6;

        $f2 = staticinvoke <java.lang.Math: float signum(float)>($f1);

        $d0 = (double) $f2;

        $d1 = $d0 * d2;

        i9 = (int) $d1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDistance> = i9;

        i10 = i9 + i5;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i10;

        if i10 >= i0 goto label3;

        $i4 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void adjustDuration(int,int,int)>($i4, i10, i0);

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i0;

     label3:
        i11 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        if i11 <= i1 goto label4;

        $i3 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void adjustDuration(int,int,int)>($i3, i11, i1);

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i1;

     label4:
        return;

     label5:
        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startAfterEdge(int,int,int,int)>(i5, i0, i1, i6);

        return;
    }

    void notifyEdgeReached(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2, $i3, $i5;
        long $l4;
        float $f0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.widget.OverScroller$SplineOverScroller: int mState>;

        if $i3 != 0 goto label1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mOver> = i2;

        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l4;

        $f0 = r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity>;

        $i5 = (int) $f0;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startAfterEdge(int,int,int,int)>(i0, i1, i1, $i5);

     label1:
        return;
    }

    void setFinalPosition(int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i0;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 0;

        return;
    }

    void setFriction(float)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        float f0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        f0 := @parameter0: float;

        r0.<android.widget.OverScroller$SplineOverScroller: float mFlingFriction> = f0;

        return;
    }

    boolean springback(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2;
        long $l3;
        boolean $z0, $z1;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = i0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = 0;

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l3;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = 0;

        if i0 >= i1 goto label1;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startSpringback(int,int,int)>(i0, i1, 0);

        goto label2;

     label1:
        if i0 <= i2 goto label2;

        specialinvoke r0.<android.widget.OverScroller$SplineOverScroller: void startSpringback(int,int,int)>(i0, i2, 0);

     label2:
        $z0 = r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished>;

        $z1 = 1 ^ $z0;

        return $z1;
    }

    void startScroll(int, int, int)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        int i0, i1, i2, $i3;
        long $l4;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.widget.OverScroller$SplineOverScroller: boolean mFinished> = 0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mStart> = i0;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = i0;

        $i3 = i0 + i1;

        r0.<android.widget.OverScroller$SplineOverScroller: int mFinal> = $i3;

        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime> = $l4;

        r0.<android.widget.OverScroller$SplineOverScroller: int mDuration> = i2;

        r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration> = 0.0F;

        r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity> = 0;

        return;
    }

    boolean update()
    {
        android.widget.OverScroller$SplineOverScroller r0;
        long l0, $l2, $l3, $l5, $l19;
        int i1, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, $i18, $i20, $i21;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53;
        float[] r1;
        byte $b4, $b6;
        boolean z0;
        double d0;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l3 = r0.<android.widget.OverScroller$SplineOverScroller: long mStartTime>;

        l0 = $l2 - $l3;

        z0 = 0;

        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label2;

        $i12 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        if $i12 <= 0 goto label1;

        z0 = 1;

     label1:
        return z0;

     label2:
        i13 = r0.<android.widget.OverScroller$SplineOverScroller: int mDuration>;

        $l5 = (long) i13;

        $b6 = l0 cmp $l5;

        if $b6 <= 0 goto label3;

        return 0;

     label3:
        d0 = 0.0;

        i1 = r0.<android.widget.OverScroller$SplineOverScroller: int mState>;

        if i1 == 0 goto label6;

        if i1 == 1 goto label5;

        if i1 == 2 goto label4;

        goto label8;

     label4:
        $f34 = (float) l0;

        f43 = $f34 / 1000.0F;

        i14 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        f44 = (float) i14;

        f45 = r0.<android.widget.OverScroller$SplineOverScroller: float mDeceleration>;

        $f35 = f45 * f43;

        $f36 = f44 + $f35;

        r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity> = $f36;

        $f37 = (float) i14;

        $f41 = $f37 * f43;

        $f38 = f45 * f43;

        $f39 = $f38 * f43;

        $f40 = $f39 / 2.0F;

        $f42 = $f41 + $f40;

        d0 = (double) $f42;

        goto label8;

     label5:
        $f19 = (float) l0;

        $f18 = (float) i13;

        f46 = $f19 / $f18;

        f47 = f46 * f46;

        $i11 = r0.<android.widget.OverScroller$SplineOverScroller: int mVelocity>;

        $f20 = (float) $i11;

        f48 = staticinvoke <java.lang.Math: float signum(float)>($f20);

        i15 = r0.<android.widget.OverScroller$SplineOverScroller: int mOver>;

        $f21 = (float) i15;

        $f26 = $f21 * f48;

        $f24 = 3.0F * f47;

        $f22 = 2.0F * f46;

        $f23 = $f22 * f47;

        $f25 = $f24 - $f23;

        $f27 = $f26 * $f25;

        d0 = (double) $f27;

        $f28 = (float) i15;

        $f29 = $f28 * f48;

        $f32 = $f29 * 6.0F;

        $f30 = neg f46;

        $f31 = $f30 + f47;

        $f33 = $f32 * $f31;

        r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity> = $f33;

        goto label8;

     label6:
        $f2 = (float) l0;

        $i7 = r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDuration>;

        $f1 = (float) $i7;

        f49 = $f2 / $f1;

        $f3 = f49 * 100.0F;

        i16 = (int) $f3;

        f50 = 1.0F;

        f51 = 0.0F;

        if i16 >= 100 goto label7;

        $f11 = (float) i16;

        f0 = $f11 / 100.0F;

        $i9 = i16 + 1;

        $f12 = (float) $i9;

        f52 = $f12 / 100.0F;

        r1 = <android.widget.OverScroller$SplineOverScroller: float[] SPLINE_POSITION>;

        f53 = r1[i16];

        $i10 = i16 + 1;

        $f13 = r1[$i10];

        $f15 = $f13 - f53;

        $f14 = f52 - f0;

        f51 = $f15 / $f14;

        $f16 = f49 - f0;

        $f17 = $f16 * f51;

        f50 = f53 + $f17;

     label7:
        i17 = r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDistance>;

        $f4 = (float) i17;

        $f5 = $f4 * f50;

        d0 = (double) $f5;

        $f6 = (float) i17;

        $f8 = $f6 * f51;

        $i8 = r0.<android.widget.OverScroller$SplineOverScroller: int mSplineDuration>;

        $f7 = (float) $i8;

        $f9 = $f8 / $f7;

        $f10 = $f9 * 1000.0F;

        r0.<android.widget.OverScroller$SplineOverScroller: float mCurrVelocity> = $f10;

     label8:
        $i18 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        $l19 = staticinvoke <java.lang.Math: long round(double)>(d0);

        $i20 = (int) $l19;

        $i21 = $i18 + $i20;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = $i21;

        return 1;
    }

    void updateScroll(float)
    {
        android.widget.OverScroller$SplineOverScroller r0;
        float f0, $f1, $f2;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.OverScroller$SplineOverScroller;

        f0 := @parameter0: float;

        i0 = r0.<android.widget.OverScroller$SplineOverScroller: int mStart>;

        $i1 = r0.<android.widget.OverScroller$SplineOverScroller: int mFinal>;

        $i2 = $i1 - i0;

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i4 = i0 + $i3;

        r0.<android.widget.OverScroller$SplineOverScroller: int mCurrentPosition> = $i4;

        return;
    }
}
