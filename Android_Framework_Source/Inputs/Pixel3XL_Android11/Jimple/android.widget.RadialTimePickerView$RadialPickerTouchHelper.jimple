class android.widget.RadialTimePickerView$RadialPickerTouchHelper extends com.android.internal.widget.ExploreByTouchHelper
{
    private final int MASK_TYPE;
    private final int MASK_VALUE;
    private final int MINUTE_INCREMENT;
    private final int SHIFT_TYPE;
    private final int SHIFT_VALUE;
    private final int TYPE_HOUR;
    private final int TYPE_MINUTE;
    private final android.graphics.Rect mTempRect;
    final android.widget.RadialTimePickerView this$0;

    public void <init>(android.widget.RadialTimePickerView)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.widget.RadialTimePickerView r1;
        android.graphics.Rect $r2;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        r1 := @parameter0: android.widget.RadialTimePickerView;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0> = r1;

        specialinvoke r0.<com.android.internal.widget.ExploreByTouchHelper: void <init>(android.view.View)>(r1);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.graphics.Rect mTempRect> = $r2;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int TYPE_HOUR> = 1;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int TYPE_MINUTE> = 2;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int SHIFT_TYPE> = 0;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int MASK_TYPE> = 15;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int SHIFT_VALUE> = 8;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int MASK_VALUE> = 255;

        r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int MINUTE_INCREMENT> = 5;

        return;
    }

    private void adjustPicker(int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.widget.RadialTimePickerView $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, i3, i5, i8;
        byte b4, b6, b7;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i3 := @parameter0: int;

        $r1 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$100(android.widget.RadialTimePickerView)>($r1);

        if $z0 == 0 goto label3;

        b4 = 1;

        $r6 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i5 = virtualinvoke $r6.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $r7 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z2 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r7);

        if $z2 == 0 goto label1;

        b6 = 0;

        b7 = 23;

        goto label2;

     label1:
        i5 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int hour24To12(int)>(i5);

        b6 = 1;

        b7 = 12;

     label2:
        goto label4;

     label3:
        b4 = 5;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i0 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        i5 = $i0 / 5;

        b6 = 0;

        b7 = 55;

     label4:
        $i1 = i5 + i3;

        $i2 = $i1 * b4;

        i8 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i2, b6, b7);

        $r3 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z1 = staticinvoke <android.widget.RadialTimePickerView: boolean access$100(android.widget.RadialTimePickerView)>($r3);

        if $z1 == 0 goto label5;

        $r5 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        virtualinvoke $r5.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i8);

        goto label6;

     label5:
        $r4 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i8);

     label6:
        return;
    }

    private void getBoundsForVirtualView(int, android.graphics.Rect)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22;
        double d0, $d1, $d2, $d3;
        android.widget.RadialTimePickerView $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18;
        int[] $r4, $r10, $r15;
        boolean $z0;
        float f0, f1, f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, f10, $f11, $f12, $f13, $f14;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i15 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        i0 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getTypeFromId(int)>(i15);

        i16 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getValueFromId(int)>(i15);

        if i0 != 1 goto label3;

        $r7 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$900(android.widget.RadialTimePickerView,int)>($r7, i16);

        if $z0 == 0 goto label1;

        $r13 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i11 = staticinvoke <android.widget.RadialTimePickerView: int access$1000(android.widget.RadialTimePickerView)>($r13);

        $r14 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $r15 = staticinvoke <android.widget.RadialTimePickerView: int[] access$1100(android.widget.RadialTimePickerView)>($r14);

        $i12 = $r15[2];

        $i13 = $i11 - $i12;

        f0 = (float) $i13;

        $r16 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i14 = staticinvoke <android.widget.RadialTimePickerView: int access$1200(android.widget.RadialTimePickerView)>($r16);

        f1 = (float) $i14;

        goto label2;

     label1:
        $r8 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i6 = staticinvoke <android.widget.RadialTimePickerView: int access$1000(android.widget.RadialTimePickerView)>($r8);

        $r9 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $r10 = staticinvoke <android.widget.RadialTimePickerView: int[] access$1100(android.widget.RadialTimePickerView)>($r9);

        $i7 = $r10[0];

        $i8 = $i6 - $i7;

        f0 = (float) $i8;

        $r11 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i9 = staticinvoke <android.widget.RadialTimePickerView: int access$1200(android.widget.RadialTimePickerView)>($r11);

        f1 = (float) $i9;

     label2:
        $r12 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i10 = staticinvoke <android.widget.RadialTimePickerView: int access$1300(android.widget.RadialTimePickerView,int)>($r12, i16);

        f2 = (float) $i10;

        goto label5;

     label3:
        if i0 != 2 goto label4;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i1 = staticinvoke <android.widget.RadialTimePickerView: int access$1000(android.widget.RadialTimePickerView)>($r2);

        $r3 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $r4 = staticinvoke <android.widget.RadialTimePickerView: int[] access$1100(android.widget.RadialTimePickerView)>($r3);

        $i2 = $r4[1];

        $i3 = $i1 - $i2;

        f0 = (float) $i3;

        $r5 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i4 = staticinvoke <android.widget.RadialTimePickerView: int access$1400(android.widget.RadialTimePickerView,int)>($r5, i16);

        f2 = (float) $i4;

        $r6 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i5 = staticinvoke <android.widget.RadialTimePickerView: int access$1200(android.widget.RadialTimePickerView)>($r6);

        f1 = (float) $i5;

        goto label5;

     label4:
        f0 = 0.0F;

        f2 = 0.0F;

        f1 = 0.0F;

     label5:
        $d1 = (double) f2;

        d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $r17 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i17 = staticinvoke <android.widget.RadialTimePickerView: int access$1500(android.widget.RadialTimePickerView)>($r17);

        $f3 = (float) $i17;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $f4 = (float) $d2;

        $f5 = $f4 * f0;

        f6 = $f3 + $f5;

        $r18 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i18 = staticinvoke <android.widget.RadialTimePickerView: int access$1600(android.widget.RadialTimePickerView)>($r18);

        $f7 = (float) $i18;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $f8 = (float) $d3;

        $f9 = $f8 * f0;

        f10 = $f7 - $f9;

        $f11 = f6 - f1;

        $i19 = (int) $f11;

        $f12 = f10 - f1;

        $i20 = (int) $f12;

        $f13 = f6 + f1;

        $i21 = (int) $f13;

        $f14 = f10 + f1;

        $i22 = (int) $f14;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i19, $i20, $i21, $i22);

        return;
    }

    private int getCircularDiff(int, int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i1, $i2, $i3, i4, i5;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i4 - i0;

        i5 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i3 = i1 / 2;

        if i5 <= $i3 goto label1;

        i5 = i1 - i5;

        goto label1;

     label1:
        return i5;
    }

    private int getTypeFromId(int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        $i1 = i0 >>> 0;

        $i2 = $i1 & 15;

        return $i2;
    }

    private int getValueFromId(int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        $i1 = i0 >>> 8;

        $i2 = $i1 & 255;

        return $i2;
    }

    private java.lang.CharSequence getVirtualViewDescription(int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        r1 = null;

        goto label3;

     label2:
        r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label3:
        return r1;
    }

    private int getVirtualViewIdAfter(int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i10;
        android.widget.RadialTimePickerView $r1, $r2;
        boolean $z0;
        byte b9;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        if i0 != 1 goto label4;

        i8 = i7 + 1;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r2);

        if $z0 == 0 goto label1;

        b9 = 23;

        goto label2;

     label1:
        b9 = 12;

     label2:
        if i8 > b9 goto label3;

        $i6 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(i0, i8);

        return $i6;

     label3:
        goto label6;

     label4:
        if i0 != 2 goto label6;

        $r1 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i1 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        $i2 = i7 % 5;

        $i3 = i7 - $i2;

        i10 = $i3 + 5;

        if i7 >= i1 goto label5;

        if i10 <= i1 goto label5;

        $i5 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(i0, i1);

        return $i5;

     label5:
        if i10 >= 60 goto label6;

        $i4 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(i0, i10);

        return $i4;

     label6:
        return -2147483648;
    }

    private int hour12To24(int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i2, i3;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i2 != 12 goto label1;

        i3 = i2;

        if i0 != 0 goto label2;

        i3 = 0;

        goto label2;

     label1:
        i3 = i2;

        if i0 != 1 goto label2;

        i3 = i2 + 12;

     label2:
        return i3;
    }

    private int hour24To12(int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, $i1;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 12;

     label1:
        if i0 <= 12 goto label2;

        $i1 = i0 - 12;

        return $i1;

     label2:
        return i0;
    }

    private boolean isVirtualViewSelected(int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i1, $i2, $i3;
        android.widget.RadialTimePickerView $r1, $r2;
        boolean z1;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z1 = 0;

        if i0 != 1 goto label2;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i3 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        if $i3 != i1 goto label1;

        z1 = 1;

     label1:
        goto label5;

     label2:
        if i0 != 2 goto label4;

        z1 = 0;

        $r1 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i2 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        if $i2 != i1 goto label3;

        z1 = 1;

     label3:
        goto label5;

     label4:
        z1 = 0;

     label5:
        return z1;
    }

    private int makeId(int, int)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 << 0;

        $i2 = i1 << 8;

        $i4 = $i3 | $i2;

        return $i4;
    }

    protected int getVirtualViewAt(float, float)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        float f0, f1;
        boolean z0, $z1, $z2;
        android.widget.RadialTimePickerView $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i3 = staticinvoke <android.widget.RadialTimePickerView: int access$300(android.widget.RadialTimePickerView,float,float,boolean)>($r1, f0, f1, 1);

        if i3 == -1 goto label7;

        $i0 = staticinvoke <android.widget.RadialTimePickerView: int access$400(int,int)>(i3, 0);

        i4 = $i0 % 360;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z1 = staticinvoke <android.widget.RadialTimePickerView: boolean access$100(android.widget.RadialTimePickerView)>($r2);

        if $z1 == 0 goto label3;

        $r6 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$500(android.widget.RadialTimePickerView,float,float)>($r6, f0, f1);

        $r7 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i5 = staticinvoke <android.widget.RadialTimePickerView: int access$600(android.widget.RadialTimePickerView,int,boolean)>($r7, i4, z0);

        $r8 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z2 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r8);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        i5 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int hour24To12(int)>(i5);

     label2:
        i6 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(1, i5);

        goto label6;

     label3:
        $r3 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i7 = virtualinvoke $r3.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        $r4 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i8 = staticinvoke <android.widget.RadialTimePickerView: int access$700(android.widget.RadialTimePickerView,int)>($r4, i3);

        $r5 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i9 = staticinvoke <android.widget.RadialTimePickerView: int access$700(android.widget.RadialTimePickerView,int)>($r5, i4);

        $i1 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getCircularDiff(int,int,int)>(i7, i8, 60);

        $i2 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getCircularDiff(int,int,int)>(i9, i8, 60);

        if $i1 >= $i2 goto label4;

        goto label5;

     label4:
        i7 = i9;

     label5:
        i6 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(2, i7);

     label6:
        goto label8;

     label7:
        i6 = -2147483648;

     label8:
        return i6;
    }

    protected void getVisibleVirtualViews(android.util.IntArray)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.util.IntArray r1;
        boolean z0, $z1, $z2, z3;
        android.widget.RadialTimePickerView $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        r1 := @parameter0: android.util.IntArray;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z1 = staticinvoke <android.widget.RadialTimePickerView: boolean access$100(android.widget.RadialTimePickerView)>($r2);

        if $z1 == 0 goto label5;

        $r4 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r4);

        $r5 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z2 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r5);

        if $z2 == 0 goto label1;

        i4 = 23;

        goto label2;

     label1:
        i4 = 12;

     label2:
        z3 = z0 ^ 1;

        i8 = (int) z3;

        i5 = i8;

     label3:
        if i5 > i4 goto label4;

        $i3 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(1, i5);

        virtualinvoke r1.<android.util.IntArray: void add(int)>($i3);

        i5 = i5 + 1;

        goto label3;

     label4:
        goto label8;

     label5:
        $r3 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        i6 = virtualinvoke $r3.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        i7 = 0;

     label6:
        if i7 >= 60 goto label8;

        $i0 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(2, i7);

        virtualinvoke r1.<android.util.IntArray: void add(int)>($i0);

        if i6 <= i7 goto label7;

        $i1 = i7 + 5;

        if i6 >= $i1 goto label7;

        $i2 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int makeId(int,int)>(2, i6);

        virtualinvoke r1.<android.util.IntArray: void add(int)>($i2);

     label7:
        i7 = i7 + 5;

        goto label6;

     label8:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r3, $r4;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<com.android.internal.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(r1, r2);

        $r3 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_FORWARD>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r3);

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_BACKWARD>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        return;
    }

    protected boolean onPerformActionForVirtualView(int, int, android.os.Bundle)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.os.Bundle r1;
        android.widget.RadialTimePickerView $r2, $r3, $r4, $r5;
        boolean $z0;
        int $i0, i1, i2, i3, i4;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        if i2 != 16 goto label4;

        i3 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getTypeFromId(int)>(i1);

        i4 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getValueFromId(int)>(i1);

        if i3 != 1 goto label3;

        $r3 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $z0 = staticinvoke <android.widget.RadialTimePickerView: boolean access$200(android.widget.RadialTimePickerView)>($r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        $i0 = staticinvoke <android.widget.RadialTimePickerView: int access$800(android.widget.RadialTimePickerView)>($r4);

        i4 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int hour12To24(int,int)>(i4, $i0);

     label2:
        $r5 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        virtualinvoke $r5.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i4);

        return 1;

     label3:
        if i3 != 2 goto label4;

        $r2 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        virtualinvoke $r2.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i4);

        return 1;

     label4:
        return 0;
    }

    protected void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        int i0, $i1, $i2;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $i1 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getTypeFromId(int)>(i0);

        $i2 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getValueFromId(int)>(i0);

        $r4 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: java.lang.CharSequence getVirtualViewDescription(int,int)>($i1, $i2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r4);

        return;
    }

    protected void onPopulateNodeForVirtualView(int, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, i1, i2, i3;
        java.lang.Class $r2;
        java.lang.String $r3;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4;
        java.lang.CharSequence $r5;
        android.graphics.Rect $r6, $r7;
        boolean $z0;
        android.widget.RadialTimePickerView $r8;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        i2 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLICK>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        i0 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getTypeFromId(int)>(i2);

        i1 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getValueFromId(int)>(i2);

        $r5 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: java.lang.CharSequence getVirtualViewDescription(int,int)>(i0, i1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>($r5);

        $r6 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.graphics.Rect mTempRect>;

        specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: void getBoundsForVirtualView(int,android.graphics.Rect)>(i2, $r6);

        $r7 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>($r7);

        $z0 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: boolean isVirtualViewSelected(int,int)>(i0, i1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>($z0);

        i3 = specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: int getVirtualViewIdAfter(int,int)>(i0, i1);

        if i3 == -2147483648 goto label1;

        $r8 = r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: android.widget.RadialTimePickerView this$0>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>($r8, i3);

     label1:
        return;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.widget.RadialTimePickerView$RadialPickerTouchHelper r0;
        android.view.View r1;
        int i0;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @this: android.widget.RadialTimePickerView$RadialPickerTouchHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.internal.widget.ExploreByTouchHelper: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>(r1, i0, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if i0 == 4096 goto label3;

        if i0 == 8192 goto label2;

        return 0;

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: void adjustPicker(int)>(-1);

        return 1;

     label3:
        specialinvoke r0.<android.widget.RadialTimePickerView$RadialPickerTouchHelper: void adjustPicker(int)>(1);

        return 1;
    }
}
