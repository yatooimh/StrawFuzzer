public class android.widget.RemoteViews extends java.lang.Object implements android.os.Parcelable, android.view.LayoutInflater$Filter
{
    private static final android.widget.RemoteViews$Action ACTION_NOOP;
    private static final int BITMAP_REFLECTION_ACTION_TAG;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER;
    static final java.lang.String EXTRA_REMOTEADAPTER_APPWIDGET_ID;
    static final java.lang.String EXTRA_REMOTEADAPTER_ON_LIGHT_BACKGROUND;
    public static final java.lang.String EXTRA_SHARED_ELEMENT_BOUNDS;
    public static final int FLAG_REAPPLY_DISALLOWED;
    public static final int FLAG_USE_LIGHT_BACKGROUND_LAYOUT;
    public static final int FLAG_WIDGET_IS_COLLECTION_CHILD;
    private static final android.view.LayoutInflater$Filter INFLATER_FILTER;
    private static final int LAYOUT_PARAM_ACTION_TAG;
    private static final java.lang.String LOG_TAG;
    private static final int MAX_NESTED_VIEWS;
    private static final int MODE_HAS_LANDSCAPE_AND_PORTRAIT;
    private static final int MODE_NORMAL;
    private static final int OVERRIDE_TEXT_COLORS_TAG;
    private static final int REFLECTION_ACTION_TAG;
    private static final int SET_DRAWABLE_TINT_TAG;
    private static final int SET_EMPTY_VIEW_ACTION_TAG;
    private static final int SET_INT_TAG_TAG;
    private static final int SET_ON_CLICK_RESPONSE_TAG;
    private static final int SET_PENDING_INTENT_TEMPLATE_TAG;
    private static final int SET_REMOTE_INPUTS_ACTION_TAG;
    private static final int SET_REMOTE_VIEW_ADAPTER_INTENT_TAG;
    private static final int SET_REMOTE_VIEW_ADAPTER_LIST_TAG;
    private static final int SET_RIPPLE_DRAWABLE_COLOR_TAG;
    private static final int TEXT_VIEW_DRAWABLE_ACTION_TAG;
    private static final int TEXT_VIEW_SIZE_ACTION_TAG;
    private static final int VIEW_CONTENT_NAVIGATION_TAG;
    private static final int VIEW_GROUP_ACTION_ADD_TAG;
    private static final int VIEW_GROUP_ACTION_REMOVE_TAG;
    private static final int VIEW_PADDING_ACTION_TAG;
    private static final android.widget.RemoteViews$MethodKey sLookupKey;
    private static final android.util.ArrayMap sMethods;
    private java.util.ArrayList mActions;
    public android.content.pm.ApplicationInfo mApplication;
    private int mApplyFlags;
    private android.widget.RemoteViews$BitmapCache mBitmapCache;
    private final java.util.Map mClassCookies;
    private boolean mIsRoot;
    private android.widget.RemoteViews mLandscape;
    private final int mLayoutId;
    private int mLightBackgroundLayoutId;
    private android.widget.RemoteViews mPortrait;

    static void <clinit>()
    {
        android.widget.'-$$Lambda$RemoteViews$FAOkoZgPKPkiYdtkDxAhkeoykww' $r0;
        android.widget.'-$$Lambda$RemoteViews$Ld8XNSMwygf42608Zln-rjTyHy0' $r1;
        android.util.ArrayMap r6;
        android.widget.RemoteViews$MethodKey r7;
        android.widget.RemoteViews$1 r8;
        android.widget.RemoteViews$2 r9;
        android.view.LayoutInflater$Filter r10;
        android.widget.RemoteViews$OnClickHandler r11;

        <android.widget.RemoteViews: int VIEW_PADDING_ACTION_TAG> = 14;

        <android.widget.RemoteViews: int VIEW_GROUP_ACTION_REMOVE_TAG> = 7;

        <android.widget.RemoteViews: int VIEW_GROUP_ACTION_ADD_TAG> = 4;

        <android.widget.RemoteViews: int VIEW_CONTENT_NAVIGATION_TAG> = 5;

        <android.widget.RemoteViews: int TEXT_VIEW_SIZE_ACTION_TAG> = 13;

        <android.widget.RemoteViews: int TEXT_VIEW_DRAWABLE_ACTION_TAG> = 11;

        <android.widget.RemoteViews: int SET_RIPPLE_DRAWABLE_COLOR_TAG> = 21;

        <android.widget.RemoteViews: int SET_REMOTE_VIEW_ADAPTER_LIST_TAG> = 15;

        <android.widget.RemoteViews: int SET_REMOTE_VIEW_ADAPTER_INTENT_TAG> = 10;

        <android.widget.RemoteViews: int SET_REMOTE_INPUTS_ACTION_TAG> = 18;

        <android.widget.RemoteViews: int SET_PENDING_INTENT_TEMPLATE_TAG> = 8;

        <android.widget.RemoteViews: int SET_ON_CLICK_RESPONSE_TAG> = 1;

        <android.widget.RemoteViews: int SET_INT_TAG_TAG> = 22;

        <android.widget.RemoteViews: int SET_EMPTY_VIEW_ACTION_TAG> = 6;

        <android.widget.RemoteViews: int SET_DRAWABLE_TINT_TAG> = 3;

        <android.widget.RemoteViews: int REFLECTION_ACTION_TAG> = 2;

        <android.widget.RemoteViews: int OVERRIDE_TEXT_COLORS_TAG> = 20;

        <android.widget.RemoteViews: int MODE_NORMAL> = 0;

        <android.widget.RemoteViews: int MODE_HAS_LANDSCAPE_AND_PORTRAIT> = 1;

        <android.widget.RemoteViews: int MAX_NESTED_VIEWS> = 10;

        <android.widget.RemoteViews: java.lang.String LOG_TAG> = "RemoteViews";

        <android.widget.RemoteViews: int LAYOUT_PARAM_ACTION_TAG> = 19;

        <android.widget.RemoteViews: int FLAG_WIDGET_IS_COLLECTION_CHILD> = 2;

        <android.widget.RemoteViews: int FLAG_USE_LIGHT_BACKGROUND_LAYOUT> = 4;

        <android.widget.RemoteViews: int FLAG_REAPPLY_DISALLOWED> = 1;

        <android.widget.RemoteViews: java.lang.String EXTRA_SHARED_ELEMENT_BOUNDS> = "android.widget.extra.SHARED_ELEMENT_BOUNDS";

        <android.widget.RemoteViews: java.lang.String EXTRA_REMOTEADAPTER_ON_LIGHT_BACKGROUND> = "remoteAdapterOnLightBackground";

        <android.widget.RemoteViews: java.lang.String EXTRA_REMOTEADAPTER_APPWIDGET_ID> = "remoteAdapterAppWidgetId";

        <android.widget.RemoteViews: int BITMAP_REFLECTION_ACTION_TAG> = 12;

        $r0 = <android.widget._$$Lambda$RemoteViews$FAOkoZgPKPkiYdtkDxAhkeoykww: android.widget.'-$$Lambda$RemoteViews$FAOkoZgPKPkiYdtkDxAhkeoykww' INSTANCE>;

        r10 = (android.view.LayoutInflater$Filter) $r0;

        <android.widget.RemoteViews: android.view.LayoutInflater$Filter INFLATER_FILTER> = r10;

        $r1 = <android.widget._$$Lambda$RemoteViews$Ld8XNSMwygf42608Zln_rjTyHy0: android.widget.'-$$Lambda$RemoteViews$Ld8XNSMwygf42608Zln-rjTyHy0' INSTANCE>;

        r11 = (android.widget.RemoteViews$OnClickHandler) $r1;

        <android.widget.RemoteViews: android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER> = r11;

        r6 = new android.util.ArrayMap;

        specialinvoke r6.<android.util.ArrayMap: void <init>()>();

        <android.widget.RemoteViews: android.util.ArrayMap sMethods> = r6;

        r7 = new android.widget.RemoteViews$MethodKey;

        specialinvoke r7.<android.widget.RemoteViews$MethodKey: void <init>()>();

        <android.widget.RemoteViews: android.widget.RemoteViews$MethodKey sLookupKey> = r7;

        r8 = new android.widget.RemoteViews$1;

        specialinvoke r8.<android.widget.RemoteViews$1: void <init>()>();

        <android.widget.RemoteViews: android.widget.RemoteViews$Action ACTION_NOOP> = r8;

        r9 = new android.widget.RemoteViews$2;

        specialinvoke r9.<android.widget.RemoteViews$2: void <init>()>();

        <android.widget.RemoteViews: android.os.Parcelable$Creator CREATOR> = r9;

        return;
    }

    protected void <init>(android.content.pm.ApplicationInfo, int)
    {
        android.widget.RemoteViews r0;
        android.content.pm.ApplicationInfo r1;
        int i0;
        android.widget.RemoteViews$BitmapCache $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = 0;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: int mApplyFlags> = 0;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = r1;

        r0.<android.widget.RemoteViews: int mLayoutId> = i0;

        $r2 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r2.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r2;

        r0.<android.widget.RemoteViews: java.util.Map mClassCookies> = null;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.content.pm.ApplicationInfo,int,java.util.Map)>(r1, null, null, 0, null);

        return;
    }

    private void <init>(android.os.Parcel, android.widget.RemoteViews$BitmapCache, android.content.pm.ApplicationInfo, int, java.util.Map)
    {
        android.widget.RemoteViews r0, $r3, $r6, $r7;
        android.os.Parcel r1;
        java.util.Map r2, $r4, $r8, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.widget.RemoteViews$BitmapCache $r5, $r10, $r14, r17;
        android.content.pm.ApplicationInfo $r9, $r11, r18;
        android.os.Parcelable$Creator $r12;
        java.lang.Object $r13;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        r17 := @parameter1: android.widget.RemoteViews$BitmapCache;

        r18 := @parameter2: android.content.pm.ApplicationInfo;

        i9 := @parameter3: int;

        r2 := @parameter4: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = 0;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: int mApplyFlags> = 0;

        if i9 <= 10 goto label2;

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i7);

        if $i8 != 1000 goto label1;

        goto label2;

     label1:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Too many nested views.");

        throw $r16;

     label2:
        i0 = i9 + 1;

        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if r17 != null goto label3;

        $r14 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r14.<android.widget.RemoteViews$BitmapCache: void <init>(android.os.Parcel)>(r1);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.util.Map copyClassCookies()>();

        r0.<android.widget.RemoteViews: java.util.Map mClassCookies> = $r15;

        goto label4;

     label3:
        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r17);

        r0.<android.widget.RemoteViews: java.util.Map mClassCookies> = r2;

        virtualinvoke r0.<android.widget.RemoteViews: void setNotRoot()>();

     label4:
        if i10 != 0 goto label7;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 != 0 goto label5;

        goto label6;

     label5:
        $r12 = <android.content.pm.ApplicationInfo: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r18 = (android.content.pm.ApplicationInfo) $r13;

     label6:
        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = r18;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.widget.RemoteViews: int mLayoutId> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = $i6;

        specialinvoke r0.<android.widget.RemoteViews: void readActionsFromParcel(android.os.Parcel,int)>(r1, i0);

        goto label8;

     label7:
        $r3 = new android.widget.RemoteViews;

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r4 = r0.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        specialinvoke $r3.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.content.pm.ApplicationInfo,int,java.util.Map)>(r1, $r5, r18, i0, $r4);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = $r3;

        $r6 = new android.widget.RemoteViews;

        $r10 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r7 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        $r9 = $r7.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r8 = r0.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        specialinvoke $r6.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.content.pm.ApplicationInfo,int,java.util.Map)>(r1, $r10, $r9, i0, $r8);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = $r6;

        $r11 = $r6.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r11;

        $i1 = $r6.<android.widget.RemoteViews: int mLayoutId>;

        r0.<android.widget.RemoteViews: int mLayoutId> = $i1;

        $i2 = $r6.<android.widget.RemoteViews: int mLightBackgroundLayoutId>;

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = $i2;

     label8:
        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.widget.RemoteViews: int mApplyFlags> = $i3;

        return;
    }

    void <init>(android.os.Parcel, android.widget.RemoteViews$BitmapCache, android.content.pm.ApplicationInfo, int, java.util.Map, android.widget.RemoteViews$1)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;
        android.widget.RemoteViews$BitmapCache r2;
        android.content.pm.ApplicationInfo r3;
        int i0;
        java.util.Map r4;
        android.widget.RemoteViews$1 r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.widget.RemoteViews$BitmapCache;

        r3 := @parameter2: android.content.pm.ApplicationInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.Map;

        r5 := @parameter5: android.widget.RemoteViews$1;

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.content.pm.ApplicationInfo,int,java.util.Map)>(r1, r2, r3, i0, r4);

        return;
    }

    public void <init>(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1, $r9, $r10, $r11, $r12;
        android.os.Parcel r2;
        android.widget.RemoteViews$BitmapCache $r3, $r7;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        java.util.Map $r5, $r8;
        java.util.ArrayList $r6;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = 0;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: int mApplyFlags> = 0;

        $r3 = r1.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r3;

        $r4 = r1.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r4;

        $z0 = r1.<android.widget.RemoteViews: boolean mIsRoot>;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = $z0;

        $i0 = r1.<android.widget.RemoteViews: int mLayoutId>;

        r0.<android.widget.RemoteViews: int mLayoutId> = $i0;

        $i1 = r1.<android.widget.RemoteViews: int mLightBackgroundLayoutId>;

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = $i1;

        $i2 = r1.<android.widget.RemoteViews: int mApplyFlags>;

        r0.<android.widget.RemoteViews: int mApplyFlags> = $i2;

        $r5 = r1.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        r0.<android.widget.RemoteViews: java.util.Map mClassCookies> = $r5;

        $z1 = specialinvoke r1.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z1 == 0 goto label1;

        $r9 = new android.widget.RemoteViews;

        $r10 = r1.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        specialinvoke $r9.<android.widget.RemoteViews: void <init>(android.widget.RemoteViews)>($r10);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = $r9;

        $r11 = new android.widget.RemoteViews;

        $r12 = r1.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        specialinvoke $r11.<android.widget.RemoteViews: void <init>(android.widget.RemoteViews)>($r12);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = $r11;

     label1:
        $r6 = r1.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r6 == null goto label2;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r8 = r0.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        virtualinvoke r2.<android.os.Parcel: void putClassCookies(java.util.Map)>($r8);

        specialinvoke r1.<android.widget.RemoteViews: void writeActionsToParcel(android.os.Parcel)>(r2);

        virtualinvoke r2.<android.os.Parcel: void setDataPosition(int)>(0);

        specialinvoke r0.<android.widget.RemoteViews: void readActionsFromParcel(android.os.Parcel,int)>(r2, 0);

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

     label2:
        $r7 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r7.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>($r7);

        return;
    }

    public void <init>(android.widget.RemoteViews, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r6, r7;
        java.lang.RuntimeException $r1, $r3;
        android.content.pm.ApplicationInfo $r2, $r4;
        boolean $z0;
        int $i0, $i1;
        android.widget.RemoteViews$BitmapCache $r5;
        java.util.Map r8, r9;

        r0 := @this: android.widget.RemoteViews;

        r6 := @parameter0: android.widget.RemoteViews;

        r7 := @parameter1: android.widget.RemoteViews;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = 0;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: int mApplyFlags> = 0;

        if r6 == null goto label4;

        if r7 == null goto label4;

        $r2 = r7.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $z0 = virtualinvoke r6.<android.widget.RemoteViews: boolean hasSameAppInfo(android.content.pm.ApplicationInfo)>($r2);

        if $z0 == 0 goto label3;

        $r4 = r7.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r4;

        $i0 = r7.<android.widget.RemoteViews: int mLayoutId>;

        r0.<android.widget.RemoteViews: int mLayoutId> = $i0;

        $i1 = r7.<android.widget.RemoteViews: int mLightBackgroundLayoutId>;

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = $i1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = r6;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = r7;

        $r5 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r5.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r5;

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r6);

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r7);

        r8 = r7.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        if r8 == null goto label1;

        r9 = r8;

        goto label2;

     label1:
        r9 = r6.<android.widget.RemoteViews: java.util.Map mClassCookies>;

     label2:
        r0.<android.widget.RemoteViews: java.util.Map mClassCookies> = r9;

        return;

     label3:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Both RemoteViews must share the same package and user");

        throw $r3;

     label4:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Both RemoteViews must be non-null");

        throw $r1;
    }

    public void <init>(java.lang.String, int)
    {
        android.widget.RemoteViews r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.widget.RemoteViews: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, $i1);

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r2, i0);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        android.widget.RemoteViews r0;
        java.lang.String r1;
        int i0, i1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <android.widget.RemoteViews: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r2, i1);

        return;
    }

    static void access$1000(android.graphics.drawable.Icon, java.util.function.Consumer)
    {
        android.graphics.drawable.Icon r0;
        java.util.function.Consumer r1;

        r0 := @parameter0: android.graphics.drawable.Icon;

        r1 := @parameter1: java.util.function.Consumer;

        staticinvoke <android.widget.RemoteViews: void visitIconUri(android.graphics.drawable.Icon,java.util.function.Consumer)>(r0, r1);

        return;
    }

    static void access$1100(android.widget.RemoteViews, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.widget.RemoteViews;

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r1);

        return;
    }

    static int access$1300(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;
        int $i0;

        r0 := @parameter0: android.widget.RemoteViews;

        $i0 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        return $i0;
    }

    static android.widget.RemoteViews$AsyncApplyTask access$1500(android.widget.RemoteViews, android.content.Context, android.view.ViewGroup, android.widget.RemoteViews$OnViewAppliedListener, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        android.widget.RemoteViews$OnViewAppliedListener r3;
        android.widget.RemoteViews$OnClickHandler r4;
        android.widget.RemoteViews$AsyncApplyTask $r5;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.view.ViewGroup;

        r3 := @parameter3: android.widget.RemoteViews$OnViewAppliedListener;

        r4 := @parameter4: android.widget.RemoteViews$OnClickHandler;

        $r5 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews$AsyncApplyTask getAsyncApplyTask(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r3, r4);

        return $r5;
    }

    static void access$1900(android.widget.RemoteViews, android.widget.RemoteViews$BitmapCache)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$BitmapCache r1;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.widget.RemoteViews$BitmapCache;

        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        return;
    }

    static android.view.View access$2500(android.widget.RemoteViews, android.content.Context, android.widget.RemoteViews, android.view.ViewGroup)
    {
        android.widget.RemoteViews r0, r2;
        android.content.Context r1;
        android.view.ViewGroup r3;
        android.view.View $r4;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.widget.RemoteViews;

        r3 := @parameter3: android.view.ViewGroup;

        $r4 = specialinvoke r0.<android.widget.RemoteViews: android.view.View inflateView(android.content.Context,android.widget.RemoteViews,android.view.ViewGroup)>(r1, r2, r3);

        return $r4;
    }

    static java.util.ArrayList access$2700(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        return $r1;
    }

    static android.widget.RemoteViews$OnClickHandler access$2800()
    {
        android.widget.RemoteViews$OnClickHandler $r0;

        $r0 = <android.widget.RemoteViews: android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER>;

        return $r0;
    }

    static java.lang.invoke.MethodHandle access$700(android.widget.RemoteViews, android.view.View, java.lang.String, java.lang.Class, boolean)
    {
        android.widget.RemoteViews r0;
        android.view.View r1;
        java.lang.String r2;
        java.lang.Class r3;
        boolean z0;
        java.lang.invoke.MethodHandle $r4;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Class;

        z0 := @parameter4: boolean;

        $r4 = specialinvoke r0.<android.widget.RemoteViews: java.lang.invoke.MethodHandle getMethod(android.view.View,java.lang.String,java.lang.Class,boolean)>(r1, r2, r3, z0);

        return $r4;
    }

    static android.widget.RemoteViews$BitmapCache access$800(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$BitmapCache $r1;

        r0 := @parameter0: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        return $r1;
    }

    static android.widget.RemoteViews$Action access$900()
    {
        android.widget.RemoteViews$Action $r0;

        $r0 = <android.widget.RemoteViews: android.widget.RemoteViews$Action ACTION_NOOP>;

        return $r0;
    }

    private void addAction(android.widget.RemoteViews$Action)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$Action r1;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.util.ArrayList $r3, $r4, $r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews$Action;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r3 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r5;

     label1:
        $r4 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("RemoteViews specifying separate landscape and portrait layouts cannot be modified. Instead, fully configure the landscape and portrait layouts individually before constructing the combined layout.");

        throw $r2;
    }

    private void configureRemoteViewsAsChild(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1;
        android.widget.RemoteViews$BitmapCache $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke r1.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>($r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setNotRoot()>();

        return;
    }

    private android.widget.RemoteViews$Action getActionFromParcel(android.os.Parcel, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$SetIntTagAction $r1;
        android.widget.RemoteViews$SetRippleDrawableColor $r2;
        android.widget.RemoteViews$OverrideTextColorsAction $r3;
        android.widget.RemoteViews$LayoutParamAction $r4;
        android.widget.RemoteViews$SetRemoteInputsAction $r5;
        android.widget.RemoteViews$SetRemoteViewsAdapterList $r6;
        android.widget.RemoteViews$ViewPaddingAction $r7;
        android.widget.RemoteViews$TextViewSizeAction $r8;
        android.widget.RemoteViews$BitmapReflectionAction $r9;
        android.widget.RemoteViews$TextViewDrawableAction $r10;
        android.widget.RemoteViews$SetRemoteViewsAdapterIntent $r11;
        android.widget.RemoteViews$SetPendingIntentTemplate $r12;
        android.widget.RemoteViews$ViewGroupActionRemove $r13;
        android.widget.RemoteViews$SetEmptyView $r14;
        android.widget.RemoteViews$ViewContentNavigation $r15;
        android.widget.RemoteViews$ViewGroupActionAdd $r16;
        java.util.Map $r17;
        android.content.pm.ApplicationInfo $r18;
        android.widget.RemoteViews$BitmapCache $r19;
        android.widget.RemoteViews$SetDrawableTint $r20;
        android.widget.RemoteViews$ReflectionAction $r21;
        android.widget.RemoteViews$SetOnClickResponse $r22;
        java.lang.StringBuilder $r23;
        android.widget.RemoteViews$ActionException $r27;
        java.lang.String $r28;
        android.os.Parcel r29;

        r0 := @this: android.widget.RemoteViews;

        r29 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        i1 = virtualinvoke r29.<android.os.Parcel: int readInt()>();

        tableswitch(i1)
        {
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label14;
            case 8: goto label13;
            case 9: goto label01;
            case 10: goto label12;
            case 11: goto label11;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label01;
            case 17: goto label01;
            case 18: goto label06;
            case 19: goto label05;
            case 20: goto label04;
            case 21: goto label03;
            case 22: goto label02;
            default: goto label01;
        };

     label01:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r27 = new android.widget.RemoteViews$ActionException;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label02:
        $r1 = new android.widget.RemoteViews$SetIntTagAction;

        specialinvoke $r1.<android.widget.RemoteViews$SetIntTagAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r1;

     label03:
        $r2 = new android.widget.RemoteViews$SetRippleDrawableColor;

        specialinvoke $r2.<android.widget.RemoteViews$SetRippleDrawableColor: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r2;

     label04:
        $r3 = new android.widget.RemoteViews$OverrideTextColorsAction;

        specialinvoke $r3.<android.widget.RemoteViews$OverrideTextColorsAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r3;

     label05:
        $r4 = new android.widget.RemoteViews$LayoutParamAction;

        specialinvoke $r4.<android.widget.RemoteViews$LayoutParamAction: void <init>(android.os.Parcel)>(r29);

        return $r4;

     label06:
        $r5 = new android.widget.RemoteViews$SetRemoteInputsAction;

        specialinvoke $r5.<android.widget.RemoteViews$SetRemoteInputsAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r5;

     label07:
        $r6 = new android.widget.RemoteViews$SetRemoteViewsAdapterList;

        specialinvoke $r6.<android.widget.RemoteViews$SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r6;

     label08:
        $r7 = new android.widget.RemoteViews$ViewPaddingAction;

        specialinvoke $r7.<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r7;

     label09:
        $r8 = new android.widget.RemoteViews$TextViewSizeAction;

        specialinvoke $r8.<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r8;

     label10:
        $r9 = new android.widget.RemoteViews$BitmapReflectionAction;

        specialinvoke $r9.<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r9;

     label11:
        $r10 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r10.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r10;

     label12:
        $r11 = new android.widget.RemoteViews$SetRemoteViewsAdapterIntent;

        specialinvoke $r11.<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r11;

     label13:
        $r12 = new android.widget.RemoteViews$SetPendingIntentTemplate;

        specialinvoke $r12.<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r12;

     label14:
        $r13 = new android.widget.RemoteViews$ViewGroupActionRemove;

        specialinvoke $r13.<android.widget.RemoteViews$ViewGroupActionRemove: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r13;

     label15:
        $r14 = new android.widget.RemoteViews$SetEmptyView;

        specialinvoke $r14.<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r14;

     label16:
        $r15 = new android.widget.RemoteViews$ViewContentNavigation;

        specialinvoke $r15.<android.widget.RemoteViews$ViewContentNavigation: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r15;

     label17:
        $r16 = new android.widget.RemoteViews$ViewGroupActionAdd;

        $r19 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r18 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r17 = r0.<android.widget.RemoteViews: java.util.Map mClassCookies>;

        specialinvoke $r16.<android.widget.RemoteViews$ViewGroupActionAdd: void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.content.pm.ApplicationInfo,int,java.util.Map)>(r0, r29, $r19, $r18, i0, $r17);

        return $r16;

     label18:
        $r20 = new android.widget.RemoteViews$SetDrawableTint;

        specialinvoke $r20.<android.widget.RemoteViews$SetDrawableTint: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r20;

     label19:
        $r21 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r21.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r21;

     label20:
        $r22 = new android.widget.RemoteViews$SetOnClickResponse;

        specialinvoke $r22.<android.widget.RemoteViews$SetOnClickResponse: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r29);

        return $r22;
    }

    private static android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)
    {
        java.lang.String r0, $r4, $r10;
        int i0, $i1, $i2;
        android.app.Application r1;
        java.lang.IllegalStateException $r2;
        android.content.Context $r3, r13;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r9;
        android.content.pm.ApplicationInfo r11, r12;
        android.os.UserHandle r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r1 == null goto label5;

        r11 = virtualinvoke r1.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = r11.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i2 != i0 goto label2;

        r12 = r11;

        $r4 = r11.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label3;

     label2:
        r13 = virtualinvoke r1.<android.app.Application: android.content.Context getBaseContext()>();

        r14 = new android.os.UserHandle;

        specialinvoke r14.<android.os.UserHandle: void <init>(int)>(i0);

        $r3 = virtualinvoke r13.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>(r0, 0, r14);

        r12 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label3:
        return r12;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot create remote views out of an aplication.");

        throw $r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private android.widget.RemoteViews$AsyncApplyTask getAsyncApplyTask(android.content.Context, android.view.ViewGroup, android.widget.RemoteViews$OnViewAppliedListener, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, $r6;
        android.content.Context r1;
        android.view.ViewGroup r2;
        android.widget.RemoteViews$OnViewAppliedListener r3;
        android.widget.RemoteViews$OnClickHandler r4;
        android.widget.RemoteViews$AsyncApplyTask $r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.widget.RemoteViews$OnViewAppliedListener;

        r4 := @parameter3: android.widget.RemoteViews$OnClickHandler;

        $r5 = new android.widget.RemoteViews$AsyncApplyTask;

        $r6 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r1);

        specialinvoke $r5.<android.widget.RemoteViews$AsyncApplyTask: void <init>(android.widget.RemoteViews,android.widget.RemoteViews,android.view.ViewGroup,android.content.Context,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler,android.view.View,android.widget.RemoteViews$1)>(r0, $r6, r2, r1, r3, r4, null, null);

        return $r5;
    }

    private android.content.Context getContextForResources(android.content.Context)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1, r16;
        android.content.pm.ApplicationInfo $r2, $r3, $r4, $r6, $r11;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7, $r12, $r15;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        if $r2 == null goto label4;

        $i0 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        $r3 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i0 != $i2 goto label1;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r4 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r16 = virtualinvoke r1.<android.content.Context: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>($r4, 4);

     label2:
        return r16;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name ");

        $r11 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteViews", $r15);

     label4:
        return r1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private java.lang.invoke.MethodHandle getMethod(android.view.View, java.lang.String, java.lang.Class, boolean)
    {
        android.widget.RemoteViews r0;
        java.lang.String r1, $r7, $r13, $r17, $r21, $r23, $r28, $r34, $r39, $r43, $r46, $r49, $r53, $r55;
        boolean z0, $z1, $z2;
        android.util.ArrayMap r2, $r5, $r29;
        android.widget.RemoteViews$MethodKey $r3, $r4, r64;
        java.lang.Object $r6;
        java.lang.invoke.MethodHandle $r8, $r9, $r14, $r25, r70, r75;
        java.lang.invoke.MethodType $r10, $r11, r71;
        java.lang.invoke.MethodHandles$Lookup $r12, $r24;
        java.lang.Class[] $r15, $r31, $r42;
        java.lang.'annotation'.Annotation $r26;
        android.view.RemotableViewMethod $r27;
        java.lang.Throwable $r32, $r47, $r56;
        android.view.View r57;
        java.lang.Class r58, r59;
        android.widget.RemoteViews$MethodArgs r60, r61, r63;
        java.lang.reflect.Method r62;
        android.widget.RemoteViews$ActionException r65, r68, r73;
        java.lang.StringBuilder r66, r69, r74;

        r0 := @this: android.widget.RemoteViews;

        r57 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.String;

        r58 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        r59 = virtualinvoke r57.<java.lang.Object: java.lang.Class getClass()>();

        r2 = <android.widget.RemoteViews: android.util.ArrayMap sMethods>;

        entermonitor r2;

     label01:
        $r3 = <android.widget.RemoteViews: android.widget.RemoteViews$MethodKey sLookupKey>;

        virtualinvoke $r3.<android.widget.RemoteViews$MethodKey: void set(java.lang.Class,java.lang.Class,java.lang.String)>(r59, r58, r1);

        $r5 = <android.widget.RemoteViews: android.util.ArrayMap sMethods>;

        $r4 = <android.widget.RemoteViews: android.widget.RemoteViews$MethodKey sLookupKey>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r60 = (android.widget.RemoteViews$MethodArgs) $r6;

     label02:
        r61 = r60;

        if r60 != null goto label13;

        if r58 != null goto label05;

     label03:
        $r31 = newarray (java.lang.Class)[0];

        r62 = virtualinvoke r59.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r31);

     label04:
        goto label06;

     label05:
        $r15 = newarray (java.lang.Class)[1];

        $r15[0] = r58;

        r62 = virtualinvoke r59.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r15);

     label06:
        $z2 = virtualinvoke r62.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/view/RemotableViewMethod;");

        if $z2 == 0 goto label10;

        r63 = new android.widget.RemoteViews$MethodArgs;

        specialinvoke r63.<android.widget.RemoteViews$MethodArgs: void <init>()>();

     label07:
        $r24 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup publicLookup()>();

        $r25 = virtualinvoke $r24.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflect(java.lang.reflect.Method)>(r62);

        r63.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle syncMethod> = $r25;

        $r26 = virtualinvoke r62.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/view/RemotableViewMethod;");

        $r27 = (android.view.RemotableViewMethod) $r26;

        $r28 = interfaceinvoke $r27.<android.view.RemotableViewMethod: java.lang.String asyncImpl()>();

        r63.<android.widget.RemoteViews$MethodArgs: java.lang.String asyncMethodName> = $r28;

     label08:
        r64 = new android.widget.RemoteViews$MethodKey;

        specialinvoke r64.<android.widget.RemoteViews$MethodKey: void <init>()>();

        virtualinvoke r64.<android.widget.RemoteViews$MethodKey: void set(java.lang.Class,java.lang.Class,java.lang.String)>(r59, r58, r1);

        $r29 = <android.widget.RemoteViews: android.util.ArrayMap sMethods>;

        virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r63);

     label09:
        r61 = r63;

        goto label13;

     label10:
        r65 = new android.widget.RemoteViews$ActionException;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view: ");

        $r17 = virtualinvoke r59.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t use method with RemoteViews: ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = staticinvoke <android.widget.RemoteViews: java.lang.String getParameters(java.lang.Class)>(r58);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r23);

        throw r65;

     label11:
        $r47 := @caughtexception;

     label12:
        r68 = new android.widget.RemoteViews$ActionException;

        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view: ");

        $r49 = virtualinvoke r59.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t have method: ");

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r53 = staticinvoke <android.widget.RemoteViews: java.lang.String getParameters(java.lang.Class)>(r58);

        virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r68.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r55);

        throw r68;

     label13:
        if z0 != 0 goto label16;

     label14:
        r70 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle syncMethod>;

        exitmonitor r2;

     label15:
        return r70;

     label16:
        $r7 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.String asyncMethodName>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label18;

        exitmonitor r2;

     label17:
        return null;

     label18:
        $r8 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle asyncMethod>;

        if $r8 != null goto label23;

        $r9 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle syncMethod>;

        $r10 = virtualinvoke $r9.<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type()>();

        $r11 = virtualinvoke $r10.<java.lang.invoke.MethodType: java.lang.invoke.MethodType dropParameterTypes(int,int)>(0, 1);

        r71 = virtualinvoke $r11.<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeReturnType(java.lang.Class)>(class "Ljava/lang/Runnable;");

     label19:
        $r12 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup publicLookup()>();

        $r13 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.String asyncMethodName>;

        $r14 = virtualinvoke $r12.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>(r59, $r13, r71);

        r61.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle asyncMethod> = $r14;

     label20:
        goto label23;

     label21:
        $r32 := @caughtexception;

     label22:
        r73 = new android.widget.RemoteViews$ActionException;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Async implementation declared as ");

        $r34 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.String asyncMethodName>;

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not defined for ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": public Runnable ");

        $r39 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.String asyncMethodName>;

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r42 = virtualinvoke r71.<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>();

        $r43 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", $r42);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r46 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r73.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r46);

        throw r73;

     label23:
        r75 = r61.<android.widget.RemoteViews$MethodArgs: java.lang.invoke.MethodHandle asyncMethod>;

        exitmonitor r2;

     label24:
        return r75;

     label25:
        $r56 := @caughtexception;

     label26:
        exitmonitor r2;

     label27:
        throw $r56;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.NoSuchMethodException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.NoSuchMethodException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.NoSuchMethodException from label06 to label07 with label11;
        catch java.lang.IllegalAccessException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.NoSuchMethodException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.NoSuchMethodException from label10 to label11 with label11;
        catch java.lang.IllegalAccessException from label10 to label11 with label11;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.NoSuchMethodException from label19 to label20 with label21;
        catch java.lang.IllegalAccessException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private static java.lang.String getParameters(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return "()";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)
    {
        android.widget.RemoteViews r0, $r4, $r5;
        android.content.Context r1;
        boolean $z0;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int orientation>;

        if $i0 != 2 goto label1;

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        return $r5;

     label1:
        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        return $r4;

     label2:
        return r0;
    }

    public static android.graphics.Rect getSourceBounds(android.view.View)
    {
        android.view.View r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int[] r1;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.content.res.CompatibilityInfo $r5;
        android.graphics.Rect $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: android.view.View;

        $r3 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        f0 = $r5.<android.content.res.CompatibilityInfo: float applicationScale>;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.view.View: void getLocationOnScreen(int[])>(r1);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $i0 = r1[0];

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        $r6.<android.graphics.Rect: int left> = $i1;

        $i2 = r1[1];

        $f4 = (float) $i2;

        $f5 = $f4 * f0;

        $f6 = $f5 + 0.5F;

        $i3 = (int) $f6;

        $r6.<android.graphics.Rect: int top> = $i3;

        $i4 = r1[0];

        $i5 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i6 = $i4 + $i5;

        $f7 = (float) $i6;

        $f8 = $f7 * f0;

        $f9 = $f8 + 0.5F;

        $i7 = (int) $f9;

        $r6.<android.graphics.Rect: int right> = $i7;

        $i8 = r1[1];

        $i9 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i10 = $i8 + $i9;

        $f10 = (float) $i10;

        $f11 = $f10 * f0;

        $f12 = $f11 + 0.5F;

        $i11 = (int) $f12;

        $r6.<android.graphics.Rect: int bottom> = $i11;

        return $r6;
    }

    private boolean hasLandscapeAndPortraitLayouts()
    {
        android.widget.RemoteViews r0, $r1, $r2;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private android.view.View inflateView(android.content.Context, android.widget.RemoteViews, android.view.ViewGroup)
    {
        android.widget.RemoteViews r0, r2;
        android.content.Context r1;
        android.view.ViewGroup r3;
        android.view.View $r4;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.widget.RemoteViews;

        r3 := @parameter2: android.view.ViewGroup;

        $r4 = specialinvoke r0.<android.widget.RemoteViews: android.view.View inflateView(android.content.Context,android.widget.RemoteViews,android.view.ViewGroup,int)>(r1, r2, r3, 0);

        return $r4;
    }

    private android.view.View inflateView(android.content.Context, android.widget.RemoteViews, android.view.ViewGroup, int)
    {
        android.widget.RemoteViews r0, r1;
        android.view.ViewGroup r2;
        int i0, $i1, $i2;
        android.widget.RemoteViews$RemoteViewsContextWrapper $r4;
        android.content.Context $r5, r10;
        java.lang.Object $r6;
        android.view.LayoutInflater $r7, r12;
        boolean $z0;
        java.lang.Integer $r8;
        android.view.ContextThemeWrapper $r9;
        android.content.ContextWrapper r11;
        android.view.LayoutInflater$Filter r13;
        android.view.View r14;

        r0 := @this: android.widget.RemoteViews;

        r10 := @parameter0: android.content.Context;

        r1 := @parameter1: android.widget.RemoteViews;

        r2 := @parameter2: android.view.ViewGroup;

        i0 := @parameter3: int;

        $r4 = new android.widget.RemoteViews$RemoteViewsContextWrapper;

        $r5 = specialinvoke r0.<android.widget.RemoteViews: android.content.Context getContextForResources(android.content.Context)>(r10);

        specialinvoke $r4.<android.widget.RemoteViews$RemoteViewsContextWrapper: void <init>(android.content.Context,android.content.Context)>(r10, $r5);

        r11 = $r4;

        if i0 == 0 goto label1;

        $r9 = new android.view.ContextThemeWrapper;

        specialinvoke $r9.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r4, i0);

        r11 = $r9;

     label1:
        $r6 = virtualinvoke r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r7 = (android.view.LayoutInflater) $r6;

        r12 = virtualinvoke $r7.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>(r11);

        $z0 = virtualinvoke r0.<android.widget.RemoteViews: boolean shouldUseStaticFilter()>();

        if $z0 == 0 goto label2;

        r13 = <android.widget.RemoteViews: android.view.LayoutInflater$Filter INFLATER_FILTER>;

        goto label3;

     label2:
        r13 = r0;

     label3:
        virtualinvoke r12.<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>(r13);

        $i1 = virtualinvoke r1.<android.widget.RemoteViews: int getLayoutId()>();

        r14 = virtualinvoke r12.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r2, 0);

        $i2 = virtualinvoke r1.<android.widget.RemoteViews: int getLayoutId()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r14.<android.view.View: void setTagInternal(int,java.lang.Object)>(16908312, $r8);

        return r14;
    }

    static boolean lambda$static$0(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/widget/RemoteViews$RemoteView;");

        return $z0;
    }

    static boolean lambda$static$1(android.view.View, android.app.PendingIntent, android.widget.RemoteViews$RemoteResponse)
    {
        android.view.View r0;
        android.app.PendingIntent r1;
        android.widget.RemoteViews$RemoteResponse r2;
        android.util.Pair $r3;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: android.widget.RemoteViews$RemoteResponse;

        $r3 = virtualinvoke r2.<android.widget.RemoteViews$RemoteResponse: android.util.Pair getLaunchOptions(android.view.View)>(r0);

        $z0 = staticinvoke <android.widget.RemoteViews: boolean startPendingIntent(android.view.View,android.app.PendingIntent,android.util.Pair)>(r0, r1, $r3);

        return $z0;
    }

    private void performApply(android.view.View, android.view.ViewGroup, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0;
        android.view.View r1;
        android.view.ViewGroup r2;
        int i0, i1;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        android.widget.RemoteViews$Action $r7;
        android.widget.RemoteViews$OnClickHandler r8;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup;

        r8 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r3 == null goto label3;

        if r8 != null goto label1;

        r8 = <android.widget.RemoteViews: android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER>;

        goto label1;

     label1:
        $r4 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.widget.RemoteViews$Action) $r6;

        virtualinvoke $r7.<android.widget.RemoteViews$Action: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r8);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void readActionsFromParcel(android.os.Parcel, int)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;
        int i0, i1, i2;
        java.util.ArrayList $r2, $r3;
        android.widget.RemoteViews$Action $r4;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 <= 0 goto label2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i1);

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r4 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews$Action getActionFromParcel(android.os.Parcel,int)>(r1, i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void setBitmapCache(android.widget.RemoteViews$BitmapCache)
    {
        android.widget.RemoteViews r0, $r3, $r4;
        android.widget.RemoteViews$BitmapCache r1;
        java.util.ArrayList r2, $r5;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r6;
        android.widget.RemoteViews$Action $r7;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews$BitmapCache;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = r1;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label3;

        r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r2 == null goto label4;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.widget.RemoteViews$Action) $r6;

        virtualinvoke $r7.<android.widget.RemoteViews$Action: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        specialinvoke $r3.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        specialinvoke $r4.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

     label4:
        return;
    }

    public static boolean startPendingIntent(android.view.View, android.app.PendingIntent, android.util.Pair)
    {
        android.app.PendingIntent r0;
        android.util.Pair r1;
        android.content.IntentSender $r2;
        java.lang.Object $r3, $r4;
        android.app.ActivityOptions $r5;
        android.content.Intent $r6;
        android.os.Bundle $r7;
        java.lang.Exception $r8;
        android.content.IntentSender$SendIntentException $r9;
        android.view.View r10;
        android.content.Context r11;

        r10 := @parameter0: android.view.View;

        r0 := @parameter1: android.app.PendingIntent;

        r1 := @parameter2: android.util.Pair;

     label1:
        r11 = virtualinvoke r10.<android.view.View: android.content.Context getContext()>();

     label2:
        $r2 = virtualinvoke r0.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        $r3 = r1.<android.util.Pair: java.lang.Object first>;

        $r6 = (android.content.Intent) $r3;

        $r4 = r1.<android.util.Pair: java.lang.Object second>;

        $r5 = (android.app.ActivityOptions) $r4;

        $r7 = virtualinvoke $r5.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke r11.<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>($r2, $r6, 0, 0, 0, $r7);

     label3:
        return 1;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteViews", "Cannot send pending intent due to unknown exception: ", $r8);

        return 0;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteViews", "Cannot send pending intent: ", $r9);

        return 0;

        catch android.content.IntentSender$SendIntentException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label4;
        catch android.content.IntentSender$SendIntentException from label2 to label3 with label5;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static void visitIconUri(android.graphics.drawable.Icon, java.util.function.Consumer)
    {
        android.graphics.drawable.Icon r0;
        java.util.function.Consumer r1;
        int $i0, $i1;
        android.net.Uri $r2;

        r0 := @parameter0: android.graphics.drawable.Icon;

        r1 := @parameter1: java.util.function.Consumer;

        if r0 == null goto label2;

        $i0 = virtualinvoke r0.<android.graphics.drawable.Icon: int getType()>();

        if $i0 == 4 goto label1;

        $i1 = virtualinvoke r0.<android.graphics.drawable.Icon: int getType()>();

        if $i1 != 6 goto label2;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: android.net.Uri getUri()>();

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r2);

     label2:
        return;
    }

    private void writeActionsToParcel(android.os.Parcel)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;
        java.util.ArrayList $r2, r5;
        java.lang.Object $r3;
        int $i0, i1, i2;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;
        android.widget.RemoteViews$Action r6;
        byte b3;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r5 == null goto label1;

        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        i1 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (android.widget.RemoteViews$Action) $r3;

        $i0 = virtualinvoke r6.<android.widget.RemoteViews$Action: int getActionTag()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r4 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $z0 = virtualinvoke r6.<android.widget.RemoteViews$Action: boolean hasSameAppInfo(android.content.pm.ApplicationInfo)>($r4);

        if $z0 == 0 goto label4;

        b3 = 2;

        goto label5;

     label4:
        b3 = 0;

     label5:
        virtualinvoke r6.<android.widget.RemoteViews$Action: void writeToParcel(android.os.Parcel,int)>(r1, b3);

        i2 = i2 + 1;

        goto label3;

     label6:
        return;
    }

    public void addFlags(int)
    {
        android.widget.RemoteViews r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        $i2 = $i1 | i0;

        r0.<android.widget.RemoteViews: int mApplyFlags> = $i2;

        return;
    }

    public void addView(int, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r3;
        int i0;
        android.widget.RemoteViews$ViewGroupActionAdd $r1;
        android.widget.RemoteViews$ViewGroupActionRemove $r2;
        android.widget.RemoteViews$Action r4;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r3 := @parameter1: android.widget.RemoteViews;

        if r3 != null goto label1;

        $r2 = new android.widget.RemoteViews$ViewGroupActionRemove;

        specialinvoke $r2.<android.widget.RemoteViews$ViewGroupActionRemove: void <init>(android.widget.RemoteViews,int)>(r0, i0);

        r4 = $r2;

        goto label2;

     label1:
        $r1 = new android.widget.RemoteViews$ViewGroupActionAdd;

        specialinvoke $r1.<android.widget.RemoteViews$ViewGroupActionAdd: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>(r0, i0, r3);

        r4 = $r1;

     label2:
        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>(r4);

        return;
    }

    public void addView(int, android.widget.RemoteViews, int)
    {
        android.widget.RemoteViews r0, r1;
        int i0, i1;
        android.widget.RemoteViews$ViewGroupActionAdd $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        i1 := @parameter2: int;

        $r2 = new android.widget.RemoteViews$ViewGroupActionAdd;

        specialinvoke $r2.<android.widget.RemoteViews$ViewGroupActionAdd: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews,int)>(r0, i0, r1, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public android.view.View apply(android.content.Context, android.view.ViewGroup)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        android.view.View $r3;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        $r3 = virtualinvoke r0.<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r1, r2, null);

        return $r3;
    }

    public android.view.View apply(android.content.Context, android.view.ViewGroup, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, r3;
        android.view.ViewGroup r1;
        android.widget.RemoteViews$OnClickHandler r2;
        android.content.Context r4;
        android.view.View r5;

        r0 := @this: android.widget.RemoteViews;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r3 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r4);

        r5 = specialinvoke r0.<android.widget.RemoteViews: android.view.View inflateView(android.content.Context,android.widget.RemoteViews,android.view.ViewGroup)>(r4, r3, r1);

        specialinvoke r3.<android.widget.RemoteViews: void performApply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r5, r1, r2);

        return r5;
    }

    public android.os.CancellationSignal applyAsync(android.content.Context, android.view.ViewGroup, java.util.concurrent.Executor, android.widget.RemoteViews$OnViewAppliedListener)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        java.util.concurrent.Executor r3;
        android.widget.RemoteViews$OnViewAppliedListener r4;
        android.os.CancellationSignal $r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.widget.RemoteViews$OnViewAppliedListener;

        $r5 = virtualinvoke r0.<android.widget.RemoteViews: android.os.CancellationSignal applyAsync(android.content.Context,android.view.ViewGroup,java.util.concurrent.Executor,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r3, r4, null);

        return $r5;
    }

    public android.os.CancellationSignal applyAsync(android.content.Context, android.view.ViewGroup, java.util.concurrent.Executor, android.widget.RemoteViews$OnViewAppliedListener, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        java.util.concurrent.Executor r3;
        android.widget.RemoteViews$OnViewAppliedListener r4;
        android.widget.RemoteViews$OnClickHandler r5;
        android.widget.RemoteViews$AsyncApplyTask $r6;
        android.os.CancellationSignal $r7;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.widget.RemoteViews$OnViewAppliedListener;

        r5 := @parameter4: android.widget.RemoteViews$OnClickHandler;

        $r6 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews$AsyncApplyTask getAsyncApplyTask(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r4, r5);

        $r7 = staticinvoke <android.widget.RemoteViews$AsyncApplyTask: android.os.CancellationSignal access$2300(android.widget.RemoteViews$AsyncApplyTask,java.util.concurrent.Executor)>($r6, r3);

        return $r7;
    }

    public android.view.View applyWithTheme(android.content.Context, android.view.ViewGroup, android.widget.RemoteViews$OnClickHandler, int)
    {
        android.widget.RemoteViews r0, r3;
        android.view.ViewGroup r1;
        android.widget.RemoteViews$OnClickHandler r2;
        int i0;
        android.content.Context r4;
        android.view.View r5;

        r0 := @this: android.widget.RemoteViews;

        r4 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        i0 := @parameter3: int;

        r3 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r4);

        r5 = specialinvoke r0.<android.widget.RemoteViews: android.view.View inflateView(android.content.Context,android.widget.RemoteViews,android.view.ViewGroup,int)>(r4, r3, r1, i0);

        specialinvoke r3.<android.widget.RemoteViews: void performApply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r5, r1, r2);

        return r5;
    }

    public android.widget.RemoteViews clone()
    {
        android.widget.RemoteViews r0, $r1;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        $z0 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, "RemoteView has been attached to another RemoteView. May only clone the root of a RemoteView hierarchy.");

        $r1 = new android.widget.RemoteViews;

        specialinvoke $r1.<android.widget.RemoteViews: void <init>(android.widget.RemoteViews)>(r0);

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.widget.RemoteViews r0, $r1;

        r0 := @this: android.widget.RemoteViews;

        $r1 = virtualinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews clone()>();

        return $r1;
    }

    public int describeContents()
    {
        android.widget.RemoteViews r0;

        r0 := @this: android.widget.RemoteViews;

        return 0;
    }

    public int estimateMemoryUsage()
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$BitmapCache $r1;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $i0 = virtualinvoke $r1.<android.widget.RemoteViews$BitmapCache: int getBitmapMemory()>();

        return $i0;
    }

    public android.widget.RemoteViews getDarkTextViews()
    {
        android.widget.RemoteViews r0, $r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.Throwable $r2;

        r0 := @this: android.widget.RemoteViews;

        $z0 = virtualinvoke r0.<android.widget.RemoteViews: boolean hasFlags(int)>(4);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<android.widget.RemoteViews: void addFlags(int)>(4);

        $r1 = new android.widget.RemoteViews;

        specialinvoke $r1.<android.widget.RemoteViews: void <init>(android.widget.RemoteViews)>(r0);

     label2:
        $i0 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        $i1 = $i0 & -5;

        r0.<android.widget.RemoteViews: int mApplyFlags> = $i1;

        return $r1;

     label3:
        $r2 := @caughtexception;

        $i2 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        $i3 = $i2 & -5;

        r0.<android.widget.RemoteViews: int mApplyFlags> = $i3;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getLayoutId()
    {
        android.widget.RemoteViews r0;
        boolean $z0;
        int i0;

        r0 := @this: android.widget.RemoteViews;

        $z0 = virtualinvoke r0.<android.widget.RemoteViews: boolean hasFlags(int)>(4);

        if $z0 == 0 goto label1;

        i0 = r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId>;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        i0 = r0.<android.widget.RemoteViews: int mLayoutId>;

     label2:
        return i0;
    }

    public java.lang.String getPackage()
    {
        android.widget.RemoteViews r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2;

        r0 := @this: android.widget.RemoteViews;

        r1 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        if r1 == null goto label1;

        r2 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getSequenceNumber()
    {
        android.widget.RemoteViews r0;
        java.util.ArrayList r1;
        int i0;

        r0 := @this: android.widget.RemoteViews;

        r1 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label2:
        return i0;
    }

    public boolean hasFlags(int)
    {
        android.widget.RemoteViews r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasSameAppInfo(android.content.pm.ApplicationInfo)
    {
        android.widget.RemoteViews r0;
        android.content.pm.ApplicationInfo r1, $r2, $r5;
        java.lang.String $r3, $r4;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r4 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $i1 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 != $i0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void mergeRemoteViews(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, $r2, r21;
        java.util.ArrayList r1, $r4, $r5, $r12, $r13, $r16, $r20;
        int i0, i1, i2, i3, i4;
        java.util.HashMap $r3;
        android.widget.RemoteViews$BitmapCache $r6;
        java.lang.Object $r7, $r8, $r10, $r14, $r17;
        android.widget.RemoteViews$Action $r9, $r11, r24, r25;
        boolean $z0;
        java.lang.String $r18, r26;

        r0 := @this: android.widget.RemoteViews;

        r21 := @parameter0: android.widget.RemoteViews;

        if r21 != null goto label01;

        return;

     label01:
        $r2 = new android.widget.RemoteViews;

        specialinvoke $r2.<android.widget.RemoteViews: void <init>(android.widget.RemoteViews)>(r21);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r4 != null goto label02;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r20;

     label02:
        $r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = 0;

     label03:
        if i2 >= i1 goto label04;

        $r16 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r24 = (android.widget.RemoteViews$Action) $r17;

        $r18 = virtualinvoke r24.<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r24);

        i2 = i2 + 1;

        goto label03;

     label04:
        r1 = $r2.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r1 != null goto label05;

        return;

     label05:
        i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label06:
        if i4 >= i3 goto label10;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r25 = (android.widget.RemoteViews$Action) $r7;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r9 = (android.widget.RemoteViews$Action) $r8;

        r26 = virtualinvoke $r9.<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>();

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r11 = (android.widget.RemoteViews$Action) $r10;

        i0 = virtualinvoke $r11.<android.widget.RemoteViews$Action: int mergeBehavior()>();

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r26);

        if $z0 == 0 goto label07;

        if i0 != 0 goto label07;

        $r13 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r14 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r26);

        virtualinvoke $r13.<java.util.ArrayList: boolean remove(java.lang.Object)>($r14);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r26);

     label07:
        if i0 == 0 goto label08;

        if i0 != 1 goto label09;

     label08:
        $r12 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        $r6 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r6.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r6;

        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>($r6);

        return;
    }

    public boolean onLoadClass(java.lang.Class)
    {
        android.widget.RemoteViews r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Landroid/widget/RemoteViews$RemoteView;");

        return $z0;
    }

    public void overrideTextColors(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$OverrideTextColorsAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$OverrideTextColorsAction;

        specialinvoke $r1.<android.widget.RemoteViews$OverrideTextColorsAction: void <init>(android.widget.RemoteViews,int)>(r0, i0);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public boolean prefersAsyncApply()
    {
        android.widget.RemoteViews r0;
        java.util.ArrayList r1, $r2;
        int i0, i1;
        java.lang.Object $r3;
        android.widget.RemoteViews$Action $r4;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        r1 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.widget.RemoteViews$Action) $r3;

        $z0 = virtualinvoke $r4.<android.widget.RemoteViews$Action: boolean prefersAsyncApply()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void reapply(android.content.Context, android.view.View)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.View r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        virtualinvoke r0.<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View,android.widget.RemoteViews$OnClickHandler)>(r1, r2, null);

        return;
    }

    public void reapply(android.content.Context, android.view.View, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, r9;
        android.view.View r1;
        android.widget.RemoteViews$OnClickHandler r2;
        boolean $z0;
        android.view.ViewParent $r3;
        android.view.ViewGroup $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i0, $i1;
        java.lang.RuntimeException $r7;
        android.content.Context r8;

        r0 := @this: android.widget.RemoteViews;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r9 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r8);

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(16908312);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke r9.<android.widget.RemoteViews: int getLayoutId()>();

        if $i0 != $i1 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to re-apply RemoteViews to a view that that does not share the same root layout id.");

        throw $r7;

     label2:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r4 = (android.view.ViewGroup) $r3;

        specialinvoke r9.<android.widget.RemoteViews: void performApply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r1, $r4, r2);

        return;
    }

    public android.os.CancellationSignal reapplyAsync(android.content.Context, android.view.View, java.util.concurrent.Executor, android.widget.RemoteViews$OnViewAppliedListener)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.View r2;
        java.util.concurrent.Executor r3;
        android.widget.RemoteViews$OnViewAppliedListener r4;
        android.os.CancellationSignal $r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.widget.RemoteViews$OnViewAppliedListener;

        $r5 = virtualinvoke r0.<android.widget.RemoteViews: android.os.CancellationSignal reapplyAsync(android.content.Context,android.view.View,java.util.concurrent.Executor,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r3, r4, null);

        return $r5;
    }

    public android.os.CancellationSignal reapplyAsync(android.content.Context, android.view.View, java.util.concurrent.Executor, android.widget.RemoteViews$OnViewAppliedListener, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, r6;
        android.content.Context r1;
        android.view.View r2;
        java.util.concurrent.Executor r3;
        android.widget.RemoteViews$OnViewAppliedListener r4;
        android.widget.RemoteViews$OnClickHandler r5;
        boolean $z0;
        android.widget.RemoteViews$AsyncApplyTask $r7;
        android.view.ViewParent $r8;
        android.view.ViewGroup $r9;
        android.os.CancellationSignal $r10;
        java.lang.Object $r11;
        java.lang.Integer $r12;
        int $i0, $i1;
        java.lang.RuntimeException $r13;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.widget.RemoteViews$OnViewAppliedListener;

        r5 := @parameter4: android.widget.RemoteViews$OnClickHandler;

        r6 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r1);

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(16908312);

        $r12 = (java.lang.Integer) $r11;

        $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke r6.<android.widget.RemoteViews: int getLayoutId()>();

        if $i0 != $i1 goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to re-apply RemoteViews to a view that that does not share the same root layout id.");

        throw $r13;

     label2:
        $r7 = new android.widget.RemoteViews$AsyncApplyTask;

        $r8 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        $r9 = (android.view.ViewGroup) $r8;

        specialinvoke $r7.<android.widget.RemoteViews$AsyncApplyTask: void <init>(android.widget.RemoteViews,android.widget.RemoteViews,android.view.ViewGroup,android.content.Context,android.widget.RemoteViews$OnViewAppliedListener,android.widget.RemoteViews$OnClickHandler,android.view.View,android.widget.RemoteViews$1)>(r0, r6, $r9, r1, r4, r5, r2, null);

        $r10 = staticinvoke <android.widget.RemoteViews$AsyncApplyTask: android.os.CancellationSignal access$2300(android.widget.RemoteViews$AsyncApplyTask,java.util.concurrent.Executor)>($r7, r3);

        return $r10;
    }

    public void reduceImageSizes(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList r1;
        android.widget.RemoteViews$BitmapCache $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4, $r5;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        r1 = $r2.<android.widget.RemoteViews$BitmapCache: java.util.ArrayList mBitmaps>;

        i3 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i3 >= $i2 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.graphics.Bitmap) $r3;

        $r5 = staticinvoke <android.graphics.drawable.Icon: android.graphics.Bitmap scaleDownIfNecessary(android.graphics.Bitmap,int,int)>($r4, i0, i1);

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i3, $r5);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void removeAllViews(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ViewGroupActionRemove $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ViewGroupActionRemove;

        specialinvoke $r1.<android.widget.RemoteViews$ViewGroupActionRemove: void <init>(android.widget.RemoteViews,int)>(r0, i0);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void removeAllViewsExceptId(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$ViewGroupActionRemove $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$ViewGroupActionRemove;

        specialinvoke $r1.<android.widget.RemoteViews$ViewGroupActionRemove: void <init>(android.widget.RemoteViews,int,int)>(r0, i0, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setAccessibilityTraversalAfter(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setAccessibilityTraversalAfter", i1);

        return;
    }

    public void setAccessibilityTraversalBefore(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setAccessibilityTraversalBefore", i1);

        return;
    }

    public void setBitmap(int, java.lang.String, android.graphics.Bitmap)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.graphics.Bitmap r2;
        android.widget.RemoteViews$BitmapReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Bitmap;

        $r3 = new android.widget.RemoteViews$BitmapReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap)>(r0, i0, r1, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setBoolean(int, java.lang.String, boolean)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        boolean z0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Boolean $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 1, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setBundle(int, java.lang.String, android.os.Bundle)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 13, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setByte(int, java.lang.String, byte)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        byte b1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Byte $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        b1 := @parameter2: byte;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 2, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setChar(int, java.lang.String, char)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        char c1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Character $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        c1 := @parameter2: char;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 8, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setCharSequence(int, java.lang.String, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 10, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setChronometer(int, long, java.lang.String, boolean)
    {
        android.widget.RemoteViews r0;
        int i0;
        long l1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(i0, "setBase", l1);

        virtualinvoke r0.<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>(i0, "setFormat", r1);

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(i0, "setStarted", z0);

        return;
    }

    public void setChronometerCountDown(int, boolean)
    {
        android.widget.RemoteViews r0;
        int i0;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(i0, "setCountDown", z0);

        return;
    }

    public void setColorStateList(int, java.lang.String, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.content.res.ColorStateList r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.res.ColorStateList;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 15, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setContentDescription(int, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>(i0, "setContentDescription", r1);

        return;
    }

    public void setDisplayedChild(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setDisplayedChild", i1);

        return;
    }

    public void setDouble(int, java.lang.String, double)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        double d0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Double $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 7, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setDrawableTint(int, boolean, int, android.graphics.PorterDuff$Mode)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        boolean z0;
        android.graphics.PorterDuff$Mode r1;
        android.widget.RemoteViews$SetDrawableTint $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        r1 := @parameter3: android.graphics.PorterDuff$Mode;

        $r2 = new android.widget.RemoteViews$SetDrawableTint;

        specialinvoke $r2.<android.widget.RemoteViews$SetDrawableTint: void <init>(android.widget.RemoteViews,int,boolean,int,android.graphics.PorterDuff$Mode)>(r0, i0, z0, i1, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setEmptyView(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$SetEmptyView $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$SetEmptyView;

        specialinvoke $r1.<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,int,int)>(r0, i0, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setFloat(int, java.lang.String, float)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        float f0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Float $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 6, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setIcon(int, java.lang.String, android.graphics.drawable.Icon)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.graphics.drawable.Icon r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.drawable.Icon;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 16, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setImageViewBitmap(int, android.graphics.Bitmap)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.graphics.Bitmap r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>(i0, "setImageBitmap", r1);

        return;
    }

    public void setImageViewIcon(int, android.graphics.drawable.Icon)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.graphics.drawable.Icon r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Icon;

        virtualinvoke r0.<android.widget.RemoteViews: void setIcon(int,java.lang.String,android.graphics.drawable.Icon)>(i0, "setImageIcon", r1);

        return;
    }

    public void setImageViewResource(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setImageResource", i1);

        return;
    }

    public void setImageViewUri(int, android.net.Uri)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.net.Uri r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        virtualinvoke r0.<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>(i0, "setImageURI", r1);

        return;
    }

    public void setInt(int, java.lang.String, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        java.lang.String r1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Integer $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 4, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setIntTag(int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2;
        android.widget.RemoteViews$SetIntTagAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new android.widget.RemoteViews$SetIntTagAction;

        specialinvoke $r1.<android.widget.RemoteViews$SetIntTagAction: void <init>(android.widget.RemoteViews,int,int,int)>(r0, i0, i1, i2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setIntent(int, java.lang.String, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.content.Intent r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 14, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setLabelFor(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setLabelFor", i1);

        return;
    }

    public void setLightBackgroundLayoutId(int)
    {
        android.widget.RemoteViews r0;
        int i0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId> = i0;

        return;
    }

    public void setLong(int, java.lang.String, long)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        long l1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Long $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 5, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    void setNotRoot()
    {
        android.widget.RemoteViews r0;

        r0 := @this: android.widget.RemoteViews;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 0;

        return;
    }

    public void setOnClickFillInIntent(int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.Intent r1;
        android.widget.RemoteViews$RemoteResponse $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = staticinvoke <android.widget.RemoteViews$RemoteResponse: android.widget.RemoteViews$RemoteResponse fromFillInIntent(android.content.Intent)>(r1);

        virtualinvoke r0.<android.widget.RemoteViews: void setOnClickResponse(int,android.widget.RemoteViews$RemoteResponse)>(i0, $r2);

        return;
    }

    public void setOnClickPendingIntent(int, android.app.PendingIntent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.app.PendingIntent r1;
        android.widget.RemoteViews$RemoteResponse $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = staticinvoke <android.widget.RemoteViews$RemoteResponse: android.widget.RemoteViews$RemoteResponse fromPendingIntent(android.app.PendingIntent)>(r1);

        virtualinvoke r0.<android.widget.RemoteViews: void setOnClickResponse(int,android.widget.RemoteViews$RemoteResponse)>(i0, $r2);

        return;
    }

    public void setOnClickResponse(int, android.widget.RemoteViews$RemoteResponse)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$RemoteResponse r1;
        android.widget.RemoteViews$SetOnClickResponse $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews$RemoteResponse;

        $r2 = new android.widget.RemoteViews$SetOnClickResponse;

        specialinvoke $r2.<android.widget.RemoteViews$SetOnClickResponse: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews$RemoteResponse)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setPendingIntentTemplate(int, android.app.PendingIntent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.app.PendingIntent r1;
        android.widget.RemoteViews$SetPendingIntentTemplate $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = new android.widget.RemoteViews$SetPendingIntentTemplate;

        specialinvoke $r2.<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setProgressBackgroundTintList(int, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.widget.RemoteViews$ReflectionAction $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, "setProgressBackgroundTintList", 15, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setProgressBar(int, int, int, boolean)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(i0, "setIndeterminate", z0);

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setMax", i1);

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setProgress", i2);

     label1:
        return;
    }

    public void setProgressIndeterminateTintList(int, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.widget.RemoteViews$ReflectionAction $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, "setIndeterminateTintList", 15, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setProgressTintList(int, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.widget.RemoteViews$ReflectionAction $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, "setProgressTintList", 15, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setRelativeScrollPosition(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "smoothScrollByOffset", i1);

        return;
    }

    public void setRemoteAdapter(int, int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.content.Intent r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        virtualinvoke r0.<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>(i1, r1);

        return;
    }

    public void setRemoteAdapter(int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.Intent r1;
        android.widget.RemoteViews$SetRemoteViewsAdapterIntent $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new android.widget.RemoteViews$SetRemoteViewsAdapterIntent;

        specialinvoke $r2.<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setRemoteAdapter(int, java.util.ArrayList, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        java.util.ArrayList r1;
        android.widget.RemoteViews$SetRemoteViewsAdapterList $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        $r2 = new android.widget.RemoteViews$SetRemoteViewsAdapterList;

        specialinvoke $r2.<android.widget.RemoteViews$SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int)>(r0, i0, r1, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setRemoteInputs(int, android.app.RemoteInput[])
    {
        android.widget.RemoteViews r0;
        int i0;
        android.app.RemoteInput[] r1;
        android.widget.RemoteViews$SetRemoteInputsAction $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.RemoteInput[];

        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r2 = new android.widget.RemoteViews$SetRemoteInputsAction;

        specialinvoke $r2.<android.widget.RemoteViews$SetRemoteInputsAction: void <init>(android.widget.RemoteViews,int,android.app.RemoteInput[])>(r0, i0, r1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void setRippleDrawableColor(int, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.widget.RemoteViews$SetRippleDrawableColor $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = new android.widget.RemoteViews$SetRippleDrawableColor;

        specialinvoke $r2.<android.widget.RemoteViews$SetRippleDrawableColor: void <init>(android.widget.RemoteViews,int,android.content.res.ColorStateList)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setScrollPosition(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "smoothScrollToPosition", i1);

        return;
    }

    public void setShort(int, java.lang.String, short)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        short s1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Short $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        s1 := @parameter2: short;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 3, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setString(int, java.lang.String, java.lang.String)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1, r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 9, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setTextColor(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setTextColor", i1);

        return;
    }

    public void setTextColor(int, android.content.res.ColorStateList)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.widget.RemoteViews$ReflectionAction $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, "setTextColor", 15, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setTextViewCompoundDrawables(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$TextViewDrawableAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>(r0, i0, 0, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setTextViewCompoundDrawables(int, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.graphics.drawable.Icon r1, r2, r3, r4;
        android.widget.RemoteViews$TextViewDrawableAction $r5;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Icon;

        r2 := @parameter2: android.graphics.drawable.Icon;

        r3 := @parameter3: android.graphics.drawable.Icon;

        r4 := @parameter4: android.graphics.drawable.Icon;

        $r5 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r5.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon)>(r0, i0, 0, r1, r2, r3, r4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r5);

        return;
    }

    public void setTextViewCompoundDrawablesRelative(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$TextViewDrawableAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>(r0, i0, 1, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setTextViewCompoundDrawablesRelative(int, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.graphics.drawable.Icon r1, r2, r3, r4;
        android.widget.RemoteViews$TextViewDrawableAction $r5;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Icon;

        r2 := @parameter2: android.graphics.drawable.Icon;

        r3 := @parameter3: android.graphics.drawable.Icon;

        r4 := @parameter4: android.graphics.drawable.Icon;

        $r5 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r5.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon)>(r0, i0, 1, r1, r2, r3, r4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r5);

        return;
    }

    public void setTextViewText(int, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>(i0, "setText", r1);

        return;
    }

    public void setTextViewTextSize(int, int, float)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        float f0;
        android.widget.RemoteViews$TextViewSizeAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r1 = new android.widget.RemoteViews$TextViewSizeAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>(r0, i0, i1, f0);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setUri(int, java.lang.String, android.net.Uri)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        boolean $z0;
        android.net.Uri r2, r3, r4;
        android.widget.RemoteViews$ReflectionAction $r5;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        r3 = r2;

        if r2 == null goto label1;

        r4 = virtualinvoke r2.<android.net.Uri: android.net.Uri getCanonicalUri()>();

        r3 = r4;

        $z0 = staticinvoke <android.os.StrictMode: boolean vmFileUriExposureEnabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r4.<android.net.Uri: void checkFileUriExposed(java.lang.String)>("RemoteViews.setUri()");

        r3 = r4;

     label1:
        $r5 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r5.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 11, r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r5);

        return;
    }

    public void setViewLayoutMarginBottomDimen(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$LayoutParamAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$LayoutParamAction;

        specialinvoke $r1.<android.widget.RemoteViews$LayoutParamAction: void <init>(int,int,int)>(i0, 3, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setViewLayoutMarginEnd(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$LayoutParamAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$LayoutParamAction;

        specialinvoke $r1.<android.widget.RemoteViews$LayoutParamAction: void <init>(int,int,int)>(i0, 4, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setViewLayoutMarginEndDimen(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$LayoutParamAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$LayoutParamAction;

        specialinvoke $r1.<android.widget.RemoteViews$LayoutParamAction: void <init>(int,int,int)>(i0, 1, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setViewLayoutWidth(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;
        java.util.ArrayList $r2;
        android.widget.RemoteViews$LayoutParamAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 0 goto label2;

        if i1 == -1 goto label2;

        if i1 != -2 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only supports 0, WRAP_CONTENT and MATCH_PARENT");

        throw $r1;

     label2:
        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r3 = new android.widget.RemoteViews$LayoutParamAction;

        specialinvoke $r3.<android.widget.RemoteViews$LayoutParamAction: void <init>(int,int,int)>(i0, 2, i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void setViewPadding(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$ViewPaddingAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$ViewPaddingAction;

        specialinvoke $r1.<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setViewVisibility(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setVisibility", i1);

        return;
    }

    protected boolean shouldUseStaticFilter()
    {
        android.widget.RemoteViews r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Landroid/widget/RemoteViews;");

        return $z0;
    }

    public void showNext(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ViewContentNavigation $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ViewContentNavigation;

        specialinvoke $r1.<android.widget.RemoteViews$ViewContentNavigation: void <init>(android.widget.RemoteViews,int,boolean)>(r0, i0, 1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void showPrevious(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ViewContentNavigation $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ViewContentNavigation;

        specialinvoke $r1.<android.widget.RemoteViews$ViewContentNavigation: void <init>(android.widget.RemoteViews,int,boolean)>(r0, i0, 0);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void visitUris(java.util.function.Consumer)
    {
        android.widget.RemoteViews r0;
        java.util.function.Consumer r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        android.widget.RemoteViews$Action $r6;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r2 == null goto label2;

        i1 = 0;

     label1:
        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (android.widget.RemoteViews$Action) $r5;

        virtualinvoke $r6.<android.widget.RemoteViews$Action: void visitUris(java.util.function.Consumer)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.widget.RemoteViews r0, $r2, $r3;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        android.widget.RemoteViews$BitmapCache $r4, $r6;
        android.content.pm.ApplicationInfo $r5;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        $z2 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z2 == 0 goto label1;

        $r6 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        virtualinvoke $r6.<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>(r1, i0);

     label1:
        $z3 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z3 != 0 goto label2;

        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label3;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r5 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        virtualinvoke $r5.<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label3:
        $i3 = r0.<android.widget.RemoteViews: int mLayoutId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.widget.RemoteViews: int mLightBackgroundLayoutId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        specialinvoke r0.<android.widget.RemoteViews: void writeActionsToParcel(android.os.Parcel)>(r1);

        goto label6;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $z1 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z1 == 0 goto label5;

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        virtualinvoke $r4.<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>(r1, i0);

     label5:
        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        virtualinvoke $r2.<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        $i1 = i0 | 2;

        virtualinvoke $r3.<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>(r1, $i1);

     label6:
        $i5 = r0.<android.widget.RemoteViews: int mApplyFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        return;
    }
}
