class android.widget.RemoteViewsService$RemoteViewsFactoryAdapter extends com.android.internal.widget.IRemoteViewsFactory$Stub
{
    private android.widget.RemoteViewsService$RemoteViewsFactory mFactory;
    private boolean mIsCreated;

    public void <init>(android.widget.RemoteViewsService$RemoteViewsFactory, boolean)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        android.widget.RemoteViewsService$RemoteViewsFactory r1;
        boolean z0;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        r1 := @parameter0: android.widget.RemoteViewsService$RemoteViewsFactory;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.widget.IRemoteViewsFactory$Stub: void <init>()>();

        r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory> = r1;

        r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: boolean mIsCreated> = z0;

        return;
    }

    public int getCount()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0, i1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        java.lang.Thread$UncaughtExceptionHandler $r5;
        java.lang.Thread r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

        i1 = 0;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        i0 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: int getCount()>();

     label2:
        i1 = i0;

        goto label6;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r5.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r7, $r4);

     label6:
        exitmonitor r0;

        return i1;

     label7:
        exitmonitor r0;

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public long getItemId(int)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0;
        java.lang.Thread r1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        java.lang.Thread$UncaughtExceptionHandler $r5;
        long l2;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        l2 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: long getItemId(int)>(i0);

     label2:
        goto label7;

     label3:
        $r3 := @caughtexception;

        goto label8;

     label4:
        $r4 := @caughtexception;

     label5:
        r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r5.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r1, $r4);

     label6:
        l2 = 0L;

     label7:
        exitmonitor r0;

        return l2;

     label8:
        exitmonitor r0;

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public android.widget.RemoteViews getLoadingView()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Thread r1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Exception $r3;
        java.lang.Thread$UncaughtExceptionHandler $r4;
        java.lang.Throwable $r5;
        android.widget.RemoteViews r6, r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

        r6 = null;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        r7 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>();

     label2:
        r6 = r7;

        goto label6;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r4.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r1, $r3);

     label6:
        exitmonitor r0;

        return r6;

     label7:
        exitmonitor r0;

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public android.widget.RemoteViews getViewAt(int)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Exception $r3;
        java.lang.Thread$UncaughtExceptionHandler $r4;
        java.lang.Throwable $r5;
        android.widget.RemoteViews r6, r7;
        java.lang.Thread r9;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        i0 := @parameter0: int;

        entermonitor r0;

        r6 = null;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        r7 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>(i0);

     label2:
        if r7 == null goto label4;

        r6 = r7;

     label3:
        virtualinvoke r7.<android.widget.RemoteViews: void addFlags(int)>(2);

     label4:
        r6 = r7;

        goto label8;

     label5:
        $r5 := @caughtexception;

        goto label9;

     label6:
        $r3 := @caughtexception;

     label7:
        r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r4.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r9, $r3);

     label8:
        exitmonitor r0;

        return r6;

     label9:
        exitmonitor r0;

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public int getViewTypeCount()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0, i1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Exception $r3;
        java.lang.Thread$UncaughtExceptionHandler $r4;
        java.lang.Throwable $r5;
        java.lang.Thread r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

        i1 = 0;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        i0 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: int getViewTypeCount()>();

     label2:
        i1 = i0;

        goto label6;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r4.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r7, $r3);

     label6:
        exitmonitor r0;

        return i1;

     label7:
        exitmonitor r0;

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean hasStableIds()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        boolean z0, z1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        java.lang.Thread$UncaughtExceptionHandler $r5;
        java.lang.Thread r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

        z1 = 0;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        z0 = interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: boolean hasStableIds()>();

     label2:
        z1 = z0;

        goto label6;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r5.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r7, $r4);

     label6:
        exitmonitor r0;

        return z1;

     label7:
        exitmonitor r0;

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean isCreated()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        z0 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: boolean mIsCreated>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDataSetChanged()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        android.widget.RemoteViewsService$RemoteViewsFactory $r2;
        java.lang.Exception $r3;
        java.lang.Thread$UncaughtExceptionHandler $r4;
        java.lang.Throwable $r5;
        java.lang.Thread r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r2 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        interfaceinvoke $r2.<android.widget.RemoteViewsService$RemoteViewsFactory: void onDataSetChanged()>();

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r4.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r7, $r3);

     label6:
        exitmonitor r0;

        return;

     label7:
        exitmonitor r0;

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void onDataSetChangedAsync()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable $r2;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: void onDataSetChanged()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDestroy(android.content.Intent)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Object r1, $r6;
        android.content.Intent$FilterComparison r2;
        java.lang.Thread r3;
        java.util.HashMap $r4, $r5, $r7;
        boolean $z0;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;
        java.lang.Thread$UncaughtExceptionHandler $r11;
        android.content.Intent r12;
        android.widget.RemoteViewsService$RemoteViewsFactory r13;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        r12 := @parameter0: android.content.Intent;

        r1 = staticinvoke <android.widget.RemoteViewsService: java.lang.Object access$000()>();

        entermonitor r1;

     label01:
        r2 = new android.content.Intent$FilterComparison;

        specialinvoke r2.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r12);

        $r4 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label07;

        $r5 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r13 = (android.widget.RemoteViewsService$RemoteViewsFactory) $r6;

     label02:
        interfaceinvoke r13.<android.widget.RemoteViewsService$RemoteViewsFactory: void onDestroy()>();

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

     label05:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r11.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, $r10);

     label06:
        $r7 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
