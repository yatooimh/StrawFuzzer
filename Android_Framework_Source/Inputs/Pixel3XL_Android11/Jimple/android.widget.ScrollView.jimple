public class android.widget.ScrollView extends android.widget.FrameLayout
{
    static final int ANIMATED_SCROLL_GAP;
    private static final int INVALID_POINTER;
    static final float MAX_SCROLL_FACTOR;
    private static final java.lang.String TAG;
    private int mActivePointerId;
    private android.view.View mChildToScrollTo;
    private android.widget.EdgeEffect mEdgeGlowBottom;
    private android.widget.EdgeEffect mEdgeGlowTop;
    private boolean mFillViewport;
    private android.os.StrictMode$Span mFlingStrictSpan;
    private boolean mIsBeingDragged;
    private boolean mIsLayoutDirty;
    private int mLastMotionY;
    private long mLastScroll;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private int mNestedYOffset;
    private int mOverflingDistance;
    private int mOverscrollDistance;
    private android.widget.ScrollView$SavedState mSavedState;
    private final int[] mScrollConsumed;
    private final int[] mScrollOffset;
    private android.os.StrictMode$Span mScrollStrictSpan;
    private android.widget.OverScroller mScroller;
    private boolean mSmoothScrollingEnabled;
    private final android.graphics.Rect mTempRect;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;
    private float mVerticalScrollFactor;

    public void <init>(android.content.Context)
    {
        android.widget.ScrollView r0;
        android.content.Context r1;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.ScrollView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842880);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.ScrollView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.ScrollView r0;
        android.content.Context r1, $r6, $r8;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        android.content.res.TypedArray r3;
        android.graphics.Rect $r4;
        android.widget.EdgeEffect $r5, $r7;
        int[] $r9, $r10, $r11, $r12;
        boolean $z0;
        android.content.res.Resources $r13;
        android.content.res.Configuration $r14;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.ScrollView: android.graphics.Rect mTempRect> = $r4;

        $r5 = new android.widget.EdgeEffect;

        $r6 = virtualinvoke r0.<android.widget.ScrollView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r6);

        r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop> = $r5;

        $r7 = new android.widget.EdgeEffect;

        $r8 = virtualinvoke r0.<android.widget.ScrollView: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r8);

        r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom> = $r7;

        r0.<android.widget.ScrollView: boolean mIsLayoutDirty> = 1;

        r0.<android.widget.ScrollView: android.view.View mChildToScrollTo> = null;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 0;

        r0.<android.widget.ScrollView: boolean mSmoothScrollingEnabled> = 1;

        r0.<android.widget.ScrollView: int mActivePointerId> = -1;

        $r9 = newarray (int)[2];

        r0.<android.widget.ScrollView: int[] mScrollOffset> = $r9;

        $r10 = newarray (int)[2];

        r0.<android.widget.ScrollView: int[] mScrollConsumed> = $r10;

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        specialinvoke r0.<android.widget.ScrollView: void initScrollView()>();

        $r11 = <com.android.internal.R$styleable: int[] ScrollView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r11, i0, i1);

        $r12 = <com.android.internal.R$styleable: int[] ScrollView>;

        virtualinvoke r0.<android.widget.ScrollView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r12, r2, r3, i0, i1);

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<android.widget.ScrollView: void setFillViewport(boolean)>($z0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i2 = $r14.<android.content.res.Configuration: int uiMode>;

        if $i2 != 6 goto label1;

        virtualinvoke r0.<android.widget.ScrollView: void setRevealOnFocusHint(boolean)>(0);

     label1:
        return;
    }

    private boolean canScroll()
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        z0 = 0;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        if r1 == null goto label2;

        i0 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i2 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i4 = $i2 + i0;

        $i3 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i5 = $i4 + $i3;

        if $i1 >= $i5 goto label1;

        z0 = 1;

     label1:
        return z0;

     label2:
        return 0;
    }

    private static int clamp(int, int, int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 >= i2 goto label3;

        if i0 >= 0 goto label1;

        goto label3;

     label1:
        $i3 = i1 + i0;

        if $i3 <= i2 goto label2;

        $i4 = i2 - i1;

        return $i4;

     label2:
        return i0;

     label3:
        return 0;
    }

    private void doScrollY(int)
    {
        android.widget.ScrollView r0;
        int i0;
        boolean $z0;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        $z0 = r0.<android.widget.ScrollView: boolean mSmoothScrollingEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.ScrollView: void smoothScrollBy(int,int)>(0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.ScrollView: void scrollBy(int,int)>(0, i0);

     label2:
        return;
    }

    private void endDrag()
    {
        android.widget.ScrollView r0;
        android.os.StrictMode$Span r1;
        boolean $z0;
        android.widget.EdgeEffect $r2, $r3;

        r0 := @this: android.widget.ScrollView;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke r0.<android.widget.ScrollView: void recycleVelocityTracker()>();

        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean shouldDisplayEdgeEffects()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void onRelease()>();

        $r3 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onRelease()>();

     label1:
        r1 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label2:
        return;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        android.widget.ScrollView r0;
        boolean z0, z1, z2, z3, z4;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        java.util.ArrayList r1;
        android.view.View r2, r4, r5;
        java.lang.Object $r3;

        r0 := @this: android.widget.ScrollView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.widget.ScrollView: java.util.ArrayList getFocusables(int)>(2);

        r4 = null;

        z1 = 0;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i7 = 0;

     label01:
        if i7 >= i2 goto label11;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (android.view.View) $r3;

        i3 = virtualinvoke r2.<android.view.View: int getTop()>();

        i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        r5 = r4;

        z2 = z1;

        if i0 >= i4 goto label10;

        r5 = r4;

        z2 = z1;

        if i3 >= i1 goto label10;

        z3 = 0;

        if i0 >= i3 goto label02;

        if i4 >= i1 goto label02;

        z4 = 1;

        goto label03;

     label02:
        z4 = 0;

     label03:
        if r4 != null goto label04;

        r5 = r2;

        z2 = z4;

        goto label10;

     label04:
        if z0 == 0 goto label05;

        $i6 = virtualinvoke r4.<android.view.View: int getTop()>();

        if i3 < $i6 goto label06;

     label05:
        if z0 != 0 goto label07;

        $i5 = virtualinvoke r4.<android.view.View: int getBottom()>();

        if i4 <= $i5 goto label07;

     label06:
        z3 = 1;

        goto label07;

     label07:
        if z1 == 0 goto label08;

        r5 = r4;

        z2 = z1;

        if z4 == 0 goto label10;

        r5 = r4;

        z2 = z1;

        if z3 == 0 goto label10;

        r5 = r2;

        z2 = z1;

        goto label10;

     label08:
        if z4 == 0 goto label09;

        r5 = r2;

        z2 = 1;

        goto label10;

     label09:
        r5 = r4;

        z2 = z1;

        if z3 == 0 goto label10;

        r5 = r2;

        z2 = z1;

     label10:
        i7 = i7 + 1;

        r4 = r5;

        z1 = z2;

        goto label01;

     label11:
        return r4;
    }

    private void flingWithNestedDispatch(int)
    {
        android.widget.ScrollView r0;
        int i0, $i1, $i2, $i3;
        float $f0, $f1;
        boolean z1, $z2;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i1 > 0 goto label1;

        if i0 <= 0 goto label2;

     label1:
        $i2 = r0.<android.widget.ScrollView: int mScrollY>;

        $i3 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        if $i2 < $i3 goto label3;

        if i0 >= 0 goto label2;

        goto label3;

     label2:
        z1 = 0;

        goto label4;

     label3:
        z1 = 1;

     label4:
        $f1 = (float) i0;

        $z2 = virtualinvoke r0.<android.widget.ScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f1);

        if $z2 != 0 goto label5;

        $f0 = (float) i0;

        virtualinvoke r0.<android.widget.ScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f0, z1);

        if z1 == 0 goto label5;

        virtualinvoke r0.<android.widget.ScrollView: void fling(int)>(i0);

     label5:
        return;
    }

    private int getScrollRange()
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;

        r0 := @this: android.widget.ScrollView;

        i8 = 0;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i3 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i5 = $i2 - $i3;

        $i4 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i6 = $i5 - $i4;

        $i7 = $i1 - $i6;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

     label1:
        return i8;
    }

    private boolean inChild(int, int)
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.view.View r1;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        z0 = 0;

        if i8 <= 0 goto label2;

        i9 = r0.<android.widget.ScrollView: int mScrollY>;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = $i2 - i9;

        if i1 < $i3 goto label1;

        $i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i5 = $i4 - i9;

        if i1 >= $i5 goto label1;

        $i6 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if i0 < $i6 goto label1;

        $i7 = virtualinvoke r1.<android.view.View: int getRight()>();

        if i0 >= $i7 goto label1;

        z0 = 1;

        goto label1;

     label1:
        return z0;

     label2:
        return 0;
    }

    private void initOrResetVelocityTracker()
    {
        android.widget.ScrollView r0;
        android.view.VelocityTracker r1, $r2;

        r0 := @this: android.widget.ScrollView;

        r1 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        if r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker> = $r2;

        goto label2;

     label1:
        virtualinvoke r1.<android.view.VelocityTracker: void clear()>();

     label2:
        return;
    }

    private void initScrollView()
    {
        android.widget.ScrollView r0;
        android.view.ViewConfiguration r1;
        android.widget.OverScroller $r2;
        android.content.Context $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;

        r0 := @this: android.widget.ScrollView;

        $r2 = new android.widget.OverScroller;

        $r3 = virtualinvoke r0.<android.widget.ScrollView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.OverScroller: void <init>(android.content.Context)>($r3);

        r0.<android.widget.ScrollView: android.widget.OverScroller mScroller> = $r2;

        virtualinvoke r0.<android.widget.ScrollView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.ScrollView: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<android.widget.ScrollView: void setWillNotDraw(boolean)>(0);

        $r4 = r0.<android.widget.ScrollView: android.content.Context mContext>;

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r4);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.ScrollView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.ScrollView: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.ScrollView: int mMaximumVelocity> = $i2;

        $i3 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverscrollDistance()>();

        r0.<android.widget.ScrollView: int mOverscrollDistance> = $i3;

        $i4 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverflingDistance()>();

        r0.<android.widget.ScrollView: int mOverflingDistance> = $i4;

        $f0 = virtualinvoke r1.<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>();

        r0.<android.widget.ScrollView: float mVerticalScrollFactor> = $f0;

        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.widget.ScrollView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.ScrollView;

        $r1 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label1:
        return;
    }

    private boolean isOffScreen(android.view.View)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, 0, $i0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View r0, $r1, r2;
        boolean $z0, $z1, z2;
        android.view.ViewParent r3;

        r2 := @parameter0: android.view.View;

        r0 := @parameter1: android.view.View;

        z2 = 1;

        if r2 != r0 goto label1;

        return 1;

     label1:
        r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r1 = (android.view.View) r3;

        $z1 = staticinvoke <android.widget.ScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, r0);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.widget.ScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i2 + i0;

        $i4 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        if $i3 < $i4 goto label1;

        $r5 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i5 = $r5.<android.graphics.Rect: int top>;

        $i6 = $i5 - i0;

        $i7 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        $i8 = $i7 + i1;

        if $i6 > $i8 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.ScrollView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        float $f0;
        android.view.MotionEvent r1;
        byte b7;
        android.view.VelocityTracker r2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i1 = $i0 & 65280;

        i6 = $i1 >> 8;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i6);

        $i3 = r0.<android.widget.ScrollView: int mActivePointerId>;

        if $i2 != $i3 goto label3;

        if i6 != 0 goto label1;

        b7 = 1;

        goto label2;

     label1:
        b7 = 0;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b7);

        $i4 = (int) $f0;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i4;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b7);

        r0.<android.widget.ScrollView: int mActivePointerId> = $i5;

        r2 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        if r2 == null goto label3;

        virtualinvoke r2.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private void recycleVelocityTracker()
    {
        android.widget.ScrollView r0;
        android.view.VelocityTracker r1;

        r0 := @this: android.widget.ScrollView;

        r1 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        android.widget.ScrollView r0;
        int i0, i1, i2, i3, i4, i5, i6;
        android.view.View r1, r2, $r3;
        boolean z2, z3;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i4 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i2 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        i5 = i2 + i4;

        if i0 != 33 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r1 = specialinvoke r0.<android.widget.ScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>(z2, i3, i1);

        r2 = r1;

        if r1 != null goto label3;

        r2 = r0;

     label3:
        if i3 < i2 goto label4;

        if i1 > i5 goto label4;

        z3 = 0;

        goto label7;

     label4:
        if z2 == 0 goto label5;

        i6 = i3 - i2;

        goto label6;

     label5:
        i6 = i1 - i5;

     label6:
        specialinvoke r0.<android.widget.ScrollView: void doScrollY(int)>(i6);

        z3 = 1;

     label7:
        $r3 = virtualinvoke r0.<android.widget.ScrollView: android.view.View findFocus()>();

        if r2 == $r3 goto label8;

        virtualinvoke r2.<android.view.View: boolean requestFocus(int)>(i0);

     label8:
        return z3;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        android.widget.ScrollView r0;
        android.graphics.Rect r1;
        boolean z0, z1;
        int i0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(r1);

        if i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label4;

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.ScrollView: void scrollBy(int,int)>(0, i0);

        goto label4;

     label3:
        virtualinvoke r0.<android.widget.ScrollView: void smoothScrollBy(int,int)>(0, i0);

     label4:
        return z1;
    }

    private boolean shouldDisplayEdgeEffects()
    {
        android.widget.ScrollView r0;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getOverScrollMode()>();

        if $i0 == 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void addView(android.view.View)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int $i0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;
    }

    public void addView(android.view.View, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, $i1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i1 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int)>(r1, i0);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i1 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;
    }

    public boolean arrowScroll(int)
    {
        android.widget.ScrollView r0;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        android.view.FocusFinder $r1;
        boolean $z0, $z1, $z3;
        android.view.View $r2, r6, r7, r8;
        android.graphics.Rect $r3, $r4, $r5;

        r0 := @this: android.widget.ScrollView;

        i13 := @parameter0: int;

        r6 = virtualinvoke r0.<android.widget.ScrollView: android.view.View findFocus()>();

        r7 = r6;

        if r6 != r0 goto label1;

        r7 = null;

     label1:
        $r1 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r8 = virtualinvoke $r1.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r7, i13);

        i0 = virtualinvoke r0.<android.widget.ScrollView: int getMaxScrollAmount()>();

        if r8 == null goto label2;

        $i11 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $z3 = specialinvoke r0.<android.widget.ScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r8, i0, $i11);

        if $z3 == 0 goto label2;

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r8.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r3);

        $r4 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.widget.ScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r8, $r4);

        $r5 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i12 = virtualinvoke r0.<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r5);

        specialinvoke r0.<android.widget.ScrollView: void doScrollY(int)>($i12);

        virtualinvoke r8.<android.view.View: boolean requestFocus(int)>(i13);

        goto label8;

     label2:
        if i13 != 33 goto label3;

        $i10 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        if $i10 >= i0 goto label3;

        i14 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        goto label4;

     label3:
        i14 = i0;

        if i13 != 130 goto label4;

        i14 = i0;

        $i4 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i4 <= 0 goto label4;

        $r2 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i5 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        $i6 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i8 = $i5 + $i6;

        $i7 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i3 = $i8 - $i7;

        i14 = i0;

        $i9 = i2 - i3;

        if $i9 >= i0 goto label4;

        i14 = i2 - i3;

     label4:
        if i14 != 0 goto label5;

        return 0;

     label5:
        if i13 != 130 goto label6;

        goto label7;

     label6:
        i14 = neg i14;

     label7:
        specialinvoke r0.<android.widget.ScrollView: void doScrollY(int)>(i14);

     label8:
        if r7 == null goto label9;

        $z0 = virtualinvoke r7.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label9;

        $z1 = specialinvoke r0.<android.widget.ScrollView: boolean isOffScreen(android.view.View)>(r7);

        if $z1 == 0 goto label9;

        i15 = virtualinvoke r0.<android.widget.ScrollView: int getDescendantFocusability()>();

        virtualinvoke r0.<android.widget.ScrollView: void setDescendantFocusability(int)>(131072);

        virtualinvoke r0.<android.widget.ScrollView: boolean requestFocus()>();

        virtualinvoke r0.<android.widget.ScrollView: void setDescendantFocusability(int)>(i15);

     label9:
        return 1;
    }

    public void computeScroll()
    {
        android.widget.ScrollView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.os.StrictMode$Span r1;
        android.widget.OverScroller $r2, $r3, $r4, $r5, $r7;
        boolean $z1, z3, $z4;
        android.widget.EdgeEffect $r6, $r8;
        float $f0, $f1;

        r0 := @this: android.widget.ScrollView;

        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z1 = virtualinvoke $r2.<android.widget.OverScroller: boolean computeScrollOffset()>();

        if $z1 == 0 goto label7;

        i0 = r0.<android.widget.ScrollView: int mScrollX>;

        i1 = r0.<android.widget.ScrollView: int mScrollY>;

        $r3 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        i2 = virtualinvoke $r3.<android.widget.OverScroller: int getCurrX()>();

        $r4 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        i3 = virtualinvoke $r4.<android.widget.OverScroller: int getCurrY()>();

        if i0 != i2 goto label1;

        if i1 == i3 goto label5;

     label1:
        i4 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        i5 = virtualinvoke r0.<android.widget.ScrollView: int getOverScrollMode()>();

        z3 = 1;

        if i5 == 0 goto label3;

        if i5 != 1 goto label2;

        if i4 <= 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        $i8 = i2 - i0;

        $i9 = i3 - i1;

        $i10 = r0.<android.widget.ScrollView: int mOverflingDistance>;

        virtualinvoke r0.<android.widget.ScrollView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>($i8, $i9, i0, i1, 0, i4, 0, $i10, 0);

        $i11 = r0.<android.widget.ScrollView: int mScrollX>;

        $i12 = r0.<android.widget.ScrollView: int mScrollY>;

        virtualinvoke r0.<android.widget.ScrollView: void onScrollChanged(int,int,int,int)>($i11, $i12, i0, i1);

        if z3 == 0 goto label5;

        if i3 >= 0 goto label4;

        if i1 < 0 goto label4;

        $r8 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $r7 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $f1 = virtualinvoke $r7.<android.widget.OverScroller: float getCurrVelocity()>();

        $i7 = (int) $f1;

        virtualinvoke $r8.<android.widget.EdgeEffect: void onAbsorb(int)>($i7);

        goto label5;

     label4:
        if i3 <= i4 goto label5;

        if i1 > i4 goto label5;

        $r6 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $r5 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $f0 = virtualinvoke $r5.<android.widget.OverScroller: float getCurrVelocity()>();

        $i6 = (int) $f0;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onAbsorb(int)>($i6);

     label5:
        $z4 = virtualinvoke r0.<android.widget.ScrollView: boolean awakenScrollBars()>();

        if $z4 != 0 goto label6;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label6:
        goto label8;

     label7:
        r1 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan>;

        if r1 == null goto label8;

        virtualinvoke r1.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label8:
        return;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        android.widget.ScrollView r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, i29, i30, i31;
        android.view.View $r2, $r3;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.graphics.Rect;

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i1 != 0 goto label01;

        return 0;

     label01:
        i0 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i23 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        i24 = i23 + i0;

        i25 = virtualinvoke r0.<android.widget.ScrollView: int getVerticalFadingEdgeLength()>();

        i26 = i23;

        $i2 = r1.<android.graphics.Rect: int top>;

        if $i2 <= 0 goto label02;

        i26 = i23 + i25;

     label02:
        i27 = i24;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $r2 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        if $i3 >= $i4 goto label03;

        i27 = i24 - i25;

     label03:
        $i5 = r1.<android.graphics.Rect: int bottom>;

        if $i5 <= i27 goto label07;

        $i15 = r1.<android.graphics.Rect: int top>;

        if $i15 <= i26 goto label07;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i16 <= i0 goto label04;

        $i21 = r1.<android.graphics.Rect: int top>;

        $i22 = $i21 - i26;

        i29 = 0 + $i22;

        goto label05;

     label04:
        $i17 = r1.<android.graphics.Rect: int bottom>;

        $i18 = $i17 - i27;

        i29 = 0 + $i18;

     label05:
        $r3 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i19 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i20 = $i19 - i27;

        i30 = staticinvoke <java.lang.Math: int min(int,int)>(i29, $i20);

     label06:
        goto label10;

     label07:
        i30 = 0;

        $i6 = r1.<android.graphics.Rect: int top>;

        if $i6 >= i26 goto label06;

        i30 = 0;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        if $i7 >= i27 goto label06;

        $i8 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i8 <= i0 goto label08;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i14 = i27 - $i13;

        i31 = 0 - $i14;

        goto label09;

     label08:
        $i9 = r1.<android.graphics.Rect: int top>;

        $i10 = i26 - $i9;

        i31 = 0 - $i10;

     label09:
        $i11 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        $i12 = neg $i11;

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(i31, $i12);

     label10:
        return i30;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.ScrollView r0;
        int $i0, $i1;

        r0 := @this: android.widget.ScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i1;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        android.view.View $r1;

        r0 := @this: android.widget.ScrollView;

        i8 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        $i2 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i3 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i5 = $i2 - $i3;

        $i4 = r0.<android.widget.ScrollView: int mPaddingTop>;

        i9 = $i5 - $i4;

        if i8 != 0 goto label1;

        return i9;

     label1:
        $r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        i10 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        i0 = r0.<android.widget.ScrollView: int mScrollY>;

        $i6 = i10 - i9;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        if i0 >= 0 goto label2;

        i11 = i10 - i0;

        goto label3;

     label2:
        i11 = i10;

        if i0 <= i1 goto label3;

        $i7 = i0 - i1;

        i11 = i10 + $i7;

     label3:
        return i11;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.widget.ScrollView r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.ScrollView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.widget.EdgeEffect $r2, $r3, $r4, $r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9, f10;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $z1 = specialinvoke r0.<android.widget.ScrollView: boolean shouldDisplayEdgeEffects()>();

        if $z1 == 0 goto label8;

        i0 = r0.<android.widget.ScrollView: int mScrollY>;

        z0 = virtualinvoke r0.<android.widget.ScrollView: boolean getClipToPadding()>();

        $r2 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z2 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z2 != 0 goto label4;

        i26 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if z0 == 0 goto label1;

        $i16 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        $i17 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i19 = $i16 - $i17;

        $i18 = r0.<android.widget.ScrollView: int mPaddingRight>;

        i27 = $i19 - $i18;

        $i20 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i21 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i23 = $i20 - $i21;

        $i22 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i28 = $i23 - $i22;

        $i24 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        f7 = (float) $i24;

        $i25 = r0.<android.widget.ScrollView: int mPaddingTop>;

        f8 = (float) $i25;

        goto label2;

     label1:
        i27 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        i28 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        f7 = 0.0F;

        f8 = 0.0F;

     label2:
        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(0, i0);

        $f5 = (float) $i15;

        $f6 = $f5 + f8;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(f7, $f6);

        $r5 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>(i27, i28);

        $r6 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z4 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z4 == 0 goto label3;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label3:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i26);

     label4:
        $r7 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z5 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z5 != 0 goto label8;

        i29 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if z0 == 0 goto label5;

        $i5 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        $i6 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i8 = $i5 - $i6;

        $i7 = r0.<android.widget.ScrollView: int mPaddingRight>;

        i30 = $i8 - $i7;

        $i9 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i10 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i12 = $i9 - $i10;

        $i11 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i31 = $i12 - $i11;

        $i13 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        f9 = (float) $i13;

        $i14 = r0.<android.widget.ScrollView: int mPaddingTop>;

        f10 = (float) $i14;

        goto label6;

     label5:
        i30 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        i31 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        f9 = 0.0F;

        f10 = 0.0F;

     label6:
        $i1 = neg i30;

        $f0 = (float) $i1;

        $f1 = $f0 + f9;

        $i2 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i0);

        $i4 = $i3 + i31;

        $f2 = (float) $i4;

        $f3 = $f2 + f10;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f3);

        $f4 = (float) i30;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f4, 0.0F);

        $r3 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void setSize(int,int)>(i30, i31);

        $r4 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z3 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z3 == 0 goto label7;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label7:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i29);

     label8:
        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.ScrollView r0;
        android.view.ViewHierarchyEncoder r1;
        boolean $z0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.widget.FrameLayout: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        $z0 = r0.<android.widget.ScrollView: boolean mFillViewport>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("fillViewport", $z0);

        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.widget.ScrollView r0;
        android.view.View r1, r5, r6;
        int i0, $i1, $i2;
        android.graphics.Rect $r2;
        boolean $z0, $z1, $z2, $z4, z5, z6, z7, z9;
        android.view.FocusFinder $r3;
        android.view.KeyEvent r4;
        short s3;

        r0 := @this: android.widget.ScrollView;

        r4 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        z5 = specialinvoke r0.<android.widget.ScrollView: boolean canScroll()>();

        s3 = 130;

        if z5 != 0 goto label04;

        z6 = virtualinvoke r0.<android.widget.ScrollView: boolean isFocused()>();

        z7 = 0;

        if z6 == 0 goto label03;

        $i2 = virtualinvoke r4.<android.view.KeyEvent: int getKeyCode()>();

        if $i2 == 4 goto label03;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View findFocus()>();

        r5 = r1;

        if r1 != r0 goto label01;

        r5 = null;

     label01:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r6 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r5, 130);

        if r6 == null goto label02;

        if r6 == r0 goto label02;

        $z4 = virtualinvoke r6.<android.view.View: boolean requestFocus(int)>(130);

        if $z4 == 0 goto label02;

        z7 = 1;

        goto label02;

     label02:
        return z7;

     label03:
        return 0;

     label04:
        z9 = 0;

        $i1 = virtualinvoke r4.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label11;

        i0 = virtualinvoke r4.<android.view.KeyEvent: int getKeyCode()>();

        if i0 == 19 goto label09;

        if i0 == 20 goto label07;

        if i0 == 62 goto label05;

        z9 = 0;

        goto label11;

     label05:
        $z2 = virtualinvoke r4.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z2 == 0 goto label06;

        s3 = 33;

     label06:
        virtualinvoke r0.<android.widget.ScrollView: boolean pageScroll(int)>(s3);

        z9 = 0;

        goto label11;

     label07:
        $z1 = virtualinvoke r4.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z1 != 0 goto label08;

        z9 = virtualinvoke r0.<android.widget.ScrollView: boolean arrowScroll(int)>(130);

        goto label11;

     label08:
        z9 = virtualinvoke r0.<android.widget.ScrollView: boolean fullScroll(int)>(130);

        goto label11;

     label09:
        $z0 = virtualinvoke r4.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label10;

        z9 = virtualinvoke r0.<android.widget.ScrollView: boolean arrowScroll(int)>(33);

        goto label11;

     label10:
        z9 = virtualinvoke r0.<android.widget.ScrollView: boolean fullScroll(int)>(33);

     label11:
        return z9;
    }

    public void fling(int)
    {
        android.widget.ScrollView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.View $r1;
        android.widget.OverScroller $r2;
        android.os.StrictMode$Span $r3, $r4;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i3 <= 0 goto label2;

        $i4 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i5 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.ScrollView: int mPaddingTop>;

        i1 = $i7 - $i6;

        $r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i9 = r0.<android.widget.ScrollView: int mScrollX>;

        $i10 = r0.<android.widget.ScrollView: int mScrollY>;

        $i8 = i2 - i1;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $i12 = i1 / 2;

        virtualinvoke $r2.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>($i9, $i10, 0, i0, 0, 0, 0, $i11, 0, $i12);

        $r3 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("ScrollView-fling");

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = $r4;

     label1:
        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label2:
        return;
    }

    public boolean fullScroll(int)
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10;
        android.graphics.Rect $r1, $r2, $r3, r5, $r6, $r7;
        boolean z0, $z1;
        android.view.View r4;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        if i0 != 130 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        i1 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $r1 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int top> = 0;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $r2.<android.graphics.Rect: int bottom> = i1;

        if z0 == 0 goto label3;

        i8 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if i8 <= 0 goto label3;

        $i2 = i8 - 1;

        r4 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>($i2);

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i3 = virtualinvoke r4.<android.view.View: int getBottom()>();

        $i4 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i5 = $i3 + $i4;

        $r3.<android.graphics.Rect: int bottom> = $i5;

        r5 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i6 = r5.<android.graphics.Rect: int bottom>;

        $i7 = $i6 - i1;

        r5.<android.graphics.Rect: int top> = $i7;

     label3:
        $r6 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i9 = $r6.<android.graphics.Rect: int top>;

        $r7 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i10 = $r7.<android.graphics.Rect: int bottom>;

        $z1 = specialinvoke r0.<android.widget.ScrollView: boolean scrollAndFocus(int,int,int)>(i0, $i9, $i10);

        return $z1;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.ScrollView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.ScrollView;

        $r1 = class "Landroid/widget/ScrollView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getBottomEdgeEffectColor()
    {
        android.widget.ScrollView r0;
        android.widget.EdgeEffect $r1;
        int $i0;

        r0 := @this: android.widget.ScrollView;

        $r1 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i0 = virtualinvoke $r1.<android.widget.EdgeEffect: int getColor()>();

        return $i0;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        android.view.View $r1;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.ScrollView;

        $i2 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i2 != 0 goto label1;

        return 0.0F;

     label1:
        i0 = virtualinvoke r0.<android.widget.ScrollView: int getVerticalFadingEdgeLength()>();

        i1 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i7 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i4 = r0.<android.widget.ScrollView: int mScrollY>;

        $i6 = $i3 - $i4;

        $i5 = i1 - i7;

        i8 = $i6 - $i5;

        if i8 >= i0 goto label2;

        $f1 = (float) i8;

        $f0 = (float) i0;

        $f2 = $f1 / $f0;

        return $f2;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        android.widget.ScrollView r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: android.widget.ScrollView;

        $i1 = r0.<android.widget.ScrollView: int mBottom>;

        $i0 = r0.<android.widget.ScrollView: int mTop>;

        $i2 = $i1 - $i0;

        $f0 = (float) $i2;

        $f1 = $f0 * 0.5F;

        $i3 = (int) $f1;

        return $i3;
    }

    public int getTopEdgeEffectColor()
    {
        android.widget.ScrollView r0;
        android.widget.EdgeEffect $r1;
        int $i0;

        r0 := @this: android.widget.ScrollView;

        $r1 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i0 = virtualinvoke $r1.<android.widget.EdgeEffect: int getColor()>();

        return $i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.ScrollView r0;
        int i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.ScrollView;

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i1 != 0 goto label1;

        return 0.0F;

     label1:
        i0 = virtualinvoke r0.<android.widget.ScrollView: int getVerticalFadingEdgeLength()>();

        $i2 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i2 >= i0 goto label2;

        $i3 = r0.<android.widget.ScrollView: int mScrollY>;

        $f1 = (float) $i3;

        $f0 = (float) i0;

        $f2 = $f1 / $f0;

        return $f2;

     label2:
        return 1.0F;
    }

    public boolean isFillViewport()
    {
        android.widget.ScrollView r0;
        boolean $z0;

        r0 := @this: android.widget.ScrollView;

        $z0 = r0.<android.widget.ScrollView: boolean mFillViewport>;

        return $z0;
    }

    public boolean isSmoothScrollingEnabled()
    {
        android.widget.ScrollView r0;
        boolean $z0;

        r0 := @this: android.widget.ScrollView;

        $z0 = r0.<android.widget.ScrollView: boolean mSmoothScrollingEnabled>;

        return $z0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i4 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i3 = r0.<android.widget.ScrollView: int mPaddingRight>;

        $i6 = $i4 + $i3;

        $i5 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        i1 = staticinvoke <android.widget.ScrollView: int getChildMeasureSpec(int,int,int)>(i12, $i6, $i5);

        i13 = r0.<android.widget.ScrollView: int mPaddingTop>;

        i2 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i8 = i13 + i2;

        $i9 = $i7 - $i8;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i11 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i10, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i1, $i11);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i22 := @parameter1: int;

        i23 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i6 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i5 = r0.<android.widget.ScrollView: int mPaddingRight>;

        $i8 = $i6 + $i5;

        $i7 = r2.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i10 = $i8 + $i7;

        $i9 = r2.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i11 = $i10 + $i9;

        $i13 = $i11 + i23;

        $i12 = r2.<android.view.ViewGroup$MarginLayoutParams: int width>;

        i24 = staticinvoke <android.widget.ScrollView: int getChildMeasureSpec(int,int,int)>(i22, $i13, $i12);

        i2 = r0.<android.widget.ScrollView: int mPaddingTop>;

        i3 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i4 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        i25 = r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i14 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i15 = i2 + i3;

        $i16 = $i15 + i4;

        $i17 = $i16 + i25;

        $i18 = $i17 + i1;

        $i19 = $i14 - $i18;

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i19);

        $i21 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i20, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i24, $i21);

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.ScrollView r0;
        android.os.StrictMode$Span r1, r2;

        r0 := @this: android.widget.ScrollView;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        r1 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label1:
        r2 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label2:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.ScrollView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, i5, i6;
        boolean $z0, $z1, $z2;
        float f0, $f1, $f2;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i3 == 8 goto label1;

        goto label7;

     label1:
        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(2);

        if $z0 == 0 goto label2;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        goto label4;

     label2:
        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4194304);

        if $z1 == 0 goto label3;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(26);

        goto label4;

     label3:
        f0 = 0.0F;

     label4:
        $f1 = r0.<android.widget.ScrollView: float mVerticalScrollFactor>;

        $f2 = $f1 * f0;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f2);

        if i5 == 0 goto label7;

        i0 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        i1 = r0.<android.widget.ScrollView: int mScrollY>;

        i2 = i1 - i5;

        if i2 >= 0 goto label5;

        i6 = 0;

        goto label6;

     label5:
        i6 = i2;

        if i2 <= i0 goto label6;

        i6 = i0;

     label6:
        if i6 == i1 goto label7;

        $i4 = r0.<android.widget.ScrollView: int mScrollX>;

        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i4, i6);

        return 1;

     label7:
        $z2 = specialinvoke r0.<android.widget.FrameLayout: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z2;
    }

    public void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.ScrollView r0;
        android.view.accessibility.AccessibilityEvent r1;
        int $i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        $i0 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>(z0);

        $i1 = r0.<android.widget.ScrollView: int mScrollX>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setMaxScrollX(int)>($i1);

        $i2 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setMaxScrollY(int)>($i2);

        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.ScrollView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, $i1, $i2;
        boolean $z0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $z0 = virtualinvoke r0.<android.widget.ScrollView: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        i0 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        if i0 <= 0 goto label2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

        $i1 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i1 <= 0 goto label1;

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_UP>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r5);

     label1:
        $i2 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i2 >= i0 goto label2;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r2);

        $r3 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_DOWN>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r3);

     label2:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.ScrollView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, i15, i16, i17, i18;
        boolean z0, $z1, $z2, $z4, $z6, $z7, $z8, $z9;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r1, $r7;
        android.widget.OverScroller $r2, $r3, $r6;
        android.os.StrictMode$Span $r4, $r5, $r8, $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r14;
        android.view.MotionEvent r15;
        android.view.ViewParent r17;

        r0 := @this: android.widget.ScrollView;

        r15 := @parameter0: android.view.MotionEvent;

        i14 = virtualinvoke r15.<android.view.MotionEvent: int getAction()>();

        if i14 != 2 goto label01;

        $z8 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        if $z8 == 0 goto label01;

        return 1;

     label01:
        $z1 = specialinvoke r0.<android.widget.FrameLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r15);

        if $z1 == 0 goto label02;

        return 1;

     label02:
        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        if $i1 != 0 goto label03;

        $z7 = virtualinvoke r0.<android.widget.ScrollView: boolean canScrollVertically(int)>(1);

        if $z7 != 0 goto label03;

        return 0;

     label03:
        i15 = i14 & 255;

        if i15 == 0 goto label12;

        if i15 == 1 goto label10;

        if i15 == 2 goto label05;

        if i15 == 3 goto label10;

        if i15 == 6 goto label04;

        goto label15;

     label04:
        specialinvoke r0.<android.widget.ScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>(r15);

        goto label15;

     label05:
        i16 = r0.<android.widget.ScrollView: int mActivePointerId>;

        if i16 != -1 goto label06;

        goto label15;

     label06:
        i0 = virtualinvoke r15.<android.view.MotionEvent: int findPointerIndex(int)>(i16);

        if i0 != -1 goto label07;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScrollView", $r14);

        goto label15;

     label07:
        $f2 = virtualinvoke r15.<android.view.MotionEvent: float getY(int)>(i0);

        i17 = (int) $f2;

        $i7 = r0.<android.widget.ScrollView: int mLastMotionY>;

        $i8 = i17 - $i7;

        $i9 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        $i10 = r0.<android.widget.ScrollView: int mTouchSlop>;

        if $i9 <= $i10 goto label15;

        $i11 = virtualinvoke r0.<android.widget.ScrollView: int getNestedScrollAxes()>();

        $i12 = 2 & $i11;

        if $i12 != 0 goto label15;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 1;

        r0.<android.widget.ScrollView: int mLastMotionY> = i17;

        specialinvoke r0.<android.widget.ScrollView: void initVelocityTrackerIfNotExists()>();

        $r7 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r7.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r15);

        r0.<android.widget.ScrollView: int mNestedYOffset> = 0;

        $r8 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r8 != null goto label08;

        $r9 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("ScrollView-scroll");

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan> = $r9;

     label08:
        r17 = virtualinvoke r0.<android.widget.ScrollView: android.view.ViewParent getParent()>();

        if r17 == null goto label09;

        interfaceinvoke r17.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label09:
        goto label15;

     label10:
        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 0;

        r0.<android.widget.ScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.ScrollView: void recycleVelocityTracker()>();

        $r6 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i4 = r0.<android.widget.ScrollView: int mScrollX>;

        $i5 = r0.<android.widget.ScrollView: int mScrollY>;

        $i6 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        $z6 = virtualinvoke $r6.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i4, $i5, 0, 0, 0, $i6);

        if $z6 == 0 goto label11;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label11:
        virtualinvoke r0.<android.widget.ScrollView: void stopNestedScroll()>();

        goto label15;

     label12:
        $f0 = virtualinvoke r15.<android.view.MotionEvent: float getY()>();

        i18 = (int) $f0;

        $f1 = virtualinvoke r15.<android.view.MotionEvent: float getX()>();

        $i2 = (int) $f1;

        $z2 = specialinvoke r0.<android.widget.ScrollView: boolean inChild(int,int)>($i2, i18);

        if $z2 != 0 goto label13;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke r0.<android.widget.ScrollView: void recycleVelocityTracker()>();

        goto label15;

     label13:
        r0.<android.widget.ScrollView: int mLastMotionY> = i18;

        $i3 = virtualinvoke r15.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.ScrollView: int mActivePointerId> = $i3;

        specialinvoke r0.<android.widget.ScrollView: void initOrResetVelocityTracker()>();

        $r1 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r15);

        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $r3 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z4 = virtualinvoke $r3.<android.widget.OverScroller: boolean isFinished()>();

        z0 = 1 ^ $z4;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = z0;

        if z0 == 0 goto label14;

        $r4 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r4 != null goto label14;

        $r5 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("ScrollView-scroll");

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mScrollStrictSpan> = $r5;

     label14:
        virtualinvoke r0.<android.widget.ScrollView: boolean startNestedScroll(int)>(2);

     label15:
        $z9 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        return $z9;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.ScrollView r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, $i17;
        android.view.View $r1, $r2, r3;
        android.widget.ScrollView$SavedState r4;

        r0 := @this: android.widget.ScrollView;

        z0 := @parameter0: boolean;

        i13 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i13, i0, i1, i2);

        r0.<android.widget.ScrollView: boolean mIsLayoutDirty> = 0;

        r3 = r0.<android.widget.ScrollView: android.view.View mChildToScrollTo>;

        if r3 == null goto label1;

        $z1 = staticinvoke <android.widget.ScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>(r3, r0);

        if $z1 == 0 goto label1;

        $r2 = r0.<android.widget.ScrollView: android.view.View mChildToScrollTo>;

        virtualinvoke r0.<android.widget.ScrollView: void scrollToDescendant(android.view.View)>($r2);

     label1:
        r0.<android.widget.ScrollView: android.view.View mChildToScrollTo> = null;

        $z2 = virtualinvoke r0.<android.widget.ScrollView: boolean isLaidOut()>();

        if $z2 != 0 goto label6;

        r4 = r0.<android.widget.ScrollView: android.widget.ScrollView$SavedState mSavedState>;

        if r4 == null goto label2;

        $i12 = r4.<android.widget.ScrollView$SavedState: int scrollPosition>;

        r0.<android.widget.ScrollView: int mScrollY> = $i12;

        r0.<android.widget.ScrollView: android.widget.ScrollView$SavedState mSavedState> = null;

     label2:
        $i3 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i3 <= 0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        i14 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        goto label4;

     label3:
        i14 = 0;

     label4:
        $i5 = i2 - i0;

        $i4 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i7 = $i5 - $i4;

        $i6 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i8 = $i7 - $i6;

        $i9 = i14 - $i8;

        i15 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i10 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i10 <= i15 goto label5;

        r0.<android.widget.ScrollView: int mScrollY> = i15;

        goto label6;

     label5:
        $i11 = r0.<android.widget.ScrollView: int mScrollY>;

        if $i11 >= 0 goto label6;

        r0.<android.widget.ScrollView: int mScrollY> = 0;

     label6:
        $i16 = r0.<android.widget.ScrollView: int mScrollX>;

        $i17 = r0.<android.widget.ScrollView: int mScrollY>;

        virtualinvoke r0.<android.widget.ScrollView: void scrollTo(int,int)>($i16, $i17);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.ScrollView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams r2;
        boolean $z0;
        android.content.Context $r3;
        android.content.pm.ApplicationInfo $r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i24 := @parameter1: int;

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i0, i24);

        $z0 = r0.<android.widget.ScrollView: boolean mFillViewport>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i24);

        if $i1 != 0 goto label2;

        return;

     label2:
        $i2 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i2 <= 0 goto label5;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r0.<android.widget.ScrollView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i25 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r5;

        if i25 < 23 goto label3;

        $i13 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i12 = r0.<android.widget.ScrollView: int mPaddingRight>;

        $i15 = $i13 + $i12;

        $i14 = r2.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i17 = $i15 + $i14;

        $i16 = r2.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        i26 = $i17 + $i16;

        $i19 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i18 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i21 = $i19 + $i18;

        $i20 = r2.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i23 = $i21 + $i20;

        $i22 = r2.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        i27 = $i23 + $i22;

        goto label4;

     label3:
        $i4 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i3 = r0.<android.widget.ScrollView: int mPaddingRight>;

        i26 = $i4 + $i3;

        $i6 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i5 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i27 = $i6 + $i5;

     label4:
        $i7 = virtualinvoke r0.<android.widget.ScrollView: int getMeasuredHeight()>();

        i28 = $i7 - i27;

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if $i8 >= i28 goto label5;

        $i9 = r2.<android.widget.FrameLayout$LayoutParams: int width>;

        $i10 = staticinvoke <android.widget.ScrollView: int getChildMeasureSpec(int,int,int)>(i0, i26, $i9);

        $i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i28, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i10, $i11);

     label5:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        float f0, f1;
        boolean z0;
        int $i0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        $i0 = (int) f1;

        specialinvoke r0.<android.widget.ScrollView: void flingWithNestedDispatch(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i6 = r0.<android.widget.ScrollView: int mScrollY>;

        virtualinvoke r0.<android.widget.ScrollView: void scrollBy(int,int)>(0, i2);

        $i3 = r0.<android.widget.ScrollView: int mScrollY>;

        i7 = $i3 - i6;

        $i4 = i2 - i7;

        virtualinvoke r0.<android.widget.ScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, i7, 0, $i4, null);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r1, r2, i0);

        virtualinvoke r0.<android.widget.ScrollView: boolean startNestedScroll(int)>(2);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.widget.ScrollView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, $z2;
        android.widget.OverScroller $r1, $r2;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z2 = virtualinvoke $r1.<android.widget.OverScroller: boolean isFinished()>();

        if $z2 != 0 goto label2;

        i2 = r0.<android.widget.ScrollView: int mScrollX>;

        i3 = r0.<android.widget.ScrollView: int mScrollY>;

        r0.<android.widget.ScrollView: int mScrollX> = i0;

        r0.<android.widget.ScrollView: int mScrollY> = i1;

        virtualinvoke r0.<android.widget.ScrollView: void invalidateParentIfNeeded()>();

        $i5 = r0.<android.widget.ScrollView: int mScrollX>;

        $i4 = r0.<android.widget.ScrollView: int mScrollY>;

        virtualinvoke r0.<android.widget.ScrollView: void onScrollChanged(int,int,int,int)>($i5, $i4, i2, i3);

        if z1 == 0 goto label1;

        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i6 = r0.<android.widget.ScrollView: int mScrollX>;

        $i7 = r0.<android.widget.ScrollView: int mScrollY>;

        $i8 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        virtualinvoke $r2.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i6, $i7, 0, 0, 0, $i8);

     label1:
        goto label3;

     label2:
        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>(i0, i1);

     label3:
        virtualinvoke r0.<android.widget.ScrollView: boolean awakenScrollBars()>();

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.widget.ScrollView r0;
        int i0, i1;
        android.graphics.Rect r1;
        android.view.FocusFinder $r2, $r3;
        boolean $z0, $z1;
        android.view.View r4;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        if i0 != 2 goto label1;

        i1 = 130;

        goto label2;

     label1:
        i1 = i0;

        if i0 != 1 goto label2;

        i1 = 33;

     label2:
        if r1 != null goto label3;

        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r4 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, null, i1);

        goto label4;

     label3:
        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r4 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>(r0, r1, i1);

     label4:
        if r4 != null goto label5;

        return 0;

     label5:
        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean isOffScreen(android.view.View)>(r4);

        if $z0 == 0 goto label6;

        return 0;

     label6:
        $z1 = virtualinvoke r4.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i1, r1);

        return $z1;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.ScrollView r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        android.os.Parcelable $r3, r4;
        android.widget.ScrollView$SavedState r5;

        r0 := @this: android.widget.ScrollView;

        r4 := @parameter0: android.os.Parcelable;

        $r1 = r0.<android.widget.ScrollView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 > 18 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>(r4);

        return;

     label1:
        r5 = (android.widget.ScrollView$SavedState) r4;

        $r3 = virtualinvoke r5.<android.widget.ScrollView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        r0.<android.widget.ScrollView: android.widget.ScrollView$SavedState mSavedState> = r5;

        virtualinvoke r0.<android.widget.ScrollView: void requestLayout()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.ScrollView r0;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        android.widget.ScrollView$SavedState $r4;
        android.os.Parcelable $r5, $r6;

        r0 := @this: android.widget.ScrollView;

        $r2 = r0.<android.widget.ScrollView: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 > 18 goto label1;

        $r6 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        return $r6;

     label1:
        $r4 = new android.widget.ScrollView$SavedState;

        $r5 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r4.<android.widget.ScrollView$SavedState: void <init>(android.os.Parcelable)>($r5);

        $i1 = r0.<android.widget.ScrollView: int mScrollY>;

        $r4.<android.widget.ScrollView$SavedState: int scrollPosition> = $i1;

        return $r4;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.ScrollView r0;
        int i0, i1, i2, i3, $i4;
        android.view.View r1;
        boolean $z0;
        android.graphics.Rect $r2, $r3, $r4;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View findFocus()>();

        if r1 == null goto label3;

        if r0 != r1 goto label1;

        goto label3;

     label1:
        $z0 = specialinvoke r0.<android.widget.ScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, 0, i3);

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.widget.ScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i4 = virtualinvoke r0.<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        specialinvoke r0.<android.widget.ScrollView: void doScrollY(int)>($i4);

     label2:
        return;

     label3:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1, r2;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.widget.ScrollView r0;
        android.view.View r1;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.FrameLayout: void onStopNestedScroll(android.view.View)>(r1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.ScrollView r0;
        android.view.MotionEvent r1, r27;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, i47, i48, i49, i50, i51, i52, $i53, $i54, $i55, i56, $i57, i58, i59, i60, $i61, $i62;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, z16, $z17, $z18, $z19, $z20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        android.widget.OverScroller $r2, $r3, $r4, $r26, $r34;
        int[] $r5, $r6, $r7, $r16, $r18, $r19, $r20, $r30, r31;
        android.widget.EdgeEffect $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        android.view.VelocityTracker $r17, r32, r36;
        java.lang.StringBuilder $r21;
        java.lang.String $r25;
        android.view.ViewParent r29, r33;
        android.os.StrictMode$Span r35;

        r0 := @this: android.widget.ScrollView;

        r27 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.widget.ScrollView: void initVelocityTrackerIfNotExists()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r27);

        i47 = virtualinvoke r27.<android.view.MotionEvent: int getActionMasked()>();

        if i47 != 0 goto label01;

        r0.<android.widget.ScrollView: int mNestedYOffset> = 0;

     label01:
        $i3 = r0.<android.widget.ScrollView: int mNestedYOffset>;

        $f0 = (float) $i3;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        if i47 == 0 goto label25;

        if i47 == 1 goto label22;

        if i47 == 2 goto label06;

        if i47 == 3 goto label04;

        if i47 == 5 goto label03;

        if i47 == 6 goto label02;

        goto label29;

     label02:
        specialinvoke r0.<android.widget.ScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>(r27);

        $i44 = r0.<android.widget.ScrollView: int mActivePointerId>;

        $i45 = virtualinvoke r27.<android.view.MotionEvent: int findPointerIndex(int)>($i44);

        $f20 = virtualinvoke r27.<android.view.MotionEvent: float getY(int)>($i45);

        $i46 = (int) $f20;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i46;

        goto label29;

     label03:
        i48 = virtualinvoke r27.<android.view.MotionEvent: int getActionIndex()>();

        $f19 = virtualinvoke r27.<android.view.MotionEvent: float getY(int)>(i48);

        $i42 = (int) $f19;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i42;

        $i43 = virtualinvoke r27.<android.view.MotionEvent: int getPointerId(int)>(i48);

        r0.<android.widget.ScrollView: int mActivePointerId> = $i43;

        goto label29;

     label04:
        $z12 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        if $z12 == 0 goto label29;

        $i38 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i38 <= 0 goto label29;

        $r26 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i39 = r0.<android.widget.ScrollView: int mScrollX>;

        $i40 = r0.<android.widget.ScrollView: int mScrollY>;

        $i41 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        $z13 = virtualinvoke $r26.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i39, $i40, 0, 0, 0, $i41);

        if $z13 == 0 goto label05;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label05:
        r0.<android.widget.ScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.ScrollView: void endDrag()>();

        goto label29;

     label06:
        $i13 = r0.<android.widget.ScrollView: int mActivePointerId>;

        i0 = virtualinvoke r27.<android.view.MotionEvent: int findPointerIndex(int)>($i13);

        if i0 != -1 goto label07;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $i36 = r0.<android.widget.ScrollView: int mActivePointerId>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScrollView", $r25);

        goto label29;

     label07:
        $f3 = virtualinvoke r27.<android.view.MotionEvent: float getY(int)>(i0);

        i49 = (int) $f3;

        $i14 = r0.<android.widget.ScrollView: int mLastMotionY>;

        i50 = $i14 - i49;

        i51 = i50;

        $r6 = r0.<android.widget.ScrollView: int[] mScrollConsumed>;

        $r5 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $z5 = virtualinvoke r0.<android.widget.ScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(0, i50, $r6, $r5);

        if $z5 == 0 goto label08;

        $r18 = r0.<android.widget.ScrollView: int[] mScrollConsumed>;

        $i31 = $r18[1];

        i51 = i50 - $i31;

        $r19 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $i32 = $r19[1];

        $f18 = (float) $i32;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f18);

        $i34 = r0.<android.widget.ScrollView: int mNestedYOffset>;

        $r20 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $i33 = $r20[1];

        $i35 = $i34 + $i33;

        r0.<android.widget.ScrollView: int mNestedYOffset> = $i35;

     label08:
        $z6 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        if $z6 != 0 goto label11;

        $i27 = staticinvoke <java.lang.Math: int abs(int)>(i51);

        $i28 = r0.<android.widget.ScrollView: int mTouchSlop>;

        if $i27 <= $i28 goto label11;

        r29 = virtualinvoke r0.<android.widget.ScrollView: android.view.ViewParent getParent()>();

        if r29 == null goto label09;

        interfaceinvoke r29.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label09:
        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = 1;

        if i51 <= 0 goto label10;

        $i30 = r0.<android.widget.ScrollView: int mTouchSlop>;

        i51 = i51 - $i30;

        goto label11;

     label10:
        $i29 = r0.<android.widget.ScrollView: int mTouchSlop>;

        i51 = i51 + $i29;

        goto label11;

     label11:
        $z15 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        if $z15 == 0 goto label21;

        $r7 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $i15 = $r7[1];

        $i16 = i49 - $i15;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i16;

        i1 = r0.<android.widget.ScrollView: int mScrollY>;

        i52 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        i2 = virtualinvoke r0.<android.widget.ScrollView: int getOverScrollMode()>();

        if i2 == 0 goto label12;

        z16 = 0;

        if i2 != 1 goto label13;

        z16 = 0;

        if i52 <= 0 goto label13;

     label12:
        z16 = 1;

     label13:
        $i53 = r0.<android.widget.ScrollView: int mScrollY>;

        $i54 = r0.<android.widget.ScrollView: int mOverscrollDistance>;

        $z17 = virtualinvoke r0.<android.widget.ScrollView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i51, 0, $i53, 0, i52, 0, $i54, 1);

        if $z17 == 0 goto label14;

        $z11 = virtualinvoke r0.<android.widget.ScrollView: boolean hasNestedScrollingParent()>();

        if $z11 != 0 goto label14;

        $r17 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r17.<android.view.VelocityTracker: void clear()>();

     label14:
        $i55 = r0.<android.widget.ScrollView: int mScrollY>;

        i56 = $i55 - i1;

        $i57 = i51 - i56;

        $r30 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $z18 = virtualinvoke r0.<android.widget.ScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, i56, 0, $i57, $r30);

        if $z18 == 0 goto label15;

        i58 = r0.<android.widget.ScrollView: int mLastMotionY>;

        r31 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $i21 = r31[1];

        $i22 = i58 - $i21;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i22;

        $i23 = r31[1];

        $f17 = (float) $i23;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f17);

        $i25 = r0.<android.widget.ScrollView: int mNestedYOffset>;

        $r16 = r0.<android.widget.ScrollView: int[] mScrollOffset>;

        $i24 = $r16[1];

        $i26 = $i25 + $i24;

        r0.<android.widget.ScrollView: int mNestedYOffset> = $i26;

        goto label20;

     label15:
        if z16 == 0 goto label20;

        i59 = i1 + i51;

        if i59 >= 0 goto label17;

        $r13 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f11 = (float) i51;

        $i19 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $f12 = (float) $i19;

        $f13 = $f11 / $f12;

        $f14 = virtualinvoke r27.<android.view.MotionEvent: float getX(int)>(i0);

        $i20 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        $f15 = (float) $i20;

        $f16 = $f14 / $f15;

        virtualinvoke $r13.<android.widget.EdgeEffect: void onPull(float,float)>($f13, $f16);

        $r14 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z10 = virtualinvoke $r14.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z10 != 0 goto label16;

        $r15 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r15.<android.widget.EdgeEffect: void onRelease()>();

        goto label18;

     label16:
        goto label18;

     label17:
        if i59 <= i52 goto label18;

        $r10 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f4 = (float) i51;

        $i17 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $f5 = (float) $i17;

        $f6 = $f4 / $f5;

        $f7 = virtualinvoke r27.<android.view.MotionEvent: float getX(int)>(i0);

        $i18 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        $f8 = (float) $i18;

        $f9 = $f7 / $f8;

        $f10 = 1.0F - $f9;

        virtualinvoke $r10.<android.widget.EdgeEffect: void onPull(float,float)>($f6, $f10);

        $r11 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z9 = virtualinvoke $r11.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z9 != 0 goto label18;

        $r12 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

     label18:
        $z19 = specialinvoke r0.<android.widget.ScrollView: boolean shouldDisplayEdgeEffects()>();

        if $z19 == 0 goto label20;

        $r8 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z7 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 == 0 goto label19;

        $r9 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z8 = virtualinvoke $r9.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z8 != 0 goto label20;

     label19:
        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

        goto label20;

     label20:
        goto label29;

     label21:
        goto label29;

     label22:
        $z3 = r0.<android.widget.ScrollView: boolean mIsBeingDragged>;

        if $z3 == 0 goto label29;

        r32 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        $i5 = r0.<android.widget.ScrollView: int mMaximumVelocity>;

        $f1 = (float) $i5;

        virtualinvoke r32.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);

        $i6 = r0.<android.widget.ScrollView: int mActivePointerId>;

        $f2 = virtualinvoke r32.<android.view.VelocityTracker: float getYVelocity(int)>($i6);

        i60 = (int) $f2;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>(i60);

        $i8 = r0.<android.widget.ScrollView: int mMinimumVelocity>;

        if $i7 <= $i8 goto label23;

        $i12 = neg i60;

        specialinvoke r0.<android.widget.ScrollView: void flingWithNestedDispatch(int)>($i12);

        goto label24;

     label23:
        $r4 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i9 = r0.<android.widget.ScrollView: int mScrollX>;

        $i10 = r0.<android.widget.ScrollView: int mScrollY>;

        $i11 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        $z4 = virtualinvoke $r4.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i9, $i10, 0, 0, 0, $i11);

        if $z4 == 0 goto label24;

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

     label24:
        r0.<android.widget.ScrollView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.ScrollView: void endDrag()>();

        goto label29;

     label25:
        $i4 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i4 != 0 goto label26;

        return 0;

     label26:
        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z1 = virtualinvoke $r2.<android.widget.OverScroller: boolean isFinished()>();

        z0 = $z1 ^ 1;

        r0.<android.widget.ScrollView: boolean mIsBeingDragged> = z0;

        if z0 == 0 goto label27;

        r33 = virtualinvoke r0.<android.widget.ScrollView: android.view.ViewParent getParent()>();

        if r33 == null goto label27;

        interfaceinvoke r33.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label27:
        $r34 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z20 = virtualinvoke $r34.<android.widget.OverScroller: boolean isFinished()>();

        if $z20 != 0 goto label28;

        $r3 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r3.<android.widget.OverScroller: void abortAnimation()>();

        r35 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan>;

        if r35 == null goto label28;

        virtualinvoke r35.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label28:
        $f21 = virtualinvoke r27.<android.view.MotionEvent: float getY()>();

        $i61 = (int) $f21;

        r0.<android.widget.ScrollView: int mLastMotionY> = $i61;

        $i62 = virtualinvoke r27.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.ScrollView: int mActivePointerId> = $i62;

        virtualinvoke r0.<android.widget.ScrollView: boolean startNestedScroll(int)>(2);

     label29:
        r36 = r0.<android.widget.ScrollView: android.view.VelocityTracker mVelocityTracker>;

        if r36 == null goto label30;

        virtualinvoke r36.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

     label30:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    public boolean pageScroll(int)
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17;
        android.graphics.Rect $r1, $r2, $r3, $r4, $r5, $r6, r8, $r9, $r10;
        boolean z0, $z1;
        android.view.View r7;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        if i0 != 130 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        i1 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        if z0 == 0 goto label4;

        $r4 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i5 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        $i6 = $i5 + i1;

        $r4.<android.graphics.Rect: int top> = $i6;

        i13 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if i13 <= 0 goto label3;

        $i7 = i13 - 1;

        r7 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>($i7);

        $r5 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i8 = $r5.<android.graphics.Rect: int top>;

        $i9 = $i8 + i1;

        $i10 = virtualinvoke r7.<android.view.View: int getBottom()>();

        if $i9 <= $i10 goto label3;

        $r6 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i11 = virtualinvoke r7.<android.view.View: int getBottom()>();

        $i12 = $i11 - i1;

        $r6.<android.graphics.Rect: int top> = $i12;

     label3:
        goto label5;

     label4:
        $r1 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke r0.<android.widget.ScrollView: int getScrollY()>();

        $i3 = $i2 - i1;

        $r1.<android.graphics.Rect: int top> = $i3;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i4 = $r2.<android.graphics.Rect: int top>;

        if $i4 >= 0 goto label5;

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $r3.<android.graphics.Rect: int top> = 0;

     label5:
        r8 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i14 = r8.<android.graphics.Rect: int top>;

        $i15 = $i14 + i1;

        r8.<android.graphics.Rect: int bottom> = $i15;

        $r9 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i16 = $r9.<android.graphics.Rect: int top>;

        $r10 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        $i17 = $r10.<android.graphics.Rect: int bottom>;

        $z1 = specialinvoke r0.<android.widget.ScrollView: boolean scrollAndFocus(int,int,int)>(i0, $i16, $i17);

        return $z1;
    }

    public boolean performAccessibilityActionInternal(int, android.os.Bundle)
    {
        android.widget.ScrollView r0;
        android.os.Bundle r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19;

        r0 := @this: android.widget.ScrollView;

        i11 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i11, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.widget.ScrollView: boolean isEnabled()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        if i11 == 4096 goto label5;

        if i11 == 8192 goto label3;

        if i11 == 16908344 goto label3;

        if i11 == 16908346 goto label5;

        return 0;

     label3:
        i12 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i13 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i14 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i8 = r0.<android.widget.ScrollView: int mScrollY>;

        $i6 = i12 - i13;

        $i7 = $i6 - i14;

        $i9 = $i8 - $i7;

        i15 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0);

        $i10 = r0.<android.widget.ScrollView: int mScrollY>;

        if i15 == $i10 goto label4;

        virtualinvoke r0.<android.widget.ScrollView: void smoothScrollTo(int,int)>(0, i15);

        return 1;

     label4:
        return 0;

     label5:
        i16 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i17 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i18 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i2 = r0.<android.widget.ScrollView: int mScrollY>;

        $i0 = i16 - i17;

        $i1 = $i0 - i18;

        $i3 = $i2 + $i1;

        $i4 = specialinvoke r0.<android.widget.ScrollView: int getScrollRange()>();

        i19 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i5 = r0.<android.widget.ScrollView: int mScrollY>;

        if i19 == $i5 goto label6;

        virtualinvoke r0.<android.widget.ScrollView: void smoothScrollTo(int,int)>(0, i19);

        return 1;

     label6:
        return 0;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.widget.ScrollView r0;
        android.view.View r1, r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.view.View: boolean getRevealOnFocusHint()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<android.widget.ScrollView: boolean mIsLayoutDirty>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.widget.ScrollView: void scrollToDescendant(android.view.View)>(r2);

        goto label2;

     label1:
        r0.<android.widget.ScrollView: android.view.View mChildToScrollTo> = r2;

     label2:
        specialinvoke r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        $i5 = $i3 - $i4;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i2, $i5);

        $z1 = specialinvoke r0.<android.widget.ScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>(r2, z0);

        return $z1;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.widget.ScrollView r0;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.ScrollView: void recycleVelocityTracker()>();

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public void requestLayout()
    {
        android.widget.ScrollView r0;

        r0 := @this: android.widget.ScrollView;

        r0.<android.widget.ScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke r0.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }

    public void scrollTo(int, int)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;

        r0 := @this: android.widget.ScrollView;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        $i0 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i0 <= 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getWidth()>();

        $i2 = r0.<android.widget.ScrollView: int mPaddingRight>;

        $i4 = $i1 - $i2;

        $i3 = r0.<android.widget.ScrollView: int mPaddingLeft>;

        $i5 = $i4 - $i3;

        $i6 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i17 = staticinvoke <android.widget.ScrollView: int clamp(int,int,int)>(i15, $i5, $i6);

        $i7 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        $i8 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        $i10 = $i7 - $i8;

        $i9 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $i11 = $i10 - $i9;

        $i12 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i18 = staticinvoke <android.widget.ScrollView: int clamp(int,int,int)>(i16, $i11, $i12);

        $i13 = r0.<android.widget.ScrollView: int mScrollX>;

        if i17 != $i13 goto label1;

        $i14 = r0.<android.widget.ScrollView: int mScrollY>;

        if i18 == $i14 goto label2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>(i17, i18);

     label2:
        return;
    }

    public void scrollToDescendant(android.view.View)
    {
        android.widget.ScrollView r0;
        android.view.View r1;
        int i0;
        boolean $z0;
        android.graphics.Rect $r2, $r3, $r4;

        r0 := @this: android.widget.ScrollView;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.widget.ScrollView: boolean mIsLayoutDirty>;

        if $z0 != 0 goto label2;

        $r2 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.widget.ScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<android.widget.ScrollView: android.graphics.Rect mTempRect>;

        i0 = virtualinvoke r0.<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        if i0 == 0 goto label1;

        virtualinvoke r0.<android.widget.ScrollView: void scrollBy(int,int)>(0, i0);

     label1:
        goto label3;

     label2:
        r0.<android.widget.ScrollView: android.view.View mChildToScrollTo> = r1;

     label3:
        return;
    }

    public void setBottomEdgeEffectColor(int)
    {
        android.widget.ScrollView r0;
        int i0;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setColor(int)>(i0);

        return;
    }

    public void setEdgeEffectColor(int)
    {
        android.widget.ScrollView r0;
        int i0;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.ScrollView: void setTopEdgeEffectColor(int)>(i0);

        virtualinvoke r0.<android.widget.ScrollView: void setBottomEdgeEffectColor(int)>(i0);

        return;
    }

    public void setFillViewport(boolean)
    {
        android.widget.ScrollView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.ScrollView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.ScrollView: boolean mFillViewport>;

        if z0 == $z1 goto label1;

        r0.<android.widget.ScrollView: boolean mFillViewport> = z0;

        virtualinvoke r0.<android.widget.ScrollView: void requestLayout()>();

     label1:
        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        android.widget.ScrollView r0;
        boolean z0;

        r0 := @this: android.widget.ScrollView;

        z0 := @parameter0: boolean;

        r0.<android.widget.ScrollView: boolean mSmoothScrollingEnabled> = z0;

        return;
    }

    public void setTopEdgeEffectColor(int)
    {
        android.widget.ScrollView r0;
        int i0;
        android.widget.EdgeEffect $r1;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.ScrollView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void setColor(int)>(i0);

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.widget.ScrollView r0;

        r0 := @this: android.widget.ScrollView;

        return 1;
    }

    public final void smoothScrollBy(int, int)
    {
        android.widget.ScrollView r0;
        int i0, $i1, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20;
        android.os.StrictMode$Span r1;
        long $l2, $l3, $l4, $l21;
        byte $b5;
        android.widget.OverScroller $r2, $r3, $r5;
        boolean $z0;
        android.view.View $r4;

        r0 := @this: android.widget.ScrollView;

        i14 := @parameter0: int;

        i15 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.widget.ScrollView: int getChildCount()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l3 = r0.<android.widget.ScrollView: long mLastScroll>;

        $l4 = $l2 - $l3;

        $b5 = $l4 cmp 250L;

        if $b5 <= 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.ScrollView: int getHeight()>();

        i16 = r0.<android.widget.ScrollView: int mPaddingBottom>;

        i17 = r0.<android.widget.ScrollView: int mPaddingTop>;

        $r4 = virtualinvoke r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i6 = virtualinvoke $r4.<android.view.View: int getHeight()>();

        $i7 = i0 - i16;

        $i8 = $i7 - i17;

        $i9 = $i6 - $i8;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        i19 = r0.<android.widget.ScrollView: int mScrollY>;

        $i10 = i19 + i15;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, i18);

        i20 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $r5 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $i13 = r0.<android.widget.ScrollView: int mScrollX>;

        $i12 = i20 - i19;

        virtualinvoke $r5.<android.widget.OverScroller: void startScroll(int,int,int,int)>($i13, i19, 0, $i12);

        virtualinvoke r0.<android.widget.ScrollView: void postInvalidateOnAnimation()>();

        goto label4;

     label2:
        $r2 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        $z0 = virtualinvoke $r2.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<android.widget.ScrollView: android.widget.OverScroller mScroller>;

        virtualinvoke $r3.<android.widget.OverScroller: void abortAnimation()>();

        r1 = r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan>;

        if r1 == null goto label3;

        virtualinvoke r1.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.ScrollView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label3:
        virtualinvoke r0.<android.widget.ScrollView: void scrollBy(int,int)>(i14, i15);

     label4:
        $l21 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.ScrollView: long mLastScroll> = $l21;

        return;
    }

    public final void smoothScrollTo(int, int)
    {
        android.widget.ScrollView r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.ScrollView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.widget.ScrollView: int mScrollX>;

        $i5 = i0 - $i2;

        $i3 = r0.<android.widget.ScrollView: int mScrollY>;

        $i4 = i1 - $i3;

        virtualinvoke r0.<android.widget.ScrollView: void smoothScrollBy(int,int)>($i5, $i4);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.ScrollView: java.lang.String TAG> = "ScrollView";

        <android.widget.ScrollView: float MAX_SCROLL_FACTOR> = 0.5F;

        <android.widget.ScrollView: int INVALID_POINTER> = -1;

        <android.widget.ScrollView: int ANIMATED_SCROLL_GAP> = 250;

        return;
    }
}
