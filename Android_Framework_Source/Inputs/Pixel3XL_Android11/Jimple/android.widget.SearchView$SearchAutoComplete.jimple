public class android.widget.SearchView$SearchAutoComplete extends android.widget.AutoCompleteTextView
{
    private boolean mHasPendingShowSoftInputRequest;
    final java.lang.Runnable mRunShowSoftInputIfNecessary;
    private android.widget.SearchView mSearchView;
    private int mThreshold;

    public void <init>(android.content.Context)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.content.Context r1;
        android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8 $r2;
        int $i0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>(r1);

        $r2 = new android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8;

        specialinvoke $r2.<android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8: void <init>(android.widget.SearchView$SearchAutoComplete)>(r0);

        r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $r2;

        $i0 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold> = $i0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8 $r3;
        int $i0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8;

        specialinvoke $r3.<android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8: void <init>(android.widget.SearchView$SearchAutoComplete)>(r0);

        r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $r3;

        $i0 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold> = $i0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8 $r3;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8;

        specialinvoke $r3.<android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8: void <init>(android.widget.SearchView$SearchAutoComplete)>(r0);

        r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $r3;

        $i1 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold> = $i1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8 $r3;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r3 = new android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8;

        specialinvoke $r3.<android.widget._$$Lambda$SearchView$SearchAutoComplete$qdPU54FiW6QTzCbsg7P4cSs3cJ8: void <init>(android.widget.SearchView$SearchAutoComplete)>(r0);

        r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $r3;

        $i2 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold> = $i2;

        return;
    }

    static boolean access$1700(android.widget.SearchView$SearchAutoComplete)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean $z0;

        r0 := @parameter0: android.widget.SearchView$SearchAutoComplete;

        $z0 = specialinvoke r0.<android.widget.SearchView$SearchAutoComplete: boolean isEmpty()>();

        return $z0;
    }

    static void access$400(android.widget.SearchView$SearchAutoComplete, boolean)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean z0;

        r0 := @parameter0: android.widget.SearchView$SearchAutoComplete;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>(z0);

        return;
    }

    private int getSearchViewTextMinWidthDp()
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.content.res.Configuration r1;
        int i0, i1, i2;
        android.content.res.Resources $r2;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        $r2 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = r1.<android.content.res.Configuration: int screenWidthDp>;

        i1 = r1.<android.content.res.Configuration: int screenHeightDp>;

        i2 = r1.<android.content.res.Configuration: int orientation>;

        if i0 < 960 goto label1;

        if i1 < 720 goto label1;

        if i2 != 2 goto label1;

        return 256;

     label1:
        if i0 >= 600 goto label3;

        if i0 < 640 goto label2;

        if i1 < 480 goto label2;

        goto label3;

     label2:
        return 160;

     label3:
        return 192;
    }

    private boolean isEmpty()
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.text.Editable $r1;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        $r1 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.text.Editable getText()>();

        $i0 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void setImeVisibility(boolean)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean z0, $z1;
        android.view.inputmethod.InputMethodManager r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.Runnable $r4, $r5;
        android.os.IBinder $r6;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        z0 := @parameter0: boolean;

        $r2 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        r1 = (android.view.inputmethod.InputMethodManager) $r3;

        if z0 != 0 goto label1;

        r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $r5 = r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r5);

        $r6 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

        return;

     label1:
        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z1 == 0 goto label2;

        r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $r4 = r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r4);

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        return;

     label2:
        r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        return;
    }

    private void showSoftInputIfNecessary()
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        $z0 = r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

     label1:
        return;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.view.View r1;
        android.widget.SearchView $r2;
        boolean z0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.SearchView$SearchAutoComplete: android.widget.SearchView mSearchView>;

        if r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean enoughToFilter()
    {
        android.widget.SearchView$SearchAutoComplete r0;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        $i0 = r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold>;

        if $i0 <= 0 goto label2;

        $z0 = specialinvoke r0.<android.widget.AutoCompleteTextView: boolean enoughToFilter()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public void lambda$new$0$SearchView$SearchAutoComplete()
    {
        android.widget.SearchView$SearchAutoComplete r0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        specialinvoke r0.<android.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()>();

        return;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean $z0;
        java.lang.Runnable $r1, $r2;
        android.view.inputmethod.EditorInfo r3;
        android.view.inputmethod.InputConnection r4;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r3 := @parameter0: android.view.inputmethod.EditorInfo;

        r4 = specialinvoke r0.<android.widget.AutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>(r3);

        $z0 = r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<android.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: boolean post(java.lang.Runnable)>($r2);

     label1:
        return r4;
    }

    protected void onFinishInflate()
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.util.DisplayMetrics r1;
        android.content.res.Resources $r2;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void onFinishInflate()>();

        $r2 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = specialinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()>();

        $f0 = (float) $i0;

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, r1);

        $i1 = (int) $f1;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: void setMinWidth(int)>($i1);

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean z0;
        int i0;
        android.graphics.Rect r1;
        android.widget.SearchView $r2;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        $r2 = r0.<android.widget.SearchView$SearchAutoComplete: android.widget.SearchView mSearchView>;

        virtualinvoke $r2.<android.widget.SearchView: void onTextFocusChanged()>();

        return;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        boolean z0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = specialinvoke r0.<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>(i0, r1);

        if z0 == 0 goto label1;

        if i0 != 4 goto label1;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 1 goto label1;

        specialinvoke r0.<android.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>(0);

     label1:
        return z0;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        boolean z0, $z1, $z2;
        android.widget.SearchView $r1;
        int $i0;
        android.content.Context $r2;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>(z0);

        if z0 == 0 goto label1;

        $r1 = r0.<android.widget.SearchView$SearchAutoComplete: android.widget.SearchView mSearchView>;

        $z1 = virtualinvoke $r1.<android.widget.SearchView: boolean hasFocus()>();

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: int getVisibility()>();

        if $i0 != 0 goto label1;

        r0.<android.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        $r2 = virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $z2 = staticinvoke <android.widget.SearchView: boolean isLandscapeMode(android.content.Context)>($r2);

        if $z2 == 0 goto label1;

        virtualinvoke r0.<android.widget.SearchView$SearchAutoComplete: void ensureImeVisible(boolean)>(1);

     label1:
        return;
    }

    public void performCompletion()
    {
        android.widget.SearchView$SearchAutoComplete r0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        return;
    }

    protected void replaceText(java.lang.CharSequence)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    void setSearchView(android.widget.SearchView)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        android.widget.SearchView r1;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        r1 := @parameter0: android.widget.SearchView;

        r0.<android.widget.SearchView$SearchAutoComplete: android.widget.SearchView mSearchView> = r1;

        return;
    }

    public void setThreshold(int)
    {
        android.widget.SearchView$SearchAutoComplete r0;
        int i0;

        r0 := @this: android.widget.SearchView$SearchAutoComplete;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AutoCompleteTextView: void setThreshold(int)>(i0);

        r0.<android.widget.SearchView$SearchAutoComplete: int mThreshold> = i0;

        return;
    }
}
