final class android.widget.SelectionActionModeHelper$SelectionMetricsLogger extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final java.util.regex.Pattern PATTERN_WHITESPACE;
    private android.view.textclassifier.TextClassificationContext mClassificationContext;
    private android.view.textclassifier.TextClassifier mClassificationSession;
    private final boolean mEditTextLogger;
    private int mStartIndex;
    private java.lang.String mText;
    private final java.text.BreakIterator mTokenIterator;
    private android.view.textclassifier.TextClassifierEvent mTranslateClickEvent;
    private android.view.textclassifier.TextClassifierEvent mTranslateViewEvent;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String LOG_TAG> = "SelectionMetricsLogger";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s+");

        <android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.util.regex.Pattern PATTERN_WHITESPACE> = $r0;

        return;
    }

    void <init>(android.widget.TextView)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        android.widget.TextView r1;
        boolean $z0;
        java.util.Locale $r3;
        java.text.BreakIterator $r4;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r1 := @parameter0: android.widget.TextView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r1.<android.widget.TextView: boolean isTextEditable()>();

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean mEditTextLogger> = $z0;

        $r3 = virtualinvoke r1.<android.widget.TextView: java.util.Locale getTextLocale()>();

        $r4 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>($r3);

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator> = $r4;

        return;
    }

    private int countWordsBackward(int)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, $i1, i2, i3, i4, $i5, i6;
        java.text.BreakIterator $r1;
        boolean $z0, z1;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i2 := @parameter0: int;

        $i1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i2 < $i1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        i3 = 0;

        i4 = i2;

     label3:
        $i5 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i4 <= $i5 goto label5;

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        i0 = virtualinvoke $r1.<java.text.BreakIterator: int preceding(int)>(i4);

        i6 = i3;

        $z0 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean isWhitespace(int,int)>(i0, i4);

        if $z0 != 0 goto label4;

        i6 = i3 + 1;

     label4:
        i4 = i0;

        i3 = i6;

        goto label3;

     label5:
        return i3;
    }

    private int countWordsForward(int)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, $i1, i2, i3, i4, $i5, i6;
        java.text.BreakIterator $r1;
        boolean $z0, z1;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i2 := @parameter0: int;

        $i1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i2 > $i1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        i3 = 0;

        i4 = i2;

     label3:
        $i5 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i4 >= $i5 goto label5;

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        i0 = virtualinvoke $r1.<java.text.BreakIterator: int following(int)>(i4);

        i6 = i3;

        $z0 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean isWhitespace(int,int)>(i4, i0);

        if $z0 != 0 goto label4;

        i6 = i3 + 1;

     label4:
        i4 = i0;

        i3 = i6;

        goto label3;

     label5:
        return i3;
    }

    private static android.view.textclassifier.TextClassifierEvent generateTranslateEvent(int, android.view.textclassifier.TextClassification, android.view.textclassifier.TextClassificationContext, java.lang.String)
    {
        int i0, $i1;
        android.view.textclassifier.TextClassification r0;
        android.view.textclassifier.TextClassificationContext r1;
        android.app.RemoteAction r2;
        float f0;
        android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder $r4, $r6, $r10, $r13, $r16, $r18;
        android.view.textclassifier.TextClassifierEvent$Builder $r5, $r8, $r11, $r15, $r17;
        java.lang.String $r7, $r21, r22, r24;
        float[] $r9;
        int[] $r12;
        java.util.List $r14;
        android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent $r19;
        java.lang.CharSequence $r20;
        boolean $z0;
        android.os.Bundle r23;

        i0 := @parameter0: int;

        r0 := @parameter1: android.view.textclassifier.TextClassification;

        r1 := @parameter2: android.view.textclassifier.TextClassificationContext;

        r22 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.view.textclassifier.ExtrasUtils: android.app.RemoteAction findTranslateAction(android.view.textclassifier.TextClassification)>(r0);

        if r2 != null goto label1;

        return null;

     label1:
        if i0 != 13 goto label2;

        $r20 = virtualinvoke r2.<android.app.RemoteAction: java.lang.CharSequence getTitle()>();

        $r21 = interfaceinvoke $r20.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r22);

        if $z0 != 0 goto label2;

        return null;

     label2:
        r23 = staticinvoke <android.view.textclassifier.ExtrasUtils: android.os.Bundle getForeignLanguageExtra(android.view.textclassifier.TextClassification)>(r0);

        staticinvoke <android.view.textclassifier.ExtrasUtils: java.lang.String getEntityType(android.os.Bundle)>(r23);

        f0 = staticinvoke <android.view.textclassifier.ExtrasUtils: float getScore(android.os.Bundle)>(r23);

        r24 = staticinvoke <android.view.textclassifier.ExtrasUtils: java.lang.String getModelName(android.os.Bundle)>(r23);

        $r4 = new android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder;

        specialinvoke $r4.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: void <init>(int)>(i0);

        $r5 = virtualinvoke $r4.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder setEventContext(android.view.textclassifier.TextClassificationContext)>(r1);

        $r6 = (android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder) $r5;

        $r7 = virtualinvoke r0.<android.view.textclassifier.TextClassification: java.lang.String getId()>();

        $r8 = virtualinvoke $r6.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder setResultId(java.lang.String)>($r7);

        $r10 = (android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder) $r8;

        $r9 = newarray (float)[1];

        $r9[0] = f0;

        $r11 = virtualinvoke $r10.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder setScores(float[])>($r9);

        $r13 = (android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder) $r11;

        $r12 = newarray (int)[1];

        $r14 = virtualinvoke r0.<android.view.textclassifier.TextClassification: java.util.List getActions()>();

        $i1 = interfaceinvoke $r14.<java.util.List: int indexOf(java.lang.Object)>(r2);

        $r12[0] = $i1;

        $r15 = virtualinvoke $r13.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder setActionIndices(int[])>($r12);

        $r16 = (android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder) $r15;

        $r17 = virtualinvoke $r16.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$Builder setModelName(java.lang.String)>(r24);

        $r18 = (android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder) $r17;

        $r19 = virtualinvoke $r18.<android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent$Builder: android.view.textclassifier.TextClassifierEvent$LanguageDetectionEvent build()>();

        return $r19;
    }

    private int[] getWordDelta(int, int)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        int[] r1;
        java.text.BreakIterator $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i12 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = newarray (int)[2];

        i1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i12 != i1 goto label1;

        r1[0] = 0;

        goto label3;

     label1:
        if i12 >= i1 goto label2;

        $i10 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int countWordsForward(int)>(i12);

        $i11 = neg $i10;

        r1[0] = $i11;

        goto label3;

     label2:
        $i2 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int countWordsBackward(int)>(i12);

        r1[0] = $i2;

        $r2 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        $z0 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i12);

        if $z0 != 0 goto label3;

        $r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        $i6 = virtualinvoke $r3.<java.text.BreakIterator: int preceding(int)>(i12);

        $r4 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        $i7 = virtualinvoke $r4.<java.text.BreakIterator: int following(int)>(i12);

        $z1 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean isWhitespace(int,int)>($i6, $i7);

        if $z1 != 0 goto label3;

        $i8 = r1[0];

        $i9 = $i8 - 1;

        r1[0] = $i9;

     label3:
        i13 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex>;

        if i0 != i13 goto label4;

        r1[1] = 0;

        goto label6;

     label4:
        if i0 >= i13 goto label5;

        $i4 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int countWordsForward(int)>(i0);

        $i5 = neg $i4;

        r1[1] = $i5;

        goto label6;

     label5:
        $i3 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int countWordsBackward(int)>(i0);

        r1[1] = $i3;

     label6:
        return r1;
    }

    private boolean hasActiveClassificationSession()
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        android.view.textclassifier.TextClassifier r1;
        boolean $z0, z1;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<android.view.textclassifier.TextClassifier: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isWhitespace(int, int)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, i1;
        java.lang.String $r1, $r3;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r4;
        boolean $z0;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.util.regex.Pattern PATTERN_WHITESPACE>;

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    private void maybeGenerateTranslateClickEvent(android.view.textclassifier.TextClassification, java.lang.String)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        android.view.textclassifier.TextClassification r1;
        java.lang.String r2;
        android.view.textclassifier.TextClassificationContext $r3;
        android.view.textclassifier.TextClassifierEvent $r4;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r1 := @parameter0: android.view.textclassifier.TextClassification;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassificationContext mClassificationContext>;

        $r4 = staticinvoke <android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent generateTranslateEvent(int,android.view.textclassifier.TextClassification,android.view.textclassifier.TextClassificationContext,java.lang.String)>(13, r1, $r3, r2);

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateClickEvent> = $r4;

     label1:
        return;
    }

    private void maybeGenerateTranslateViewEvent(android.view.textclassifier.TextClassification)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        android.view.textclassifier.TextClassificationContext $r1;
        android.view.textclassifier.TextClassification r2;
        android.view.textclassifier.TextClassifierEvent r3;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r2 := @parameter0: android.view.textclassifier.TextClassification;

        if r2 == null goto label3;

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassificationContext mClassificationContext>;

        r3 = staticinvoke <android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent generateTranslateEvent(int,android.view.textclassifier.TextClassification,android.view.textclassifier.TextClassificationContext,java.lang.String)>(6, r2, $r1, null);

        if r3 == null goto label1;

        goto label2;

     label1:
        r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateViewEvent>;

     label2:
        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateViewEvent> = r3;

     label3:
        return;
    }

    private void maybeReportTranslateEvents()
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        android.view.textclassifier.TextClassifier $r1, $r2;
        android.view.textclassifier.TextClassifierEvent r3, r4;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateViewEvent>;

        if r3 == null goto label1;

        $r2 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        interfaceinvoke $r2.<android.view.textclassifier.TextClassifier: void onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)>(r3);

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateViewEvent> = null;

     label1:
        r4 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateClickEvent>;

        if r4 == null goto label2;

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        interfaceinvoke $r1.<android.view.textclassifier.TextClassifier: void onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)>(r4);

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifierEvent mTranslateClickEvent> = null;

     label2:
        return;
    }

    public void endTextClassificationSession()
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        boolean $z0;
        android.view.textclassifier.TextClassifier $r1;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        $z0 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean hasActiveClassificationSession()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: void maybeReportTranslateEvents()>();

        $r1 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        interfaceinvoke $r1.<android.view.textclassifier.TextClassifier: void destroy()>();

     label1:
        return;
    }

    public boolean isEditTextLogger()
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        boolean $z0;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        $z0 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean mEditTextLogger>;

        return $z0;
    }

    public void logSelectionAction(int, int, int, java.lang.String, android.view.textclassifier.TextClassification)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, i1, i2, $i3, $i5, $i7, $i8, $i9, $i10;
        int[] r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r11, $r13, r14;
        android.view.textclassifier.TextClassifier $r4, $r6;
        android.view.textclassifier.SelectionEvent $r5, $r7;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;
        android.view.textclassifier.TextClassification r15;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r14 := @parameter3: java.lang.String;

        r15 := @parameter4: android.view.textclassifier.TextClassification;

     label1:
        $z0 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean hasActiveClassificationSession()>();

        if $z0 == 0 goto label7;

        $r2 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 0, $i3, "start");

        $r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i1, i0, $i5, "end");

        r1 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int[] getWordDelta(int,int)>(i0, i1);

     label2:
        if r15 == null goto label5;

     label3:
        $r6 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $i10 = r1[0];

        $i9 = r1[1];

        $r7 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionActionEvent(int,int,int,android.view.textclassifier.TextClassification)>($i10, $i9, i2, r15);

        interfaceinvoke $r6.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r7);

     label4:
        goto label6;

     label5:
        $r4 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $i8 = r1[0];

        $i7 = r1[1];

        $r5 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionActionEvent(int,int,int)>($i8, $i7, i2);

        interfaceinvoke $r4.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r5);

     label6:
        specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: void maybeGenerateTranslateClickEvent(android.view.textclassifier.TextClassification,java.lang.String)>(r15, r14);

        $z1 = staticinvoke <android.view.textclassifier.SelectionEvent: boolean isTerminal(int)>(i2);

        if $z1 == 0 goto label7;

        virtualinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: void endTextClassificationSession()>();

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SelectionMetricsLogger", $r13, $r8);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void logSelectionModified(int, int, android.view.textclassifier.TextClassification, android.view.textclassifier.TextSelection)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        int i0, i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r13, $r15;
        android.view.textclassifier.TextClassifier $r4, $r6, $r8;
        android.view.textclassifier.SelectionEvent $r5, $r7, $r9;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11;
        android.view.textclassifier.TextClassification r16;
        android.view.textclassifier.TextSelection r17;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r16 := @parameter2: android.view.textclassifier.TextClassification;

        r17 := @parameter3: android.view.textclassifier.TextSelection;

     label01:
        $z0 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean hasActiveClassificationSession()>();

        if $z0 == 0 goto label10;

        $r2 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 0, $i2, "start");

        $r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i1, i0, $i4, "end");

        r1 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int[] getWordDelta(int,int)>(i0, i1);

     label02:
        if r17 == null goto label05;

     label03:
        $r8 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $i11 = r1[0];

        $i10 = r1[1];

        $r9 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int,int,android.view.textclassifier.TextSelection)>($i11, $i10, r17);

        interfaceinvoke $r8.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r9);

     label04:
        goto label09;

     label05:
        if r16 == null goto label08;

     label06:
        $r6 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $i9 = r1[0];

        $i8 = r1[1];

        $r7 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int,int,android.view.textclassifier.TextClassification)>($i9, $i8, r16);

        interfaceinvoke $r6.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r7);

     label07:
        goto label09;

     label08:
        $r4 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $i7 = r1[0];

        $i6 = r1[1];

        $r5 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int,int)>($i7, $i6);

        interfaceinvoke $r4.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r5);

     label09:
        specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: void maybeGenerateTranslateViewEvent(android.view.textclassifier.TextClassification)>(r16);

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r13 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SelectionMetricsLogger", $r15, $r10);

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public void logSelectionStarted(android.view.textclassifier.TextClassifier, android.view.textclassifier.TextClassificationContext, java.lang.CharSequence, int, int)
    {
        android.widget.SelectionActionModeHelper$SelectionMetricsLogger r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2;
        java.lang.String $r3, $r4, $r7, $r11, $r13, $r17;
        android.view.textclassifier.TextClassifier $r5, r14;
        android.view.textclassifier.SelectionEvent $r6;
        boolean $z0, $z1;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;
        android.view.textclassifier.TextClassificationContext r15;
        java.text.BreakIterator $r16;

        r0 := @this: android.widget.SelectionActionModeHelper$SelectionMetricsLogger;

        r14 := @parameter0: android.view.textclassifier.TextClassifier;

        r15 := @parameter1: android.view.textclassifier.TextClassificationContext;

        r1 := @parameter2: java.lang.CharSequence;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 0, $i2, "index");

        $r3 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        if $r3 == null goto label2;

        $r7 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

     label2:
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText> = $r4;

     label3:
        $r16 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.text.BreakIterator mTokenIterator>;

        $r17 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: java.lang.String mText>;

        virtualinvoke $r16.<java.text.BreakIterator: void setText(java.lang.String)>($r17);

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: int mStartIndex> = i0;

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession> = r14;

        r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassificationContext mClassificationContext> = r15;

        $z1 = specialinvoke r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: boolean hasActiveClassificationSession()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<android.widget.SelectionActionModeHelper$SelectionMetricsLogger: android.view.textclassifier.TextClassifier mClassificationSession>;

        $r6 = staticinvoke <android.view.textclassifier.SelectionEvent: android.view.textclassifier.SelectionEvent createSelectionStartedEvent(int,int)>(i1, 0);

        interfaceinvoke $r5.<android.view.textclassifier.TextClassifier: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>($r6);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SelectionMetricsLogger", $r13, $r8);

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
