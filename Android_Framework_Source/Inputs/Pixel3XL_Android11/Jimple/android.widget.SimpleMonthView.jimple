class android.widget.SimpleMonthView extends android.view.View
{
    private static final int DAYS_IN_WEEK;
    private static final int DEFAULT_SELECTED_DAY;
    private static final int DEFAULT_WEEK_START;
    private static final int MAX_WEEKS_IN_MONTH;
    private static final java.lang.String MONTH_YEAR_FORMAT;
    private static final int SELECTED_HIGHLIGHT_ALPHA;
    private int mActivatedDay;
    private final android.icu.util.Calendar mCalendar;
    private int mCellWidth;
    private final java.text.NumberFormat mDayFormatter;
    private int mDayHeight;
    private final android.graphics.Paint mDayHighlightPaint;
    private final android.graphics.Paint mDayHighlightSelectorPaint;
    private int mDayOfWeekHeight;
    private final java.lang.String[] mDayOfWeekLabels;
    private final android.text.TextPaint mDayOfWeekPaint;
    private int mDayOfWeekStart;
    private final android.text.TextPaint mDayPaint;
    private final android.graphics.Paint mDaySelectorPaint;
    private int mDaySelectorRadius;
    private android.content.res.ColorStateList mDayTextColor;
    private int mDaysInMonth;
    private final int mDesiredCellWidth;
    private final int mDesiredDayHeight;
    private final int mDesiredDayOfWeekHeight;
    private final int mDesiredDaySelectorRadius;
    private final int mDesiredMonthHeight;
    private int mEnabledDayEnd;
    private int mEnabledDayStart;
    private int mHighlightedDay;
    private boolean mIsTouchHighlighted;
    private final java.util.Locale mLocale;
    private int mMonth;
    private int mMonthHeight;
    private final android.text.TextPaint mMonthPaint;
    private java.lang.String mMonthYearLabel;
    private android.widget.SimpleMonthView$OnDayClickListener mOnDayClickListener;
    private int mPaddedHeight;
    private int mPaddedWidth;
    private int mPreviouslyHighlightedDay;
    private int mToday;
    private final android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper;
    private int mWeekStart;
    private int mYear;

    public void <init>(android.content.Context)
    {
        android.widget.SimpleMonthView r0;
        android.content.Context r1;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.SimpleMonthView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843612);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.SimpleMonthView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.text.TextPaint $r1, $r2, $r3;
        android.graphics.Paint $r4, $r5, $r6;
        java.lang.String[] $r7;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r8;
        android.content.res.Configuration $r9;
        android.icu.util.Calendar $r10;
        java.util.Locale $r11, r17;
        java.text.NumberFormat $r12;
        android.content.Context r13;
        android.util.AttributeSet r14;
        android.content.res.Resources r15;

        r0 := @this: android.widget.SimpleMonthView;

        r13 := @parameter0: android.content.Context;

        r14 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r13, r14, i0, i1);

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint> = $r1;

        $r2 = new android.text.TextPaint;

        specialinvoke $r2.<android.text.TextPaint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint> = $r2;

        $r3 = new android.text.TextPaint;

        specialinvoke $r3.<android.text.TextPaint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightPaint> = $r5;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint> = $r6;

        $r7 = newarray (java.lang.String)[7];

        r0.<android.widget.SimpleMonthView: java.lang.String[] mDayOfWeekLabels> = $r7;

        r0.<android.widget.SimpleMonthView: int mActivatedDay> = -1;

        r0.<android.widget.SimpleMonthView: int mToday> = -1;

        r0.<android.widget.SimpleMonthView: int mWeekStart> = 1;

        r0.<android.widget.SimpleMonthView: int mEnabledDayStart> = 1;

        r0.<android.widget.SimpleMonthView: int mEnabledDayEnd> = 31;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = -1;

        r0.<android.widget.SimpleMonthView: int mPreviouslyHighlightedDay> = -1;

        r0.<android.widget.SimpleMonthView: boolean mIsTouchHighlighted> = 0;

        r15 = virtualinvoke r13.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105125);

        r0.<android.widget.SimpleMonthView: int mDesiredMonthHeight> = $i2;

        $i3 = virtualinvoke r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105120);

        r0.<android.widget.SimpleMonthView: int mDesiredDayOfWeekHeight> = $i3;

        $i4 = virtualinvoke r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105119);

        r0.<android.widget.SimpleMonthView: int mDesiredDayHeight> = $i4;

        $i5 = virtualinvoke r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105124);

        r0.<android.widget.SimpleMonthView: int mDesiredCellWidth> = $i5;

        $i6 = virtualinvoke r15.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105122);

        r0.<android.widget.SimpleMonthView: int mDesiredDaySelectorRadius> = $i6;

        $r8 = new android.widget.SimpleMonthView$MonthViewTouchHelper;

        specialinvoke $r8.<android.widget.SimpleMonthView$MonthViewTouchHelper: void <init>(android.widget.SimpleMonthView,android.view.View)>(r0, r0);

        r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper> = $r8;

        virtualinvoke r0.<android.widget.SimpleMonthView: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r8);

        virtualinvoke r0.<android.widget.SimpleMonthView: void setImportantForAccessibility(int)>(1);

        $r9 = virtualinvoke r15.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r17 = $r9.<android.content.res.Configuration: java.util.Locale locale>;

        r0.<android.widget.SimpleMonthView: java.util.Locale mLocale> = r17;

        $r10 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>(r17);

        r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar> = $r10;

        $r11 = r0.<android.widget.SimpleMonthView: java.util.Locale mLocale>;

        $r12 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>($r11);

        r0.<android.widget.SimpleMonthView: java.text.NumberFormat mDayFormatter> = $r12;

        specialinvoke r0.<android.widget.SimpleMonthView: void updateMonthYearLabel()>();

        specialinvoke r0.<android.widget.SimpleMonthView: void updateDayOfWeekLabels()>();

        specialinvoke r0.<android.widget.SimpleMonthView: void initPaints(android.content.res.Resources)>(r15);

        return;
    }

    static int access$000(android.widget.SimpleMonthView, int, int)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, $i2;

        r0 := @parameter0: android.widget.SimpleMonthView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<android.widget.SimpleMonthView: int getDayAtLocation(int,int)>(i0, i1);

        return $i2;
    }

    static int access$100(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        return $i0;
    }

    static int access$200(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mToday>;

        return $i0;
    }

    static int access$300(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mActivatedDay>;

        return $i0;
    }

    static boolean access$400(android.widget.SimpleMonthView, int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isDayEnabled(int)>(i0);

        return $z0;
    }

    static boolean access$500(android.widget.SimpleMonthView, int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean onDayClicked(int)>(i0);

        return $z0;
    }

    static boolean access$600(android.widget.SimpleMonthView, int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isValidDayOfMonth(int)>(i0);

        return $z0;
    }

    static int access$700(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mYear>;

        return $i0;
    }

    static int access$800(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mMonth>;

        return $i0;
    }

    static java.text.NumberFormat access$900(android.widget.SimpleMonthView)
    {
        android.widget.SimpleMonthView r0;
        java.text.NumberFormat $r1;

        r0 := @parameter0: android.widget.SimpleMonthView;

        $r1 = r0.<android.widget.SimpleMonthView: java.text.NumberFormat mDayFormatter>;

        return $r1;
    }

    private android.content.res.ColorStateList applyTextAppearance(android.graphics.Paint, int)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Paint r1;
        int i0, $i1, $i2, $i3;
        android.content.res.TypedArray r2;
        int[] $r3, $r5;
        android.content.Context $r4;
        float $f0, $f1;
        android.graphics.Typeface $r6;
        java.lang.String r8;
        android.content.res.ColorStateList r9;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Paint;

        i0 := @parameter1: int;

        $r4 = r0.<android.widget.SimpleMonthView: android.content.Context mContext>;

        $r3 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r2 = virtualinvoke $r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, 0, i0);

        r8 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(12);

        if r8 == null goto label1;

        $r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r8, 0);

        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r6);

     label1:
        $f0 = virtualinvoke r1.<android.graphics.Paint: float getTextSize()>();

        $i1 = (int) $f0;

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i1);

        $f1 = (float) $i2;

        virtualinvoke r1.<android.graphics.Paint: void setTextSize(float)>($f1);

        r9 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if r9 == null goto label2;

        $r5 = <android.widget.SimpleMonthView: int[] ENABLED_STATE_SET>;

        $i3 = virtualinvoke r9.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0);

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i3);

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r9;
    }

    private void drawDays(android.graphics.Canvas)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i18, $i20, i21, i23, i24, i25;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        boolean z0, $z2, z3, z4, z5;
        android.content.res.ColorStateList $r3;
        android.graphics.Paint $r4, $r5, r6;
        byte b17, b19;
        int[] r7;
        java.text.NumberFormat $r8;
        long $l22;
        java.lang.String $r9;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        $i4 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        $i3 = r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight>;

        i0 = $i4 + $i3;

        i1 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        i2 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        $f1 = virtualinvoke r2.<android.text.TextPaint: float ascent()>();

        $f2 = virtualinvoke r2.<android.text.TextPaint: float descent()>();

        $f3 = $f1 + $f2;

        f0 = $f3 / 2.0F;

        $i5 = i1 / 2;

        i13 = $i5 + i0;

        i14 = 1;

        i15 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

     label01:
        $i6 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        if i14 > $i6 goto label17;

        $i8 = i2 * i15;

        $i7 = i2 / 2;

        i16 = $i8 + $i7;

        $z2 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        if $z2 == 0 goto label02;

        $i12 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        i16 = $i12 - i16;

        goto label02;

     label02:
        b17 = 0;

        z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isDayEnabled(int)>(i14);

        if z0 == 0 goto label03;

        b17 = 0 | 8;

     label03:
        i18 = r0.<android.widget.SimpleMonthView: int mActivatedDay>;

        if i18 != i14 goto label04;

        z3 = 1;

        goto label05;

     label04:
        z3 = 0;

     label05:
        $i9 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        if $i9 != i14 goto label06;

        z4 = 1;

        goto label07;

     label06:
        z4 = 0;

     label07:
        if z3 == 0 goto label10;

        if z4 == 0 goto label08;

        r6 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint>;

        goto label09;

     label08:
        r6 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint>;

     label09:
        $f9 = (float) i16;

        $f8 = (float) i13;

        $i11 = r0.<android.widget.SimpleMonthView: int mDaySelectorRadius>;

        $f7 = (float) $i11;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f9, $f8, $f7, r6);

        b19 = b17 | 32;

        goto label11;

     label10:
        b19 = b17;

        if z4 == 0 goto label11;

        b19 = b17 | 16;

        if z0 == 0 goto label11;

        $f6 = (float) i16;

        $f5 = (float) i13;

        $i10 = r0.<android.widget.SimpleMonthView: int mDaySelectorRadius>;

        $f4 = (float) $i10;

        $r5 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f6, $f5, $f4, $r5);

        goto label11;

     label11:
        $i20 = r0.<android.widget.SimpleMonthView: int mToday>;

        if $i20 != i14 goto label12;

        z5 = 1;

        goto label13;

     label12:
        z5 = 0;

     label13:
        if z5 == 0 goto label14;

        if z3 != 0 goto label14;

        $r4 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint>;

        i21 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        goto label15;

     label14:
        r7 = staticinvoke <android.util.StateSet: int[] get(int)>(b19);

        $r3 = r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList mDayTextColor>;

        i21 = virtualinvoke $r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r7, 0);

     label15:
        virtualinvoke r2.<android.text.TextPaint: void setColor(int)>(i21);

        $r8 = r0.<android.widget.SimpleMonthView: java.text.NumberFormat mDayFormatter>;

        $l22 = (long) i14;

        $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.String format(long)>($l22);

        $f10 = (float) i16;

        $f11 = (float) i13;

        $f12 = $f11 - f0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r9, $f10, $f12, r2);

        i23 = i15 + 1;

        i24 = i13;

        i25 = i23;

        if i23 != 7 goto label16;

        i24 = i13 + i1;

        i25 = 0;

     label16:
        i14 = i14 + 1;

        i13 = i24;

        i15 = i25;

        goto label01;

     label17:
        return;
    }

    private void drawDaysOfWeek(android.graphics.Canvas)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        i0 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        i7 = r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight>;

        i1 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        $f1 = virtualinvoke r2.<android.text.TextPaint: float ascent()>();

        $f2 = virtualinvoke r2.<android.text.TextPaint: float descent()>();

        $f3 = $f1 + $f2;

        f0 = $f3 / 2.0F;

        i2 = i7 / 2;

        i8 = 0;

     label1:
        if i8 >= 7 goto label3;

        $i4 = i1 * i8;

        $i3 = i1 / 2;

        i9 = $i4 + $i3;

        $z0 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        if $z0 == 0 goto label2;

        $i6 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        i9 = $i6 - i9;

        goto label2;

     label2:
        $r3 = r0.<android.widget.SimpleMonthView: java.lang.String[] mDayOfWeekLabels>;

        $r4 = $r3[i8];

        $f6 = (float) i9;

        $i5 = i2 + i0;

        $f4 = (float) $i5;

        $f5 = $f4 - f0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r4, $f6, $f5, r2);

        i8 = i8 + 1;

        goto label1;

     label3:
        return;
    }

    private void drawMonth(android.graphics.Canvas)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3, $f4, $f5, f6, f7;
        int $i0, $i1;
        android.text.TextPaint $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        $f2 = (float) $i0;

        f0 = $f2 / 2.0F;

        $r2 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        f1 = virtualinvoke $r2.<android.text.TextPaint: float ascent()>();

        $r3 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        f6 = virtualinvoke $r3.<android.text.TextPaint: float descent()>();

        $i1 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        $f4 = (float) $i1;

        $f3 = f1 + f6;

        $f5 = $f4 - $f3;

        f7 = $f5 / 2.0F;

        $r5 = r0.<android.widget.SimpleMonthView: java.lang.String mMonthYearLabel>;

        $r4 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r5, f0, f7, $r4);

        return;
    }

    private void ensureFocusedDay()
    {
        android.widget.SimpleMonthView r0;
        int $i0, i1, i2;

        r0 := @this: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        if $i0 == -1 goto label1;

        return;

     label1:
        i1 = r0.<android.widget.SimpleMonthView: int mPreviouslyHighlightedDay>;

        if i1 == -1 goto label2;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i1;

        return;

     label2:
        i2 = r0.<android.widget.SimpleMonthView: int mActivatedDay>;

        if i2 == -1 goto label3;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i2;

        return;

     label3:
        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = 1;

        return;
    }

    private int findClosestColumn(android.graphics.Rect)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Rect;

        if r1 != null goto label1;

        return 3;

     label1:
        $i0 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        if $i0 != 0 goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i2 = r0.<android.widget.SimpleMonthView: int mPaddingLeft>;

        $i4 = $i1 - $i2;

        $i3 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        $i5 = $i4 / $i3;

        i7 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i5, 0, 6);

        $z0 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        if $z0 == 0 goto label3;

        $i6 = 7 - i7;

        i7 = $i6 - 1;

        goto label3;

     label3:
        return i7;
    }

    private int findClosestRow(android.graphics.Rect)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.Rect r1;
        android.text.TextPaint r2;
        byte b17;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Rect;

        if r1 != null goto label1;

        return 3;

     label1:
        $i2 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        if $i2 != 0 goto label2;

        return 0;

     label2:
        i11 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        r2 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        i0 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        i12 = r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight>;

        i13 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        $f1 = virtualinvoke r2.<android.text.TextPaint: float ascent()>();

        $f2 = virtualinvoke r2.<android.text.TextPaint: float descent()>();

        $f3 = $f1 + $f2;

        f0 = $f3 / 2.0F;

        i1 = i13 / 2;

        $f6 = (float) i11;

        $i3 = i0 + i12;

        $i4 = i1 + $i3;

        $f4 = (float) $i4;

        $f5 = $f4 - f0;

        $f7 = $f6 - $f5;

        $i5 = (int) $f7;

        $f9 = (float) $i5;

        $f8 = (float) i13;

        $f10 = $f9 / $f8;

        i14 = staticinvoke <java.lang.Math: int round(float)>($f10);

        $i6 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        $i7 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        i15 = $i6 + $i7;

        i16 = i15 / 7;

        $i8 = i15 % 7;

        if $i8 != 0 goto label3;

        b17 = 1;

        goto label4;

     label3:
        b17 = 0;

     label4:
        $i9 = i16 - b17;

        $i10 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i14, 0, $i9);

        return $i10;
    }

    private int findDayOffset()
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.widget.SimpleMonthView;

        i0 = r0.<android.widget.SimpleMonthView: int mDayOfWeekStart>;

        i1 = r0.<android.widget.SimpleMonthView: int mWeekStart>;

        i2 = i0 - i1;

        if i0 >= i1 goto label1;

        $i3 = i2 + 7;

        return $i3;

     label1:
        return i2;
    }

    private int getDayAtLocation(int, int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22;
        boolean $z0, $z1;

        r0 := @this: android.widget.SimpleMonthView;

        i18 := @parameter0: int;

        i19 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingLeft()>();

        i20 = i18 - $i1;

        if i20 < 0 goto label6;

        $i2 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        if i20 < $i2 goto label1;

        goto label6;

     label1:
        $i4 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        $i3 = r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight>;

        i0 = $i4 + $i3;

        $i5 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingTop()>();

        i21 = i19 - $i5;

        if i21 < i0 goto label5;

        $i6 = r0.<android.widget.SimpleMonthView: int mPaddedHeight>;

        if i21 < $i6 goto label2;

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        if $z0 == 0 goto label3;

        $i17 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        i20 = $i17 - i20;

        goto label3;

     label3:
        $i8 = i21 - i0;

        $i7 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        $i9 = $i8 / $i7;

        $i13 = $i9 * 7;

        $i11 = i20 * 7;

        $i10 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        $i12 = $i11 / $i10;

        $i14 = $i13 + $i12;

        $i15 = $i14 + 1;

        $i16 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        i22 = $i15 - $i16;

        $z1 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isValidDayOfMonth(int)>(i22);

        if $z1 != 0 goto label4;

        return -1;

     label4:
        return i22;

     label5:
        return -1;

     label6:
        return -1;
    }

    private static int getDaysInMonth(int, int)
    {
        int i0, $i1, $i2, $i3, i4;
        java.lang.IllegalArgumentException $r0;
        byte b5;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        tableswitch(i4)
        {
            case 0: goto label7;
            case 1: goto label3;
            case 2: goto label7;
            case 3: goto label2;
            case 4: goto label7;
            case 5: goto label2;
            case 6: goto label7;
            case 7: goto label7;
            case 8: goto label2;
            case 9: goto label7;
            case 10: goto label2;
            case 11: goto label7;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Month");

        throw $r0;

     label2:
        return 30;

     label3:
        $i1 = i0 % 4;

        if $i1 != 0 goto label5;

        $i2 = i0 % 100;

        if $i2 != 0 goto label4;

        $i3 = i0 % 400;

        if $i3 != 0 goto label5;

     label4:
        b5 = 29;

        goto label6;

     label5:
        b5 = 28;

     label6:
        return b5;

     label7:
        return 31;
    }

    private void initPaints(android.content.res.Resources)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.Resources r1;
        java.lang.String r2, r3, r4;
        int i0, i1, i2;
        android.text.TextPaint $r5, $r6, $r7, $r11, $r13, $r14, $r15, $r16, $r20, $r22, $r32, $r33, $r34, $r38, $r40;
        float $f0, $f1, $f2;
        android.graphics.Typeface $r8, $r17, $r35;
        android.graphics.Paint$Align $r10, $r19, $r37;
        android.graphics.Paint$Style $r12, $r21, $r24, $r27, $r30, $r39;
        android.graphics.Paint $r23, $r25, $r26, $r28, $r29, $r31;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.Resources;

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17040018);

        r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17040008);

        r4 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17040009);

        i0 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105126);

        i1 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105121);

        i2 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105123);

        $r5 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        virtualinvoke $r5.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r6 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        $f0 = (float) i0;

        virtualinvoke $r6.<android.text.TextPaint: void setTextSize(float)>($f0);

        $r7 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        $r8 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r2, 0);

        virtualinvoke $r7.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r8);

        $r11 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        $r10 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r11.<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>($r10);

        $r13 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r13.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r12);

        $r14 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        virtualinvoke $r14.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r15 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        $f1 = (float) i1;

        virtualinvoke $r15.<android.text.TextPaint: void setTextSize(float)>($f1);

        $r16 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        $r17 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r3, 0);

        virtualinvoke $r16.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r17);

        $r20 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        $r19 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r20.<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>($r19);

        $r22 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        $r21 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r22.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r21);

        $r23 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint>;

        virtualinvoke $r23.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r25 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint>;

        $r24 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r25.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r24);

        $r26 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightPaint>;

        virtualinvoke $r26.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r28 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightPaint>;

        $r27 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r28.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r27);

        $r29 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint>;

        virtualinvoke $r29.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r31 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint>;

        $r30 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r31.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r30);

        $r32 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        virtualinvoke $r32.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r33 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        $f2 = (float) i2;

        virtualinvoke $r33.<android.text.TextPaint: void setTextSize(float)>($f2);

        $r34 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        $r35 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r4, 0);

        virtualinvoke $r34.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r35);

        $r38 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        $r37 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r38.<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>($r37);

        $r40 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        $r39 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r40.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r39);

        return;
    }

    private boolean isDayEnabled(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.SimpleMonthView: int mEnabledDayStart>;

        if i0 < $i1 goto label1;

        $i2 = r0.<android.widget.SimpleMonthView: int mEnabledDayEnd>;

        if i0 > $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isFirstDayOfWeek(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        i1 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        z0 = 1;

        $i2 = i1 + i0;

        $i3 = $i2 - 1;

        $i4 = $i3 % 7;

        if $i4 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isLastDayOfWeek(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        $i2 = $i1 + i0;

        $i3 = $i2 % 7;

        if $i3 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isValidDayOfMonth(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 < 1 goto label1;

        $i1 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        if i0 > $i1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isValidDayOfWeek(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 < 1 goto label1;

        if i0 > 7 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isValidMonth(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 11 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean moveOneDay(boolean)
    {
        android.widget.SimpleMonthView r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        boolean $z1, $z2, z3, z4;

        r0 := @this: android.widget.SimpleMonthView;

        z3 := @parameter0: boolean;

        specialinvoke r0.<android.widget.SimpleMonthView: void ensureFocusedDay()>();

        if z3 == 0 goto label1;

        z4 = 0;

        $i2 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        $z2 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isLastDayOfWeek(int)>($i2);

        if $z2 != 0 goto label2;

        i5 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        z4 = 0;

        $i3 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        if i5 >= $i3 goto label2;

        $i4 = i5 + 1;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = $i4;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

        $i0 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        $z1 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isFirstDayOfWeek(int)>($i0);

        if $z1 != 0 goto label2;

        i6 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        z4 = 0;

        if i6 <= 1 goto label2;

        $i1 = i6 - 1;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = $i1;

        z4 = 1;

     label2:
        return z4;
    }

    private boolean onDayClicked(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1, $i2;
        android.icu.util.Calendar r1;
        boolean $z0, $z1;
        android.widget.SimpleMonthView$OnDayClickListener $r2, $r4;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r3;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isValidDayOfMonth(int)>(i0);

        if $z0 == 0 goto label3;

        $z1 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isDayEnabled(int)>(i0);

        if $z1 != 0 goto label1;

        goto label3;

     label1:
        $r2 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$OnDayClickListener mOnDayClickListener>;

        if $r2 == null goto label2;

        r1 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        $i2 = r0.<android.widget.SimpleMonthView: int mYear>;

        $i1 = r0.<android.widget.SimpleMonthView: int mMonth>;

        virtualinvoke r1.<android.icu.util.Calendar: void set(int,int,int)>($i2, $i1, i0);

        $r4 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$OnDayClickListener mOnDayClickListener>;

        interfaceinvoke $r4.<android.widget.SimpleMonthView$OnDayClickListener: void onDayClick(android.widget.SimpleMonthView,android.icu.util.Calendar)>(r0, r1);

     label2:
        $r3 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r3.<android.widget.SimpleMonthView$MonthViewTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 1);

        return 1;

     label3:
        return 0;
    }

    private boolean sameDay(int, android.icu.util.Calendar)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.icu.util.Calendar r1;
        boolean z0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.icu.util.Calendar;

        i1 = r0.<android.widget.SimpleMonthView: int mYear>;

        z0 = 1;

        $i2 = virtualinvoke r1.<android.icu.util.Calendar: int get(int)>(1);

        if i1 != $i2 goto label1;

        $i3 = r0.<android.widget.SimpleMonthView: int mMonth>;

        $i4 = virtualinvoke r1.<android.icu.util.Calendar: int get(int)>(2);

        if $i3 != $i4 goto label1;

        $i5 = virtualinvoke r1.<android.icu.util.Calendar: int get(int)>(5);

        if i0 != $i5 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void updateDayOfWeekLabels()
    {
        android.widget.SimpleMonthView r0;
        java.lang.String[] r1, $r5;
        java.util.Locale $r2;
        libcore.icu.LocaleData $r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r4;

        r0 := @this: android.widget.SimpleMonthView;

        $r2 = r0.<android.widget.SimpleMonthView: java.util.Locale mLocale>;

        $r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r2);

        r1 = $r3.<libcore.icu.LocaleData: java.lang.String[] tinyWeekdayNames>;

        i5 = 0;

     label1:
        if i5 >= 7 goto label2;

        $r5 = r0.<android.widget.SimpleMonthView: java.lang.String[] mDayOfWeekLabels>;

        $i0 = r0.<android.widget.SimpleMonthView: int mWeekStart>;

        $i1 = $i0 + i5;

        $i2 = $i1 - 1;

        $i3 = $i2 % 7;

        $i4 = $i3 + 1;

        $r4 = r1[$i4];

        $r5[i5] = $r4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void updateMonthYearLabel()
    {
        android.widget.SimpleMonthView r0;
        android.icu.text.SimpleDateFormat $r2;
        java.util.Locale $r3, $r5;
        java.lang.String $r4, $r9;
        android.icu.text.DisplayContext $r6;
        android.icu.util.Calendar $r7;
        java.util.Date $r8;

        r0 := @this: android.widget.SimpleMonthView;

        $r2 = new android.icu.text.SimpleDateFormat;

        $r3 = r0.<android.widget.SimpleMonthView: java.util.Locale mLocale>;

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r3, "MMMMy");

        $r5 = r0.<android.widget.SimpleMonthView: java.util.Locale mLocale>;

        specialinvoke $r2.<android.icu.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r4, $r5);

        $r6 = <android.icu.text.DisplayContext: android.icu.text.DisplayContext CAPITALIZATION_FOR_STANDALONE>;

        virtualinvoke $r2.<android.icu.text.SimpleDateFormat: void setContext(android.icu.text.DisplayContext)>($r6);

        $r7 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $r8 = virtualinvoke $r7.<android.icu.util.Calendar: java.util.Date getTime()>();

        $r9 = virtualinvoke $r2.<android.icu.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r8);

        r0.<android.widget.SimpleMonthView: java.lang.String mMonthYearLabel> = $r9;

        return;
    }

    public boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.widget.SimpleMonthView r0;
        android.view.MotionEvent r1;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        $z0 = virtualinvoke $r2.<android.widget.SimpleMonthView$MonthViewTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean getBoundsForDay(int, android.graphics.Rect)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Rect r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        boolean $z0, $z1;

        r0 := @this: android.widget.SimpleMonthView;

        i18 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = specialinvoke r0.<android.widget.SimpleMonthView: boolean isValidDayOfMonth(int)>(i18);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i3 = i18 - 1;

        $i4 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        i19 = $i3 + $i4;

        i20 = i19 % 7;

        i0 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        $z1 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        if $z1 == 0 goto label2;

        $i13 = virtualinvoke r0.<android.widget.SimpleMonthView: int getWidth()>();

        $i14 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingRight()>();

        $i17 = $i13 - $i14;

        $i15 = i20 + 1;

        $i16 = $i15 * i0;

        i21 = $i17 - $i16;

        goto label3;

     label2:
        $i5 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingLeft()>();

        $i6 = i20 * i0;

        i21 = $i5 + $i6;

     label3:
        i22 = i19 / 7;

        i23 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        i1 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        i2 = r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight>;

        $i7 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingTop()>();

        $i8 = i1 + i2;

        $i10 = $i7 + $i8;

        $i9 = i22 * i23;

        i24 = $i10 + $i9;

        $i12 = i21 + i0;

        $i11 = i24 + i23;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(i21, i24, $i12, $i11);

        return 1;
    }

    public int getCellWidth()
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @this: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mCellWidth>;

        return $i0;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Rect r1;
        int i0;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Rect;

        i0 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        if i0 <= 0 goto label1;

        virtualinvoke r0.<android.widget.SimpleMonthView: boolean getBoundsForDay(int,android.graphics.Rect)>(i0, r1);

        goto label2;

     label1:
        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public int getMonthHeight()
    {
        android.widget.SimpleMonthView r0;
        int $i0;

        r0 := @this: android.widget.SimpleMonthView;

        $i0 = r0.<android.widget.SimpleMonthView: int mMonthHeight>;

        return $i0;
    }

    public java.lang.String getMonthYearLabel()
    {
        android.widget.SimpleMonthView r0;
        java.lang.String $r1;

        r0 := @this: android.widget.SimpleMonthView;

        $r1 = r0.<android.widget.SimpleMonthView: java.lang.String mMonthYearLabel>;

        return $r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.SimpleMonthView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingTop()>();

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        specialinvoke r0.<android.widget.SimpleMonthView: void drawMonth(android.graphics.Canvas)>(r1);

        specialinvoke r0.<android.widget.SimpleMonthView: void drawDaysOfWeek(android.graphics.Canvas)>(r1);

        specialinvoke r0.<android.widget.SimpleMonthView: void drawDays(android.graphics.Canvas)>(r1);

        $i2 = neg i0;

        $f3 = (float) $i2;

        $i3 = neg i1;

        $f2 = (float) $i3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, $f2);

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.SimpleMonthView r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22;
        android.graphics.Rect r1;

        r0 := @this: android.widget.SimpleMonthView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label10;

        i1 = specialinvoke r0.<android.widget.SimpleMonthView: int findDayOffset()>();

        i16 = 1;

        if i0 == 17 goto label08;

        if i0 == 33 goto label06;

        if i0 == 66 goto label03;

        if i0 == 130 goto label01;

        goto label09;

     label01:
        $i14 = specialinvoke r0.<android.widget.SimpleMonthView: int findClosestColumn(android.graphics.Rect)>(r1);

        $i15 = $i14 - i1;

        i17 = $i15 + 1;

        if i17 >= 1 goto label02;

        i17 = i17 + 7;

        goto label02;

     label02:
        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i17;

        goto label09;

     label03:
        i18 = specialinvoke r0.<android.widget.SimpleMonthView: int findClosestRow(android.graphics.Rect)>(r1);

        if i18 != 0 goto label04;

        goto label05;

     label04:
        $i12 = i18 * 7;

        $i13 = $i12 - i1;

        i16 = 1 + $i13;

     label05:
        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i16;

        goto label09;

     label06:
        i19 = specialinvoke r0.<android.widget.SimpleMonthView: int findClosestColumn(android.graphics.Rect)>(r1);

        i20 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        $i10 = i19 - i1;

        $i7 = i1 + i20;

        $i8 = $i7 / 7;

        $i9 = $i8 * 7;

        $i11 = $i10 + $i9;

        i21 = $i11 + 1;

        if i21 <= i20 goto label07;

        i21 = i21 + -7;

        goto label07;

     label07:
        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i21;

        goto label09;

     label08:
        i22 = specialinvoke r0.<android.widget.SimpleMonthView: int findClosestRow(android.graphics.Rect)>(r1);

        $i5 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        $i2 = i22 + 1;

        $i3 = $i2 * 7;

        $i4 = $i3 - i1;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = $i6;

     label09:
        specialinvoke r0.<android.widget.SimpleMonthView: void ensureFocusedDay()>();

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

     label10:
        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;
    }

    protected void onFocusLost()
    {
        android.widget.SimpleMonthView r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.widget.SimpleMonthView;

        $z0 = r0.<android.widget.SimpleMonthView: boolean mIsTouchHighlighted>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        r0.<android.widget.SimpleMonthView: int mPreviouslyHighlightedDay> = $i0;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = -1;

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

     label1:
        specialinvoke r0.<android.view.View: void onFocusLost()>();

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        android.view.KeyEvent r1;
        android.view.ViewParent r2, $r4;
        android.view.View r3, r5;
        boolean $z1, $z2, $z3, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        i5 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if i5 == 61 goto label07;

        if i5 == 66 goto label06;

        if i5 == 160 goto label06;

        tableswitch(i5)
        {
            case 19: goto label05;
            case 20: goto label04;
            case 21: goto label03;
            case 22: goto label02;
            case 23: goto label06;
            default: goto label01;
        };

     label01:
        z13 = 0;

        goto label12;

     label02:
        z13 = 0;

        $z6 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z6 == 0 goto label12;

        $z7 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        $z8 = $z7 ^ 1;

        z13 = specialinvoke r0.<android.widget.SimpleMonthView: boolean moveOneDay(boolean)>($z8);

        goto label12;

     label03:
        z13 = 0;

        $z9 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z9 == 0 goto label12;

        $z10 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isLayoutRtl()>();

        z13 = specialinvoke r0.<android.widget.SimpleMonthView: boolean moveOneDay(boolean)>($z10);

        goto label12;

     label04:
        z13 = 0;

        $z11 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z11 == 0 goto label12;

        specialinvoke r0.<android.widget.SimpleMonthView: void ensureFocusedDay()>();

        i6 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        z13 = 0;

        $i1 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        $i2 = $i1 - 7;

        if i6 > $i2 goto label12;

        $i3 = i6 + 7;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = $i3;

        z13 = 1;

        goto label12;

     label05:
        z13 = 0;

        $z12 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z12 == 0 goto label12;

        specialinvoke r0.<android.widget.SimpleMonthView: void ensureFocusedDay()>();

        i7 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        z13 = 0;

        if i7 <= 7 goto label12;

        $i4 = i7 - 7;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = $i4;

        z13 = 1;

        goto label12;

     label06:
        i8 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        z13 = 0;

        if i8 == -1 goto label12;

        specialinvoke r0.<android.widget.SimpleMonthView: boolean onDayClicked(int)>(i8);

        return 1;

     label07:
        i9 = 0;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z1 == 0 goto label08;

        i9 = 2;

        goto label09;

     label08:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z2 == 0 goto label09;

        i9 = 1;

     label09:
        z13 = 0;

        if i9 == 0 goto label12;

        r2 = virtualinvoke r0.<android.widget.SimpleMonthView: android.view.ViewParent getParent()>();

        r5 = r0;

     label10:
        r3 = virtualinvoke r5.<android.view.View: android.view.View focusSearch(int)>(i9);

        if r3 == null goto label11;

        if r3 == r0 goto label11;

        r5 = r3;

        $r4 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == r2 goto label10;

     label11:
        z13 = 0;

        if r3 == null goto label12;

        virtualinvoke r3.<android.view.View: boolean requestFocus()>();

        return 1;

     label12:
        if z13 == 0 goto label13;

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return 1;

     label13:
        $z3 = specialinvoke r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.SimpleMonthView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r1;

        r0 := @this: android.widget.SimpleMonthView;

        z0 := @parameter0: boolean;

        i25 := @parameter1: int;

        i26 := @parameter2: int;

        i27 := @parameter3: int;

        i0 := @parameter4: int;

        if z0 != 0 goto label1;

        return;

     label1:
        i1 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingLeft()>();

        i2 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingTop()>();

        i3 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingRight()>();

        i4 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingBottom()>();

        $i5 = i27 - i25;

        $i6 = $i5 - i3;

        i28 = $i6 - i1;

        $i7 = i0 - i26;

        $i8 = $i7 - i4;

        i29 = $i8 - i2;

        $i9 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        if i28 == $i9 goto label3;

        $i10 = r0.<android.widget.SimpleMonthView: int mPaddedHeight>;

        if i29 != $i10 goto label2;

        goto label3;

     label2:
        r0.<android.widget.SimpleMonthView: int mPaddedWidth> = i28;

        r0.<android.widget.SimpleMonthView: int mPaddedHeight> = i29;

        i30 = virtualinvoke r0.<android.widget.SimpleMonthView: int getMeasuredHeight()>();

        $f2 = (float) i29;

        $i11 = i30 - i2;

        $i12 = $i11 - i4;

        $f1 = (float) $i12;

        f0 = $f2 / $f1;

        $i13 = r0.<android.widget.SimpleMonthView: int mDesiredMonthHeight>;

        $f3 = (float) $i13;

        $f4 = $f3 * f0;

        i31 = (int) $f4;

        $i14 = r0.<android.widget.SimpleMonthView: int mPaddedWidth>;

        i32 = $i14 / 7;

        r0.<android.widget.SimpleMonthView: int mMonthHeight> = i31;

        $i15 = r0.<android.widget.SimpleMonthView: int mDesiredDayOfWeekHeight>;

        $f5 = (float) $i15;

        $f6 = $f5 * f0;

        $i16 = (int) $f6;

        r0.<android.widget.SimpleMonthView: int mDayOfWeekHeight> = $i16;

        $i17 = r0.<android.widget.SimpleMonthView: int mDesiredDayHeight>;

        $f7 = (float) $i17;

        $f8 = $f7 * f0;

        $i18 = (int) $f8;

        r0.<android.widget.SimpleMonthView: int mDayHeight> = $i18;

        r0.<android.widget.SimpleMonthView: int mCellWidth> = i32;

        i33 = i32 / 2;

        i34 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i3);

        $i19 = r0.<android.widget.SimpleMonthView: int mDayHeight>;

        i35 = $i19 / 2;

        $i22 = r0.<android.widget.SimpleMonthView: int mDesiredDaySelectorRadius>;

        $i21 = i33 + i34;

        $i20 = i35 + i4;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i20);

        $i24 = staticinvoke <java.lang.Math: int min(int,int)>($i22, $i23);

        r0.<android.widget.SimpleMonthView: int mDaySelectorRadius> = $i24;

        $r1 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r1.<android.widget.SimpleMonthView$MonthViewTouchHelper: void invalidateRoot()>();

        return;

     label3:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.widget.SimpleMonthView: int mDesiredDayHeight>;

        i3 = r0.<android.widget.SimpleMonthView: int mDesiredDayOfWeekHeight>;

        i4 = r0.<android.widget.SimpleMonthView: int mDesiredMonthHeight>;

        i5 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingTop()>();

        i6 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingBottom()>();

        $i7 = r0.<android.widget.SimpleMonthView: int mDesiredCellWidth>;

        $i8 = $i7 * 7;

        $i9 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingStart()>();

        $i10 = $i8 + $i9;

        $i11 = virtualinvoke r0.<android.widget.SimpleMonthView: int getPaddingEnd()>();

        $i12 = $i10 + $i11;

        $i13 = staticinvoke <android.widget.SimpleMonthView: int resolveSize(int,int)>($i12, i0);

        $i14 = i2 * 6;

        $i15 = $i14 + i3;

        $i16 = $i15 + i4;

        $i17 = $i16 + i5;

        $i18 = $i17 + i6;

        $i19 = staticinvoke <android.widget.SimpleMonthView: int resolveSize(int,int)>($i18, i1);

        virtualinvoke r0.<android.widget.SimpleMonthView: void setMeasuredDimension(int,int)>($i13, $i19);

        return;
    }

    public android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent, int)
    {
        android.widget.SimpleMonthView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        android.view.PointerIcon $r2, $r4;
        android.content.Context $r3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.widget.SimpleMonthView: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = $f0 + 0.5F;

        $i1 = (int) $f1;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f3 = $f2 + 0.5F;

        $i2 = (int) $f3;

        $i3 = specialinvoke r0.<android.widget.SimpleMonthView: int getDayAtLocation(int,int)>($i1, $i2);

        if $i3 < 0 goto label2;

        $r3 = virtualinvoke r0.<android.widget.SimpleMonthView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>($r3, 1002);

        return $r4;

     label2:
        $r2 = specialinvoke r0.<android.view.View: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>(r1, i0);

        return $r2;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.SimpleMonthView r0;
        int i0;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void requestLayout()>();

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.SimpleMonthView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, i4, i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = $f0 + 0.5F;

        i4 = (int) $f1;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f3 = $f2 + 0.5F;

        i0 = (int) $f3;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i1 == 0 goto label3;

        if i1 == 1 goto label1;

        if i1 == 2 goto label3;

        if i1 == 3 goto label2;

        goto label5;

     label1:
        $i3 = specialinvoke r0.<android.widget.SimpleMonthView: int getDayAtLocation(int,int)>(i4, i0);

        specialinvoke r0.<android.widget.SimpleMonthView: boolean onDayClicked(int)>($i3);

     label2:
        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = -1;

        r0.<android.widget.SimpleMonthView: boolean mIsTouchHighlighted> = 0;

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        goto label5;

     label3:
        i5 = specialinvoke r0.<android.widget.SimpleMonthView: int getDayAtLocation(int,int)>(i4, i0);

        r0.<android.widget.SimpleMonthView: boolean mIsTouchHighlighted> = 1;

        $i2 = r0.<android.widget.SimpleMonthView: int mHighlightedDay>;

        if $i2 == i5 goto label4;

        r0.<android.widget.SimpleMonthView: int mHighlightedDay> = i5;

        r0.<android.widget.SimpleMonthView: int mPreviouslyHighlightedDay> = i5;

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

     label4:
        if i1 != 0 goto label5;

        if i5 >= 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    void setDayHighlightColor(android.content.res.ColorStateList)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = staticinvoke <android.util.StateSet: int[] get(int)>(24);

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public void setDayOfWeekTextAppearance(int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        specialinvoke r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList applyTextAppearance(android.graphics.Paint,int)>($r1, i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    void setDayOfWeekTextColor(android.content.res.ColorStateList)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] $r2;
        android.text.TextPaint $r3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = <android.widget.SimpleMonthView: int[] ENABLED_STATE_SET>;

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayOfWeekPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void setColor(int)>(i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    void setDaySelectorColor(android.content.res.ColorStateList)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] $r2;
        android.graphics.Paint $r3, $r4, $r5;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = staticinvoke <android.util.StateSet: int[] get(int)>(40);

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDaySelectorPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        $r4 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        $r5 = r0.<android.widget.SimpleMonthView: android.graphics.Paint mDayHighlightSelectorPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(176);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public void setDayTextAppearance(int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        android.content.res.ColorStateList r1;
        android.text.TextPaint $r2;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $r2 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mDayPaint>;

        r1 = specialinvoke r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList applyTextAppearance(android.graphics.Paint,int)>($r2, i0);

        if r1 == null goto label1;

        r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList mDayTextColor> = r1;

     label1:
        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    void setDayTextColor(android.content.res.ColorStateList)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList mDayTextColor> = r1;

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.SimpleMonthView r0;
        int i0, $i1;
        boolean $z0;
        android.icu.util.Calendar $r1;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r2;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.widget.SimpleMonthView: boolean isValidDayOfWeek(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<android.widget.SimpleMonthView: int mWeekStart> = i0;

        goto label2;

     label1:
        $r1 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $i1 = virtualinvoke $r1.<android.icu.util.Calendar: int getFirstDayOfWeek()>();

        r0.<android.widget.SimpleMonthView: int mWeekStart> = $i1;

     label2:
        specialinvoke r0.<android.widget.SimpleMonthView: void updateDayOfWeekLabels()>();

        $r2 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r2.<android.widget.SimpleMonthView$MonthViewTouchHelper: void invalidateRoot()>();

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    void setMonthParams(int, int, int, int, int, int)
    {
        android.widget.SimpleMonthView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18;
        android.icu.util.Calendar r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r7;

        r0 := @this: android.widget.SimpleMonthView;

        i13 := @parameter0: int;

        i14 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r0.<android.widget.SimpleMonthView: int mActivatedDay> = i13;

        $z0 = staticinvoke <android.widget.SimpleMonthView: boolean isValidMonth(int)>(i14);

        if $z0 == 0 goto label1;

        r0.<android.widget.SimpleMonthView: int mMonth> = i14;

     label1:
        r0.<android.widget.SimpleMonthView: int mYear> = i0;

        $r2 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $i4 = r0.<android.widget.SimpleMonthView: int mMonth>;

        virtualinvoke $r2.<android.icu.util.Calendar: void set(int,int)>(2, $i4);

        $r3 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $i5 = r0.<android.widget.SimpleMonthView: int mYear>;

        virtualinvoke $r3.<android.icu.util.Calendar: void set(int,int)>(1, $i5);

        $r4 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        virtualinvoke $r4.<android.icu.util.Calendar: void set(int,int)>(5, 1);

        $r5 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $i6 = virtualinvoke $r5.<android.icu.util.Calendar: int get(int)>(7);

        r0.<android.widget.SimpleMonthView: int mDayOfWeekStart> = $i6;

        $z1 = staticinvoke <android.widget.SimpleMonthView: boolean isValidDayOfWeek(int)>(i1);

        if $z1 == 0 goto label2;

        r0.<android.widget.SimpleMonthView: int mWeekStart> = i1;

        goto label3;

     label2:
        $r6 = r0.<android.widget.SimpleMonthView: android.icu.util.Calendar mCalendar>;

        $i7 = virtualinvoke $r6.<android.icu.util.Calendar: int getFirstDayOfWeek()>();

        r0.<android.widget.SimpleMonthView: int mWeekStart> = $i7;

     label3:
        r1 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance()>();

        r0.<android.widget.SimpleMonthView: int mToday> = -1;

        $i9 = r0.<android.widget.SimpleMonthView: int mMonth>;

        $i8 = r0.<android.widget.SimpleMonthView: int mYear>;

        $i10 = staticinvoke <android.widget.SimpleMonthView: int getDaysInMonth(int,int)>($i9, $i8);

        r0.<android.widget.SimpleMonthView: int mDaysInMonth> = $i10;

        i15 = 0;

     label4:
        i16 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        if i15 >= i16 goto label6;

        i17 = i15 + 1;

        $z2 = specialinvoke r0.<android.widget.SimpleMonthView: boolean sameDay(int,android.icu.util.Calendar)>(i17, r1);

        if $z2 == 0 goto label5;

        r0.<android.widget.SimpleMonthView: int mToday> = i17;

     label5:
        i15 = i15 + 1;

        goto label4;

     label6:
        i18 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i2, 1, i16);

        r0.<android.widget.SimpleMonthView: int mEnabledDayStart> = i18;

        $i11 = r0.<android.widget.SimpleMonthView: int mDaysInMonth>;

        $i12 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i3, i18, $i11);

        r0.<android.widget.SimpleMonthView: int mEnabledDayEnd> = $i12;

        specialinvoke r0.<android.widget.SimpleMonthView: void updateMonthYearLabel()>();

        specialinvoke r0.<android.widget.SimpleMonthView: void updateDayOfWeekLabels()>();

        $r7 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r7.<android.widget.SimpleMonthView$MonthViewTouchHelper: void invalidateRoot()>();

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public void setMonthTextAppearance(int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        specialinvoke r0.<android.widget.SimpleMonthView: android.content.res.ColorStateList applyTextAppearance(android.graphics.Paint,int)>($r1, i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    void setMonthTextColor(android.content.res.ColorStateList)
    {
        android.widget.SimpleMonthView r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] $r2;
        android.text.TextPaint $r3;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = <android.widget.SimpleMonthView: int[] ENABLED_STATE_SET>;

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = r0.<android.widget.SimpleMonthView: android.text.TextPaint mMonthPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void setColor(int)>(i0);

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public void setOnDayClickListener(android.widget.SimpleMonthView$OnDayClickListener)
    {
        android.widget.SimpleMonthView r0;
        android.widget.SimpleMonthView$OnDayClickListener r1;

        r0 := @this: android.widget.SimpleMonthView;

        r1 := @parameter0: android.widget.SimpleMonthView$OnDayClickListener;

        r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$OnDayClickListener mOnDayClickListener> = r1;

        return;
    }

    public void setSelectedDay(int)
    {
        android.widget.SimpleMonthView r0;
        int i0;
        android.widget.SimpleMonthView$MonthViewTouchHelper $r1;

        r0 := @this: android.widget.SimpleMonthView;

        i0 := @parameter0: int;

        r0.<android.widget.SimpleMonthView: int mActivatedDay> = i0;

        $r1 = r0.<android.widget.SimpleMonthView: android.widget.SimpleMonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r1.<android.widget.SimpleMonthView$MonthViewTouchHelper: void invalidateRoot()>();

        virtualinvoke r0.<android.widget.SimpleMonthView: void invalidate()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.SimpleMonthView: int SELECTED_HIGHLIGHT_ALPHA> = 176;

        <android.widget.SimpleMonthView: java.lang.String MONTH_YEAR_FORMAT> = "MMMMy";

        <android.widget.SimpleMonthView: int MAX_WEEKS_IN_MONTH> = 6;

        <android.widget.SimpleMonthView: int DEFAULT_WEEK_START> = 1;

        <android.widget.SimpleMonthView: int DEFAULT_SELECTED_DAY> = -1;

        <android.widget.SimpleMonthView: int DAYS_IN_WEEK> = 7;

        return;
    }
}
