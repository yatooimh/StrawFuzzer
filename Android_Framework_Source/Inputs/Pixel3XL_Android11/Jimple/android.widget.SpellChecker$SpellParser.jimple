class android.widget.SpellChecker$SpellParser extends java.lang.Object
{
    private java.lang.Object mRange;
    final android.widget.SpellChecker this$0;

    private void <init>(android.widget.SpellChecker)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange> = $r2;

        return;
    }

    void <init>(android.widget.SpellChecker, android.widget.SpellChecker$1)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        android.widget.SpellChecker$1 r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r2 := @parameter1: android.widget.SpellChecker$1;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void <init>(android.widget.SpellChecker)>(r1);

        return;
    }

    private void removeRangeSpan(android.text.Editable)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r2);

        return;
    }

    private void removeSpansAt(android.text.Editable, int, java.lang.Object[])
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, $i2, $i3, i4;
        java.lang.Object[] r2;
        java.lang.Object r3;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i1 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i1 goto label5;

        r3 = r2[i4];

        $i2 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r3);

        if $i2 <= i0 goto label2;

        goto label4;

     label2:
        $i3 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r3);

        if $i3 >= i0 goto label3;

        goto label4;

     label3:
        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r3);

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    private void setRangeSpan(android.text.Editable, int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r2, i0, i1, 33);

        return;
    }

    public boolean isFinished()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        java.lang.Object $r4;
        android.text.Editable $r5;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Editable) $r3;

        $r4 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i0 = interfaceinvoke $r5.<android.text.Editable: int getSpanStart(java.lang.Object)>($r4);

        if $i0 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void parse()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i30, i31, i32, i33, i34, i35, i36;
        android.widget.SpellChecker $r2, $r5, $r8, $r10, $r12, $r16, $r17, $r19, $r21, $r23, $r26, $r28, $r29, $r36, $r38, $r40, $r42, $r44, $r52, $r54;
        android.widget.TextView $r3;
        java.lang.CharSequence $r4;
        boolean $z1, $z2, $z3, z5, z6, z7, z8, z9, z11, z12;
        java.lang.Object $r6, $r7, $r46;
        android.text.method.WordIterator $r9, $r11, $r13, $r18, $r20, $r22, $r27, $r41, $r43, $r45, $r53;
        java.lang.Object[] $r14, $r15;
        android.text.style.SpellCheckSpan $r24, $r25, r49;
        java.lang.StringBuilder $r30;
        java.lang.String $r35, r50;
        android.text.style.SpellCheckSpan[] $r37, r47;
        int[] $r39;
        android.text.style.SuggestionSpan[] r48;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r3 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r2);

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        r1 = (android.text.Editable) $r4;

        $r5 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $z1 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r5);

        if $z1 == 0 goto label01;

        $r46 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i16 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r46);

        $i17 = $i16 - 50;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i17);

        goto label02;

     label01:
        $r6 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i18 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r6);

     label02:
        $r7 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i0 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r7);

        $i3 = i18 + 350;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        $r8 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r9 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r8);

        virtualinvoke $r9.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i18, i19);

        $r10 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r11 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r10);

        i20 = virtualinvoke $r11.<android.text.method.WordIterator: int preceding(int)>(i18);

        if i20 != -1 goto label03;

        $r42 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r43 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r42);

        i21 = virtualinvoke $r43.<android.text.method.WordIterator: int following(int)>(i18);

        i22 = i21;

        if i21 == -1 goto label04;

        $r44 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r45 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r44);

        i20 = virtualinvoke $r45.<android.text.method.WordIterator: int getBeginning(int)>(i21);

        i22 = i21;

        goto label04;

     label03:
        $r12 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r13 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r12);

        i22 = virtualinvoke $r13.<android.text.method.WordIterator: int getEnd(int)>(i20);

     label04:
        if i22 != -1 goto label05;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label05:
        $i5 = i18 - 1;

        $i4 = i0 + 1;

        $r14 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i5, $i4, class "Landroid/text/style/SpellCheckSpan;");

        r47 = (android.text.style.SpellCheckSpan[]) $r14;

        $i7 = i18 - 1;

        $i6 = i0 + 1;

        $r15 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i7, $i6, class "Landroid/text/style/SuggestionSpan;");

        r48 = (android.text.style.SuggestionSpan[]) $r15;

        i23 = 0;

        z5 = 0;

        $r16 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $z2 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r16);

        if $z2 == 0 goto label24;

        if i19 >= i0 goto label06;

        z5 = 1;

     label06:
        $r26 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r27 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r26);

        i24 = virtualinvoke $r27.<android.text.method.WordIterator: int preceding(int)>(i19);

        if i24 == -1 goto label07;

        z6 = 1;

        goto label08;

     label07:
        z6 = 0;

     label08:
        i25 = i24;

        z7 = z6;

        if z6 == 0 goto label11;

        $r40 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r41 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r40);

        i26 = virtualinvoke $r41.<android.text.method.WordIterator: int getEnd(int)>(i24);

        if i26 == -1 goto label09;

        z8 = 1;

        goto label10;

     label09:
        z8 = 0;

     label10:
        z7 = z8;

        i25 = i26;

     label11:
        if z7 != 0 goto label12;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label12:
        i27 = i20;

        i28 = 0;

        i20 = i25;

     label13:
        $r28 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $i13 = staticinvoke <android.widget.SpellChecker: int access$600(android.widget.SpellChecker)>($r28);

        if i28 >= $i13 goto label19;

        $r36 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r37 = staticinvoke <android.widget.SpellChecker: android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker)>($r36);

        r49 = $r37[i28];

        $r38 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r39 = staticinvoke <android.widget.SpellChecker: int[] access$800(android.widget.SpellChecker)>($r38);

        $i15 = $r39[i28];

        if $i15 < 0 goto label17;

        $z3 = virtualinvoke r49.<android.text.style.SpellCheckSpan: boolean isSpellCheckInProgress()>();

        if $z3 == 0 goto label14;

        i30 = i20;

        i31 = i27;

        goto label18;

     label14:
        i1 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r49);

        i2 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r49);

        i30 = i20;

        i31 = i27;

        if i2 < i27 goto label18;

        if i20 >= i1 goto label15;

        i30 = i20;

        i31 = i27;

        goto label18;

     label15:
        if i1 > i27 goto label16;

        if i20 > i2 goto label16;

        z9 = 0;

        goto label20;

     label16:
        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r49);

        i31 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i27);

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i20);

        goto label18;

     label17:
        i31 = i27;

        i30 = i20;

     label18:
        i28 = i28 + 1;

        i20 = i30;

        i27 = i31;

        goto label13;

     label19:
        z9 = 1;

     label20:
        if i20 >= i18 goto label21;

        goto label23;

     label21:
        if i20 > i27 goto label22;

        r50 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to spellcheck invalid region, from ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r50, $r35);

        goto label23;

     label22:
        if z9 == 0 goto label23;

        $r29 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r29, r1, i27, i20);

     label23:
        goto label42;

     label24:
        i32 = i22;

     label25:
        if i20 > i0 goto label41;

        i33 = i23;

        if i32 < i18 goto label36;

        i33 = i23;

        if i32 <= i20 goto label36;

        if i23 < 50 goto label26;

        z5 = 1;

        goto label42;

     label26:
        if i20 >= i18 goto label27;

        if i32 <= i18 goto label27;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i18, r47);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i18, r48);

     label27:
        if i20 >= i0 goto label28;

        if i32 <= i0 goto label28;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r47);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r48);

     label28:
        z11 = 1;

        if i32 != i18 goto label31;

        i34 = 0;

     label29:
        z11 = 1;

        $i11 = lengthof r47;

        if i34 >= $i11 goto label31;

        $r25 = r47[i34];

        $i12 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r25);

        if $i12 != i18 goto label30;

        z11 = 0;

        goto label31;

     label30:
        i34 = i34 + 1;

        goto label29;

     label31:
        z12 = z11;

        if i20 != i0 goto label34;

        i35 = 0;

     label32:
        z12 = z11;

        $i9 = lengthof r47;

        if i35 >= $i9 goto label34;

        $r24 = r47[i35];

        $i10 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r24);

        if $i10 != i0 goto label33;

        z12 = 0;

        goto label34;

     label33:
        i35 = i35 + 1;

        goto label32;

     label34:
        if z12 == 0 goto label35;

        $r23 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r23, r1, i20, i32);

     label35:
        i33 = i23 + 1;

     label36:
        $r52 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r53 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r52);

        i36 = virtualinvoke $r53.<android.text.method.WordIterator: int following(int)>(i32);

        if i19 >= i0 goto label38;

        if i36 == -1 goto label37;

        if i36 < i19 goto label38;

     label37:
        $i8 = i32 + 350;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i8);

        $r19 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r20 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r19);

        virtualinvoke $r20.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i32, i19);

        $r21 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r22 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r21);

        i36 = virtualinvoke $r22.<android.text.method.WordIterator: int following(int)>(i32);

        goto label38;

     label38:
        if i36 != -1 goto label39;

        z5 = 0;

        goto label42;

     label39:
        $r17 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r18 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r17);

        i20 = virtualinvoke $r18.<android.text.method.WordIterator: int getBeginning(int)>(i36);

        if i20 != -1 goto label40;

        z5 = 0;

        goto label42;

     label40:
        i32 = i36;

        i23 = i33;

        goto label25;

     label41:
        z5 = 0;

     label42:
        if z5 == 0 goto label43;

        if i20 == -1 goto label43;

        if i20 > i0 goto label43;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>(r1, i20, i0);

        goto label44;

     label43:
        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

     label44:
        $r54 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$1000(android.widget.SpellChecker)>($r54);

        return;
    }

    public void parse(int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        int i0, i1, i3;
        java.lang.String r1, $r14;
        android.widget.SpellChecker $r3, $r5;
        android.widget.TextView $r4, $r6;
        java.lang.CharSequence $r7;
        android.text.Editable $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r3 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r4 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r3);

        i1 = virtualinvoke $r4.<android.widget.TextView: int length()>();

        if i3 <= i1 goto label1;

        r1 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse invalid region, from ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r14);

        i3 = i1;

        goto label1;

     label1:
        if i3 <= i0 goto label2;

        $r5 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r6 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r5);

        $r7 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r8 = (android.text.Editable) $r7;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>($r8, i0, i3);

        virtualinvoke r0.<android.widget.SpellChecker$SpellParser: void parse()>();

     label2:
        return;
    }

    public void stop()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        android.text.Editable $r4;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r4 = (android.text.Editable) $r3;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>($r4);

        return;
    }
}
