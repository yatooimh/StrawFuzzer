public class android.widget.Spinner extends android.widget.AbsSpinner implements android.content.DialogInterface$OnClickListener
{
    private static final int MAX_ITEMS_MEASURED;
    public static final int MODE_DIALOG;
    public static final int MODE_DROPDOWN;
    private static final int MODE_THEME;
    private static final java.lang.String TAG;
    private boolean mDisableChildrenWhenDisabled;
    int mDropDownWidth;
    private android.widget.ForwardingListener mForwardingListener;
    private int mGravity;
    private android.widget.Spinner$SpinnerPopup mPopup;
    private final android.content.Context mPopupContext;
    private android.widget.SpinnerAdapter mTempAdapter;
    private final android.graphics.Rect mTempRect;

    public void <init>(android.content.Context)
    {
        android.widget.Spinner r0;
        android.content.Context r1;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.widget.Spinner r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, null, 16842881, i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Spinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842881);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Spinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>(r1, r2, i0, 0, -1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Spinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>(r1, r2, i0, 0, i1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, int)
    {
        android.widget.Spinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int,android.content.res.Resources$Theme)>(r1, r2, i0, i1, i2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, int, android.content.res.Resources$Theme)
    {
        android.widget.Spinner r0;
        int i0, i1, i2, $i3, i4, $i5;
        android.content.res.Resources$Theme r1;
        android.content.res.TypedArray r2, r21;
        android.graphics.Rect $r3;
        int[] $r4, $r5, $r10;
        android.widget.Spinner$DialogPopup $r6;
        java.lang.String $r7, $r13;
        android.widget.Spinner$DropdownPopup $r8;
        android.content.Context $r9, $r11, r18;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r12, $r15;
        android.widget.Spinner$1 $r14;
        android.view.ContextThemeWrapper $r16, $r17;
        android.util.AttributeSet r19;
        android.widget.SpinnerAdapter r23;

        r0 := @this: android.widget.Spinner;

        r18 := @parameter0: android.content.Context;

        r19 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.content.res.Resources$Theme;

        specialinvoke r0.<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r18, r19, i0, i1);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.Spinner: android.graphics.Rect mTempRect> = $r3;

        $r4 = <com.android.internal.R$styleable: int[] Spinner>;

        r2 = virtualinvoke r18.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r19, $r4, i0, i1);

        $r5 = <com.android.internal.R$styleable: int[] Spinner>;

        virtualinvoke r0.<android.widget.Spinner: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r18, $r5, r19, r2, i0, i1);

        if r1 == null goto label1;

        $r17 = new android.view.ContextThemeWrapper;

        specialinvoke $r17.<android.view.ContextThemeWrapper: void <init>(android.content.Context,android.content.res.Resources$Theme)>(r18, r1);

        r0.<android.widget.Spinner: android.content.Context mPopupContext> = $r17;

        goto label3;

     label1:
        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(7, 0);

        if i2 == 0 goto label2;

        $r16 = new android.view.ContextThemeWrapper;

        specialinvoke $r16.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r18, i2);

        r0.<android.widget.Spinner: android.content.Context mPopupContext> = $r16;

        goto label3;

     label2:
        r0.<android.widget.Spinner: android.content.Context mPopupContext> = r18;

     label3:
        if i4 != -1 goto label4;

        i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        goto label4;

     label4:
        if i4 == 0 goto label7;

        if i4 == 1 goto label5;

        goto label8;

     label5:
        $r8 = new android.widget.Spinner$DropdownPopup;

        $r9 = r0.<android.widget.Spinner: android.content.Context mPopupContext>;

        specialinvoke $r8.<android.widget.Spinner$DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int)>(r0, $r9, r19, i0, i1);

        $r11 = r0.<android.widget.Spinner: android.content.Context mPopupContext>;

        $r10 = <com.android.internal.R$styleable: int[] Spinner>;

        r21 = virtualinvoke $r11.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r19, $r10, i0, i1);

        $i3 = virtualinvoke r21.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(4, -2);

        r0.<android.widget.Spinner: int mDropDownWidth> = $i3;

        $z0 = virtualinvoke r21.<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>(1);

        if $z0 == 0 goto label6;

        $r15 = virtualinvoke r21.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        virtualinvoke $r8.<android.widget.Spinner$DropdownPopup: void setListSelector(android.graphics.drawable.Drawable)>($r15);

     label6:
        $r12 = virtualinvoke r21.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        virtualinvoke $r8.<android.widget.Spinner$DropdownPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r12);

        $r13 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        virtualinvoke $r8.<android.widget.Spinner$DropdownPopup: void setPromptText(java.lang.CharSequence)>($r13);

        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup> = $r8;

        $r14 = new android.widget.Spinner$1;

        specialinvoke $r14.<android.widget.Spinner$1: void <init>(android.widget.Spinner,android.view.View,android.widget.Spinner$DropdownPopup)>(r0, r0, $r8);

        r0.<android.widget.Spinner: android.widget.ForwardingListener mForwardingListener> = $r14;

        goto label8;

     label7:
        $r6 = new android.widget.Spinner$DialogPopup;

        specialinvoke $r6.<android.widget.Spinner$DialogPopup: void <init>(android.widget.Spinner,android.widget.Spinner$1)>(r0, null);

        r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup> = $r6;

        $r7 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        interfaceinvoke $r6.<android.widget.Spinner$SpinnerPopup: void setPromptText(java.lang.CharSequence)>($r7);

     label8:
        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(0, 17);

        r0.<android.widget.Spinner: int mGravity> = $i5;

        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        r0.<android.widget.Spinner: boolean mDisableChildrenWhenDisabled> = $z1;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        r23 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mTempAdapter>;

        if r23 == null goto label9;

        virtualinvoke r0.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>(r23);

        r0.<android.widget.Spinner: android.widget.SpinnerAdapter mTempAdapter> = null;

     label9:
        return;
    }

    static android.widget.Spinner$SpinnerPopup access$100(android.widget.Spinner)
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1;

        r0 := @parameter0: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        return $r1;
    }

    static android.graphics.Rect access$400(android.widget.Spinner)
    {
        android.widget.Spinner r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.graphics.Rect mTempRect>;

        return $r1;
    }

    static android.content.Context access$500(android.widget.Spinner)
    {
        android.widget.Spinner r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.content.Context mContext>;

        return $r1;
    }

    private android.view.View makeView(int, boolean)
    {
        android.widget.Spinner r0;
        int i0;
        boolean z0, $z1;
        android.widget.SpinnerAdapter $r1;
        android.widget.AbsSpinner$RecycleBin $r2;
        android.view.View r3, r4;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = r0.<android.widget.Spinner: boolean mDataChanged>;

        if $z1 != 0 goto label1;

        $r2 = r0.<android.widget.Spinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        r3 = virtualinvoke $r2.<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)>(i0);

        if r3 == null goto label1;

        specialinvoke r0.<android.widget.Spinner: void setUpChild(android.view.View,boolean)>(r3, z0);

        return r3;

     label1:
        $r1 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mAdapter>;

        r4 = interfaceinvoke $r1.<android.widget.SpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, null, r0);

        specialinvoke r0.<android.widget.Spinner: void setUpChild(android.view.View,boolean)>(r4, z0);

        return r4;
    }

    private void setUpChild(android.view.View, boolean)
    {
        android.widget.Spinner r0;
        android.view.View r1;
        boolean z0, $z2, $z3, $z4;
        android.view.ViewGroup$LayoutParams r2, r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r10 = r2;

        if r2 != null goto label1;

        r10 = virtualinvoke r0.<android.widget.Spinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

     label1:
        virtualinvoke r0.<android.widget.Spinner: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, 0, r10);

        $z2 = virtualinvoke r0.<android.widget.Spinner: boolean hasFocus()>();

        virtualinvoke r1.<android.view.View: void setSelected(boolean)>($z2);

        $z3 = r0.<android.widget.Spinner: boolean mDisableChildrenWhenDisabled>;

        if $z3 == 0 goto label2;

        $z4 = virtualinvoke r0.<android.widget.Spinner: boolean isEnabled()>();

        virtualinvoke r1.<android.view.View: void setEnabled(boolean)>($z4);

     label2:
        $i5 = r0.<android.widget.Spinner: int mHeightMeasureSpec>;

        $r3 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $i4 = $i2 + $i1;

        $i3 = r10.<android.view.ViewGroup$LayoutParams: int height>;

        i24 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i5, $i4, $i3);

        $i10 = r0.<android.widget.Spinner: int mWidthMeasureSpec>;

        $r5 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i7 = $r5.<android.graphics.Rect: int left>;

        $r6 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i6 = $r6.<android.graphics.Rect: int right>;

        $i9 = $i7 + $i6;

        $i8 = r10.<android.view.ViewGroup$LayoutParams: int width>;

        $i11 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i10, $i9, $i8);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i11, i24);

        $r7 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i12 = $r7.<android.graphics.Rect: int top>;

        $i13 = virtualinvoke r0.<android.widget.Spinner: int getMeasuredHeight()>();

        $r8 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i14 = $r8.<android.graphics.Rect: int bottom>;

        $i16 = $i13 - $i14;

        $r9 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i15 = $r9.<android.graphics.Rect: int top>;

        $i17 = $i16 - $i15;

        $i18 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i19 = $i17 - $i18;

        $i20 = $i19 / 2;

        i0 = $i12 + $i20;

        i25 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i21 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i23 = 0 + $i21;

        $i22 = i25 + i0;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(0, i0, $i23, $i22);

        if z0 != 0 goto label3;

        virtualinvoke r0.<android.widget.Spinner: void removeViewInLayout(android.view.View)>(r1);

     label3:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.Spinner r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.Spinner;

        $r1 = class "Landroid/widget/Spinner;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getBaseline()
    {
        android.widget.Spinner r0;
        int i0, $i1, $i2, $i3, i4;
        android.widget.SpinnerAdapter $r1, $r2;
        android.widget.AbsSpinner$RecycleBin $r3;
        android.view.View r4;

        r0 := @this: android.widget.Spinner;

        $i1 = virtualinvoke r0.<android.widget.Spinner: int getChildCount()>();

        if $i1 <= 0 goto label1;

        r4 = virtualinvoke r0.<android.widget.Spinner: android.view.View getChildAt(int)>(0);

        goto label2;

     label1:
        r4 = null;

        $r1 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mAdapter>;

        if $r1 == null goto label2;

        r4 = null;

        $r2 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mAdapter>;

        $i3 = interfaceinvoke $r2.<android.widget.SpinnerAdapter: int getCount()>();

        if $i3 <= 0 goto label2;

        r4 = specialinvoke r0.<android.widget.Spinner: android.view.View makeView(int,boolean)>(0, 0);

        $r3 = r0.<android.widget.Spinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)>(0, r4);

     label2:
        i4 = -1;

        if r4 == null goto label4;

        i0 = virtualinvoke r4.<android.view.View: int getBaseline()>();

        if i0 < 0 goto label3;

        $i2 = virtualinvoke r4.<android.view.View: int getTop()>();

        i4 = $i2 + i0;

     label3:
        return i4;

     label4:
        return -1;
    }

    public int getDropDownHorizontalOffset()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1;
        int $i0;

        r0 := @this: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $i0 = interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: int getHorizontalOffset()>();

        return $i0;
    }

    public int getDropDownVerticalOffset()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1;
        int $i0;

        r0 := @this: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $i0 = interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: int getVerticalOffset()>();

        return $i0;
    }

    public int getDropDownWidth()
    {
        android.widget.Spinner r0;
        int $i0;

        r0 := @this: android.widget.Spinner;

        $i0 = r0.<android.widget.Spinner: int mDropDownWidth>;

        return $i0;
    }

    public int getGravity()
    {
        android.widget.Spinner r0;
        int $i0;

        r0 := @this: android.widget.Spinner;

        $i0 = r0.<android.widget.Spinner: int mGravity>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getPopupBackground()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $r2 = interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: android.graphics.drawable.Drawable getBackground()>();

        return $r2;
    }

    public android.content.Context getPopupContext()
    {
        android.widget.Spinner r0;
        android.content.Context $r1;

        r0 := @this: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.content.Context mPopupContext>;

        return $r1;
    }

    public java.lang.CharSequence getPrompt()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Spinner;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $r2 = interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: java.lang.CharSequence getHintText()>();

        return $r2;
    }

    public boolean isPopupShowing()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Spinner;

        r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<android.widget.Spinner$SpinnerPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void layout(int, boolean)
    {
        android.widget.Spinner r0;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, $i24;
        android.view.View r1;
        android.graphics.Rect $r2, $r3, $r4;
        android.widget.SpinnerAdapter $r5;
        android.widget.AbsSpinner$RecycleBin $r6;

        r0 := @this: android.widget.Spinner;

        i20 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        i0 = $r2.<android.graphics.Rect: int left>;

        $i4 = r0.<android.widget.Spinner: int mRight>;

        $i3 = r0.<android.widget.Spinner: int mLeft>;

        $i6 = $i4 - $i3;

        $r3 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i5 = $r3.<android.graphics.Rect: int left>;

        $i8 = $i6 - $i5;

        $r4 = r0.<android.widget.Spinner: android.graphics.Rect mSpinnerPadding>;

        $i7 = $r4.<android.graphics.Rect: int right>;

        i1 = $i8 - $i7;

        $z1 = r0.<android.widget.Spinner: boolean mDataChanged>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.widget.Spinner: void handleDataChanged()>();

     label1:
        $i9 = r0.<android.widget.Spinner: int mItemCount>;

        if $i9 != 0 goto label2;

        virtualinvoke r0.<android.widget.Spinner: void resetList()>();

        return;

     label2:
        $i10 = r0.<android.widget.Spinner: int mNextSelectedPosition>;

        if $i10 < 0 goto label3;

        $i19 = r0.<android.widget.Spinner: int mNextSelectedPosition>;

        virtualinvoke r0.<android.widget.Spinner: void setSelectedPositionInt(int)>($i19);

     label3:
        virtualinvoke r0.<android.widget.Spinner: void recycleAllViews()>();

        virtualinvoke r0.<android.widget.Spinner: void removeAllViewsInLayout()>();

        $i11 = r0.<android.widget.Spinner: int mSelectedPosition>;

        r0.<android.widget.Spinner: int mFirstPosition> = $i11;

        $r5 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mAdapter>;

        if $r5 == null goto label7;

        $i12 = r0.<android.widget.Spinner: int mSelectedPosition>;

        r1 = specialinvoke r0.<android.widget.Spinner: android.view.View makeView(int,boolean)>($i12, 1);

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i21 = i0;

        i22 = virtualinvoke r0.<android.widget.Spinner: int getLayoutDirection()>();

        $i13 = r0.<android.widget.Spinner: int mGravity>;

        $i14 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i13, i22);

        i23 = $i14 & 7;

        if i23 == 1 goto label5;

        if i23 == 5 goto label4;

        goto label6;

     label4:
        $i18 = i0 + i1;

        i21 = $i18 - i2;

        goto label6;

     label5:
        $i15 = i1 / 2;

        $i17 = $i15 + i0;

        $i16 = i2 / 2;

        i21 = $i17 - $i16;

     label6:
        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>(i21);

     label7:
        $r6 = r0.<android.widget.Spinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsSpinner$RecycleBin: void clear()>();

        virtualinvoke r0.<android.widget.Spinner: void invalidate()>();

        virtualinvoke r0.<android.widget.Spinner: void checkSelectionChanged()>();

        r0.<android.widget.Spinner: boolean mDataChanged> = 0;

        r0.<android.widget.Spinner: boolean mNeedSync> = 0;

        $i24 = r0.<android.widget.Spinner: int mSelectedPosition>;

        virtualinvoke r0.<android.widget.Spinner: void setNextSelectedPositionInt(int)>($i24);

        return;
    }

    int measureContentWidth(android.widget.SpinnerAdapter, android.graphics.drawable.Drawable)
    {
        android.widget.Spinner r0;
        android.widget.SpinnerAdapter r1;
        android.graphics.drawable.Drawable r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        android.graphics.Rect $r3, $r4, $r5;
        android.view.ViewGroup$LayoutParams $r6, $r7;
        android.view.View r8;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        return 0;

     label1:
        i16 = 0;

        r8 = null;

        i17 = 0;

        $i4 = virtualinvoke r0.<android.widget.Spinner: int getMeasuredWidth()>();

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i4, 0);

        $i5 = virtualinvoke r0.<android.widget.Spinner: int getMeasuredHeight()>();

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeSafeMeasureSpec(int,int)>($i5, 0);

        $i6 = virtualinvoke r0.<android.widget.Spinner: int getSelectedItemPosition()>();

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i7 = interfaceinvoke r1.<android.widget.SpinnerAdapter: int getCount()>();

        $i8 = i18 + 15;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $i9 = i2 - i18;

        $i10 = 15 - $i9;

        $i11 = i18 - $i10;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

     label2:
        if i19 >= i2 goto label5;

        i3 = interfaceinvoke r1.<android.widget.SpinnerAdapter: int getItemViewType(int)>(i19);

        i20 = i17;

        if i3 == i17 goto label3;

        i20 = i3;

        r8 = null;

     label3:
        r8 = interfaceinvoke r1.<android.widget.SpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i19, r8, r0);

        $r6 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r6 != null goto label4;

        $r7 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r7.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r8.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

     label4:
        virtualinvoke r8.<android.view.View: void measure(int,int)>(i0, i1);

        $i15 = virtualinvoke r8.<android.view.View: int getMeasuredWidth()>();

        i16 = staticinvoke <java.lang.Math: int max(int,int)>(i16, $i15);

        i19 = i19 + 1;

        i17 = i20;

        goto label2;

     label5:
        i21 = i16;

        if r2 == null goto label6;

        $r3 = r0.<android.widget.Spinner: android.graphics.Rect mTempRect>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

        $r4 = r0.<android.widget.Spinner: android.graphics.Rect mTempRect>;

        $i13 = $r4.<android.graphics.Rect: int left>;

        $r5 = r0.<android.widget.Spinner: android.graphics.Rect mTempRect>;

        $i12 = $r5.<android.graphics.Rect: int right>;

        $i14 = $i13 + $i12;

        i21 = i16 + $i14;

     label6:
        return i21;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        android.widget.Spinner r0;
        android.content.DialogInterface r1;
        int i0;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.content.DialogInterface;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.widget.Spinner: void setSelection(int)>(i0);

        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Spinner;

        specialinvoke r0.<android.widget.AbsSpinner: void onDetachedFromWindow()>();

        r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<android.widget.Spinner$SpinnerPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        interfaceinvoke $r2.<android.widget.Spinner$SpinnerPopup: void dismiss()>();

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.Spinner r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.widget.SpinnerAdapter $r2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AbsSpinner: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = r0.<android.widget.Spinner: android.widget.SpinnerAdapter mAdapter>;

        if $r2 == null goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>(1);

     label1:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.Spinner r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.Spinner;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.AbsSpinner: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        r0.<android.widget.Spinner: boolean mInLayout> = 1;

        virtualinvoke r0.<android.widget.Spinner: void layout(int,boolean)>(0, 0);

        r0.<android.widget.Spinner: boolean mInLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.Spinner r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        android.widget.Spinner$SpinnerPopup $r1;
        android.widget.SpinnerAdapter $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        specialinvoke r0.<android.widget.AbsSpinner: void onMeasure(int,int)>(i0, i7);

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        if $r1 == null goto label1;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if $i1 != -2147483648 goto label1;

        i8 = virtualinvoke r0.<android.widget.Spinner: int getMeasuredWidth()>();

        $r2 = virtualinvoke r0.<android.widget.Spinner: android.widget.SpinnerAdapter getAdapter()>();

        $r3 = virtualinvoke r0.<android.widget.Spinner: android.graphics.drawable.Drawable getBackground()>();

        $i2 = virtualinvoke r0.<android.widget.Spinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>($r2, $r3);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i8, $i2);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i6 = virtualinvoke r0.<android.widget.Spinner: int getMeasuredHeight()>();

        virtualinvoke r0.<android.widget.Spinner: void setMeasuredDimension(int,int)>($i5, $i6);

     label1:
        return;
    }

    public android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent, int)
    {
        android.widget.Spinner r0;
        android.view.MotionEvent r1;
        int i0;
        android.view.PointerIcon $r2, $r4, $r5;
        boolean $z0, $z1;
        android.content.Context $r3;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.widget.Spinner: android.view.PointerIcon getPointerIcon()>();

        if $r2 != null goto label1;

        $z0 = virtualinvoke r0.<android.widget.Spinner: boolean isClickable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.Spinner: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.Spinner: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>($r3, 1002);

        return $r4;

     label1:
        $r5 = specialinvoke r0.<android.widget.AbsSpinner: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>(r1, i0);

        return $r5;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.Spinner r0;
        android.os.Parcelable $r1, r3;
        boolean $z0;
        android.widget.Spinner$2 $r2;
        android.widget.Spinner$SavedState r4;
        android.view.ViewTreeObserver r5;

        r0 := @this: android.widget.Spinner;

        r3 := @parameter0: android.os.Parcelable;

        r4 = (android.widget.Spinner$SavedState) r3;

        $r1 = virtualinvoke r4.<android.widget.Spinner$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $z0 = r4.<android.widget.Spinner$SavedState: boolean showDropdown>;

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r0.<android.widget.Spinner: android.view.ViewTreeObserver getViewTreeObserver()>();

        if r5 == null goto label1;

        $r2 = new android.widget.Spinner$2;

        specialinvoke $r2.<android.widget.Spinner$2: void <init>(android.widget.Spinner)>(r0);

        virtualinvoke r5.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r2);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup r2;
        android.widget.Spinner$SavedState $r3;
        android.os.Parcelable $r4;
        boolean $z0, z1;

        r0 := @this: android.widget.Spinner;

        $r3 = new android.widget.Spinner$SavedState;

        $r4 = specialinvoke r0.<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r3.<android.widget.Spinner$SavedState: void <init>(android.os.Parcelable)>($r4);

        r2 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<android.widget.Spinner$SpinnerPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r3.<android.widget.Spinner$SavedState: boolean showDropdown> = z1;

        return $r3;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Spinner r0;
        android.view.MotionEvent r1;
        android.widget.ForwardingListener r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.widget.Spinner: android.widget.ForwardingListener mForwardingListener>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AbsSpinner: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean performClick()
    {
        android.widget.Spinner r0;
        android.widget.Spinner$SpinnerPopup $r1, $r2;
        boolean $z0, z1, z2;
        int $i0, $i1;

        r0 := @this: android.widget.Spinner;

        z1 = specialinvoke r0.<android.widget.AbsSpinner: boolean performClick()>();

        z2 = z1;

        if z1 != 0 goto label1;

        z2 = 1;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $z0 = interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: boolean isShowing()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $i0 = virtualinvoke r0.<android.widget.Spinner: int getTextDirection()>();

        $i1 = virtualinvoke r0.<android.widget.Spinner: int getTextAlignment()>();

        interfaceinvoke $r2.<android.widget.Spinner$SpinnerPopup: void show(int,int)>($i0, $i1);

        z2 = 1;

     label1:
        return z2;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.Spinner r0;
        android.widget.Adapter r1;
        android.widget.SpinnerAdapter $r2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.SpinnerAdapter) r1;

        virtualinvoke r0.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r2);

        return;
    }

    public void setAdapter(android.widget.SpinnerAdapter)
    {
        android.widget.Spinner r0;
        android.widget.SpinnerAdapter r1;
        android.content.Context r2, $r5, r11;
        android.widget.Spinner$SpinnerPopup $r3, $r8;
        android.widget.AbsSpinner$RecycleBin $r4;
        android.content.pm.ApplicationInfo $r6;
        int $i0, $i1;
        android.widget.Spinner$DropDownAdapter $r7;
        android.content.res.Resources$Theme $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        $r3 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        if $r3 != null goto label1;

        r0.<android.widget.Spinner: android.widget.SpinnerAdapter mTempAdapter> = r1;

        return;

     label1:
        specialinvoke r0.<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>(r1);

        $r4 = r0.<android.widget.Spinner: android.widget.AbsSpinner$RecycleBin mRecycler>;

        virtualinvoke $r4.<android.widget.AbsSpinner$RecycleBin: void clear()>();

        $r5 = r0.<android.widget.Spinner: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 21 goto label3;

        if r1 == null goto label3;

        $i1 = interfaceinvoke r1.<android.widget.SpinnerAdapter: int getViewTypeCount()>();

        if $i1 != 1 goto label2;

        goto label3;

     label2:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Spinner adapter view type count must be 1");

        throw $r10;

     label3:
        r2 = r0.<android.widget.Spinner: android.content.Context mPopupContext>;

        r11 = r2;

        if r2 != null goto label4;

        r11 = r0.<android.widget.Spinner: android.content.Context mContext>;

     label4:
        $r8 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $r7 = new android.widget.Spinner$DropDownAdapter;

        $r9 = virtualinvoke r11.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r7.<android.widget.Spinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)>(r1, $r9);

        interfaceinvoke $r8.<android.widget.Spinner$SpinnerPopup: void setAdapter(android.widget.ListAdapter)>($r7);

        return;
    }

    public void setDropDownHorizontalOffset(int)
    {
        android.widget.Spinner r0;
        int i0;
        android.widget.Spinner$SpinnerPopup $r1;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: void setHorizontalOffset(int)>(i0);

        return;
    }

    public void setDropDownVerticalOffset(int)
    {
        android.widget.Spinner r0;
        int i0;
        android.widget.Spinner$SpinnerPopup $r1;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        interfaceinvoke $r1.<android.widget.Spinner$SpinnerPopup: void setVerticalOffset(int)>(i0);

        return;
    }

    public void setDropDownWidth(int)
    {
        android.widget.Spinner r0;
        int i0;
        android.widget.Spinner$SpinnerPopup $r1;
        boolean $z0;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $z0 = $r1 instanceof android.widget.Spinner$DropdownPopup;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Spinner", "Cannot set dropdown width for MODE_DIALOG, ignoring");

        return;

     label1:
        r0.<android.widget.Spinner: int mDropDownWidth> = i0;

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.Spinner r0;
        boolean z0, $z1;
        int i0, i1;
        android.view.View $r1;

        r0 := @this: android.widget.Spinner;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.AbsSpinner: void setEnabled(boolean)>(z0);

        $z1 = r0.<android.widget.Spinner: boolean mDisableChildrenWhenDisabled>;

        if $z1 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.Spinner: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.Spinner: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void setEnabled(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setGravity(int)
    {
        android.widget.Spinner r0;
        int i0, $i1, $i2, i3;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.Spinner: int mGravity>;

        if $i1 == i0 goto label2;

        i3 = i0;

        $i2 = i0 & 7;

        if $i2 != 0 goto label1;

        i3 = i0 | 8388611;

     label1:
        r0.<android.widget.Spinner: int mGravity> = i3;

        virtualinvoke r0.<android.widget.Spinner: void requestLayout()>();

     label2:
        return;
    }

    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    {
        android.widget.Spinner r0;
        android.widget.AdapterView$OnItemClickListener r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.widget.AdapterView$OnItemClickListener;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("setOnItemClickListener cannot be used with a spinner.");

        throw $r2;
    }

    public void setOnItemClickListenerInt(android.widget.AdapterView$OnItemClickListener)
    {
        android.widget.Spinner r0;
        android.widget.AdapterView$OnItemClickListener r1;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.widget.AdapterView$OnItemClickListener;

        specialinvoke r0.<android.widget.AbsSpinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>(r1);

        return;
    }

    public void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Spinner r0;
        android.graphics.drawable.Drawable r1;
        android.widget.Spinner$SpinnerPopup r2;
        boolean $z0;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        $z0 = r2 instanceof android.widget.Spinner$DropdownPopup;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Spinner", "setPopupBackgroundDrawable: incompatible spinner mode; ignoring...");

        return;

     label1:
        interfaceinvoke r2.<android.widget.Spinner$SpinnerPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setPopupBackgroundResource(int)
    {
        android.widget.Spinner r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Spinner: android.content.Context getPopupContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setPrompt(java.lang.CharSequence)
    {
        android.widget.Spinner r0;
        java.lang.CharSequence r1;
        android.widget.Spinner$SpinnerPopup $r2;

        r0 := @this: android.widget.Spinner;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.Spinner: android.widget.Spinner$SpinnerPopup mPopup>;

        interfaceinvoke $r2.<android.widget.Spinner$SpinnerPopup: void setPromptText(java.lang.CharSequence)>(r1);

        return;
    }

    public void setPromptId(int)
    {
        android.widget.Spinner r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Spinner;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Spinner: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Spinner: java.lang.String TAG> = "Spinner";

        <android.widget.Spinner: int MODE_THEME> = -1;

        <android.widget.Spinner: int MODE_DROPDOWN> = 1;

        <android.widget.Spinner: int MODE_DIALOG> = 0;

        <android.widget.Spinner: int MAX_ITEMS_MEASURED> = 15;

        return;
    }
}
