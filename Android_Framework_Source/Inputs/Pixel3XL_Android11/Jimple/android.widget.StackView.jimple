public class android.widget.StackView extends android.widget.AdapterViewAnimator
{
    private static final int DEFAULT_ANIMATION_DURATION;
    private static final int FRAME_PADDING;
    private static final int GESTURE_NONE;
    private static final int GESTURE_SLIDE_DOWN;
    private static final int GESTURE_SLIDE_UP;
    private static final int INVALID_POINTER;
    private static final int ITEMS_SLIDE_DOWN;
    private static final int ITEMS_SLIDE_UP;
    private static final int MINIMUM_ANIMATION_DURATION;
    private static final int MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE;
    private static final long MIN_TIME_BETWEEN_SCROLLS;
    private static final int NUM_ACTIVE_VIEWS;
    private static final float PERSPECTIVE_SCALE_FACTOR;
    private static final float PERSPECTIVE_SHIFT_FACTOR_X;
    private static final float PERSPECTIVE_SHIFT_FACTOR_Y;
    private static final float SLIDE_UP_RATIO;
    private static final int STACK_RELAYOUT_DURATION;
    private static final float SWIPE_THRESHOLD_RATIO;
    private static android.widget.StackView$HolographicHelper sHolographicHelper;
    private final java.lang.String TAG;
    private int mActivePointerId;
    private int mClickColor;
    private android.widget.ImageView mClickFeedback;
    private boolean mClickFeedbackIsValid;
    private boolean mFirstLayoutHappened;
    private int mFramePadding;
    private android.widget.ImageView mHighlight;
    private float mInitialX;
    private float mInitialY;
    private long mLastInteractionTime;
    private long mLastScrollTime;
    private int mMaximumVelocity;
    private float mNewPerspectiveShiftX;
    private float mNewPerspectiveShiftY;
    private float mPerspectiveShiftX;
    private float mPerspectiveShiftY;
    private int mResOutColor;
    private int mSlideAmount;
    private int mStackMode;
    private android.widget.StackView$StackSlider mStackSlider;
    private int mSwipeGestureType;
    private int mSwipeThreshold;
    private final android.graphics.Rect mTouchRect;
    private int mTouchSlop;
    private boolean mTransitionIsSetup;
    private android.view.VelocityTracker mVelocityTracker;
    private int mYVelocity;
    private final android.graphics.Rect stackInvalidateRect;

    public void <init>(android.content.Context)
    {
        android.widget.StackView r0;
        android.content.Context r1;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843838);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3;
        android.content.res.TypedArray r3;
        android.graphics.Rect $r4, $r5;
        int[] $r6, $r7;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.StackView: java.lang.String TAG> = "StackView";

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.StackView: android.graphics.Rect mTouchRect> = $r4;

        r0.<android.widget.StackView: int mYVelocity> = 0;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        r0.<android.widget.StackView: boolean mTransitionIsSetup> = 0;

        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 0;

        r0.<android.widget.StackView: boolean mFirstLayoutHappened> = 0;

        r0.<android.widget.StackView: long mLastInteractionTime> = 0L;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect> = $r5;

        $r6 = <com.android.internal.R$styleable: int[] StackView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r6, i0, i1);

        $r7 = <com.android.internal.R$styleable: int[] StackView>;

        virtualinvoke r0.<android.widget.StackView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r1, $r7, r2, r3, i0, i1);

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        r0.<android.widget.StackView: int mResOutColor> = $i2;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        r0.<android.widget.StackView: int mClickColor> = $i3;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.StackView: void initStackView()>();

        return;
    }

    static android.widget.ImageView access$000(android.widget.StackView)
    {
        android.widget.StackView r0;
        android.widget.ImageView $r1;

        r0 := @parameter0: android.widget.StackView;

        $r1 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        return $r1;
    }

    static int access$100(android.widget.StackView)
    {
        android.widget.StackView r0;
        int $i0;

        r0 := @parameter0: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mStackMode>;

        return $i0;
    }

    static int access$200(android.widget.StackView)
    {
        android.widget.StackView r0;
        int $i0;

        r0 := @parameter0: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSlideAmount>;

        return $i0;
    }

    private void beginGestureIfNeeded(float)
    {
        android.widget.StackView r0;
        float f0, $f1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i16, $i18, $i19;
        android.view.View r1;
        byte $b4, b13, b14, b17;
        android.widget.Adapter $r2;
        boolean z0, $z1, z2, $z3, z4, $z5;

        r0 := @this: android.widget.StackView;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i2 = (int) $f1;

        $i1 = r0.<android.widget.StackView: int mTouchSlop>;

        if $i2 <= $i1 goto label26;

        $i3 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i3 != 0 goto label26;

        z0 = 1;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label01;

        b13 = 1;

        goto label02;

     label01:
        b13 = 2;

     label02:
        virtualinvoke r0.<android.widget.StackView: void cancelLongPress()>();

        virtualinvoke r0.<android.widget.StackView: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $r2 = r0.<android.widget.StackView: android.widget.Adapter mAdapter>;

        if $r2 != null goto label03;

        return;

     label03:
        i0 = virtualinvoke r0.<android.widget.StackView: int getCount()>();

        $i5 = r0.<android.widget.StackView: int mStackMode>;

        if $i5 != 0 goto label06;

        if b13 != 2 goto label04;

        b14 = 0;

        goto label05;

     label04:
        b14 = 1;

     label05:
        goto label08;

     label06:
        if b13 != 2 goto label07;

        b14 = 1;

        goto label08;

     label07:
        b14 = 0;

     label08:
        $z1 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z1 == 0 goto label11;

        if i0 != 1 goto label11;

        $i11 = r0.<android.widget.StackView: int mStackMode>;

        if $i11 != 0 goto label09;

        if b13 == 1 goto label10;

     label09:
        $i12 = r0.<android.widget.StackView: int mStackMode>;

        if $i12 != 1 goto label11;

        if b13 != 2 goto label11;

     label10:
        z2 = 1;

        goto label12;

     label11:
        z2 = 0;

     label12:
        $z3 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z3 == 0 goto label15;

        if i0 != 1 goto label15;

        $i9 = r0.<android.widget.StackView: int mStackMode>;

        if $i9 != 1 goto label13;

        if b13 == 1 goto label14;

     label13:
        $i10 = r0.<android.widget.StackView: int mStackMode>;

        if $i10 != 0 goto label15;

        if b13 != 2 goto label15;

     label14:
        z4 = 1;

        goto label16;

     label15:
        z4 = 0;

     label16:
        $z5 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z5 == 0 goto label17;

        if z4 != 0 goto label17;

        if z2 != 0 goto label17;

        i16 = b14;

        b17 = 0;

        goto label22;

     label17:
        $i18 = r0.<android.widget.StackView: int mCurrentWindowStartUnbounded>;

        $i19 = $i18 + b14;

        if $i19 == -1 goto label21;

        if z4 == 0 goto label18;

        goto label21;

     label18:
        $i6 = r0.<android.widget.StackView: int mCurrentWindowStartUnbounded>;

        $i8 = $i6 + b14;

        $i7 = i0 - 1;

        if $i8 == $i7 goto label20;

        if z2 == 0 goto label19;

        goto label20;

     label19:
        i16 = b14;

        b17 = 0;

        goto label22;

     label20:
        i16 = b14;

        b17 = 2;

        goto label22;

     label21:
        i16 = b14 + 1;

        b17 = 1;

     label22:
        if b17 != 0 goto label23;

        goto label24;

     label23:
        z0 = 0;

     label24:
        r0.<android.widget.StackView: boolean mTransitionIsSetup> = z0;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(i16);

        if r1 != null goto label25;

        return;

     label25:
        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, b17);

        r0.<android.widget.StackView: int mSwipeGestureType> = b13;

        virtualinvoke r0.<android.widget.StackView: void cancelHandleClick()>();

     label26:
        return;
    }

    private boolean goBackward()
    {
        android.widget.StackView r0;
        int $i0;

        r0 := @this: android.widget.StackView;

        $i0 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        return 1;

     label1:
        return 0;
    }

    private boolean goForward()
    {
        android.widget.StackView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.StackView;

        $i0 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        $i1 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label1;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

        return 1;

     label1:
        return 0;
    }

    private void handlePointerUp(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, i22, i23, i25;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9;
        long $l2, $l24, $l26;
        android.widget.StackView$StackSlider $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r17, $r18, $r27, $r28;
        android.widget.ImageView $r10, $r12;
        android.view.VelocityTracker $r13, r15, r16;
        android.view.MotionEvent r14;
        float[] $r20, $r23, $r30, $r33;
        android.animation.PropertyValuesHolder r21, $r24, r31, $r34;
        android.animation.PropertyValuesHolder[] $r22, $r32;
        android.animation.ObjectAnimator r25, r35;
        android.view.animation.LinearInterpolator $r26;

        r0 := @this: android.widget.StackView;

        r14 := @parameter0: android.view.MotionEvent;

        $i0 = r0.<android.widget.StackView: int mActivePointerId>;

        $i1 = virtualinvoke r14.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        $f0 = virtualinvoke r14.<android.view.MotionEvent: float getY(int)>($i1);

        $f1 = r0.<android.widget.StackView: float mInitialY>;

        $f2 = $f0 - $f1;

        i19 = (int) $f2;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.widget.StackView: long mLastInteractionTime> = $l2;

        r15 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if r15 == null goto label01;

        $i16 = r0.<android.widget.StackView: int mMaximumVelocity>;

        $f7 = (float) $i16;

        virtualinvoke r15.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f7);

        $r13 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        $i17 = r0.<android.widget.StackView: int mActivePointerId>;

        $f8 = virtualinvoke $r13.<android.view.VelocityTracker: float getYVelocity(int)>($i17);

        $i18 = (int) $f8;

        r0.<android.widget.StackView: int mYVelocity> = $i18;

     label01:
        r16 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if r16 == null goto label02;

        virtualinvoke r16.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker> = null;

     label02:
        $i3 = r0.<android.widget.StackView: int mSwipeThreshold>;

        if i19 <= $i3 goto label05;

        $i13 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i13 != 2 goto label05;

        $r11 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i14 = $r11.<android.widget.StackView$StackSlider: int mMode>;

        if $i14 != 0 goto label05;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        $i15 = r0.<android.widget.StackView: int mStackMode>;

        if $i15 != 0 goto label03;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        goto label04;

     label03:
        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label04:
        $r12 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r12.<android.widget.ImageView: void bringToFront()>();

        goto label19;

     label05:
        $i20 = r0.<android.widget.StackView: int mSwipeThreshold>;

        $i21 = neg $i20;

        if i19 >= $i21 goto label08;

        $i10 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i10 != 1 goto label08;

        $r9 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i11 = $r9.<android.widget.StackView$StackSlider: int mMode>;

        if $i11 != 0 goto label08;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        $i12 = r0.<android.widget.StackView: int mStackMode>;

        if $i12 != 0 goto label06;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

        goto label07;

     label06:
        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

     label07:
        $r10 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r10.<android.widget.ImageView: void bringToFront()>();

        goto label19;

     label08:
        i22 = r0.<android.widget.StackView: int mSwipeGestureType>;

        f9 = 1.0F;

        if i22 != 1 goto label14;

        $i7 = r0.<android.widget.StackView: int mStackMode>;

        if $i7 != 1 goto label09;

        goto label10;

     label09:
        f9 = 0.0F;

     label10:
        $i8 = r0.<android.widget.StackView: int mStackMode>;

        if $i8 == 0 goto label12;

        $r7 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i9 = $r7.<android.widget.StackView$StackSlider: int mMode>;

        if $i9 == 0 goto label11;

        goto label12;

     label11:
        $r8 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f6 = virtualinvoke $r8.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition()>();

        i23 = staticinvoke <java.lang.Math: int round(float)>($f6);

        goto label13;

     label12:
        $r5 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f5 = virtualinvoke $r5.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition()>();

        i23 = staticinvoke <java.lang.Math: int round(float)>($f5);

     label13:
        $r17 = new android.widget.StackView$StackSlider;

        $r18 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r17.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r18);

        $r20 = newarray (float)[1];

        $r20[0] = f9;

        r21 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r20);

        $r22 = newarray (android.animation.PropertyValuesHolder)[2];

        $r23 = newarray (float)[1];

        $r23[0] = 0.0F;

        $r24 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r23);

        $r22[0] = $r24;

        $r22[1] = r21;

        r25 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r17, $r22);

        $l24 = (long) i23;

        virtualinvoke r25.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l24);

        $r26 = new android.view.animation.LinearInterpolator;

        specialinvoke $r26.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r25.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r26);

        virtualinvoke r25.<android.animation.ObjectAnimator: void start()>();

        goto label19;

     label14:
        if i22 != 2 goto label19;

        $i4 = r0.<android.widget.StackView: int mStackMode>;

        if $i4 != 1 goto label15;

        f9 = 0.0F;

     label15:
        $i5 = r0.<android.widget.StackView: int mStackMode>;

        if $i5 == 1 goto label17;

        $r3 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i6 = $r3.<android.widget.StackView$StackSlider: int mMode>;

        if $i6 == 0 goto label16;

        goto label17;

     label16:
        $r4 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f4 = virtualinvoke $r4.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition()>();

        i25 = staticinvoke <java.lang.Math: int round(float)>($f4);

        goto label18;

     label17:
        $r1 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f3 = virtualinvoke $r1.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition()>();

        i25 = staticinvoke <java.lang.Math: int round(float)>($f3);

     label18:
        $r27 = new android.widget.StackView$StackSlider;

        $r28 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r27.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r28);

        $r30 = newarray (float)[1];

        $r30[0] = f9;

        r31 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r30);

        $r32 = newarray (android.animation.PropertyValuesHolder)[2];

        $r33 = newarray (float)[1];

        $r33[0] = 0.0F;

        $r34 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r33);

        $r32[0] = $r34;

        $r32[1] = r31;

        r35 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r27, $r32);

        $l26 = (long) i25;

        virtualinvoke r35.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l26);

        virtualinvoke r35.<android.animation.ObjectAnimator: void start()>();

        goto label19;

     label19:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        return;
    }

    private void initStackView()
    {
        android.widget.StackView r0;
        android.content.Context $r1, $r3, $r7, $r13, $r17;
        int $i0, $i1, $i2;
        android.widget.ImageView $r2, $r6, $r10, r20, r22;
        android.widget.StackView$LayoutParams $r4, $r5, $r8, $r9;
        android.widget.StackView$StackSlider $r11;
        android.widget.StackView$HolographicHelper $r12, $r16;
        android.content.res.Resources $r14;
        android.util.DisplayMetrics $r15;
        float $f0, $f1;
        double $d0, $d1;
        android.view.ViewConfiguration r18;

        r0 := @this: android.widget.StackView;

        virtualinvoke r0.<android.widget.StackView: void configureViewAnimator(int,int)>(5, 1);

        virtualinvoke r0.<android.widget.StackView: void setStaticTransformationsEnabled(boolean)>(1);

        $r1 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        r18 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke r18.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.StackView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r18.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.StackView: int mMaximumVelocity> = $i1;

        r0.<android.widget.StackView: int mActivePointerId> = -1;

        $r2 = new android.widget.ImageView;

        $r3 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.ImageView: void <init>(android.content.Context)>($r3);

        r0.<android.widget.StackView: android.widget.ImageView mHighlight> = $r2;

        $r4 = new android.widget.StackView$LayoutParams;

        specialinvoke $r4.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r2);

        virtualinvoke $r2.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        r20 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $r5 = new android.widget.StackView$LayoutParams;

        specialinvoke $r5.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, r20);

        virtualinvoke r0.<android.widget.StackView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r20, -1, $r5);

        $r6 = new android.widget.ImageView;

        $r7 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        specialinvoke $r6.<android.widget.ImageView: void <init>(android.content.Context)>($r7);

        r0.<android.widget.StackView: android.widget.ImageView mClickFeedback> = $r6;

        $r8 = new android.widget.StackView$LayoutParams;

        specialinvoke $r8.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r6);

        virtualinvoke $r6.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r8);

        r22 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $r9 = new android.widget.StackView$LayoutParams;

        specialinvoke $r9.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, r22);

        virtualinvoke r0.<android.widget.StackView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r22, -1, $r9);

        $r10 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r10.<android.widget.ImageView: void setVisibility(int)>(4);

        $r11 = new android.widget.StackView$StackSlider;

        specialinvoke $r11.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView)>(r0);

        r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider> = $r11;

        $r12 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        if $r12 != null goto label1;

        $r16 = new android.widget.StackView$HolographicHelper;

        $r17 = r0.<android.widget.StackView: android.content.Context mContext>;

        specialinvoke $r16.<android.widget.StackView$HolographicHelper: void <init>(android.content.Context)>($r17);

        <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper> = $r16;

     label1:
        virtualinvoke r0.<android.widget.StackView: void setClipChildren(boolean)>(0);

        virtualinvoke r0.<android.widget.StackView: void setClipToPadding(boolean)>(0);

        r0.<android.widget.StackView: int mStackMode> = 1;

        r0.<android.widget.StackView: int mWhichChild> = -1;

        $r13 = r0.<android.widget.StackView: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r14.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r15.<android.util.DisplayMetrics: float density>;

        $f1 = 4.0F * $f0;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d1;

        r0.<android.widget.StackView: int mFramePadding> = $i2;

        return;
    }

    private void measureChildren()
    {
        android.widget.StackView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        android.view.View r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.widget.ImageView $r2, $r3;

        r0 := @this: android.widget.StackView;

        i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i1 = virtualinvoke r0.<android.widget.StackView: int getMeasuredWidth()>();

        i2 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f0 = (float) i1;

        $f1 = $f0 * 0.9F;

        $i6 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i7 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i9 = $i6 - $i7;

        $i8 = r0.<android.widget.StackView: int mPaddingRight>;

        i3 = $i9 - $i8;

        $f2 = (float) i2;

        $f3 = $f2 * 0.9F;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $i11 = r0.<android.widget.StackView: int mPaddingTop>;

        $i13 = $i10 - $i11;

        $i12 = r0.<android.widget.StackView: int mPaddingBottom>;

        i4 = $i13 - $i12;

        i18 = 0;

        i19 = 0;

        i20 = 0;

     label1:
        if i20 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i20);

        $i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i3, -2147483648);

        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i16, $i17);

        i21 = i18;

        i22 = i19;

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        if r1 == $r2 goto label3;

        i21 = i18;

        i22 = i19;

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        if r1 == $r3 goto label3;

        i23 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i5 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i24 = i18;

        if i23 <= i18 goto label2;

        i24 = i23;

     label2:
        i21 = i24;

        i22 = i19;

        if i5 <= i19 goto label3;

        i22 = i5;

        i21 = i24;

     label3:
        i20 = i20 + 1;

        i18 = i21;

        i19 = i22;

        goto label1;

     label4:
        $f4 = (float) i1;

        $f5 = $f4 * 0.1F;

        r0.<android.widget.StackView: float mNewPerspectiveShiftX> = $f5;

        $f6 = (float) i2;

        $f7 = $f6 * 0.1F;

        r0.<android.widget.StackView: float mNewPerspectiveShiftY> = $f7;

        if i18 <= 0 goto label5;

        if i0 <= 0 goto label5;

        if i18 >= i3 goto label5;

        $i15 = i1 - i18;

        $f9 = (float) $i15;

        r0.<android.widget.StackView: float mNewPerspectiveShiftX> = $f9;

     label5:
        if i19 <= 0 goto label6;

        if i0 <= 0 goto label6;

        if i19 >= i4 goto label6;

        $i14 = i2 - i19;

        $f8 = (float) $i14;

        r0.<android.widget.StackView: float mNewPerspectiveShiftY> = $f8;

     label6:
        return;
    }

    private void onLayout()
    {
        android.widget.StackView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: android.widget.StackView;

        $z0 = r0.<android.widget.StackView: boolean mFirstLayoutHappened>;

        if $z0 != 0 goto label1;

        r0.<android.widget.StackView: boolean mFirstLayoutHappened> = 1;

        specialinvoke r0.<android.widget.StackView: void updateChildTransforms()>();

     label1:
        $i1 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f0 = (float) $i1;

        $f1 = $f0 * 0.7F;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i2 = r0.<android.widget.StackView: int mSlideAmount>;

        if $i2 == i0 goto label2;

        r0.<android.widget.StackView: int mSlideAmount> = i0;

        $f8 = (float) i0;

        $f9 = $f8 * 0.2F;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f9);

        r0.<android.widget.StackView: int mSwipeThreshold> = $i5;

     label2:
        $f3 = r0.<android.widget.StackView: float mPerspectiveShiftY>;

        $f2 = r0.<android.widget.StackView: float mNewPerspectiveShiftY>;

        $i3 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        if $i3 != 0 goto label3;

        $f7 = r0.<android.widget.StackView: float mPerspectiveShiftX>;

        $f6 = r0.<android.widget.StackView: float mNewPerspectiveShiftX>;

        $i4 = staticinvoke <java.lang.Float: int compare(float,float)>($f7, $f6);

        if $i4 == 0 goto label4;

     label3:
        $f4 = r0.<android.widget.StackView: float mNewPerspectiveShiftY>;

        r0.<android.widget.StackView: float mPerspectiveShiftY> = $f4;

        $f5 = r0.<android.widget.StackView: float mNewPerspectiveShiftX>;

        r0.<android.widget.StackView: float mPerspectiveShiftX> = $f5;

        specialinvoke r0.<android.widget.StackView: void updateChildTransforms()>();

     label4:
        return;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13;
        android.view.View r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.graphics.Rect $r2, $r3;
        boolean $z0;
        android.view.MotionEvent r4;
        byte b12;
        android.view.VelocityTracker r5;

        r0 := @this: android.widget.StackView;

        r4 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r4.<android.view.MotionEvent: int getActionIndex()>();

        $i1 = virtualinvoke r4.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i2 = r0.<android.widget.StackView: int mActivePointerId>;

        if $i1 != $i2 goto label8;

        $i3 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i3 != 2 goto label1;

        b12 = 0;

        goto label2;

     label1:
        b12 = 1;

     label2:
        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(b12);

        if r1 != null goto label3;

        return;

     label3:
        i13 = 0;

     label4:
        $i4 = virtualinvoke r4.<android.view.MotionEvent: int getPointerCount()>();

        if i13 >= $i4 goto label7;

        if i13 == i0 goto label6;

        f0 = virtualinvoke r4.<android.view.MotionEvent: float getX(int)>(i13);

        f1 = virtualinvoke r4.<android.view.MotionEvent: float getY(int)>(i13);

        $r2 = r0.<android.widget.StackView: android.graphics.Rect mTouchRect>;

        $i5 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i7 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i8 = virtualinvoke r1.<android.view.View: int getBottom()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i5, $i6, $i7, $i8);

        $r3 = r0.<android.widget.StackView: android.graphics.Rect mTouchRect>;

        $i9 = staticinvoke <java.lang.Math: int round(float)>(f0);

        $i10 = staticinvoke <java.lang.Math: int round(float)>(f1);

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean contains(int,int)>($i9, $i10);

        if $z0 == 0 goto label6;

        f2 = virtualinvoke r4.<android.view.MotionEvent: float getX(int)>(i0);

        f3 = virtualinvoke r4.<android.view.MotionEvent: float getY(int)>(i0);

        $f5 = r0.<android.widget.StackView: float mInitialY>;

        $f4 = f1 - f3;

        $f6 = $f5 + $f4;

        r0.<android.widget.StackView: float mInitialY> = $f6;

        $f8 = r0.<android.widget.StackView: float mInitialX>;

        $f7 = f0 - f2;

        $f9 = $f8 + $f7;

        r0.<android.widget.StackView: float mInitialX> = $f9;

        $i11 = virtualinvoke r4.<android.view.MotionEvent: int getPointerId(int)>(i13);

        r0.<android.widget.StackView: int mActivePointerId> = $i11;

        r5 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if r5 == null goto label5;

        virtualinvoke r5.<android.view.VelocityTracker: void clear()>();

     label5:
        return;

     label6:
        i13 = i13 + 1;

        goto label4;

     label7:
        specialinvoke r0.<android.widget.StackView: void handlePointerUp(android.view.MotionEvent)>(r4);

     label8:
        return;
    }

    private void pacedScroll(boolean)
    {
        android.widget.StackView r0;
        boolean z0;
        long $l0, $l1, $l2, $l4;
        byte $b3;

        r0 := @this: android.widget.StackView;

        z0 := @parameter0: boolean;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<android.widget.StackView: long mLastScrollTime>;

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 100L;

        if $b3 <= 0 goto label3;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label2:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.widget.StackView: long mLastScrollTime> = $l4;

     label3:
        return;
    }

    private void setupStackSlider(android.view.View, int)
    {
        android.widget.StackView r0;
        android.view.View r1;
        int i0, $i1;
        android.widget.StackView$StackSlider $r2, $r10;
        android.widget.StackView$HolographicHelper $r3;
        android.widget.ImageView $r4, $r6, $r7, $r8, $r9;
        android.graphics.Bitmap $r5;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setMode(int)>(i0);

        if r1 == null goto label1;

        $r4 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $r3 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        $i1 = r0.<android.widget.StackView: int mResOutColor>;

        $r5 = virtualinvoke $r3.<android.widget.StackView$HolographicHelper: android.graphics.Bitmap createResOutline(android.view.View,int)>(r1, $i1);

        virtualinvoke $r4.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r5);

        $r6 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f0 = virtualinvoke r1.<android.view.View: float getRotation()>();

        virtualinvoke $r6.<android.widget.ImageView: void setRotation(float)>($f0);

        $r7 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        virtualinvoke $r7.<android.widget.ImageView: void setTranslationY(float)>($f1);

        $r8 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f2 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        virtualinvoke $r8.<android.widget.ImageView: void setTranslationX(float)>($f2);

        $r9 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r9.<android.widget.ImageView: void bringToFront()>();

        virtualinvoke r1.<android.view.View: void bringToFront()>();

        $r10 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r10.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label1:
        return;
    }

    private void transformViewAtIndex(int, android.view.View, boolean)
    {
        android.widget.StackView r0;
        android.view.View r1;
        boolean z0, $z1, $z3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23;
        android.animation.PropertyValuesHolder r2, $r7, $r9, r13;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12;
        float[] $r3, $r4, $r6, $r8;
        android.animation.PropertyValuesHolder[] $r5;
        android.widget.StackView$StackFrame $r11, $r12;
        android.animation.ObjectAnimator r14;

        r0 := @this: android.widget.StackView;

        i5 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        f2 = r0.<android.widget.StackView: float mPerspectiveShiftY>;

        f3 = r0.<android.widget.StackView: float mPerspectiveShiftX>;

        $i0 = r0.<android.widget.StackView: int mStackMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i2 = $i1 - i5;

        i6 = $i2 - 1;

        i7 = i6;

        $i3 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i4 = $i3 - 1;

        if i6 != $i4 goto label2;

        i7 = i6 - 1;

        goto label2;

     label1:
        i8 = i5 - 1;

        i7 = i8;

        if i8 >= 0 goto label2;

        i7 = i8 + 1;

     label2:
        $f4 = (float) i7;

        $f5 = $f4 * 1.0F;

        $i9 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i10 = $i9 - 2;

        $f6 = (float) $i10;

        f0 = $f5 / $f6;

        $f7 = 1.0F - f0;

        $f8 = $f7 * 0.0F;

        f1 = 1.0F - $f8;

        $f9 = f0 * f2;

        $f10 = f1 - 1.0F;

        $i11 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f11 = (float) $i11;

        $f12 = $f11 * 0.9F;

        $f13 = $f12 / 2.0F;

        $f14 = $f10 * $f13;

        f15 = $f9 + $f14;

        $f16 = 1.0F - f0;

        $f17 = $f16 * f3;

        $f18 = 1.0F - f1;

        $i12 = virtualinvoke r0.<android.widget.StackView: int getMeasuredWidth()>();

        $f19 = (float) $i12;

        $f20 = $f19 * 0.9F;

        $f21 = $f20 / 2.0F;

        $f22 = $f18 * $f21;

        f23 = $f17 + $f22;

        $z3 = r1 instanceof android.widget.StackView$StackFrame;

        if $z3 == 0 goto label3;

        $r12 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r12.<android.widget.StackView$StackFrame: boolean cancelTransformAnimator()>();

     label3:
        if z0 == 0 goto label5;

        $r3 = newarray (float)[1];

        $r3[0] = f23;

        r2 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("translationX", $r3);

        $r4 = newarray (float)[1];

        $r4[0] = f15;

        r13 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("translationY", $r4);

        $r5 = newarray (android.animation.PropertyValuesHolder)[4];

        $r6 = newarray (float)[1];

        $r6[0] = f1;

        $r7 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("scaleX", $r6);

        $r5[0] = $r7;

        $r8 = newarray (float)[1];

        $r8[0] = f1;

        $r9 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("scaleY", $r8);

        $r5[1] = $r9;

        $r5[2] = r13;

        $r5[3] = r2;

        r14 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r1, $r5);

        virtualinvoke r14.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(100L);

        $z1 = r1 instanceof android.widget.StackView$StackFrame;

        if $z1 == 0 goto label4;

        $r11 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r11.<android.widget.StackView$StackFrame: void setTransformAnimator(android.animation.ObjectAnimator)>(r14);

     label4:
        virtualinvoke r14.<android.animation.ObjectAnimator: void start()>();

        goto label6;

     label5:
        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(f23);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(f15);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(f1);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(f1);

     label6:
        return;
    }

    private void updateChildTransforms()
    {
        android.widget.StackView r0;
        android.view.View r1;
        int $i0, i1;

        r0 := @this: android.widget.StackView;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<android.widget.StackView: int getNumActiveViews()>();

        if i1 >= $i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(i1);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i1, r1, 0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void advance()
    {
        android.widget.StackView r0;
        long l0, l1, $l4;
        android.widget.Adapter $r1;
        int $i2, $i3;
        byte $b5;
        boolean $z0;

        r0 := @this: android.widget.StackView;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = r0.<android.widget.StackView: long mLastInteractionTime>;

        $r1 = r0.<android.widget.StackView: android.widget.Adapter mAdapter>;

        if $r1 != null goto label1;

        return;

     label1:
        $i2 = virtualinvoke r0.<android.widget.StackView: int getCount()>();

        if $i2 != 1 goto label2;

        $z0 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z0 == 0 goto label2;

        return;

     label2:
        $i3 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i3 != 0 goto label3;

        $l4 = l0 - l1;

        $b5 = $l4 cmp 5000L;

        if $b5 <= 0 goto label3;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label3:
        return;
    }

    void applyTransformForChildAtIndex(android.view.View, int)
    {
        android.widget.StackView r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return;
    }

    volatile android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.StackView$LayoutParams $r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.widget.StackView: android.widget.StackView$LayoutParams createOrReuseLayoutParams(android.view.View)>(r1);

        return $r2;
    }

    android.widget.StackView$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.StackView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.widget.StackView$LayoutParams $r2, r4;
        android.view.View r3;

        r0 := @this: android.widget.StackView;

        r3 := @parameter0: android.view.View;

        r1 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r1 instanceof android.widget.StackView$LayoutParams;

        if $z0 == 0 goto label1;

        r4 = (android.widget.StackView$LayoutParams) r1;

        virtualinvoke r4.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

        virtualinvoke r4.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        r4.<android.widget.StackView$LayoutParams: int width> = 0;

        r4.<android.widget.StackView$LayoutParams: int width> = 0;

        return r4;

     label1:
        $r2 = new android.widget.StackView$LayoutParams;

        specialinvoke $r2.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, r3);

        return $r2;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.StackView r0;
        android.graphics.Canvas r1;
        int i0, $i2, $i4, $i5, i6;
        android.view.View r2;
        android.graphics.Rect $r3, $r4, $r6, r8;
        android.view.ViewGroup$LayoutParams $r5;
        float $f0;
        byte $b3;
        boolean z2, $z3;
        android.widget.StackView$LayoutParams r7;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.graphics.Canvas;

        z2 = 0;

        $r3 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r3);

        i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label6;

        r2 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i6);

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.StackView$LayoutParams) $r5;

        $i2 = r7.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        if $i2 != 0 goto label2;

        $i5 = r7.<android.widget.StackView$LayoutParams: int verticalOffset>;

        if $i5 == 0 goto label3;

     label2:
        $f0 = virtualinvoke r2.<android.view.View: float getAlpha()>();

        $b3 = $f0 cmpl 0.0F;

        if $b3 == 0 goto label3;

        $i4 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i4 == 0 goto label4;

     label3:
        virtualinvoke r7.<android.widget.StackView$LayoutParams: void resetInvalidateRect()>();

     label4:
        r8 = virtualinvoke r7.<android.widget.StackView$LayoutParams: android.graphics.Rect getInvalidateRect()>();

        $z3 = virtualinvoke r8.<android.graphics.Rect: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        z2 = 1;

        $r6 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        virtualinvoke $r6.<android.graphics.Rect: void union(android.graphics.Rect)>(r8);

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        if z2 == 0 goto label7;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r4 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRectUnion(android.graphics.Rect)>($r4);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void dispatchDraw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label8;

     label7:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void dispatchDraw(android.graphics.Canvas)>(r1);

     label8:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.StackView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.StackView;

        $r1 = class "Landroid/widget/StackView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    android.widget.FrameLayout getFrameForChild()
    {
        android.widget.StackView r0;
        int i0;
        android.widget.StackView$StackFrame $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.StackView;

        $r2 = new android.widget.StackView$StackFrame;

        $r3 = r0.<android.widget.StackView: android.content.Context mContext>;

        specialinvoke $r2.<android.widget.StackView$StackFrame: void <init>(android.content.Context)>($r3);

        i0 = r0.<android.widget.StackView: int mFramePadding>;

        virtualinvoke $r2.<android.widget.StackView$StackFrame: void setPadding(int,int,int,int)>(i0, i0, i0, i0);

        return $r2;
    }

    void hideTapFeedback(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.ImageView $r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r2.<android.widget.ImageView: void setVisibility(int)>(4);

        virtualinvoke r0.<android.widget.StackView: void invalidate()>();

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        float f0;
        int $i0, $i1, $i2;
        byte $b3, $b4;
        boolean $z0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label3;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i2 == 8 goto label1;

        goto label3;

     label1:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        specialinvoke r0.<android.widget.StackView: void pacedScroll(boolean)>(0);

        return 1;

     label2:
        $b4 = f0 cmpl 0.0F;

        if $b4 <= 0 goto label3;

        specialinvoke r0.<android.widget.StackView: void pacedScroll(boolean)>(1);

        return 1;

     label3:
        $z0 = specialinvoke r0.<android.widget.AdapterViewAnimator: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.StackView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, z1;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        if $i0 <= 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(z1);

        $z0 = virtualinvoke r0.<android.widget.StackView: boolean isEnabled()>();

        if $z0 == 0 goto label6;

        $i1 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        $i2 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        $i3 = $i2 - 1;

        if $i1 >= $i3 goto label4;

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r5);

        $i5 = r0.<android.widget.StackView: int mStackMode>;

        if $i5 != 0 goto label3;

        $r7 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_PAGE_DOWN>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r7);

        goto label4;

     label3:
        $r6 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_PAGE_UP>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r6);

     label4:
        $i6 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        if $i6 <= 0 goto label6;

        $r2 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r2);

        $i4 = r0.<android.widget.StackView: int mStackMode>;

        if $i4 != 0 goto label5;

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_PAGE_UP>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        goto label6;

     label5:
        $r3 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_PAGE_DOWN>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r3);

     label6:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2, $i3, i5, i6, $i7;
        float $f0, $f1, $f2, $f3, $f4;
        boolean z0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        i5 = $i0 & 255;

        z0 = 1;

        if i5 == 0 goto label5;

        if i5 == 1 goto label4;

        if i5 == 2 goto label2;

        if i5 == 3 goto label4;

        if i5 == 6 goto label1;

        goto label6;

     label1:
        specialinvoke r0.<android.widget.StackView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label6;

     label2:
        $i3 = r0.<android.widget.StackView: int mActivePointerId>;

        i6 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i3);

        if i6 != -1 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("StackView", "Error: No data for our primary pointer.");

        return 0;

     label3:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i6);

        $f3 = r0.<android.widget.StackView: float mInitialY>;

        $f4 = $f2 - $f3;

        specialinvoke r0.<android.widget.StackView: void beginGestureIfNeeded(float)>($f4);

        goto label6;

     label4:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        goto label6;

     label5:
        $i1 = r0.<android.widget.StackView: int mActivePointerId>;

        if $i1 != -1 goto label6;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.widget.StackView: float mInitialX> = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.widget.StackView: float mInitialY> = $f1;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.StackView: int mActivePointerId> = $i2;

     label6:
        $i7 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i7 == 0 goto label7;

        goto label8;

     label7:
        z0 = 0;

     label8:
        return z0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.StackView r0;
        boolean z0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21;
        android.widget.StackView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.StackView;

        z0 := @parameter0: boolean;

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        i16 := @parameter3: int;

        i17 := @parameter4: int;

        virtualinvoke r0.<android.widget.StackView: void checkForAndHandleDataChanged()>();

        i18 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i19 = 0;

     label1:
        if i19 >= i18 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i19);

        i0 = r0.<android.widget.StackView: int mPaddingLeft>;

        i20 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i21 = r0.<android.widget.StackView: int mPaddingTop>;

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.StackView$LayoutParams) $r3;

        $i3 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i2 = r2.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        $i13 = $i3 + $i2;

        $i5 = r0.<android.widget.StackView: int mPaddingTop>;

        $i4 = r2.<android.widget.StackView$LayoutParams: int verticalOffset>;

        $i12 = $i5 + $i4;

        $i7 = r2.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        $i6 = i0 + i20;

        $i11 = $i7 + $i6;

        $i9 = r2.<android.widget.StackView$LayoutParams: int verticalOffset>;

        $i8 = i21 + i1;

        $i10 = $i9 + $i8;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i13, $i12, $i11, $i10);

        i19 = i19 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.widget.StackView: void onLayout()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.StackView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean z0;

        r0 := @this: android.widget.StackView;

        i24 := @parameter0: int;

        i25 := @parameter1: int;

        i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i24);

        i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i25);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i24);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i25);

        i26 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        i27 = 0;

        if i26 == -1 goto label01;

        $i23 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        if $i23 == -1 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if i3 != 0 goto label05;

        if z0 == 0 goto label03;

        $i18 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        $f7 = (float) $i18;

        $f6 = 1.1111112F + 1.0F;

        $f8 = $f7 * $f6;

        $i19 = staticinvoke <java.lang.Math: int round(float)>($f8);

        $i20 = r0.<android.widget.StackView: int mPaddingTop>;

        $i22 = $i19 + $i20;

        $i21 = r0.<android.widget.StackView: int mPaddingBottom>;

        i28 = $i22 + $i21;

        goto label04;

     label03:
        i28 = 0;

     label04:
        goto label09;

     label05:
        i28 = i1;

        if i3 != -2147483648 goto label09;

        if z0 == 0 goto label08;

        $i13 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        $f4 = (float) $i13;

        $f3 = 1.1111112F + 1.0F;

        $f5 = $f4 * $f3;

        $i14 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $i15 = r0.<android.widget.StackView: int mPaddingTop>;

        $i17 = $i14 + $i15;

        $i16 = r0.<android.widget.StackView: int mPaddingBottom>;

        i28 = $i17 + $i16;

        if i28 > i1 goto label06;

        goto label07;

     label06:
        i28 = i1 | 16777216;

     label07:
        goto label09;

     label08:
        i28 = 0;

     label09:
        if i2 != 0 goto label11;

        if z0 == 0 goto label10;

        $i8 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        $f1 = (float) $i8;

        $f0 = 1.0F + 1.1111112F;

        $f2 = $f1 * $f0;

        $i9 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i10 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i12 = $i9 + $i10;

        $i11 = r0.<android.widget.StackView: int mPaddingRight>;

        i27 = $i12 + $i11;

        goto label10;

     label10:
        goto label15;

     label11:
        i27 = i0;

        if i3 != -2147483648 goto label15;

        if z0 == 0 goto label14;

        $i5 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        $i4 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i7 = $i5 + $i4;

        $i6 = r0.<android.widget.StackView: int mPaddingRight>;

        i27 = $i7 + $i6;

        if i27 > i0 goto label12;

        goto label13;

     label12:
        i27 = i0 | 16777216;

     label13:
        goto label15;

     label14:
        i27 = 0;

     label15:
        virtualinvoke r0.<android.widget.StackView: void setMeasuredDimension(int,int)>(i27, i28);

        specialinvoke r0.<android.widget.StackView: void measureChildren()>();

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2, $i3, $i4, i6, i7, i8, i9, i10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20, f21, f22, f23, f24;
        android.view.VelocityTracker $r2, $r3, $r8;
        android.widget.StackView$StackSlider $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        i6 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i0 = r0.<android.widget.StackView: int mActivePointerId>;

        i7 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        if i7 != -1 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("StackView", "Error: No data for our primary pointer.");

        return 0;

     label01:
        f16 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i7);

        f17 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i7);

        $f0 = r0.<android.widget.StackView: float mInitialY>;

        f18 = f16 - $f0;

        f19 = r0.<android.widget.StackView: float mInitialX>;

        $r2 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label02;

        $r8 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker> = $r8;

     label02:
        $r3 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i8 = i6 & 255;

        if i8 == 1 goto label09;

        if i8 == 2 goto label05;

        if i8 == 3 goto label04;

        if i8 == 6 goto label03;

        goto label10;

     label03:
        specialinvoke r0.<android.widget.StackView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label10;

     label04:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        goto label10;

     label05:
        specialinvoke r0.<android.widget.StackView: void beginGestureIfNeeded(float)>(f18);

        i9 = r0.<android.widget.StackView: int mSlideAmount>;

        $f3 = f17 - f19;

        $f1 = (float) i9;

        $f2 = $f1 * 1.0F;

        f20 = $f3 / $f2;

        i10 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if i10 != 2 goto label07;

        $i3 = r0.<android.widget.StackView: int mTouchSlop>;

        $f10 = (float) $i3;

        $f11 = $f10 * 1.0F;

        $f13 = f18 - $f11;

        $f12 = (float) i9;

        $f14 = $f13 / $f12;

        f21 = $f14 * 1.0F;

        f22 = f21;

        $i4 = r0.<android.widget.StackView: int mStackMode>;

        if $i4 != 1 goto label06;

        f22 = 1.0F - f21;

     label06:
        $r6 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f15 = 1.0F - f22;

        virtualinvoke $r6.<android.widget.StackView$StackSlider: void setYProgress(float)>($f15);

        $r7 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r7.<android.widget.StackView$StackSlider: void setXProgress(float)>(f20);

        return 1;

     label07:
        if i10 != 1 goto label10;

        $i1 = r0.<android.widget.StackView: int mTouchSlop>;

        $f4 = (float) $i1;

        $f5 = $f4 * 1.0F;

        $f6 = $f5 + f18;

        $f8 = neg $f6;

        $f7 = (float) i9;

        $f9 = $f8 / $f7;

        f23 = $f9 * 1.0F;

        f24 = f23;

        $i2 = r0.<android.widget.StackView: int mStackMode>;

        if $i2 != 1 goto label08;

        f24 = 1.0F - f23;

     label08:
        $r4 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r4.<android.widget.StackView$StackSlider: void setYProgress(float)>(f24);

        $r5 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r5.<android.widget.StackView$StackSlider: void setXProgress(float)>(f20);

        return 1;

     label09:
        specialinvoke r0.<android.widget.StackView: void handlePointerUp(android.view.MotionEvent)>(r1);

     label10:
        return 1;
    }

    public boolean performAccessibilityActionInternal(int, android.os.Bundle)
    {
        android.widget.StackView r0;
        int i0, $i1, $i2;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.AdapterViewAnimator: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.widget.StackView: boolean isEnabled()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        if i0 == 4096 goto label9;

        if i0 == 8192 goto label8;

        tableswitch(i0)
        {
            case 16908358: goto label6;
            case 16908359: goto label4;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        $i1 = r0.<android.widget.StackView: int mStackMode>;

        if $i1 != 0 goto label5;

        $z5 = specialinvoke r0.<android.widget.StackView: boolean goForward()>();

        return $z5;

     label5:
        $z4 = specialinvoke r0.<android.widget.StackView: boolean goBackward()>();

        return $z4;

     label6:
        $i2 = r0.<android.widget.StackView: int mStackMode>;

        if $i2 != 0 goto label7;

        $z7 = specialinvoke r0.<android.widget.StackView: boolean goBackward()>();

        return $z7;

     label7:
        $z6 = specialinvoke r0.<android.widget.StackView: boolean goForward()>();

        return $z6;

     label8:
        $z3 = specialinvoke r0.<android.widget.StackView: boolean goBackward()>();

        return $z3;

     label9:
        $z2 = specialinvoke r0.<android.widget.StackView: boolean goForward()>();

        return $z2;
    }

    public void showNext()
    {
        android.widget.StackView r0;
        android.view.View r1;
        int $i0;
        boolean $z0;
        android.widget.StackView$StackSlider $r2, $r3;

        r0 := @this: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<android.widget.StackView: boolean mTransitionIsSetup>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(1);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, 0);

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setYProgress(float)>(0.0F);

        $r3 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r3.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label2:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void showNext()>();

        return;
    }

    void showOnly(int, boolean)
    {
        android.widget.StackView r0;
        boolean z0;
        int i0, $i1, $i2, i3, i4;
        java.util.HashMap $r1, $r5;
        java.lang.Integer $r2, $r6;
        java.lang.Object $r3, $r7;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r4, $r8;
        android.view.View r9;
        android.widget.ImageView r10;

        r0 := @this: android.widget.StackView;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>(i3, z0);

        i4 = r0.<android.widget.StackView: int mCurrentWindowEnd>;

     label1:
        $i1 = r0.<android.widget.StackView: int mCurrentWindowStart>;

        if i4 < $i1 goto label3;

        $i2 = virtualinvoke r0.<android.widget.StackView: int getWindowSize()>();

        i0 = virtualinvoke r0.<android.widget.StackView: int modulo(int,int)>(i4, $i2);

        $r1 = r0.<android.widget.StackView: java.util.HashMap mViewsMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r3;

        if $r4 == null goto label2;

        $r5 = r0.<android.widget.StackView: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r7;

        r9 = $r8.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        if r9 == null goto label2;

        virtualinvoke r9.<android.view.View: void bringToFront()>();

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        r10 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        if r10 == null goto label4;

        virtualinvoke r10.<android.widget.ImageView: void bringToFront()>();

     label4:
        r0.<android.widget.StackView: boolean mTransitionIsSetup> = 0;

        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 0;

        return;
    }

    public void showPrevious()
    {
        android.widget.StackView r0;
        android.view.View r1;
        int $i0;
        boolean $z0;
        android.widget.StackView$StackSlider $r2, $r3;

        r0 := @this: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<android.widget.StackView: boolean mTransitionIsSetup>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(0);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, 0);

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setYProgress(float)>(1.0F);

        $r3 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r3.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label2:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void showPrevious()>();

        return;
    }

    void showTapFeedback(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.ImageView $r2, $r3;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.widget.StackView: void updateClickFeedback()>();

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r2.<android.widget.ImageView: void setVisibility(int)>(0);

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r3.<android.widget.ImageView: void bringToFront()>();

        virtualinvoke r0.<android.widget.StackView: void invalidate()>();

        return;
    }

    void transformViewForTransition(int, int, android.view.View, boolean)
    {
        android.widget.StackView r0;
        int i0, $i1, $i3, $i5, $i6, i7, i8, i9;
        android.view.View r1;
        boolean z0;
        android.widget.StackView$1 $r2;
        android.view.ViewGroup$LayoutParams $r3, $r27;
        android.widget.StackView$StackFrame $r4, $r14, $r15, $r25, $r26;
        float $f0, $f1, $f2, $f3;
        android.widget.StackView$StackSlider $r5, $r6, $r7, $r16, $r17, $r18;
        float[] $r8, $r10, $r19, $r21;
        android.animation.PropertyValuesHolder[] $r9, $r20;
        android.animation.PropertyValuesHolder $r11, $r22, r30, r33;
        long $l2, $l4;
        android.view.animation.LinearInterpolator $r13, $r24;
        android.widget.StackView$LayoutParams r28, r35;
        android.animation.ObjectAnimator r31, r34;

        r0 := @this: android.widget.StackView;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label01;

        $r26 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r26.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        virtualinvoke r1.<android.view.View: void setRotationX(float)>(0.0F);

        $r27 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r28 = (android.widget.StackView$LayoutParams) $r27;

        virtualinvoke r28.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        virtualinvoke r28.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

     label01:
        if i7 != -1 goto label02;

        $i5 = virtualinvoke r0.<android.widget.StackView: int getNumActiveViews()>();

        $i6 = $i5 - 1;

        if i0 != $i6 goto label02;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i0, r1, 0);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        goto label14;

     label02:
        if i7 != 0 goto label05;

        if i0 != 1 goto label05;

        $r15 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r15.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        $r16 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i3 = r0.<android.widget.StackView: int mYVelocity>;

        $f2 = (float) $i3;

        $f3 = virtualinvoke $r16.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition(float)>($f2);

        i8 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $r17 = new android.widget.StackView$StackSlider;

        $r18 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r17.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r18);

        virtualinvoke $r17.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        if z0 == 0 goto label03;

        $r19 = newarray (float)[1];

        $r19[0] = 0.0F;

        r30 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r19);

        $r20 = newarray (android.animation.PropertyValuesHolder)[2];

        $r21 = newarray (float)[1];

        $r21[0] = 0.0F;

        $r22 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r21);

        $r20[0] = $r22;

        $r20[1] = r30;

        r31 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r17, $r20);

        $l4 = (long) i8;

        virtualinvoke r31.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l4);

        $r24 = new android.view.animation.LinearInterpolator;

        specialinvoke $r24.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r31.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r24);

        $r25 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r25.<android.widget.StackView$StackFrame: void setSliderAnimator(android.animation.ObjectAnimator)>(r31);

        virtualinvoke r31.<android.animation.ObjectAnimator: void start()>();

        goto label04;

     label03:
        virtualinvoke $r17.<android.widget.StackView$StackSlider: void setYProgress(float)>(0.0F);

        virtualinvoke $r17.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label04:
        goto label14;

     label05:
        if i7 != 1 goto label08;

        if i0 != 0 goto label08;

        $r4 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r4.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        $r5 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i1 = r0.<android.widget.StackView: int mYVelocity>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r5.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition(float)>($f0);

        i9 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $r6 = new android.widget.StackView$StackSlider;

        $r7 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r6.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r7);

        virtualinvoke $r6.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        if z0 == 0 goto label06;

        $r8 = newarray (float)[1];

        $r8[0] = 1.0F;

        r33 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r8);

        $r9 = newarray (android.animation.PropertyValuesHolder)[2];

        $r10 = newarray (float)[1];

        $r10[0] = 0.0F;

        $r11 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r10);

        $r9[0] = $r11;

        $r9[1] = r33;

        r34 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>($r6, $r9);

        $l2 = (long) i9;

        virtualinvoke r34.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r13 = new android.view.animation.LinearInterpolator;

        specialinvoke $r13.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r34.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r13);

        $r14 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r14.<android.widget.StackView$StackFrame: void setSliderAnimator(android.animation.ObjectAnimator)>(r34);

        virtualinvoke r34.<android.animation.ObjectAnimator: void start()>();

        goto label07;

     label06:
        virtualinvoke $r6.<android.widget.StackView$StackSlider: void setYProgress(float)>(1.0F);

        virtualinvoke $r6.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label07:
        goto label14;

     label08:
        if i0 != 0 goto label09;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(4);

        goto label14;

     label09:
        if i7 == 0 goto label10;

        if i7 != 1 goto label11;

     label10:
        if i0 <= 1 goto label11;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setRotationX(float)>(0.0F);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r35 = (android.widget.StackView$LayoutParams) $r3;

        virtualinvoke r35.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        virtualinvoke r35.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

        goto label14;

     label11:
        if i7 != -1 goto label12;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        goto label14;

     label12:
        if i0 != -1 goto label14;

        if z0 == 0 goto label13;

        $r2 = new android.widget.StackView$1;

        specialinvoke $r2.<android.widget.StackView$1: void <init>(android.widget.StackView,android.view.View)>(r0, r1);

        virtualinvoke r0.<android.widget.StackView: boolean postDelayed(java.lang.Runnable,long)>($r2, 100L);

        goto label14;

     label13:
        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

     label14:
        if i0 == -1 goto label15;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i0, r1, z0);

     label15:
        return;
    }

    void updateClickFeedback()
    {
        android.widget.StackView r0;
        android.view.View r1;
        boolean $z0;
        int $i0;
        android.widget.StackView$HolographicHelper $r2;
        android.widget.ImageView $r3, $r5, $r6;
        android.graphics.Bitmap $r4;
        float $f0, $f1;

        r0 := @this: android.widget.StackView;

        $z0 = r0.<android.widget.StackView: boolean mClickFeedbackIsValid>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(1);

        if r1 == null goto label1;

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $r2 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        $i0 = r0.<android.widget.StackView: int mClickColor>;

        $r4 = virtualinvoke $r2.<android.widget.StackView$HolographicHelper: android.graphics.Bitmap createClickOutline(android.view.View,int)>(r1, $i0);

        virtualinvoke $r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r4);

        $r5 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $f0 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        virtualinvoke $r5.<android.widget.ImageView: void setTranslationX(float)>($f0);

        $r6 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        virtualinvoke $r6.<android.widget.ImageView: void setTranslationY(float)>($f1);

     label1:
        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.widget.StackView: float SWIPE_THRESHOLD_RATIO> = 0.2F;

        <android.widget.StackView: int STACK_RELAYOUT_DURATION> = 100;

        <android.widget.StackView: float SLIDE_UP_RATIO> = 0.7F;

        <android.widget.StackView: float PERSPECTIVE_SHIFT_FACTOR_Y> = 0.1F;

        <android.widget.StackView: float PERSPECTIVE_SHIFT_FACTOR_X> = 0.1F;

        <android.widget.StackView: float PERSPECTIVE_SCALE_FACTOR> = 0.0F;

        <android.widget.StackView: int NUM_ACTIVE_VIEWS> = 5;

        <android.widget.StackView: long MIN_TIME_BETWEEN_SCROLLS> = 100L;

        <android.widget.StackView: int MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE> = 5000;

        <android.widget.StackView: int MINIMUM_ANIMATION_DURATION> = 50;

        <android.widget.StackView: int ITEMS_SLIDE_UP> = 0;

        <android.widget.StackView: int ITEMS_SLIDE_DOWN> = 1;

        <android.widget.StackView: int INVALID_POINTER> = -1;

        <android.widget.StackView: int GESTURE_SLIDE_UP> = 1;

        <android.widget.StackView: int GESTURE_SLIDE_DOWN> = 2;

        <android.widget.StackView: int GESTURE_NONE> = 0;

        <android.widget.StackView: int FRAME_PADDING> = 4;

        <android.widget.StackView: int DEFAULT_ANIMATION_DURATION> = 400;

        return;
    }
}
