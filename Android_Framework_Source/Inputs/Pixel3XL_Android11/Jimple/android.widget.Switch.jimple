public class android.widget.Switch extends android.widget.CompoundButton
{
    private static final int[] CHECKED_STATE_SET;
    private static final int MONOSPACE;
    private static final int SANS;
    private static final int SERIF;
    private static final int THUMB_ANIMATION_DURATION;
    private static final android.util.FloatProperty THUMB_POS;
    private static final int TOUCH_MODE_DOWN;
    private static final int TOUCH_MODE_DRAGGING;
    private static final int TOUCH_MODE_IDLE;
    private boolean mHasThumbTint;
    private boolean mHasThumbTintMode;
    private boolean mHasTrackTint;
    private boolean mHasTrackTintMode;
    private int mMinFlingVelocity;
    private android.text.Layout mOffLayout;
    private android.text.Layout mOnLayout;
    private android.animation.ObjectAnimator mPositionAnimator;
    private boolean mShowText;
    private boolean mSplitTrack;
    private int mSwitchBottom;
    private int mSwitchHeight;
    private int mSwitchLeft;
    private int mSwitchMinWidth;
    private int mSwitchPadding;
    private int mSwitchRight;
    private int mSwitchTop;
    private android.text.method.TransformationMethod2 mSwitchTransformationMethod;
    private int mSwitchWidth;
    private final android.graphics.Rect mTempRect;
    private android.content.res.ColorStateList mTextColors;
    private java.lang.CharSequence mTextOff;
    private java.lang.CharSequence mTextOn;
    private android.text.TextPaint mTextPaint;
    private android.graphics.BlendMode mThumbBlendMode;
    private android.graphics.drawable.Drawable mThumbDrawable;
    private float mThumbPosition;
    private int mThumbTextPadding;
    private android.content.res.ColorStateList mThumbTintList;
    private int mThumbWidth;
    private int mTouchMode;
    private int mTouchSlop;
    private float mTouchX;
    private float mTouchY;
    private android.graphics.BlendMode mTrackBlendMode;
    private android.graphics.drawable.Drawable mTrackDrawable;
    private android.content.res.ColorStateList mTrackTintList;
    private boolean mUseFallbackLineSpacing;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int[] $r0;
        android.widget.Switch$1 $r1;

        <android.widget.Switch: int TOUCH_MODE_IDLE> = 0;

        <android.widget.Switch: int TOUCH_MODE_DRAGGING> = 2;

        <android.widget.Switch: int TOUCH_MODE_DOWN> = 1;

        <android.widget.Switch: int THUMB_ANIMATION_DURATION> = 250;

        <android.widget.Switch: int SERIF> = 2;

        <android.widget.Switch: int SANS> = 1;

        <android.widget.Switch: int MONOSPACE> = 3;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.widget.Switch: int[] CHECKED_STATE_SET> = $r0;

        $r1 = new android.widget.Switch$1;

        specialinvoke $r1.<android.widget.Switch$1: void <init>(java.lang.String)>("thumbPos");

        <android.widget.Switch: android.util.FloatProperty THUMB_POS> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.Switch r0;
        android.content.Context r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843839);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Switch r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.view.VelocityTracker $r1;
        android.graphics.Rect $r2;
        android.text.TextPaint $r3, $r4, $r6;
        android.util.DisplayMetrics $r5;
        float $f0, $f1;
        android.content.res.CompatibilityInfo $r7;
        int[] $r8, $r9;
        java.lang.CharSequence $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.content.pm.ApplicationInfo $r12;
        android.graphics.BlendMode $r13, $r14, r22, r24;
        android.content.Context r15;
        android.util.AttributeSet r16;
        android.content.res.Resources r17;
        android.content.res.TypedArray r18;
        android.graphics.drawable.Drawable r19, r20;
        android.content.res.ColorStateList r21, r23;
        android.view.ViewConfiguration r25;

        r0 := @this: android.widget.Switch;

        r15 := @parameter0: android.content.Context;

        r16 := @parameter1: android.util.AttributeSet;

        i9 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r15, r16, i9, i0);

        r0.<android.widget.Switch: android.content.res.ColorStateList mThumbTintList> = null;

        r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode> = null;

        r0.<android.widget.Switch: boolean mHasThumbTint> = 0;

        r0.<android.widget.Switch: boolean mHasThumbTintMode> = 0;

        r0.<android.widget.Switch: android.content.res.ColorStateList mTrackTintList> = null;

        r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode> = null;

        r0.<android.widget.Switch: boolean mHasTrackTint> = 0;

        r0.<android.widget.Switch: boolean mHasTrackTintMode> = 0;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.Switch: android.graphics.Rect mTempRect> = $r2;

        $r3 = new android.text.TextPaint;

        specialinvoke $r3.<android.text.TextPaint: void <init>(int)>(1);

        r0.<android.widget.Switch: android.text.TextPaint mTextPaint> = $r3;

        r17 = virtualinvoke r0.<android.widget.Switch: android.content.res.Resources getResources()>();

        $r4 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r5 = virtualinvoke r17.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $r4.<android.text.TextPaint: float density> = $f0;

        $r6 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r7 = virtualinvoke r17.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $f1 = $r7.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r6.<android.text.TextPaint: void setCompatibilityScaling(float)>($f1);

        $r8 = <com.android.internal.R$styleable: int[] Switch>;

        r18 = virtualinvoke r15.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r16, $r8, i9, i0);

        $r9 = <com.android.internal.R$styleable: int[] Switch>;

        virtualinvoke r0.<android.widget.Switch: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r15, $r9, r16, r18, i9, i0);

        r19 = virtualinvoke r18.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable> = r19;

        if r19 == null goto label01;

        virtualinvoke r19.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label01:
        r20 = virtualinvoke r18.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable> = r20;

        if r20 == null goto label02;

        virtualinvoke r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label02:
        $r10 = virtualinvoke r18.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        r0.<android.widget.Switch: java.lang.CharSequence mTextOn> = $r10;

        $r11 = virtualinvoke r18.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(1);

        r0.<android.widget.Switch: java.lang.CharSequence mTextOff> = $r11;

        $z0 = virtualinvoke r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 1);

        r0.<android.widget.Switch: boolean mShowText> = $z0;

        $i1 = virtualinvoke r18.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, 0);

        r0.<android.widget.Switch: int mThumbTextPadding> = $i1;

        $i2 = virtualinvoke r18.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(5, 0);

        r0.<android.widget.Switch: int mSwitchMinWidth> = $i2;

        $i3 = virtualinvoke r18.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, 0);

        r0.<android.widget.Switch: int mSwitchPadding> = $i3;

        $z1 = virtualinvoke r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        r0.<android.widget.Switch: boolean mSplitTrack> = $z1;

        $r12 = virtualinvoke r15.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i4 = $r12.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 28 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        r0.<android.widget.Switch: boolean mUseFallbackLineSpacing> = z7;

        r21 = virtualinvoke r18.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(9);

        if r21 == null goto label05;

        r0.<android.widget.Switch: android.content.res.ColorStateList mThumbTintList> = r21;

        r0.<android.widget.Switch: boolean mHasThumbTint> = 1;

     label05:
        $i5 = virtualinvoke r18.<android.content.res.TypedArray: int getInt(int,int)>(10, -1);

        r22 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>($i5, null);

        $r13 = r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode>;

        if $r13 == r22 goto label06;

        r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode> = r22;

        r0.<android.widget.Switch: boolean mHasThumbTintMode> = 1;

     label06:
        $z2 = r0.<android.widget.Switch: boolean mHasThumbTint>;

        if $z2 != 0 goto label07;

        $z6 = r0.<android.widget.Switch: boolean mHasThumbTintMode>;

        if $z6 == 0 goto label08;

     label07:
        specialinvoke r0.<android.widget.Switch: void applyThumbTint()>();

     label08:
        r23 = virtualinvoke r18.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(12);

        if r23 == null goto label09;

        r0.<android.widget.Switch: android.content.res.ColorStateList mTrackTintList> = r23;

        r0.<android.widget.Switch: boolean mHasTrackTint> = 1;

     label09:
        $i6 = virtualinvoke r18.<android.content.res.TypedArray: int getInt(int,int)>(13, -1);

        r24 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>($i6, null);

        $r14 = r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode>;

        if $r14 == r24 goto label10;

        r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode> = r24;

        r0.<android.widget.Switch: boolean mHasTrackTintMode> = 1;

     label10:
        $z3 = r0.<android.widget.Switch: boolean mHasTrackTint>;

        if $z3 != 0 goto label11;

        $z5 = r0.<android.widget.Switch: boolean mHasTrackTintMode>;

        if $z5 == 0 goto label12;

     label11:
        specialinvoke r0.<android.widget.Switch: void applyTrackTint()>();

     label12:
        i10 = virtualinvoke r18.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        if i10 == 0 goto label13;

        virtualinvoke r0.<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>(r15, i10);

     label13:
        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        r25 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r15);

        $i7 = virtualinvoke r25.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.Switch: int mTouchSlop> = $i7;

        $i8 = virtualinvoke r25.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.Switch: int mMinFlingVelocity> = $i8;

        virtualinvoke r0.<android.widget.Switch: void refreshDrawableState()>();

        virtualinvoke r0.<android.widget.Switch: void setDefaultStateDescritption()>();

        $z4 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>($z4);

        return;
    }

    static float access$000(android.widget.Switch)
    {
        android.widget.Switch r0;
        float $f0;

        r0 := @parameter0: android.widget.Switch;

        $f0 = r0.<android.widget.Switch: float mThumbPosition>;

        return $f0;
    }

    static void access$100(android.widget.Switch, float)
    {
        android.widget.Switch r0;
        float f0;

        r0 := @parameter0: android.widget.Switch;

        f0 := @parameter1: float;

        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>(f0);

        return;
    }

    private void animateThumbToCheckedState(boolean)
    {
        android.widget.Switch r0;
        boolean z0;
        android.animation.ObjectAnimator r1, $r5, $r6;
        float[] $r2;
        android.util.FloatProperty $r3;
        float f0;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        f0 = 1.0F;

        goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r3 = <android.widget.Switch: android.util.FloatProperty THUMB_POS>;

        $r2 = newarray (float)[1];

        $r2[0] = f0;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r3, $r2);

        r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator> = r1;

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(250L);

        $r5 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void setAutoCancel(boolean)>(1);

        $r6 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r6.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    private void applyThumbTint()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z5;
        int[] $r6;
        android.graphics.BlendMode $r7;
        android.content.res.ColorStateList $r9;

        r0 := @this: android.widget.Switch;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label4;

        $z0 = r0.<android.widget.Switch: boolean mHasThumbTint>;

        if $z0 != 0 goto label1;

        $z5 = r0.<android.widget.Switch: boolean mHasThumbTintMode>;

        if $z5 == 0 goto label4;

     label1:
        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable> = r1;

        $z1 = r0.<android.widget.Switch: boolean mHasThumbTint>;

        if $z1 == 0 goto label2;

        $r9 = r0.<android.widget.Switch: android.content.res.ColorStateList mThumbTintList>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r9);

     label2:
        $z2 = r0.<android.widget.Switch: boolean mHasThumbTintMode>;

        if $z2 == 0 goto label3;

        $r8 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r7 = r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r7);

     label3:
        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $z3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label4;

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r6 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

     label4:
        return;
    }

    private void applyTrackTint()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z5;
        int[] $r6;
        android.graphics.BlendMode $r7;
        android.content.res.ColorStateList $r9;

        r0 := @this: android.widget.Switch;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label4;

        $z0 = r0.<android.widget.Switch: boolean mHasTrackTint>;

        if $z0 != 0 goto label1;

        $z5 = r0.<android.widget.Switch: boolean mHasTrackTintMode>;

        if $z5 == 0 goto label4;

     label1:
        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        r1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable> = r1;

        $z1 = r0.<android.widget.Switch: boolean mHasTrackTint>;

        if $z1 == 0 goto label2;

        $r9 = r0.<android.widget.Switch: android.content.res.ColorStateList mTrackTintList>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r9);

     label2:
        $z2 = r0.<android.widget.Switch: boolean mHasTrackTintMode>;

        if $z2 == 0 goto label3;

        $r8 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $r7 = r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r7);

     label3:
        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $z3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label4;

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $r6 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

     label4:
        return;
    }

    private void cancelPositionAnimator()
    {
        android.widget.Switch r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.widget.Switch;

        r1 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        return;
    }

    private void cancelSuperTouch(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1, r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        virtualinvoke r2.<android.view.MotionEvent: void setAction(int)>(3);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    private boolean getTargetCheckedState()
    {
        android.widget.Switch r0;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: android.widget.Switch;

        $f0 = r0.<android.widget.Switch: float mThumbPosition>;

        $b0 = $f0 cmpl 0.5F;

        if $b0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int getThumbOffset()
    {
        android.widget.Switch r0;
        boolean $z0;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        $f3 = r0.<android.widget.Switch: float mThumbPosition>;

        f4 = 1.0F - $f3;

        goto label2;

     label1:
        f4 = r0.<android.widget.Switch: float mThumbPosition>;

     label2:
        $i0 = specialinvoke r0.<android.widget.Switch: int getThumbScrollRange()>();

        $f0 = (float) $i0;

        $f1 = $f0 * f4;

        $f2 = $f1 + 0.5F;

        $i1 = (int) $f2;

        return $i1;
    }

    private int getThumbScrollRange()
    {
        android.widget.Switch r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable r2, r3;
        android.graphics.Insets r4;

        r0 := @this: android.widget.Switch;

        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r2 == null goto label3;

        r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        $i1 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i0 = r0.<android.widget.Switch: int mThumbWidth>;

        $i3 = $i1 - $i0;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i5 = $i3 - $i2;

        $i4 = r1.<android.graphics.Rect: int right>;

        $i7 = $i5 - $i4;

        $i6 = r4.<android.graphics.Insets: int left>;

        $i9 = $i7 - $i6;

        $i8 = r4.<android.graphics.Insets: int right>;

        $i10 = $i9 - $i8;

        return $i10;

     label3:
        return 0;
    }

    private boolean hitThumb(float, float)
    {
        android.widget.Switch r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable r1, $r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i17, i19, i20;
        android.graphics.Rect $r2, $r4, $r5;
        byte $b9, $b14, $b16, $b18;
        boolean z2;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r1 != null goto label1;

        return 0;

     label1:
        i19 = specialinvoke r0.<android.widget.Switch: int getThumbOffset()>();

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r2 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        i0 = r0.<android.widget.Switch: int mSwitchTop>;

        i1 = r0.<android.widget.Switch: int mTouchSlop>;

        $i7 = r0.<android.widget.Switch: int mSwitchLeft>;

        $i8 = $i7 + i19;

        i2 = $i8 - i1;

        i20 = r0.<android.widget.Switch: int mThumbWidth>;

        $r4 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        i3 = $r4.<android.graphics.Rect: int left>;

        $r5 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        i4 = $r5.<android.graphics.Rect: int right>;

        i5 = r0.<android.widget.Switch: int mTouchSlop>;

        i6 = r0.<android.widget.Switch: int mSwitchBottom>;

        z2 = 0;

        $f2 = (float) i2;

        $b9 = f0 cmpl $f2;

        if $b9 <= 0 goto label2;

        z2 = 0;

        $i10 = i20 + i2;

        $i11 = $i10 + i3;

        $i12 = $i11 + i4;

        $i13 = $i12 + i5;

        $f3 = (float) $i13;

        $b14 = f0 cmpg $f3;

        if $b14 >= 0 goto label2;

        z2 = 0;

        $i15 = i0 - i1;

        $f4 = (float) $i15;

        $b16 = f1 cmpl $f4;

        if $b16 <= 0 goto label2;

        z2 = 0;

        $i17 = i6 + i5;

        $f5 = (float) $i17;

        $b18 = f1 cmpg $f5;

        if $b18 >= 0 goto label2;

        z2 = 1;

     label2:
        return z2;
    }

    private android.text.Layout makeLayout(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        android.text.method.TransformationMethod2 r1;
        int i0, $i1, $i2;
        android.text.TextPaint $r2, $r4;
        android.text.TextDirectionHeuristic $r3;
        float $f0;
        double $d0, $d1;
        android.text.StaticLayout$Builder $r5, $r6;
        boolean $z0;
        android.text.StaticLayout $r7;
        java.lang.CharSequence r8;

        r0 := @this: android.widget.Switch;

        r8 := @parameter0: java.lang.CharSequence;

        r1 = r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod>;

        if r1 == null goto label1;

        r8 = interfaceinvoke r1.<android.text.method.TransformationMethod2: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r8, r0);

        goto label1;

     label1:
        $i1 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke r0.<android.widget.Switch: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic)>(r8, 0, $i1, $r2, $r3);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d1;

        $i2 = interfaceinvoke r8.<java.lang.CharSequence: int length()>();

        $r4 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r5 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r8, 0, $i2, $r4, i0);

        $z0 = r0.<android.widget.Switch: boolean mUseFallbackLineSpacing>;

        $r6 = virtualinvoke $r5.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z0);

        $r7 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        return $r7;
    }

    private void setSwitchTypefaceByIndex(int, int)
    {
        android.widget.Switch r0;
        int i0, i1;
        android.graphics.Typeface r1;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = null;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label4;

     label1:
        r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        goto label4;

     label2:
        r1 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label4;

     label3:
        r1 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

     label4:
        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>(r1, i1);

        return;
    }

    private void setThumbPosition(float)
    {
        android.widget.Switch r0;
        float f0;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        r0.<android.widget.Switch: float mThumbPosition> = f0;

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

        return;
    }

    private void stopDrag(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, z3, z4;
        float f0, $f1, $f2;
        android.view.VelocityTracker $r2, $r3;
        int $i0, i4;
        byte $b1, $b2, $b3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<android.widget.Switch: int mTouchMode> = 0;

        i4 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z3 = 1;

        if i4 != 1 goto label01;

        $z2 = virtualinvoke r0.<android.widget.Switch: boolean isEnabled()>();

        if $z2 == 0 goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if z4 == 0 goto label09;

        $r2 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r3 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getXVelocity()>();

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i0 = r0.<android.widget.Switch: int mMinFlingVelocity>;

        $f2 = (float) $i0;

        $b1 = $f1 cmpl $f2;

        if $b1 <= 0 goto label07;

        $z1 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z1 == 0 goto label03;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label05;

        goto label04;

     label03:
        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label05;

     label04:
        goto label06;

     label05:
        z3 = 0;

     label06:
        goto label08;

     label07:
        z3 = specialinvoke r0.<android.widget.Switch: boolean getTargetCheckedState()>();

     label08:
        goto label10;

     label09:
        z3 = z0;

     label10:
        if z3 == z0 goto label11;

        virtualinvoke r0.<android.widget.Switch: void playSoundEffect(int)>(0);

     label11:
        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>(z3);

        specialinvoke r0.<android.widget.Switch: void cancelSuperTouch(android.view.MotionEvent)>(r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.Switch r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i35, i36, i37, i38, i39, i40, i41, i42, i43;
        android.graphics.drawable.Drawable r3, $r4, r6, $r8, r9, r10;
        android.graphics.Insets $r5, r7;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        i30 = r0.<android.widget.Switch: int mSwitchLeft>;

        i0 = r0.<android.widget.Switch: int mSwitchTop>;

        i31 = r0.<android.widget.Switch: int mSwitchRight>;

        i1 = r0.<android.widget.Switch: int mSwitchBottom>;

        $i4 = specialinvoke r0.<android.widget.Switch: int getThumbOffset()>();

        i32 = $i4 + i30;

        r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r6 == null goto label1;

        r7 = virtualinvoke r6.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        r7 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        i33 = i32;

        if r3 == null goto label7;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i9 = r2.<android.graphics.Rect: int left>;

        i2 = i32 + $i9;

        i35 = i30;

        i36 = i0;

        i37 = i31;

        i38 = i1;

        $r5 = <android.graphics.Insets: android.graphics.Insets NONE>;

        if r7 == $r5 goto label6;

        i39 = i30;

        $i11 = r7.<android.graphics.Insets: int left>;

        $i10 = r2.<android.graphics.Rect: int left>;

        if $i11 <= $i10 goto label3;

        $i28 = r7.<android.graphics.Insets: int left>;

        $i27 = r2.<android.graphics.Rect: int left>;

        $i29 = $i28 - $i27;

        i39 = i30 + $i29;

     label3:
        i40 = i0;

        $i13 = r7.<android.graphics.Insets: int top>;

        $i12 = r2.<android.graphics.Rect: int top>;

        if $i13 <= $i12 goto label4;

        $i25 = r7.<android.graphics.Insets: int top>;

        $i24 = r2.<android.graphics.Rect: int top>;

        $i26 = $i25 - $i24;

        i40 = i0 + $i26;

     label4:
        i41 = i31;

        $i15 = r7.<android.graphics.Insets: int right>;

        $i14 = r2.<android.graphics.Rect: int right>;

        if $i15 <= $i14 goto label5;

        $i22 = r7.<android.graphics.Insets: int right>;

        $i21 = r2.<android.graphics.Rect: int right>;

        $i23 = $i22 - $i21;

        i41 = i31 - $i23;

     label5:
        i35 = i39;

        i36 = i40;

        i37 = i41;

        i38 = i1;

        $i17 = r7.<android.graphics.Insets: int bottom>;

        $i16 = r2.<android.graphics.Rect: int bottom>;

        if $i17 <= $i16 goto label6;

        $i19 = r7.<android.graphics.Insets: int bottom>;

        $i18 = r2.<android.graphics.Rect: int bottom>;

        $i20 = $i19 - $i18;

        i38 = i1 - $i20;

        i37 = i41;

        i36 = i40;

        i35 = i39;

     label6:
        $r8 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i35, i36, i37, i38);

        i33 = i2;

     label7:
        r9 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r9 == null goto label8;

        virtualinvoke r9.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i5 = r2.<android.graphics.Rect: int left>;

        i42 = i33 - $i5;

        $i6 = r0.<android.widget.Switch: int mThumbWidth>;

        $i8 = $i6 + i33;

        $i7 = r2.<android.graphics.Rect: int right>;

        i43 = $i8 + $i7;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i42, i0, i43, i1);

        r10 = virtualinvoke r0.<android.widget.Switch: android.graphics.drawable.Drawable getBackground()>();

        if r10 == null goto label8;

        virtualinvoke r10.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i42, i0, i43, i1);

     label8:
        specialinvoke r0.<android.widget.CompoundButton: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.Switch r0;
        float f0, f1;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>(f0, f1);

        r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label2:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.Switch r0;
        int[] r1;
        boolean $z0, $z1, $z2, $z3, z5, z6;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.widget.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void drawableStateChanged()>();

        r1 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        z5 = 0;

        if r2 == null goto label1;

        z5 = 0;

        $z2 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        z5 = 0 | $z3;

     label1:
        r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        z6 = z5;

        if r3 == null goto label2;

        z6 = z5;

        $z0 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        z6 = z5 | $z1;

     label2:
        if z6 == 0 goto label3;

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

     label3:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.Switch r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.Switch;

        $r1 = class "Landroid/widget/Switch;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    protected java.lang.CharSequence getButtonStateDescription()
    {
        android.widget.Switch r0;
        boolean $z0;
        android.content.res.Resources $r1, $r2;
        java.lang.CharSequence r3, r5, r7, r8;
        java.lang.Object r4, r6;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label2;

        r3 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        r4 = r3;

        if r3 != null goto label1;

        $r2 = virtualinvoke r0.<android.widget.Switch: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039791);

     label1:
        r7 = (java.lang.CharSequence) r4;

        return r7;

     label2:
        r5 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

        r6 = r5;

        if r5 != null goto label3;

        $r1 = virtualinvoke r0.<android.widget.Switch: android.content.res.Resources getResources()>();

        r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(17039790);

     label3:
        r8 = (java.lang.CharSequence) r6;

        return r8;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.Switch r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 != 0 goto label1;

        $i4 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        return $i4;

     label1:
        $i1 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        $i2 = r0.<android.widget.Switch: int mSwitchWidth>;

        i0 = $i1 + $i2;

        i5 = i0;

        $r1 = virtualinvoke r0.<android.widget.Switch: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label2;

        $i3 = r0.<android.widget.Switch: int mSwitchPadding>;

        i5 = i0 + $i3;

     label2:
        return i5;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.Switch r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        $i4 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        return $i4;

     label1:
        $i1 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        $i2 = r0.<android.widget.Switch: int mSwitchWidth>;

        i0 = $i1 + $i2;

        i5 = i0;

        $r1 = virtualinvoke r0.<android.widget.Switch: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label2;

        $i3 = r0.<android.widget.Switch: int mSwitchPadding>;

        i5 = i0 + $i3;

     label2:
        return i5;
    }

    public boolean getShowText()
    {
        android.widget.Switch r0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        $z0 = r0.<android.widget.Switch: boolean mShowText>;

        return $z0;
    }

    public boolean getSplitTrack()
    {
        android.widget.Switch r0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        $z0 = r0.<android.widget.Switch: boolean mSplitTrack>;

        return $z0;
    }

    public int getSwitchMinWidth()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mSwitchMinWidth>;

        return $i0;
    }

    public int getSwitchPadding()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mSwitchPadding>;

        return $i0;
    }

    public java.lang.CharSequence getTextOff()
    {
        android.widget.Switch r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

        return $r1;
    }

    public java.lang.CharSequence getTextOn()
    {
        android.widget.Switch r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getThumbDrawable()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        return $r1;
    }

    public int getThumbTextPadding()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mThumbTextPadding>;

        return $i0;
    }

    public android.graphics.BlendMode getThumbTintBlendMode()
    {
        android.widget.Switch r0;
        android.graphics.BlendMode $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode>;

        return $r1;
    }

    public android.content.res.ColorStateList getThumbTintList()
    {
        android.widget.Switch r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.content.res.ColorStateList mThumbTintList>;

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getThumbTintMode()
    {
        android.widget.Switch r0;
        android.graphics.BlendMode r1;
        android.graphics.PorterDuff$Mode r2;

        r0 := @this: android.widget.Switch;

        r1 = virtualinvoke r0.<android.widget.Switch: android.graphics.BlendMode getThumbTintBlendMode()>();

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.PorterDuff$Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>(r1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.graphics.drawable.Drawable getTrackDrawable()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        return $r1;
    }

    public android.graphics.BlendMode getTrackTintBlendMode()
    {
        android.widget.Switch r0;
        android.graphics.BlendMode $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode>;

        return $r1;
    }

    public android.content.res.ColorStateList getTrackTintList()
    {
        android.widget.Switch r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.content.res.ColorStateList mTrackTintList>;

        return $r1;
    }

    public android.graphics.PorterDuff$Mode getTrackTintMode()
    {
        android.widget.Switch r0;
        android.graphics.BlendMode r1;
        android.graphics.PorterDuff$Mode r2;

        r0 := @this: android.widget.Switch;

        r1 = virtualinvoke r0.<android.widget.Switch: android.graphics.BlendMode getTrackTintBlendMode()>();

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.PorterDuff$Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>(r1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.Switch r0;
        boolean $z0;
        android.animation.ObjectAnimator $r1, r4;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: android.widget.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>();

        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        r4 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.<android.animation.ObjectAnimator: boolean isStarted()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void end()>();

        r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator> = null;

     label3:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.Switch r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.CompoundButton: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.Switch: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.Switch: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.Switch r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26;
        boolean $z0, $z1;
        android.text.TextPaint $r2, $r3;
        float $f0, $f1;
        android.graphics.Region$Op $r4;
        android.graphics.Rect r5, r12;
        android.graphics.drawable.Drawable r6, r7;
        android.graphics.Insets r8;
        android.text.Layout r9;
        int[] r10;
        android.content.res.ColorStateList r11;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>(r1);

        r5 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r6 == null goto label01;

        virtualinvoke r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r5);

        goto label02;

     label01:
        virtualinvoke r5.<android.graphics.Rect: void setEmpty()>();

     label02:
        i0 = r0.<android.widget.Switch: int mSwitchTop>;

        i20 = r0.<android.widget.Switch: int mSwitchBottom>;

        i21 = r5.<android.graphics.Rect: int top>;

        i1 = r5.<android.graphics.Rect: int bottom>;

        r7 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r6 == null goto label04;

        $z1 = r0.<android.widget.Switch: boolean mSplitTrack>;

        if $z1 == 0 goto label03;

        if r7 == null goto label03;

        r8 = virtualinvoke r7.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        virtualinvoke r7.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r5);

        $i15 = r5.<android.graphics.Rect: int left>;

        $i14 = r8.<android.graphics.Insets: int left>;

        $i16 = $i15 + $i14;

        r5.<android.graphics.Rect: int left> = $i16;

        $i18 = r5.<android.graphics.Rect: int right>;

        $i17 = r8.<android.graphics.Insets: int right>;

        $i19 = $i18 - $i17;

        r5.<android.graphics.Rect: int right> = $i19;

        i22 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r4 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>(r5, $r4);

        virtualinvoke r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i22);

        goto label04;

     label03:
        virtualinvoke r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label04:
        i2 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if r7 == null goto label05;

        virtualinvoke r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label05:
        $z0 = specialinvoke r0.<android.widget.Switch: boolean getTargetCheckedState()>();

        if $z0 == 0 goto label06;

        r9 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        goto label07;

     label06:
        r9 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

     label07:
        if r9 == null goto label11;

        r10 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        r11 = r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors>;

        if r11 == null goto label08;

        $r3 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $i13 = virtualinvoke r11.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r10, 0);

        virtualinvoke $r3.<android.text.TextPaint: void setColor(int)>($i13);

     label08:
        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r2.<android.text.TextPaint: int[] drawableState> = r10;

        if r7 == null goto label09;

        r12 = virtualinvoke r7.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i12 = r12.<android.graphics.Rect: int left>;

        $i11 = r12.<android.graphics.Rect: int right>;

        i23 = $i12 + $i11;

        goto label10;

     label09:
        i23 = virtualinvoke r0.<android.widget.Switch: int getWidth()>();

     label10:
        i24 = i23 / 2;

        $i4 = virtualinvoke r9.<android.text.Layout: int getWidth()>();

        i3 = $i4 / 2;

        $i6 = i21 + i0;

        $i5 = i20 - i1;

        $i7 = $i6 + $i5;

        i25 = $i7 / 2;

        $i8 = virtualinvoke r9.<android.text.Layout: int getHeight()>();

        i26 = $i8 / 2;

        $i9 = i24 - i3;

        $f1 = (float) $i9;

        $i10 = i25 - i26;

        $f0 = (float) $i10;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        virtualinvoke r9.<android.text.Layout: void draw(android.graphics.Canvas)>(r1);

     label11:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.Switch r0;
        boolean z0, $z2;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39;
        android.graphics.Insets r5;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        i27 := @parameter1: int;

        i28 := @parameter2: int;

        i29 := @parameter3: int;

        i30 := @parameter4: int;

        specialinvoke r0.<android.widget.CompoundButton: void onLayout(boolean,int,int,int,int)>(z0, i27, i28, i29, i30);

        i31 = 0;

        i32 = 0;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label3;

        r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

     label2:
        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r5 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        $i22 = r5.<android.graphics.Insets: int left>;

        $i21 = r1.<android.graphics.Rect: int left>;

        $i23 = $i22 - $i21;

        i31 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i23);

        $i25 = r5.<android.graphics.Insets: int right>;

        $i24 = r1.<android.graphics.Rect: int right>;

        $i26 = $i25 - $i24;

        i32 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i26);

     label3:
        $z2 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z2 == 0 goto label4;

        $i17 = virtualinvoke r0.<android.widget.Switch: int getPaddingLeft()>();

        i33 = $i17 + i31;

        $i18 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i19 = $i18 + i33;

        $i20 = $i19 - i31;

        i34 = $i20 - i32;

        goto label5;

     label4:
        $i0 = virtualinvoke r0.<android.widget.Switch: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.Switch: int getPaddingRight()>();

        $i2 = $i0 - $i1;

        i34 = $i2 - i32;

        $i3 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i4 = i34 - $i3;

        $i5 = $i4 + i31;

        i33 = $i5 + i32;

     label5:
        $i6 = virtualinvoke r0.<android.widget.Switch: int getGravity()>();

        i35 = $i6 & 112;

        if i35 == 16 goto label7;

        if i35 == 80 goto label6;

        i36 = virtualinvoke r0.<android.widget.Switch: int getPaddingTop()>();

        $i16 = r0.<android.widget.Switch: int mSwitchHeight>;

        i37 = $i16 + i36;

        goto label8;

     label6:
        $i13 = virtualinvoke r0.<android.widget.Switch: int getHeight()>();

        $i14 = virtualinvoke r0.<android.widget.Switch: int getPaddingBottom()>();

        i37 = $i13 - $i14;

        $i15 = r0.<android.widget.Switch: int mSwitchHeight>;

        i36 = i37 - $i15;

        goto label8;

     label7:
        $i7 = virtualinvoke r0.<android.widget.Switch: int getPaddingTop()>();

        $i8 = virtualinvoke r0.<android.widget.Switch: int getHeight()>();

        $i9 = $i7 + $i8;

        $i10 = virtualinvoke r0.<android.widget.Switch: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        i38 = $i11 / 2;

        i39 = r0.<android.widget.Switch: int mSwitchHeight>;

        $i12 = i39 / 2;

        i36 = i38 - $i12;

        i37 = i39 + i36;

     label8:
        r0.<android.widget.Switch: int mSwitchLeft> = i33;

        r0.<android.widget.Switch: int mSwitchTop> = i36;

        r0.<android.widget.Switch: int mSwitchBottom> = i37;

        r0.<android.widget.Switch: int mSwitchRight> = i34;

        return;
    }

    public void onMeasure(int, int)
    {
        android.widget.Switch r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, i28, i29, i30;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1, $r4, $r5, r13, r14, r15;
        android.text.Layout $r2, $r3, $r6, $r7, $r9, $r11;
        java.lang.CharSequence $r8, $r10;
        android.graphics.Rect r12;
        android.graphics.Insets r16;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.widget.Switch: boolean mShowText>;

        if $z0 == 0 goto label02;

        $r6 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        if $r6 != null goto label01;

        $r10 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        $r11 = specialinvoke r0.<android.widget.Switch: android.text.Layout makeLayout(java.lang.CharSequence)>($r10);

        r0.<android.widget.Switch: android.text.Layout mOnLayout> = $r11;

     label01:
        $r7 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

        if $r7 != null goto label02;

        $r8 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

        $r9 = specialinvoke r0.<android.widget.Switch: android.text.Layout makeLayout(java.lang.CharSequence)>($r8);

        r0.<android.widget.Switch: android.text.Layout mOffLayout> = $r9;

     label02:
        r12 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        r13 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r13 == null goto label03;

        virtualinvoke r13.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r12);

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $i19 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i20 = r12.<android.graphics.Rect: int left>;

        $i22 = $i19 - $i20;

        $i21 = r12.<android.graphics.Rect: int right>;

        i23 = $i22 - $i21;

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        i24 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label04;

     label03:
        i23 = 0;

        i24 = 0;

     label04:
        $z1 = r0.<android.widget.Switch: boolean mShowText>;

        if $z1 == 0 goto label05;

        $r2 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        $i14 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        $r3 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

        $i15 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

        $i17 = r0.<android.widget.Switch: int mThumbTextPadding>;

        $i18 = $i17 * 2;

        i25 = $i16 + $i18;

        goto label06;

     label05:
        i25 = 0;

     label06:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i25, i23);

        r0.<android.widget.Switch: int mThumbWidth> = $i4;

        r14 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r14 == null goto label07;

        virtualinvoke r14.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r12);

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        i26 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label08;

     label07:
        virtualinvoke r12.<android.graphics.Rect: void setEmpty()>();

        i26 = 0;

     label08:
        i2 = r12.<android.graphics.Rect: int left>;

        i3 = r12.<android.graphics.Rect: int right>;

        r15 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        i27 = i2;

        i28 = i3;

        if r15 == null goto label09;

        r16 = virtualinvoke r15.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        $i12 = r16.<android.graphics.Insets: int left>;

        i27 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i12);

        $i13 = r16.<android.graphics.Insets: int right>;

        i28 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i13);

     label09:
        $i9 = r0.<android.widget.Switch: int mSwitchMinWidth>;

        $i5 = r0.<android.widget.Switch: int mThumbWidth>;

        $i6 = $i5 * 2;

        $i7 = $i6 + i27;

        $i8 = $i7 + i28;

        i29 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(i26, i24);

        r0.<android.widget.Switch: int mSwitchWidth> = i29;

        r0.<android.widget.Switch: int mSwitchHeight> = i30;

        specialinvoke r0.<android.widget.CompoundButton: void onMeasure(int,int)>(i0, i1);

        $i10 = virtualinvoke r0.<android.widget.Switch: int getMeasuredHeight()>();

        if $i10 >= i30 goto label10;

        $i11 = virtualinvoke r0.<android.widget.Switch: int getMeasuredWidthAndState()>();

        virtualinvoke r0.<android.widget.Switch: void setMeasuredDimension(int,int)>($i11, i30);

     label10:
        return;
    }

    public void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.Switch r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.CharSequence r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        r3 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        r3 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

     label2:
        if r3 == null goto label3;

        $r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        return;
    }

    protected void onProvideStructure(android.view.ViewStructure, int, int)
    {
        android.widget.Switch r0;
        android.view.ViewStructure r1;
        int i0, i1;
        java.lang.CharSequence r2, r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.ViewStructure;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        r8 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        r8 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z1 != 0 goto label4;

        r2 = virtualinvoke r1.<android.view.ViewStructure: java.lang.CharSequence getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 == 0 goto label3;

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence)>(r8);

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r8);

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence)>($r4);

     label4:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14, f15, f16, f17, f18, f19, f20, f21;
        android.view.VelocityTracker $r2, $r3;
        boolean $z0, $z1, $z3, $z4;
        int $i0, $i1, $i3, i7, i8, i9;
        byte $b2, $b4, $b5, $b6;
        android.view.ViewParent $r4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i7 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i7 == 0 goto label13;

        if i7 == 1 goto label11;

        if i7 == 2 goto label01;

        if i7 == 3 goto label11;

        goto label14;

     label01:
        i8 = r0.<android.widget.Switch: int mTouchMode>;

        if i8 == 1 goto label08;

        if i8 == 2 goto label02;

        goto label09;

     label02:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i9 = specialinvoke r0.<android.widget.Switch: int getThumbScrollRange()>();

        $f9 = r0.<android.widget.Switch: float mTouchX>;

        f14 = f0 - $f9;

        if i9 == 0 goto label03;

        $f13 = (float) i9;

        f15 = f14 / $f13;

        goto label05;

     label03:
        $b5 = f14 cmpl 0.0F;

        if $b5 <= 0 goto label04;

        f15 = 1.0F;

        goto label05;

     label04:
        f15 = -1.0F;

     label05:
        f16 = f15;

        $z3 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z3 == 0 goto label06;

        f16 = neg f15;

     label06:
        $f10 = r0.<android.widget.Switch: float mThumbPosition>;

        $f11 = $f10 + f16;

        f17 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>($f11, 0.0F, 1.0F);

        $f12 = r0.<android.widget.Switch: float mThumbPosition>;

        $b6 = f17 cmpl $f12;

        if $b6 == 0 goto label07;

        r0.<android.widget.Switch: float mTouchX> = f0;

        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>(f17);

     label07:
        return 1;

     label08:
        f18 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f19 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f1 = r0.<android.widget.Switch: float mTouchX>;

        $f2 = f18 - $f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $i1 = r0.<android.widget.Switch: int mTouchSlop>;

        $f4 = (float) $i1;

        $b2 = $f3 cmpl $f4;

        if $b2 > 0 goto label10;

        $f5 = r0.<android.widget.Switch: float mTouchY>;

        $f6 = f19 - $f5;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $i3 = r0.<android.widget.Switch: int mTouchSlop>;

        $f8 = (float) $i3;

        $b4 = $f7 cmpl $f8;

        if $b4 <= 0 goto label09;

        goto label10;

     label09:
        goto label14;

     label10:
        r0.<android.widget.Switch: int mTouchMode> = 2;

        $r4 = virtualinvoke r0.<android.widget.Switch: android.view.ViewParent getParent()>();

        interfaceinvoke $r4.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        r0.<android.widget.Switch: float mTouchX> = f18;

        r0.<android.widget.Switch: float mTouchY> = f19;

        return 1;

     label11:
        $i0 = r0.<android.widget.Switch: int mTouchMode>;

        if $i0 != 2 goto label12;

        specialinvoke r0.<android.widget.Switch: void stopDrag(android.view.MotionEvent)>(r1);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return 1;

     label12:
        r0.<android.widget.Switch: int mTouchMode> = 0;

        $r3 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

        goto label14;

     label13:
        f20 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f21 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isEnabled()>();

        if $z0 == 0 goto label14;

        $z1 = specialinvoke r0.<android.widget.Switch: boolean hitThumb(float,float)>(f20, f21);

        if $z1 == 0 goto label14;

        r0.<android.widget.Switch: int mTouchMode> = 1;

        r0.<android.widget.Switch: float mTouchX> = f20;

        r0.<android.widget.Switch: float mTouchY> = f21;

     label14:
        $z4 = specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z4;
    }

    public void setChecked(boolean)
    {
        android.widget.Switch r0;
        boolean $z0, $z1, z2, z3;
        float f0;

        r0 := @this: android.widget.Switch;

        z2 := @parameter0: boolean;

        specialinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>(z2);

        z3 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.Switch: boolean isLaidOut()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.Switch: void animateThumbToCheckedState(boolean)>(z3);

        goto label4;

     label1:
        specialinvoke r0.<android.widget.Switch: void cancelPositionAnimator()>();

        if z3 == 0 goto label2;

        f0 = 1.0F;

        goto label3;

     label2:
        f0 = 0.0F;

     label3:
        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>(f0);

     label4:
        return;
    }

    public void setShowText(boolean)
    {
        android.widget.Switch r0;
        boolean z0, $z1;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.Switch: boolean mShowText>;

        if $z1 == z0 goto label1;

        r0.<android.widget.Switch: boolean mShowText> = z0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

     label1:
        return;
    }

    public void setSplitTrack(boolean)
    {
        android.widget.Switch r0;
        boolean z0;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        r0.<android.widget.Switch: boolean mSplitTrack> = z0;

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

        return;
    }

    public void setSwitchMinWidth(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mSwitchMinWidth> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setSwitchPadding(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mSwitchPadding> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setSwitchTextAppearance(android.content.Context, int)
    {
        android.widget.Switch r0;
        int[] $r1;
        android.content.res.ColorStateList $r2, r9;
        android.text.method.AllCapsTransformationMethod $r3;
        android.content.Context $r4, r7;
        android.text.TextPaint $r5, $r6;
        float $f0, $f1, $f2;
        byte $b0;
        int i1, i2, $i3, $i4;
        android.content.res.TypedArray r8;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        r7 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        $r1 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r8 = virtualinvoke r7.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i1, $r1);

        r9 = virtualinvoke r8.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if r9 == null goto label1;

        r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors> = r9;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<android.widget.Switch: android.content.res.ColorStateList getTextColors()>();

        r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors> = $r2;

     label2:
        i2 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        if i2 == 0 goto label3;

        $f0 = (float) i2;

        $r5 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r5.<android.text.TextPaint: float getTextSize()>();

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label3;

        $r6 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $f2 = (float) i2;

        virtualinvoke $r6.<android.text.TextPaint: void setTextSize(float)>($f2);

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

     label3:
        $i3 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        $i4 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        specialinvoke r0.<android.widget.Switch: void setSwitchTypefaceByIndex(int,int)>($i3, $i4);

        $z0 = virtualinvoke r8.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if $z0 == 0 goto label4;

        $r3 = new android.text.method.AllCapsTransformationMethod;

        $r4 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        specialinvoke $r3.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r4);

        r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod> = $r3;

        interfaceinvoke $r3.<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>(1);

        goto label5;

     label4:
        r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod> = null;

     label5:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface)
    {
        android.widget.Switch r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == r1 goto label1;

        $r4 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

     label1:
        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface, int)
    {
        android.widget.Switch r0;
        android.text.TextPaint $r1, $r2, r5, r6;
        int $i0, $i1, i2, i3, i4;
        android.graphics.Typeface r3, r4;
        float f0;
        boolean z0;

        r0 := @this: android.widget.Switch;

        r3 := @parameter0: android.graphics.Typeface;

        i2 := @parameter1: int;

        f0 = 0.0F;

        z0 = 0;

        if i2 <= 0 goto label7;

        if r3 != null goto label1;

        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i2);

        goto label2;

     label1:
        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r3, i2);

     label2:
        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>(r4);

        if r4 == null goto label3;

        i3 = virtualinvoke r4.<android.graphics.Typeface: int getStyle()>();

        goto label4;

     label3:
        i3 = 0;

     label4:
        i4 = i3 & i2;

        r5 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $i0 = i4 & 1;

        if $i0 == 0 goto label5;

        z0 = 1;

     label5:
        virtualinvoke r5.<android.text.TextPaint: void setFakeBoldText(boolean)>(z0);

        r6 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $i1 = i4 & 2;

        if $i1 == 0 goto label6;

        f0 = -0.25F;

     label6:
        virtualinvoke r6.<android.text.TextPaint: void setTextSkewX(float)>(f0);

        goto label8;

     label7:
        $r1 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>(r3);

     label8:
        return;
    }

    public void setTextOff(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.Switch: java.lang.CharSequence mTextOff> = r1;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        virtualinvoke r0.<android.widget.Switch: void setDefaultStateDescritption()>();

        return;
    }

    public void setTextOn(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.Switch: java.lang.CharSequence mTextOn> = r1;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        virtualinvoke r0.<android.widget.Switch: void setDefaultStateDescritption()>();

        return;
    }

    public void setThumbDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setThumbResource(int)
    {
        android.widget.Switch r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setThumbTextPadding(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mThumbTextPadding> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setThumbTintBlendMode(android.graphics.BlendMode)
    {
        android.widget.Switch r0;
        android.graphics.BlendMode r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.BlendMode;

        r0.<android.widget.Switch: android.graphics.BlendMode mThumbBlendMode> = r1;

        r0.<android.widget.Switch: boolean mHasThumbTintMode> = 1;

        specialinvoke r0.<android.widget.Switch: void applyThumbTint()>();

        return;
    }

    public void setThumbTintList(android.content.res.ColorStateList)
    {
        android.widget.Switch r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.Switch: android.content.res.ColorStateList mThumbTintList> = r1;

        r0.<android.widget.Switch: boolean mHasThumbTint> = 1;

        specialinvoke r0.<android.widget.Switch: void applyThumbTint()>();

        return;
    }

    public void setThumbTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.Switch r0;
        int $i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        if r1 == null goto label1;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.Switch: void setThumbTintBlendMode(android.graphics.BlendMode)>(r2);

        return;
    }

    public void setTrackDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setTrackResource(int)
    {
        android.widget.Switch r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTrackTintBlendMode(android.graphics.BlendMode)
    {
        android.widget.Switch r0;
        android.graphics.BlendMode r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.BlendMode;

        r0.<android.widget.Switch: android.graphics.BlendMode mTrackBlendMode> = r1;

        r0.<android.widget.Switch: boolean mHasTrackTintMode> = 1;

        specialinvoke r0.<android.widget.Switch: void applyTrackTint()>();

        return;
    }

    public void setTrackTintList(android.content.res.ColorStateList)
    {
        android.widget.Switch r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.Switch: android.content.res.ColorStateList mTrackTintList> = r1;

        r0.<android.widget.Switch: boolean mHasTrackTint> = 1;

        specialinvoke r0.<android.widget.Switch: void applyTrackTint()>();

        return;
    }

    public void setTrackTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.Switch r0;
        int $i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        if r1 == null goto label1;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.Switch: void setTrackTintBlendMode(android.graphics.BlendMode)>(r2);

        return;
    }

    public void toggle()
    {
        android.widget.Switch r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>($z1);

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;
        boolean $z0, z1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r1 == $r2 goto label2;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r1 != $r3 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
