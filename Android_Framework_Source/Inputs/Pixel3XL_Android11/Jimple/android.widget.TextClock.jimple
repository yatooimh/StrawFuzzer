public class android.widget.TextClock extends android.widget.TextView
{
    public static final java.lang.CharSequence DEFAULT_FORMAT_12_HOUR;
    public static final java.lang.CharSequence DEFAULT_FORMAT_24_HOUR;
    private java.lang.CharSequence mDescFormat;
    private java.lang.CharSequence mDescFormat12;
    private java.lang.CharSequence mDescFormat24;
    private java.lang.CharSequence mFormat;
    private java.lang.CharSequence mFormat12;
    private java.lang.CharSequence mFormat24;
    private android.database.ContentObserver mFormatChangeObserver;
    private boolean mHasSeconds;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private boolean mRegistered;
    private boolean mShouldRunTicker;
    private boolean mShowCurrentUserTime;
    private boolean mStopTicking;
    private final java.lang.Runnable mTicker;
    private java.util.Calendar mTime;
    private java.lang.String mTimeZone;

    static void <clinit>()
    {
        <android.widget.TextClock: java.lang.CharSequence DEFAULT_FORMAT_12_HOUR> = "h:mm a";

        <android.widget.TextClock: java.lang.CharSequence DEFAULT_FORMAT_12_HOUR> = "h:mm a";

        <android.widget.TextClock: java.lang.CharSequence DEFAULT_FORMAT_24_HOUR> = "H:mm";

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.TextClock r0;
        android.content.Context r1;
        android.widget.TextClock$1 $r2;
        android.widget.TextClock$2 $r3;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context)>(r1);

        $r2 = new android.widget.TextClock$1;

        specialinvoke $r2.<android.widget.TextClock$1: void <init>(android.widget.TextClock)>(r0);

        r0.<android.widget.TextClock: android.content.BroadcastReceiver mIntentReceiver> = $r2;

        $r3 = new android.widget.TextClock$2;

        specialinvoke $r3.<android.widget.TextClock$2: void <init>(android.widget.TextClock)>(r0);

        r0.<android.widget.TextClock: java.lang.Runnable mTicker> = $r3;

        specialinvoke r0.<android.widget.TextClock: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TextClock r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TextClock r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TextClock r0;
        android.util.AttributeSet r1;
        int i0, i1;
        android.content.res.TypedArray r2;
        android.widget.TextClock$1 $r3;
        android.widget.TextClock$2 $r4;
        int[] $r5, $r6;
        java.lang.CharSequence $r7, $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        android.content.Context r11;

        r0 := @this: android.widget.TextClock;

        r11 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r11, r1, i0, i1);

        $r3 = new android.widget.TextClock$1;

        specialinvoke $r3.<android.widget.TextClock$1: void <init>(android.widget.TextClock)>(r0);

        r0.<android.widget.TextClock: android.content.BroadcastReceiver mIntentReceiver> = $r3;

        $r4 = new android.widget.TextClock$2;

        specialinvoke $r4.<android.widget.TextClock$2: void <init>(android.widget.TextClock)>(r0);

        r0.<android.widget.TextClock: java.lang.Runnable mTicker> = $r4;

        $r5 = <com.android.internal.R$styleable: int[] TextClock>;

        r2 = virtualinvoke r11.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r5, i0, i1);

        $r6 = <com.android.internal.R$styleable: int[] TextClock>;

        virtualinvoke r0.<android.widget.TextClock: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r11, $r6, r1, r2, i0, i1);

     label1:
        $r7 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat12> = $r7;

        $r8 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(1);

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat24> = $r8;

        $r9 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r0.<android.widget.TextClock: java.lang.String mTimeZone> = $r9;

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.TextClock: void init()>();

        return;

     label3:
        $r10 := @caughtexception;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.CharSequence abc(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1, r2;

        r2 := @parameter0: java.lang.CharSequence;

        r0 := @parameter1: java.lang.CharSequence;

        r1 := @parameter2: java.lang.CharSequence;

        if r2 != null goto label2;

        if r0 != null goto label1;

        r2 = r1;

        goto label2;

     label1:
        r2 = r0;

        goto label2;

     label2:
        return r2;
    }

    static void access$000(android.widget.TextClock)
    {
        android.widget.TextClock r0;

        r0 := @parameter0: android.widget.TextClock;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        return;
    }

    static void access$100(android.widget.TextClock)
    {
        android.widget.TextClock r0;

        r0 := @parameter0: android.widget.TextClock;

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }

    static boolean access$200(android.widget.TextClock)
    {
        android.widget.TextClock r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextClock;

        $z0 = r0.<android.widget.TextClock: boolean mStopTicking>;

        return $z0;
    }

    static java.lang.String access$300(android.widget.TextClock)
    {
        android.widget.TextClock r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.String mTimeZone>;

        return $r1;
    }

    static void access$400(android.widget.TextClock, java.lang.String)
    {
        android.widget.TextClock r0;
        java.lang.String r1;

        r0 := @parameter0: android.widget.TextClock;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.widget.TextClock: void createTime(java.lang.String)>(r1);

        return;
    }

    static boolean access$500(android.widget.TextClock)
    {
        android.widget.TextClock r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextClock;

        $z0 = r0.<android.widget.TextClock: boolean mShouldRunTicker>;

        return $z0;
    }

    static java.lang.Runnable access$600(android.widget.TextClock)
    {
        android.widget.TextClock r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.Runnable mTicker>;

        return $r1;
    }

    private void chooseFormat()
    {
        android.widget.TextClock r0;
        boolean z0, $z1, z2, z3;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;
        java.lang.String $r5, $r15;
        java.lang.CharSequence $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r19, $r20, r22, r23;
        java.lang.Runnable $r12, $r14;
        android.os.Handler $r13;
        libcore.icu.LocaleData r21;

        r0 := @this: android.widget.TextClock;

        z2 = virtualinvoke r0.<android.widget.TextClock: boolean is24HourModeEnabled()>();

        $r1 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        r21 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r4);

        if z2 == 0 goto label1;

        $r17 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat24>;

        $r16 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat12>;

        $r15 = r21.<libcore.icu.LocaleData: java.lang.String timeFormat_Hm>;

        r22 = staticinvoke <android.widget.TextClock: java.lang.CharSequence abc(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>($r17, $r16, $r15);

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat> = r22;

        $r19 = r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat24>;

        $r18 = r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat12>;

        $r20 = staticinvoke <android.widget.TextClock: java.lang.CharSequence abc(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>($r19, $r18, r22);

        r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat> = $r20;

        goto label2;

     label1:
        $r7 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat12>;

        $r6 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat24>;

        $r5 = r21.<libcore.icu.LocaleData: java.lang.String timeFormat_hm>;

        r23 = staticinvoke <android.widget.TextClock: java.lang.CharSequence abc(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>($r7, $r6, $r5);

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat> = r23;

        $r9 = r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat12>;

        $r8 = r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat24>;

        $r10 = staticinvoke <android.widget.TextClock: java.lang.CharSequence abc(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>($r9, $r8, r23);

        r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat> = $r10;

     label2:
        z3 = r0.<android.widget.TextClock: boolean mHasSeconds>;

        $r11 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat>;

        z0 = staticinvoke <android.text.format.DateFormat: boolean hasSeconds(java.lang.CharSequence)>($r11);

        r0.<android.widget.TextClock: boolean mHasSeconds> = z0;

        $z1 = r0.<android.widget.TextClock: boolean mShouldRunTicker>;

        if $z1 == 0 goto label4;

        if z3 == z0 goto label4;

        if z3 == 0 goto label3;

        $r13 = virtualinvoke r0.<android.widget.TextClock: android.os.Handler getHandler()>();

        $r14 = r0.<android.widget.TextClock: java.lang.Runnable mTicker>;

        virtualinvoke $r13.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r14);

        goto label4;

     label3:
        $r12 = r0.<android.widget.TextClock: java.lang.Runnable mTicker>;

        interfaceinvoke $r12.<java.lang.Runnable: void run()>();

     label4:
        return;
    }

    private void createTime(java.lang.String)
    {
        android.widget.TextClock r0;
        java.lang.String r1;
        java.util.Calendar $r2, $r4;
        java.util.TimeZone $r3;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r3);

        r0.<android.widget.TextClock: java.util.Calendar mTime> = $r4;

        goto label2;

     label1:
        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<android.widget.TextClock: java.util.Calendar mTime> = $r2;

     label2:
        return;
    }

    private void init()
    {
        android.widget.TextClock r0;
        libcore.icu.LocaleData r1;
        java.lang.CharSequence $r2, $r7, $r8, $r11;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        java.util.Locale $r6;
        java.lang.String $r9, $r10, $r12;

        r0 := @this: android.widget.TextClock;

        $r2 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat12>;

        if $r2 == null goto label1;

        $r11 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat24>;

        if $r11 != null goto label3;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r6 = $r5.<android.content.res.Configuration: java.util.Locale locale>;

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r6);

        $r7 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat12>;

        if $r7 != null goto label2;

        $r10 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat_hm>;

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat12> = $r10;

     label2:
        $r8 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat24>;

        if $r8 != null goto label3;

        $r9 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat_Hm>;

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat24> = $r9;

     label3:
        $r12 = r0.<android.widget.TextClock: java.lang.String mTimeZone>;

        specialinvoke r0.<android.widget.TextClock: void createTime(java.lang.String)>($r12);

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        return;
    }

    private void onTimeChanged()
    {
        android.widget.TextClock r0;
        java.util.Calendar $r1, $r2, $r5;
        long $l0;
        java.lang.CharSequence $r3, $r4, $r6, $r7;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.util.Calendar mTime>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r3 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat>;

        $r2 = r0.<android.widget.TextClock: java.util.Calendar mTime>;

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>($r3, $r2);

        virtualinvoke r0.<android.widget.TextClock: void setText(java.lang.CharSequence)>($r4);

        $r6 = r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat>;

        $r5 = r0.<android.widget.TextClock: java.util.Calendar mTime>;

        $r7 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>($r6, $r5);

        virtualinvoke r0.<android.widget.TextClock: void setContentDescription(java.lang.CharSequence)>($r7);

        return;
    }

    private void registerObserver()
    {
        android.widget.TextClock r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        boolean $z0, $z1;
        android.database.ContentObserver $r3, $r5, $r6;
        android.content.Context $r4;
        int $i0;
        android.widget.TextClock$FormatChangeObserver $r7;
        android.os.Handler $r8;

        r0 := @this: android.widget.TextClock;

        $z0 = r0.<android.widget.TextClock: boolean mRegistered>;

        if $z0 == 0 goto label3;

        $r3 = r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver>;

        if $r3 != null goto label1;

        $r7 = new android.widget.TextClock$FormatChangeObserver;

        $r8 = virtualinvoke r0.<android.widget.TextClock: android.os.Handler getHandler()>();

        specialinvoke $r7.<android.widget.TextClock$FormatChangeObserver: void <init>(android.widget.TextClock,android.os.Handler)>(r0, $r8);

        r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver> = $r7;

     label1:
        $r4 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        r1 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("time_12_24");

        $z1 = r0.<android.widget.TextClock: boolean mShowCurrentUserTime>;

        if $z1 == 0 goto label2;

        $r6 = r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver>;

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>(r2, 1, $r6, -1);

        goto label3;

     label2:
        $r5 = r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>(r2, 1, $r5, $i0);

     label3:
        return;
    }

    private void registerReceiver()
    {
        android.widget.TextClock r0;
        android.content.IntentFilter $r2;
        android.content.Context $r3;
        android.content.BroadcastReceiver $r4;
        android.os.UserHandle $r5;
        android.os.Handler $r6;

        r0 := @this: android.widget.TextClock;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r3 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $r4 = r0.<android.widget.TextClock: android.content.BroadcastReceiver mIntentReceiver>;

        $r5 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r6 = virtualinvoke r0.<android.widget.TextClock: android.os.Handler getHandler()>();

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, $r5, $r2, null, $r6);

        return;
    }

    private void unregisterObserver()
    {
        android.widget.TextClock r0;
        android.database.ContentObserver $r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<android.widget.TextClock: android.database.ContentObserver mFormatChangeObserver>;

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r4);

     label1:
        return;
    }

    private void unregisterReceiver()
    {
        android.widget.TextClock r0;
        android.content.Context $r1;
        android.content.BroadcastReceiver $r2;

        r0 := @this: android.widget.TextClock;

        $r1 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $r2 = r0.<android.widget.TextClock: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        return;
    }

    public void disableClockTick()
    {
        android.widget.TextClock r0;

        r0 := @this: android.widget.TextClock;

        r0.<android.widget.TextClock: boolean mStopTicking> = 1;

        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.TextClock r0;
        android.view.ViewHierarchyEncoder r1;
        boolean $z0;
        java.lang.CharSequence r2, r4, r6;
        java.lang.String r3, r5, r7;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.widget.TextView: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        r2 = virtualinvoke r0.<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()>();

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,java.lang.String)>("format12Hour", r3);

        r4 = virtualinvoke r0.<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()>();

        if r4 != null goto label3;

        r5 = null;

        goto label4;

     label3:
        r5 = interfaceinvoke r4.<java.lang.CharSequence: java.lang.String toString()>();

     label4:
        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,java.lang.String)>("format24Hour", r5);

        r6 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat>;

        if r6 != null goto label5;

        r7 = null;

        goto label6;

     label5:
        r7 = interfaceinvoke r6.<java.lang.CharSequence: java.lang.String toString()>();

     label6:
        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,java.lang.String)>("format", r7);

        $z0 = r0.<android.widget.TextClock: boolean mHasSeconds>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,boolean)>("hasSeconds", $z0);

        return;
    }

    public java.lang.CharSequence getFormat()
    {
        android.widget.TextClock r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat>;

        return $r1;
    }

    public java.lang.CharSequence getFormat12Hour()
    {
        android.widget.TextClock r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat12>;

        return $r1;
    }

    public java.lang.CharSequence getFormat24Hour()
    {
        android.widget.TextClock r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.CharSequence mFormat24>;

        return $r1;
    }

    public java.lang.String getTimeZone()
    {
        android.widget.TextClock r0;
        java.lang.String $r1;

        r0 := @this: android.widget.TextClock;

        $r1 = r0.<android.widget.TextClock: java.lang.String mTimeZone>;

        return $r1;
    }

    public boolean is24HourModeEnabled()
    {
        android.widget.TextClock r0;
        boolean $z0, $z1, $z2;
        android.content.Context $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextClock;

        $z0 = r0.<android.widget.TextClock: boolean mShowCurrentUserTime>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $z2 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>($r2, $i0);

        return $z2;

     label1:
        $r1 = virtualinvoke r0.<android.widget.TextClock: android.content.Context getContext()>();

        $z1 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>($r1);

        return $z1;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TextClock r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.widget.TextClock;

        specialinvoke r0.<android.widget.TextView: void onAttachedToWindow()>();

        $z0 = r0.<android.widget.TextClock: boolean mRegistered>;

        if $z0 != 0 goto label1;

        r0.<android.widget.TextClock: boolean mRegistered> = 1;

        specialinvoke r0.<android.widget.TextClock: void registerReceiver()>();

        specialinvoke r0.<android.widget.TextClock: void registerObserver()>();

        $r1 = r0.<android.widget.TextClock: java.lang.String mTimeZone>;

        specialinvoke r0.<android.widget.TextClock: void createTime(java.lang.String)>($r1);

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.TextClock r0;
        boolean $z0;

        r0 := @this: android.widget.TextClock;

        specialinvoke r0.<android.widget.TextView: void onDetachedFromWindow()>();

        $z0 = r0.<android.widget.TextClock: boolean mRegistered>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TextClock: void unregisterReceiver()>();

        specialinvoke r0.<android.widget.TextClock: void unregisterObserver()>();

        r0.<android.widget.TextClock: boolean mRegistered> = 0;

     label1:
        return;
    }

    public void onVisibilityAggregated(boolean)
    {
        android.widget.TextClock r0;
        boolean z0, $z1, $z2, $z3;
        android.os.Handler $r1;
        java.lang.Runnable $r2, $r3;

        r0 := @this: android.widget.TextClock;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void onVisibilityAggregated(boolean)>(z0);

        $z1 = r0.<android.widget.TextClock: boolean mShouldRunTicker>;

        if $z1 != 0 goto label2;

        if z0 == 0 goto label2;

        r0.<android.widget.TextClock: boolean mShouldRunTicker> = 1;

        $z3 = r0.<android.widget.TextClock: boolean mHasSeconds>;

        if $z3 == 0 goto label1;

        $r3 = r0.<android.widget.TextClock: java.lang.Runnable mTicker>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

        goto label3;

     label1:
        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        goto label3;

     label2:
        $z2 = r0.<android.widget.TextClock: boolean mShouldRunTicker>;

        if $z2 == 0 goto label3;

        if z0 != 0 goto label3;

        r0.<android.widget.TextClock: boolean mShouldRunTicker> = 0;

        $r1 = virtualinvoke r0.<android.widget.TextClock: android.os.Handler getHandler()>();

        $r2 = r0.<android.widget.TextClock: java.lang.Runnable mTicker>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

     label3:
        return;
    }

    public void refreshTime()
    {
        android.widget.TextClock r0;

        r0 := @this: android.widget.TextClock;

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        virtualinvoke r0.<android.widget.TextClock: void invalidate()>();

        return;
    }

    public void setContentDescriptionFormat12Hour(java.lang.CharSequence)
    {
        android.widget.TextClock r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat12> = r1;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }

    public void setContentDescriptionFormat24Hour(java.lang.CharSequence)
    {
        android.widget.TextClock r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.TextClock: java.lang.CharSequence mDescFormat24> = r1;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }

    public void setFormat12Hour(java.lang.CharSequence)
    {
        android.widget.TextClock r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat12> = r1;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }

    public void setFormat24Hour(java.lang.CharSequence)
    {
        android.widget.TextClock r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.TextClock: java.lang.CharSequence mFormat24> = r1;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }

    public void setShowCurrentUserTime(boolean)
    {
        android.widget.TextClock r0;
        boolean z0;

        r0 := @this: android.widget.TextClock;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextClock: boolean mShowCurrentUserTime> = z0;

        specialinvoke r0.<android.widget.TextClock: void chooseFormat()>();

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        specialinvoke r0.<android.widget.TextClock: void unregisterObserver()>();

        specialinvoke r0.<android.widget.TextClock: void registerObserver()>();

        return;
    }

    public void setTimeZone(java.lang.String)
    {
        android.widget.TextClock r0;
        java.lang.String r1;

        r0 := @this: android.widget.TextClock;

        r1 := @parameter0: java.lang.String;

        r0.<android.widget.TextClock: java.lang.String mTimeZone> = r1;

        specialinvoke r0.<android.widget.TextClock: void createTime(java.lang.String)>(r1);

        specialinvoke r0.<android.widget.TextClock: void onTimeChanged()>();

        return;
    }
}
