public class android.widget.TextView extends android.view.View implements android.view.ViewTreeObserver$OnPreDrawListener
{
    static final int ACCESSIBILITY_ACTION_PROCESS_TEXT_START_ID;
    private static final int ACCESSIBILITY_ACTION_SHARE;
    private static final int ANIMATED_SCROLL_GAP;
    public static final int AUTO_SIZE_TEXT_TYPE_NONE;
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM;
    private static final int CHANGE_WATCHER_PRIORITY;
    static final boolean DEBUG_CURSOR;
    static final boolean DEBUG_EXTRACT;
    private static final int DECIMAL;
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX;
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP;
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP;
    private static final int DEFAULT_TYPEFACE;
    private static final int DEVICE_PROVISIONED_NO;
    private static final int DEVICE_PROVISIONED_UNKNOWN;
    private static final int DEVICE_PROVISIONED_YES;
    private static final int ELLIPSIZE_END;
    private static final int ELLIPSIZE_MARQUEE;
    private static final int ELLIPSIZE_MIDDLE;
    private static final int ELLIPSIZE_NONE;
    private static final int ELLIPSIZE_NOT_SET;
    private static final int ELLIPSIZE_START;
    private static final android.text.Spanned EMPTY_SPANNED;
    private static final int EMS;
    private static final int FLOATING_TOOLBAR_SELECT_ALL_REFRESH_DELAY;
    static final int ID_ASSIST;
    static final int ID_AUTOFILL;
    static final int ID_COPY;
    static final int ID_CUT;
    static final int ID_PASTE;
    static final int ID_PASTE_AS_PLAIN_TEXT;
    static final int ID_REDO;
    static final int ID_REPLACE;
    static final int ID_SELECT_ALL;
    static final int ID_SHARE;
    static final int ID_UNDO;
    private static final int KEY_DOWN_HANDLED_BY_KEY_LISTENER;
    private static final int KEY_DOWN_HANDLED_BY_MOVEMENT_METHOD;
    private static final int KEY_EVENT_HANDLED;
    private static final int KEY_EVENT_NOT_HANDLED;
    private static final int LINES;
    static final java.lang.String LOG_TAG;
    private static final int MARQUEE_FADE_NORMAL;
    private static final int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS;
    private static final int MARQUEE_FADE_SWITCH_SHOW_FADE;
    private static final int MONOSPACE;
    private static final int[] MULTILINE_STATE_SET;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final int NO_POINTER_ID;
    private static final int PIXELS;
    static final int PROCESS_TEXT_REQUEST_CODE;
    private static final int SANS;
    private static final int SERIF;
    private static final int SIGNED;
    private static final float[] TEMP_POSITION;
    private static final android.graphics.RectF TEMP_RECTF;
    public static final android.text.BoringLayout$Metrics UNKNOWN_BORING;
    private static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE;
    static final int VERY_WIDE;
    private static final android.util.SparseIntArray sAppearanceValues;
    static long sLastCutCopyOrTextChangedTime;
    private boolean mAllowTransformationLengthChange;
    private int mAutoLinkMask;
    private float mAutoSizeMaxTextSizeInPx;
    private float mAutoSizeMinTextSizeInPx;
    private float mAutoSizeStepGranularityInPx;
    private int[] mAutoSizeTextSizesInPx;
    private int mAutoSizeTextType;
    private android.text.BoringLayout$Metrics mBoring;
    private int mBreakStrategy;
    private android.widget.TextView$BufferType mBufferType;
    private android.widget.TextView$ChangeWatcher mChangeWatcher;
    private android.widget.TextView$CharWrapper mCharWrapper;
    private int mCurHintTextColor;
    private int mCurTextColor;
    private volatile java.util.Locale mCurrentSpellCheckerLocaleCache;
    private android.graphics.drawable.Drawable mCursorDrawable;
    int mCursorDrawableRes;
    private int mDeferScroll;
    private int mDesiredHeightAtMeasure;
    private int mDeviceProvisionedState;
    android.widget.TextView$Drawables mDrawables;
    private android.text.Editable$Factory mEditableFactory;
    private android.widget.Editor mEditor;
    private android.text.TextUtils$TruncateAt mEllipsize;
    private android.text.InputFilter[] mFilters;
    private boolean mFreezesText;
    private int mGravity;
    private boolean mHasPresetAutoSizeValues;
    int mHighlightColor;
    private final android.graphics.Paint mHighlightPaint;
    private android.graphics.Path mHighlightPath;
    private boolean mHighlightPathBogus;
    private java.lang.CharSequence mHint;
    private android.text.BoringLayout$Metrics mHintBoring;
    private int mHintId;
    private android.text.Layout mHintLayout;
    private android.content.res.ColorStateList mHintTextColor;
    private boolean mHorizontallyScrolling;
    private int mHyphenationFrequency;
    private boolean mIncludePad;
    private boolean mIsPrimePointerFromHandleView;
    private int mJustificationMode;
    private int mLastLayoutDirection;
    private long mLastScroll;
    private android.text.Layout mLayout;
    private android.content.res.ColorStateList mLinkTextColor;
    private boolean mLinksClickable;
    private boolean mListenerChanged;
    private java.util.ArrayList mListeners;
    private boolean mLocalesChanged;
    private android.widget.TextView$Marquee mMarquee;
    private int mMarqueeFadeMode;
    private int mMarqueeRepeatLimit;
    private int mMaxMode;
    private int mMaxWidth;
    private int mMaxWidthMode;
    private int mMaximum;
    private int mMinMode;
    private int mMinWidth;
    private int mMinWidthMode;
    private int mMinimum;
    private android.text.method.MovementMethod mMovement;
    private boolean mNeedsAutoSizeText;
    private int mOldMaxMode;
    private int mOldMaximum;
    private boolean mPreDrawListenerDetached;
    private boolean mPreDrawRegistered;
    private android.text.PrecomputedText mPrecomputed;
    private boolean mPreventDefaultMovement;
    private int mPrimePointerId;
    private boolean mRestartMarquee;
    private android.text.BoringLayout mSavedHintLayout;
    private android.text.BoringLayout mSavedLayout;
    private android.text.Layout mSavedMarqueeModeLayout;
    private android.widget.Scroller mScroller;
    private int mShadowColor;
    private float mShadowDx;
    private float mShadowDy;
    private float mShadowRadius;
    private boolean mSingleLine;
    private float mSpacingAdd;
    private float mSpacingMult;
    private android.text.Spannable mSpannable;
    private android.text.Spannable$Factory mSpannableFactory;
    private android.graphics.Rect mTempRect;
    private android.text.TextPaint mTempTextPaint;
    private java.lang.CharSequence mText;
    private android.view.textclassifier.TextClassificationContext mTextClassificationContext;
    private android.view.textclassifier.TextClassifier mTextClassificationSession;
    private android.view.textclassifier.TextClassifier mTextClassifier;
    private android.content.res.ColorStateList mTextColor;
    private android.text.TextDirectionHeuristic mTextDir;
    int mTextEditSuggestionContainerLayout;
    int mTextEditSuggestionHighlightStyle;
    int mTextEditSuggestionItemLayout;
    private int mTextId;
    private android.os.UserHandle mTextOperationUser;
    private final android.text.TextPaint mTextPaint;
    private android.graphics.drawable.Drawable mTextSelectHandle;
    private android.graphics.drawable.Drawable mTextSelectHandleLeft;
    int mTextSelectHandleLeftRes;
    int mTextSelectHandleRes;
    private android.graphics.drawable.Drawable mTextSelectHandleRight;
    int mTextSelectHandleRightRes;
    private boolean mTextSetFromXmlOrResourceId;
    private int mTextSizeUnit;
    private android.text.method.TransformationMethod mTransformation;
    private java.lang.CharSequence mTransformed;
    boolean mUseFallbackLineSpacing;
    private final boolean mUseInternationalizedInput;
    private boolean mUserSetTextScaleX;

    static void <clinit>()
    {
        float[] $r1;
        android.graphics.RectF $r2;
        android.text.InputFilter[] $r3;
        android.text.SpannedString $r4;
        int[] $r5;
        android.util.SparseIntArray $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        android.text.BoringLayout$Metrics $r26;

        <android.widget.TextView: int VERY_WIDE> = 1048576;

        <android.widget.TextView: float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE> = -1.0F;

        <android.widget.TextView: int SIGNED> = 2;

        <android.widget.TextView: int SERIF> = 2;

        <android.widget.TextView: int SANS> = 1;

        <android.widget.TextView: int PROCESS_TEXT_REQUEST_CODE> = 100;

        <android.widget.TextView: int PIXELS> = 2;

        <android.widget.TextView: int NO_POINTER_ID> = -1;

        <android.widget.TextView: int MONOSPACE> = 3;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_FADE> = 2;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS> = 1;

        <android.widget.TextView: int MARQUEE_FADE_NORMAL> = 0;

        <android.widget.TextView: java.lang.String LOG_TAG> = "TextView";

        <android.widget.TextView: int LINES> = 1;

        <android.widget.TextView: int KEY_EVENT_NOT_HANDLED> = 0;

        <android.widget.TextView: int KEY_EVENT_HANDLED> = -1;

        <android.widget.TextView: int KEY_DOWN_HANDLED_BY_MOVEMENT_METHOD> = 2;

        <android.widget.TextView: int KEY_DOWN_HANDLED_BY_KEY_LISTENER> = 1;

        <android.widget.TextView: int ID_UNDO> = 16908338;

        <android.widget.TextView: int ID_SHARE> = 16908341;

        <android.widget.TextView: int ID_SELECT_ALL> = 16908319;

        <android.widget.TextView: int ID_REPLACE> = 16908340;

        <android.widget.TextView: int ID_REDO> = 16908339;

        <android.widget.TextView: int ID_PASTE_AS_PLAIN_TEXT> = 16908337;

        <android.widget.TextView: int ID_PASTE> = 16908322;

        <android.widget.TextView: int ID_CUT> = 16908320;

        <android.widget.TextView: int ID_COPY> = 16908321;

        <android.widget.TextView: int ID_AUTOFILL> = 16908355;

        <android.widget.TextView: int ID_ASSIST> = 16908353;

        <android.widget.TextView: int FLOATING_TOOLBAR_SELECT_ALL_REFRESH_DELAY> = 500;

        <android.widget.TextView: int EMS> = 1;

        <android.widget.TextView: int ELLIPSIZE_START> = 1;

        <android.widget.TextView: int ELLIPSIZE_NOT_SET> = -1;

        <android.widget.TextView: int ELLIPSIZE_NONE> = 0;

        <android.widget.TextView: int ELLIPSIZE_MIDDLE> = 2;

        <android.widget.TextView: int ELLIPSIZE_MARQUEE> = 4;

        <android.widget.TextView: int ELLIPSIZE_END> = 3;

        <android.widget.TextView: int DEVICE_PROVISIONED_YES> = 2;

        <android.widget.TextView: int DEVICE_PROVISIONED_UNKNOWN> = 0;

        <android.widget.TextView: int DEVICE_PROVISIONED_NO> = 1;

        <android.widget.TextView: int DEFAULT_TYPEFACE> = -1;

        <android.widget.TextView: int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP> = 12;

        <android.widget.TextView: int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP> = 112;

        <android.widget.TextView: int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX> = 1;

        <android.widget.TextView: int DECIMAL> = 4;

        <android.widget.TextView: boolean DEBUG_EXTRACT> = 0;

        <android.widget.TextView: boolean DEBUG_CURSOR> = 0;

        <android.widget.TextView: int CHANGE_WATCHER_PRIORITY> = 100;

        <android.widget.TextView: int AUTO_SIZE_TEXT_TYPE_UNIFORM> = 1;

        <android.widget.TextView: int AUTO_SIZE_TEXT_TYPE_NONE> = 0;

        <android.widget.TextView: int ANIMATED_SCROLL_GAP> = 250;

        <android.widget.TextView: int ACCESSIBILITY_ACTION_SHARE> = 268435456;

        <android.widget.TextView: int ACCESSIBILITY_ACTION_PROCESS_TEXT_START_ID> = 268435712;

        $r1 = newarray (float)[2];

        <android.widget.TextView: float[] TEMP_POSITION> = $r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        <android.widget.TextView: android.graphics.RectF TEMP_RECTF> = $r2;

        $r3 = newarray (android.text.InputFilter)[0];

        <android.widget.TextView: android.text.InputFilter[] NO_FILTERS> = $r3;

        $r4 = new android.text.SpannedString;

        specialinvoke $r4.<android.text.SpannedString: void <init>(java.lang.CharSequence)>("");

        <android.widget.TextView: android.text.Spanned EMPTY_SPANNED> = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16843597;

        <android.widget.TextView: int[] MULTILINE_STATE_SET> = $r5;

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<android.util.SparseIntArray: void <init>()>();

        <android.widget.TextView: android.util.SparseIntArray sAppearanceValues> = $r6;

        virtualinvoke $r6.<android.util.SparseIntArray: void put(int,int)>(6, 4);

        $r7 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(5, 3);

        $r8 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(7, 5);

        $r9 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r9.<android.util.SparseIntArray: void put(int,int)>(8, 6);

        $r10 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r10.<android.util.SparseIntArray: void put(int,int)>(2, 0);

        $r11 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>(96, 19);

        $r12 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r12.<android.util.SparseIntArray: void put(int,int)>(3, 1);

        $r13 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(75, 12);

        $r14 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r14.<android.util.SparseIntArray: void put(int,int)>(4, 2);

        $r15 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r15.<android.util.SparseIntArray: void put(int,int)>(95, 18);

        $r16 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r16.<android.util.SparseIntArray: void put(int,int)>(72, 11);

        $r17 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r17.<android.util.SparseIntArray: void put(int,int)>(36, 7);

        $r18 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r18.<android.util.SparseIntArray: void put(int,int)>(37, 8);

        $r19 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r19.<android.util.SparseIntArray: void put(int,int)>(38, 9);

        $r20 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r20.<android.util.SparseIntArray: void put(int,int)>(39, 10);

        $r21 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r21.<android.util.SparseIntArray: void put(int,int)>(76, 13);

        $r22 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r22.<android.util.SparseIntArray: void put(int,int)>(91, 17);

        $r23 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r23.<android.util.SparseIntArray: void put(int,int)>(77, 14);

        $r24 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r24.<android.util.SparseIntArray: void put(int,int)>(78, 15);

        $r25 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        virtualinvoke $r25.<android.util.SparseIntArray: void put(int,int)>(90, 16);

        $r26 = new android.text.BoringLayout$Metrics;

        specialinvoke $r26.<android.text.BoringLayout$Metrics: void <init>()>();

        <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING> = $r26;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.TextView r0;
        android.content.Context r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TextView r0;
        android.content.res.TypedArray r2, r100, r102, r115, r138;
        int i0, $i1, $i2, $i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i74, i75, i76, i77, i78;
        android.text.Editable$Factory $r3;
        android.text.Spannable$Factory $r4;
        android.widget.TextView$BufferType $r5, $r43, r118, r136;
        android.text.InputFilter[] $r6, $r21, $r29;
        int[] $r7, $r15, $r16, $r17, $r24, $r79, $r80, r101;
        android.util.DisplayMetrics $r9, r141;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9, f10;
        android.text.TextPaint $r10, r142;
        android.text.method.MovementMethod $r12, $r25, $r44;
        android.content.res.ColorStateList $r14, r113;
        android.content.pm.ApplicationInfo $r18;
        android.widget.TextView$Drawables $r19, $r37, $r38, $r39, $r40, r148;
        android.text.TextUtils$TruncateAt $r20, $r32, $r33, $r35;
        java.lang.CharSequence $r22, $r23, $r70, r103, r104, r110, r151;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z37, z38;
        android.content.res.Resources $r26, $r77, r95;
        byte $b6, $b7, $b8;
        android.text.method.KeyListener $r28, $r36, $r51, $r59, $r61;
        android.text.method.PasswordTransformationMethod $r31;
        android.view.ViewConfiguration $r34;
        android.widget.Editor $r42, $r45, $r46, $r48, $r50, $r52, $r53, $r55, $r60, $r62, $r63, $r64, $r67, $r68, $r71, $r72, $r73, $r78, $r91, r120, r122, r126, r127, r128, r129, r130, $r132, $r134, r135, r137, r140;
        android.text.method.TextKeyListener $r47, $r133;
        android.text.method.DigitsKeyListener $r49, $r57;
        android.text.method.DialerKeyListener $r54;
        java.lang.String $r56, $r58, $r76;
        android.widget.Editor$InputContentType $r65, $r66, $r69, $r74, $r75;
        java.lang.ClassNotFoundException $r81;
        java.lang.Throwable $r83, $r85, $r87, $r88, $r89, $r92, r123, r124;
        java.lang.IncompatibleClassChangeError $r90;
        android.content.Context r93;
        android.util.AttributeSet r94;
        android.content.res.CompatibilityInfo r96;
        android.content.res.Resources$Theme r99;
        android.graphics.drawable.Drawable r105, r106, r107, r108, r111, r112;
        java.lang.Object r109, r121;
        android.graphics.BlendMode r114;
        java.lang.Class r119;
        short s73;
        android.text.method.TextKeyListener$Capitalize r131;
        android.graphics.Paint r143;
        android.widget.TextView$TextAppearanceAttributes r144;
        java.lang.RuntimeException r145, r146, r147;
        android.text.InputFilter$LengthFilter r149;
        android.util.TypedValue r150;

        r0 := @this: android.widget.TextView;

        r93 := @parameter0: android.content.Context;

        r94 := @parameter1: android.util.AttributeSet;

        i52 := @parameter2: int;

        i53 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r93, r94, i52, i53);

        $r3 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = $r3;

        $r4 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = $r4;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = 3;

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        $r5 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = $r5;

        r0.<android.widget.TextView: boolean mLocalesChanged> = 0;

        r0.<android.widget.TextView: int mTextSizeUnit> = -1;

        r0.<android.widget.TextView: boolean mListenerChanged> = 0;

        r0.<android.widget.TextView: int mGravity> = 8388659;

        r0.<android.widget.TextView: boolean mLinksClickable> = 1;

        r0.<android.widget.TextView: float mSpacingMult> = 1.0F;

        r0.<android.widget.TextView: float mSpacingAdd> = 0.0F;

        r0.<android.widget.TextView: int mMaximum> = 2147483647;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        r0.<android.widget.TextView: int mMinimum> = 0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        r0.<android.widget.TextView: int mOldMaximum> = 2147483647;

        r0.<android.widget.TextView: int mOldMaxMode> = 1;

        r0.<android.widget.TextView: int mMaxWidth> = 2147483647;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        r0.<android.widget.TextView: int mMinWidth> = 0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        r0.<android.widget.TextView: boolean mIncludePad> = 1;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r6 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = $r6;

        r0.<android.widget.TextView: int mHighlightColor> = 1714664933;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        r0.<android.widget.TextView: int mPrimePointerId> = -1;

        r0.<android.widget.TextView: int mDeviceProvisionedState> = 0;

        r0.<android.widget.TextView: int mAutoSizeTextType> = 0;

        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 0;

        r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx> = -1.0F;

        r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx> = -1.0F;

        r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx> = -1.0F;

        $r7 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx> = $r7;

        r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues> = 0;

        r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId> = 0;

        r0.<android.widget.TextView: int mTextId> = 0;

        r0.<android.widget.TextView: int mHintId> = 0;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getImportantForAutofill()>();

        if $i1 != 0 goto label001;

        virtualinvoke r0.<android.widget.TextView: void setImportantForAutofill(int)>(1);

     label001:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getImportantForContentCapture()>();

        if $i2 != 0 goto label002;

        virtualinvoke r0.<android.widget.TextView: void setImportantForContentCapture(int)>(1);

     label002:
        specialinvoke r0.<android.widget.TextView: void setTextInternal(java.lang.CharSequence)>("");

        r95 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r96 = virtualinvoke r95.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        r142 = new android.text.TextPaint;

        specialinvoke r142.<android.text.TextPaint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.text.TextPaint mTextPaint> = r142;

        $r9 = virtualinvoke r95.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r9.<android.util.DisplayMetrics: float density>;

        r142.<android.text.TextPaint: float density> = $f0;

        $r10 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = r96.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r10.<android.text.TextPaint: void setCompatibilityScaling(float)>($f1);

        r143 = new android.graphics.Paint;

        specialinvoke r143.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint> = r143;

        $f2 = r96.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke r143.<android.graphics.Paint: void setCompatibilityScaling(float)>($f2);

        $r12 = virtualinvoke r0.<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>();

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = $r12;

        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = null;

        r144 = new android.widget.TextView$TextAppearanceAttributes;

        specialinvoke r144.<android.widget.TextView$TextAppearanceAttributes: void <init>(android.widget.TextView$1)>(null);

        $r14 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-16777216);

        r144.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor> = $r14;

        r144.<android.widget.TextView$TextAppearanceAttributes: int mTextSize> = 15;

        r0.<android.widget.TextView: int mBreakStrategy> = 0;

        r0.<android.widget.TextView: int mHyphenationFrequency> = 0;

        r0.<android.widget.TextView: int mJustificationMode> = 0;

        r99 = virtualinvoke r93.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r15 = <com.android.internal.R$styleable: int[] TextViewAppearance>;

        r100 = virtualinvoke r99.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r94, $r15, i52, i53);

        r101 = <com.android.internal.R$styleable: int[] TextViewAppearance>;

        virtualinvoke r0.<android.widget.TextView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r93, r101, r94, r100, i52, i53);

        i54 = virtualinvoke r100.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        virtualinvoke r100.<android.content.res.TypedArray: void recycle()>();

        if i54 == -1 goto label003;

        $r79 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r102 = virtualinvoke r99.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i54, $r79);

        $r80 = <com.android.internal.R$styleable: int[] TextAppearance>;

        virtualinvoke r0.<android.widget.TextView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r93, $r80, null, r102, 0, i54);

        goto label004;

     label003:
        r102 = null;

     label004:
        if r102 == null goto label005;

        specialinvoke r0.<android.widget.TextView: void readTextAppearance(android.content.Context,android.content.res.TypedArray,android.widget.TextView$TextAppearanceAttributes,boolean)>(r93, r102, r144, 0);

        r144.<android.widget.TextView$TextAppearanceAttributes: boolean mFontFamilyExplicit> = 0;

        virtualinvoke r102.<android.content.res.TypedArray: void recycle()>();

     label005:
        z17 = virtualinvoke r0.<android.widget.TextView: boolean getDefaultEditable()>();

        r103 = null;

        r104 = null;

        f8 = -1.0F;

        f9 = -1.0F;

        f10 = -1.0F;

        $r16 = <com.android.internal.R$styleable: int[] TextView>;

        r2 = virtualinvoke r99.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r94, $r16, i52, i53);

        $r17 = <com.android.internal.R$styleable: int[] TextView>;

        virtualinvoke r0.<android.widget.TextView: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r93, $r17, r94, r2, i52, i53);

        specialinvoke r0.<android.widget.TextView: void readTextAppearance(android.content.Context,android.content.res.TypedArray,android.widget.TextView$TextAppearanceAttributes,boolean)>(r93, r2, r144, 1);

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getIndexCount()>();

        i55 = 0;

        i56 = -1;

        i57 = 0;

        z18 = 0;

        r105 = null;

        r106 = null;

        r107 = null;

        r108 = null;

        i58 = 0;

        i59 = -1;

        z19 = 0;

        i60 = -1;

        r109 = "";

        r110 = null;

        z20 = 0;

        i61 = 0;

        z21 = 0;

        i62 = 0;

        r111 = null;

        r112 = null;

        r113 = null;

        i63 = -1;

        z22 = 0;

        i64 = -1;

        z23 = 0;

        i65 = -1;

        r114 = null;

     label006:
        if i55 >= i0 goto label094;

        i66 = virtualinvoke r2.<android.content.res.TypedArray: int getIndex(int)>(i55);

        if i66 == 0 goto label092;

        if i66 == 67 goto label091;

        if i66 == 70 goto label090;

        if i66 == 71 goto label089;

        if i66 == 73 goto label088;

        if i66 == 74 goto label087;

        if i66 == 97 goto label086;

        if i66 == 98 goto label085;

        tableswitch(i66)
        {
            case 9: goto label084;
            case 10: goto label083;
            case 11: goto label082;
            case 12: goto label081;
            case 13: goto label080;
            case 14: goto label079;
            case 15: goto label078;
            case 16: goto label077;
            case 17: goto label076;
            case 18: goto label075;
            case 19: goto label074;
            case 20: goto label073;
            case 21: goto label071;
            case 22: goto label070;
            case 23: goto label069;
            case 24: goto label068;
            case 25: goto label067;
            case 26: goto label066;
            case 27: goto label065;
            case 28: goto label064;
            case 29: goto label063;
            case 30: goto label061;
            case 31: goto label060;
            case 32: goto label059;
            case 33: goto label058;
            case 34: goto label056;
            case 35: goto label055;
            default: goto label007;
        };

     label007:
        tableswitch(i66)
        {
            case 40: goto label054;
            case 41: goto label053;
            case 42: goto label052;
            case 43: goto label051;
            case 44: goto label050;
            case 45: goto label049;
            case 46: goto label048;
            case 47: goto label047;
            case 48: goto label046;
            case 49: goto label045;
            case 50: goto label044;
            case 51: goto label043;
            case 52: goto label042;
            case 53: goto label041;
            case 54: goto label040;
            case 55: goto label039;
            case 56: goto label038;
            case 57: goto label037;
            case 58: goto label032;
            case 59: goto label031;
            case 60: goto label030;
            case 61: goto label029;
            case 62: goto label028;
            case 63: goto label027;
            case 64: goto label026;
            default: goto label008;
        };

     label008:
        tableswitch(i66)
        {
            case 79: goto label025;
            case 80: goto label024;
            case 81: goto label023;
            case 82: goto label022;
            case 83: goto label021;
            case 84: goto label020;
            case 85: goto label019;
            case 86: goto label017;
            case 87: goto label016;
            case 88: goto label015;
            case 89: goto label014;
            default: goto label009;
        };

     label009:
        tableswitch(i66)
        {
            case 92: goto label013;
            case 93: goto label012;
            case 94: goto label011;
            default: goto label010;
        };

     label010:
        goto label093;

     label011:
        i63 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        goto label093;

     label012:
        i64 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        goto label093;

     label013:
        i65 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        goto label093;

     label014:
        $i47 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mJustificationMode> = $i47;

        goto label093;

     label015:
        f9 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>(i66, -1.0F);

        goto label093;

     label016:
        f8 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>(i66, -1.0F);

        goto label093;

     label017:
        i67 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        if i67 <= 0 goto label018;

        $r77 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        r115 = virtualinvoke $r77.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i67);

        specialinvoke r0.<android.widget.TextView: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)>(r115);

        virtualinvoke r115.<android.content.res.TypedArray: void recycle()>();

        goto label093;

     label018:
        goto label093;

     label019:
        f10 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>(i66, -1.0F);

        goto label093;

     label020:
        $i48 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mAutoSizeTextType> = $i48;

        goto label093;

     label021:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r78 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z16 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 1);

        $r78.<android.widget.Editor: boolean mAllowUndo> = $z16;

        goto label093;

     label022:
        $i49 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mHyphenationFrequency> = $i49;

        goto label093;

     label023:
        $i50 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mBreakStrategy> = $i50;

        goto label093;

     label024:
        $i51 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        r114 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>($i51, r114);

        goto label093;

     label025:
        r113 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i66);

        goto label093;

     label026:
        $i35 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRes> = $i35;

        goto label093;

     label027:
        $i36 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRightRes> = $i36;

        goto label093;

     label028:
        $i37 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextSelectHandleLeftRes> = $i37;

        goto label093;

     label029:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r62 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r62.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r63 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r66 = $r63.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r64 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r65 = $r64.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i38 = $r65.<android.widget.Editor$InputContentType: int imeActionId>;

        $i39 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, $i38);

        $r66.<android.widget.Editor$InputContentType: int imeActionId> = $i39;

        goto label093;

     label030:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r67 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r67.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r68 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r69 = $r68.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r70 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i66);

        $r69.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = $r70;

        goto label093;

     label031:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r71 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r71.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r72 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r75 = $r72.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r73 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r74 = $r73.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i40 = $r74.<android.widget.Editor$InputContentType: int imeOptions>;

        $i41 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, $i40);

        $r75.<android.widget.Editor$InputContentType: int imeOptions> = $i41;

        goto label093;

     label032:
        $i42 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        virtualinvoke r0.<android.widget.TextView: void setInputExtras(int)>($i42);

     label033:
        goto label036;

     label034:
        $r92 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", $r92);

        goto label093;

     label035:
        $r89 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", $r89);

     label036:
        goto label093;

     label037:
        $r76 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(i66);

        virtualinvoke r0.<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>($r76);

        goto label093;

     label038:
        i61 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        goto label093;

     label039:
        $i43 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        $i44 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, $i43);

        virtualinvoke r0.<android.widget.TextView: void setMarqueeRepeatLimit(int)>($i44);

        goto label093;

     label040:
        $f4 = r0.<android.widget.TextView: float mSpacingMult>;

        $f5 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i66, $f4);

        r0.<android.widget.TextView: float mSpacingMult> = $f5;

        goto label093;

     label041:
        $f6 = r0.<android.widget.TextView: float mSpacingAdd>;

        $i45 = (int) $f6;

        $i46 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, $i45);

        $f7 = (float) $i46;

        r0.<android.widget.TextView: float mSpacingAdd> = $f7;

        goto label093;

     label042:
        i58 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, i58);

        goto label093;

     label043:
        r106 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label044:
        r105 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label045:
        r112 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label046:
        r111 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label047:
        $z15 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 0);

        r0.<android.widget.TextView: boolean mFreezesText> = $z15;

        goto label093;

     label048:
        z17 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z17);

        goto label093;

     label049:
        z23 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z23);

        goto label093;

     label050:
        i56 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, i56);

        goto label093;

     label051:
        r103 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i66);

        goto label093;

     label052:
        z22 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z22);

        goto label093;

     label053:
        r104 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i66);

        goto label093;

     label054:
        i62 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, i62);

        goto label093;

     label055:
        i60 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        goto label093;

     label056:
        $z11 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 1);

        if $z11 != 0 goto label057;

        virtualinvoke r0.<android.widget.TextView: void setIncludeFontPadding(boolean)>(0);

        goto label093;

     label057:
        goto label093;

     label058:
        z18 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z18);

        goto label093;

     label059:
        z19 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z19);

        goto label093;

     label060:
        z20 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, z20);

        goto label093;

     label061:
        $z12 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 0);

        if $z12 == 0 goto label062;

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        goto label093;

     label062:
        goto label093;

     label063:
        $i19 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinEms(int)>($i19);

        goto label093;

     label064:
        $i20 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setWidth(int)>($i20);

        goto label093;

     label065:
        $i21 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setEms(int)>($i21);

        goto label093;

     label066:
        $i22 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxEms(int)>($i22);

        goto label093;

     label067:
        $i23 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinLines(int)>($i23);

        goto label093;

     label068:
        $i24 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setHeight(int)>($i24);

        goto label093;

     label069:
        $i25 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>($i25);

        goto label093;

     label070:
        $i26 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>($i26);

        goto label093;

     label071:
        $z13 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 1);

        if $z13 != 0 goto label072;

        virtualinvoke r0.<android.widget.TextView: void setCursorVisible(boolean)>(0);

        goto label093;

     label072:
        goto label093;

     label073:
        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i66, 1.0F);

        virtualinvoke r0.<android.widget.TextView: void setTextScaleX(float)>($f3);

        goto label093;

     label074:
        $i27 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mHintId> = $i27;

        r110 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i66);

        goto label093;

     label075:
        $i28 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextId> = $i28;

        r109 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i66);

        z21 = 1;

        goto label093;

     label076:
        i57 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, i57);

        goto label093;

     label077:
        $i29 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinHeight(int)>($i29);

        goto label093;

     label078:
        $i30 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinWidth(int)>($i30);

        goto label093;

     label079:
        $i31 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxHeight(int)>($i31);

        goto label093;

     label080:
        $i32 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxWidth(int)>($i32);

        goto label093;

     label081:
        $z14 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 1);

        r0.<android.widget.TextView: boolean mLinksClickable> = $z14;

        goto label093;

     label082:
        $i33 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mAutoLinkMask> = $i33;

        goto label093;

     label083:
        $i34 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, -1);

        virtualinvoke r0.<android.widget.TextView: void setGravity(int)>($i34);

        goto label093;

     label084:
        i59 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i66, i59);

        goto label093;

     label085:
        $i18 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextEditSuggestionHighlightStyle> = $i18;

        goto label093;

     label086:
        $i17 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextEditSuggestionContainerLayout> = $i17;

        goto label093;

     label087:
        r108 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label088:
        r107 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i66);

        goto label093;

     label089:
        $i16 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mTextEditSuggestionItemLayout> = $i16;

        goto label093;

     label090:
        $i15 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(i66, 0);

        r0.<android.widget.TextView: int mCursorDrawableRes> = $i15;

        goto label093;

     label091:
        $z10 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, 0);

        virtualinvoke r0.<android.widget.TextView: void setTextIsSelectable(boolean)>($z10);

        goto label093;

     label092:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        $z9 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i66, $z8);

        virtualinvoke r0.<android.widget.TextView: void setEnabled(boolean)>($z9);

     label093:
        i55 = i55 + 1;

        goto label006;

     label094:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        r118 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        i68 = i61 & 4095;

        if i68 != 129 goto label095;

        z24 = 1;

        goto label096;

     label095:
        z24 = 0;

     label096:
        if i68 != 225 goto label097;

        z25 = 1;

        goto label098;

     label097:
        z25 = 0;

     label098:
        if i68 != 18 goto label099;

        z26 = 1;

        goto label100;

     label099:
        z26 = 0;

     label100:
        $r18 = virtualinvoke r93.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i69 = $r18.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i69 < 26 goto label101;

        z27 = 1;

        goto label102;

     label101:
        z27 = 0;

     label102:
        r0.<android.widget.TextView: boolean mUseInternationalizedInput> = z27;

        if i69 < 28 goto label103;

        z28 = 1;

        goto label104;

     label103:
        z28 = 0;

     label104:
        r0.<android.widget.TextView: boolean mUseFallbackLineSpacing> = z28;

        if r103 == null goto label122;

     label105:
        $r58 = interfaceinvoke r103.<java.lang.CharSequence: java.lang.String toString()>();

        r119 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r58);

     label106:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        r120 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r121 = virtualinvoke r119.<java.lang.Class: java.lang.Object newInstance()>();

     label107:
        $r59 = (android.text.method.KeyListener) r121;

        r120.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r59;

     label108:
        r122 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

     label109:
        if i61 == 0 goto label110;

        i70 = i61;

        goto label111;

     label110:
        $r60 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r61 = $r60.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        i70 = interfaceinvoke $r61.<android.text.method.KeyListener: int getInputType()>();

     label111:
        r122.<android.widget.Editor: int mInputType> = i70;

     label112:
        goto label114;

     label113:
        $r90 := @caughtexception;

        $r91 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r91.<android.widget.Editor: int mInputType> = 1;

     label114:
        goto label138;

     label115:
        $r88 := @caughtexception;

        r123 = $r88;

        goto label118;

     label116:
        $r83 := @caughtexception;

        r124 = $r83;

        goto label120;

     label117:
        $r85 := @caughtexception;

        r123 = $r85;

     label118:
        r145 = new java.lang.RuntimeException;

        specialinvoke r145.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r123);

        throw r145;

     label119:
        $r87 := @caughtexception;

        r124 = $r87;

     label120:
        r146 = new java.lang.RuntimeException;

        specialinvoke r146.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r124);

        throw r146;

     label121:
        $r81 := @caughtexception;

        r147 = new java.lang.RuntimeException;

        specialinvoke r147.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r81);

        throw r147;

     label122:
        if r104 == null goto label125;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r55 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r56 = interfaceinvoke r104.<java.lang.CharSequence: java.lang.String toString()>();

        $r57 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>($r56);

        $r55.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r57;

        r126 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if i61 == 0 goto label123;

        i71 = i61;

        goto label124;

     label123:
        i71 = 1;

     label124:
        r126.<android.widget.Editor: int mInputType> = i71;

        goto label138;

     label125:
        if i61 == 0 goto label126;

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i61, 1);

        $z7 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i61);

        z19 = $z7 ^ 1;

        goto label147;

     label126:
        if z22 == 0 goto label127;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r53 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r54 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        $r53.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r54;

        r127 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r127.<android.widget.Editor: int mInputType> = 3;

        goto label147;

     label127:
        if i62 == 0 goto label132;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        r128 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i13 = i62 & 2;

        if $i13 == 0 goto label128;

        z29 = 1;

        goto label129;

     label128:
        z29 = 0;

     label129:
        $i14 = i62 & 4;

        if $i14 == 0 goto label130;

        z30 = 1;

        goto label131;

     label130:
        z30 = 0;

     label131:
        $r49 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>(null, z29, z30);

        r128.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r49;

        $r50 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r51 = $r50.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        i72 = interfaceinvoke $r51.<android.text.method.KeyListener: int getInputType()>();

        $r52 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r52.<android.widget.Editor: int mInputType> = i72;

        goto label147;

     label132:
        if z23 != 0 goto label142;

        if i56 == -1 goto label133;

        goto label142;

     label133:
        if z17 == 0 goto label134;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r46 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r47 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r46.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r47;

        $r48 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r48.<android.widget.Editor: int mInputType> = 1;

        goto label138;

     label134:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z6 == 0 goto label136;

        r129 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r129 == null goto label135;

        r129.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

        $r45 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r45.<android.widget.Editor: int mInputType> = 0;

     label135:
        r118 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        $r44 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r44);

        goto label147;

     label136:
        r130 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r130 == null goto label137;

        r130.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

     label137:
        if i57 == 0 goto label141;

        if i57 == 1 goto label140;

        if i57 == 2 goto label139;

     label138:
        goto label147;

     label139:
        r118 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        goto label147;

     label140:
        r118 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label147;

     label141:
        r118 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        goto label147;

     label142:
        s73 = 1;

        if i56 == 1 goto label145;

        if i56 == 2 goto label144;

        if i56 == 3 goto label143;

        r131 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

        goto label146;

     label143:
        r131 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        s73 = 4097;

        goto label146;

     label144:
        r131 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        s73 = 8193;

        goto label146;

     label145:
        r131 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        s73 = 16385;

     label146:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r132 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r133 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z23, r131);

        $r132.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r133;

        $r134 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r134.<android.widget.Editor: int mInputType> = s73;

     label147:
        r135 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r135 == null goto label148;

        virtualinvoke r135.<android.widget.Editor: void adjustInputType(boolean,boolean,boolean,boolean)>(z20, z24, z25, z26);

        goto label148;

     label148:
        if z18 == 0 goto label149;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r42 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r42.<android.widget.Editor: boolean mSelectAllOnFocus> = 1;

        r136 = r118;

        $r43 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        if r118 != $r43 goto label150;

        r136 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label150;

     label149:
        r136 = r118;

     label150:
        if r113 != null goto label152;

        if r114 == null goto label151;

        goto label152;

     label151:
        goto label155;

     label152:
        $r19 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r19 != null goto label153;

        r148 = new android.widget.TextView$Drawables;

        specialinvoke r148.<android.widget.TextView$Drawables: void <init>(android.content.Context)>(r93);

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r148;

        goto label153;

     label153:
        if r113 == null goto label154;

        $r39 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r39.<android.widget.TextView$Drawables: android.content.res.ColorStateList mTintList> = r113;

        $r40 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r40.<android.widget.TextView$Drawables: boolean mHasTint> = 1;

        goto label154;

     label154:
        if r114 == null goto label155;

        $r37 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r37.<android.widget.TextView$Drawables: android.graphics.BlendMode mBlendMode> = r114;

        $r38 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r38.<android.widget.TextView$Drawables: boolean mHasTintMode> = 1;

     label155:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r105, r111, r106, r112);

        specialinvoke r0.<android.widget.TextView: void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r107, r108);

        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablePadding(int)>(i58);

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z19);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z19, z19, z19);

        if z19 == 0 goto label156;

        $r36 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r36 != null goto label156;

        if i59 != -1 goto label156;

        i74 = 3;

        goto label157;

     label156:
        i74 = i59;

     label157:
        if i74 == 1 goto label163;

        if i74 == 2 goto label162;

        if i74 == 3 goto label161;

        if i74 == 4 goto label158;

        goto label164;

     label158:
        $r34 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r93);

        $z5 = virtualinvoke $r34.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z5 == 0 goto label159;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        goto label160;

     label159:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

     label160:
        $r35 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r35);

        goto label164;

     label161:
        $r33 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r33);

        goto label164;

     label162:
        $r32 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r32);

        goto label164;

     label163:
        $r20 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r20);

     label164:
        if z20 != 0 goto label166;

        if z24 != 0 goto label166;

        if z25 != 0 goto label166;

        if z26 == 0 goto label165;

        goto label166;

     label165:
        z31 = 0;

        goto label167;

     label166:
        z31 = 1;

     label167:
        if z31 != 0 goto label169;

        r137 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r137 == null goto label168;

        $i11 = r137.<android.widget.Editor: int mInputType>;

        $i12 = $i11 & 4095;

        if $i12 != 129 goto label168;

        goto label169;

     label168:
        z32 = 0;

        goto label170;

     label169:
        z32 = 1;

     label170:
        if z32 == 0 goto label171;

        r144.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex> = 3;

        goto label171;

     label171:
        specialinvoke r0.<android.widget.TextView: void applyTextAppearance(android.widget.TextView$TextAppearanceAttributes)>(r144);

        if z31 == 0 goto label172;

        $r31 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r31);

     label172:
        if i60 < 0 goto label173;

        $r29 = newarray (android.text.InputFilter)[1];

        r149 = new android.text.InputFilter$LengthFilter;

        specialinvoke r149.<android.text.InputFilter$LengthFilter: void <init>(int)>(i60);

        $r29[0] = r149;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r29);

        goto label174;

     label173:
        $r21 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r21);

     label174:
        r151 = (java.lang.CharSequence) r109;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r151, r136);

        $r22 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r22 != null goto label175;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = "";

        goto label175;

     label175:
        $r23 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        if $r23 != null goto label176;

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = "";

     label176:
        if z21 == 0 goto label177;

        r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId> = 1;

     label177:
        if r110 == null goto label178;

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>(r110);

     label178:
        $r24 = <com.android.internal.R$styleable: int[] View>;

        r138 = virtualinvoke r93.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r94, $r24, i52, i53);

        $r25 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r25 != null goto label180;

        $r28 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r28 == null goto label179;

        goto label180;

     label179:
        z33 = 0;

        goto label181;

     label180:
        z33 = 1;

     label181:
        if z33 != 0 goto label183;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isClickable()>();

        if $z4 == 0 goto label182;

        goto label183;

     label182:
        z34 = 0;

        goto label184;

     label183:
        z34 = 1;

     label184:
        if z33 != 0 goto label186;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isLongClickable()>();

        if $z3 == 0 goto label185;

        goto label186;

     label185:
        z35 = 0;

        goto label187;

     label186:
        z35 = 1;

     label187:
        i75 = virtualinvoke r0.<android.widget.TextView: int getFocusable()>();

        i76 = virtualinvoke r138.<android.content.res.TypedArray: int getIndexCount()>();

        i77 = 0;

        z37 = z35;

        z38 = z34;

     label188:
        if i77 >= i76 goto label196;

        i78 = virtualinvoke r138.<android.content.res.TypedArray: int getIndex(int)>(i77);

        if i78 == 19 goto label191;

        if i78 == 30 goto label190;

        if i78 == 31 goto label189;

        goto label195;

     label189:
        z37 = virtualinvoke r138.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i78, z37);

        goto label195;

     label190:
        z38 = virtualinvoke r138.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i78, z38);

        goto label195;

     label191:
        r150 = new android.util.TypedValue;

        specialinvoke r150.<android.util.TypedValue: void <init>()>();

        $z2 = virtualinvoke r138.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(i78, r150);

        if $z2 == 0 goto label195;

        $i9 = r150.<android.util.TypedValue: int type>;

        if $i9 != 18 goto label193;

        $i10 = r150.<android.util.TypedValue: int data>;

        if $i10 != 0 goto label192;

        i75 = 0;

        goto label194;

     label192:
        i75 = 1;

        goto label194;

     label193:
        i75 = r150.<android.util.TypedValue: int data>;

     label194:
        goto label195;

     label195:
        i77 = i77 + 1;

        goto label188;

     label196:
        virtualinvoke r138.<android.content.res.TypedArray: void recycle()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getFocusable()>();

        if i75 == $i3 goto label197;

        virtualinvoke r0.<android.widget.TextView: void setFocusable(int)>(i75);

     label197:
        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z38);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z37);

        r140 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r140 == null goto label198;

        virtualinvoke r140.<android.widget.Editor: void prepareCursorControllers()>();

     label198:
        $i4 = virtualinvoke r0.<android.widget.TextView: int getImportantForAccessibility()>();

        if $i4 != 0 goto label199;

        virtualinvoke r0.<android.widget.TextView: void setImportantForAccessibility(int)>(1);

        goto label199;

     label199:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label204;

        $i5 = r0.<android.widget.TextView: int mAutoSizeTextType>;

        if $i5 != 1 goto label205;

        $z1 = r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues>;

        if $z1 != 0 goto label203;

        $r26 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r141 = virtualinvoke $r26.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $b6 = f8 cmpl -1.0F;

        if $b6 != 0 goto label200;

        f8 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(2, 12.0F, r141);

        goto label200;

     label200:
        $b7 = f9 cmpl -1.0F;

        if $b7 != 0 goto label201;

        f9 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(2, 112.0F, r141);

        goto label201;

     label201:
        $b8 = f10 cmpl -1.0F;

        if $b8 != 0 goto label202;

        f10 = 1.0F;

        goto label202;

     label202:
        specialinvoke r0.<android.widget.TextView: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)>(f8, f9, f10);

     label203:
        specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeText()>();

        goto label205;

     label204:
        r0.<android.widget.TextView: int mAutoSizeTextType> = 0;

     label205:
        if i65 < 0 goto label206;

        virtualinvoke r0.<android.widget.TextView: void setFirstBaselineToTopHeight(int)>(i65);

        goto label206;

     label206:
        if i64 < 0 goto label207;

        virtualinvoke r0.<android.widget.TextView: void setLastBaselineToBottomHeight(int)>(i64);

        goto label207;

     label207:
        if i63 < 0 goto label208;

        virtualinvoke r0.<android.widget.TextView: void setLineHeight(int)>(i63);

        goto label208;

     label208:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label035;
        catch java.io.IOException from label032 to label033 with label034;
        catch java.lang.ClassNotFoundException from label105 to label106 with label121;
        catch java.lang.InstantiationException from label106 to label107 with label119;
        catch java.lang.IllegalAccessException from label106 to label107 with label117;
        catch java.lang.InstantiationException from label107 to label108 with label116;
        catch java.lang.IllegalAccessException from label107 to label108 with label115;
        catch java.lang.IncompatibleClassChangeError from label108 to label109 with label113;
        catch java.lang.IncompatibleClassChangeError from label110 to label111 with label113;
        catch java.lang.IncompatibleClassChangeError from label111 to label112 with label113;
    }

    static android.widget.Editor access$100(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        return $r1;
    }

    static android.text.Layout access$1000(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    static android.content.Context access$1100(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.CharSequence access$1200(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        return $r1;
    }

    static void access$1300(android.widget.TextView, java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static android.content.Context access$1400(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static void access$400(android.widget.TextView)
    {
        android.widget.TextView r0;

        r0 := @parameter0: android.widget.TextView;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleLocked()>();

        return;
    }

    private void applyCompoundDrawableTint()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;
        android.graphics.BlendMode r2;
        boolean z0, z1, $z2, $z3, $z5;
        android.graphics.drawable.Drawable[] r3;
        int i0, i1;
        android.graphics.drawable.Drawable r4, $r11;
        android.widget.TextView$Drawables $r5, $r6, $r7, $r8, $r9, $r10, $r13, r14;
        int[] r15;

        r0 := @this: android.widget.TextView;

        r14 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r14 != null goto label1;

        return;

     label1:
        $z2 = r14.<android.widget.TextView$Drawables: boolean mHasTint>;

        if $z2 != 0 goto label2;

        $r13 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $z5 = $r13.<android.widget.TextView$Drawables: boolean mHasTintMode>;

        if $z5 == 0 goto label9;

     label2:
        $r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r1 = $r5.<android.widget.TextView$Drawables: android.content.res.ColorStateList mTintList>;

        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r2 = $r6.<android.widget.TextView$Drawables: android.graphics.BlendMode mBlendMode>;

        $r7 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        z0 = $r7.<android.widget.TextView$Drawables: boolean mHasTint>;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        z1 = $r8.<android.widget.TextView$Drawables: boolean mHasTintMode>;

        r15 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r9 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r3 = $r9.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label9;

        r4 = r3[i1];

        if r4 != null goto label4;

        goto label8;

     label4:
        $r10 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r11 = $r10.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableError>;

        if r4 != $r11 goto label5;

        goto label8;

     label5:
        virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if z0 == 0 goto label6;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

     label6:
        if z1 == 0 goto label7;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>(r2);

     label7:
        $z3 = virtualinvoke r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label8;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r15);

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        return;
    }

    private void applySingleLine(boolean, boolean, boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1, z2;
        android.text.method.SingleLineTransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r0.<android.widget.TextView: boolean mSingleLine> = z0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>(1);

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        if z1 == 0 goto label3;

        $r1 = staticinvoke <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        goto label3;

     label1:
        if z2 == 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>(2147483647);

     label2:
        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(0);

        if z1 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

     label3:
        return;
    }

    private void applyTextAppearance(android.widget.TextView$TextAppearanceAttributes)
    {
        android.widget.TextView r0;
        android.widget.TextView$TextAppearanceAttributes r1;
        android.content.res.ColorStateList $r2, $r3, $r4, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.os.LocaleList $r5, $r12;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7;
        java.lang.String $r6, $r7, $r8, $r9, $r17;
        float $f0, $f1, $f2, $f3, $f4;
        android.text.method.AllCapsTransformationMethod $r10;
        android.content.Context $r11;
        android.graphics.Typeface $r16;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.TextView$TextAppearanceAttributes;

        $r2 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor>;

        if $r2 == null goto label01;

        $r15 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor>;

        virtualinvoke r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r15);

     label01:
        $r3 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorHint>;

        if $r3 == null goto label02;

        $r14 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorHint>;

        virtualinvoke r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>($r14);

     label02:
        $r4 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorLink>;

        if $r4 == null goto label03;

        $r13 = r1.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorLink>;

        virtualinvoke r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>($r13);

     label03:
        $i0 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextColorHighlight>;

        if $i0 == 0 goto label04;

        $i6 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextColorHighlight>;

        virtualinvoke r0.<android.widget.TextView: void setHighlightColor(int)>($i6);

     label04:
        $i1 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextSize>;

        if $i1 == -1 goto label05;

        $i4 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextSizeUnit>;

        r0.<android.widget.TextView: int mTextSizeUnit> = $i4;

        $i5 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextSize>;

        $f4 = (float) $i5;

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float,boolean)>($f4, 1);

     label05:
        $r5 = r1.<android.widget.TextView$TextAppearanceAttributes: android.os.LocaleList mTextLocales>;

        if $r5 == null goto label06;

        $r12 = r1.<android.widget.TextView$TextAppearanceAttributes: android.os.LocaleList mTextLocales>;

        virtualinvoke r0.<android.widget.TextView: void setTextLocales(android.os.LocaleList)>($r12);

     label06:
        $i2 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex>;

        if $i2 == -1 goto label07;

        $z7 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mFontFamilyExplicit>;

        if $z7 != 0 goto label07;

        r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFamily> = null;

     label07:
        $r16 = r1.<android.widget.TextView$TextAppearanceAttributes: android.graphics.Typeface mFontTypeface>;

        $r17 = r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFamily>;

        $i7 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex>;

        $i8 = r1.<android.widget.TextView$TextAppearanceAttributes: int mTextStyle>;

        $i9 = r1.<android.widget.TextView$TextAppearanceAttributes: int mFontWeight>;

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(android.graphics.Typeface,java.lang.String,int,int,int)>($r16, $r17, $i7, $i8, $i9);

        $i10 = r1.<android.widget.TextView$TextAppearanceAttributes: int mShadowColor>;

        if $i10 == 0 goto label08;

        $f3 = r1.<android.widget.TextView$TextAppearanceAttributes: float mShadowRadius>;

        $f2 = r1.<android.widget.TextView$TextAppearanceAttributes: float mShadowDx>;

        $f1 = r1.<android.widget.TextView$TextAppearanceAttributes: float mShadowDy>;

        $i3 = r1.<android.widget.TextView$TextAppearanceAttributes: int mShadowColor>;

        virtualinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>($f3, $f2, $f1, $i3);

     label08:
        $z0 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mAllCaps>;

        if $z0 == 0 goto label09;

        $r10 = new android.text.method.AllCapsTransformationMethod;

        $r11 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r10.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r11);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r10);

     label09:
        $z1 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mHasElegant>;

        if $z1 == 0 goto label10;

        $z6 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mElegant>;

        virtualinvoke r0.<android.widget.TextView: void setElegantTextHeight(boolean)>($z6);

     label10:
        $z2 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mHasFallbackLineSpacing>;

        if $z2 == 0 goto label11;

        $z5 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mFallbackLineSpacing>;

        virtualinvoke r0.<android.widget.TextView: void setFallbackLineSpacing(boolean)>($z5);

     label11:
        $z3 = r1.<android.widget.TextView$TextAppearanceAttributes: boolean mHasLetterSpacing>;

        if $z3 == 0 goto label12;

        $f0 = r1.<android.widget.TextView$TextAppearanceAttributes: float mLetterSpacing>;

        virtualinvoke r0.<android.widget.TextView: void setLetterSpacing(float)>($f0);

     label12:
        $r6 = r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings>;

        if $r6 == null goto label13;

        $r9 = r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings>;

        virtualinvoke r0.<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>($r9);

     label13:
        $r7 = r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings>;

        if $r7 == null goto label14;

        $r8 = r1.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings>;

        virtualinvoke r0.<android.widget.TextView: boolean setFontVariationSettings(java.lang.String)>($r8);

     label14:
        return;
    }

    private void assumeLayout()
    {
        android.widget.TextView r0;
        android.text.BoringLayout$Metrics r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $i1 = r0.<android.widget.TextView: int mRight>;

        $i0 = r0.<android.widget.TextView: int mLeft>;

        $i2 = $i1 - $i0;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i6 = $i4 - $i5;

        i7 = i6;

        if i6 >= 1 goto label1;

        i7 = 0;

     label1:
        i8 = i7;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z0 == 0 goto label2;

        i8 = 1048576;

     label2:
        r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i8, i7, r1, r1, i7, 0);

        return;
    }

    private void autoSizeText()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        android.graphics.RectF r1, $r3, $r4, $r5, $r6;
        float f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2;
        byte $b12;
        android.text.BoringLayout$Metrics $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isAutoSizeEnabled()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = r0.<android.widget.TextView: boolean mNeedsAutoSizeText>;

        if $z1 == 0 goto label14;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getMeasuredWidth()>();

        if $i1 <= 0 goto label13;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getMeasuredHeight()>();

        if $i2 > 0 goto label02;

        goto label13;

     label02:
        $z2 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z2 == 0 goto label03;

        i20 = 1048576;

        goto label04;

     label03:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getMeasuredWidth()>();

        $i4 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        i20 = $i5 - $i6;

     label04:
        $i7 = virtualinvoke r0.<android.widget.TextView: int getMeasuredHeight()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i0 = $i9 - $i10;

        if i20 <= 0 goto label12;

        if i0 > 0 goto label05;

        goto label12;

     label05:
        r1 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        entermonitor r1;

     label06:
        $r3 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r3.<android.graphics.RectF: void setEmpty()>();

        $r4 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f1 = (float) i20;

        $r4.<android.graphics.RectF: float right> = $f1;

        $r5 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f2 = (float) i0;

        $r5.<android.graphics.RectF: float bottom> = $f2;

        $r6 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $i11 = specialinvoke r0.<android.widget.TextView: int findLargestTextSizeWhichFits(android.graphics.RectF)>($r6);

        f0 = (float) $i11;

        $f3 = virtualinvoke r0.<android.widget.TextView: float getTextSize()>();

        $b12 = f0 cmpl $f3;

        if $b12 == 0 goto label07;

        specialinvoke r0.<android.widget.TextView: void setTextSizeInternal(int,float,boolean)>(0, f0, 0);

        $r7 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r8 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i14 = r0.<android.widget.TextView: int mRight>;

        $i13 = r0.<android.widget.TextView: int mLeft>;

        $i15 = $i14 - $i13;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i17 = $i15 - $i16;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i19 = $i17 - $i18;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i20, 0, $r7, $r8, $i19, 0);

     label07:
        exitmonitor r1;

     label08:
        goto label14;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

     label12:
        return;

     label13:
        return;

     label14:
        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 1;

        return;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean bringTextIntoView()
    {
        android.widget.TextView r0;
        android.text.Layout$Alignment r1, $r2, $r3, $r4, r6, $r7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, $i32;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.text.Layout r5;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z0 == 0 goto label01;

        r5 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        goto label02;

     label01:
        r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

     label02:
        i27 = 0;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        $i5 = $i4 & 112;

        if $i5 != 80 goto label03;

        $i26 = virtualinvoke r5.<android.text.Layout: int getLineCount()>();

        i27 = $i26 - 1;

     label03:
        r1 = virtualinvoke r5.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i27);

        i0 = virtualinvoke r5.<android.text.Layout: int getParagraphDirection(int)>(i27);

        $i7 = r0.<android.widget.TextView: int mRight>;

        $i6 = r0.<android.widget.TextView: int mLeft>;

        $i8 = $i7 - $i6;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i1 = $i10 - $i11;

        $i13 = r0.<android.widget.TextView: int mBottom>;

        $i12 = r0.<android.widget.TextView: int mTop>;

        $i14 = $i13 - $i12;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i16 = $i14 - $i15;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i2 = $i16 - $i17;

        i3 = virtualinvoke r5.<android.text.Layout: int getHeight()>();

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r1 != $r2 goto label06;

        if i0 != 1 goto label04;

        r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label05;

     label04:
        r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

     label05:
        goto label08;

     label06:
        r6 = r1;

        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r1 != $r3 goto label08;

        if i0 != 1 goto label07;

        r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label08;

     label07:
        r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

     label08:
        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r6 != $r7 goto label12;

        $f2 = virtualinvoke r5.<android.text.Layout: float getLineLeft(int)>(i27);

        $d4 = (double) $f2;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        i28 = (int) $d5;

        $f3 = virtualinvoke r5.<android.text.Layout: float getLineRight(int)>(i27);

        $d6 = (double) $f3;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        i29 = (int) $d7;

        $i22 = i29 - i28;

        if $i22 >= i1 goto label09;

        $i23 = i29 + i28;

        $i25 = $i23 / 2;

        $i24 = i1 / 2;

        i30 = $i25 - $i24;

        goto label11;

     label09:
        if i0 >= 0 goto label10;

        i30 = i29 - i1;

        goto label11;

     label10:
        i30 = i28;

     label11:
        goto label14;

     label12:
        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r6 != $r4 goto label13;

        $f1 = virtualinvoke r5.<android.text.Layout: float getLineRight(int)>(i27);

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i21 = (int) $d3;

        i30 = $i21 - i1;

        goto label14;

     label13:
        $f0 = virtualinvoke r5.<android.text.Layout: float getLineLeft(int)>(i27);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i30 = (int) $d1;

     label14:
        if i3 >= i2 goto label15;

        i31 = 0;

        goto label17;

     label15:
        $i18 = r0.<android.widget.TextView: int mGravity>;

        $i19 = $i18 & 112;

        if $i19 != 80 goto label16;

        i31 = i3 - i2;

        goto label17;

     label16:
        i31 = 0;

     label17:
        $i32 = r0.<android.widget.TextView: int mScrollX>;

        if i30 != $i32 goto label19;

        $i20 = r0.<android.widget.TextView: int mScrollY>;

        if i31 == $i20 goto label18;

        goto label19;

     label18:
        return 0;

     label19:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i30, i31);

        return 1;
    }

    private boolean canMarquee()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        android.text.Layout r1, $r2;
        float $f0, $f1, $f2, $f3;
        byte $b7, $b9;
        boolean z0;

        r0 := @this: android.widget.TextView;

        $i2 = r0.<android.widget.TextView: int mRight>;

        $i1 = r0.<android.widget.TextView: int mLeft>;

        $i3 = $i2 - $i1;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i0 = $i5 - $i6;

        z0 = 0;

        if i0 <= 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r2.<android.text.Layout: float getLineWidth(int)>(0);

        $f1 = (float) i0;

        $b7 = $f0 cmpl $f1;

        if $b7 > 0 goto label1;

        $i8 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i8 == 0 goto label2;

        r1 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        if r1 == null goto label2;

        $f2 = virtualinvoke r1.<android.text.Layout: float getLineWidth(int)>(0);

        $f3 = (float) i0;

        $b9 = $f2 cmpl $f3;

        if $b9 <= 0 goto label2;

     label1:
        z0 = 1;

        goto label2;

     label2:
        return z0;
    }

    private void changeListenerLocaleTo(java.util.Locale)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.Editor $r1, r4, $r7, r8, r9;
        android.text.method.DigitsKeyListener $r2;
        java.util.Locale r3;
        android.text.method.KeyListener r5;
        android.text.method.NumberKeyListener r6;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: java.util.Locale;

        $z1 = r0.<android.widget.TextView: boolean mListenerChanged>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r4 == null goto label8;

        r5 = r4.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $z2 = r5 instanceof android.text.method.DigitsKeyListener;

        if $z2 == 0 goto label2;

        $r2 = (android.text.method.DigitsKeyListener) r5;

        r6 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,android.text.method.DigitsKeyListener)>(r3, $r2);

        goto label5;

     label2:
        $z3 = r5 instanceof android.text.method.DateKeyListener;

        if $z3 == 0 goto label3;

        r6 = staticinvoke <android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance(java.util.Locale)>(r3);

        goto label5;

     label3:
        $z4 = r5 instanceof android.text.method.TimeKeyListener;

        if $z4 == 0 goto label4;

        r6 = staticinvoke <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance(java.util.Locale)>(r3);

        goto label5;

     label4:
        $z5 = r5 instanceof android.text.method.DateTimeKeyListener;

        if $z5 == 0 goto label7;

        r6 = staticinvoke <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance(java.util.Locale)>(r3);

     label5:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i6 = $r7.<android.widget.Editor: int mInputType>;

        z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>($i6);

        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r6);

        specialinvoke r0.<android.widget.TextView: void setInputTypeFromEditor()>();

        if z0 == 0 goto label8;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r1.<android.widget.Editor: int mInputType>;

        i0 = $i1 & 15;

        if i0 != 1 goto label6;

        r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i4 = r8.<android.widget.Editor: int mInputType>;

        $i5 = $i4 | 128;

        r8.<android.widget.Editor: int mInputType> = $i5;

        goto label8;

     label6:
        if i0 != 2 goto label8;

        r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i2 = r9.<android.widget.Editor: int mInputType>;

        $i3 = $i2 | 16;

        r9.<android.widget.Editor: int mInputType> = $i3;

        goto label8;

     label7:
        return;

     label8:
        return;
    }

    private void checkForRelayout()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        android.view.ViewGroup$LayoutParams $r1, $r7, $r9;
        java.lang.CharSequence $r2;
        android.text.Layout $r3, $r4, $r8, $r10, r11, r13;
        android.text.TextUtils$TruncateAt $r5, $r6;
        android.text.BoringLayout$Metrics r12;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i2 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i2 != -2 goto label1;

        $i22 = r0.<android.widget.TextView: int mMaxWidthMode>;

        $i21 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i22 != $i21 goto label8;

        $i24 = r0.<android.widget.TextView: int mMaxWidth>;

        $i23 = r0.<android.widget.TextView: int mMinWidth>;

        if $i24 != $i23 goto label8;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r2 == null goto label2;

        $r10 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r10 == null goto label8;

     label2:
        $i4 = r0.<android.widget.TextView: int mRight>;

        $i3 = r0.<android.widget.TextView: int mLeft>;

        $i5 = $i4 - $i3;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i9 = $i7 - $i8;

        if $i9 <= 0 goto label8;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = virtualinvoke $r3.<android.text.Layout: int getHeight()>();

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        r11 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r11 != null goto label3;

        i25 = 0;

        goto label4;

     label3:
        i25 = virtualinvoke r11.<android.text.Layout: int getWidth()>();

     label4:
        r12 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i11 = r0.<android.widget.TextView: int mRight>;

        $i10 = r0.<android.widget.TextView: int mLeft>;

        $i12 = $i11 - $i10;

        $i13 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = $i12 - $i13;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i16 = $i14 - $i15;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i1, i25, r12, r12, $i16, 0);

        $r6 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r6 == $r5 goto label7;

        $r7 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i17 = $r7.<android.view.ViewGroup$LayoutParams: int height>;

        if $i17 == -2 goto label5;

        $r9 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i20 = $r9.<android.view.ViewGroup$LayoutParams: int height>;

        if $i20 == -1 goto label5;

        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label5:
        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i18 = virtualinvoke $r8.<android.text.Layout: int getHeight()>();

        if $i18 != i0 goto label7;

        r13 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r13 == null goto label6;

        $i19 = virtualinvoke r13.<android.text.Layout: int getHeight()>();

        if $i19 != i0 goto label7;

     label6:
        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label7:
        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label9;

     label8:
        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label9:
        return;
    }

    private void checkForResize()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;
        android.view.ViewGroup$LayoutParams $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, z1;

        r0 := @this: android.widget.TextView;

        z0 = 0;

        z1 = 0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label4;

        $r2 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -2 goto label1;

        z1 = 1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        $r3 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -2 goto label3;

        z0 = z1;

        $i6 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i7 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        if $i6 == $i7 goto label2;

        z0 = 1;

     label2:
        goto label4;

     label3:
        z0 = z1;

        $r4 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i2 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 != -1 goto label2;

        z0 = z1;

        $i3 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i3 < 0 goto label4;

        z0 = z1;

        $i4 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i5 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i4 == $i5 goto label4;

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

     label5:
        return;
    }

    private int[] cleanupAutoSizePresetSizes(int[])
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, i4;
        android.util.IntArray $r2;
        int[] r3;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: int[];

        i0 = lengthof r3;

        if i0 != 0 goto label1;

        return r3;

     label1:
        staticinvoke <java.util.Arrays: void sort(int[])>(r3);

        $r2 = new android.util.IntArray;

        specialinvoke $r2.<android.util.IntArray: void <init>()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        i1 = r3[i4];

        if i1 <= 0 goto label3;

        $i3 = virtualinvoke $r2.<android.util.IntArray: int binarySearch(int)>(i1);

        if $i3 >= 0 goto label3;

        virtualinvoke $r2.<android.util.IntArray: void add(int)>(i1);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $i2 = virtualinvoke $r2.<android.util.IntArray: int size()>();

        if i0 != $i2 goto label5;

        goto label6;

     label5:
        r3 = virtualinvoke $r2.<android.util.IntArray: int[] toArray()>();

     label6:
        return r3;
    }

    private void clearAutoSizeConfiguration()
    {
        android.widget.TextView r0;
        int[] $r1;

        r0 := @this: android.widget.TextView;

        r0.<android.widget.TextView: int mAutoSizeTextType> = 0;

        r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx> = -1.0F;

        r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx> = -1.0F;

        r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx> = -1.0F;

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx> = $r1;

        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 0;

        return;
    }

    private boolean compressText(float)
    {
        android.widget.TextView r0;
        boolean $z0, $z1;
        byte $b0, $b2, $b3, $b4;
        android.text.Layout $r1, $r3;
        int $i1;
        android.text.TextPaint $r2, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;
        android.widget.TextView$2 $r5;

        r0 := @this: android.widget.TextView;

        f6 := @parameter0: float;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $b0 = f6 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i1 != 1 goto label2;

        $z1 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z1 != 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r2.<android.text.TextPaint: float getTextScaleX()>();

        $b2 = $f0 cmpl 1.0F;

        if $b2 != 0 goto label2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $f2 = $f1 + 1.0F;

        $f3 = $f2 - f6;

        f7 = $f3 / f6;

        $b3 = f7 cmpl 0.0F;

        if $b3 <= 0 goto label2;

        $b4 = f7 cmpg 0.07F;

        if $b4 > 0 goto label2;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f4 = 1.0F - f7;

        $f5 = $f4 - 0.005F;

        virtualinvoke $r4.<android.text.TextPaint: void setTextScaleX(float)>($f5);

        $r5 = new android.widget.TextView$2;

        specialinvoke $r5.<android.widget.TextView$2: void <init>(android.widget.TextView)>(r0);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r5);

        return 1;

     label2:
        return 0;
    }

    private void convertFromViewportToContentCoordinates(android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i8 = virtualinvoke r0.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i0 = r1.<android.graphics.Rect: int left>;

        $i1 = $i0 + i8;

        r1.<android.graphics.Rect: int left> = $i1;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i3 = $i2 + i8;

        r1.<android.graphics.Rect: int right> = $i3;

        i9 = virtualinvoke r0.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i4 = r1.<android.graphics.Rect: int top>;

        $i5 = $i4 + i9;

        r1.<android.graphics.Rect: int top> = $i5;

        $i6 = r1.<android.graphics.Rect: int bottom>;

        $i7 = $i6 + i9;

        r1.<android.graphics.Rect: int bottom> = $i7;

        return;
    }

    private void createEditorIfNeeded()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor;

        specialinvoke $r2.<android.widget.Editor: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.Editor mEditor> = $r2;

     label1:
        return;
    }

    private static int desired(android.text.Layout)
    {
        android.text.Layout r0;
        int i0, $i1, $i2, $i3, $i4, i6, i7;
        java.lang.CharSequence r1;
        double $d0, $d1;
        float $f0, f1;
        char $c5;

        r0 := @parameter0: android.text.Layout;

        i0 = virtualinvoke r0.<android.text.Layout: int getLineCount()>();

        r1 = virtualinvoke r0.<android.text.Layout: java.lang.CharSequence getText()>();

        f1 = 0.0F;

        i6 = 0;

     label1:
        $i1 = i0 - 1;

        if i6 >= $i1 goto label3;

        $i3 = virtualinvoke r0.<android.text.Layout: int getLineEnd(int)>(i6);

        $i4 = $i3 - 1;

        $c5 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i4);

        if $c5 == 10 goto label2;

        return -1;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        i7 = 0;

     label4:
        if i7 >= i0 goto label5;

        $f0 = virtualinvoke r0.<android.text.Layout: float getLineWidth(int)>(i7);

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f0);

        i7 = i7 + 1;

        goto label4;

     label5:
        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d1;

        return $i2;
    }

    private int doKeyDown(int, android.view.KeyEvent, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int $i1, $i2, $i3, i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, z31, z32, z34, z35, z37, z38, $z39;
        android.text.Layout $r1;
        android.text.Spannable $r2, $r4;
        android.text.method.MovementMethod $r3, r34;
        android.text.method.KeyListener $r5, $r9, $r13;
        android.widget.Editor $r6, $r10, $r16, $r19, $r22, r29, r30, r31;
        java.lang.CharSequence $r7, $r11;
        android.text.Editable $r8, $r12;
        android.view.ActionMode $r14;
        android.widget.Editor$InputContentType $r15, $r17, $r20, $r23;
        android.widget.TextView$OnEditorActionListener $r18, $r21;
        java.lang.AbstractMethodError $r24, $r25;
        java.lang.Throwable $r26;
        android.view.KeyEvent r27, r28;
        byte b7;

        r0 := @this: android.widget.TextView;

        i4 := @parameter0: int;

        r27 := @parameter1: android.view.KeyEvent;

        r28 := @parameter2: android.view.KeyEvent;

        z31 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if z31 != 0 goto label01;

        return 0;

     label01:
        $i1 = virtualinvoke r27.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label02;

        $z30 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i4);

        if $z30 != 0 goto label02;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label02:
        if i4 == 4 goto label17;

        if i4 == 23 goto label16;

        if i4 == 61 goto label14;

        if i4 == 66 goto label10;

        if i4 == 112 goto label09;

        if i4 == 124 goto label07;

        if i4 == 160 goto label10;

        tableswitch(i4)
        {
            case 277: goto label06;
            case 278: goto label05;
            case 279: goto label04;
            default: goto label03;
        };

     label03:
        goto label18;

     label04:
        $z21 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z21 == 0 goto label18;

        $z22 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z22 == 0 goto label18;

        $z23 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        if $z23 == 0 goto label18;

        return -1;

     label05:
        $z24 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z24 == 0 goto label18;

        $z25 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z25 == 0 goto label18;

        $z26 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        if $z26 == 0 goto label18;

        return -1;

     label06:
        $z27 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z27 == 0 goto label18;

        $z28 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z28 == 0 goto label18;

        $z29 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        if $z29 == 0 goto label18;

        return -1;

     label07:
        $z15 = virtualinvoke r27.<android.view.KeyEvent: boolean hasModifiers(int)>(4096);

        if $z15 == 0 goto label08;

        $z19 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z19 == 0 goto label08;

        $z20 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        if $z20 == 0 goto label18;

        return -1;

     label08:
        $z16 = virtualinvoke r27.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z16 == 0 goto label18;

        $z17 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z17 == 0 goto label18;

        $z18 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        if $z18 == 0 goto label18;

        return -1;

     label09:
        $z12 = virtualinvoke r27.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z12 == 0 goto label18;

        $z13 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z13 == 0 goto label18;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        if $z14 == 0 goto label18;

        return -1;

     label10:
        $z8 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z8 == 0 goto label18;

        r29 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r29 == null goto label11;

        $r15 = r29.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r15 == null goto label11;

        $r16 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r17 = $r16.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r18 = $r17.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r18 == null goto label11;

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r19.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r21 = $r20.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z11 = interfaceinvoke $r21.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r27);

        if $z11 == 0 goto label11;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r23 = $r22.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r23.<android.widget.Editor$InputContentType: boolean enterDown> = 1;

        return -1;

     label11:
        $i5 = virtualinvoke r27.<android.view.KeyEvent: int getFlags()>();

        $i6 = $i5 & 16;

        if $i6 != 0 goto label12;

        $z10 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z10 == 0 goto label18;

     label12:
        $z9 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z9 == 0 goto label13;

        return 0;

     label13:
        return -1;

     label14:
        $z6 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z6 != 0 goto label15;

        $z7 = virtualinvoke r27.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z7 == 0 goto label18;

     label15:
        return 0;

     label16:
        $z4 = virtualinvoke r27.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z4 == 0 goto label18;

        $z5 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z5 == 0 goto label18;

        return 0;

     label17:
        r30 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r30 == null goto label18;

        $r14 = virtualinvoke r30.<android.widget.Editor: android.view.ActionMode getTextActionMode()>();

        if $r14 == null goto label18;

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

        return -1;

     label18:
        r31 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r31 == null goto label25;

        $r5 = r31.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r5 == null goto label25;

        z32 = 1;

        if r28 == null goto label24;

     label19:
        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r10.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Editable) $r11;

        z34 = interfaceinvoke $r13.<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>(r0, $r12, r28);

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

     label20:
        z32 = 0;

        if z34 == 0 goto label21;

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        return -1;

     label21:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        goto label24;

     label22:
        $r26 := @caughtexception;

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        throw $r26;

     label23:
        $r24 := @caughtexception;

        z32 = 1;

        goto label21;

     label24:
        if z32 == 0 goto label25;

        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r6.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Editable) $r7;

        z35 = interfaceinvoke $r9.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r8, i4, r27);

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        if z35 == 0 goto label25;

        return 1;

     label25:
        r34 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r34 == null goto label33;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label33;

        z37 = 1;

        if r28 == null goto label30;

     label26:
        $r4 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        z38 = interfaceinvoke r34.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>(r0, $r4, r28);

     label27:
        z37 = 0;

        if z38 == 0 goto label28;

        return -1;

     label28:
        goto label30;

     label29:
        $r25 := @caughtexception;

        z37 = 1;

     label30:
        if z37 == 0 goto label32;

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $z2 = interfaceinvoke $r3.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r2, i4, r27);

        if $z2 == 0 goto label32;

        $i3 = virtualinvoke r27.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label31;

        $z3 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i4);

        if $z3 != 0 goto label31;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 1;

     label31:
        return 2;

     label32:
        $i2 = virtualinvoke r27.<android.view.KeyEvent: int getSource()>();

        if $i2 != 257 goto label33;

        $z1 = specialinvoke r0.<android.widget.TextView: boolean isDirectionalNavigationKey(int)>(i4);

        if $z1 == 0 goto label33;

        return -1;

     label33:
        $z39 = r0.<android.widget.TextView: boolean mPreventDefaultMovement>;

        if $z39 == 0 goto label34;

        $z0 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i4);

        if $z0 != 0 goto label34;

        b7 = -1;

        goto label35;

     label34:
        b7 = 0;

     label35:
        return b7;

        catch java.lang.AbstractMethodError from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.AbstractMethodError from label26 to label27 with label29;
    }

    private void ensureIterableTextForAccessibilitySelectable()
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean $z0;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r2 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

     label1:
        return;
    }

    private int findLargestTextSizeWhichFits(android.graphics.RectF)
    {
        android.widget.TextView r0;
        android.graphics.RectF r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        int[] $r2, $r4, $r5;
        java.lang.IllegalStateException $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        i4 = lengthof $r2;

        if i4 == 0 goto label4;

        i5 = 0;

        i6 = 0 + 1;

        i7 = i4 + -1;

     label1:
        if i6 > i7 goto label3;

        $i2 = i6 + i7;

        i8 = $i2 / 2;

        $r5 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        $i3 = $r5[i8];

        $z0 = specialinvoke r0.<android.widget.TextView: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)>($i3, r1);

        if $z0 == 0 goto label2;

        i0 = i8 + 1;

        i5 = i6;

        i6 = i0;

        goto label1;

     label2:
        i7 = i8 - 1;

        i5 = i7;

        goto label1;

     label3:
        $r4 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        $i1 = $r4[i5];

        return $i1;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No available text sizes to choose from.");

        throw $r3;
    }

    private void fixFocusableAndClickableSettings()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        android.text.method.MovementMethod $r2;
        android.text.method.KeyListener $r3;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 != null goto label2;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r3 = r1.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r3 == null goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(int)>(16);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(0);

        goto label3;

     label2:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(int)>(1);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(1);

     label3:
        return;
    }

    private int getBottomVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i1, i2, i3, $i4, $i5, $i6, i7;
        android.text.Layout r1, $r3, r4;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i1 = $i4 & 112;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        r4 = r1;

        if z0 != 0 goto label1;

        r4 = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label1;

        r4 = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        i7 = 0;

        if i1 == 80 goto label3;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r4);

        i3 = virtualinvoke r4.<android.text.Layout: int getHeight()>();

        i7 = 0;

        if i3 >= i2 goto label3;

        if i1 != 48 goto label2;

        i7 = i2 - i3;

        goto label3;

     label2:
        $i5 = i2 - i3;

        i7 = $i5 >> 1;

     label3:
        return i7;
    }

    private int getBoxHeight(android.text.Layout)
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r3;
        android.view.ViewParent $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.graphics.Insets r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        $r2 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r1 != $r3 goto label3;

        $i8 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i10 = $i8 + $i9;

        goto label4;

     label3:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i10 = $i0 + $i1;

     label4:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getMeasuredHeight()>();

        $i4 = $i2 - i10;

        $i3 = r4.<android.graphics.Insets: int top>;

        $i6 = $i4 + $i3;

        $i5 = r4.<android.graphics.Insets: int bottom>;

        $i7 = $i6 + $i5;

        return $i7;
    }

    private java.util.Locale getCustomLocaleForKeyListenerOrNull()
    {
        android.widget.TextView r0;
        android.os.LocaleList r1;
        boolean $z0;
        java.util.Locale $r2;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mUseInternationalizedInput>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<android.widget.TextView: android.os.LocaleList getImeHintLocales()>();

        if r1 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r1.<android.os.LocaleList: java.util.Locale get(int)>(0);

        return $r2;
    }

    private int getDesiredHeight()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.text.TextUtils$TruncateAt $r1;
        android.text.Layout r2, r3;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        z0 = 1;

        i0 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>(r2, 1);

        r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r1 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r1 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i1 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>(r3, z0);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i1);

        return $i2;
    }

    private int getDesiredHeight(android.text.Layout, boolean)
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        boolean z0, $z1, $z2;
        android.widget.TextView$Drawables r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26, $i27, i28, $i29, $i30;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return 0;

     label1:
        i20 = virtualinvoke r1.<android.text.Layout: int getHeight(boolean)>(z0);

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        i21 = i20;

        if r2 == null goto label2;

        $i17 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(i20, $i17);

        $i19 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i21 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i19);

     label2:
        i22 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i0 = $i2 + $i3;

        i1 = i21 + i0;

        $i4 = r0.<android.widget.TextView: int mMaxMode>;

        if $i4 == 1 goto label3;

        $i16 = r0.<android.widget.TextView: int mMaximum>;

        i23 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i16);

        i24 = i22;

        goto label6;

     label3:
        i23 = i1;

        i24 = i22;

        if z0 == 0 goto label6;

        i23 = i1;

        i24 = i22;

        $i11 = r0.<android.widget.TextView: int mMaximum>;

        if i22 <= $i11 goto label6;

        $z1 = r1 instanceof android.text.DynamicLayout;

        if $z1 != 0 goto label4;

        i23 = i1;

        i24 = i22;

        $z2 = r1 instanceof android.text.BoringLayout;

        if $z2 == 0 goto label6;

     label4:
        $i12 = r0.<android.widget.TextView: int mMaximum>;

        i25 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i12);

        i26 = i25;

        if r2 == null goto label5;

        $i13 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i25, $i13);

        $i15 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i26 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

     label5:
        i23 = i26 + i0;

        i24 = r0.<android.widget.TextView: int mMaximum>;

     label6:
        $i27 = r0.<android.widget.TextView: int mMinMode>;

        if $i27 != 1 goto label7;

        i28 = i23;

        $i6 = r0.<android.widget.TextView: int mMinimum>;

        if i24 >= $i6 goto label8;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i8 = r0.<android.widget.TextView: int mMinimum>;

        $i9 = $i8 - i24;

        $i10 = $i7 * $i9;

        i28 = i23 + $i10;

        goto label8;

     label7:
        $i5 = r0.<android.widget.TextView: int mMinimum>;

        i28 = staticinvoke <java.lang.Math: int max(int,int)>(i23, $i5);

     label8:
        $i29 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumHeight()>();

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>(i28, $i29);

        return $i30;
    }

    private float getHorizontalFadingEdgeStrength(float, float)
    {
        android.widget.TextView r0;
        float f0, $f1, $f2, $f3, $f4, f5, f6;
        int i0;
        byte $b1;

        r0 := @this: android.widget.TextView;

        f5 := @parameter0: float;

        f0 := @parameter1: float;

        i0 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        if i0 != 0 goto label1;

        return 0.0F;

     label1:
        $f1 = f5 - f0;

        f6 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $f2 = (float) i0;

        $b1 = f6 cmpl $f2;

        if $b1 <= 0 goto label2;

        return 1.0F;

     label2:
        $f3 = (float) i0;

        $f4 = f6 / $f3;

        return $f4;
    }

    private android.view.inputmethod.InputMethodManager getInputMethodManager()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        return $r3;
    }

    private void getInterestingRect(android.graphics.Rect, int)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.text.Layout $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void convertFromViewportToContentCoordinates(android.graphics.Rect)>(r1);

        if i0 != 0 goto label1;

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i8 = $i6 - $i7;

        r1.<android.graphics.Rect: int top> = $i8;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i2 = $i1 - 1;

        if i0 != $i2 goto label2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i5 = $i3 + $i4;

        r1.<android.graphics.Rect: int bottom> = $i5;

     label2:
        return;
    }

    private android.text.Layout$Alignment getLayoutAlignment()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.text.Layout$Alignment r1;

        r0 := @this: android.widget.TextView;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getTextAlignment()>();

        tableswitch($i1)
        {
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label05;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label17;

     label02:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i2 != 1 goto label03;

        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label04;

     label03:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

     label04:
        goto label17;

     label05:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i3 != 1 goto label06;

        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label07;

     label06:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

     label07:
        goto label17;

     label08:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        goto label17;

     label09:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        goto label17;

     label10:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label17;

     label11:
        $i4 = r0.<android.widget.TextView: int mGravity>;

        i0 = $i4 & 8388615;

        if i0 == 1 goto label16;

        if i0 == 3 goto label15;

        if i0 == 5 goto label14;

        if i0 == 8388611 goto label13;

        if i0 == 8388613 goto label12;

        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label17;

     label12:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        goto label17;

     label13:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label17;

     label14:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label17;

     label15:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label17;

     label16:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

     label17:
        return r1;
    }

    public static int getTextColor(android.content.Context, android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        android.content.Context r1;
        android.content.res.ColorStateList r2;

        r1 := @parameter0: android.content.Context;

        r0 := @parameter1: android.content.res.TypedArray;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>(r1, r0);

        if r2 != null goto label1;

        return i0;

     label1:
        $i1 = virtualinvoke r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i1;
    }

    public static android.content.res.ColorStateList getTextColors(android.content.Context, android.content.res.TypedArray)
    {
        android.content.res.TypedArray r0, r5, r7;
        android.content.res.ColorStateList r1, r6;
        int i0;
        int[] $r2, $r3;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r5 := @parameter1: android.content.res.TypedArray;

        if r5 == null goto label2;

        $r2 = <android.R$styleable: int[] TextView>;

        r0 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        r6 = r1;

        if r1 != null goto label1;

        i0 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r6 = r1;

        if i0 == 0 goto label1;

        $r3 = <android.R$styleable: int[] TextAppearance>;

        r7 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r3);

        r6 = virtualinvoke r7.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

     label1:
        virtualinvoke r0.<android.content.res.TypedArray: void recycle()>();

        return r6;

     label2:
        throw null;
    }

    private java.lang.CharSequence getTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        return $r4;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.CharSequence trimToParcelableSize(java.lang.CharSequence)>($r2);

        return $r3;
    }

    private java.util.Locale getTextServicesLocale(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        java.util.Locale $r1, r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleAsync()>();

        $r1 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        goto label2;

     label1:
        r2 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

     label2:
        return r2;
    }

    private android.graphics.Path getUpdatedHighlightPath()
    {
        android.widget.TextView r0;
        android.graphics.Paint r1;
        int i0, i1, $i2, $i3;
        android.widget.Editor r2, $r14;
        android.text.method.MovementMethod $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.Path $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r15, r16;
        android.text.Layout $r7, $r13;
        java.lang.CharSequence $r11;
        android.graphics.Paint$Style $r17, $r18;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r16 = null;

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r3 == null goto label7;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z0 != 0 goto label1;

        r16 = null;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isPressed()>();

        if $z4 == 0 goto label7;

     label1:
        r16 = null;

        if i0 < 0 goto label7;

        if i0 != i1 goto label4;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r16 = null;

        if r2 == null goto label7;

        r16 = null;

        $z2 = virtualinvoke r2.<android.widget.Editor: boolean shouldRenderCursor()>();

        if $z2 == 0 goto label7;

        $z3 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z3 == 0 goto label3;

        $r9 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r9 != null goto label2;

        $r15 = new android.graphics.Path;

        specialinvoke $r15.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r15;

     label2:
        $r10 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r10.<android.graphics.Path: void reset()>();

        $r13 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r12 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r13.<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>(i0, $r12, $r11);

        $r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r14.<android.widget.Editor: void updateCursorPosition()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label3:
        $i2 = r0.<android.widget.TextView: int mCurTextColor>;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i2);

        $r17 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r17);

        r16 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        goto label7;

     label4:
        $z1 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z1 == 0 goto label6;

        $r4 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r4 != null goto label5;

        $r8 = new android.graphics.Path;

        specialinvoke $r8.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r8;

     label5:
        $r5 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r5.<android.graphics.Path: void reset()>();

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r6 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r7.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, $r6);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label6:
        $i3 = r0.<android.widget.TextView: int mHighlightColor>;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i3);

        $r18 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r18);

        r16 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

     label7:
        return r16;
    }

    private boolean hasSpannableText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if r1 == null goto label1;

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void invalidateCursor(int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= 0 goto label1;

        if i1 >= 0 goto label1;

        if i2 < 0 goto label2;

     label1:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i2);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, i2);

        virtualinvoke r0.<android.widget.TextView: void invalidateRegion(int,int,boolean)>($i4, $i6, 1);

     label2:
        return;
    }

    private boolean isAutoSizeEnabled()
    {
        android.widget.TextView r0;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<android.widget.TextView: int mAutoSizeTextType>;

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isAutofillable()
    {
        android.widget.TextView r0;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getAutofillType()>();

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isDirectionalNavigationKey(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isMarqueeFadeEnabled()
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt r1, r2;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        z0 = 1;

        if r1 != r2 goto label1;

        $i0 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i0 == 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static boolean isMultilineInputType(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = 131087 & i0;

        if $i1 != 131073 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean isPasswordInputType(int)
    {
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        i1 = i0 & 4095;

        if i1 == 129 goto label2;

        if i1 == 225 goto label2;

        if i1 != 18 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isShowingHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private static boolean isVisiblePasswordInputType(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = i0 & 4095;

        if $i1 != 145 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$handleClick$1(android.view.textclassifier.TextClassification)
    {
        java.util.List $r0, $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.app.RemoteAction $r3;
        android.app.PendingIntent $r4;
        android.app.PendingIntent$CanceledException $r5;
        android.view.textclassifier.TextClassification r6;

        r6 := @parameter0: android.view.textclassifier.TextClassification;

        if r6 == null goto label6;

        $r0 = virtualinvoke r6.<android.view.textclassifier.TextClassification: java.util.List getActions()>();

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

     label1:
        $r1 = virtualinvoke r6.<android.view.textclassifier.TextClassification: java.util.List getActions()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.app.RemoteAction) $r2;

        $r4 = virtualinvoke $r3.<android.app.RemoteAction: android.app.PendingIntent getActionIntent()>();

        virtualinvoke $r4.<android.app.PendingIntent: void send()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Error sending PendingIntent", $r5);

     label4:
        goto label7;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextView", "No link action to perform");

        goto label7;

     label6:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextView", "Timeout while classifying text");

     label7:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private static transient void logCursor(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, $r7, $r9;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextView", r0);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TextView", $r9);

     label2:
        return;
    }

    private void notifyListeningManagersAfterTextChanged()
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.Context $r1, $r5;
        java.lang.Object $r2, $r6;
        android.view.autofill.AutofillId $r3;
        java.lang.CharSequence $r4;
        android.view.autofill.AutofillManager r7;
        android.view.contentcapture.ContentCaptureManager r8;
        android.view.contentcapture.ContentCaptureSession r9;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isAutofillable()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r7 = (android.view.autofill.AutofillManager) $r6;

        if r7 == null goto label2;

        $z4 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z4 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TextView", "notifyAutoFillManagerAfterTextChanged");

     label1:
        virtualinvoke r7.<android.view.autofill.AutofillManager: void notifyValueChanged(android.view.View)>(r0);

     label2:
        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isLaidOut()>();

        if $z5 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isImportantForContentCapture()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean getNotifiedContentCaptureAppeared()>();

        if $z2 == 0 goto label3;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/contentcapture/ContentCaptureManager;");

        r8 = (android.view.contentcapture.ContentCaptureManager) $r2;

        if r8 == null goto label3;

        $z3 = virtualinvoke r8.<android.view.contentcapture.ContentCaptureManager: boolean isContentCaptureEnabled()>();

        if $z3 == 0 goto label3;

        r9 = virtualinvoke r0.<android.widget.TextView: android.view.contentcapture.ContentCaptureSession getContentCaptureSession()>();

        if r9 == null goto label3;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.view.autofill.AutofillId getAutofillId()>();

        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        virtualinvoke r9.<android.view.contentcapture.ContentCaptureSession: void notifyViewTextChanged(android.view.autofill.AutofillId,java.lang.CharSequence)>($r3, $r4);

     label3:
        return;
    }

    private int[] parseDimensionArray(android.content.res.TypedArray)
    {
        android.widget.TextView r0;
        android.content.res.TypedArray r1;
        int[] r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.TypedArray;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        r2 = newarray (int)[$i0];

        i3 = 0;

     label2:
        $i1 = lengthof r2;

        if i3 >= $i1 goto label3;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i3, 0);

        r2[i3] = $i2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r2;
    }

    private void paste(int, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, i5;
        boolean z0, $z1, z2, z3;
        android.content.ClipData r1;
        android.content.ClipboardManager $r2;
        android.content.ClipData$Item $r3, $r15;
        android.content.Context $r4, $r16;
        java.lang.CharSequence $r5, $r8, $r12, r18, r19, r20;
        android.text.Editable $r6, $r9, $r13;
        android.text.Spannable $r11;
        java.lang.Object r17;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()>();

        r1 = virtualinvoke $r2.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        if r1 == null goto label7;

        z2 = 0;

        i5 = 0;

     label1:
        $i2 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        if i5 >= $i2 goto label6;

        if z0 == 0 goto label2;

        $r15 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i5);

        $r16 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r17 = virtualinvoke $r15.<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>($r16);

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i5);

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r17 = virtualinvoke $r3.<android.content.ClipData$Item: java.lang.CharSequence coerceToText(android.content.Context)>($r4);

        $z1 = r17 instanceof android.text.Spanned;

        if $z1 == 0 goto label3;

        r18 = (java.lang.CharSequence) r17;

        r17 = interfaceinvoke r18.<java.lang.CharSequence: java.lang.String toString()>();

        goto label3;

     label3:
        z3 = z2;

        if r17 == null goto label5;

        if z2 != 0 goto label4;

        $r11 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r11, i1);

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r13 = (android.text.Editable) $r12;

        r19 = (java.lang.CharSequence) r17;

        interfaceinvoke $r13.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r19);

        z3 = 1;

        goto label5;

     label4:
        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Editable) $r5;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r6.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i3, "\n");

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Editable) $r8;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r20 = (java.lang.CharSequence) r17;

        interfaceinvoke $r9.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i4, r20);

        z3 = z2;

     label5:
        i5 = i5 + 1;

        z2 = z3;

        goto label1;

     label6:
        <android.widget.TextView: long sLastCutCopyOrTextChangedTime> = 0L;

     label7:
        return;
    }

    private boolean performAccessibilityActionClick(android.os.Bundle)
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z14, z15, z16;
        android.text.Layout $r1;
        android.widget.Editor $r2;
        android.os.Bundle r3;
        android.text.method.MovementMethod $r4;
        android.view.inputmethod.InputMethodManager r5;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: android.os.Bundle;

        z15 = 0;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isClickable()>();

        if $z1 != 0 goto label2;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean isLongClickable()>();

        if $z14 == 0 goto label4;

     label2:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocusable()>();

        if $z2 == 0 goto label3;

        $z12 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z12 != 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: boolean requestFocus()>();

     label3:
        virtualinvoke r0.<android.widget.TextView: boolean performClick()>();

        z15 = 1;

     label4:
        $r4 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r4 != null goto label5;

        z16 = z15;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z11 == 0 goto label7;

     label5:
        z16 = z15;

        $z4 = specialinvoke r0.<android.widget.TextView: boolean hasSpannableText()>();

        if $z4 == 0 goto label7;

        z16 = z15;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label7;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z5 != 0 goto label6;

        z16 = z15;

        $z10 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z10 == 0 goto label7;

     label6:
        z16 = z15;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z6 == 0 goto label7;

        r5 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r5);

        z16 = z15;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z7 != 0 goto label7;

        z16 = z15;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z8 = $r2.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z8 == 0 goto label7;

        z16 = z15;

        if r5 == null goto label7;

        $z9 = virtualinvoke r5.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        z16 = z15 | $z9;

     label7:
        return z16;
    }

    public static void preloadFontCache()
    {
        android.graphics.Paint $r1;
        android.graphics.Typeface $r2;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r2 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;

        virtualinvoke $r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r2);

        virtualinvoke $r1.<android.graphics.Paint: float measureText(java.lang.String)>("H");

        return;
    }

    private void prepareDrawableForDisplay(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1;
        int $i0;
        boolean $z1;
        int[] $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0);

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        return;
    }

    private void readTextAppearance(android.content.Context, android.content.res.TypedArray, android.widget.TextView$TextAppearanceAttributes, boolean)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        android.widget.TextView$TextAppearanceAttributes r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        java.lang.String $r4, $r5, $r6, r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Typeface $r7, $r17;
        android.content.res.ColorStateList $r8, $r9, $r10;
        android.util.TypedValue $r11;
        android.util.SparseIntArray $r12;
        java.lang.Throwable $r13;
        android.os.LocaleList r15;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 := @parameter2: android.widget.TextView$TextAppearanceAttributes;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getIndexCount()>();

        i17 = 0;

     label01:
        if i17 >= i0 goto label31;

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getIndex(int)>(i17);

        i18 = i1;

        if z0 == 0 goto label02;

        $r12 = <android.widget.TextView: android.util.SparseIntArray sAppearanceValues>;

        i2 = virtualinvoke $r12.<android.util.SparseIntArray: int get(int,int)>(i1, -1);

        i18 = i2;

        if i2 != -1 goto label02;

        goto label30;

     label02:
        tableswitch(i18)
        {
            case 0: goto label29;
            case 1: goto label28;
            case 2: goto label27;
            case 3: goto label26;
            case 4: goto label25;
            case 5: goto label24;
            case 6: goto label23;
            case 7: goto label22;
            case 8: goto label21;
            case 9: goto label20;
            case 10: goto label19;
            case 11: goto label18;
            case 12: goto label12;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label09;
            case 16: goto label08;
            case 17: goto label07;
            case 18: goto label06;
            case 19: goto label04;
            default: goto label03;
        };

     label03:
        goto label30;

     label04:
        r14 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        if r14 == null goto label30;

        r15 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>(r14);

        $z1 = virtualinvoke r15.<android.os.LocaleList: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        r3.<android.widget.TextView$TextAppearanceAttributes: android.os.LocaleList mTextLocales> = r15;

     label05:
        goto label30;

     label06:
        $i3 = r3.<android.widget.TextView$TextAppearanceAttributes: int mFontWeight>;

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i3);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mFontWeight> = $i4;

        goto label30;

     label07:
        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mHasFallbackLineSpacing> = 1;

        $z2 = r3.<android.widget.TextView$TextAppearanceAttributes: boolean mFallbackLineSpacing>;

        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z2);

        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mFallbackLineSpacing> = $z3;

        goto label30;

     label08:
        $r4 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontVariationSettings> = $r4;

        goto label30;

     label09:
        $r5 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFeatureSettings> = $r5;

        goto label30;

     label10:
        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mHasLetterSpacing> = 1;

        $f0 = r3.<android.widget.TextView$TextAppearanceAttributes: float mLetterSpacing>;

        $f1 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f0);

        r3.<android.widget.TextView$TextAppearanceAttributes: float mLetterSpacing> = $f1;

        goto label30;

     label11:
        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mHasElegant> = 1;

        $z4 = r3.<android.widget.TextView$TextAppearanceAttributes: boolean mElegant>;

        $z5 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z4);

        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mElegant> = $z5;

        goto label30;

     label12:
        $z6 = virtualinvoke r1.<android.content.Context: boolean isRestricted()>();

        if $z6 != 0 goto label16;

        $z7 = virtualinvoke r1.<android.content.Context: boolean canLoadUnsafeResources()>();

        if $z7 == 0 goto label16;

     label13:
        $r7 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.Typeface getFont(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: android.graphics.Typeface mFontTypeface> = $r7;

     label14:
        goto label16;

     label15:
        $r13 := @caughtexception;

     label16:
        $r17 = r3.<android.widget.TextView$TextAppearanceAttributes: android.graphics.Typeface mFontTypeface>;

        if $r17 != null goto label17;

        $r6 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFamily> = $r6;

     label17:
        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mFontFamilyExplicit> = 1;

        goto label30;

     label18:
        $z8 = r3.<android.widget.TextView$TextAppearanceAttributes: boolean mAllCaps>;

        $z9 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z8);

        r3.<android.widget.TextView$TextAppearanceAttributes: boolean mAllCaps> = $z9;

        goto label30;

     label19:
        $f2 = r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowRadius>;

        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f2);

        r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowRadius> = $f3;

        goto label30;

     label20:
        $f4 = r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowDy>;

        $f5 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f4);

        r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowDy> = $f5;

        goto label30;

     label21:
        $f6 = r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowDx>;

        $f7 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f6);

        r3.<android.widget.TextView$TextAppearanceAttributes: float mShadowDx> = $f7;

        goto label30;

     label22:
        $i5 = r3.<android.widget.TextView$TextAppearanceAttributes: int mShadowColor>;

        $i6 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i5);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mShadowColor> = $i6;

        goto label30;

     label23:
        $r8 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorLink> = $r8;

        goto label30;

     label24:
        $r9 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColorHint> = $r9;

        goto label30;

     label25:
        $i7 = r3.<android.widget.TextView$TextAppearanceAttributes: int mTextColorHighlight>;

        $i8 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(i1, $i7);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mTextColorHighlight> = $i8;

        goto label30;

     label26:
        $r10 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i1);

        r3.<android.widget.TextView$TextAppearanceAttributes: android.content.res.ColorStateList mTextColor> = $r10;

        goto label30;

     label27:
        $i9 = r3.<android.widget.TextView$TextAppearanceAttributes: int mTextStyle>;

        $i10 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i9);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mTextStyle> = $i10;

        goto label30;

     label28:
        $i11 = r3.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex>;

        $i12 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i11);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex> = $i12;

        $i13 = r3.<android.widget.TextView$TextAppearanceAttributes: int mTypefaceIndex>;

        if $i13 == -1 goto label30;

        $z10 = r3.<android.widget.TextView$TextAppearanceAttributes: boolean mFontFamilyExplicit>;

        if $z10 != 0 goto label30;

        r3.<android.widget.TextView$TextAppearanceAttributes: java.lang.String mFontFamily> = null;

        goto label30;

     label29:
        $i14 = r3.<android.widget.TextView$TextAppearanceAttributes: int mTextSize>;

        $i15 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i1, $i14);

        r3.<android.widget.TextView$TextAppearanceAttributes: int mTextSize> = $i15;

        $r11 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i1);

        $i16 = virtualinvoke $r11.<android.util.TypedValue: int getComplexUnit()>();

        r3.<android.widget.TextView$TextAppearanceAttributes: int mTextSizeUnit> = $i16;

     label30:
        i17 = i17 + 1;

        goto label01;

     label31:
        return;

        catch java.lang.UnsupportedOperationException from label13 to label14 with label15;
        catch android.content.res.Resources$NotFoundException from label13 to label14 with label15;
    }

    private void registerForPreDraw()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 1;

     label1:
        return;
    }

    private void removeIntersectingNonAdjacentSpans(int, int, java.lang.Class)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, i5;
        boolean $z0;
        java.lang.Object $r1, $r2, $r3;
        java.lang.Class r4;
        java.lang.CharSequence r5;
        android.text.Editable r6;
        java.lang.Object[] r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.Class;

        r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r5 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        return;

     label1:
        r6 = (android.text.Editable) r5;

        r7 = interfaceinvoke r6.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, r4);

        i2 = lengthof r7;

        i5 = 0;

     label2:
        if i5 >= i2 goto label4;

        $r1 = r7[i5];

        i3 = interfaceinvoke r6.<android.text.Editable: int getSpanStart(java.lang.Object)>($r1);

        $r2 = r7[i5];

        $i4 = interfaceinvoke r6.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r2);

        if $i4 == i0 goto label4;

        if i3 != i1 goto label3;

        goto label4;

     label3:
        $r3 = r7[i5];

        interfaceinvoke r6.<android.text.Editable: void removeSpan(java.lang.Object)>($r3);

        i5 = i5 + 1;

        goto label2;

     label4:
        return;
    }

    static void removeParcelableSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1, i2;
        java.lang.Object[] r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.text.Spannable;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i1, i0, class "Landroid/text/ParcelableSpan;");

        i2 = lengthof r1;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r2 = r1[i2];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    private void requestAutofill()
    {
        android.widget.TextView r0;
        android.view.autofill.AutofillManager r1;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r1 = (android.view.autofill.AutofillManager) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.autofill.AutofillManager: void requestAutofill(android.view.View)>(r0);

     label1:
        return;
    }

    private void resolveStyleAndSetTypeface(android.graphics.Typeface, int, int)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, $r2;
        int i0, $i1, i2, i3;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if i2 < 0 goto label3;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(1000, i2);

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)>(r1, i3, z0);

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r2);

        goto label4;

     label3:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>(r1, i0);

     label4:
        return;
    }

    private void restartMarqueeIfNeeded()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mRestartMarquee>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label1;

        r0.<android.widget.TextView: boolean mRestartMarquee> = 0;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label1:
        return;
    }

    private void sendBeforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.util.ArrayList r2, $r3;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i6 = 0;

     label1:
        if i6 >= i3 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        i6 = i6 + 1;

        goto label1;

     label2:
        $i4 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i4, class "Landroid/text/style/SpellCheckSpan;");

        $i5 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i5, class "Landroid/text/style/SuggestionSpan;");

        return;
    }

    private void setFilters(android.text.Editable, android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        android.text.InputFilter[] r2, r12;
        boolean z0, z1;
        android.widget.Editor$UndoInputFilter $r3, $r10;
        android.widget.Editor $r4, $r6, $r9, r11;
        android.text.method.KeyListener $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.text.InputFilter $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: android.text.InputFilter[];

        r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r11 == null goto label7;

        $r3 = r11.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        if $r3 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        z0 = $r5 instanceof android.text.InputFilter;

        i6 = 0;

        if z1 == 0 goto label3;

        i6 = 0 + 1;

     label3:
        i7 = i6;

        if z0 == 0 goto label4;

        i7 = i6 + 1;

     label4:
        if i7 <= 0 goto label7;

        $i0 = lengthof r2;

        $i1 = $i0 + i7;

        r12 = newarray (android.text.InputFilter)[$i1];

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r12, 0, $i2);

        i8 = 0;

        if z1 == 0 goto label5;

        $i5 = lengthof r2;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = $r9.<android.widget.Editor: android.widget.Editor$UndoInputFilter mUndoInputFilter>;

        r12[$i5] = $r10;

        i8 = 0 + 1;

     label5:
        if z0 == 0 goto label6;

        $i3 = lengthof r2;

        $i4 = $i3 + i8;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r7 = $r6.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r8 = (android.text.InputFilter) $r7;

        r12[$i4] = $r8;

     label6:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r12);

        return;

     label7:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r2);

        return;
    }

    private void setHintInternal(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2, $r4, $r6, $r7;
        android.text.Layout $r3;
        int $i0, $i1;
        android.widget.Editor $r5, $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

        r0.<android.widget.TextView: java.lang.CharSequence mHint> = $r2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r7 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: void invalidateTextDisplayList()>();

     label3:
        return;
    }

    private void setInputType(int, boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1, z2, z3, $z4;
        java.util.Locale r1, r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        android.widget.Editor $r2;
        android.text.method.TextKeyListener$Capitalize r3;
        android.text.method.BaseKeyListener r4;

        r0 := @this: android.widget.TextView;

        i9 := @parameter0: int;

        z0 := @parameter1: boolean;

        i10 = i9 & 15;

        z1 = 1;

        z2 = 1;

        if i10 != 1 goto label07;

        $i5 = 32768 & i9;

        if $i5 == 0 goto label01;

        goto label02;

     label01:
        z2 = 0;

     label02:
        $i6 = i9 & 4096;

        if $i6 == 0 goto label03;

        r3 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        goto label06;

     label03:
        $i7 = i9 & 8192;

        if $i7 == 0 goto label04;

        r3 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        goto label06;

     label04:
        $i8 = i9 & 16384;

        if $i8 == 0 goto label05;

        r3 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        goto label06;

     label05:
        r3 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

     label06:
        r4 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z2, r3);

        goto label20;

     label07:
        if i10 != 2 goto label13;

        r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getCustomLocaleForKeyListenerOrNull()>();

        $i1 = i9 & 4096;

        if $i1 == 0 goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        $i2 = i9 & 8192;

        if $i2 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        r4 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale,boolean,boolean)>(r1, z3, z1);

        i11 = i9;

        if r1 == null goto label12;

        i0 = interfaceinvoke r4.<android.text.method.KeyListener: int getInputType()>();

        i11 = i9;

        $i3 = i0 & 15;

        if $i3 == 2 goto label12;

        i11 = i0;

        $i4 = i9 & 16;

        if $i4 == 0 goto label12;

        i11 = i0 | 128;

     label12:
        i9 = i11;

        goto label20;

     label13:
        if i10 != 4 goto label18;

        r5 = specialinvoke r0.<android.widget.TextView: java.util.Locale getCustomLocaleForKeyListenerOrNull()>();

        i12 = i9 & 4080;

        if i12 == 16 goto label15;

        if i12 == 32 goto label14;

        r4 = staticinvoke <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance(java.util.Locale)>(r5);

        goto label16;

     label14:
        r4 = staticinvoke <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance(java.util.Locale)>(r5);

        goto label16;

     label15:
        r4 = staticinvoke <android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance(java.util.Locale)>(r5);

     label16:
        $z4 = r0.<android.widget.TextView: boolean mUseInternationalizedInput>;

        if $z4 == 0 goto label17;

        i9 = interfaceinvoke r4.<android.text.method.KeyListener: int getInputType()>();

     label17:
        goto label20;

     label18:
        if i10 != 3 goto label19;

        r4 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        goto label20;

     label19:
        r4 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

     label20:
        virtualinvoke r0.<android.widget.TextView: void setRawInputType(int)>(i9);

        r0.<android.widget.TextView: boolean mListenerChanged> = 0;

        if z0 == 0 goto label21;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r4;

        goto label22;

     label21:
        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r4);

     label22:
        return;
    }

    private void setInputTypeFromEditor()
    {
        android.widget.TextView r0;
        android.widget.Editor $r2, $r4, $r6;
        android.text.method.KeyListener $r3;
        int $i0;
        boolean $z0;
        java.lang.IncompatibleClassChangeError $r5;

        r0 := @this: android.widget.TextView;

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $i0 = interfaceinvoke $r3.<android.text.method.KeyListener: int getInputType()>();

        $r4.<android.widget.Editor: int mInputType> = $i0;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6.<android.widget.Editor: int mInputType> = 1;

     label4:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>($z0);

        return;

        catch java.lang.IncompatibleClassChangeError from label1 to label2 with label3;
    }

    private void setInputTypeSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.Editor r1, r2, r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label2;

        $i0 = r1.<android.widget.Editor: int mInputType>;

        $i1 = $i0 & 15;

        if $i1 != 1 goto label2;

        if z0 == 0 goto label1;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i4 = r2.<android.widget.Editor: int mInputType>;

        $i5 = $i4 & -131073;

        r2.<android.widget.Editor: int mInputType> = $i5;

        goto label2;

     label1:
        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i2 = r3.<android.widget.Editor: int mInputType>;

        $i3 = $i2 | 131072;

        r3.<android.widget.Editor: int mInputType> = $i3;

     label2:
        return;
    }

    private void setKeyListenerOnly(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.text.method.KeyListener $r3, r5;
        boolean $z0;
        java.lang.CharSequence r6, $r7;
        android.text.Editable $r8;
        android.text.InputFilter[] $r9;

        r0 := @this: android.widget.TextView;

        r5 := @parameter0: android.text.method.KeyListener;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        if r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r3 == r5 goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r5;

        if r5 == null goto label2;

        r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r6 instanceof android.text.Editable;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r6);

     label2:
        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Editable) $r7;

        $r9 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r8, $r9);

     label3:
        return;
    }

    private boolean setPrimaryClip(android.content.ClipData)
    {
        android.widget.TextView r0;
        android.content.ClipboardManager r1;
        long $l0;
        java.lang.Throwable $r2;
        android.content.ClipData r3;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: android.content.ClipData;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()>();

     label1:
        virtualinvoke r1.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>(r3);

     label2:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        <android.widget.TextView: long sLastCutCopyOrTextChangedTime> = $l0;

        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void setRawTextSize(float, boolean)
    {
        android.widget.TextView r0;
        float f0, $f1;
        boolean z0;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSize(float)>(f0);

        if z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 0;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    private void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2;
        android.graphics.Rect r3;
        android.widget.TextView$Drawables $r4, $r5, r7, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Context $r6;
        boolean z2;
        int[] r10;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r1 != null goto label2;

        if r2 == null goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        if z2 == 0 goto label9;

        r7 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r8 = r7;

        if r7 != null goto label4;

        $r5 = new android.widget.TextView$Drawables;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r6);

        r8 = $r5;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r5;

     label4:
        $r4 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r4.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        r3 = r8.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r10 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label5;

        $i4 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r10);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r8.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $i6 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        r8.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i6;

        $i7 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        r8.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i7;

        goto label6;

     label5:
        r8.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r8.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

     label6:
        if r2 == null goto label7;

        $i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r10);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r3);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r8.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r2;

        $i2 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        r8.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i2;

        $i3 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        r8.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i3;

        goto label8;

     label7:
        r8.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r8.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label8:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        specialinvoke r0.<android.widget.TextView: void applyCompoundDrawableTint()>();

     label9:
        return;
    }

    private void setText(java.lang.CharSequence, android.widget.TextView$BufferType, boolean, int)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12, $z13, $z14;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, $i14, $i15, i16;
        android.widget.TextView$BufferType $r2, $r12, $r13, $r17, r47, r61, r64;
        java.lang.CharSequence $r3, $r4, $r36, r50, r51, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91;
        android.text.Editable $r5, r58;
        java.lang.Object[] $r6;
        android.widget.TextView$ChangeWatcher $r7, $r8, $r11, r76;
        android.text.Spannable $r9, r63, r66;
        android.text.method.MovementMethod $r14, $r19, r70;
        android.text.Spannable$Factory $r15, $r18;
        android.text.method.KeyListener $r16;
        android.text.TextDirectionHeuristic $r20, $r23, $r35;
        android.text.PrecomputedText$Params $r21, $r26, $r29, $r33;
        android.text.TextPaint $r22, $r45;
        java.lang.String $r32;
        android.text.InputFilter[] $r37, $r49, $r59;
        android.text.InputFilter $r38;
        android.text.Spanned $r39, $r41;
        android.text.TextUtils$TruncateAt $r40, $r44;
        android.content.Context $r42;
        android.view.ViewConfiguration $r43;
        java.lang.Object r46, r48, r54, r62;
        java.util.ArrayList r52;
        android.text.PrecomputedText r53;
        android.widget.Editor $r56, r68, r71, r73;
        android.text.Editable$Factory $r57;
        android.view.inputmethod.InputMethodManager r60;
        android.text.method.TransformationMethod r65, r69;
        android.widget.TextView$ChangeWatcher[] r67;
        android.text.Layout $r72;
        java.lang.StringBuilder r74;
        java.lang.IllegalArgumentException r75;

        r0 := @this: android.widget.TextView;

        r46 := @parameter0: java.lang.CharSequence;

        r47 := @parameter1: android.widget.TextView$BufferType;

        z0 := @parameter2: boolean;

        i10 := @parameter3: int;

        r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId> = 0;

        if r46 != null goto label01;

        r46 = "";

        goto label01;

     label01:
        r48 = r46;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z1 != 0 goto label02;

        r77 = (java.lang.CharSequence) r46;

        r48 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>(r77);

     label02:
        $z2 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z2 != 0 goto label03;

        $r45 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r45.<android.text.TextPaint: void setTextScaleX(float)>(1.0F);

     label03:
        $z3 = r48 instanceof android.text.Spanned;

        if $z3 == 0 goto label06;

        $r41 = (android.text.Spanned) r48;

        $r40 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        $i9 = interfaceinvoke $r41.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r40);

        if $i9 < 0 goto label06;

        $r42 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r43 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r42);

        $z10 = virtualinvoke $r43.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z10 == 0 goto label04;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        goto label05;

     label04:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

     label05:
        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

     label06:
        $r49 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        i11 = lengthof $r49;

        i12 = 0;

     label07:
        if i12 >= i11 goto label09;

        $r37 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        $r38 = $r37[i12];

        r78 = (java.lang.CharSequence) r48;

        $i8 = interfaceinvoke r78.<java.lang.CharSequence: int length()>();

        $r39 = <android.widget.TextView: android.text.Spanned EMPTY_SPANNED>;

        r79 = (java.lang.CharSequence) r48;

        r50 = interfaceinvoke $r38.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r79, 0, $i8, $r39, 0, 0);

        if r50 == null goto label08;

        r48 = r50;

     label08:
        i12 = i12 + 1;

        goto label07;

     label09:
        if z0 == 0 goto label11;

        r51 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if r51 == null goto label10;

        i10 = interfaceinvoke r51.<java.lang.CharSequence: int length()>();

        $r36 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r80 = (java.lang.CharSequence) r48;

        $i7 = interfaceinvoke r80.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r36, 0, i10, $i7);

        goto label11;

     label10:
        r81 = (java.lang.CharSequence) r48;

        $i6 = interfaceinvoke r81.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, $i6);

     label11:
        r52 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        z12 = 0;

        if r52 == null goto label12;

        z12 = 0;

        $i5 = virtualinvoke r52.<java.util.ArrayList: int size()>();

        if $i5 == 0 goto label12;

        z12 = 1;

     label12:
        $z13 = r48 instanceof android.text.PrecomputedText;

        if $z13 == 0 goto label13;

        r53 = (android.text.PrecomputedText) r48;

        goto label14;

     label13:
        r53 = null;

     label14:
        $r2 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r47 == $r2 goto label23;

        $r16 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r16 != null goto label23;

        if z12 == 0 goto label15;

        goto label23;

     label15:
        if r53 == null goto label20;

        $r20 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r20 != null goto label16;

        $r35 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r35;

     label16:
        $r21 = virtualinvoke r53.<android.text.PrecomputedText: android.text.PrecomputedText$Params getParams()>();

        $r22 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r23 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $i4 = r0.<android.widget.TextView: int mBreakStrategy>;

        $i3 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        i13 = virtualinvoke $r21.<android.text.PrecomputedText$Params: int checkResultUsable(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>($r22, $r23, $i4, $i3);

        if i13 == 0 goto label19;

        if i13 == 1 goto label17;

        goto label18;

     label17:
        $r33 = virtualinvoke r0.<android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>();

        staticinvoke <android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText$Params)>(r53, $r33);

     label18:
        r54 = r48;

        goto label24;

     label19:
        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrecomputedText\'s Parameters don\'t match the parameters of this TextView.Consider using setTextMetricsParams(precomputedText.getParams()) to override the settings of this TextView: PrecomputedText: ");

        $r26 = virtualinvoke r53.<android.text.PrecomputedText: android.text.PrecomputedText$Params getParams()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TextView: ");

        $r29 = virtualinvoke r0.<android.widget.TextView: android.text.PrecomputedText$Params getTextMetricsParams()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        r75 = new java.lang.IllegalArgumentException;

        $r32 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r75.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw r75;

     label20:
        $r17 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        if r47 == $r17 goto label22;

        $r19 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r19 == null goto label21;

        goto label22;

     label21:
        r54 = r48;

        $z9 = r48 instanceof android.widget.TextView$CharWrapper;

        if $z9 != 0 goto label24;

        r82 = (java.lang.CharSequence) r48;

        r54 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r82);

        goto label24;

     label22:
        $r18 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r83 = (java.lang.CharSequence) r48;

        r54 = virtualinvoke $r18.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r83);

        goto label24;

     label23:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r56 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r56.<android.widget.Editor: void forgetUndoRedo()>();

        $r57 = r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory>;

        r84 = (java.lang.CharSequence) r48;

        r58 = virtualinvoke $r57.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>(r84);

        r54 = r58;

        $r59 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>(r58, $r59);

        r60 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r60 == null goto label24;

        virtualinvoke r60.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label24:
        r61 = r47;

        r62 = r54;

        $i14 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i14 == 0 goto label30;

        $r12 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r47 == $r12 goto label26;

        $z8 = r54 instanceof android.text.Spannable;

        if $z8 == 0 goto label25;

        goto label26;

     label25:
        $r15 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r85 = (java.lang.CharSequence) r54;

        r63 = virtualinvoke $r15.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r85);

        goto label27;

     label26:
        r63 = (android.text.Spannable) r54;

     label27:
        r61 = r47;

        r62 = r54;

        $i15 = r0.<android.widget.TextView: int mAutoLinkMask>;

        $z14 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r63, $i15);

        if $z14 == 0 goto label30;

        $r13 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r47 != $r13 goto label28;

        r64 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        goto label29;

     label28:
        r64 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label29:
        specialinvoke r0.<android.widget.TextView: void setTextInternal(java.lang.CharSequence)>(r63);

        r61 = r64;

        r62 = r63;

        $z6 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z6 == 0 goto label30;

        r61 = r64;

        r62 = r63;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z7 != 0 goto label30;

        $r14 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r14);

        r62 = r63;

        r61 = r64;

     label30:
        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = r61;

        r86 = (java.lang.CharSequence) r62;

        specialinvoke r0.<android.widget.TextView: void setTextInternal(java.lang.CharSequence)>(r86);

        r65 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r65 != null goto label31;

        r87 = (java.lang.CharSequence) r62;

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = r87;

        goto label32;

     label31:
        r88 = (java.lang.CharSequence) r62;

        $r3 = interfaceinvoke r65.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r88, r0);

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = $r3;

     label32:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        if $r4 != null goto label33;

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = "";

     label33:
        r89 = (java.lang.CharSequence) r62;

        i0 = interfaceinvoke r89.<java.lang.CharSequence: int length()>();

        $z4 = r62 instanceof android.text.Spannable;

        if $z4 == 0 goto label39;

        $z5 = r0.<android.widget.TextView: boolean mAllowTransformationLengthChange>;

        if $z5 != 0 goto label39;

        r66 = (android.text.Spannable) r62;

        $i2 = interfaceinvoke r66.<android.text.Spannable: int length()>();

        $r6 = interfaceinvoke r66.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "Landroid/widget/TextView$ChangeWatcher;");

        r67 = (android.widget.TextView$ChangeWatcher[]) $r6;

        i1 = lengthof r67;

        i16 = 0;

     label34:
        if i16 >= i1 goto label35;

        $r11 = r67[i16];

        interfaceinvoke r66.<android.text.Spannable: void removeSpan(java.lang.Object)>($r11);

        i16 = i16 + 1;

        goto label34;

     label35:
        $r7 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        if $r7 != null goto label36;

        r76 = new android.widget.TextView$ChangeWatcher;

        specialinvoke r76.<android.widget.TextView$ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView$1)>(r0, null);

        r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher> = r76;

     label36:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        interfaceinvoke r66.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r8, 0, i0, 6553618);

        r68 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r68 == null goto label37;

        virtualinvoke r68.<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>(r66);

     label37:
        r69 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r69 == null goto label38;

        interfaceinvoke r66.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r69, 0, i0, 18);

     label38:
        r70 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r70 == null goto label39;

        $r9 = (android.text.Spannable) r62;

        interfaceinvoke r70.<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>(r0, $r9);

        r71 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r71 == null goto label39;

        r71.<android.widget.Editor: boolean mSelectionMoved> = 0;

     label39:
        $r72 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r72 == null goto label40;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label40:
        r90 = (java.lang.CharSequence) r62;

        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r90, 0, i10, i0);

        r91 = (java.lang.CharSequence) r62;

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r91, 0, i10, i0);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(2);

        if z12 == 0 goto label41;

        $r5 = (android.text.Editable) r62;

        virtualinvoke r0.<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>($r5);

        goto label42;

     label41:
        specialinvoke r0.<android.widget.TextView: void notifyListeningManagersAfterTextChanged()>();

     label42:
        r73 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r73 == null goto label43;

        virtualinvoke r73.<android.widget.Editor: void prepareCursorControllers()>();

     label43:
        return;
    }

    private void setTextInternal(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean z0, $z1;
        android.text.Spannable r2;
        android.text.PrecomputedText r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = r1;

        z0 = r1 instanceof android.text.Spannable;

        if z0 == 0 goto label1;

        r2 = (android.text.Spannable) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        r0.<android.widget.TextView: android.text.Spannable mSpannable> = r2;

        r3 = null;

        $z1 = r1 instanceof android.text.PrecomputedText;

        if $z1 == 0 goto label3;

        r3 = (android.text.PrecomputedText) r1;

     label3:
        r0.<android.widget.TextView: android.text.PrecomputedText mPrecomputed> = r3;

        return;
    }

    private void setTextSizeInternal(int, float, boolean)
    {
        android.widget.TextView r0;
        int i0;
        float f0, $f1;
        boolean z0;
        android.util.DisplayMetrics $r1;
        android.content.Context r2;
        android.content.res.Resources r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        if r2 != null goto label1;

        r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        goto label2;

     label1:
        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

     label2:
        r0.<android.widget.TextView: int mTextSizeUnit> = i0;

        $r1 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i0, f0, $r1);

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float,boolean)>($f1, z0);

        return;
    }

    private void setTypefaceFromAttrs(android.graphics.Typeface, java.lang.String, int, int, int)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, $r3, $r4, $r5, $r6;
        java.lang.String r2;
        int i0, i1, i2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r1 != null goto label1;

        if r2 == null goto label1;

        $r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r2, 0);

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r6, i1, i2);

        goto label6;

     label1:
        if r1 == null goto label2;

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>(r1, i1, i2);

        goto label6;

     label2:
        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>(null, i1, i2);

        goto label6;

     label3:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r5, i1, i2);

        goto label6;

     label4:
        $r4 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r4, i1, i2);

        goto label6;

     label5:
        $r3 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        specialinvoke r0.<android.widget.TextView: void resolveStyleAndSetTypeface(android.graphics.Typeface,int,int)>($r3, i1, i2);

     label6:
        return;
    }

    private boolean setupAutoSizeText()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        int[] r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        double $d0, $d1;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label5;

        $i1 = r0.<android.widget.TextView: int mAutoSizeTextType>;

        if $i1 != 1 goto label5;

        $z1 = r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues>;

        if $z1 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        $i4 = lengthof $r3;

        if $i4 != 0 goto label4;

     label1:
        $f1 = r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx>;

        $f0 = r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx>;

        $f3 = $f1 - $f0;

        $f2 = r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx>;

        $f4 = $f3 / $f2;

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i2 = (int) $d1;

        i0 = $i2 + 1;

        r1 = newarray (int)[i0];

        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        $f8 = r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx>;

        $f6 = (float) i5;

        $f5 = r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx>;

        $f7 = $f6 * $f5;

        $f9 = $f8 + $f7;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f9);

        r1[i5] = $i3;

        i5 = i5 + 1;

        goto label2;

     label3:
        $r2 = specialinvoke r0.<android.widget.TextView: int[] cleanupAutoSizePresetSizes(int[])>(r1);

        r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx> = $r2;

     label4:
        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 1;

        goto label6;

     label5:
        r0.<android.widget.TextView: boolean mNeedsAutoSizeText> = 0;

     label6:
        $z2 = r0.<android.widget.TextView: boolean mNeedsAutoSizeText>;

        return $z2;
    }

    private void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    {
        android.widget.TextView r0;
        android.content.res.TypedArray r1;
        int i0, $i1, i2;
        int[] r2, $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.TypedArray;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        r2 = newarray (int)[i0];

        if i0 <= 0 goto label3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i2, -1);

        r2[i2] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = specialinvoke r0.<android.widget.TextView: int[] cleanupAutoSizePresetSizes(int[])>(r2);

        r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx> = $r3;

        specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeUniformPresetSizesConfiguration()>();

     label3:
        return;
    }

    private boolean setupAutoSizeUniformPresetSizesConfiguration()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        int[] r1, $r2;
        boolean $z0, z1;
        float $f0, $f1;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        i0 = lengthof $r2;

        if i0 <= 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues> = z1;

        if z1 == 0 goto label3;

        r0.<android.widget.TextView: int mAutoSizeTextType> = 1;

        r1 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        $i1 = r1[0];

        $f0 = (float) $i1;

        r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx> = $f0;

        $i2 = i0 - 1;

        $i3 = r1[$i2];

        $f1 = (float) $i3;

        r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx> = $f1;

        r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx> = -1.0F;

     label3:
        $z0 = r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues>;

        return $z0;
    }

    private void shareSelectedText()
    {
        android.widget.TextView r0;
        java.lang.String r1, $r6;
        boolean $z0;
        android.content.Intent $r3, $r9;
        java.lang.CharSequence $r5;
        android.content.Context $r8;
        android.text.Spannable $r10;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.String getSelectedText()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");

        virtualinvoke $r3.<android.content.Intent: void removeExtra(java.lang.String)>("android.intent.extra.TEXT");

        $r5 = staticinvoke <android.text.TextUtils: java.lang.CharSequence trimToParcelableSize(java.lang.CharSequence)>(r1);

        $r6 = (java.lang.String) $r5;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", $r6);

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r9 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>($r3, null);

        virtualinvoke $r8.<android.content.Context: void startActivity(android.content.Intent)>($r9);

        $r10 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r10, $i0);

     label1:
        return;
    }

    private boolean shouldAdvanceFocusOnEnter()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r3;
        int i0, $i1, $i2, $i3;
        android.text.method.KeyListener $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label4;

        $i1 = r1.<android.widget.Editor: int mInputType>;

        $i2 = $i1 & 15;

        if $i2 != 1 goto label4;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r3.<android.widget.Editor: int mInputType>;

        i0 = $i3 & 4080;

        if i0 == 32 goto label3;

        if i0 != 48 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    private void startMarquee()
    {
        android.widget.TextView r0;
        android.text.method.KeyListener $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.TextView$Marquee $r2, $r3, $r4, r6;
        android.text.Layout $r5, r7;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r1 == null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i2 - $i3;

        $f0 = (float) $i4;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f0);

        if $z0 == 0 goto label2;

        return;

     label2:
        r6 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r6 == null goto label3;

        $z4 = virtualinvoke r6.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z4 == 0 goto label7;

     label3:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z1 != 0 goto label4;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        if $z3 == 0 goto label7;

     label4:
        $i5 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i5 != 1 goto label7;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z2 == 0 goto label7;

        $i6 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i6 != 1 goto label5;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 2;

        r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r5 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r5;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = r7;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        $r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r2 != null goto label6;

        $r4 = new android.widget.TextView$Marquee;

        specialinvoke $r4.<android.widget.TextView$Marquee: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee> = $r4;

     label6:
        $r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $i7 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        virtualinvoke $r3.<android.widget.TextView$Marquee: void start(int)>($i7);

     label7:
        return;
    }

    private void startStopMarquee(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

     label2:
        return;
    }

    private void stopMarquee()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, r4;
        boolean $z0;
        android.widget.TextView$Marquee $r2, r3;
        int $i0;

        r0 := @this: android.widget.TextView;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        virtualinvoke $r2.<android.widget.TextView$Marquee: void stop()>();

     label1:
        $i0 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i0 != 2 goto label2;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

        r4 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r1;

        r0.<android.widget.TextView: android.text.Layout mLayout> = r4;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    private boolean suggestedSizeFitsInSpace(int, android.graphics.RectF)
    {
        android.widget.TextView r0;
        android.graphics.RectF r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, i10, i11;
        android.text.TextPaint $r2, $r3, $r4, $r5, $r16, r18;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.text.Layout$Alignment $r6;
        android.text.StaticLayout$Builder $r7, $r8, $r9, $r10, $r11, $r12, $r13, r19, r20;
        boolean $z0, $z1;
        android.text.TextDirectionHeuristic $r14;
        byte $b8;
        java.lang.CharSequence r17;
        android.text.StaticLayout r21;

        r0 := @this: android.widget.TextView;

        i10 := @parameter0: int;

        r1 := @parameter1: android.graphics.RectF;

        r17 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        if r17 == null goto label1;

        goto label2;

     label1:
        r17 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

     label2:
        i0 = virtualinvoke r0.<android.widget.TextView: int getMaxLines()>();

        r18 = r0.<android.widget.TextView: android.text.TextPaint mTempTextPaint>;

        if r18 != null goto label3;

        $r16 = new android.text.TextPaint;

        specialinvoke $r16.<android.text.TextPaint: void <init>()>();

        r0.<android.widget.TextView: android.text.TextPaint mTempTextPaint> = $r16;

        goto label4;

     label3:
        virtualinvoke r18.<android.text.TextPaint: void reset()>();

     label4:
        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTempTextPaint>;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        virtualinvoke $r2.<android.text.TextPaint: void set(android.text.TextPaint)>($r3);

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTempTextPaint>;

        $f0 = (float) i10;

        virtualinvoke $r4.<android.text.TextPaint: void setTextSize(float)>($f0);

        $i1 = interfaceinvoke r17.<java.lang.CharSequence: int length()>();

        $r5 = r0.<android.widget.TextView: android.text.TextPaint mTempTextPaint>;

        $f1 = r1.<android.graphics.RectF: float right>;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r19 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r17, 0, $i1, $r5, $i2);

        $r6 = specialinvoke r0.<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()>();

        $r7 = virtualinvoke r19.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>($r6);

        $f2 = virtualinvoke r0.<android.widget.TextView: float getLineSpacingExtra()>();

        $f3 = virtualinvoke r0.<android.widget.TextView: float getLineSpacingMultiplier()>();

        $r8 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f2, $f3);

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getIncludeFontPadding()>();

        $r9 = virtualinvoke $r8.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>($z0);

        $z1 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        $r10 = virtualinvoke $r9.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z1);

        $i3 = virtualinvoke r0.<android.widget.TextView: int getBreakStrategy()>();

        $r11 = virtualinvoke $r10.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>($i3);

        $i4 = virtualinvoke r0.<android.widget.TextView: int getHyphenationFrequency()>();

        $r12 = virtualinvoke $r11.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>($i4);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getJustificationMode()>();

        r20 = virtualinvoke $r12.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setJustificationMode(int)>($i5);

        $i6 = r0.<android.widget.TextView: int mMaxMode>;

        if $i6 != 1 goto label5;

        i11 = r0.<android.widget.TextView: int mMaximum>;

        goto label6;

     label5:
        i11 = 2147483647;

     label6:
        $r13 = virtualinvoke r20.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(i11);

        $r14 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        virtualinvoke $r13.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r14);

        r21 = virtualinvoke r19.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        if i0 == -1 goto label7;

        $i9 = virtualinvoke r21.<android.text.StaticLayout: int getLineCount()>();

        if $i9 <= i0 goto label7;

        return 0;

     label7:
        $i7 = virtualinvoke r21.<android.text.StaticLayout: int getHeight()>();

        $f5 = (float) $i7;

        $f4 = r1.<android.graphics.RectF: float bottom>;

        $b8 = $f5 cmpl $f4;

        if $b8 <= 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    private void unregisterForPreDraw()
    {
        android.widget.TextView r0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 0;

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 0;

        return;
    }

    private void updateTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1, r6, r7;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.CharSequence $r2;
        android.text.TextPaint $r3, $r4;
        boolean z0, z1, z2;
        int[] r5;
        android.widget.Editor r8;

        r0 := @this: android.widget.TextView;

        z0 = 0;

        r5 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        i4 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r5, 0);

        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

        if i4 == $i0 goto label1;

        r0.<android.widget.TextView: int mCurTextColor> = i4;

        z0 = 1;

     label1:
        r6 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        z1 = z0;

        if r6 == null goto label2;

        i5 = virtualinvoke r6.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r5, 0);

        z1 = z0;

        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i3 = $r3.<android.text.TextPaint: int linkColor>;

        if i5 == $i3 goto label2;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r4.<android.text.TextPaint: int linkColor> = i5;

        z1 = 1;

     label2:
        r7 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        z2 = z1;

        if r7 == null goto label3;

        i6 = virtualinvoke r7.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r5, 0);

        z2 = z1;

        $i1 = r0.<android.widget.TextView: int mCurHintTextColor>;

        if i6 == $i1 goto label3;

        r0.<android.widget.TextView: int mCurHintTextColor> = i6;

        z2 = z1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i2 != 0 goto label3;

        z2 = 1;

     label3:
        if z2 == 0 goto label5;

        r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r8 == null goto label4;

        virtualinvoke r8.<android.widget.Editor: void invalidateTextDisplayList()>();

     label4:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        return;
    }

    private void updateTextServicesLocaleAsync()
    {
        android.widget.TextView r0;
        android.widget.TextView$3 $r1;

        r0 := @this: android.widget.TextView;

        $r1 = new android.widget.TextView$3;

        specialinvoke $r1.<android.widget.TextView$3: void <init>(android.widget.TextView)>(r0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    private void updateTextServicesLocaleLocked()
    {
        android.widget.TextView r0;
        android.view.textservice.TextServicesManager r1;
        android.view.textservice.SpellCheckerSubtype r2;
        java.util.Locale r3;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: android.view.textservice.TextServicesManager getTextServicesManagerForUser()>();

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>(1);

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<android.view.textservice.SpellCheckerSubtype: java.util.Locale getLocaleObject()>();

        goto label3;

     label2:
        r3 = null;

     label3:
        r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache> = r3;

        return;
    }

    private void validateAndSetAutoSizeTextTypeUniformConfiguration(float, float, float)
    {
        android.widget.TextView r0;
        float f0, f1, f2;
        byte $b0, $b1, $b2;
        java.lang.StringBuilder $r1, $r7, $r15;
        java.lang.IllegalArgumentException $r5, $r13, $r19;
        java.lang.String $r6, $r14, $r20;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 <= 0 goto label3;

        $b1 = f1 cmpg f0;

        if $b1 <= 0 goto label2;

        $b2 = f2 cmpg 0.0F;

        if $b2 <= 0 goto label1;

        r0.<android.widget.TextView: int mAutoSizeTextType> = 1;

        r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx> = f0;

        r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx> = f1;

        r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx> = f2;

        r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues> = 0;

        return;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The auto-size step granularity (");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px) is less or equal to (0px)");

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum auto-size text size (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px) is less or equal to minimum auto-size text size (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px)");

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Minimum auto-size text size (");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px) is less or equal to (0px)");

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo, java.lang.String, android.os.Bundle)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        android.view.inputmethod.CursorAnchorInfo r2;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3, $r4;
        float $f0, $f1, $f2;
        java.lang.CharSequence $r5;
        android.view.inputmethod.CursorAnchorInfo$Builder $r6, $r7;
        android.os.Bundle $r8, r10;
        java.lang.String r9;
        android.graphics.RectF[] r11;
        android.graphics.RectF r13;
        android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo r14;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: android.os.Bundle;

        if r10 == null goto label6;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY");

        if $z1 == 0 goto label6;

        i0 = virtualinvoke r10.<android.os.Bundle: int getInt(java.lang.String,int)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX", -1);

        i1 = virtualinvoke r10.<android.os.Bundle: int getInt(java.lang.String,int)>("android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH", -1);

        if i1 <= 0 goto label5;

        if i0 < 0 goto label5;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if i0 < $i6 goto label1;

        goto label5;

     label1:
        r11 = newarray (android.graphics.RectF)[i1];

        $r6 = new android.view.inputmethod.CursorAnchorInfo$Builder;

        specialinvoke $r6.<android.view.inputmethod.CursorAnchorInfo$Builder: void <init>()>();

        $i7 = i0 + i1;

        $i8 = virtualinvoke r0.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $f1 = (float) $i8;

        $i9 = virtualinvoke r0.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $f2 = (float) $i9;

        virtualinvoke r0.<android.widget.TextView: void populateCharacterBounds(android.view.inputmethod.CursorAnchorInfo$Builder,int,int,float,float)>($r6, i0, $i7, $f1, $f2);

        $r7 = virtualinvoke $r6.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.CursorAnchorInfo$Builder setMatrix(android.graphics.Matrix)>(null);

        r2 = virtualinvoke $r7.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.CursorAnchorInfo build()>();

        i14 = 0;

     label2:
        if i14 >= i1 goto label4;

        $i10 = i0 + i14;

        $i11 = virtualinvoke r2.<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>($i10);

        $i12 = $i11 & 1;

        if $i12 != 1 goto label3;

        $i13 = i0 + i14;

        r13 = virtualinvoke r2.<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>($i13);

        if r13 == null goto label3;

        virtualinvoke r0.<android.widget.TextView: void mapRectFromViewToScreenCoords(android.graphics.RectF,boolean)>(r13, 1);

        r11[i14] = r13;

     label3:
        i14 = i14 + 1;

        goto label2;

     label4:
        $r8 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        virtualinvoke $r8.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>(r9, r11);

        return;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextView", "Invalid arguments for accessibility character locations");

        return;

     label6:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("android.view.accessibility.extra.DATA_RENDERING_INFO_KEY");

        if $z0 == 0 goto label7;

        r14 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo obtain()>();

        $r3 = virtualinvoke r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int width>;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i3 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        virtualinvoke r14.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void setLayoutSize(int,int)>($i2, $i3);

        $f0 = virtualinvoke r0.<android.widget.TextView: float getTextSize()>();

        virtualinvoke r14.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void setTextSizeInPx(float)>($f0);

        $i4 = virtualinvoke r0.<android.widget.TextView: int getTextSizeUnit()>();

        virtualinvoke r14.<android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo: void setTextSizeUnit(int)>($i4);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo)>(r14);

     label7:
        return;
    }

    public void addTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.TextView: java.util.ArrayList mListeners> = $r4;

     label1:
        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void append(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return;
    }

    public void append(java.lang.CharSequence, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, r2, $r3;
        int i0, i1, i2;
        boolean $z0, $z1, $z2, $z3;
        android.text.Editable $r4;
        android.text.Spannable $r6;
        android.text.method.MovementMethod $r7;
        android.widget.TextView$BufferType $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r2 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r8 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r2, $r8);

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        interfaceinvoke $r4.<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>(r1, i1, i0);

        i2 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if i2 == 0 goto label2;

        $r6 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $z1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r6, i2);

        if $z1 == 0 goto label2;

        $z2 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z3 != 0 goto label2;

        $r7 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r7);

     label2:
        return;
    }

    public void autofill(android.view.autofill.AutofillValue)
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        java.lang.CharSequence $r7, r11;
        android.widget.TextView$BufferType $r8;
        android.text.Spannable $r9;
        int $i1;
        android.view.autofill.AutofillValue r10;

        r0 := @this: android.widget.TextView;

        r10 := @parameter0: android.view.autofill.AutofillValue;

        $z0 = virtualinvoke r10.<android.view.autofill.AutofillValue: boolean isText()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 != 0 goto label1;

        goto label3;

     label1:
        $r7 = virtualinvoke r10.<android.view.autofill.AutofillValue: java.lang.CharSequence getTextValue()>();

        $r8 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r7, $r8, 1, 0);

        r11 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z2 = r11 instanceof android.text.Spannable;

        if $z2 == 0 goto label2;

        $r9 = (android.text.Spannable) r11;

        $i1 = interfaceinvoke r11.<java.lang.CharSequence: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r9, $i1);

     label2:
        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be autofilled into ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextView", $r6);

        return;
    }

    public void beginBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void beginBatchEdit()>();

     label1:
        return;
    }

    public boolean bringPointIntoView(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, i66, i67, i68, i69, i70, $i71, i72, i73, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, $i87, i88, i89;
        long l9, l10, $l40, $l90;
        boolean $z0, $z1, $z2, $z3, z5, z6, z7, z8, $z9;
        int[] $r1;
        android.text.Layout$Alignment $r2;
        float $f0, $f1, $f2;
        double $d0, $d1, $d2, $d3;
        android.widget.Scroller $r3, $r4, $r11, $r12, $r13;
        byte $b41;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10;
        android.text.Layout r14;

        r0 := @this: android.widget.TextView;

        i66 := @parameter0: int;

        z5 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRequested()>();

        z6 = 0;

        if z5 == 0 goto label01;

        r0.<android.widget.TextView: int mDeferScroll> = i66;

        return 0;

     label01:
        $z0 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z0 == 0 goto label02;

        r14 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        goto label03;

     label02:
        r14 = r0.<android.widget.TextView: android.text.Layout mLayout>;

     label03:
        if r14 != null goto label04;

        return 0;

     label04:
        i0 = virtualinvoke r14.<android.text.Layout: int getLineForOffset(int)>(i66);

        $r1 = <android.widget.TextView$4: int[] $SwitchMap$android$text$Layout$Alignment>;

        $r2 = virtualinvoke r14.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i0);

        $i11 = virtualinvoke $r2.<android.text.Layout$Alignment: int ordinal()>();

        i67 = $r1[$i11];

        if i67 == 1 goto label08;

        if i67 == 2 goto label07;

        if i67 == 3 goto label06;

        if i67 == 4 goto label05;

        i68 = 0;

        goto label09;

     label05:
        $i65 = virtualinvoke r14.<android.text.Layout: int getParagraphDirection(int)>(i0);

        i68 = neg $i65;

        goto label09;

     label06:
        i68 = virtualinvoke r14.<android.text.Layout: int getParagraphDirection(int)>(i0);

        goto label09;

     label07:
        i68 = -1;

        goto label09;

     label08:
        i68 = 1;

     label09:
        if i68 <= 0 goto label10;

        z6 = 1;

     label10:
        $f0 = virtualinvoke r14.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i66, z6);

        i1 = (int) $f0;

        i2 = virtualinvoke r14.<android.text.Layout: int getLineTop(int)>(i0);

        $i12 = i0 + 1;

        i3 = virtualinvoke r14.<android.text.Layout: int getLineTop(int)>($i12);

        $f1 = virtualinvoke r14.<android.text.Layout: float getLineLeft(int)>(i0);

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i4 = (int) $d1;

        $f2 = virtualinvoke r14.<android.text.Layout: float getLineRight(int)>(i0);

        $d2 = (double) $f2;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i69 = (int) $d3;

        i5 = virtualinvoke r14.<android.text.Layout: int getHeight()>();

        $i14 = r0.<android.widget.TextView: int mRight>;

        $i13 = r0.<android.widget.TextView: int mLeft>;

        $i15 = $i14 - $i13;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i17 = $i15 - $i16;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i6 = $i17 - $i18;

        $i20 = r0.<android.widget.TextView: int mBottom>;

        $i19 = r0.<android.widget.TextView: int mTop>;

        $i21 = $i20 - $i19;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i23 = $i21 - $i22;

        $i24 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i7 = $i23 - $i24;

        i70 = i69;

        $z1 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z1 != 0 goto label11;

        i70 = i69;

        $i63 = i69 - i4;

        if $i63 <= i6 goto label11;

        i70 = i69;

        if i69 <= i1 goto label11;

        $i64 = i4 + i6;

        i70 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i64);

     label11:
        $i71 = i3 - i2;

        i72 = $i71 / 2;

        i73 = i7 / 4;

        i75 = i72;

        if i72 <= i73 goto label12;

        i75 = i7 / 4;

     label12:
        i76 = i72;

        $i25 = i6 / 4;

        if i72 <= $i25 goto label13;

        i76 = i6 / 4;

     label13:
        i77 = r0.<android.widget.TextView: int mScrollX>;

        i8 = r0.<android.widget.TextView: int mScrollY>;

        i78 = i8;

        $i26 = i2 - i8;

        if $i26 >= i75 goto label14;

        i78 = i2 - i75;

     label14:
        $i28 = i3 - i78;

        $i27 = i7 - i75;

        if $i28 <= $i27 goto label15;

        $i62 = i7 - i75;

        i79 = i3 - $i62;

        goto label16;

     label15:
        i79 = i78;

     label16:
        i80 = i79;

        $i29 = i5 - i79;

        if $i29 >= i7 goto label17;

        i80 = i5 - i7;

     label17:
        i81 = i80;

        $i30 = 0 - i80;

        if $i30 <= 0 goto label18;

        i81 = 0;

     label18:
        i82 = i77;

        if i68 == 0 goto label20;

        i82 = i77;

        $i58 = i1 - i77;

        if $i58 >= i76 goto label19;

        i82 = i1 - i76;

     label19:
        $i60 = i1 - i82;

        $i59 = i6 - i76;

        if $i60 <= $i59 goto label20;

        $i61 = i6 - i76;

        i82 = i1 - $i61;

        goto label20;

     label20:
        if i68 >= 0 goto label22;

        i83 = i82;

        $i56 = i4 - i82;

        if $i56 <= 0 goto label21;

        i83 = i4;

     label21:
        i84 = i83;

        $i57 = i70 - i83;

        if $i57 >= i6 goto label32;

        i84 = i70 - i6;

        goto label32;

     label22:
        if i68 <= 0 goto label24;

        i85 = i82;

        $i54 = i70 - i82;

        if $i54 >= i6 goto label23;

        i85 = i70 - i6;

     label23:
        i84 = i85;

        $i55 = i4 - i85;

        if $i55 <= 0 goto label32;

        i84 = i4;

        goto label32;

     label24:
        $i31 = i70 - i4;

        if $i31 > i6 goto label25;

        $i51 = i70 - i4;

        $i52 = i6 - $i51;

        $i53 = $i52 / 2;

        i84 = i4 - $i53;

        goto label32;

     label25:
        $i32 = i70 - i76;

        if i1 <= $i32 goto label26;

        i84 = i70 - i6;

        goto label32;

     label26:
        $i33 = i4 + i76;

        if i1 >= $i33 goto label27;

        i84 = i4;

        goto label32;

     label27:
        if i4 <= i82 goto label28;

        i84 = i4;

        goto label32;

     label28:
        $i34 = i82 + i6;

        if i70 >= $i34 goto label29;

        i84 = i70 - i6;

        goto label32;

     label29:
        i86 = i82;

        $i35 = i1 - i82;

        if $i35 >= i76 goto label30;

        i86 = i1 - i76;

     label30:
        $i37 = i1 - i86;

        $i36 = i6 - i76;

        if $i37 <= $i36 goto label31;

        $i50 = i6 - i76;

        i84 = i1 - $i50;

        goto label32;

     label31:
        i84 = i86;

     label32:
        $i87 = r0.<android.widget.TextView: int mScrollX>;

        if i84 != $i87 goto label34;

        $i49 = r0.<android.widget.TextView: int mScrollY>;

        if i81 == $i49 goto label33;

        goto label34;

     label33:
        z7 = 0;

        goto label40;

     label34:
        $r3 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r3 != null goto label35;

        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i84, i81);

        goto label39;

     label35:
        l9 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        l10 = r0.<android.widget.TextView: long mLastScroll>;

        $i38 = r0.<android.widget.TextView: int mScrollX>;

        i88 = i84 - $i38;

        $i39 = r0.<android.widget.TextView: int mScrollY>;

        i89 = i81 - $i39;

        $l40 = l9 - l10;

        $b41 = $l40 cmp 250L;

        if $b41 <= 0 goto label36;

        $r12 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i47 = r0.<android.widget.TextView: int mScrollX>;

        $i46 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r12.<android.widget.Scroller: void startScroll(int,int,int,int)>($i47, $i46, i88, i89);

        $r13 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i48 = virtualinvoke $r13.<android.widget.Scroller: int getDuration()>();

        virtualinvoke r0.<android.widget.TextView: boolean awakenScrollBars(int)>($i48);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label38;

     label36:
        $r4 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z2 = virtualinvoke $r4.<android.widget.Scroller: boolean isFinished()>();

        if $z2 != 0 goto label37;

        $r11 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        virtualinvoke $r11.<android.widget.Scroller: void abortAnimation()>();

     label37:
        virtualinvoke r0.<android.widget.TextView: void scrollBy(int,int)>(i88, i89);

     label38:
        $l90 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.TextView: long mLastScroll> = $l90;

     label39:
        z7 = 1;

     label40:
        z8 = z7;

        $z9 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z9 == 0 goto label42;

        $r5 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        if $r5 != null goto label41;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Rect mTempRect> = $r10;

     label41:
        $r6 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i43 = i1 - 2;

        $i42 = i1 + 2;

        virtualinvoke $r6.<android.graphics.Rect: void set(int,int,int,int)>($i43, i2, $i42, i3);

        $r7 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        specialinvoke r0.<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)>($r7, i0);

        $r8 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i45 = r0.<android.widget.TextView: int mScrollX>;

        $i44 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r8.<android.graphics.Rect: void offset(int,int)>($i45, $i44);

        z8 = z7;

        $r9 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean requestRectangleOnScreen(android.graphics.Rect)>($r9);

        if $z3 == 0 goto label42;

        z8 = 1;

     label42:
        return z8;
    }

    boolean canCopy()
    {
        android.widget.TextView r0;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        int $i0;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean canCut()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r2, $r3;
        int $i0;
        android.text.method.KeyListener $r4;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r3 instanceof android.text.Editable;

        if $z2 == 0 goto label2;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label2;

        $r4 = r1.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean canPaste()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        java.lang.CharSequence $r2;
        boolean $z0, $z1, z2;
        android.text.method.KeyListener $r3;
        int $i0, $i1;
        android.content.ClipboardManager $r4;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r3 = r1.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r3 == null goto label1;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i1 < 0 goto label1;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()>();

        $z1 = virtualinvoke $r4.<android.content.ClipboardManager: boolean hasPrimaryClip()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean canPasteAsPlainText()
    {
        android.widget.TextView r0;
        android.content.ClipDescription r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.ClipboardManager $r2;
        android.content.ClipData$Item $r3;
        android.text.Spanned $r4;
        android.content.ClipData r5;
        java.lang.CharSequence r6;

        r0 := @this: android.widget.TextView;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.ClipboardManager getClipboardManagerForUser()>();

        r5 = virtualinvoke $r2.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        r1 = virtualinvoke r5.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        z0 = virtualinvoke r1.<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>("text/plain");

        $r3 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        r6 = virtualinvoke $r3.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if z0 == 0 goto label2;

        $z2 = r6 instanceof android.text.Spanned;

        if $z2 == 0 goto label2;

        $r4 = (android.text.Spanned) r6;

        $z3 = staticinvoke <android.text.TextUtils: boolean hasStyleSpan(android.text.Spanned)>($r4);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        $z4 = virtualinvoke r1.<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>("text/html");

        return $z4;
    }

    boolean canProcessText()
    {
        android.widget.TextView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getId()>();

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean canShare()>();

        return $z0;
    }

    boolean canRedo()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor: boolean canRedo()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean canRequestAutofill()
    {
        android.widget.TextView r0;
        android.view.autofill.AutofillManager r1;
        boolean $z0, $z1;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isAutofillable()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManager;");

        r1 = (android.view.autofill.AutofillManager) $r3;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.view.autofill.AutofillManager: boolean isEnabled()>();

        return $z1;

     label2:
        return 0;
    }

    boolean canSelectAllText()
    {
        android.widget.TextView r0;
        boolean $z0, $z1, z2;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z1 != 0 goto label2;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i1 == $i2 goto label2;

     label1:
        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    boolean canSelectText()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor: boolean hasSelectionController()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean canShare()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $z0 = virtualinvoke $r1.<android.content.Context: boolean canStartActivityForResult()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isDeviceProvisioned()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        return $z2;

     label2:
        return 0;
    }

    boolean canUndo()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Editor: boolean canUndo()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void cancelLongPress()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void cancelLongPress()>();

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        r1.<android.widget.Editor: boolean mIgnoreActionUpEvent> = 1;

     label1:
        return;
    }

    public void clearComposingText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Spannable $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r2);

     label1:
        return;
    }

    protected int computeHorizontalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r2;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        float $f0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r1 == null goto label3;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label1;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 7;

        if $i2 != 3 goto label1;

        $f0 = virtualinvoke r1.<android.text.Layout: float getLineWidth(int)>(0);

        i3 = (int) $f0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

     label2:
        return i3;

     label3:
        $i0 = specialinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public void computeScroll()
    {
        android.widget.TextView r0;
        android.widget.Scroller r1, $r2, $r3;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r2.<android.widget.Scroller: int getCurrX()>();

        r0.<android.widget.TextView: int mScrollX> = $i0;

        $r3 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r3.<android.widget.Scroller: int getCurrY()>();

        r0.<android.widget.TextView: int mScrollY> = $i1;

        virtualinvoke r0.<android.widget.TextView: void invalidateParentCaches()>();

        virtualinvoke r0.<android.widget.TextView: void postInvalidate()>();

     label1:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        return $i0;
    }

    float convertToLocalHorizontalCoordinate(float)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;

        r0 := @this: android.widget.TextView;

        f6 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $f0 = (float) $i0;

        $f1 = f6 - $f0;

        f7 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f1);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        $f2 = (float) $i4;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>($f2, f7);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $f4 = (float) $i5;

        $f5 = $f3 + $f4;

        return $f5;
    }

    public void debug(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.StringBuilder $r1, $r17, $r20, $r27;
        java.lang.CharSequence $r16, $r23;
        android.text.Layout $r26, $r30, $r33;
        java.lang.String r35, r37, r39, r40;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void debug(int)>(i0);

        r35 = staticinvoke <android.widget.TextView: java.lang.String debugIndent(int)>(i0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame={");

        $i1 = r0.<android.widget.TextView: int mLeft>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i2 = r0.<android.widget.TextView: int mTop>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = r0.<android.widget.TextView: int mRight>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i4 = r0.<android.widget.TextView: int mBottom>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} scroll={");

        $i5 = r0.<android.widget.TextView: int mScrollX>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        r37 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r16 == null goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=\"");

        $r23 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        r39 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r40 = r39;

        $r26 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r26 == null goto label2;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayout width=");

        $r30 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = virtualinvoke $r30.<android.text.Layout: int getWidth()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $r33 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i9 = virtualinvoke $r33.<android.text.Layout: int getHeight()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r40 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=NULL");

        r40 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", r40);

        return;
    }

    protected void deleteText_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>(i0, i1);

        return;
    }

    public boolean didTouchFocusSelect()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $z0 = r1.<android.widget.Editor: boolean mTouchFocusSelected>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        int i0, i1;
        android.graphics.drawable.Drawable r1;
        android.widget.TextView$Drawables r2;
        android.graphics.drawable.Drawable[] r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.view.View: void drawableHotspotChanged(float,float)>(f0, f1);

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label3;

        r3 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r3[i1];

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.TextView r0;
        int[] r1;
        android.graphics.drawable.Drawable[] r2;
        int i0, i1;
        android.widget.TextView$Drawables $r3, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.res.ColorStateList r4, r5, r6;
        android.graphics.drawable.Drawable r8;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        r4 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        if r4 == null goto label1;

        $z4 = virtualinvoke r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z4 != 0 goto label3;

     label1:
        r5 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if r5 == null goto label2;

        $z3 = virtualinvoke r5.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z3 != 0 goto label3;

     label2:
        r6 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if r6 == null goto label4;

        $z2 = virtualinvoke r6.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z2 == 0 goto label4;

     label3:
        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

     label4:
        $r7 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r7 == null goto label7;

        r1 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        r2 = $r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        i0 = lengthof r2;

        i1 = 0;

     label5:
        if i1 >= i0 goto label7;

        r8 = r2[i1];

        if r8 == null goto label6;

        $z0 = virtualinvoke r8.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label6;

        $z1 = virtualinvoke r8.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        if $z1 == 0 goto label6;

        virtualinvoke r0.<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>(r8);

     label6:
        i1 = i1 + 1;

        goto label5;

     label7:
        return;
    }

    protected void encodeProperties(android.view.ViewHierarchyEncoder)
    {
        android.widget.TextView r0;
        android.view.ViewHierarchyEncoder r1;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.TextUtils$TruncateAt r2;
        java.lang.String r3, r5;
        java.lang.CharSequence r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ViewHierarchyEncoder;

        specialinvoke r0.<android.view.View: void encodeProperties(android.view.ViewHierarchyEncoder)>(r1);

        r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>();

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = virtualinvoke r2.<android.text.TextUtils$TruncateAt: java.lang.String name()>();

     label2:
        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,java.lang.String)>("text:ellipsize", r3);

        $f0 = virtualinvoke r0.<android.widget.TextView: float getTextSize()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,float)>("text:textSize", $f0);

        $f1 = virtualinvoke r0.<android.widget.TextView: float getScaledTextSize()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,float)>("text:scaledTextSize", $f1);

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTypefaceStyle()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("text:typefaceStyle", $i0);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("text:selectionStart", $i1);

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("text:selectionEnd", $i2);

        $i3 = r0.<android.widget.TextView: int mCurTextColor>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("text:curTextColor", $i3);

        r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if r4 != null goto label3;

        r5 = null;

        goto label4;

     label3:
        r5 = interfaceinvoke r4.<java.lang.CharSequence: java.lang.String toString()>();

     label4:
        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addUserProperty(java.lang.String,java.lang.String)>("text:text", r5);

        $i4 = r0.<android.widget.TextView: int mGravity>;

        virtualinvoke r1.<android.view.ViewHierarchyEncoder: void addProperty(java.lang.String,int)>("text:gravity", $i4);

        return;
    }

    public void endBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void endBatchEdit()>();

     label1:
        return;
    }

    public boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        android.widget.Editor $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        r2 := @parameter1: android.view.inputmethod.ExtractedText;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>(r1, r2);

        return $z0;
    }

    public void findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.util.ArrayList r1;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r2, $r4, r7;
        java.lang.String $r3, $r5, $r6, r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.ArrayList;

        r7 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r1, r7, i0);

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z1 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z2 != 0 goto label1;

        $r3 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        r8 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>(r8);

        if $z3 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.TextView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.TextView;

        $r1 = class "Landroid/widget/TextView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getAccessibilitySelectionEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        return $i0;
    }

    public int getAccessibilitySelectionStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        return $i0;
    }

    public final int getAutoLinkMask()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mAutoLinkMask>;

        return $i0;
    }

    public int getAutoSizeMaxTextSize()
    {
        android.widget.TextView r0;
        float $f0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mAutoSizeMaxTextSizeInPx>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public int getAutoSizeMinTextSize()
    {
        android.widget.TextView r0;
        float $f0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mAutoSizeMinTextSizeInPx>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public int getAutoSizeStepGranularity()
    {
        android.widget.TextView r0;
        float $f0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mAutoSizeStepGranularityInPx>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    public int[] getAutoSizeTextAvailableSizes()
    {
        android.widget.TextView r0;
        int[] $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx>;

        return $r1;
    }

    public int getAutoSizeTextType()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mAutoSizeTextType>;

        return $i0;
    }

    public int getAutofillType()
    {
        android.widget.TextView r0;
        boolean $z0;
        int i0;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        i0 = (int) $z0;

        return i0;
    }

    public android.view.autofill.AutofillValue getAutofillValue()
    {
        android.widget.TextView r0;
        boolean $z0;
        java.lang.CharSequence $r1, $r2;
        android.view.autofill.AutofillValue $r3;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence trimToParcelableSize(java.lang.CharSequence)>($r1);

        $r3 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forText(java.lang.CharSequence)>($r2);

        return $r3;

     label1:
        return null;
    }

    public int getBaseline()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        $i3 = specialinvoke r0.<android.view.View: int getBaseline()>();

        return $i3;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getBaselineOffset()>();

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineBaseline(int)>(0);

        $i2 = $i0 + $i1;

        return $i2;
    }

    int getBaselineOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        android.view.ViewParent $r1;
        boolean $z0;
        android.graphics.Insets $r2;

        r0 := @this: android.widget.TextView;

        i5 = 0;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        $i1 = $i0 & 112;

        if $i1 == 48 goto label1;

        i5 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label1:
        i6 = i5;

        $r1 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

        $i4 = $r2.<android.graphics.Insets: int top>;

        i6 = i5 - $i4;

     label2:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = $i2 + i6;

        return $i3;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    public int getBreakStrategy()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mBreakStrategy>;

        return $i0;
    }

    final android.content.ClipboardManager getClipboardManagerForUser()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        android.content.ClipboardManager $r4;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.Object getServiceManagerForUser(java.lang.String,java.lang.Class)>($r2, class "Landroid/content/ClipboardManager;");

        $r4 = (android.content.ClipboardManager) $r3;

        return $r4;
    }

    public int getCompoundDrawablePadding()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        i0 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public android.graphics.BlendMode getCompoundDrawableTintBlendMode()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        r2 = r1.<android.widget.TextView$Drawables: android.graphics.BlendMode mBlendMode>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.content.res.ColorStateList getCompoundDrawableTintList()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.content.res.ColorStateList r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        r2 = r1.<android.widget.TextView$Drawables: android.content.res.ColorStateList mTintList>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    {
        android.widget.TextView r0;
        android.graphics.BlendMode r1;
        android.graphics.PorterDuff$Mode r2;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: android.graphics.BlendMode getCompoundDrawableTintBlendMode()>();

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.PorterDuff$Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>(r1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawables()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r3 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (android.graphics.drawable.Drawable[]) $r4;

        return $r5;

     label1:
        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = null;

        return $r2;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] $r2, $r3, $r5, $r8;
        android.graphics.drawable.Drawable $r4, $r6, $r7, $r9;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r3 = newarray (android.graphics.drawable.Drawable)[4];

        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        $r3[0] = $r4;

        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r6 = $r5[1];

        $r3[1] = $r6;

        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        $r3[2] = $r7;

        $r8 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r9 = $r8[3];

        $r3[3] = $r9;

        return $r3;

     label1:
        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = null;

        return $r2;
    }

    public int getCompoundPaddingBottom()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label2;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r3 = $r2[3];

        if $r3 != null goto label1;

        goto label2;

     label1:
        $i2 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i5 = $i4 + $i3;

        return $i5;

     label2:
        $i0 = r0.<android.widget.TextView: int mPaddingBottom>;

        return $i0;
    }

    public int getCompoundPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i0 == 1 goto label1;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i1;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label2;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r3 = $r2[0];

        if $r3 != null goto label1;

        goto label2;

     label1:
        $i2 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

        $i5 = $i4 + $i3;

        return $i5;

     label2:
        $i0 = r0.<android.widget.TextView: int mPaddingLeft>;

        return $i0;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label2;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r3 = $r2[2];

        if $r3 != null goto label1;

        goto label2;

     label1:
        $i2 = r0.<android.widget.TextView: int mPaddingRight>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i5 = $i4 + $i3;

        return $i5;

     label2:
        $i0 = r0.<android.widget.TextView: int mPaddingRight>;

        return $i0;
    }

    public int getCompoundPaddingStart()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i0 == 1 goto label1;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i1;
    }

    public int getCompoundPaddingTop()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label2;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r3 = $r2[1];

        if $r3 != null goto label1;

        goto label2;

     label1:
        $i2 = r0.<android.widget.TextView: int mPaddingTop>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeTop>;

        $i5 = $i4 + $i3;

        return $i5;

     label2:
        $i0 = r0.<android.widget.TextView: int mPaddingTop>;

        return $i0;
    }

    public final int getCurrentHintTextColor()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;
        int i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r1 == null goto label1;

        i0 = r0.<android.widget.TextView: int mCurHintTextColor>;

        goto label2;

     label1:
        i0 = r0.<android.widget.TextView: int mCurTextColor>;

     label2:
        return i0;
    }

    public final int getCurrentTextColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

        return $i0;
    }

    public android.view.ActionMode$Callback getCustomInsertionActionModeCallback()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        android.view.ActionMode$Callback r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<android.widget.Editor: android.view.ActionMode$Callback mCustomInsertionActionModeCallback>;

     label2:
        return r2;
    }

    public android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        android.view.ActionMode$Callback r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback>;

     label2:
        return r2;
    }

    protected boolean getDefaultEditable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    protected android.text.method.MovementMethod getDefaultMovementMethod()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return null;
    }

    public android.text.Editable getEditableText()
    {
        android.widget.TextView r0;
        boolean $z0;
        java.lang.CharSequence r1;
        android.text.Editable r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        r2 = (android.text.Editable) r1;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public final android.widget.Editor getEditorForTesting()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        return $r1;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        return $r1;
    }

    public java.lang.CharSequence getError()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<android.widget.Editor: java.lang.CharSequence mError>;

     label2:
        return r2;
    }

    public int getExtendedPaddingBottom()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        android.text.Layout $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        $i3 = r0.<android.widget.TextView: int mMaxMode>;

        if $i3 == 1 goto label1;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i16;

     label1:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label2;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label2:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i5 = r0.<android.widget.TextView: int mMaximum>;

        if $i4 > $i5 goto label3;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i15;

     label3:
        i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i7 = $i6 - i17;

        i1 = $i7 - i0;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = r0.<android.widget.TextView: int mMaximum>;

        i18 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i8);

        if i18 < i1 goto label4;

        return i0;

     label4:
        $i9 = r0.<android.widget.TextView: int mGravity>;

        i2 = $i9 & 112;

        if i2 != 48 goto label5;

        $i13 = i0 + i1;

        $i14 = $i13 - i18;

        return $i14;

     label5:
        if i2 != 80 goto label6;

        return i0;

     label6:
        $i10 = i1 - i18;

        $i11 = $i10 / 2;

        $i12 = $i11 + i0;

        return $i12;
    }

    public int getExtendedPaddingTop()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        android.text.Layout $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        $i3 = r0.<android.widget.TextView: int mMaxMode>;

        if $i3 == 1 goto label1;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i16;

     label1:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label2;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label2:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i5 = r0.<android.widget.TextView: int mMaximum>;

        if $i4 > $i5 goto label3;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i15;

     label3:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i7 = $i6 - i0;

        i18 = $i7 - i17;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = r0.<android.widget.TextView: int mMaximum>;

        i1 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i8);

        if i1 < i18 goto label4;

        return i0;

     label4:
        $i9 = r0.<android.widget.TextView: int mGravity>;

        i2 = $i9 & 112;

        if i2 != 48 goto label5;

        return i0;

     label5:
        if i2 != 80 goto label6;

        $i13 = i0 + i18;

        $i14 = $i13 - i1;

        return $i14;

     label6:
        $i10 = i18 - i1;

        $i11 = $i10 / 2;

        $i12 = $i11 + i0;

        return $i12;
    }

    protected int getFadeHeight(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.Layout r1;
        int i0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    protected int getFadeTop(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.Layout $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i5 = 0;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        $i1 = $i0 & 112;

        if $i1 == 48 goto label2;

        i5 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        i6 = i5;

        if z0 == 0 goto label3;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getTopPaddingOffset()>();

        i6 = i5 + $i4;

     label3:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = $i2 + i6;

        return $i3;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.widget.TextView r0;
        android.text.InputFilter[] $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        return $r1;
    }

    public int getFirstBaselineToTopHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        android.text.TextPaint $r1;
        android.graphics.Paint$FontMetricsInt $r2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getPaddingTop()>();

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i1 = $r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, $i25, $i26, i27;
        android.graphics.RectF r1, $r21, $r22, $r23;
        android.text.Layout $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r16, $r17;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        android.graphics.Path $r11, $r12, $r13, $r15, $r20;
        java.lang.Throwable $r18;
        android.graphics.Rect r19;

        r0 := @this: android.widget.TextView;

        r19 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label01;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r19);

        return;

     label01:
        i14 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i14 >= 0 goto label02;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r19);

        return;

     label02:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i0 < 0 goto label12;

        if i0 < i14 goto label03;

        goto label12;

     label03:
        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i15 = virtualinvoke $r7.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i16 = virtualinvoke $r8.<android.text.Layout: int getLineForOffset(int)>(i14);

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = virtualinvoke $r9.<android.text.Layout: int getLineTop(int)>(i15);

        r19.<android.graphics.Rect: int top> = $i10;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i11 = virtualinvoke $r10.<android.text.Layout: int getLineBottom(int)>(i16);

        r19.<android.graphics.Rect: int bottom> = $i11;

        if i15 != i16 goto label04;

        $r16 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r16.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i12 = (int) $f1;

        r19.<android.graphics.Rect: int left> = $i12;

        $r17 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f2 = virtualinvoke $r17.<android.text.Layout: float getPrimaryHorizontal(int)>(i14);

        $i13 = (int) $f2;

        r19.<android.graphics.Rect: int right> = $i13;

        goto label13;

     label04:
        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label06;

        $r11 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r11 != null goto label05;

        $r15 = new android.graphics.Path;

        specialinvoke $r15.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r15;

     label05:
        $r12 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r12.<android.graphics.Path: void reset()>();

        $r14 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r13 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r14.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i14, $r13);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label06:
        r1 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        entermonitor r1;

     label07:
        $r20 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r21 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r20.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r21, 1);

        $r22 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f3 = $r22.<android.graphics.RectF: float left>;

        $i17 = (int) $f3;

        $i18 = $i17 - 1;

        r19.<android.graphics.Rect: int left> = $i18;

        $r23 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f4 = $r23.<android.graphics.RectF: float right>;

        $i19 = (int) $f4;

        $i20 = $i19 + 1;

        r19.<android.graphics.Rect: int right> = $i20;

        exitmonitor r1;

     label08:
        goto label13;

     label09:
        $r18 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r18;

     label12:
        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i21 = virtualinvoke $r3.<android.text.Layout: int getLineForOffset(int)>(i14);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>(i21);

        r19.<android.graphics.Rect: int top> = $i1;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i2 = virtualinvoke $r5.<android.text.Layout: int getLineBottom(int)>(i21);

        r19.<android.graphics.Rect: int bottom> = $i2;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r6.<android.text.Layout: float getPrimaryHorizontal(int)>(i14);

        $i3 = (int) $f0;

        $i4 = $i3 - 2;

        r19.<android.graphics.Rect: int left> = $i4;

        $i5 = r19.<android.graphics.Rect: int left>;

        $i6 = $i5 + 4;

        r19.<android.graphics.Rect: int right> = $i6;

     label13:
        i22 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i23 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i24 = i23;

        $i25 = r0.<android.widget.TextView: int mGravity>;

        $i26 = $i25 & 112;

        if $i26 == 48 goto label14;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i24 = i23 + $i9;

     label14:
        virtualinvoke r19.<android.graphics.Rect: void offset(int,int)>(i22, i24);

        i27 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i7 = r19.<android.graphics.Rect: int bottom>;

        $i8 = $i7 + i27;

        r19.<android.graphics.Rect: int bottom> = $i8;

        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public java.lang.String getFontFeatureSettings()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.lang.String getFontFeatureSettings()>();

        return $r2;
    }

    public java.lang.String getFontVariationSettings()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.lang.String getFontVariationSettings()>();

        return $r2;
    }

    public boolean getFreezesText()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mFreezesText>;

        return $z0;
    }

    public int getGravity()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        return $i0;
    }

    public int getHighlightColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mHighlightColor>;

        return $i0;
    }

    public java.lang.CharSequence getHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        return $r1;
    }

    final android.text.Layout getHintLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        return $r1;
    }

    public final android.content.res.ColorStateList getHintTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        return $r1;
    }

    public int getHorizontalOffsetForDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    public boolean getHorizontallyScrolling()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        return $z0;
    }

    public int getHyphenationFrequency()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        return $i0;
    }

    public int getImeActionId()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r3;
        android.widget.Editor$InputContentType $r2, $r4;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        i0 = $r4.<android.widget.Editor$InputContentType: int imeActionId>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public java.lang.CharSequence getImeActionLabel()
    {
        android.widget.TextView r0;
        android.widget.Editor$InputContentType $r1, $r3;
        android.widget.Editor $r2, r4;
        java.lang.CharSequence r5;

        r0 := @this: android.widget.TextView;

        r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r4 == null goto label1;

        $r1 = r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        r5 = $r3.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    public android.os.LocaleList getImeHintLocales()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r3;
        android.widget.Editor$InputContentType $r2, $r4;
        android.os.LocaleList $r5;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r1.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r5 = $r4.<android.widget.Editor$InputContentType: android.os.LocaleList imeHintLocales>;

        return $r5;
    }

    public int getImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r3;
        android.widget.Editor$InputContentType $r2, $r4;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        i0 = $r4.<android.widget.Editor$InputContentType: int imeOptions>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public boolean getIncludeFontPadding()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mIncludePad>;

        return $z0;
    }

    public android.os.Bundle getInputExtras(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2, $r4, $r7, $r10, $r13;
        android.widget.Editor$InputContentType $r3, $r5, $r8, $r12;
        android.os.Bundle $r6, $r9, $r11;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        return null;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 != null goto label3;

        if z0 != 0 goto label2;

        return null;

     label2:
        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r13.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

     label3:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        if $r6 != null goto label5;

        if z0 != 0 goto label4;

        return null;

     label4:
        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r10.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        $r12.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r11;

     label5:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r9 = $r8.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        return $r9;
    }

    public int getInputType()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = r1.<android.widget.Editor: int mInputType>;

     label2:
        return i0;
    }

    public java.lang.CharSequence getIterableTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r1;
    }

    public android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.Spannable r1, $r6;
        java.lang.CharSequence $r2, $r5;
        boolean $z0, $z1;
        android.text.Layout $r3, $r4, $r7;
        android.widget.AccessibilityIterators$PageTextSegmentIterator r8;
        android.widget.AccessibilityIterators$LineTextSegmentIterator r9;
        android.view.AccessibilityIterators$TextSegmentIterator $r10;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 == 4 goto label2;

        if i0 == 16 goto label1;

        goto label3;

     label1:
        $r5 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        $r6 = (android.text.Spannable) $r5;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z1 != 0 goto label3;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r7 == null goto label3;

        r8 = staticinvoke <android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>();

        virtualinvoke r8.<android.widget.AccessibilityIterators$PageTextSegmentIterator: void initialize(android.widget.TextView)>(r0);

        return r8;

     label2:
        $r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        r1 = (android.text.Spannable) $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r3 == null goto label3;

        r9 = staticinvoke <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>();

        $r4 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        virtualinvoke r9.<android.widget.AccessibilityIterators$LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>(r1, $r4);

        return r9;

     label3:
        $r10 = specialinvoke r0.<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>(i0);

        return $r10;
    }

    public int getJustificationMode()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mJustificationMode>;

        return $i0;
    }

    public final android.text.method.KeyListener getKeyListener()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        android.text.method.KeyListener r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

     label2:
        return r2;
    }

    public int getLastBaselineToBottomHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;
        android.text.TextPaint $r1;
        android.graphics.Paint$FontMetricsInt $r2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getPaddingBottom()>();

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $i1 = $r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public final android.text.Layout getLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.widget.TextView r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0, $z1, $z2;
        android.text.Layout $r1;
        int $i0, $i2, $i3;
        byte $b1;
        android.widget.TextView$Marquee r2, r3;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isMarqueeFadeEnabled()>();

        if $z0 == 0 goto label2;

        r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z1 != 0 goto label2;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z2 = virtualinvoke r3.<android.widget.TextView$Marquee: boolean shouldDrawLeftFade()>();

        if $z2 == 0 goto label1;

        $f5 = virtualinvoke r3.<android.widget.TextView$Marquee: float getScroll()>();

        $f6 = specialinvoke r0.<android.widget.TextView: float getHorizontalFadingEdgeStrength(float,float)>($f5, 0.0F);

        return $f6;

     label1:
        return 0.0F;

     label2:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i3 != 1 goto label4;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>(0);

        $i0 = r0.<android.widget.TextView: int mScrollX>;

        $f2 = (float) $i0;

        $b1 = f0 cmpl $f2;

        if $b1 <= 0 goto label3;

        return 0.0F;

     label3:
        $i2 = r0.<android.widget.TextView: int mScrollX>;

        $f3 = (float) $i2;

        $f4 = specialinvoke r0.<android.widget.TextView: float getHorizontalFadingEdgeStrength(float,float)>($f3, f0);

        return $f4;

     label4:
        $f1 = specialinvoke r0.<android.view.View: float getLeftFadingEdgeStrength()>();

        return $f1;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i2 = $i0 - $i1;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i3 = (int) $f3;

        $i4 = $i2 + $i3;

        return $i4;
    }

    public float getLetterSpacing()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getLetterSpacing()>();

        return $f0;
    }

    int getLineAtCoordinate(float)
    {
        android.widget.TextView r0;
        float f0, $f1, $f2, $f3, $f4, f5, f6, f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f5 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $f1 = (float) $i0;

        $f2 = f5 - $f1;

        f6 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        $f3 = (float) $i4;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f3, f6);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        f7 = (float) $i5;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $f4 = f0 + f7;

        $i6 = (int) $f4;

        $i7 = virtualinvoke $r1.<android.text.Layout: int getLineForVertical(int)>($i6);

        return $i7;
    }

    int getLineAtCoordinateUnclamped(float)
    {
        android.widget.TextView r0;
        float f0, f1, f2, $f3, $f4;
        int $i0, $i1, $i2, $i3;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        f1 = (float) $i0;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        f2 = (float) $i1;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $f3 = f0 - f1;

        $f4 = $f3 + f2;

        $i2 = (int) $f4;

        $i3 = virtualinvoke $r1.<android.text.Layout: int getLineForVertical(int)>($i2);

        return $i3;
    }

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        android.text.Layout r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;

        r0 := @this: android.widget.TextView;

        i7 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r2 != null goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label1:
        return 0;

     label2:
        i0 = virtualinvoke r2.<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>(i7, r1);

        i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i8 = i1;

        $i2 = r0.<android.widget.TextView: int mGravity>;

        $i3 = $i2 & 112;

        if $i3 == 48 goto label3;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i8 = i1 + $i6;

     label3:
        if r1 == null goto label4;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i5, i8);

     label4:
        $i4 = i0 + i8;

        return $i4;
    }

    public int getLineCount()
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getLineHeight()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        $f1 = (float) $i0;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = $f1 * $f0;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f4 = $f3 + $f2;

        $i1 = staticinvoke <com.android.internal.util.FastMath: int round(float)>($f4);

        return $i1;
    }

    public float getLineSpacingExtra()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingAdd>;

        return $f0;
    }

    public float getLineSpacingMultiplier()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        return $f0;
    }

    public final android.content.res.ColorStateList getLinkTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        return $r1;
    }

    public final boolean getLinksClickable()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mLinksClickable>;

        return $z0;
    }

    public int getMarqueeRepeatLimit()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        return $i0;
    }

    public int getMaxEms()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 1 goto label1;

        i1 = r0.<android.widget.TextView: int mMaxWidth>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMaxHeight()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 2 goto label1;

        i1 = r0.<android.widget.TextView: int mMaximum>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMaxLines()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 1 goto label1;

        i1 = r0.<android.widget.TextView: int mMaximum>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMaxWidth()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 2 goto label1;

        i1 = r0.<android.widget.TextView: int mMaxWidth>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMinEms()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 1 goto label1;

        i1 = r0.<android.widget.TextView: int mMinWidth>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMinHeight()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 2 goto label1;

        i1 = r0.<android.widget.TextView: int mMinimum>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMinLines()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 1 goto label1;

        i1 = r0.<android.widget.TextView: int mMinimum>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public int getMinWidth()
    {
        android.widget.TextView r0;
        int $i0, i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 2 goto label1;

        i1 = r0.<android.widget.TextView: int mMinWidth>;

        goto label2;

     label1:
        i1 = -1;

     label2:
        return i1;
    }

    public final android.text.method.MovementMethod getMovementMethod()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        return $r1;
    }

    int getOffsetAtCoordinate(int, float)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.text.Layout $r1;
        float f0, f1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 = virtualinvoke r0.<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>(f0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r1.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i0, f1);

        return $i1;
    }

    public int getOffsetForPosition(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        android.text.Layout $r1;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinate(float)>(f1);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getOffsetAtCoordinate(int,float)>($i0, f0);

        return $i1;
    }

    public android.text.TextPaint getPaint()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        return $r1;
    }

    public int getPaintFlags()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        return $i0;
    }

    public java.lang.String getPrivateImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor$InputContentType $r1, $r3;
        android.widget.Editor $r2, r4;
        java.lang.String r5;

        r0 := @this: android.widget.TextView;

        r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r4 == null goto label1;

        $r1 = r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        r5 = $r3.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        android.text.Layout $r1;
        byte $b7;
        android.widget.TextView$Marquee r2, r3;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isMarqueeFadeEnabled()>();

        if $z0 == 0 goto label1;

        r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z1 != 0 goto label1;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f4 = virtualinvoke r3.<android.widget.TextView$Marquee: float getMaxFadeScroll()>();

        $f5 = virtualinvoke r3.<android.widget.TextView$Marquee: float getScroll()>();

        $f6 = specialinvoke r0.<android.widget.TextView: float getHorizontalFadingEdgeStrength(float,float)>($f4, $f5);

        return $f6;

     label1:
        $i8 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i8 != 1 goto label3;

        $i0 = r0.<android.widget.TextView: int mScrollX>;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i5 = $i3 - $i4;

        $i6 = $i0 + $i5;

        f0 = (float) $i6;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        f1 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>(0);

        $b7 = f1 cmpg f0;

        if $b7 >= 0 goto label2;

        return 0.0F;

     label2:
        $f3 = specialinvoke r0.<android.widget.TextView: float getHorizontalFadingEdgeStrength(float,float)>(f0, f1);

        return $f3;

     label3:
        $f2 = specialinvoke r0.<android.view.View: float getRightFadingEdgeStrength()>();

        return $f2;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = r0.<android.widget.TextView: int mPaddingRight>;

        $i2 = $i0 - $i1;

        $i3 = neg $i2;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i4 = (int) $f3;

        $i5 = $i3 + $i4;

        return $i5;
    }

    public float getScaledTextSize()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = $r2.<android.text.TextPaint: float density>;

        $f2 = $f0 / $f1;

        return $f2;
    }

    java.lang.String getSelectedText()
    {
        android.widget.TextView r0;
        int i0, i1;
        boolean $z0;
        java.lang.String $r1;
        java.lang.CharSequence r2, r3;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if i0 <= i1 goto label2;

        r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i1, i0);

        goto label3;

     label2:
        r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

     label3:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        return $r1;
    }

    public int getSelectionEnd()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public int getSelectionStart()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        return $i0;
    }

    final java.lang.Object getServiceManagerForUser(java.lang.String, java.lang.Class)
    {
        android.widget.TextView r0;
        java.lang.Class r1;
        android.os.UserHandle $r2, $r4;
        android.content.Context $r3, $r5, $r6;
        java.lang.Object $r7, r10;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.String r9;

        r0 := @this: android.widget.TextView;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        if $r2 != null goto label1;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(r1);

        return $r7;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>(r9, 0, $r4);

        r10 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(r1);

     label2:
        return r10;

     label3:
        $r8 := @caughtexception;

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public int getShadowColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mShadowColor>;

        return $i0;
    }

    public float getShadowDx()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDx>;

        return $f0;
    }

    public float getShadowDy()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDy>;

        return $f0;
    }

    public float getShadowRadius()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        return $f0;
    }

    public final boolean getShowSoftInputOnFocus()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label2;

        $z0 = r1.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public java.util.Locale getSpellCheckerLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(1);

        return $r1;
    }

    public java.lang.CharSequence getText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r1;
    }

    android.view.textclassifier.TextClassificationContext getTextClassificationContext()
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassificationContext $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.view.textclassifier.TextClassificationContext mTextClassificationContext>;

        return $r1;
    }

    final android.view.textclassifier.TextClassificationManager getTextClassificationManagerForUser()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        android.view.textclassifier.TextClassificationManager $r4;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.Object getServiceManagerForUser(java.lang.String,java.lang.Class)>($r2, class "Landroid/view/textclassifier/TextClassificationManager;");

        $r4 = (android.view.textclassifier.TextClassificationManager) $r3;

        return $r4;
    }

    android.view.textclassifier.TextClassifier getTextClassificationSession()
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassificationManager r1;
        android.view.textclassifier.TextClassifier r2, $r3, $r4, $r5, r6, $r12;
        boolean $z0, $z1, $z2;
        java.lang.String r7, $r10;
        android.view.textclassifier.TextClassificationContext$Builder $r8;
        android.content.Context $r9;
        android.view.textclassifier.TextClassificationContext r11;

        r0 := @this: android.widget.TextView;

        r6 = r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassificationSession>;

        if r6 == null goto label1;

        $z2 = interfaceinvoke r6.<android.view.textclassifier.TextClassifier: boolean isDestroyed()>();

        if $z2 == 0 goto label8;

     label1:
        r1 = virtualinvoke r0.<android.widget.TextView: android.view.textclassifier.TextClassificationManager getTextClassificationManagerForUser()>();

        if r1 == null goto label7;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z0 == 0 goto label2;

        r7 = "edittext";

        goto label4;

     label2:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z1 == 0 goto label3;

        r7 = "textview";

        goto label4;

     label3:
        r7 = "nosel-textview";

     label4:
        $r8 = new android.view.textclassifier.TextClassificationContext$Builder;

        $r9 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r8.<android.view.textclassifier.TextClassificationContext$Builder: void <init>(java.lang.String,java.lang.String)>($r10, r7);

        r11 = virtualinvoke $r8.<android.view.textclassifier.TextClassificationContext$Builder: android.view.textclassifier.TextClassificationContext build()>();

        r0.<android.widget.TextView: android.view.textclassifier.TextClassificationContext mTextClassificationContext> = r11;

        r2 = r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassifier>;

        if r2 == null goto label5;

        $r5 = virtualinvoke r1.<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier createTextClassificationSession(android.view.textclassifier.TextClassificationContext,android.view.textclassifier.TextClassifier)>(r11, r2);

        r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassificationSession> = $r5;

        goto label6;

     label5:
        $r4 = virtualinvoke r1.<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier createTextClassificationSession(android.view.textclassifier.TextClassificationContext)>(r11);

        r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassificationSession> = $r4;

     label6:
        goto label8;

     label7:
        $r3 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassificationSession> = $r3;

     label8:
        $r12 = r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassificationSession>;

        return $r12;
    }

    public android.view.textclassifier.TextClassifier getTextClassifier()
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassifier $r1, $r2, r3;
        android.view.textclassifier.TextClassificationManager r4;

        r0 := @this: android.widget.TextView;

        r3 = r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassifier>;

        if r3 != null goto label2;

        r4 = virtualinvoke r0.<android.widget.TextView: android.view.textclassifier.TextClassificationManager getTextClassificationManagerForUser()>();

        if r4 == null goto label1;

        $r2 = virtualinvoke r4.<android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()>();

        return $r2;

     label1:
        $r1 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        return $r1;

     label2:
        return r3;
    }

    public final android.content.res.ColorStateList getTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getTextCursorDrawable()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        int $i0, $i1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mCursorDrawable>;

        if $r1 != null goto label1;

        $i0 = r0.<android.widget.TextView: int mCursorDrawableRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $i1 = r0.<android.widget.TextView: int mCursorDrawableRes>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mCursorDrawable> = $r3;

     label1:
        $r4 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mCursorDrawable>;

        return $r4;
    }

    public android.text.TextDirectionHeuristic getTextDirectionHeuristic()
    {
        android.widget.TextView r0;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.TextDirectionHeuristic $r1, $r2, $r3, $r4, $r5, $r6, $r11, $r12, $r13, r15;
        java.util.Locale $r7;
        android.icu.text.DecimalFormatSymbols $r8;
        java.lang.String[] $r9;
        java.lang.String $r10;
        android.widget.Editor r14;
        byte b5;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label01;

        $r13 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r13;

     label01:
        r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z1 = 0;

        if r14 == null goto label04;

        $i2 = r14.<android.widget.Editor: int mInputType>;

        $i3 = $i2 & 15;

        if $i3 != 3 goto label04;

        $r7 = virtualinvoke r0.<android.widget.TextView: java.util.Locale getTextLocale()>();

        $r8 = staticinvoke <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>($r7);

        $r9 = virtualinvoke $r8.<android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>();

        $r10 = $r9[0];

        $i4 = virtualinvoke $r10.<java.lang.String: int codePointAt(int)>(0);

        b5 = staticinvoke <java.lang.Character: byte getDirectionality(int)>($i4);

        if b5 == 1 goto label03;

        if b5 != 2 goto label02;

        goto label03;

     label02:
        $r12 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r12;

     label03:
        $r11 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r11;

     label04:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i0 != 1 goto label05;

        z1 = 1;

     label05:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getTextDirection()>();

        tableswitch($i1)
        {
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            default: goto label06;
        };

     label06:
        if z1 == 0 goto label13;

        r15 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        goto label14;

     label07:
        $r1 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        return $r1;

     label08:
        $r2 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        return $r2;

     label09:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        return $r3;

     label10:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r4;

     label11:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r5;

     label12:
        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        return $r6;

     label13:
        r15 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

     label14:
        return r15;
    }

    public java.util.Locale getTextLocale()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.util.Locale getTextLocale()>();

        return $r2;
    }

    public android.os.LocaleList getTextLocales()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        android.os.LocaleList $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.os.LocaleList getTextLocales()>();

        return $r2;
    }

    public android.text.PrecomputedText$Params getTextMetricsParams()
    {
        android.widget.TextView r0;
        android.text.PrecomputedText$Params $r1;
        android.text.TextPaint $r2, $r3;
        android.text.TextDirectionHeuristic $r4;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = new android.text.PrecomputedText$Params;

        $r2 = new android.text.TextPaint;

        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        specialinvoke $r2.<android.text.TextPaint: void <init>(android.graphics.Paint)>($r3);

        $r4 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $i1 = r0.<android.widget.TextView: int mBreakStrategy>;

        $i0 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        specialinvoke $r1.<android.text.PrecomputedText$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>($r2, $r4, $i1, $i0);

        return $r1;
    }

    public float getTextScaleX()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        return $f0;
    }

    public android.graphics.drawable.Drawable getTextSelectHandle()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        int $i0, $i1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandle>;

        if $r1 != null goto label1;

        $i0 = r0.<android.widget.TextView: int mTextSelectHandleRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $i1 = r0.<android.widget.TextView: int mTextSelectHandleRes>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandle> = $r3;

     label1:
        $r4 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandle>;

        return $r4;
    }

    public android.graphics.drawable.Drawable getTextSelectHandleLeft()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        int $i0, $i1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleLeft>;

        if $r1 != null goto label1;

        $i0 = r0.<android.widget.TextView: int mTextSelectHandleLeftRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $i1 = r0.<android.widget.TextView: int mTextSelectHandleLeftRes>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleLeft> = $r3;

     label1:
        $r4 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleLeft>;

        return $r4;
    }

    public android.graphics.drawable.Drawable getTextSelectHandleRight()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        int $i0, $i1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleRight>;

        if $r1 != null goto label1;

        $i0 = r0.<android.widget.TextView: int mTextSelectHandleRightRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.content.Context mContext>;

        $i1 = r0.<android.widget.TextView: int mTextSelectHandleRightRes>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleRight> = $r3;

     label1:
        $r4 = r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleRight>;

        return $r4;
    }

    public java.util.Locale getTextServicesLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(0);

        return $r1;
    }

    final android.view.textservice.TextServicesManager getTextServicesManagerForUser()
    {
        android.widget.TextView r0;
        java.lang.Object $r1;
        android.view.textservice.TextServicesManager $r2;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.Object getServiceManagerForUser(java.lang.String,java.lang.Class)>("android", class "Landroid/view/textservice/TextServicesManager;");

        $r2 = (android.view.textservice.TextServicesManager) $r1;

        return $r2;
    }

    public float getTextSize()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        return $f0;
    }

    public int getTextSizeUnit()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mTextSizeUnit>;

        return $i0;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    public int getTotalPaddingBottom()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = specialinvoke r0.<android.widget.TextView: int getBottomVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getTotalPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingEnd()>();

        return $i0;
    }

    public int getTotalPaddingLeft()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i0;
    }

    public int getTotalPaddingRight()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i0;
    }

    public int getTotalPaddingStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingStart()>();

        return $i0;
    }

    public int getTotalPaddingTop()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public final android.text.method.TransformationMethod getTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        return $r1;
    }

    public java.lang.CharSequence getTransformed()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        return $r1;
    }

    java.lang.CharSequence getTransformedText(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r2);

        return $r3;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        android.graphics.Typeface $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        return $r2;
    }

    public int getTypefaceStyle()
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1;
        android.text.TextPaint $r2;
        int i0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r1 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.graphics.Typeface: int getStyle()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public final android.content.UndoManager getUndoManager()
    {
        android.widget.TextView r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.widget.TextView;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r1;
    }

    public android.text.style.URLSpan[] getUrls()
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean $z0;
        android.text.style.URLSpan[] $r2, $r5;
        android.text.Spanned $r3;
        int $i0;
        java.lang.Object[] $r4;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        $r3 = (android.text.Spanned) r1;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r4 = interfaceinvoke $r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/style/URLSpan;");

        $r5 = (android.text.style.URLSpan[]) $r4;

        return $r5;

     label1:
        $r2 = newarray (android.text.style.URLSpan)[0];

        return $r2;
    }

    int getVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i1, i2, i3, $i4, $i5, $i6, i7;
        android.text.Layout r1, $r3, r4;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i1 = $i4 & 112;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        r4 = r1;

        if z0 != 0 goto label1;

        r4 = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label1;

        r4 = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        i7 = 0;

        if i1 == 48 goto label3;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r4);

        i3 = virtualinvoke r4.<android.text.Layout: int getHeight()>();

        i7 = 0;

        if i3 >= i2 goto label3;

        if i1 != 80 goto label2;

        i7 = i2 - i3;

        goto label3;

     label2:
        $i5 = i2 - i3;

        i7 = $i5 >> 1;

     label3:
        return i7;
    }

    public android.text.method.WordIterator getWordIterator()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        android.text.method.WordIterator $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.widget.Editor: android.text.method.WordIterator getWordIterator()>();

        return $r2;

     label1:
        return null;
    }

    public boolean handleBackInTextActionModeIfNeeded(android.view.KeyEvent)
    {
        android.widget.TextView r0;
        android.view.KeyEvent r1;
        android.view.ActionMode $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        android.widget.Editor r3;
        android.view.KeyEvent$DispatcherState r4, r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.KeyEvent;

        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label6;

        $r2 = virtualinvoke r3.<android.widget.Editor: android.view.ActionMode getTextActionMode()>();

        if $r2 != null goto label1;

        goto label6;

     label1:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label3;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i2 != 0 goto label3;

        r4 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r4 == null goto label2;

        virtualinvoke r4.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label2:
        return 1;

     label3:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 1 goto label5;

        r5 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r5 == null goto label4;

        virtualinvoke r5.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>(r1);

     label4:
        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z1 != 0 goto label5;

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

        return 1;

     label5:
        return 0;

     label6:
        return 0;
    }

    public boolean handleClick(android.view.textclassifier.TextLinks$TextLinkSpan)
    {
        android.widget.TextView r0;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.CharSequence $r2, $r5, r14;
        android.os.LocaleList $r6;
        android.view.textclassifier.TextClassification$Request$Builder $r7, r18;
        android.view.textclassifier.TextClassification$Request $r8;
        java.util.concurrent.CompletableFuture $r9, $r11;
        java.util.concurrent.TimeUnit $r10;
        android.view.textclassifier.TextLinks$TextLinkSpan r13;
        android.text.Spanned r15;
        android.widget.'-$$Lambda$TextView$jQz3_DIfGrNeNdu_95_wi6UkW4E' r17;
        android.widget._$$Lambda$TextView$DJlzb7VS7J_1890Kto7GAApQDN0 r19;
        java.util.function.Consumer r20;

        r0 := @this: android.widget.TextView;

        r13 := @parameter0: android.view.textclassifier.TextLinks$TextLinkSpan;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r13);

        r14 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r14 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        r15 = (android.text.Spanned) r14;

        i0 = interfaceinvoke r15.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r13);

        i1 = interfaceinvoke r15.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r13);

        if i0 < 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label1;

        if i0 >= i1 goto label1;

        r19 = new android.widget._$$Lambda$TextView$DJlzb7VS7J_1890Kto7GAApQDN0;

        r18 = new android.view.textclassifier.TextClassification$Request$Builder;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke r18.<android.view.textclassifier.TextClassification$Request$Builder: void <init>(java.lang.CharSequence,int,int)>($r5, i0, i1);

        $r6 = virtualinvoke r0.<android.widget.TextView: android.os.LocaleList getTextLocales()>();

        $r7 = virtualinvoke r18.<android.view.textclassifier.TextClassification$Request$Builder: android.view.textclassifier.TextClassification$Request$Builder setDefaultLocales(android.os.LocaleList)>($r6);

        $r8 = virtualinvoke $r7.<android.view.textclassifier.TextClassification$Request$Builder: android.view.textclassifier.TextClassification$Request build()>();

        specialinvoke r19.<android.widget._$$Lambda$TextView$DJlzb7VS7J_1890Kto7GAApQDN0: void <init>(android.widget.TextView,android.view.textclassifier.TextClassification$Request)>(r0, $r8);

        r17 = <android.widget._$$Lambda$TextView$jQz3_DIfGrNeNdu_95_wi6UkW4E: android.widget.'-$$Lambda$TextView$jQz3_DIfGrNeNdu_95_wi6UkW4E' INSTANCE>;

        $r9 = staticinvoke <java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture supplyAsync(java.util.function.Supplier)>(r19);

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r11 = virtualinvoke $r9.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture completeOnTimeout(java.lang.Object,long,java.util.concurrent.TimeUnit)>(null, 1L, $r10);

        r20 = (java.util.function.Consumer) r17;

        virtualinvoke $r11.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAccept(java.util.function.Consumer)>(r20);

        return 1;

     label1:
        return 0;
    }

    void handleTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.widget.Editor r2;
        android.widget.Editor$InputMethodState r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        <android.widget.TextView: long sLastCutCopyOrTextChangedTime> = 0L;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        r3 = r2.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

     label2:
        if r3 == null goto label3;

        $i15 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i15 != 0 goto label4;

     label3:
        virtualinvoke r0.<android.widget.TextView: void updateAfterEdit()>();

     label4:
        if r3 == null goto label7;

        r3.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        $i3 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i3 >= 0 goto label5;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

        $i14 = i0 + i1;

        r3.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i14;

        goto label6;

     label5:
        $i4 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = $i5;

        $i9 = r3.<android.widget.Editor$InputMethodState: int mChangedEnd>;

        $i7 = i0 + i1;

        $i6 = r3.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i8 = $i7 - $i6;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        r3.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i10;

     label6:
        $i12 = r3.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i11 = i2 - i1;

        $i13 = $i12 + $i11;

        r3.<android.widget.Editor$InputMethodState: int mChangedDelta> = $i13;

     label7:
        virtualinvoke r0.<android.widget.TextView: void resetErrorChangedFlag()>();

        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public boolean hasOverlappingRendering()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        android.text.Spannable $r2;
        boolean $z0, $z1, z2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r4 != null goto label3;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if $r2 != null goto label3;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isHorizontalFadingEdgeEnabled()>();

        if $z1 != 0 goto label3;

        $i0 = r0.<android.widget.TextView: int mShadowColor>;

        if $i0 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

        goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    boolean hasPasswordTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        return $z0;
    }

    public boolean hasSelection()
    {
        android.widget.TextView r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 < 0 goto label1;

        if i1 <= 0 goto label1;

        if i0 == i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void hideErrorIfUnchanged()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r3;
        java.lang.CharSequence $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r3.<android.widget.Editor: boolean mErrorWasChanged>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label1:
        return;
    }

    public void hideFloatingToolbar(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void hideFloatingToolbar(int)>(i0);

     label1:
        return;
    }

    void invalidateCursor()
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>(i0, i0, i0);

        return;
    }

    void invalidateCursorPath()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16;
        android.graphics.RectF r1, $r7, $r9, $r10, $r11, $r12;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19;
        boolean $z0;
        android.widget.Editor $r2, $r4;
        android.graphics.drawable.Drawable $r3, $r5;
        android.text.TextPaint $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b12;
        android.graphics.Path $r8;
        java.lang.Throwable $r13;
        android.graphics.Rect r15;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

        goto label11;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i1 = $i2 + $i3;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if $r3 != null goto label10;

        r1 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        entermonitor r1;

     label02:
        $r6 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r6.<android.text.TextPaint: float getStrokeWidth()>();

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f0 = (float) $d1;

     label03:
        f18 = f0;

        $b12 = f0 cmpg 1.0F;

        if $b12 >= 0 goto label04;

        f18 = 1.0F;

     label04:
        f19 = f18 / 2.0F;

     label05:
        $r8 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r7 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r8.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r7, 0);

        $f3 = (float) i0;

        $r9 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f2 = $r9.<android.graphics.RectF: float left>;

        $f4 = $f3 + $f2;

        $f5 = $f4 - f19;

        $d2 = (double) $f5;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i13 = (int) $d3;

        $f7 = (float) i1;

        $r10 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f6 = $r10.<android.graphics.RectF: float top>;

        $f8 = $f7 + $f6;

        $f9 = $f8 - f19;

        $d4 = (double) $f9;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        $i14 = (int) $d5;

        $f11 = (float) i0;

        $r11 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f10 = $r11.<android.graphics.RectF: float right>;

        $f12 = $f11 + $f10;

        $f13 = $f12 + f19;

        $d6 = (double) $f13;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $i15 = (int) $d7;

        $f15 = (float) i1;

        $r12 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f14 = $r12.<android.graphics.RectF: float bottom>;

        $f16 = $f15 + $f14;

        $f17 = $f16 + f19;

        $d8 = (double) $f17;

        $d9 = staticinvoke <java.lang.Math: double ceil(double)>($d8);

        $i16 = (int) $d9;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i13, $i14, $i15, $i16);

        exitmonitor r1;

     label06:
        goto label11;

     label07:
        $r13 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r13;

     label10:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        r15 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i4 = r15.<android.graphics.Rect: int left>;

        $i11 = $i4 + i0;

        $i5 = r15.<android.graphics.Rect: int top>;

        $i10 = $i5 + i1;

        $i6 = r15.<android.graphics.Rect: int right>;

        $i9 = $i6 + i0;

        $i7 = r15.<android.graphics.Rect: int bottom>;

        $i8 = $i7 + i1;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i11, $i10, $i9, $i8);

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r5, $r7, $r9, $r11;
        android.graphics.Rect r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71;
        android.widget.TextView$Drawables r3;
        boolean $z0, z1, z2;
        android.graphics.drawable.Drawable[] $r4, $r6, $r8, $r10;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z1 = 0;

        z2 = 0;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label6;

        r2 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i0 = r0.<android.widget.TextView: int mScrollX>;

        i57 = r0.<android.widget.TextView: int mScrollY>;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        i58 = i0;

        i59 = i57;

        if r3 == null goto label5;

        $r4 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r5 = $r4[0];

        if r1 != $r5 goto label1;

        i60 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i61 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i62 = r0.<android.widget.TextView: int mBottom>;

        i63 = r0.<android.widget.TextView: int mTop>;

        $i49 = r0.<android.widget.TextView: int mPaddingLeft>;

        i58 = i0 + $i49;

        $i50 = i62 - i63;

        $i51 = $i50 - i61;

        $i53 = $i51 - i60;

        $i52 = r3.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i54 = $i53 - $i52;

        $i55 = $i54 / 2;

        $i56 = $i55 + i60;

        i59 = i57 + $i56;

        z1 = 1;

        goto label5;

     label1:
        $r6 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r7 = $r6[2];

        if r1 != $r7 goto label2;

        i64 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i65 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i66 = r0.<android.widget.TextView: int mBottom>;

        i67 = r0.<android.widget.TextView: int mTop>;

        $i36 = r0.<android.widget.TextView: int mRight>;

        $i35 = r0.<android.widget.TextView: int mLeft>;

        $i38 = $i36 - $i35;

        $i37 = r0.<android.widget.TextView: int mPaddingRight>;

        $i40 = $i38 - $i37;

        $i39 = r3.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i41 = $i40 - $i39;

        i58 = i0 + $i41;

        $i42 = i66 - i67;

        $i43 = $i42 - i65;

        $i45 = $i43 - i64;

        $i44 = r3.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i46 = $i45 - $i44;

        $i47 = $i46 / 2;

        $i48 = $i47 + i64;

        i59 = i57 + $i48;

        z1 = 1;

        goto label5;

     label2:
        $r8 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r9 = $r8[1];

        if r1 != $r9 goto label4;

        i68 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i69 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i26 = r0.<android.widget.TextView: int mRight>;

        $i25 = r0.<android.widget.TextView: int mLeft>;

        $i27 = $i26 - $i25;

        $i28 = $i27 - i69;

        $i30 = $i28 - i68;

        $i29 = r3.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i31 = $i30 - $i29;

        $i32 = $i31 / 2;

        $i33 = $i32 + i68;

        i58 = i0 + $i33;

        $i34 = r0.<android.widget.TextView: int mPaddingTop>;

        i59 = i57 + $i34;

        z1 = 1;

     label3:
        goto label5;

     label4:
        z1 = 0;

        i58 = i0;

        i59 = i57;

        $r10 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r11 = $r10[3];

        if r1 != $r11 goto label3;

        i70 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i71 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i10 = r0.<android.widget.TextView: int mRight>;

        $i9 = r0.<android.widget.TextView: int mLeft>;

        $i11 = $i10 - $i9;

        $i12 = $i11 - i71;

        $i14 = $i12 - i70;

        $i13 = r3.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i15 = $i14 - $i13;

        $i16 = $i15 / 2;

        $i17 = $i16 + i70;

        i58 = i0 + $i17;

        $i19 = r0.<android.widget.TextView: int mBottom>;

        $i18 = r0.<android.widget.TextView: int mTop>;

        $i21 = $i19 - $i18;

        $i20 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i23 = $i21 - $i20;

        $i22 = r3.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i24 = $i23 - $i22;

        i59 = i57 + $i24;

        z1 = 1;

     label5:
        z2 = z1;

        if z1 == 0 goto label6;

        $i1 = r2.<android.graphics.Rect: int left>;

        $i8 = $i1 + i58;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i7 = $i2 + i59;

        $i3 = r2.<android.graphics.Rect: int right>;

        $i6 = $i3 + i58;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i5 = $i4 + i59;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i8, $i7, $i6, $i5);

        z2 = z1;

     label6:
        if z2 != 0 goto label7;

        specialinvoke r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label7:
        return;
    }

    void invalidateRegion(int, int, boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i17, i18, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28;
        android.text.Layout $r1, $r2, $r3, $r4, $r5, $r9, r10;
        float $f0, $f1;
        double $d0, $d1;
        android.graphics.drawable.Drawable $r6, $r8;
        android.widget.Editor $r7, r11;
        android.graphics.Rect r12;

        r0 := @this: android.widget.TextView;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        z0 := @parameter2: boolean;

        r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r10 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label8;

     label1:
        i0 = virtualinvoke r10.<android.text.Layout: int getLineForOffset(int)>(i7);

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i9 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>(i0);

        i10 = i9;

        if i0 <= 0 goto label2;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i5 = i0 - 1;

        $i6 = virtualinvoke $r9.<android.text.Layout: int getLineDescent(int)>($i5);

        i10 = i9 - $i6;

     label2:
        if i7 != i8 goto label3;

        i11 = i0;

        goto label4;

     label3:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i11 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>(i8);

     label4:
        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i12 = virtualinvoke $r3.<android.text.Layout: int getLineBottom(int)>(i11);

        i13 = i10;

        i14 = i12;

        if z0 == 0 goto label5;

        r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        i13 = i10;

        i14 = i12;

        if r11 == null goto label5;

        i13 = i10;

        i14 = i12;

        $r6 = r11.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        if $r6 == null goto label5;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.graphics.drawable.Drawable mDrawableForCursor>;

        r12 = virtualinvoke $r8.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i3 = r12.<android.graphics.Rect: int top>;

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i3);

        $i4 = r12.<android.graphics.Rect: int bottom>;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i4);

     label5:
        i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i16 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i17 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i18 = $i16 + $i17;

        if i0 != i11 goto label6;

        if z0 != 0 goto label6;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r4.<android.text.Layout: float getPrimaryHorizontal(int)>(i7);

        i19 = (int) $f0;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r5.<android.text.Layout: float getPrimaryHorizontal(int)>(i8);

        $d0 = (double) $f1;

        $d1 = $d0 + 1.0;

        i20 = (int) $d1;

        i21 = i19 + i15;

        i22 = i20 + i15;

        goto label7;

     label6:
        i21 = i15;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i22 = $i1 - $i2;

     label7:
        $i23 = r0.<android.widget.TextView: int mScrollX>;

        $i24 = $i23 + i21;

        $i25 = i18 + i13;

        $i26 = r0.<android.widget.TextView: int mScrollX>;

        $i27 = $i26 + i22;

        $i28 = i18 + i14;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i24, $i25, $i27, $i28);

     label8:
        return;
    }

    public boolean isAccessibilitySelectionExtendable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 1;
    }

    public boolean isAllCaps()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>();

        if r1 == null goto label1;

        $z0 = r1 instanceof android.text.method.AllCapsTransformationMethod;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isAnyPasswordInputType()
    {
        android.widget.TextView r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>(i0);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isCursorVisible()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = r1.<android.widget.Editor: boolean mCursorVisible>;

     label2:
        return z0;
    }

    boolean isDeviceProvisioned()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0, i1, $i3;
        boolean z0;
        byte b2;

        r0 := @this: android.widget.TextView;

        i1 = r0.<android.widget.TextView: int mDeviceProvisionedState>;

        z0 = 1;

        if i1 != 0 goto label3;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "device_provisioned", 0);

        if $i0 == 0 goto label1;

        b2 = 2;

        goto label2;

     label1:
        b2 = 1;

     label2:
        r0.<android.widget.TextView: int mDeviceProvisionedState> = b2;

     label3:
        $i3 = r0.<android.widget.TextView: int mDeviceProvisionedState>;

        if $i3 != 2 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        return z0;
    }

    public boolean isElegantTextHeight()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $z0 = virtualinvoke $r1.<android.text.TextPaint: boolean isElegantTextHeight()>();

        return $z0;
    }

    public boolean isFallbackLineSpacing()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        return $z0;
    }

    boolean isFromPrimePointer(android.view.MotionEvent, boolean)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        boolean z0, $z2, z3;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

        z3 = 1;

        i0 = r0.<android.widget.TextView: int mPrimePointerId>;

        if i0 != -1 goto label1;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.TextView: int mPrimePointerId> = $i3;

        r0.<android.widget.TextView: boolean mIsPrimePointerFromHandleView> = z0;

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        if i0 == $i1 goto label2;

        z3 = 0;

        $z2 = r0.<android.widget.TextView: boolean mIsPrimePointerFromHandleView>;

        if $z2 == 0 goto label2;

        z3 = 0;

        if z0 == 0 goto label2;

        z3 = 1;

     label2:
        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i4 == 1 goto label3;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i2 != 3 goto label4;

     label3:
        r0.<android.widget.TextView: int mPrimePointerId> = -1;

     label4:
        return z3;
    }

    public final boolean isHorizontallyScrollable()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        return $z0;
    }

    boolean isInBatchEditMode()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, r2;
        boolean $z0, z1;
        int $i0;
        android.widget.Editor$InputMethodState r3;

        r0 := @this: android.widget.TextView;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z1 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        r3 = r2.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r3 == null goto label3;

        $i0 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i0 <= 0 goto label2;

        z1 = 1;

     label2:
        return z1;

     label3:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r1.<android.widget.Editor: boolean mInBatchEditControllers>;

        return $z0;
    }

    public boolean isInExtractedMode()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    public boolean isInputMethodTarget()
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean $z0, z1;

        r0 := @this: android.widget.TextView;

        r1 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.TextView r0;
        float $f0;
        byte $b0;
        android.widget.TextView$Drawables $r1;
        boolean z0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isPositionVisible(float, float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        float[] r1, r2;
        byte $b0, $b1, $b3, $b5;
        int $i2, $i4, $i6, $i7, $i8, $i9;
        android.graphics.Matrix $r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5;
        android.view.View r6;
        android.view.ViewParent r7;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = <android.widget.TextView: float[] TEMP_POSITION>;

        entermonitor r1;

     label01:
        r2 = <android.widget.TextView: float[] TEMP_POSITION>;

     label02:
        r2[0] = f0;

        r2[1] = f1;

        r6 = r0;

     label03:
        if r6 == null goto label15;

        if r6 == r0 goto label05;

     label04:
        $f14 = r2[0];

        $i8 = virtualinvoke r6.<android.view.View: int getScrollX()>();

        $f15 = (float) $i8;

        $f16 = $f14 - $f15;

        r2[0] = $f16;

        $f17 = r2[1];

        $i9 = virtualinvoke r6.<android.view.View: int getScrollY()>();

        $f18 = (float) $i9;

        $f19 = $f17 - $f18;

        r2[1] = $f19;

     label05:
        $f2 = r2[0];

        $b0 = $f2 cmpg 0.0F;

        if $b0 < 0 goto label13;

        $f3 = r2[1];

        $b1 = $f3 cmpg 0.0F;

        if $b1 < 0 goto label13;

     label06:
        $f4 = r2[0];

        $i2 = virtualinvoke r6.<android.view.View: int getWidth()>();

        $f5 = (float) $i2;

        $b3 = $f4 cmpl $f5;

        if $b3 > 0 goto label13;

        $f6 = r2[1];

        $i4 = virtualinvoke r6.<android.view.View: int getHeight()>();

        $f7 = (float) $i4;

        $b5 = $f6 cmpl $f7;

        if $b5 <= 0 goto label08;

     label07:
        goto label13;

     label08:
        $r3 = virtualinvoke r6.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke $r3.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label09;

        $r4 = virtualinvoke r6.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r4.<android.graphics.Matrix: void mapPoints(float[])>(r2);

     label09:
        $f8 = r2[0];

        $i6 = virtualinvoke r6.<android.view.View: int getLeft()>();

        $f9 = (float) $i6;

        $f10 = $f8 + $f9;

        r2[0] = $f10;

        $f11 = r2[1];

        $i7 = virtualinvoke r6.<android.view.View: int getTop()>();

        $f12 = (float) $i7;

        $f13 = $f11 + $f12;

        r2[1] = $f13;

        r7 = virtualinvoke r6.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = r7 instanceof android.view.View;

        if $z1 == 0 goto label11;

        r6 = (android.view.View) r7;

     label10:
        goto label12;

     label11:
        r6 = null;

     label12:
        goto label03;

     label13:
        exitmonitor r1;

     label14:
        return 0;

     label15:
        exitmonitor r1;

     label16:
        return 1;

     label17:
        $r5 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public boolean isSingleLine()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        return $z0;
    }

    public boolean isSuggestionsEnabled()
    {
        android.widget.TextView r0;
        android.widget.Editor r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z0 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = r1.<android.widget.Editor: int mInputType>;

        $i2 = $i1 & 15;

        if $i2 == 1 goto label2;

        return 0;

     label2:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r2.<android.widget.Editor: int mInputType>;

        $i4 = $i3 & 524288;

        if $i4 <= 0 goto label3;

        return 0;

     label3:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i5 = $r3.<android.widget.Editor: int mInputType>;

        i0 = $i5 & 4080;

        if i0 == 0 goto label4;

        if i0 == 48 goto label4;

        if i0 == 80 goto label4;

        if i0 == 64 goto label4;

        if i0 != 160 goto label5;

     label4:
        z0 = 1;

     label5:
        return z0;
    }

    boolean isTextEditable()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public boolean isTextSelectable()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 != null goto label1;

        z0 = 0;

        goto label2;

     label1:
        z0 = r1.<android.widget.Editor: boolean mTextIsSelectable>;

     label2:
        return z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable[] r1;
        int i0, i1;
        android.widget.TextView$Drawables r2;
        android.graphics.drawable.Drawable r3;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label3;

        r1 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.view.textclassifier.TextClassification lambda$handleClick$0$TextView(android.view.textclassifier.TextClassification$Request)
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassification$Request r1;
        android.view.textclassifier.TextClassifier $r2;
        android.view.textclassifier.TextClassification $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.textclassifier.TextClassification$Request;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassificationSession()>();

        $r3 = interfaceinvoke $r2.<android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassification classifyText(android.view.textclassifier.TextClassification$Request)>(r1);

        return $r3;
    }

    public int length()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public void makeNewLayout(int, int, android.text.BoringLayout$Metrics, android.text.BoringLayout$Metrics, int, boolean)
    {
        android.widget.TextView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i21;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12, z13, z14;
        android.text.Layout$Alignment r1, $r51, $r52;
        android.text.TextUtils$TruncateAt $r2, $r3, $r5, $r21, $r24, $r28, $r44, $r45, $r55, $r56, r57, $r58, $r59, r61, $r70, $r71;
        android.text.Layout $r4, $r8, $r35, $r46, $r49, $r50, $r66;
        java.lang.CharSequence $r6, $r26, $r30, $r33, $r38, $r43, r67;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.view.ViewGroup$LayoutParams $r7;
        android.text.BoringLayout$Metrics $r9, $r40, r53, r54;
        android.text.TextPaint $r10, $r25, $r29, $r32, $r37, $r42;
        android.text.StaticLayout$Builder $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r22, r68, r69;
        android.text.TextDirectionHeuristic $r13, $r41, $r47, $r60;
        android.text.StaticLayout $r20;
        android.text.BoringLayout $r27, $r31, $r34, $r36, $r39, r63, r65;
        android.text.method.KeyListener $r48;
        android.widget.Editor r72;

        r0 := @this: android.widget.TextView;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        r53 := @parameter2: android.text.BoringLayout$Metrics;

        r54 := @parameter3: android.text.BoringLayout$Metrics;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

        $i2 = r0.<android.widget.TextView: int mMaximum>;

        r0.<android.widget.TextView: int mOldMaximum> = $i2;

        $i3 = r0.<android.widget.TextView: int mMaxMode>;

        r0.<android.widget.TextView: int mOldMaxMode> = $i3;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if i15 >= 0 goto label01;

        i15 = 0;

        goto label01;

     label01:
        if i16 >= 0 goto label02;

        i16 = 0;

        goto label02;

     label02:
        r1 = specialinvoke r0.<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()>();

        $z1 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z1 == 0 goto label04;

        $r50 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r50 == null goto label04;

        $r51 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r1 == $r51 goto label03;

        $r52 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r1 != $r52 goto label04;

     label03:
        z9 = 1;

        goto label05;

     label04:
        z9 = 0;

     label05:
        i17 = 0;

        if z9 == 0 goto label06;

        $r49 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i17 = virtualinvoke $r49.<android.text.Layout: int getParagraphDirection(int)>(0);

     label06:
        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == null goto label07;

        $r48 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r48 != null goto label07;

        z10 = 1;

        goto label08;

     label07:
        z10 = 0;

     label08:
        $r55 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r56 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r55 != $r56 goto label09;

        $i14 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i14 == 0 goto label09;

        z11 = 1;

        goto label10;

     label09:
        z11 = 0;

     label10:
        r57 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r58 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r59 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r58 != $r59 goto label11;

        $i13 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i13 != 1 goto label11;

        r57 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        goto label11;

     label11:
        $r60 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r60 != null goto label12;

        $r47 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r47;

     label12:
        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r57 != $r3 goto label13;

        z12 = 1;

        goto label14;

     label13:
        z12 = 0;

     label14:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i15, r53, i0, r1, z10, r57, z12);

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r4;

        if z11 == 0 goto label19;

        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r57 != $r44 goto label15;

        r61 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        goto label16;

     label15:
        r61 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

     label16:
        $r45 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r57 == $r45 goto label17;

        z13 = 1;

        goto label18;

     label17:
        z13 = 0;

     label18:
        $r46 = virtualinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i15, r53, i0, r1, z10, r61, z13);

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r46;

        goto label19;

     label19:
        i18 = i17;

        $r5 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r5 == null goto label20;

        z14 = 1;

        goto label21;

     label20:
        z14 = 0;

     label21:
        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label36;

        if z14 == 0 goto label22;

        i16 = i15;

     label22:
        $r9 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r54 != $r9 goto label24;

        $r43 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r42 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r41 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r40 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r54 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r43, $r42, $r41, $r40);

        if r54 == null goto label23;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r54;

     label23:
        goto label24;

     label24:
        if r54 == null goto label31;

        $i10 = r54.<android.text.BoringLayout$Metrics: int width>;

        if $i10 > i16 goto label29;

        if z14 == 0 goto label26;

        $i12 = r54.<android.text.BoringLayout$Metrics: int width>;

        if $i12 > i0 goto label25;

        goto label26;

     label25:
        goto label29;

     label26:
        r63 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if r63 == null goto label27;

        $r38 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r37 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f10 = r0.<android.widget.TextView: float mSpacingMult>;

        $f9 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r39 = virtualinvoke r63.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r38, $r37, i16, r1, $f10, $f9, r54, $z8);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r39;

        goto label28;

     label27:
        $r33 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r32 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f8 = r0.<android.widget.TextView: float mSpacingMult>;

        $f7 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r34 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r33, $r32, i16, r1, $f8, $f7, r54, $z7);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r34;

     label28:
        $r35 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r36 = (android.text.BoringLayout) $r35;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r36;

        goto label31;

     label29:
        if z14 == 0 goto label31;

        $i11 = r54.<android.text.BoringLayout$Metrics: int width>;

        if $i11 > i16 goto label31;

        r65 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if r65 == null goto label30;

        $r30 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r29 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f6 = r0.<android.widget.TextView: float mSpacingMult>;

        $f5 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r28 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r31 = virtualinvoke r65.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r30, $r29, i16, r1, $f6, $f5, r54, $z6, $r28, i0);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r31;

        goto label31;

     label30:
        $r26 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r25 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f4 = r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z5 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r24 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r27 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r26, $r25, i16, r1, $f4, $f3, r54, $z5, $r24, i0);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r27;

        goto label31;

     label31:
        $r66 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r66 != null goto label35;

        r67 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $i5 = interfaceinvoke r67.<java.lang.CharSequence: int length()>();

        $r10 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r11 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r67, 0, $i5, $r10, i16);

        $r12 = virtualinvoke $r11.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>(r1);

        $r13 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r14 = virtualinvoke $r12.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r13);

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f1 = r0.<android.widget.TextView: float mSpacingMult>;

        $r15 = virtualinvoke $r14.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f2, $f1);

        $z3 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r16 = virtualinvoke $r15.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>($z3);

        $z4 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        $r17 = virtualinvoke $r16.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z4);

        $i6 = r0.<android.widget.TextView: int mBreakStrategy>;

        $r18 = virtualinvoke $r17.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>($i6);

        $i7 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        $r19 = virtualinvoke $r18.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>($i7);

        $i8 = r0.<android.widget.TextView: int mJustificationMode>;

        r68 = virtualinvoke $r19.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setJustificationMode(int)>($i8);

        $i9 = r0.<android.widget.TextView: int mMaxMode>;

        if $i9 != 1 goto label32;

        i19 = r0.<android.widget.TextView: int mMaximum>;

        goto label33;

     label32:
        i19 = 2147483647;

     label33:
        r69 = virtualinvoke r68.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(i19);

        if z14 == 0 goto label34;

        $r21 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r22 = virtualinvoke r69.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>($r21);

        virtualinvoke $r22.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>(i0);

        goto label34;

     label34:
        $r20 = virtualinvoke r69.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r20;

        goto label35;

     label35:
        goto label36;

     label36:
        if z0 != 0 goto label38;

        if z9 == 0 goto label37;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r8.<android.text.Layout: int getParagraphDirection(int)>(0);

        if i18 == $i4 goto label39;

        goto label38;

     label37:
        goto label39;

     label38:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label39:
        $r70 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r71 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r70 != $r71 goto label41;

        $f0 = (float) i0;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f0);

        if $z2 != 0 goto label41;

        $r7 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        i21 = $r7.<android.view.ViewGroup$LayoutParams: int height>;

        if i21 == -2 goto label40;

        if i21 == -1 goto label40;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label41;

     label40:
        r0.<android.widget.TextView: boolean mRestartMarquee> = 1;

     label41:
        r72 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r72 == null goto label42;

        virtualinvoke r72.<android.widget.Editor: void prepareCursorControllers()>();

     label42:
        return;
    }

    protected android.text.Layout makeSingleLayout(int, android.text.BoringLayout$Metrics, int, android.text.Layout$Alignment, boolean, android.text.TextUtils$TruncateAt, boolean)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        android.text.Layout$Alignment r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.text.TextUtils$TruncateAt r2, r46;
        android.text.BoringLayout$Metrics $r3, $r24, r44;
        android.text.TextPaint $r4, $r15, $r17, $r19, $r22, $r26, $r28;
        android.text.StaticLayout$Builder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r52, r53;
        android.text.TextDirectionHeuristic $r7, $r25, $r34;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.CharSequence $r16, $r18, $r20, $r23, $r27, $r29, $r31, r51;
        android.text.BoringLayout $r21, r48, r49;
        android.text.DynamicLayout$Builder $r30, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, r45;
        android.text.method.KeyListener $r41;
        android.text.Layout r47, r50;

        r0 := @this: android.widget.TextView;

        i12 := @parameter0: int;

        r44 := @parameter1: android.text.BoringLayout$Metrics;

        i0 := @parameter2: int;

        r1 := @parameter3: android.text.Layout$Alignment;

        z0 := @parameter4: boolean;

        r2 := @parameter5: android.text.TextUtils$TruncateAt;

        z1 := @parameter6: boolean;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean useDynamicLayout()>();

        if $z2 == 0 goto label03;

        $r29 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r28 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r30 = staticinvoke <android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder obtain(java.lang.CharSequence,android.text.TextPaint,int)>($r29, $r28, i12);

        $r31 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r32 = virtualinvoke $r30.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setDisplayText(java.lang.CharSequence)>($r31);

        $r33 = virtualinvoke $r32.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setAlignment(android.text.Layout$Alignment)>(r1);

        $r34 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r35 = virtualinvoke $r33.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r34);

        $f11 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f10 = r0.<android.widget.TextView: float mSpacingMult>;

        $r36 = virtualinvoke $r35.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setLineSpacing(float,float)>($f11, $f10);

        $z9 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r37 = virtualinvoke $r36.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setIncludePad(boolean)>($z9);

        $z10 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        $r38 = virtualinvoke $r37.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z10);

        $i9 = r0.<android.widget.TextView: int mBreakStrategy>;

        $r39 = virtualinvoke $r38.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setBreakStrategy(int)>($i9);

        $i10 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        $r40 = virtualinvoke $r39.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setHyphenationFrequency(int)>($i10);

        $i11 = r0.<android.widget.TextView: int mJustificationMode>;

        r45 = virtualinvoke $r40.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setJustificationMode(int)>($i11);

        $r41 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r41 != null goto label01;

        r46 = r2;

        goto label02;

     label01:
        r46 = null;

     label02:
        $r42 = virtualinvoke r45.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(r46);

        $r43 = virtualinvoke $r42.<android.text.DynamicLayout$Builder: android.text.DynamicLayout$Builder setEllipsizedWidth(int)>(i0);

        r47 = virtualinvoke $r43.<android.text.DynamicLayout$Builder: android.text.DynamicLayout build()>();

        goto label14;

     label03:
        $r3 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r44 != $r3 goto label05;

        $r27 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r26 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r25 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r24 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r44 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r27, $r26, $r25, $r24);

        if r44 == null goto label04;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r44;

     label04:
        goto label05;

     label05:
        if r44 == null goto label13;

        $i6 = r44.<android.text.BoringLayout$Metrics: int width>;

        if $i6 > i12 goto label10;

        if r2 == null goto label06;

        $i8 = r44.<android.text.BoringLayout$Metrics: int width>;

        if $i8 > i0 goto label10;

     label06:
        if z1 == 0 goto label07;

        r48 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if r48 == null goto label07;

        $r23 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r22 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f9 = r0.<android.widget.TextView: float mSpacingMult>;

        $f8 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        r47 = virtualinvoke r48.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r23, $r22, i12, r1, $f9, $f8, r44, $z8);

        goto label08;

     label07:
        $r20 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r19 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f7 = r0.<android.widget.TextView: float mSpacingMult>;

        $f6 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        r47 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r20, $r19, i12, r1, $f7, $f6, r44, $z7);

     label08:
        if z1 == 0 goto label09;

        $r21 = (android.text.BoringLayout) r47;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r21;

     label09:
        goto label14;

     label10:
        if z0 == 0 goto label12;

        $i7 = r44.<android.text.BoringLayout$Metrics: int width>;

        if $i7 > i12 goto label12;

        if z1 == 0 goto label11;

        r49 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if r49 == null goto label11;

        $r18 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r17 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f5 = r0.<android.widget.TextView: float mSpacingMult>;

        $f4 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        r47 = virtualinvoke r49.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r18, $r17, i12, r1, $f5, $f4, r44, $z6, r2, i0);

        goto label14;

     label11:
        $r16 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r15 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f3 = r0.<android.widget.TextView: float mSpacingMult>;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z5 = r0.<android.widget.TextView: boolean mIncludePad>;

        r47 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r16, $r15, i12, r1, $f3, $f2, r44, $z5, r2, i0);

        goto label14;

     label12:
        r47 = null;

        goto label14;

     label13:
        r47 = null;

     label14:
        r50 = r47;

        if r47 != null goto label18;

        r51 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i1 = interfaceinvoke r51.<java.lang.CharSequence: int length()>();

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r5 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>(r51, 0, $i1, $r4, i12);

        $r6 = virtualinvoke $r5.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>(r1);

        $r7 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r8 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r7);

        $f1 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        $r9 = virtualinvoke $r8.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f1, $f0);

        $z3 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r10 = virtualinvoke $r9.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>($z3);

        $z4 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        $r11 = virtualinvoke $r10.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>($z4);

        $i2 = r0.<android.widget.TextView: int mBreakStrategy>;

        $r12 = virtualinvoke $r11.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>($i2);

        $i3 = r0.<android.widget.TextView: int mHyphenationFrequency>;

        $r13 = virtualinvoke $r12.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>($i3);

        $i4 = r0.<android.widget.TextView: int mJustificationMode>;

        r52 = virtualinvoke $r13.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setJustificationMode(int)>($i4);

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 != 1 goto label15;

        i13 = r0.<android.widget.TextView: int mMaximum>;

        goto label16;

     label15:
        i13 = 2147483647;

     label16:
        r53 = virtualinvoke r52.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(i13);

        if z0 == 0 goto label17;

        $r14 = virtualinvoke r53.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(r2);

        virtualinvoke $r14.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>(i0);

     label17:
        r50 = virtualinvoke r53.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

     label18:
        return r50;
    }

    public boolean moveCursorToVisibleOffset()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, $i34, $i35, $i36, $i37, i38, i39;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.text.Layout $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        android.text.Spannable $r5;
        float $f0, $f1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 == $i2 goto label02;

        return 0;

     label02:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i22 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i23 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>(i22);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i3 = i22 + 1;

        i24 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>($i3);

        $i5 = r0.<android.widget.TextView: int mBottom>;

        $i4 = r0.<android.widget.TextView: int mTop>;

        $i6 = $i5 - $i4;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i25 = $i8 - $i9;

        $i10 = i24 - i23;

        i26 = $i10 / 2;

        i27 = i26;

        $i11 = i25 / 4;

        if i26 <= $i11 goto label03;

        i27 = i25 / 4;

     label03:
        i28 = r0.<android.widget.TextView: int mScrollY>;

        $i12 = i28 + i27;

        if i23 >= $i12 goto label04;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i20 = i28 + i27;

        $i19 = i24 - i23;

        $i21 = $i20 + $i19;

        i22 = virtualinvoke $r7.<android.text.Layout: int getLineForVertical(int)>($i21);

        goto label05;

     label04:
        $i13 = i25 + i28;

        $i14 = $i13 - i27;

        if i24 <= $i14 goto label05;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i15 = i25 + i28;

        $i17 = $i15 - i27;

        $i16 = i24 - i23;

        $i18 = $i17 - $i16;

        i22 = virtualinvoke $r6.<android.text.Layout: int getLineForVertical(int)>($i18);

     label05:
        i29 = r0.<android.widget.TextView: int mRight>;

        i30 = r0.<android.widget.TextView: int mLeft>;

        i31 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i32 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i1 = r0.<android.widget.TextView: int mScrollX>;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = (float) i1;

        i33 = virtualinvoke $r8.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i22, $f0);

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i34 = i29 - i30;

        $i35 = $i34 - i31;

        $i36 = $i35 - i32;

        $i37 = $i36 + i1;

        $f1 = (float) $i37;

        i38 = virtualinvoke $r9.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i22, $f1);

        if i33 >= i38 goto label06;

        i39 = i33;

        goto label07;

     label06:
        i39 = i38;

     label07:
        if i33 <= i38 goto label08;

        goto label09;

     label08:
        i33 = i38;

     label09:
        if i0 >= i39 goto label10;

        goto label11;

     label10:
        i39 = i0;

        if i0 <= i33 goto label11;

        i39 = i33;

     label11:
        if i39 == i0 goto label12;

        $r5 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r5, i39);

        return 1;

     label12:
        return 0;
    }

    public void nullLayouts()
    {
        android.widget.TextView r0;
        boolean $z0, $z1;
        android.text.BoringLayout $r1, $r2, $r3, $r4;
        android.text.Layout r5, r6;
        android.widget.Editor r7;

        r0 := @this: android.widget.TextView;

        r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z0 = r5 instanceof android.text.BoringLayout;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r3 != null goto label1;

        $r4 = (android.text.BoringLayout) r5;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r4;

     label1:
        r6 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $z1 = r6 instanceof android.text.BoringLayout;

        if $z1 == 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r1 != null goto label2;

        $r2 = (android.text.BoringLayout) r6;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r2;

     label2:
        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = null;

        r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r7 == null goto label3;

        virtualinvoke r7.<android.widget.Editor: void prepareCursorControllers()>();

     label3:
        return;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.widget.Toast $r3;
        android.content.Intent r4;
        java.lang.CharSequence r5;
        android.widget.Editor r6;
        android.text.Spannable r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: android.content.Intent;

        if i0 != 100 goto label3;

        if i1 != -1 goto label2;

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>("android.intent.extra.PROCESS_TEXT");

        if r5 == null goto label3;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void replaceSelectionWithText(java.lang.CharSequence)>(r5);

        r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r6 == null goto label3;

        virtualinvoke r6.<android.widget.Editor: void refreshTextActionMode()>();

        goto label3;

     label1:
        $i3 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r1, $r2, 1);

        virtualinvoke $r3.<android.widget.Toast: void show()>();

        goto label3;

     label2:
        r7 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if r7 == null goto label3;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r7, $i2);

     label3:
        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0;
        android.view.ViewTreeObserver $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void onAttachedToWindow()>();

     label1:
        $z0 = r0.<android.widget.TextView: boolean mPreDrawListenerDetached>;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 0;

     label2:
        return;
    }

    public void onBeginBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    public boolean onCheckIsTextEditor()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $i0 = r1.<android.widget.Editor: int mInputType>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onCommitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CompletionInfo r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return;
    }

    public void onCommitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.widget.Editor r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>(r1);

     label1:
        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.TextView r0;
        android.content.res.Configuration r1;
        boolean $z0;
        android.text.TextPaint $r2;
        android.os.LocaleList $r3;
        android.text.Layout $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = r0.<android.widget.TextView: boolean mLocalesChanged>;

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = staticinvoke <android.os.LocaleList: android.os.LocaleList getDefault()>();

        virtualinvoke $r2.<android.text.TextPaint: void setTextLocales(android.os.LocaleList)>($r3);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    protected void onCreateContextMenu(android.view.ContextMenu)
    {
        android.widget.TextView r0;
        android.view.ContextMenu r1;
        android.widget.Editor r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ContextMenu;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.Editor: void onCreateContextMenu(android.view.ContextMenu)>(r1);

     label1:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        int[] r1, $r2, r4;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        i7 := @parameter0: int;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label1;

        r4 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(i7);

        goto label2;

     label1:
        $i1 = i7 + 1;

        r4 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>($i1);

        $r2 = <android.widget.TextView: int[] MULTILINE_STATE_SET>;

        staticinvoke <android.widget.TextView: int[] mergeDrawableStates(int[],int[])>(r4, $r2);

     label2:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z1 == 0 goto label5;

        i0 = lengthof r4;

        i8 = 0;

     label3:
        if i8 >= i0 goto label5;

        $i2 = r4[i8];

        if $i2 != 16842919 goto label4;

        $i3 = i0 - 1;

        r1 = newarray (int)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r1, 0, i8);

        $i6 = i8 + 1;

        $i4 = i0 - i8;

        $i5 = $i4 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i6, r1, i8, $i5);

        return r1;

     label4:
        i8 = i8 + 1;

        goto label3;

     label5:
        return r4;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.EditorInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.Editor $r3, $r4, $r13, $r15, $r18, $r21, $r23, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.widget.Editor$InputContentType $r5, $r14, $r16, $r19, $r22, $r24, $r27;
        android.view.View $r6, $r7;
        java.lang.CharSequence $r8, $r10, $r12, $r20;
        android.os.UserHandle $r9;
        com.android.internal.widget.EditableInputConnection $r11;
        java.lang.String $r17;
        android.os.Bundle $r25;
        android.os.LocaleList $r28;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z0 == 0 goto label9;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z1 == 0 goto label9;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputMethodStateIfNeeded()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        r1.<android.view.inputmethod.EditorInfo: int inputType> = $i0;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r5 == null goto label1;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r13.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i21 = $r14.<android.widget.Editor$InputContentType: int imeOptions>;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i21;

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r15.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r17 = $r16.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions> = $r17;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r18.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r20 = $r19.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel> = $r20;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r21.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i22 = $r22.<android.widget.Editor$InputContentType: int imeActionId>;

        r1.<android.view.inputmethod.EditorInfo: int actionId> = $i22;

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r24 = $r23.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r25 = $r24.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        r1.<android.view.inputmethod.EditorInfo: android.os.Bundle extras> = $r25;

        $r26 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r27 = $r26.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r28 = $r27.<android.widget.Editor$InputContentType: android.os.LocaleList imeHintLocales>;

        r1.<android.view.inputmethod.EditorInfo: android.os.LocaleList hintLocales> = $r28;

        goto label2;

     label1:
        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 0;

        r1.<android.view.inputmethod.EditorInfo: android.os.LocaleList hintLocales> = null;

     label2:
        $r6 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if $r6 == null goto label3;

        $i19 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i20 = $i19 | 134217728;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i20;

     label3:
        $r7 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(33);

        if $r7 == null goto label4;

        $i17 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i18 = $i17 | 67108864;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i18;

     label4:
        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 & 255;

        if $i2 != 0 goto label7;

        $i9 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i10 = $i9 & 134217728;

        if $i10 == 0 goto label5;

        $i15 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i16 = $i15 | 5;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i16;

        goto label6;

     label5:
        $i11 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i12 = $i11 | 6;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i12;

     label6:
        $z3 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z3 != 0 goto label7;

        $i13 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i14 = $i13 | 1073741824;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i14;

     label7:
        $i23 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $z4 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>($i23);

        if $z4 == 0 goto label8;

        $i7 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i8 = $i7 | 1073741824;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i8;

     label8:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText> = $r8;

        $r9 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        r1.<android.view.inputmethod.EditorInfo: android.os.UserHandle targetInputMethodUser> = $r9;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r10 instanceof android.text.Editable;

        if $z2 == 0 goto label9;

        $r11 = new com.android.internal.widget.EditableInputConnection;

        specialinvoke $r11.<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>(r0);

        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelStart> = $i3;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelEnd> = $i4;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $i6 = interfaceinvoke $r11.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i5);

        r1.<android.view.inputmethod.EditorInfo: int initialCapsMode> = $i6;

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.view.inputmethod.EditorInfo: void setInitialSurroundingText(java.lang.CharSequence)>($r12);

        return $r11;

     label9:
        return null;
    }

    protected void onDetachedFromWindowInternal()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0;
        android.view.ViewTreeObserver $r2;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 1;

     label1:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.widget.Editor: void onDetachedFromWindow()>();

     label2:
        specialinvoke r0.<android.view.View: void onDetachedFromWindowInternal()>();

        return;
    }

    public boolean onDragEvent(android.view.DragEvent)
    {
        android.widget.TextView r0;
        android.widget.Editor r1, r5;
        boolean $z0, $z1, z3;
        java.lang.CharSequence $r2;
        float $f0, $f1;
        android.text.Spannable $r3;
        android.view.DragEvent r4;
        int i0, i1;

        r0 := @this: android.widget.TextView;

        r4 := @parameter0: android.view.DragEvent;

        i0 = virtualinvoke r4.<android.view.DragEvent: int getAction()>();

        z3 = 1;

        if i0 == 1 goto label6;

        if i0 == 2 goto label4;

        if i0 == 3 goto label2;

        if i0 == 5 goto label1;

        return 1;

     label1:
        virtualinvoke r0.<android.widget.TextView: boolean requestFocus()>();

        return 1;

     label2:
        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label3;

        virtualinvoke r1.<android.widget.Editor: void onDrop(android.view.DragEvent)>(r4);

     label3:
        return 1;

     label4:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label5;

        $f0 = virtualinvoke r4.<android.view.DragEvent: float getX()>();

        $f1 = virtualinvoke r4.<android.view.DragEvent: float getY()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $r3 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, i1);

     label5:
        return 1;

     label6:
        r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r5 == null goto label7;

        $z0 = virtualinvoke r5.<android.widget.Editor: boolean hasInsertionController()>();

        if $z0 == 0 goto label7;

        goto label8;

     label7:
        z3 = 0;

     label8:
        return z3;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.TextView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, $i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102;
        boolean z0, $z2, $z3, $z4, $z5, $z6;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43;
        android.widget.Editor r2;
        java.lang.CharSequence $r3, $r10;
        byte $b19;
        android.graphics.Paint $r4, $r6, $r7;
        android.widget.TextView$Marquee $r5, $r8, r35, r38;
        android.text.Layout $r9, $r29, r30, $r34;
        android.content.res.ColorStateList $r11;
        android.graphics.drawable.Drawable[] $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        android.graphics.drawable.Drawable $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        android.widget.TextView$Drawables r28;
        android.text.TextPaint $r31, $r32;
        int[] $r33;
        android.graphics.Path r36;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        i78 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i79 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i2 = r0.<android.widget.TextView: int mScrollX>;

        i80 = r0.<android.widget.TextView: int mScrollY>;

        i3 = r0.<android.widget.TextView: int mRight>;

        i4 = r0.<android.widget.TextView: int mLeft>;

        i81 = r0.<android.widget.TextView: int mBottom>;

        i82 = r0.<android.widget.TextView: int mTop>;

        z0 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRtl()>();

        i83 = virtualinvoke r0.<android.widget.TextView: int getHorizontalOffsetForDrawables()>();

        if z0 == 0 goto label01;

        i84 = 0;

        goto label02;

     label01:
        i84 = i83;

     label02:
        if z0 == 0 goto label03;

        goto label04;

     label03:
        i83 = 0;

     label04:
        r28 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r28 == null goto label08;

        $i32 = i81 - i82;

        $i33 = $i32 - i1;

        i85 = $i33 - i0;

        $i34 = i3 - i4;

        $i35 = $i34 - i79;

        i86 = $i35 - i78;

        $r12 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r13 = $r12[0];

        if $r13 == null goto label05;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i70 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i71 = $i70 + i2;

        $i72 = $i71 + i84;

        $f33 = (float) $i72;

        $i76 = i80 + i0;

        $i73 = r28.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i74 = i85 - $i73;

        $i75 = $i74 / 2;

        $i77 = $i76 + $i75;

        $f32 = (float) $i77;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f33, $f32);

        $r26 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r27 = $r26[0];

        virtualinvoke $r27.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label05:
        $r14 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r15 = $r14[2];

        if $r15 == null goto label06;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i57 = i2 + i3;

        $i59 = $i57 - i4;

        $i58 = r0.<android.widget.TextView: int mPaddingRight>;

        $i61 = $i59 - $i58;

        $i60 = r28.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i62 = $i61 - $i60;

        $i63 = $i62 - i83;

        $f31 = (float) $i63;

        $i67 = i80 + i0;

        $i64 = r28.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i65 = i85 - $i64;

        $i66 = $i65 / 2;

        $i68 = $i67 + $i66;

        $f30 = (float) $i68;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f31, $f30);

        $r24 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r25 = $r24[2];

        virtualinvoke $r25.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label06:
        $r16 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r17 = $r16[1];

        if $r17 == null goto label07;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i52 = i2 + i78;

        $i49 = r28.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i50 = i86 - $i49;

        $i51 = $i50 / 2;

        $i53 = $i52 + $i51;

        $f29 = (float) $i53;

        $i54 = r0.<android.widget.TextView: int mPaddingTop>;

        $i55 = $i54 + i80;

        $f28 = (float) $i55;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f29, $f28);

        $r22 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r23 = $r22[1];

        virtualinvoke $r23.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label07:
        $r18 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r19 = $r18[3];

        if $r19 == null goto label08;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i40 = i2 + i78;

        $i37 = r28.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i38 = i86 - $i37;

        $i39 = $i38 / 2;

        $i41 = $i40 + $i39;

        $f27 = (float) $i41;

        $i42 = i80 + i81;

        $i44 = $i42 - i82;

        $i43 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i46 = $i44 - $i43;

        $i45 = r28.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i47 = $i46 - $i45;

        $f26 = (float) $i47;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f27, $f26);

        $r20 = r28.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r21 = $r20[3];

        virtualinvoke $r21.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label08:
        i87 = r0.<android.widget.TextView: int mCurTextColor>;

        $r29 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r29 != null goto label09;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label09:
        r30 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r3 == null goto label11;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i31 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        if $i31 != 0 goto label11;

        $r11 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r11 == null goto label10;

        i87 = r0.<android.widget.TextView: int mCurHintTextColor>;

     label10:
        r30 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        goto label11;

     label11:
        $r31 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r31.<android.text.TextPaint: void setColor(int)>(i87);

        $r32 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r33 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r32.<android.text.TextPaint: int[] drawableState> = $r33;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i88 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i89 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i90 = r0.<android.widget.TextView: int mBottom>;

        i5 = r0.<android.widget.TextView: int mTop>;

        $r34 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i91 = virtualinvoke $r34.<android.text.Layout: int getHeight()>();

        $i92 = i78 + i2;

        f0 = (float) $i92;

        if i80 != 0 goto label12;

        f34 = 0.0F;

        goto label13;

     label12:
        $i7 = i88 + i80;

        f34 = (float) $i7;

     label13:
        $i8 = i3 - i4;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i10 = $i8 - $i9;

        $i11 = $i10 + i2;

        f35 = (float) $i11;

        $i12 = i90 - i5;

        $i13 = $i12 - i1;

        $i14 = $i13 - i0;

        $i15 = i91 - $i14;

        if i80 != $i15 goto label14;

        i89 = 0;

        goto label14;

     label14:
        $i16 = i81 - i82;

        $i17 = $i16 + i80;

        $i18 = $i17 - i89;

        f36 = (float) $i18;

        f37 = r0.<android.widget.TextView: float mShadowRadius>;

        $b19 = f37 cmpl 0.0F;

        if $b19 == 0 goto label15;

        $f14 = r0.<android.widget.TextView: float mShadowDx>;

        $f15 = $f14 - f37;

        f1 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f15);

        $f17 = r0.<android.widget.TextView: float mShadowDx>;

        $f16 = r0.<android.widget.TextView: float mShadowRadius>;

        $f18 = $f17 + $f16;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f18);

        $f20 = r0.<android.widget.TextView: float mShadowDy>;

        $f19 = r0.<android.widget.TextView: float mShadowRadius>;

        $f21 = $f20 - $f19;

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f21);

        $f23 = r0.<android.widget.TextView: float mShadowDy>;

        $f22 = r0.<android.widget.TextView: float mShadowRadius>;

        $f24 = $f23 + $f22;

        $f25 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f24);

        f38 = f36 + $f25;

        f35 = f35 + f2;

        f34 = f34 + f3;

        f39 = f0 + f1;

        goto label16;

     label15:
        f38 = f36;

        f39 = f0;

     label16:
        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(f39, f34, f35, f38);

        i93 = r0.<android.widget.TextView: int mGravity>;

        i94 = 0;

        $i20 = i93 & 112;

        if $i20 == 48 goto label17;

        i94 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i95 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        goto label18;

     label17:
        i95 = 0;

     label18:
        $f5 = (float) i78;

        $i21 = i88 + i94;

        $f4 = (float) $i21;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f5, $f4);

        i96 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i22 = r0.<android.widget.TextView: int mGravity>;

        i97 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i22, i96);

        $z2 = specialinvoke r0.<android.widget.TextView: boolean isMarqueeFadeEnabled()>();

        if $z2 == 0 goto label21;

        $z4 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z4 != 0 goto label19;

        $i25 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i25 != 1 goto label19;

        $z6 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z6 == 0 goto label19;

        $i26 = i97 & 7;

        if $i26 == 3 goto label19;

        i98 = r0.<android.widget.TextView: int mRight>;

        i99 = r0.<android.widget.TextView: int mLeft>;

        i100 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i101 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        f40 = virtualinvoke $r9.<android.text.Layout: float getLineRight(int)>(0);

        $i28 = i98 - i99;

        $i27 = i100 + i101;

        $i29 = $i28 - $i27;

        f41 = (float) $i29;

        $i30 = virtualinvoke r30.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f12 = (float) $i30;

        $f11 = f40 - f41;

        $f13 = $f12 * $f11;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f13, 0.0F);

        goto label19;

     label19:
        r35 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r35 == null goto label20;

        $z5 = virtualinvoke r35.<android.widget.TextView$Marquee: boolean isRunning()>();

        if $z5 == 0 goto label20;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f8 = virtualinvoke $r8.<android.widget.TextView$Marquee: float getScroll()>();

        f42 = neg $f8;

        $i24 = virtualinvoke r30.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f9 = (float) $i24;

        $f10 = $f9 * f42;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f10, 0.0F);

        goto label21;

     label20:
        goto label21;

     label21:
        i102 = i95 - i94;

        r36 = specialinvoke r0.<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()>();

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label22;

        $r7 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r2.<android.widget.Editor: void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>(r1, r30, r36, $r7, i102);

        goto label23;

     label22:
        $r4 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r30.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r36, $r4, i102);

     label23:
        r38 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if r38 == null goto label24;

        $z3 = virtualinvoke r38.<android.widget.TextView$Marquee: boolean shouldDrawGhost()>();

        if $z3 == 0 goto label24;

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        f43 = virtualinvoke $r5.<android.widget.TextView$Marquee: float getGhostOffset()>();

        $i23 = virtualinvoke r30.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f6 = (float) $i23;

        $f7 = $f6 * f43;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f7, 0.0F);

        $r6 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r30.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r36, $r6, i102);

     label24:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void onEditorAction(int)
    {
        android.widget.TextView r0;
        int i0;
        long l1, $l2;
        android.view.KeyEvent $r1, $r2;
        android.widget.TextView$OnEditorActionListener $r3, $r7;
        boolean $z0, $z2, $z3, $z4;
        android.os.IBinder $r4;
        java.lang.IllegalStateException $r5, $r6;
        android.widget.Editor r8;
        android.widget.Editor$InputContentType r9;
        android.view.View r10, r11;
        android.view.inputmethod.InputMethodManager r12;
        android.view.ViewRootImpl r13;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r8 != null goto label01;

        r9 = null;

        goto label02;

     label01:
        r9 = r8.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

     label02:
        if r9 == null goto label11;

        $r3 = r9.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r3 == null goto label03;

        $r7 = r9.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z4 = interfaceinvoke $r7.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, i0, null);

        if $z4 == 0 goto label03;

        return;

     label03:
        if i0 != 5 goto label06;

        r10 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(2);

        if r10 == null goto label05;

        $z3 = virtualinvoke r10.<android.view.View: boolean requestFocus(int)>(2);

        if $z3 == 0 goto label04;

        goto label05;

     label04:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r6;

     label05:
        return;

     label06:
        if i0 != 7 goto label09;

        r11 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(1);

        if r11 == null goto label08;

        $z2 = virtualinvoke r11.<android.view.View: boolean requestFocus(int)>(1);

        if $z2 == 0 goto label07;

        goto label08;

     label07:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r5;

     label08:
        return;

     label09:
        if i0 != 6 goto label11;

        r12 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r12 == null goto label10;

        $z0 = virtualinvoke r12.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label10;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r12.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r4, 0);

     label10:
        return;

     label11:
        r13 = virtualinvoke r0.<android.widget.TextView: android.view.ViewRootImpl getViewRootImpl()>();

        if r13 == null goto label12;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, 66, 0, 0, -1, 0, 22);

        virtualinvoke r13.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, l1, 1, 66, 0, 0, -1, 0, 22);

        virtualinvoke r13.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r2);

     label12:
        return;
    }

    public void onEndBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        int i0;
        android.graphics.Rect r1;
        java.lang.CharSequence $r2;
        android.widget.Editor r3;
        android.text.Spannable r4;
        android.text.method.TransformationMethod r5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTemporarilyDetached()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;

     label1:
        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.widget.Editor: void onFocusChanged(boolean,int)>(z0, i0);

     label2:
        if z0 == 0 goto label3;

        r4 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if r4 == null goto label3;

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>(r4);

     label3:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        r5 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r5 == null goto label4;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        interfaceinvoke r5.<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>(r0, $r2, z0, i0, r1);

     label4:
        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2;
        java.lang.CharSequence $r2;
        android.text.Layout $r3;
        android.text.Spannable $r4;
        java.lang.AbstractMethodError $r5;
        android.text.method.MovementMethod r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        r6 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r6 == null goto label5;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label5;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label5;

     label1:
        $r4 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        z0 = interfaceinvoke r6.<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r4, r1);

     label2:
        if z0 == 0 goto label3;

        return 1;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        $z2 = specialinvoke r0.<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z2;

        catch java.lang.AbstractMethodError from label1 to label2 with label4;
    }

    public void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z0);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 8192 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i1);

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i2);

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i3);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.CharSequence $r2, $r3, $r21, $r24, $r27, $r31, r36;
        android.widget.TextView$BufferType $r4, $r5;
        java.lang.String[] $r6, $r18;
        java.util.List $r7, $r19;
        android.text.method.MovementMethod $r8;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r9, $r10, $r28, r34, r35;
        android.text.InputFilter[] $r11, $r32;
        android.text.InputFilter$LengthFilter $r12;
        android.widget.Editor $r13, $r20, $r26, r29;
        android.widget.Editor$ProcessTextIntentActionsHandler $r14;
        android.content.res.Resources $r16, $r23;
        java.lang.String $r17;
        android.content.Context $r22;
        java.lang.Object r30;
        android.text.InputFilter r33;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>($z0);

        $r2 = specialinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r2);

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>($r3);

        $z1 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>($z1);

        $r5 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        $r4 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r5 != $r4 goto label01;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>(1);

        $z19 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z19 == 0 goto label01;

        $r28 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SET_TEXT>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r28);

     label01:
        r29 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r29 == null goto label04;

        $i2 = r29.<android.widget.Editor: int mInputType>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>($i2);

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21 = $r20.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r21 == null goto label02;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>(1);

        $r26 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r27 = $r26.<android.widget.Editor: java.lang.CharSequence mError>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>($r27);

     label02:
        $z17 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z17 == 0 goto label04;

        $z18 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z18 == 0 goto label04;

        $r22 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: android.content.res.Resources getResources()>();

        r30 = virtualinvoke $r23.<android.content.res.Resources: java.lang.String getString(int)>(17040348);

        $r24 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>();

        if $r24 == null goto label03;

        r30 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>();

     label03:
        r34 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        r36 = (java.lang.CharSequence) r30;

        specialinvoke r34.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(16908372, r36);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r34);

     label04:
        $r31 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z20 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r31);

        if $z20 != 0 goto label05;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(256);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(512);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>(31);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(131072);

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "android.view.accessibility.extra.DATA_RENDERING_INFO_KEY";

        $r18[1] = "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_KEY";

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setAvailableExtraData(java.util.List)>($r19);

        goto label06;

     label05:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "android.view.accessibility.extra.DATA_RENDERING_INFO_KEY";

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setAvailableExtraData(java.util.List)>($r7);

     label06:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label11;

        $z12 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z12 == 0 goto label07;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16384);

     label07:
        $z13 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z13 == 0 goto label08;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32768);

     label08:
        $z14 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z14 == 0 goto label09;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(65536);

     label09:
        $z15 = virtualinvoke r0.<android.widget.TextView: boolean canShare()>();

        if $z15 == 0 goto label10;

        r35 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r16 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(17041229);

        specialinvoke r35.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(268435456, $r17);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>(r35);

     label10:
        $z16 = virtualinvoke r0.<android.widget.TextView: boolean canProcessText()>();

        if $z16 == 0 goto label11;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r13.<android.widget.Editor: android.widget.Editor$ProcessTextIntentActionsHandler mProcessTextIntentActionsHandler>;

        virtualinvoke $r14.<android.widget.Editor$ProcessTextIntentActionsHandler: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

     label11:
        $r32 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        i0 = lengthof $r32;

        i3 = 0;

     label12:
        if i3 >= i0 goto label14;

        $r11 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        r33 = $r11[i3];

        $z11 = r33 instanceof android.text.InputFilter$LengthFilter;

        if $z11 == 0 goto label13;

        $r12 = (android.text.InputFilter$LengthFilter) r33;

        $i1 = virtualinvoke $r12.<android.text.InputFilter$LengthFilter: int getMax()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>($i1);

     label13:
        i3 = i3 + 1;

        goto label12;

     label14:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSingleLine()>();

        if $z3 != 0 goto label15;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>(1);

     label15:
        $z4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        if $z4 != 0 goto label16;

        $z10 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        if $z10 == 0 goto label18;

     label16:
        $r8 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $z5 = $r8 instanceof android.text.method.LinkMovementMethod;

        if $z5 == 0 goto label18;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z6 != 0 goto label17;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>(0);

        $r10 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_CLICK>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r10);

     label17:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean hasOnLongClickListeners()>();

        if $z7 != 0 goto label18;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>(0);

        $r9 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_LONG_CLICK>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r9);

     label18:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r1, null);

        if $i1 != 0 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.view.KeyEvent r1, r20, r21;
        android.text.Spannable $r2, $r4, $r6;
        android.text.method.MovementMethod $r3, $r5, $r7;
        android.widget.Editor $r8, $r12, $r16;
        java.lang.CharSequence $r9, $r13, $r17;
        android.text.Editable $r10, $r14, $r18;
        android.text.method.KeyListener $r11, $r15, $r19;
        boolean $z6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r20 := @parameter2: android.view.KeyEvent;

        r1 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r20, 0);

        i1 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r1, r20);

        if i1 != 0 goto label1;

        $z6 = specialinvoke r0.<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i2, r20);

        return $z6;

     label1:
        if i1 != -1 goto label2;

        return 1;

     label2:
        i3 = i2 + -1;

        r21 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r20, 1);

        if i1 != 1 goto label5;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r8.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r10 = (android.text.Editable) $r9;

        interfaceinvoke $r11.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r10, i0, r21);

     label3:
        i3 = i3 + -1;

        if i3 <= 0 goto label4;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = $r12.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r14 = (android.text.Editable) $r13;

        interfaceinvoke $r15.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r14, i0, r1);

        $r16 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r16.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = (android.text.Editable) $r17;

        interfaceinvoke $r19.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r18, i0, r21);

        goto label3;

     label4:
        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        goto label7;

     label5:
        if i1 != 2 goto label7;

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        interfaceinvoke $r3.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r2, i0, r21);

     label6:
        i3 = i3 + -1;

        if i3 <= 0 goto label7;

        $r5 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        interfaceinvoke $r5.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r4, i0, r1);

        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r6 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        interfaceinvoke $r7.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r6, i0, r21);

        goto label6;

     label7:
        return 1;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean handleBackInTextActionModeIfNeeded(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(4096);

        if $z0 == 0 goto label07;

        if i0 == 29 goto label05;

        if i0 == 31 goto label04;

        if i0 == 50 goto label03;

        if i0 == 52 goto label02;

        if i0 == 54 goto label01;

        goto label06;

     label01:
        $z14 = virtualinvoke r0.<android.widget.TextView: boolean canUndo()>();

        if $z14 == 0 goto label06;

        $z15 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908338);

        return $z15;

     label02:
        $z12 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z12 == 0 goto label06;

        $z13 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        return $z13;

     label03:
        $z10 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z10 == 0 goto label06;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        return $z11;

     label04:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z8 == 0 goto label06;

        $z9 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        return $z9;

     label05:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z6 == 0 goto label06;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908319);

        return $z7;

     label06:
        goto label10;

     label07:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(4097);

        if $z1 == 0 goto label10;

        if i0 == 50 goto label09;

        if i0 == 54 goto label08;

        goto label10;

     label08:
        $z4 = virtualinvoke r0.<android.widget.TextView: boolean canRedo()>();

        if $z4 == 0 goto label10;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908339);

        return $z5;

     label09:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z2 == 0 goto label10;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908337);

        return $z3;

     label10:
        $z16 = specialinvoke r0.<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>(i0, r1);

        return $z16;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z14, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        android.text.method.MovementMethod $r2, r29;
        java.lang.CharSequence $r3, $r9;
        android.text.Layout $r4, $r5;
        android.text.Spannable $r6;
        android.text.method.KeyListener $r7, $r11;
        android.widget.Editor $r8, $r15, $r18, $r20, $r22, r25, r28;
        android.text.Editable $r10;
        android.os.IBinder $r12;
        java.lang.IllegalStateException $r13;
        android.widget.Editor$InputContentType $r14, $r16, $r19, $r21, $r23;
        android.widget.TextView$OnEditorActionListener $r17, $r24;
        android.view.View r26;
        android.view.inputmethod.InputMethodManager r27, r30;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        $z19 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z19;

     label01:
        $z1 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z1 != 0 goto label02;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label02:
        if i0 == 23 goto label12;

        if i0 == 66 goto label03;

        if i0 == 160 goto label03;

        goto label09;

     label03:
        $z8 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z8 == 0 goto label09;

        r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r25 == null goto label04;

        $r14 = r25.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r14 == null goto label04;

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r15.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r17 = $r16.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r17 == null goto label04;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r18.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $z17 = $r19.<android.widget.Editor$InputContentType: boolean enterDown>;

        if $z17 == 0 goto label04;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21 = $r20.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r21.<android.widget.Editor$InputContentType: boolean enterDown> = 0;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r23 = $r22.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r24 = $r23.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z18 = interfaceinvoke $r24.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r1);

        if $z18 == 0 goto label04;

        return 1;

     label04:
        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i4 = $i3 & 16;

        if $i4 != 0 goto label05;

        $z16 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z16 == 0 goto label08;

     label05:
        $z11 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z11 != 0 goto label08;

        r26 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if r26 == null goto label07;

        $z14 = virtualinvoke r26.<android.view.View: boolean requestFocus(int)>(130);

        if $z14 == 0 goto label06;

        specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return 1;

     label06:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r13;

     label07:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i2 = $i1 & 16;

        if $i2 == 0 goto label08;

        r27 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r27 == null goto label08;

        $z12 = virtualinvoke r27.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z12 == 0 goto label08;

        $r12 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r27.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r12, 0);

     label08:
        $z20 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z20;

     label09:
        r28 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r28 == null goto label10;

        $r7 = r28.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r7 == null goto label10;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r8.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r10 = (android.text.Editable) $r9;

        $z10 = interfaceinvoke $r11.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r10, i0, r1);

        if $z10 == 0 goto label10;

        return 1;

     label10:
        r29 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r29 == null goto label11;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label11;

        $r6 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $z9 = interfaceinvoke r29.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r6, i0, r1);

        if $z9 == 0 goto label11;

        return 1;

     label11:
        $z21 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z21;

     label12:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z2 == 0 goto label13;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z3 != 0 goto label13;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label13;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z4 = $r3 instanceof android.text.Editable;

        if $z4 == 0 goto label13;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label13;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z5 == 0 goto label13;

        r30 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r30);

        if r30 == null goto label13;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean getShowSoftInputOnFocus()>();

        if $z6 == 0 goto label13;

        virtualinvoke r30.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

     label13:
        $z22 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z22;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i6, i0, i1, i2);

        $i3 = r0.<android.widget.TextView: int mDeferScroll>;

        if $i3 < 0 goto label1;

        i7 = r0.<android.widget.TextView: int mDeferScroll>;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i4 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i4);

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>($i5);

     label1:
        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        return;
    }

    void onLocaleChanged()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void onLocaleChanged()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, i37, i38, i39, i40, i42, i43, i44, i45, i46, i47, i49, i50, i51, $i52, $i53, $i54, i55, $i56, i57, i58, i59, i60, $i61, $i62, $i63, i64, i65, i66, i67, $i68, $i69, i70, $i71, $i72, $i73, i74, i75, $i76, i77, i78;
        android.text.TextDirectionHeuristic $r1, $r12, $r16, $r20, $r24, $r28;
        java.lang.CharSequence $r2, $r18, $r26, r34, r38, $r41;
        android.text.Layout $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, r32, r36, r39, r40;
        android.text.TextUtils$TruncateAt $r8, $r19, $r27;
        boolean $z0, z2, z3, $z4, z5, z6, z7;
        android.text.TextPaint $r13, $r17, $r21, $r25;
        float $f0, $f1, f2;
        double $d0, $d1, $d2, $d3;
        android.text.BoringLayout$Metrics $r14, $r15, $r22, $r23, r29, r30, r31, r33, r37;
        android.widget.TextView$Drawables r35;
        android.text.method.MovementMethod $r42;

        r0 := @this: android.widget.TextView;

        i36 := @parameter0: int;

        i37 := @parameter1: int;

        i38 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i36);

        i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i37);

        i39 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i36);

        i40 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i37);

        r29 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        r30 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r1 != null goto label01;

        $r28 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r28;

     label01:
        if i38 != -2147483648 goto label02;

        f2 = (float) i39;

        goto label03;

     label02:
        f2 = 3.4028235E38F;

     label03:
        if i38 != 1073741824 goto label04;

        r31 = r30;

        i42 = -1;

        z2 = 0;

        i43 = i39;

        goto label25;

     label04:
        r32 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i42 = -1;

        if r32 == null goto label05;

        i42 = -1;

        $r27 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r27 != null goto label05;

        i42 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>(r32);

     label05:
        if i42 >= 0 goto label06;

        $r26 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r25 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r24 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r23 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r33 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r26, $r25, $r24, $r23);

        r29 = r33;

        z3 = 0;

        if r33 == null goto label07;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r33;

        r29 = r33;

        z3 = 0;

        goto label07;

     label06:
        z3 = 1;

     label07:
        if r29 == null goto label09;

        $r22 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r29 != $r22 goto label08;

        goto label09;

     label08:
        i44 = r29.<android.text.BoringLayout$Metrics: int width>;

        goto label11;

     label09:
        i45 = i42;

        if i42 >= 0 goto label10;

        r34 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i35 = interfaceinvoke r34.<java.lang.CharSequence: int length()>();

        $r21 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r20 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f1 = staticinvoke <android.text.Layout: float getDesiredWidthWithLimit(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic,float)>(r34, 0, $i35, $r21, $r20, f2);

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i45 = (int) $d3;

     label10:
        i44 = i45;

        i42 = i45;

     label11:
        r35 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        i46 = i44;

        if r35 == null goto label12;

        $i32 = r35.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>(i44, $i32);

        $i34 = r35.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        i46 = staticinvoke <java.lang.Math: int max(int,int)>($i33, $i34);

     label12:
        r31 = r30;

        i47 = i46;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r2 == null goto label19;

        r36 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i49 = -1;

        if r36 == null goto label13;

        i49 = -1;

        $r19 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r19 != null goto label13;

        i49 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>(r36);

     label13:
        if i49 >= 0 goto label14;

        $r18 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r17 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r16 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r15 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r37 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r18, $r17, $r16, $r15);

        r30 = r37;

        if r37 == null goto label14;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r37;

        r30 = r37;

     label14:
        if r30 == null goto label16;

        $r14 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r30 != $r14 goto label15;

        goto label16;

     label15:
        i50 = r30.<android.text.BoringLayout$Metrics: int width>;

        goto label18;

     label16:
        i51 = i49;

        if i49 >= 0 goto label17;

        r38 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $i31 = interfaceinvoke r38.<java.lang.CharSequence: int length()>();

        $r13 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r12 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidthWithLimit(java.lang.CharSequence,int,int,android.text.TextPaint,android.text.TextDirectionHeuristic,float)>(r38, 0, $i31, $r13, $r12, f2);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i51 = (int) $d1;

     label17:
        i50 = i51;

     label18:
        r31 = r30;

        i47 = i46;

        if i50 <= i46 goto label19;

        i47 = i50;

        r31 = r30;

     label19:
        $i52 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i53 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i54 = $i52 + $i53;

        i55 = i47 + $i54;

        $i56 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i56 != 1 goto label20;

        $i28 = r0.<android.widget.TextView: int mMaxWidth>;

        $i29 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i30 = $i28 * $i29;

        i57 = staticinvoke <java.lang.Math: int min(int,int)>(i55, $i30);

        goto label21;

     label20:
        $i1 = r0.<android.widget.TextView: int mMaxWidth>;

        i57 = staticinvoke <java.lang.Math: int min(int,int)>(i55, $i1);

     label21:
        $i2 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i2 != 1 goto label22;

        $i25 = r0.<android.widget.TextView: int mMinWidth>;

        $i26 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i27 = $i25 * $i26;

        i58 = staticinvoke <java.lang.Math: int max(int,int)>(i57, $i27);

        goto label23;

     label22:
        $i3 = r0.<android.widget.TextView: int mMinWidth>;

        i58 = staticinvoke <java.lang.Math: int max(int,int)>(i57, $i3);

     label23:
        $i4 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumWidth()>();

        i59 = staticinvoke <java.lang.Math: int max(int,int)>(i58, $i4);

        if i38 != -2147483648 goto label24;

        i60 = staticinvoke <java.lang.Math: int min(int,int)>(i39, i59);

        z2 = z3;

        i43 = i60;

        goto label25;

     label24:
        z2 = z3;

        i43 = i59;

     label25:
        $i61 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i62 = i43 - $i61;

        $i63 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i64 = $i62 - $i63;

        i65 = i64;

        $z4 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z4 == 0 goto label26;

        i65 = 1048576;

     label26:
        r39 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r39 != null goto label27;

        i66 = i65;

        goto label28;

     label27:
        i66 = virtualinvoke r39.<android.text.Layout: int getWidth()>();

     label28:
        r40 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r40 != null goto label29;

        $i21 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i22 = i43 - $i21;

        $i23 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i24 = $i22 - $i23;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i65, i65, r29, r31, $i24, 0);

        goto label42;

     label29:
        i67 = i43;

        $i5 = virtualinvoke r40.<android.text.Layout: int getWidth()>();

        if $i5 != i65 goto label31;

        if i66 != i65 goto label31;

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i16 = virtualinvoke $r11.<android.text.Layout: int getEllipsizedWidth()>();

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i18 = i43 - $i17;

        $i19 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i20 = $i18 - $i19;

        if $i16 == $i20 goto label30;

        goto label31;

     label30:
        z5 = 0;

        goto label32;

     label31:
        z5 = 1;

     label32:
        $r41 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r41 != null goto label34;

        $r8 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r8 != null goto label34;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i15 = virtualinvoke $r9.<android.text.Layout: int getWidth()>();

        if i65 <= $i15 goto label34;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z0 = $r10 instanceof android.text.BoringLayout;

        if $z0 != 0 goto label33;

        if z2 == 0 goto label34;

        if i42 < 0 goto label34;

        if i42 > i65 goto label34;

     label33:
        z6 = 1;

        goto label35;

     label34:
        z6 = 0;

     label35:
        $i68 = r0.<android.widget.TextView: int mMaxMode>;

        $i69 = r0.<android.widget.TextView: int mOldMaxMode>;

        if $i68 != $i69 goto label37;

        $i14 = r0.<android.widget.TextView: int mMaximum>;

        $i13 = r0.<android.widget.TextView: int mOldMaximum>;

        if $i14 == $i13 goto label36;

        goto label37;

     label36:
        z7 = 0;

        goto label38;

     label37:
        z7 = 1;

     label38:
        if z5 != 0 goto label40;

        if z7 == 0 goto label39;

        goto label40;

     label39:
        goto label42;

     label40:
        if z7 != 0 goto label41;

        if z6 == 0 goto label41;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r7.<android.text.Layout: void increaseWidthTo(int)>(i65);

        goto label42;

     label41:
        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i7 = i67 - $i6;

        $i8 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i9 = $i7 - $i8;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i65, i65, r29, r31, $i9, 0);

     label42:
        if i0 != 1073741824 goto label43;

        i70 = i40;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        goto label44;

     label43:
        i70 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = i70;

        if i0 != -2147483648 goto label44;

        i70 = staticinvoke <java.lang.Math: int min(int,int)>(i70, i40);

        goto label44;

     label44:
        $i71 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i72 = i70 - $i71;

        $i73 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i74 = $i72 - $i73;

        i75 = i74;

        $i76 = r0.<android.widget.TextView: int mMaxMode>;

        if $i76 != 1 goto label45;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i77 = virtualinvoke $r5.<android.text.Layout: int getLineCount()>();

        i78 = r0.<android.widget.TextView: int mMaximum>;

        i75 = i74;

        if i77 <= i78 goto label45;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i12 = virtualinvoke $r6.<android.text.Layout: int getLineTop(int)>(i78);

        i75 = staticinvoke <java.lang.Math: int min(int,int)>(i74, $i12);

     label45:
        $r42 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r42 != null goto label47;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = virtualinvoke $r3.<android.text.Layout: int getWidth()>();

        if $i10 > i64 goto label47;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i11 = virtualinvoke $r4.<android.text.Layout: int getHeight()>();

        if $i11 <= i75 goto label46;

        goto label47;

     label46:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(0, 0);

        goto label48;

     label47:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label48:
        virtualinvoke r0.<android.widget.TextView: void setMeasuredDimension(int,int)>(i43, i70);

        return;
    }

    public void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        r2 = specialinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public boolean onPreDraw()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;
        android.text.method.MovementMethod $r2;
        boolean $z1, $z3;
        android.widget.Editor $r3, $r4, $r7, r9, r10;
        int $i0, $i1, i2, i3, i4;
        java.lang.CharSequence $r5;
        android.widget.Editor$SelectionModifierCursorController $r6, $r8;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label1:
        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label5;

        i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        i3 = i2;

        if r9 == null goto label2;

        i3 = i2;

        $r6 = r9.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r6 == null goto label2;

        i3 = i2;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        $z3 = virtualinvoke $r8.<android.widget.Editor$SelectionModifierCursorController: boolean isSelectionStartDragged()>();

        if $z3 == 0 goto label2;

        i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

     label2:
        i4 = i3;

        if i3 >= 0 goto label3;

        i4 = i3;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        $i1 = $i0 & 112;

        if $i1 != 80 goto label3;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i4 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

     label3:
        if i4 < 0 goto label4;

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i4);

     label4:
        goto label6;

     label5:
        specialinvoke r0.<android.widget.TextView: boolean bringTextIntoView()>();

     label6:
        r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r10 == null goto label7;

        $z1 = r10.<android.widget.Editor: boolean mCreatedWithASelection>;

        if $z1 == 0 goto label7;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void refreshTextActionMode()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4.<android.widget.Editor: boolean mCreatedWithASelection> = 0;

     label7:
        specialinvoke r0.<android.widget.TextView: void unregisterForPreDraw()>();

        return 1;
    }

    public boolean onPrivateIMECommand(java.lang.String, android.os.Bundle)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    protected void onProvideStructure(android.view.ViewStructure, int, int)
    {
        android.widget.TextView r0;
        android.view.ViewStructure r1;
        android.text.Layout r2, $r27;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i40, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i66, i67, i68, $i69, $i70;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        float $f0, $f1, $f2, $f3;
        android.text.TextPaint $r3;
        android.content.res.Resources $r4, $r7;
        java.lang.String $r5, $r8, $r14, $r16, $r22, $r24;
        android.text.InputFilter$LengthFilter $r6;
        android.content.res.Resources$NotFoundException $r9, $r17;
        java.lang.StringBuilder $r10, $r18;
        java.lang.CharSequence r28, r32, r33, $r40;
        int[] r29, r34, r35;
        android.view.View r30;
        android.view.ViewParent r31;
        android.text.InputFilter[] r36;
        android.text.InputFilter r37;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ViewStructure;

        i42 := @parameter1: int;

        i43 := @parameter2: int;

        specialinvoke r0.<android.view.View: void onProvideStructure(android.view.ViewStructure,int,int)>(r1, i42, i43);

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 != 0 goto label02;

        $i37 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $z5 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>($i37);

        if $z5 == 0 goto label01;

        goto label02;

     label01:
        z8 = 0;

        goto label03;

     label02:
        z8 = 1;

     label03:
        if i42 == 1 goto label04;

        if i42 != 2 goto label09;

     label04:
        if i42 != 1 goto label05;

        $z3 = r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId>;

        $z4 = $z3 ^ 1;

        virtualinvoke r1.<android.view.ViewStructure: void setDataIsSensitive(boolean)>($z4);

     label05:
        $i3 = r0.<android.widget.TextView: int mTextId>;

        if $i3 == 0 goto label09;

     label06:
        $r7 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $i36 = r0.<android.widget.TextView: int mTextId>;

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>($i36);

        virtualinvoke r1.<android.view.ViewStructure: void setTextIdEntry(java.lang.String)>($r8);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        $z7 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z7 == 0 goto label09;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onProvideAutofillStructure(): cannot set name for text id ");

        $i40 = r0.<android.widget.TextView: int mTextId>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r17.<android.content.res.Resources$NotFoundException: java.lang.String getMessage()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TextView", $r24);

     label09:
        if z8 == 0 goto label11;

        if i42 == 1 goto label11;

        if i42 != 2 goto label10;

        goto label11;

     label10:
        goto label43;

     label11:
        $r27 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r27 != null goto label13;

        if i42 != 2 goto label12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextView", "onProvideContentCaptureStructure(): calling assumeLayout()");

     label12:
        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label13:
        r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i44 = virtualinvoke r2.<android.text.Layout: int getLineCount()>();

        if i44 > 1 goto label16;

        r28 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        if i42 != 1 goto label14;

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence)>(r28);

        goto label15;

     label14:
        $i33 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i34 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence,int,int)>(r28, $i33, $i34);

     label15:
        goto label30;

     label16:
        r29 = newarray (int)[2];

        virtualinvoke r0.<android.widget.TextView: void getLocationInWindow(int[])>(r29);

        i45 = r29[1];

        r30 = r0;

        r31 = virtualinvoke r0.<android.widget.TextView: android.view.ViewParent getParent()>();

     label17:
        $z1 = r31 instanceof android.view.View;

        if $z1 == 0 goto label18;

        r30 = (android.view.View) r31;

        r31 = virtualinvoke r30.<android.view.View: android.view.ViewParent getParent()>();

        goto label17;

     label18:
        i46 = virtualinvoke r30.<android.view.View: int getHeight()>();

        if i45 < 0 goto label19;

        i47 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinateUnclamped(float)>(0.0F);

        $i32 = i46 - 1;

        $f3 = (float) $i32;

        i48 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinateUnclamped(float)>($f3);

        goto label20;

     label19:
        $i4 = neg i45;

        $f0 = (float) $i4;

        i47 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinateUnclamped(float)>($f0);

        $i5 = i46 - 1;

        $i6 = $i5 - i45;

        $f1 = (float) $i6;

        i48 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinateUnclamped(float)>($f1);

     label20:
        $i7 = i48 - i47;

        $i8 = $i7 / 2;

        i49 = i47 - $i8;

        if i49 >= 0 goto label21;

        i49 = 0;

        goto label21;

     label21:
        $i9 = i48 - i47;

        $i10 = $i9 / 2;

        i50 = i48 + $i10;

        i51 = i50;

        if i50 < i44 goto label22;

        i51 = i44 - 1;

     label22:
        i52 = virtualinvoke r2.<android.text.Layout: int getLineStart(int)>(i49);

        i0 = virtualinvoke r2.<android.text.Layout: int getLineEnd(int)>(i51);

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        i53 = i0;

        i54 = i52;

        if i1 >= i2 goto label24;

        i55 = i52;

        if i1 >= i52 goto label23;

        i55 = i1;

     label23:
        i53 = i0;

        i54 = i55;

        if i2 <= i0 goto label24;

        i53 = i2;

        i54 = i55;

     label24:
        r32 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        if i54 > 0 goto label25;

        r33 = r32;

        $i31 = interfaceinvoke r32.<java.lang.CharSequence: int length()>();

        if i53 >= $i31 goto label26;

        goto label25;

     label25:
        r33 = interfaceinvoke r32.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i54, i53);

     label26:
        if i42 != 1 goto label27;

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence)>(r33);

        goto label30;

     label27:
        $i12 = i1 - i54;

        $i11 = i2 - i54;

        virtualinvoke r1.<android.view.ViewStructure: void setText(java.lang.CharSequence,int,int)>(r33, $i12, $i11);

        $i13 = i48 - i47;

        $i14 = $i13 + 1;

        r34 = newarray (int)[$i14];

        $i15 = i48 - i47;

        $i16 = $i15 + 1;

        r35 = newarray (int)[$i16];

        i56 = virtualinvoke r0.<android.widget.TextView: int getBaselineOffset()>();

        i57 = i47;

     label28:
        if i57 > i48 goto label29;

        $i26 = i57 - i47;

        $i27 = virtualinvoke r2.<android.text.Layout: int getLineStart(int)>(i57);

        r34[$i26] = $i27;

        $i28 = i57 - i47;

        $i29 = virtualinvoke r2.<android.text.Layout: int getLineBaseline(int)>(i57);

        $i30 = $i29 + i56;

        r35[$i28] = $i30;

        i57 = i57 + 1;

        goto label28;

     label29:
        virtualinvoke r1.<android.view.ViewStructure: void setTextLines(int[],int[])>(r34, r35);

     label30:
        if i42 == 0 goto label32;

        if i42 != 2 goto label31;

        goto label32;

     label31:
        goto label38;

     label32:
        i58 = 0;

        i59 = virtualinvoke r0.<android.widget.TextView: int getTypefaceStyle()>();

        $i17 = i59 & 1;

        if $i17 == 0 goto label33;

        i58 = 0 | 1;

     label33:
        i60 = i58;

        $i18 = i59 & 2;

        if $i18 == 0 goto label34;

        i60 = i58 | 2;

     label34:
        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        i61 = virtualinvoke $r3.<android.text.TextPaint: int getFlags()>();

        i62 = i60;

        $i19 = i61 & 32;

        if $i19 == 0 goto label35;

        i62 = i60 | 1;

     label35:
        i63 = i62;

        $i20 = i61 & 8;

        if $i20 == 0 goto label36;

        i63 = i62 | 4;

     label36:
        i64 = i63;

        $i21 = i61 & 16;

        if $i21 == 0 goto label37;

        i64 = i63 | 8;

     label37:
        $f2 = virtualinvoke r0.<android.widget.TextView: float getTextSize()>();

        $i22 = virtualinvoke r0.<android.widget.TextView: int getCurrentTextColor()>();

        virtualinvoke r1.<android.view.ViewStructure: void setTextStyle(float,int,int,int)>($f2, $i22, 1, i64);

     label38:
        if i42 == 1 goto label39;

        if i42 != 2 goto label43;

     label39:
        $i23 = virtualinvoke r0.<android.widget.TextView: int getMinEms()>();

        virtualinvoke r1.<android.view.ViewStructure: void setMinTextEms(int)>($i23);

        $i24 = virtualinvoke r0.<android.widget.TextView: int getMaxEms()>();

        virtualinvoke r1.<android.view.ViewStructure: void setMaxTextEms(int)>($i24);

        r36 = virtualinvoke r0.<android.widget.TextView: android.text.InputFilter[] getFilters()>();

        i66 = lengthof r36;

        i67 = 0;

     label40:
        i68 = -1;

        if i67 >= i66 goto label42;

        r37 = r36[i67];

        $z2 = r37 instanceof android.text.InputFilter$LengthFilter;

        if $z2 == 0 goto label41;

        $r6 = (android.text.InputFilter$LengthFilter) r37;

        i68 = virtualinvoke $r6.<android.text.InputFilter$LengthFilter: int getMax()>();

        goto label42;

     label41:
        i67 = i67 + 1;

        goto label40;

     label42:
        virtualinvoke r1.<android.view.ViewStructure: void setMaxTextLength(int)>(i68);

     label43:
        $i69 = r0.<android.widget.TextView: int mHintId>;

        if $i69 == 0 goto label47;

     label44:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $i25 = r0.<android.widget.TextView: int mHintId>;

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>($i25);

        virtualinvoke r1.<android.view.ViewStructure: void setHintIdEntry(java.lang.String)>($r5);

     label45:
        goto label47;

     label46:
        $r9 := @caughtexception;

        $z6 = <android.view.autofill.Helper: boolean sVerbose>;

        if $z6 == 0 goto label47;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onProvideAutofillStructure(): cannot set name for hint id ");

        $i38 = r0.<android.widget.TextView: int mHintId>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r9.<android.content.res.Resources$NotFoundException: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TextView", $r16);

     label47:
        $r40 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getHint()>();

        virtualinvoke r1.<android.view.ViewStructure: void setHint(java.lang.CharSequence)>($r40);

        $i70 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        virtualinvoke r1.<android.view.ViewStructure: void setInputType(int)>($i70);

        return;

        catch android.content.res.Resources$NotFoundException from label06 to label07 with label08;
        catch android.content.res.Resources$NotFoundException from label44 to label45 with label46;
    }

    public void onResolveDrawables(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.widget.TextView$Drawables r1, $r2, $r5;
        boolean $z0;
        android.graphics.drawable.Drawable[] $r3, $r6;
        android.graphics.drawable.Drawable $r4, $r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mLastLayoutDirection>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<android.widget.TextView: int mLastLayoutDirection> = i0;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.widget.TextView$Drawables: boolean resolveWithLayoutDirection(int)>(i0);

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r4 = $r3[0];

        specialinvoke r0.<android.widget.TextView: void prepareDrawableForDisplay(android.graphics.drawable.Drawable)>($r4);

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6 = $r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r7 = $r6[2];

        specialinvoke r0.<android.widget.TextView: void prepareDrawableForDisplay(android.graphics.drawable.Drawable)>($r7);

        specialinvoke r0.<android.widget.TextView: void applyCompoundDrawableTint()>();

     label2:
        return;
    }

    public android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent, int)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2;
        android.text.Spannable $r2, $r6;
        android.content.Context $r3, $r9;
        android.view.PointerIcon $r4, $r5, $r10;
        boolean $z0, $z1, $z2;
        float $f0, $f1;
        java.lang.Object[] $r7;
        android.text.style.ClickableSpan[] $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if $r2 == null goto label1;

        $z1 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z1 == 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        i1 = virtualinvoke r0.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $r6 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $r7 = interfaceinvoke $r6.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i1, i1, class "Landroid/text/style/ClickableSpan;");

        $r8 = (android.text.style.ClickableSpan[]) $r7;

        $i2 = lengthof $r8;

        if $i2 <= 0 goto label1;

        $r9 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r10 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>($r9, 1002);

        return $r10;

     label1:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z2 != 0 goto label3;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r5 = specialinvoke r0.<android.view.View: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>(r1, i0);

        return $r5;

     label3:
        $r3 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>($r3, 1008);

        return $r4;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TextView r0;
        android.widget.TextView$SavedState r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        boolean $z0, $z2;
        android.os.Parcelable $r3, r27;
        java.lang.CharSequence $r4, $r9, $r11, $r12, $r21, $r26, $r29;
        android.os.ParcelableParcel $r5, $r6;
        android.widget.Editor $r7, $r25;
        android.widget.TextView$1 $r8;
        android.text.Spannable $r10, $r24;
        java.lang.StringBuilder $r13;
        java.lang.String $r23, r28;

        r0 := @this: android.widget.TextView;

        r27 := @parameter0: android.os.Parcelable;

        $z0 = r27 instanceof android.widget.TextView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>(r27);

        return;

     label1:
        r1 = (android.widget.TextView$SavedState) r27;

        $r3 = virtualinvoke r1.<android.widget.TextView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $r4 = r1.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r4 == null goto label2;

        $r26 = r1.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r26);

     label2:
        $i1 = r1.<android.widget.TextView$SavedState: int selStart>;

        if $i1 < 0 goto label6;

        $i2 = r1.<android.widget.TextView$SavedState: int selEnd>;

        if $i2 < 0 goto label6;

        $r10 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if $r10 == null goto label6;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        $i3 = r1.<android.widget.TextView$SavedState: int selStart>;

        if $i3 > i0 goto label4;

        $i7 = r1.<android.widget.TextView$SavedState: int selEnd>;

        if $i7 <= i0 goto label3;

        goto label4;

     label3:
        $r24 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $i9 = r1.<android.widget.TextView$SavedState: int selStart>;

        $i8 = r1.<android.widget.TextView$SavedState: int selEnd>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r24, $i9, $i8);

        $z2 = r1.<android.widget.TextView$SavedState: boolean frozenWithFocus>;

        if $z2 == 0 goto label6;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r25.<android.widget.Editor: boolean mFrozenWithFocus> = 1;

        goto label6;

     label4:
        r28 = "";

        $r12 = r1.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r12 == null goto label5;

        r28 = "(restored) ";

     label5:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved cursor position ");

        $i4 = r1.<android.widget.TextView$SavedState: int selStart>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i5 = r1.<android.widget.TextView$SavedState: int selEnd>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text ");

        $r21 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextView", $r23);

     label6:
        $r29 = r1.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        if $r29 == null goto label7;

        $r8 = new android.widget.TextView$1;

        $r9 = r1.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        specialinvoke $r8.<android.widget.TextView$1: void <init>(android.widget.TextView,java.lang.CharSequence)>(r0, $r9);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r8);

     label7:
        $r5 = r1.<android.widget.TextView$SavedState: android.os.ParcelableParcel editorState>;

        if $r5 == null goto label8;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = r1.<android.widget.TextView$SavedState: android.os.ParcelableParcel editorState>;

        virtualinvoke $r7.<android.widget.Editor: void restoreInstanceState(android.os.ParcelableParcel)>($r6);

     label8:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.TextDirectionHeuristic r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $r2 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r2 == r1 goto label1;

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.TextView r0;
        boolean z0, $z2, $z3, z4;
        int i0, i1, i2, i3;
        java.lang.CharSequence $r1, $r6, r12, $r14;
        android.widget.TextView$SavedState $r2;
        android.os.ParcelableParcel $r3;
        java.lang.String $r4;
        android.text.SpannableStringBuilder $r5;
        android.widget.Editor $r7, $r8, r15;
        android.text.style.SuggestionRangeSpan $r9;
        android.os.Parcelable r10;

        r0 := @this: android.widget.TextView;

        r10 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        z0 = virtualinvoke r0.<android.widget.TextView: boolean getFreezesText()>();

        i2 = -1;

        i3 = -1;

        z4 = 0;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r1 == null goto label02;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 >= 0 goto label01;

        z4 = 0;

        i2 = i0;

        i3 = i1;

        if i1 < 0 goto label02;

     label01:
        z4 = 1;

        i3 = i1;

        i2 = i0;

     label02:
        if z0 != 0 goto label04;

        if z4 == 0 goto label03;

        goto label04;

     label03:
        return r10;

     label04:
        $r2 = new android.widget.TextView$SavedState;

        specialinvoke $r2.<android.widget.TextView$SavedState: void <init>(android.os.Parcelable)>(r10);

        if z0 == 0 goto label07;

        r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z3 = r12 instanceof android.text.Spanned;

        if $z3 == 0 goto label06;

        $r5 = new android.text.SpannableStringBuilder;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r6);

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r7 == null goto label05;

        virtualinvoke r0.<android.widget.TextView: void removeMisspelledSpans(android.text.Spannable)>($r5);

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r8.<android.widget.Editor: android.text.style.SuggestionRangeSpan mSuggestionRangeSpan>;

        interfaceinvoke $r5.<android.text.Spannable: void removeSpan(java.lang.Object)>($r9);

     label05:
        $r2.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r5;

        goto label07;

     label06:
        $r4 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

        $r2.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r4;

     label07:
        if z4 == 0 goto label08;

        $r2.<android.widget.TextView$SavedState: int selStart> = i2;

        $r2.<android.widget.TextView$SavedState: int selEnd> = i3;

     label08:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label09;

        if i2 < 0 goto label09;

        if i3 < 0 goto label09;

        $r2.<android.widget.TextView$SavedState: boolean frozenWithFocus> = 1;

     label09:
        $r14 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getError()>();

        $r2.<android.widget.TextView$SavedState: java.lang.CharSequence error> = $r14;

        r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r15 == null goto label10;

        $r3 = virtualinvoke r15.<android.widget.Editor: android.os.ParcelableParcel saveInstanceState()>();

        $r2.<android.widget.TextView$SavedState: android.os.ParcelableParcel editorState> = $r3;

     label10:
        return $r2;
    }

    public void onScreenStateChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onScreenStateChanged(int)>(i0);

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void onScreenStateChanged(int)>(i0);

     label1:
        return;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onScrollChanged(int,int,int,int)>(i0, i1, i2, i3);

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void onScrollChanged()>();

     label1:
        return;
    }

    protected void onSelectionChanged(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEvent(int)>(8192);

        return;
    }

    protected void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean onTextContextMenuItem(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        boolean z0, $z1, $z2, $z3;
        java.lang.CharSequence $r1, $r2, $r6;
        android.content.ClipData $r3, $r7;
        android.content.Context $r4, $r8;
        android.widget.Toast $r5, $r9;
        android.widget.Editor r10, r11, r12, r13;

        r0 := @this: android.widget.TextView;

        i7 := @parameter0: int;

        i8 = 0;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i9 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z1 == 0 goto label01;

        i10 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i10, i0);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i10, i0);

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

     label01:
        if i7 == 16908355 goto label21;

        tableswitch(i7)
        {
            case 16908319: goto label19;
            case 16908320: goto label16;
            case 16908321: goto label13;
            case 16908322: goto label12;
            default: goto label02;
        };

     label02:
        tableswitch(i7)
        {
            case 16908337: goto label11;
            case 16908338: goto label09;
            case 16908339: goto label07;
            case 16908340: goto label05;
            case 16908341: goto label04;
            default: goto label03;
        };

     label03:
        return 0;

     label04:
        specialinvoke r0.<android.widget.TextView: void shareSelectedText()>();

        return 1;

     label05:
        r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r10 == null goto label06;

        virtualinvoke r10.<android.widget.Editor: void replace()>();

     label06:
        return 1;

     label07:
        r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r11 == null goto label08;

        virtualinvoke r11.<android.widget.Editor: void redo()>();

     label08:
        return 1;

     label09:
        r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r12 == null goto label10;

        virtualinvoke r12.<android.widget.Editor: void undo()>();

     label10:
        return 1;

     label11:
        specialinvoke r0.<android.widget.TextView: void paste(int,int,boolean)>(i8, i9, 0);

        return 1;

     label12:
        specialinvoke r0.<android.widget.TextView: void paste(int,int,boolean)>(i8, i9, 1);

        return 1;

     label13:
        i11 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i12 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i11, i12);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i11, i12);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>($i2, $i4);

        $r3 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r2);

        $z2 = specialinvoke r0.<android.widget.TextView: boolean setPrimaryClip(android.content.ClipData)>($r3);

        if $z2 == 0 goto label14;

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

        goto label15;

     label14:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r4, 17040186, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

     label15:
        return 1;

     label16:
        $r6 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i8, i9);

        $r7 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r6);

        $z3 = specialinvoke r0.<android.widget.TextView: boolean setPrimaryClip(android.content.ClipData)>($r7);

        if $z3 == 0 goto label17;

        virtualinvoke r0.<android.widget.TextView: void deleteText_internal(int,int)>(i8, i9);

        goto label18;

     label17:
        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r8, 17040186, 0);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

     label18:
        return 1;

     label19:
        z0 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        virtualinvoke r0.<android.widget.TextView: boolean selectAllText()>();

        r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r13 == null goto label20;

        if z0 == 0 goto label20;

        virtualinvoke r13.<android.widget.Editor: void invalidateActionModeAsync()>();

     label20:
        return 1;

     label21:
        specialinvoke r0.<android.widget.TextView: void requestAutofill()>();

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20, z21;
        java.lang.CharSequence $r2;
        android.text.Layout $r3;
        android.widget.Editor $r4, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19, r21, r22, r23, $r28;
        int $i0, $i1, $i2, $i3, i4;
        android.text.Spannable $r5, $r8;
        java.lang.Object[] $r6;
        android.text.style.ClickableSpan $r7;
        android.widget.Editor$InsertionPointCursorController $r14, $r20;
        android.widget.Editor$SelectionModifierCursorController $r16, $r18;
        android.text.method.MovementMethod $r24, r25;
        android.text.style.ClickableSpan[] r26;
        android.view.inputmethod.InputMethodManager r27;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFromPrimePointer(android.view.MotionEvent,boolean)>(r1, 0);

        if $z2 != 0 goto label01;

        return 1;

     label01:
        i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r21 == null goto label03;

        virtualinvoke r21.<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)>(r1);

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r13.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r14 == null goto label02;

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r19.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        $z17 = virtualinvoke $r20.<android.widget.Editor$InsertionPointCursorController: boolean isCursorBeingModified()>();

        if $z17 == 0 goto label02;

        return 1;

     label02:
        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r15.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r16 == null goto label03;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r18 = $r17.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        $z16 = virtualinvoke $r18.<android.widget.Editor$SelectionModifierCursorController: boolean isDragAcceleratorActive()>();

        if $z16 == 0 goto label03;

        return 1;

     label03:
        z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r22 == null goto label05;

        $z14 = r22.<android.widget.Editor: boolean mDiscardNextActionUp>;

        if $z14 == 0 goto label05;

        if i4 != 1 goto label05;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9.<android.widget.Editor: boolean mDiscardNextActionUp> = 0;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z15 = $r10.<android.widget.Editor: boolean mIsInsertionActionModeStartPending>;

        if $z15 == 0 goto label04;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r11.<android.widget.Editor: void startInsertionActionMode()>();

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12.<android.widget.Editor: boolean mIsInsertionActionModeStartPending> = 0;

     label04:
        return z0;

     label05:
        if i4 != 1 goto label07;

        r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r23 == null goto label06;

        $z13 = r23.<android.widget.Editor: boolean mIgnoreActionUpEvent>;

        if $z13 != 0 goto label07;

     label06:
        $z12 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z12 == 0 goto label07;

        z18 = 1;

        goto label08;

     label07:
        z18 = 0;

     label08:
        $r24 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r24 != null goto label09;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z11 == 0 goto label15;

     label09:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z3 == 0 goto label15;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z4 = $r2 instanceof android.text.Spannable;

        if $z4 == 0 goto label15;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label15;

        z19 = 0;

        r25 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r25 == null goto label10;

        $r8 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $z10 = interfaceinvoke r25.<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r8, r1);

        z19 = 0 | $z10;

     label10:
        z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        z20 = z19;

        if z18 == 0 goto label11;

        z20 = z19;

        $z9 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z9 == 0 goto label11;

        z20 = z19;

        $i0 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i0 == 0 goto label11;

        z20 = z19;

        if z1 == 0 goto label11;

        $r5 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r6 = interfaceinvoke $r5.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "Landroid/text/style/ClickableSpan;");

        r26 = (android.text.style.ClickableSpan[]) $r6;

        z20 = z19;

        $i3 = lengthof r26;

        if $i3 <= 0 goto label11;

        $r7 = r26[0];

        virtualinvoke $r7.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r0);

        z20 = 1;

     label11:
        z21 = z20;

        if z18 == 0 goto label14;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z5 != 0 goto label12;

        z21 = z20;

        if z1 == 0 goto label14;

     label12:
        r27 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r27);

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z6 == 0 goto label13;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z7 = $r4.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z7 == 0 goto label13;

        if r27 == null goto label13;

        virtualinvoke r27.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

     label13:
        $r28 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r28.<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)>(r1);

        z21 = 1;

     label14:
        if z21 == 0 goto label15;

        return 1;

     label15:
        return z0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        android.text.method.MovementMethod r2;
        android.text.Spannable r3;
        android.text.Layout $r4;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r2 == null goto label1;

        r3 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label1;

        $z0 = interfaceinvoke r2.<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, r3, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.widget.TextView r0;
        int i0;
        android.view.View r1;
        android.widget.Editor r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label1;

        if i0 == 0 goto label1;

        virtualinvoke r2.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void onWindowFocusChanged(boolean)>(z0);

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void onWindowFocusChanged(boolean)>(z0);

     label1:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        return;
    }

    public boolean performAccessibilityActionInternal(int, android.os.Bundle)
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z21;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        android.widget.TextView$BufferType $r1, $r2, $r6, $r7;
        android.text.Spannable $r3, $r4, $r5;
        android.widget.Editor $r8, $r9, $r12, r14, r18;
        android.widget.Editor$ProcessTextIntentActionsHandler $r10;
        java.lang.Throwable $r11;
        android.os.Bundle r13;
        java.lang.CharSequence r15, r16, r17;

        r0 := @this: android.widget.TextView;

        i4 := @parameter0: int;

        r13 := @parameter1: android.os.Bundle;

        r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r14 == null goto label01;

        $r10 = r14.<android.widget.Editor: android.widget.Editor$ProcessTextIntentActionsHandler mProcessTextIntentActionsHandler>;

        $z20 = virtualinvoke $r10.<android.widget.Editor$ProcessTextIntentActionsHandler: boolean performAccessibilityAction(int)>(i4);

        if $z20 == 0 goto label01;

        return 1;

     label01:
        lookupswitch(i4)
        {
            case 16: goto label37;
            case 32: goto label30;
            case 256: goto label29;
            case 512: goto label29;
            case 16384: goto label27;
            case 32768: goto label25;
            case 65536: goto label23;
            case 131072: goto label13;
            case 2097152: goto label07;
            case 16908372: goto label05;
            case 268435456: goto label03;
            default: goto label02;
        };

     label02:
        $z19 = specialinvoke r0.<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i4, r13);

        return $z19;

     label03:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z0 == 0 goto label04;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean canShare()>();

        if $z1 == 0 goto label04;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908341);

        if $z2 == 0 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z3 == 0 goto label06;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z4 == 0 goto label06;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getImeActionId()>();

        virtualinvoke r0.<android.widget.TextView: void onEditorAction(int)>($i0);

     label06:
        return 1;

     label07:
        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z5 == 0 goto label12;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        $r1 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r2 == $r1 goto label08;

        goto label12;

     label08:
        if r13 == null goto label09;

        r15 = virtualinvoke r13.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE");

        goto label10;

     label09:
        r15 = null;

     label10:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r15);

        r16 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if r16 == null goto label11;

        i5 = interfaceinvoke r16.<java.lang.CharSequence: int length()>();

        if i5 <= 0 goto label11;

        $r3 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, i5);

     label11:
        return 1;

     label12:
        return 0;

     label13:
        specialinvoke r0.<android.widget.TextView: void ensureIterableTextForAccessibilitySelectable()>();

        r17 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r17 != null goto label14;

        return 0;

     label14:
        if r13 == null goto label15;

        i6 = virtualinvoke r13.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", -1);

        goto label16;

     label15:
        i6 = -1;

     label16:
        if r13 == null goto label17;

        i7 = virtualinvoke r13.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", -1);

        goto label18;

     label17:
        i7 = -1;

     label18:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i1 != i6 goto label19;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i3 == i7 goto label22;

     label19:
        if i6 != i7 goto label20;

        if i7 != -1 goto label20;

        $r5 = (android.text.Spannable) r17;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r5);

        return 1;

     label20:
        if i6 < 0 goto label22;

        if i6 > i7 goto label22;

        $i2 = interfaceinvoke r17.<java.lang.CharSequence: int length()>();

        if i7 > $i2 goto label22;

        $r4 = (android.text.Spannable) r17;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, i6, i7);

        r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r18 == null goto label21;

        virtualinvoke r18.<android.widget.Editor: void startSelectionActionModeAsync(boolean)>(0);

     label21:
        return 1;

     label22:
        return 0;

     label23:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z6 == 0 goto label24;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z7 == 0 goto label24;

        $z8 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        if $z8 == 0 goto label24;

        return 1;

     label24:
        return 0;

     label25:
        $z9 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z9 == 0 goto label26;

        $z10 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z10 == 0 goto label26;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        if $z11 == 0 goto label26;

        return 1;

     label26:
        return 0;

     label27:
        $z12 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z12 == 0 goto label28;

        $z13 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z13 == 0 goto label28;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        if $z14 == 0 goto label28;

        return 1;

     label28:
        return 0;

     label29:
        specialinvoke r0.<android.widget.TextView: void ensureIterableTextForAccessibilitySelectable()>();

        $z15 = specialinvoke r0.<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i4, r13);

        return $z15;

     label30:
        $z16 = virtualinvoke r0.<android.widget.TextView: boolean isLongClickable()>();

        if $z16 == 0 goto label36;

        $z17 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z17 == 0 goto label34;

        $r7 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r7 != $r6 goto label34;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8.<android.widget.Editor: boolean mIsBeingLongClickedByAccessibility> = 1;

     label31:
        z21 = virtualinvoke r0.<android.widget.TextView: boolean performLongClick()>();

     label32:
        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9.<android.widget.Editor: boolean mIsBeingLongClickedByAccessibility> = 0;

        goto label35;

     label33:
        $r11 := @caughtexception;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12.<android.widget.Editor: boolean mIsBeingLongClickedByAccessibility> = 0;

        throw $r11;

     label34:
        z21 = virtualinvoke r0.<android.widget.TextView: boolean performLongClick()>();

     label35:
        return z21;

     label36:
        return 0;

     label37:
        $z18 = specialinvoke r0.<android.widget.TextView: boolean performAccessibilityActionClick(android.os.Bundle)>(r13);

        return $z18;

        catch java.lang.Throwable from label31 to label32 with label33;
    }

    public boolean performLongClick()
    {
        android.widget.TextView r0;
        boolean $z0, $z2, z3, z4, z5;
        android.content.Context $r1;
        android.widget.Editor $r2, r3, r4, r5;

        r0 := @this: android.widget.TextView;

        z3 = 0;

        z4 = 0;

        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label1;

        r3.<android.widget.Editor: boolean mIsBeingLongClicked> = 1;

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean performLongClick()>();

        if $z0 == 0 goto label2;

        z3 = 1;

        z4 = 1;

     label2:
        r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z5 = z3;

        if r4 == null goto label3;

        $z2 = virtualinvoke r4.<android.widget.Editor: boolean performLongClick(boolean)>(z3);

        z5 = z3 | $z2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mIsBeingLongClicked> = 0;

     label3:
        if z5 == 0 goto label5;

        if z4 != 0 goto label4;

        virtualinvoke r0.<android.widget.TextView: boolean performHapticFeedback(int)>(0);

     label4:
        r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r5 == null goto label6;

        r5.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

        goto label6;

     label5:
        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,int)>($r1, 629, 0);

     label6:
        return z5;
    }

    public void populateCharacterBounds(android.view.inputmethod.CursorAnchorInfo$Builder, int, int, float, float)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CursorAnchorInfo$Builder r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i9, $i10, $i11, i12, i13, i14, i15, i16;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f10, f11, f12, f13, f14;
        float[] r2;
        boolean z0, z1, z2, z3;
        android.text.Layout $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15;
        android.text.TextPaint $r9;
        java.lang.CharSequence $r10;
        byte b17, b18;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r3.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = i1 - 1;

        i3 = virtualinvoke $r4.<android.text.Layout: int getLineForOffset(int)>($i6);

        i12 = i2;

     label01:
        if i12 > i3 goto label15;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i13 = virtualinvoke $r5.<android.text.Layout: int getLineStart(int)>(i12);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i14 = virtualinvoke $r6.<android.text.Layout: int getLineEnd(int)>(i12);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i13, i0);

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i14, i1);

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i15 = virtualinvoke $r7.<android.text.Layout: int getParagraphDirection(int)>(i12);

        z3 = 1;

        if i15 != 1 goto label02;

        goto label03;

     label02:
        z3 = 0;

     label03:
        $i7 = i5 - i4;

        r2 = newarray (float)[$i7];

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r9 = virtualinvoke $r8.<android.text.Layout: android.text.TextPaint getPaint()>();

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        virtualinvoke $r9.<android.text.TextPaint: int getTextWidths(java.lang.CharSequence,int,int,float[])>($r10, i4, i5, r2);

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i9 = virtualinvoke $r11.<android.text.Layout: int getLineTop(int)>(i12);

        f2 = (float) $i9;

        $r12 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = virtualinvoke $r12.<android.text.Layout: int getLineBottom(int)>(i12);

        f3 = (float) $i10;

        i16 = i4;

     label04:
        if i16 >= i5 goto label14;

        $i11 = i16 - i4;

        f5 = r2[$i11];

        $r13 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        z0 = virtualinvoke $r13.<android.text.Layout: boolean isRtlCharAt(int)>(i16);

        $r14 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        f6 = virtualinvoke $r14.<android.text.Layout: float getPrimaryHorizontal(int)>(i16);

        $r15 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        f7 = virtualinvoke $r15.<android.text.Layout: float getSecondaryHorizontal(int)>(i16);

        if z3 == 0 goto label06;

        if z0 == 0 goto label05;

        f8 = f7 - f5;

        goto label08;

     label05:
        f10 = f6 + f5;

        f8 = f6;

        f7 = f10;

        goto label08;

     label06:
        if z0 != 0 goto label07;

        f8 = f7;

        f7 = f7 + f5;

        goto label08;

     label07:
        f11 = f6 - f5;

        f7 = f6;

        f8 = f11;

     label08:
        f12 = f8 + f0;

        f4 = f7 + f0;

        f13 = f2 + f1;

        f14 = f3 + f1;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean isPositionVisible(float,float)>(f12, f13);

        z2 = virtualinvoke r0.<android.widget.TextView: boolean isPositionVisible(float,float)>(f4, f14);

        b17 = 0;

        if z1 != 0 goto label09;

        if z2 == 0 goto label10;

     label09:
        b17 = 0 | 1;

     label10:
        if z1 == 0 goto label11;

        b18 = b17;

        if z2 != 0 goto label12;

     label11:
        b18 = b17 | 2;

     label12:
        if z0 == 0 goto label13;

        b18 = b18 | 4;

        goto label13;

     label13:
        virtualinvoke r1.<android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.CursorAnchorInfo$Builder addCharacterBounds(int,float,float,float,float,int)>(i16, f12, f13, f4, f14, b18);

        i16 = i16 + 1;

        goto label04;

     label14:
        i12 = i12 + 1;

        goto label01;

     label15:
        return;
    }

    void removeAdjacentSuggestionSpans(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4;
        android.text.style.SuggestionSpan[] r1;
        boolean $z0, $z1;
        java.lang.Object[] $r2;
        android.text.style.SuggestionSpan $r3, $r4, $r5;
        java.lang.CharSequence r6;
        android.text.Editable r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r6 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        return;

     label1:
        r7 = (android.text.Editable) r6;

        $r2 = interfaceinvoke r7.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i0, class "Landroid/text/style/SuggestionSpan;");

        r1 = (android.text.style.SuggestionSpan[]) $r2;

        i1 = lengthof r1;

        i4 = 0;

     label2:
        if i4 >= i1 goto label5;

        $r3 = r1[i4];

        i2 = interfaceinvoke r7.<android.text.Editable: int getSpanStart(java.lang.Object)>($r3);

        $r4 = r1[i4];

        i3 = interfaceinvoke r7.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r4);

        if i3 == i0 goto label3;

        if i2 != i0 goto label4;

     label3:
        $z1 = staticinvoke <android.widget.SpellChecker: boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int)>(r7, i0, i0, i2, i3);

        if $z1 == 0 goto label4;

        $r5 = r1[i4];

        interfaceinvoke r7.<android.text.Editable: void removeSpan(java.lang.Object)>($r5);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        return;
    }

    void removeMisspelledSpans(android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.style.SuggestionSpan[] r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r3;
        android.text.style.SuggestionSpan $r4, $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable;

        $i1 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Landroid/text/style/SuggestionSpan;");

        r2 = (android.text.style.SuggestionSpan[]) $r3;

        i5 = 0;

     label1:
        $i2 = lengthof r2;

        if i5 >= $i2 goto label3;

        $r4 = r2[i5];

        i0 = virtualinvoke $r4.<android.text.style.SuggestionSpan: int getFlags()>();

        $i3 = i0 & 1;

        if $i3 == 0 goto label2;

        $i4 = i0 & 2;

        if $i4 == 0 goto label2;

        $r5 = r2[i5];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r5);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        android.text.style.SuggestionSpan[] r1;
        boolean $z0, $z1;
        android.text.Spannable$Factory $r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object[] $r3;
        android.text.style.SuggestionSpan $r4;
        java.lang.CharSequence r5, r9;
        java.lang.Object r6;
        android.text.Spannable r7, r8;

        r0 := @this: android.widget.TextView;

        r5 := @parameter0: java.lang.CharSequence;

        r6 = r5;

        $z0 = r5 instanceof android.text.Spanned;

        if $z0 == 0 goto label5;

        $z1 = r5 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        r7 = (android.text.Spannable) r5;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r7 = virtualinvoke $r2.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r5);

     label2:
        $i0 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        $r3 = interfaceinvoke r7.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroid/text/style/SuggestionSpan;");

        r1 = (android.text.style.SuggestionSpan[]) $r3;

        $i1 = lengthof r1;

        if $i1 != 0 goto label3;

        return r5;

     label3:
        r8 = r7;

        i3 = 0;

     label4:
        r6 = r8;

        $i2 = lengthof r1;

        if i3 >= $i2 goto label5;

        $r4 = r1[i3];

        interfaceinvoke r7.<android.text.Spannable: void removeSpan(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label4;

     label5:
        r9 = (java.lang.CharSequence) r6;

        return r9;
    }

    public void removeTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        java.util.ArrayList r2, $r3;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    void replaceSelectionWithText(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2;
        android.text.Editable $r3;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>($i0, $i1, r1);

        return;
    }

    protected void replaceText_internal(int, int, java.lang.CharSequence)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        return;
    }

    public boolean requestActionMode(android.view.textclassifier.TextLinks$TextLinkSpan)
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextLinks$TextLinkSpan r1;
        java.lang.CharSequence r2, $r5, $r7;
        int i0, i1, $i2;
        boolean $z0;
        android.text.Spanned $r4, $r6;
        android.widget.Editor $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.textclassifier.TextLinks$TextLinkSpan;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r2 instanceof android.text.Spanned;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = (android.text.Spanned) r2;

        i0 = interfaceinvoke $r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r1);

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spanned) $r5;

        i1 = interfaceinvoke $r6.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r1);

        if i0 < 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label3;

        if i0 < i1 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: void startLinkActionModeAsync(int,int)>(i0, i1);

        return 1;

     label3:
        return 0;
    }

    public void resetErrorChangedFlag()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        r1.<android.widget.Editor: boolean mErrorWasChanged> = 0;

     label1:
        return;
    }

    protected void resetResolvedDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void resetResolvedDrawables()>();

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        return;
    }

    boolean selectAllText()
    {
        android.widget.TextView r0;
        int i0;
        android.text.Spannable r1;
        android.widget.Editor $r2;
        java.lang.CharSequence $r3;
        boolean z0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void hideFloatingToolbar(int)>(500);

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        r1 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        z0 = 0;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r1, 0, i0);

        if i0 <= 0 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    public void sendAccessibilityEventInternal(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor r1;
        android.widget.Editor$ProcessTextIntentActionsHandler $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 32768 goto label1;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.Editor: android.widget.Editor$ProcessTextIntentActionsHandler mProcessTextIntentActionsHandler>;

        virtualinvoke $r2.<android.widget.Editor$ProcessTextIntentActionsHandler: void initializeAccessibilityActions()>();

     label1:
        specialinvoke r0.<android.view.View: void sendAccessibilityEventInternal(int)>(i0);

        return;
    }

    void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(16);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i0);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>(i1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>(i2);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 4096 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    void sendAfterTextChanged(android.text.Editable)
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        java.util.ArrayList r2, $r3;
        int i0, i1;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.widget.TextView: void notifyListeningManagersAfterTextChanged()>();

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        return;
    }

    void sendOnTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4;
        java.util.ArrayList r1, $r2;
        java.lang.Object $r3;
        android.text.TextWatcher $r4;
        java.lang.CharSequence r5;
        android.widget.Editor r6;

        r0 := @this: android.widget.TextView;

        r5 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 == null goto label2;

        r1 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r4 = (android.text.TextWatcher) $r3;

        interfaceinvoke $r4.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>(r5, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r6 == null goto label3;

        virtualinvoke r6.<android.widget.Editor: void sendOnTextChanged(int,int,int)>(i0, i1, i2);

     label3:
        return;
    }

    public void setAccessibilitySelection(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.text.Spannable $r1, $r3;
        android.widget.Editor $r2, r5;
        java.lang.CharSequence r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionStart()>();

        if $i2 != i0 goto label1;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionEnd()>();

        if $i6 != i1 goto label1;

        return;

     label1:
        r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        if $i3 < 0 goto label2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i5 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        if $i4 > $i5 goto label2;

        $r3 = (android.text.Spannable) r4;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, i0, i1);

        goto label3;

     label2:
        $r1 = (android.text.Spannable) r4;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r1);

     label3:
        r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r5 == null goto label4;

        virtualinvoke r5.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void stopTextActionMode()>();

     label4:
        return;
    }

    public void setAllCaps(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.method.AllCapsTransformationMethod $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new android.text.method.AllCapsTransformationMethod;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r1.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r2);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

     label2:
        return;
    }

    public final void setAutoLinkMask(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mAutoLinkMask> = i0;

        return;
    }

    public void setAutoSizeTextTypeUniformWithConfiguration(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.util.DisplayMetrics r1;
        boolean $z0, $z1;
        android.content.res.Resources $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = (float) i0;

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i3, $f0, r1);

        $f2 = (float) i1;

        $f3 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i3, $f2, r1);

        $f4 = (float) i2;

        $f5 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i3, $f4, r1);

        specialinvoke r0.<android.widget.TextView: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)>($f1, $f3, $f5);

        $z1 = specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeText()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setAutoSizeTextTypeUniformWithPresetSizes(int[], int)
    {
        android.widget.TextView r0;
        int[] r1, r2, $r5, r12;
        int i0, i1, $i2, $i3, i4;
        android.util.DisplayMetrics r3;
        boolean $z0, $z1, $z2;
        android.content.res.Resources $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r11;
        java.lang.IllegalArgumentException $r10;
        float $f0, $f1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label7;

        i1 = lengthof r1;

        if i1 <= 0 goto label5;

        r2 = newarray (int)[i1];

        if i0 != 0 goto label1;

        r12 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, i1);

        goto label3;

     label1:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i4 = 0;

     label2:
        r12 = r2;

        if i4 >= i1 goto label3;

        $i2 = r1[i4];

        $f0 = (float) $i2;

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i0, $f0, r3);

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r2[i4] = $i3;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = specialinvoke r0.<android.widget.TextView: int[] cleanupAutoSizePresetSizes(int[])>(r12);

        r0.<android.widget.TextView: int[] mAutoSizeTextSizesInPx> = $r5;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeUniformPresetSizesConfiguration()>();

        if $z2 == 0 goto label4;

        goto label6;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("None of the preset sizes is valid: ");

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label5:
        r0.<android.widget.TextView: boolean mHasPresetAutoSizeValues> = 0;

     label6:
        $z1 = specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeText()>();

        if $z1 == 0 goto label7;

        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label7:
        return;
    }

    public void setAutoSizeTextTypeWithDefaults(int)
    {
        android.widget.TextView r0;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.content.res.Resources $r6;
        float $f0, $f1;
        android.util.DisplayMetrics r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean supportsAutoSizeText()>();

        if $z0 == 0 goto label3;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(2, 12.0F, r7);

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(2, 112.0F, r7);

        specialinvoke r0.<android.widget.TextView: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)>($f0, $f1, 1.0F);

        $z1 = specialinvoke r0.<android.widget.TextView: boolean setupAutoSizeText()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.widget.TextView: void autoSizeText()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label3;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown auto-size text type: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        specialinvoke r0.<android.widget.TextView: void clearAutoSizeConfiguration()>();

     label3:
        return;
    }

    public void setBreakStrategy(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mBreakStrategy> = i0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setCompoundDrawablePadding(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$Drawables $r1, r3, r4;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if i0 != 0 goto label1;

        if r3 == null goto label3;

        r3.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

        goto label3;

     label1:
        r4 = r3;

        if r3 != null goto label2;

        $r1 = new android.widget.TextView$Drawables;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r1.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r2);

        r4 = $r1;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r1;

     label2:
        r4.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

     label3:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public void setCompoundDrawableTintBlendMode(android.graphics.BlendMode)
    {
        android.widget.TextView r0;
        android.graphics.BlendMode r1;
        android.widget.TextView$Drawables $r2, $r3, $r4, $r5;
        android.content.Context $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 != null goto label1;

        $r5 = new android.widget.TextView$Drawables;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r6);

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r5;

     label1:
        $r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3.<android.widget.TextView$Drawables: android.graphics.BlendMode mBlendMode> = r1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r4.<android.widget.TextView$Drawables: boolean mHasTintMode> = 1;

        specialinvoke r0.<android.widget.TextView: void applyCompoundDrawableTint()>();

        return;
    }

    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;
        android.widget.TextView$Drawables $r2, $r3, $r4, $r5;
        android.content.Context $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 != null goto label1;

        $r5 = new android.widget.TextView$Drawables;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r6);

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r5;

     label1:
        $r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3.<android.widget.TextView$Drawables: android.content.res.ColorStateList mTintList> = r1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r4.<android.widget.TextView$Drawables: boolean mHasTint> = 1;

        specialinvoke r0.<android.widget.TextView: void applyCompoundDrawableTint()>();

        return;
    }

    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.TextView r0;
        int $i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.BlendMode r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        if r1 == null goto label1;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawableTintBlendMode(android.graphics.BlendMode)>(r2);

        return;
    }

    public void setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r29, $r32, $r33, $r34, $r35, $r36, $r42, $r45, $r48;
        int[] r5;
        android.widget.TextView$Drawables $r6, $r25, r37, r38;
        android.graphics.drawable.Drawable[] $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r27, $r28, $r30, $r31, $r40, $r41, $r43, $r44, $r46, $r47, $r49;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.content.Context $r26;
        boolean $z4, z5;
        android.graphics.Rect r50;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r37 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r37 == null goto label03;

        $r33 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r33 == null goto label01;

        $r36 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r36.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label01:
        r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = null;

        $r34 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r34 == null goto label02;

        $r35 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r35.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label02:
        r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = null;

        r37.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label03:
        if r1 != null goto label05;

        if r2 != null goto label05;

        if r3 != null goto label05;

        if r4 == null goto label04;

        goto label05;

     label04:
        z5 = 0;

        goto label06;

     label05:
        z5 = 1;

     label06:
        if z5 != 0 goto label11;

        r38 = r37;

        if r37 == null goto label24;

        $z4 = virtualinvoke r37.<android.widget.TextView$Drawables: boolean hasMetadata()>();

        if $z4 != 0 goto label07;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

        r38 = r37;

        goto label24;

     label07:
        $r27 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $i8 = lengthof $r27;

        i9 = $i8 - 1;

     label08:
        if i9 < 0 goto label10;

        $r28 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r29 = $r28[i9];

        if $r29 == null goto label09;

        $r31 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r32 = $r31[i9];

        virtualinvoke $r32.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        $r30 = r37.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r30[i9] = null;

        i9 = i9 + -1;

        goto label08;

     label10:
        r37.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r37.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        r38 = r37;

        goto label24;

     label11:
        r38 = r37;

        if r37 != null goto label12;

        $r25 = new android.widget.TextView$Drawables;

        $r26 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r25.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r26);

        r38 = $r25;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r25;

     label12:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6.<android.widget.TextView$Drawables: boolean mOverride> = 0;

        $r7 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r8 = $r7[0];

        if $r8 == r1 goto label13;

        $r21 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r22 = $r21[0];

        if $r22 == null goto label13;

        $r23 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r24 = $r23[0];

        virtualinvoke $r24.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label13:
        $r40 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r40[0] = r1;

        $r41 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r42 = $r41[1];

        if $r42 == r2 goto label14;

        $r17 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r18 = $r17[1];

        if $r18 == null goto label14;

        $r19 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r20 = $r19[1];

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        $r43 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r43[1] = r2;

        $r44 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r45 = $r44[2];

        if $r45 == r3 goto label15;

        $r13 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r14 = $r13[2];

        if $r14 == null goto label15;

        $r15 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r16 = $r15[2];

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        $r46 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r46[2] = r3;

        $r47 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r48 = $r47[3];

        if $r48 == r4 goto label16;

        $r9 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r10 = $r9[3];

        if $r10 == null goto label16;

        $r11 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r12 = $r11[3];

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label16:
        $r49 = r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r49[3] = r4;

        r50 = r38.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r5 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label17;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r50);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r50.<android.graphics.Rect: int width()>();

        r38.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = $i6;

        $i7 = virtualinvoke r50.<android.graphics.Rect: int height()>();

        r38.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = $i7;

        goto label18;

     label17:
        r38.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r38.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

     label18:
        if r3 == null goto label19;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r50);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i4 = virtualinvoke r50.<android.graphics.Rect: int width()>();

        r38.<android.widget.TextView$Drawables: int mDrawableSizeRight> = $i4;

        $i5 = virtualinvoke r50.<android.graphics.Rect: int height()>();

        r38.<android.widget.TextView$Drawables: int mDrawableHeightRight> = $i5;

        goto label20;

     label19:
        r38.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r38.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

     label20:
        if r2 == null goto label21;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r50);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i2 = virtualinvoke r50.<android.graphics.Rect: int height()>();

        r38.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i2;

        $i3 = virtualinvoke r50.<android.graphics.Rect: int width()>();

        r38.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i3;

        goto label22;

     label21:
        r38.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r38.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

     label22:
        if r4 == null goto label23;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r50);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r50.<android.graphics.Rect: int height()>();

        r38.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i0;

        $i1 = virtualinvoke r50.<android.graphics.Rect: int width()>();

        r38.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i1;

        goto label24;

     label23:
        r38.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r38.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

     label24:
        if r38 == null goto label25;

        r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeftInitial> = r1;

        r38.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRightInitial> = r3;

     label25:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        specialinvoke r0.<android.widget.TextView: void applyCompoundDrawableTint()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public void setCompoundDrawablesRelative(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r7, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r22, $r24, $r26, $r28, $r31, $r32, $r34, $r35, $r37, $r39, $r41, $r43, $r50, $r52, $r54;
        int[] r5;
        android.widget.TextView$Drawables $r6, $r20, r44, r47;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.Drawable[] $r8, $r10, $r14, $r16, $r23, $r25, $r27, $r29, $r30, $r33, $r36, $r38, $r40, $r42, r45, r46, $r49, $r51, $r53, $r55;
        android.content.Context $r21;
        boolean $z4, z5;
        android.graphics.Rect r56;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r44 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r44 == null goto label03;

        $r36 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r37 = $r36[0];

        if $r37 == null goto label01;

        $r42 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r43 = $r42[0];

        virtualinvoke $r43.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label01:
        r45 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeftInitial> = null;

        r45[0] = null;

        $r38 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r39 = $r38[2];

        if $r39 == null goto label02;

        $r40 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r41 = $r40[2];

        virtualinvoke $r41.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label02:
        r46 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRightInitial> = null;

        r46[2] = null;

        r44.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

     label03:
        if r1 != null goto label05;

        if r2 != null goto label05;

        if r3 != null goto label05;

        if r4 == null goto label04;

        goto label05;

     label04:
        z5 = 0;

        goto label06;

     label05:
        z5 = 1;

     label06:
        if z5 != 0 goto label12;

        if r44 == null goto label25;

        $z4 = virtualinvoke r44.<android.widget.TextView$Drawables: boolean hasMetadata()>();

        if $z4 != 0 goto label07;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

        goto label25;

     label07:
        $r22 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r22 == null goto label08;

        $r35 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r35.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label08:
        r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = null;

        $r23 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r24 = $r23[1];

        if $r24 == null goto label09;

        $r33 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r34 = $r33[1];

        virtualinvoke $r34.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        $r25 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r25[1] = null;

        $r26 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r26 == null goto label10;

        $r32 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r32.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label10:
        r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = null;

        $r27 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r28 = $r27[3];

        if $r28 == null goto label11;

        $r30 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r31 = $r30[3];

        virtualinvoke $r31.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label11:
        $r29 = r44.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r29[3] = null;

        r44.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r44.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label25;

     label12:
        r47 = r44;

        if r44 != null goto label13;

        $r20 = new android.widget.TextView$Drawables;

        $r21 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r20.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r21);

        r47 = $r20;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r20;

     label13:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        $r7 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r7 == r1 goto label14;

        $r18 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r18 == null goto label14;

        $r19 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r19.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $r49 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r50 = $r49[1];

        if $r50 == r2 goto label15;

        $r14 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r15 = $r14[1];

        if $r15 == null goto label15;

        $r16 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r17 = $r16[1];

        virtualinvoke $r17.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        $r51 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r51[1] = r2;

        $r52 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r52 == r3 goto label16;

        $r12 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r12 == null goto label16;

        $r13 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label16:
        r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r3;

        $r53 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r54 = $r53[3];

        if $r54 == r4 goto label17;

        $r8 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r9 = $r8[3];

        if $r9 == null goto label17;

        $r10 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r11 = $r10[3];

        virtualinvoke $r11.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label17:
        $r55 = r47.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        $r55[3] = r4;

        r56 = r47.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r5 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label18;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r56);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r56.<android.graphics.Rect: int width()>();

        r47.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i6;

        $i7 = virtualinvoke r56.<android.graphics.Rect: int height()>();

        r47.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i7;

        goto label19;

     label18:
        r47.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r47.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

     label19:
        if r3 == null goto label20;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r56);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i4 = virtualinvoke r56.<android.graphics.Rect: int width()>();

        r47.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i4;

        $i5 = virtualinvoke r56.<android.graphics.Rect: int height()>();

        r47.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i5;

        goto label21;

     label20:
        r47.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r47.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label21:
        if r2 == null goto label22;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r56);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i2 = virtualinvoke r56.<android.graphics.Rect: int height()>();

        r47.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i2;

        $i3 = virtualinvoke r56.<android.graphics.Rect: int width()>();

        r47.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i3;

        goto label23;

     label22:
        r47.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r47.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

     label23:
        if r4 == null goto label24;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r56);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r56.<android.graphics.Rect: int height()>();

        r47.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i0;

        $i1 = virtualinvoke r56.<android.graphics.Rect: int width()>();

        r47.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i1;

        goto label25;

     label24:
        r47.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r47.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

     label25:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.Context r1;
        android.graphics.drawable.Drawable r2, r3, r4, r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r2 = null;

        if i0 == 0 goto label1;

        r3 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        if i1 == 0 goto label3;

        r4 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        goto label4;

     label3:
        r4 = null;

     label4:
        if i2 == 0 goto label5;

        r5 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        goto label6;

     label5:
        r5 = null;

     label6:
        if i3 == 0 goto label7;

        r2 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i3);

     label7:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r3, r4, r5, r2);

        return;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.Context r1;
        android.graphics.drawable.Drawable r2, r3, r4, r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r2 = null;

        if i0 == 0 goto label1;

        r3 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r3 = null;

     label2:
        if i1 == 0 goto label3;

        r4 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        goto label4;

     label3:
        r4 = null;

     label4:
        if i2 == 0 goto label5;

        r5 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        goto label6;

     label5:
        r5 = null;

     label6:
        if i3 == 0 goto label7;

        r2 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i3);

     label7:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r3, r4, r5, r2);

        return;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    protected void setCursorPosition_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r2, i0, i1);

        return;
    }

    public void setCursorVisible(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r1.<android.widget.Editor: boolean mCursorVisible>;

        if $z1 == z0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mCursorVisible> = z0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void makeBlink()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label2:
        return;
    }

    public void setCustomInsertionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomInsertionActionModeCallback> = r1;

        return;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback> = r1;

        return;
    }

    public final void setEditableFactory(android.text.Editable$Factory)
    {
        android.widget.TextView r0;
        android.text.Editable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable$Factory;

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public void setElegantTextHeight(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.TextPaint $r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $z1 = virtualinvoke $r1.<android.text.TextPaint: boolean isElegantTextHeight()>();

        if z0 == $z1 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setElegantTextHeight(boolean)>(z0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextUtils$TruncateAt;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == r1 goto label1;

        r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize> = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        android.widget.Editor $r1, $r2, r6;
        android.os.IBinder $r3;
        android.view.inputmethod.InputMethodManager r4, r5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if z0 != $z1 goto label1;

        return;

     label1:
        if z0 != 0 goto label2;

        r4 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r4 == null goto label2;

        $z2 = virtualinvoke r4.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z2 == 0 goto label2;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, 0);

     label2:
        specialinvoke r0.<android.view.View: void setEnabled(boolean)>(z0);

        if z0 == 0 goto label3;

        r5 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r5 == null goto label3;

        virtualinvoke r5.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label3:
        r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r6 == null goto label4;

        virtualinvoke r6.<android.widget.Editor: void invalidateTextDisplayList()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void prepareCursorControllers()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void makeBlink()>();

     label4:
        return;
    }

    public void setError(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.content.Context $r3;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r2 = virtualinvoke $r3.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302885);

        $i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

     label2:
        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;
    }

    public void setExtractedText(android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedText r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r12, $r14;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13;
        boolean $z0, $z1;
        android.text.Spanned $r10;
        android.widget.TextView$BufferType $r11;
        android.text.Editable r13;
        android.text.Spannable r15;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedText;

        r13 = virtualinvoke r0.<android.widget.TextView: android.text.Editable getEditableText()>();

        $r2 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        if $r2 == null goto label07;

        if r13 != null goto label01;

        $r12 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $r11 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r12, $r11);

        goto label07;

     label01:
        i2 = interfaceinvoke r13.<android.text.Editable: int length()>();

        $i0 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if $i0 < 0 goto label04;

        i3 = interfaceinvoke r13.<android.text.Editable: int length()>();

        i4 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        i5 = i4;

        if i4 <= i3 goto label02;

        i5 = i3;

     label02:
        i6 = r1.<android.view.inputmethod.ExtractedText: int partialEndOffset>;

        i2 = i6;

        if i6 <= i3 goto label03;

        i2 = i3;

     label03:
        goto label05;

     label04:
        i5 = 0;

     label05:
        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>(r13, i5, i2);

        $r4 = interfaceinvoke r13.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i5, i2);

        $r5 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r5);

        if $z0 == 0 goto label06;

        $r8 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $z1 = $r8 instanceof android.text.Spanned;

        if $z1 == 0 goto label07;

        $r9 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $r10 = (android.text.Spanned) $r9;

        $i1 = i2 - i5;

        staticinvoke <android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>($r10, 0, $i1, class "Ljava/lang/Object;", r13, i5);

        goto label07;

     label06:
        $r6 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke r13.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i5, i2, $r6);

     label07:
        $r14 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        r15 = (android.text.Spannable) $r14;

        i7 = interfaceinvoke r15.<android.text.Spannable: int length()>();

        i8 = r1.<android.view.inputmethod.ExtractedText: int selectionStart>;

        if i8 >= 0 goto label08;

        i9 = 0;

        goto label09;

     label08:
        i9 = i8;

        if i8 <= i7 goto label09;

        i9 = i7;

     label09:
        i10 = r1.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        if i10 >= 0 goto label10;

        i11 = 0;

        goto label11;

     label10:
        i11 = i10;

        if i10 <= i7 goto label11;

        i11 = i7;

     label11:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r15, i9, i11);

        $i12 = r1.<android.view.inputmethod.ExtractedText: int flags>;

        $i13 = $i12 & 2;

        if $i13 == 0 goto label12;

        staticinvoke <android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>(r0, r15);

        goto label13;

     label12:
        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>(r0, r15);

     label13:
        $r3 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence hint>;

        specialinvoke r0.<android.widget.TextView: void setHintInternal(java.lang.CharSequence)>($r3);

        return;
    }

    public void setExtracting(android.view.inputmethod.ExtractedTextRequest)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.widget.Editor $r2, $r4, $r5, $r7, $r9;
        android.widget.Editor$InputMethodState $r3, $r10;
        android.widget.Editor$SelectionModifierCursorController $r6, $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r3 == null goto label1;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = $r9.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        $r10.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest> = r1;

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void hideCursorAndSpanControllers()>();

        virtualinvoke r0.<android.widget.TextView: void stopTextActionMode()>();

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r6 == null goto label2;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r8.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

     label2:
        return;
    }

    public void setFallbackLineSpacing(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mUseFallbackLineSpacing>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mUseFallbackLineSpacing> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.InputFilter[] r1;
        java.lang.CharSequence r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.text.Editable $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.InputFilter[];

        if r1 == null goto label2;

        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = r1;

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = r2 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r4 = (android.text.Editable) r2;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r4, r1);

     label1:
        return;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public void setFirstBaselineToTopHeight(int)
    {
        android.widget.TextView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8;
        android.graphics.Paint$FontMetricsInt r1;
        android.text.TextPaint $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        r1 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getIncludeFontPadding()>();

        if $z0 == 0 goto label1;

        i7 = r1.<android.graphics.Paint$FontMetricsInt: int top>;

        goto label2;

     label1:
        i7 = r1.<android.graphics.Paint$FontMetricsInt: int ascent>;

     label2:
        $i2 = staticinvoke <java.lang.Math: int abs(int)>(i7);

        if i0 <= $i2 goto label3;

        i8 = neg i7;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getPaddingLeft()>();

        $i4 = i0 - i8;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingRight()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getPaddingBottom()>();

        virtualinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i3, $i4, $i5, $i6);

     label3:
        return;
    }

    public void setFontFeatureSettings(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1, $r3;
        android.text.TextPaint $r2, $r4;
        android.text.Layout $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: java.lang.String getFontFeatureSettings()>();

        if r1 == $r3 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: void setFontFeatureSettings(java.lang.String)>(r1);

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public boolean setFontVariationSettings(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        android.text.TextPaint $r3, $r4;
        android.text.Layout $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r2 = virtualinvoke $r3.<android.text.TextPaint: java.lang.String getFontVariationSettings()>();

        if r1 == r2 goto label3;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        goto label3;

     label1:
        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        z0 = virtualinvoke $r4.<android.text.TextPaint: boolean setFontVariationSettings(java.lang.String)>(r1);

        if z0 == 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label2;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return z0;

     label3:
        return 1;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        boolean z0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void setFrame()>();

     label1:
        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        return z0;
    }

    public void setFreezesText(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mFreezesText> = z0;

        return;
    }

    public void setGravity(int)
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        boolean z0;
        android.text.Layout r1, r2;
        android.text.BoringLayout$Metrics r3;

        r0 := @this: android.widget.TextView;

        i13 := @parameter0: int;

        i14 = i13;

        $i0 = i13 & 8388615;

        if $i0 != 0 goto label1;

        i14 = i13 | 8388611;

     label1:
        i15 = i14;

        $i1 = i14 & 112;

        if $i1 != 0 goto label2;

        i15 = i14 | 48;

     label2:
        z0 = 0;

        $i4 = i15 & 8388615;

        $i2 = r0.<android.widget.TextView: int mGravity>;

        $i3 = 8388615 & $i2;

        if $i4 == $i3 goto label3;

        z0 = 1;

     label3:
        $i5 = r0.<android.widget.TextView: int mGravity>;

        if i15 == $i5 goto label4;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label4:
        r0.<android.widget.TextView: int mGravity> = i15;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if r1 == null goto label7;

        if z0 == 0 goto label7;

        i16 = virtualinvoke r1.<android.text.Layout: int getWidth()>();

        r2 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r2 != null goto label5;

        i17 = 0;

        goto label6;

     label5:
        i17 = virtualinvoke r2.<android.text.Layout: int getWidth()>();

     label6:
        r3 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i7 = r0.<android.widget.TextView: int mRight>;

        $i6 = r0.<android.widget.TextView: int mLeft>;

        $i8 = $i7 - $i6;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i12 = $i10 - $i11;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i16, i17, r3, r3, $i12, 1);

     label7:
        return;
    }

    public void setHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setHighlightColor(int)
    {
        android.widget.TextView r0;
        int i0, $i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mHighlightColor>;

        if $i1 == i0 goto label1;

        r0.<android.widget.TextView: int mHighlightColor> = i0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public final void setHint(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mHintId> = i0;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setHint(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.Editor $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.widget.TextView: void setHintInternal(java.lang.CharSequence)>(r1);

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isInputMethodTarget()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: boolean reportExtractedText()>();

     label1:
        return;
    }

    public final void setHintTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setHintTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setHorizontallyScrolling(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mHorizontallyScrolling> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setHyphenationFrequency(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mHyphenationFrequency> = i0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setImeActionLabel(java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0;
        android.widget.Editor $r2, $r3, $r5;
        android.widget.Editor$InputContentType $r4, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = r1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6.<android.widget.Editor$InputContentType: int imeActionId> = i0;

        return;
    }

    public void setImeHintLocales(android.os.LocaleList)
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.widget.Editor$InputContentType $r3;
        boolean $z0;
        android.os.LocaleList r4;
        java.util.Locale r5;

        r0 := @this: android.widget.TextView;

        r4 := @parameter0: android.os.LocaleList;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r3.<android.widget.Editor$InputContentType: android.os.LocaleList imeHintLocales> = r4;

        $z0 = r0.<android.widget.TextView: boolean mUseInternationalizedInput>;

        if $z0 == 0 goto label3;

        if r4 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        r5 = virtualinvoke r4.<android.os.LocaleList: java.util.Locale get(int)>(0);

     label2:
        specialinvoke r0.<android.widget.TextView: void changeListenerLocaleTo(java.util.Locale)>(r5);

     label3:
        return;
    }

    public void setImeOptions(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;
        android.widget.Editor$InputContentType $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r3.<android.widget.Editor$InputContentType: int imeOptions> = i0;

        return;
    }

    public void setIncludeFontPadding(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mIncludePad>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mIncludePad> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setInputExtras(int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources $r2, $r7;
        android.widget.Editor $r3, $r4, $r8;
        android.os.Bundle $r5, $r10;
        android.widget.Editor$InputContentType $r6, $r9;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        $r6.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r5;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r8.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r10 = $r9.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        virtualinvoke $r7.<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>(r1, $r10);

        return;
    }

    public void setInputType(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        boolean z0, z1, z2, $z4, z5, z6, $z7, z8, $z9, $z10;
        android.view.inputmethod.InputMethodManager r1;
        android.text.method.TransformationMethod $r2, $r6;
        android.text.method.PasswordTransformationMethod $r3, $r7, $r8;
        java.lang.CharSequence $r4, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z5 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>($i1);

        $i2 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z0 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>($i2);

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i0, 0);

        z1 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        z2 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>(i0);

        z6 = 0;

        if z1 == 0 goto label1;

        $r8 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r8);

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(android.graphics.Typeface,java.lang.String,int,int,int)>(null, null, 3, 0, -1);

        z6 = 0;

        goto label5;

     label1:
        if z2 == 0 goto label3;

        $r6 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r7 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        if $r6 != $r7 goto label2;

        z6 = 1;

     label2:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(android.graphics.Typeface,java.lang.String,int,int,int)>(null, null, 3, 0, -1);

        goto label5;

     label3:
        if z5 != 0 goto label4;

        z6 = 0;

        if z0 == 0 goto label5;

     label4:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(android.graphics.Typeface,java.lang.String,int,int,int)>(null, null, -1, 0, -1);

        z6 = 0;

        $r2 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r3 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        if $r2 != $r3 goto label5;

        z6 = 1;

     label5:
        $z7 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i0);

        z8 = $z7 ^ 1;

        $z9 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z9 != z8 goto label6;

        if z6 == 0 goto label7;

     label6:
        $z4 = z1 ^ 1;

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z8, $z4, 1);

     label7:
        $z10 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z10 != 0 goto label8;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r4);

        specialinvoke r0.<android.widget.TextView: void setTextInternal(java.lang.CharSequence)>($r5);

     label8:
        r1 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r1 == null goto label9;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label9:
        return;
    }

    public void setJustificationMode(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mJustificationMode> = i0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setKeyListener(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.text.method.KeyListener r1;
        android.widget.Editor r2;
        android.view.inputmethod.InputMethodManager r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.KeyListener;

        r0.<android.widget.TextView: boolean mListenerChanged> = 1;

        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r1);

        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        specialinvoke r0.<android.widget.TextView: void setInputTypeFromEditor()>();

        goto label2;

     label1:
        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label2;

        r2.<android.widget.Editor: int mInputType> = 0;

     label2:
        r3 = specialinvoke r0.<android.widget.TextView: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        if r3 == null goto label3;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label3:
        return;
    }

    public void setLastBaselineToBottomHeight(int)
    {
        android.widget.TextView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i7;
        android.graphics.Paint$FontMetricsInt r1;
        android.text.TextPaint $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        r1 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getIncludeFontPadding()>();

        if $z0 == 0 goto label1;

        i7 = r1.<android.graphics.Paint$FontMetricsInt: int bottom>;

        goto label2;

     label1:
        i7 = r1.<android.graphics.Paint$FontMetricsInt: int descent>;

     label2:
        $i2 = staticinvoke <java.lang.Math: int abs(int)>(i7);

        if i0 <= $i2 goto label3;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getPaddingLeft()>();

        $i4 = virtualinvoke r0.<android.widget.TextView: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingRight()>();

        $i6 = i0 - i7;

        virtualinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i3, $i4, $i5, $i6);

     label3:
        return;
    }

    public void setLetterSpacing(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getLetterSpacing()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setLetterSpacing(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setLineHeight(int)
    {
        android.widget.TextView r0;
        int i0, i1, $i3;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int)>(i0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextPaint getPaint()>();

        i1 = virtualinvoke $r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        if i0 == i1 goto label1;

        $i3 = i0 - i1;

        $f0 = (float) $i3;

        virtualinvoke r0.<android.widget.TextView: void setLineSpacing(float,float)>($f0, 1.0F);

     label1:
        return;
    }

    public void setLineSpacing(float, float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $b0 = $f2 cmpl f0;

        if $b0 != 0 goto label1;

        $f3 = r0.<android.widget.TextView: float mSpacingMult>;

        $b1 = $f3 cmpl f1;

        if $b1 == 0 goto label2;

     label1:
        r0.<android.widget.TextView: float mSpacingAdd> = f0;

        r0.<android.widget.TextView: float mSpacingMult> = f1;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    public void setLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setLinkTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinkTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinksClickable(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mLinksClickable> = z0;

        return;
    }

    public void setMarqueeRepeatLimit(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = i0;

        return;
    }

    public void setMaxEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setMovementMethod(android.text.method.MovementMethod)
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1, r4;
        android.text.Spannable $r2;
        java.lang.CharSequence $r3;
        android.widget.Editor r5;

        r0 := @this: android.widget.TextView;

        r4 := @parameter0: android.text.method.MovementMethod;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 == r4 goto label2;

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = r4;

        if r4 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if $r2 != null goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

     label1:
        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.widget.Editor: void prepareCursorControllers()>();

     label2:
        return;
    }

    public void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
    {
        android.widget.TextView r0;
        android.widget.TextView$OnEditorActionListener r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.TextView$OnEditorActionListener;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener> = r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = r0.<android.widget.TextView: int mPaddingLeft>;

        if i0 != $i4 goto label1;

        $i5 = r0.<android.widget.TextView: int mPaddingRight>;

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getPaddingStart()>();

        if i0 != $i4 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingEnd()>();

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setPaintFlags(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.text.TextPaint $r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        if $i1 == i0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFlags(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setPrivateImeOptions(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions> = r1;

        return;
    }

    public void setRawInputType(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: int mInputType> = i0;

        return;
    }

    public void setScroller(android.widget.Scroller)
    {
        android.widget.TextView r0;
        android.widget.Scroller r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.Scroller;

        r0.<android.widget.TextView: android.widget.Scroller mScroller> = r1;

        return;
    }

    public void setSelectAllOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        java.lang.CharSequence r1;
        android.widget.Editor $r2;
        android.widget.TextView$BufferType $r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mSelectAllOnFocus> = z0;

        if z0 == 0 goto label1;

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = r1 instanceof android.text.Spannable;

        if $z1 != 0 goto label1;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r3);

     label1:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        specialinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        if z0 == z1 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

     label2:
        return;
    }

    public void setShadowLayer(float, float, float, int)
    {
        android.widget.TextView r0;
        float f0, f1, f2;
        int i0;
        android.widget.Editor r1, $r3;
        android.text.TextPaint $r2;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        i0 := @parameter3: int;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setShadowLayer(float,float,float,int)>(f0, f1, f2, i0);

        r0.<android.widget.TextView: float mShadowRadius> = f0;

        r0.<android.widget.TextView: float mShadowDx> = f1;

        r0.<android.widget.TextView: float mShadowDy> = f2;

        r0.<android.widget.TextView: int mShadowColor> = i0;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void invalidateTextDisplayList()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void invalidateHandlesAndActionMode()>();

     label1:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setShowSoftInputOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: boolean mShowSoftInputOnFocus> = z0;

        return;
    }

    public void setSingleLine()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void setSingleLine(boolean)>(1);

        return;
    }

    public void setSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z0);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z0, 1, 1);

        return;
    }

    protected void setSpan_internal(java.lang.Object, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.Object r1;
        int i0, i1, i2;
        java.lang.CharSequence $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public final void setSpannableFactory(android.text.Spannable$Factory)
    {
        android.widget.TextView r0;
        android.text.Spannable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable$Factory;

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public final void setText(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId> = 1;

        r0.<android.widget.TextView: int mTextId> = i0;

        return;
    }

    public final void setText(int, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$BufferType r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.TextView$BufferType;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, r1);

        r0.<android.widget.TextView: boolean mTextSetFromXmlOrResourceId> = 1;

        r0.<android.widget.TextView: int mTextId> = i0;

        return;
    }

    public final void setText(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public void setText(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        android.widget.TextView$BufferType r1;
        java.lang.CharSequence r3;
        android.widget.TextView$CharWrapper r4;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.widget.TextView$BufferType;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>(r3, r1, 1, 0);

        r4 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if r4 == null goto label1;

        staticinvoke <android.widget.TextView$CharWrapper: char[] access$202(android.widget.TextView$CharWrapper,char[])>(r4, null);

     label1:
        return;
    }

    public final void setText(char[], int, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, i4;
        android.widget.TextView$BufferType $r4;
        android.widget.TextView$CharWrapper $r5, $r6, r10;
        java.lang.CharSequence $r7, r9;
        char[] r8;
        java.lang.StringBuilder $r11;
        java.lang.IndexOutOfBoundsException $r13;
        java.lang.String $r14;

        r0 := @this: android.widget.TextView;

        r8 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 = 0;

        if i0 < 0 goto label5;

        if i1 < 0 goto label5;

        $i3 = i0 + i1;

        $i2 = lengthof r8;

        if $i3 > $i2 goto label5;

        r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if r9 == null goto label1;

        i4 = interfaceinvoke r9.<java.lang.CharSequence: int length()>();

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r7, 0, i4, i1);

        goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, i1);

     label2:
        r10 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if r10 != null goto label3;

        $r6 = new android.widget.TextView$CharWrapper;

        specialinvoke $r6.<android.widget.TextView$CharWrapper: void <init>(char[],int,int)>(r8, i0, i1);

        r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper> = $r6;

        goto label4;

     label3:
        virtualinvoke r10.<android.widget.TextView$CharWrapper: void set(char[],int,int)>(r8, i0, i1);

     label4:
        $r5 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r5, $r4, 0, i4);

        return;

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = new java.lang.IndexOutOfBoundsException;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r13;
    }

    public void setTextAppearance(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        virtualinvoke r0.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, i0);

        return;
    }

    public void setTextAppearance(android.content.Context, int)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        int i0;
        android.content.res.TypedArray r2;
        int[] $r4;
        android.widget.TextView$TextAppearanceAttributes $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r4 = <android.R$styleable: int[] TextAppearance>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r4);

        $r5 = new android.widget.TextView$TextAppearanceAttributes;

        specialinvoke $r5.<android.widget.TextView$TextAppearanceAttributes: void <init>(android.widget.TextView$1)>(null);

        specialinvoke r0.<android.widget.TextView: void readTextAppearance(android.content.Context,android.content.res.TypedArray,android.widget.TextView$TextAppearanceAttributes,boolean)>(r1, r2, $r5, 0);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.TextView: void applyTextAppearance(android.widget.TextView$TextAppearanceAttributes)>($r5);

        return;
    }

    public void setTextClassifier(android.view.textclassifier.TextClassifier)
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassifier r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.textclassifier.TextClassifier;

        r0.<android.widget.TextView: android.view.textclassifier.TextClassifier mTextClassifier> = r1;

        return;
    }

    public void setTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        if r1 == null goto label1;

        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;

     label1:
        throw null;
    }

    public void setTextCursorDrawable(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.TextView: void setTextCursorDrawable(android.graphics.drawable.Drawable)>(r2);

        return;
    }

    public void setTextCursorDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1;
        android.widget.Editor r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mCursorDrawable> = r1;

        r0.<android.widget.TextView: int mCursorDrawableRes> = 0;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.Editor: void loadCursorDrawable()>();

     label1:
        return;
    }

    public void setTextIsSelectable(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        java.lang.CharSequence r1;
        android.widget.Editor $r2, $r3, $r4, $r5;
        android.text.method.MovementMethod r6;
        android.widget.TextView$BufferType r7;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r2.<android.widget.Editor: boolean mTextIsSelectable>;

        if $z1 != z0 goto label2;

        return;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3.<android.widget.Editor: boolean mTextIsSelectable> = z0;

        virtualinvoke r0.<android.widget.TextView: void setFocusableInTouchMode(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setFocusable(int)>(16);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z0);

        if z0 == 0 goto label3;

        r6 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

        goto label4;

     label3:
        r6 = null;

     label4:
        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>(r6);

        r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if z0 == 0 goto label5;

        r7 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label6;

     label5:
        r7 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

     label6:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, r7);

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        android.widget.TextView$BufferType r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.CharSequence r2;
        android.text.Spannable r3;

        r0 := @this: android.widget.TextView;

        r2 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.widget.TextView$BufferType;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        i2 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r2, r1);

        if i0 >= 0 goto label1;

        if i1 < 0 goto label2;

     label1:
        r3 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if r3 == null goto label2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r3, $i4, $i6);

     label2:
        return;
    }

    public void setTextLocale(java.util.Locale)
    {
        android.widget.TextView r0;
        java.util.Locale r1;
        android.text.TextPaint $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.Locale;

        r0.<android.widget.TextView: boolean mLocalesChanged> = 1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextLocale(java.util.Locale)>(r1);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTextLocales(android.os.LocaleList)
    {
        android.widget.TextView r0;
        android.os.LocaleList r1;
        android.text.TextPaint $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.os.LocaleList;

        r0.<android.widget.TextView: boolean mLocalesChanged> = 1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextLocales(android.os.LocaleList)>(r1);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTextMetricsParams(android.text.PrecomputedText$Params)
    {
        android.widget.TextView r0;
        android.text.PrecomputedText$Params r1;
        android.text.TextPaint $r2, $r3;
        android.text.TextDirectionHeuristic $r4;
        int $i0, $i1;
        android.text.Layout $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.PrecomputedText$Params;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke r1.<android.text.PrecomputedText$Params: android.text.TextPaint getTextPaint()>();

        virtualinvoke $r2.<android.text.TextPaint: void set(android.text.TextPaint)>($r3);

        r0.<android.widget.TextView: boolean mUserSetTextScaleX> = 1;

        $r4 = virtualinvoke r1.<android.text.PrecomputedText$Params: android.text.TextDirectionHeuristic getTextDirection()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r4;

        $i0 = virtualinvoke r1.<android.text.PrecomputedText$Params: int getBreakStrategy()>();

        r0.<android.widget.TextView: int mBreakStrategy> = $i0;

        $i1 = virtualinvoke r1.<android.text.PrecomputedText$Params: int getHyphenationFrequency()>();

        r0.<android.widget.TextView: int mHyphenationFrequency> = $i1;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public final void setTextOperationUser(android.os.UserHandle)
    {
        android.widget.TextView r0;
        android.os.UserHandle $r2, $r3, r12;
        boolean $z0, $z1;
        android.content.Context $r4;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r10;
        java.lang.String $r11;
        android.widget.Editor r13;

        r0 := @this: android.widget.TextView;

        r12 := @parameter0: android.os.UserHandle;

        $r2 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r12);

        if $z0 == 0 goto label1;

        return;

     label1:
        if r12 == null goto label3;

        $r3 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $z1 = virtualinvoke $r3.<android.os.UserHandle: boolean equals(java.lang.Object)>(r12);

        if $z1 != 0 goto label3;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $i0 = virtualinvoke $r4.<android.content.Context: int checkSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERACT_ACROSS_USERS_FULL is required. userId=");

        $i1 = virtualinvoke r12.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callingUserId");

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = new java.lang.SecurityException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser> = r12;

        r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache> = null;

        r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r13 == null goto label4;

        virtualinvoke r13.<android.widget.Editor: void onTextOperationUserChanged()>();

     label4:
        return;
    }

    public void setTextScaleX(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.<android.widget.TextView: boolean mUserSetTextScaleX> = 1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextScaleX(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTextSelectHandle(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;
        boolean z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "The text select handle should be a valid drawable resource id.");

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setTextSelectHandle(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTextSelectHandle(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor r3;

        r0 := @this: android.widget.TextView;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "The text select handle should not be null.");

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandle> = r2;

        r0.<android.widget.TextView: int mTextSelectHandleRes> = 0;

        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.widget.Editor: void loadHandleDrawables(boolean)>(1);

     label1:
        return;
    }

    public void setTextSelectHandleLeft(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;
        boolean z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "The text select left handle should be a valid drawable resource id.");

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setTextSelectHandleLeft(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTextSelectHandleLeft(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor r3;

        r0 := @this: android.widget.TextView;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "The left text select handle should not be null.");

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleLeft> = r2;

        r0.<android.widget.TextView: int mTextSelectHandleLeftRes> = 0;

        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.widget.Editor: void loadHandleDrawables(boolean)>(1);

     label1:
        return;
    }

    public void setTextSelectHandleRight(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;
        boolean z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "The text select right handle should be a valid drawable resource id.");

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setTextSelectHandleRight(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setTextSelectHandleRight(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor r3;

        r0 := @this: android.widget.TextView;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "The right text select handle should not be null.");

        r0.<android.widget.TextView: android.graphics.drawable.Drawable mTextSelectHandleRight> = r2;

        r0.<android.widget.TextView: int mTextSelectHandleRightRes> = 0;

        r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.widget.Editor: void loadHandleDrawables(boolean)>(1);

     label1:
        return;
    }

    public void setTextSize(float)
    {
        android.widget.TextView r0;
        float f0;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.widget.TextView: void setTextSize(int,float)>(2, f0);

        return;
    }

    public void setTextSize(int, float)
    {
        android.widget.TextView r0;
        int i0;
        float f0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isAutoSizeEnabled()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void setTextSizeInternal(int,float,boolean)>(i0, f0, 1);

     label1:
        return;
    }

    public final void setTransformationMethod(android.text.method.TransformationMethod)
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod r1, r6;
        android.text.Spannable r2;
        java.lang.CharSequence $r3, $r5;
        boolean $z0, $z1, $z2, $z3, z4;
        android.text.TextDirectionHeuristic $r4;
        android.text.method.TransformationMethod2 r7;

        r0 := @this: android.widget.TextView;

        r6 := @parameter0: android.text.method.TransformationMethod;

        r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r6 != r1 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        r2 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if r2 == null goto label2;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>(r1);

     label2:
        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = r6;

        $z3 = r6 instanceof android.text.method.TransformationMethod2;

        if $z3 == 0 goto label5;

        r7 = (android.text.method.TransformationMethod2) r6;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z1 != 0 goto label3;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r5 instanceof android.text.Editable;

        if $z2 != 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = z4;

        interfaceinvoke r7.<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>(z4);

        goto label6;

     label5:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = 0;

     label6:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label7;

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

     label7:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r4;

        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;
        android.text.Layout $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == r1 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r6 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1, $r2, r5, r6;
        int $i0, $i1, i2, i3, i4;
        android.graphics.Typeface r3, r4;
        float f0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        r3 := @parameter0: android.graphics.Typeface;

        i2 := @parameter1: int;

        f0 = 0.0F;

        z0 = 0;

        if i2 <= 0 goto label7;

        if r3 != null goto label1;

        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i2);

        goto label2;

     label1:
        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r3, i2);

     label2:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r4);

        if r4 == null goto label3;

        i3 = virtualinvoke r4.<android.graphics.Typeface: int getStyle()>();

        goto label4;

     label3:
        i3 = 0;

     label4:
        i4 = i3 & i2;

        r5 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = i4 & 1;

        if $i0 == 0 goto label5;

        z0 = 1;

     label5:
        virtualinvoke r5.<android.text.TextPaint: void setFakeBoldText(boolean)>(z0);

        r6 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = i4 & 2;

        if $i1 == 0 goto label6;

        f0 = -0.25F;

     label6:
        virtualinvoke r6.<android.text.TextPaint: void setTextSkewX(float)>(f0);

        goto label8;

     label7:
        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r3);

     label8:
        return;
    }

    public final void setUndoManager(android.content.UndoManager, java.lang.String)
    {
        android.widget.TextView r0;
        android.content.UndoManager r1;
        java.lang.String r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.UndoManager;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r3;
    }

    public void setWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public boolean showContextMenu()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void setContextMenuAnchor(float,float)>(#NaNF, #NaNF);

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean showContextMenu()>();

        return $z0;
    }

    public boolean showContextMenu(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        android.widget.Editor r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void setContextMenuAnchor(float,float)>(f0, f1);

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean showContextMenu(float,float)>(f0, f1);

        return $z0;
    }

    void spanChange(android.text.Spanned, java.lang.Object, int, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.Object r1, $r2, $r20;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, i16, $i18, $i19, i20, i21, $i22;
        android.widget.SpellChecker $r3, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z9, $z11, $z12, $z13;
        android.widget.Editor $r4, $r8, $r10, $r12, $r13, $r15, r17, r19, r21, r22, r23;
        android.text.style.SpellCheckSpan $r5;
        android.view.inputmethod.ExtractedTextRequest $r7;
        android.text.Layout $r9, $r11;
        android.view.ActionMode $r14;
        android.text.Spanned r16;
        android.widget.Editor$InputMethodState r18;

        r0 := @this: android.widget.TextView;

        r16 := @parameter0: android.text.Spanned;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z7 = 0;

        i14 = -1;

        r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r17 != null goto label01;

        r18 = null;

        goto label02;

     label01:
        r18 = r17.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

     label02:
        $r2 = <android.text.Selection: java.lang.Object SELECTION_END>;

        if r1 != $r2 goto label04;

        if i0 >= 0 goto label03;

        z7 = 1;

        i14 = i1;

        if i1 < 0 goto label04;

     label03:
        $i12 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r16);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i12, i0, i1);

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

        r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z7 = 1;

        i14 = i1;

        if r19 == null goto label04;

        virtualinvoke r19.<android.widget.Editor: void makeBlink()>();

        i14 = i1;

        z7 = 1;

     label04:
        z9 = z7;

        i16 = -1;

        $r20 = <android.text.Selection: java.lang.Object SELECTION_START>;

        if r1 != $r20 goto label06;

        if i0 >= 0 goto label05;

        z9 = 1;

        i16 = i1;

        if i1 < 0 goto label06;

     label05:
        $i11 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r16);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i11, i0, i1);

        i16 = i1;

        z9 = 1;

     label06:
        if z9 == 0 goto label11;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r12 == null goto label07;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z6 != 0 goto label07;

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15.<android.widget.Editor: boolean mSelectionMoved> = 1;

     label07:
        $i18 = interfaceinvoke r16.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r1);

        $i19 = $i18 & 512;

        if $i19 != 0 goto label11;

        i20 = i16;

        if i16 >= 0 goto label08;

        i20 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r16);

     label08:
        i21 = i14;

        if i14 >= 0 goto label09;

        i21 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r16);

     label09:
        r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r21 == null goto label10;

        virtualinvoke r21.<android.widget.Editor: void refreshTextActionMode()>();

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z4 != 0 goto label10;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = virtualinvoke $r13.<android.widget.Editor: android.view.ActionMode getTextActionMode()>();

        if $r14 != null goto label10;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean hasTransientState()>();

        if $z5 == 0 goto label10;

        virtualinvoke r0.<android.widget.TextView: void setHasTransientState(boolean)>(0);

     label10:
        virtualinvoke r0.<android.widget.TextView: void onSelectionChanged(int,int)>(i20, i21);

     label11:
        $z11 = r1 instanceof android.text.style.UpdateAppearance;

        if $z11 != 0 goto label12;

        $z2 = r1 instanceof android.text.style.ParagraphStyle;

        if $z2 != 0 goto label12;

        $z3 = r1 instanceof android.text.style.CharacterStyle;

        if $z3 == 0 goto label18;

     label12:
        if r18 == null goto label14;

        $i10 = r18.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i10 != 0 goto label13;

        goto label14;

     label13:
        r18.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        goto label15;

     label14:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

     label15:
        r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r22 == null goto label18;

        if i0 < 0 goto label16;

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke r22.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r11, i0, i2);

     label16:
        if i1 < 0 goto label17;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r10.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r9, i1, i3);

     label17:
        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: void invalidateHandlesAndActionMode()>();

     label18:
        $z12 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>(r16, r1);

        if $z12 == 0 goto label22;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if r18 == null goto label19;

        $z1 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>(r16, r1);

        if $z1 == 0 goto label19;

        r18.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged> = 1;

     label19:
        $i22 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r16);

        if $i22 < 0 goto label22;

        if r18 == null goto label21;

        $i9 = r18.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i9 != 0 goto label20;

        goto label21;

     label20:
        r18.<android.widget.Editor$InputMethodState: boolean mCursorChanged> = 1;

        goto label22;

     label21:
        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

     label22:
        $z13 = r1 instanceof android.text.ParcelableSpan;

        if $z13 == 0 goto label27;

        if r18 == null goto label27;

        $r7 = r18.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest>;

        if $r7 == null goto label27;

        $i4 = r18.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i4 == 0 goto label26;

        if i0 < 0 goto label24;

        $i7 = r18.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i7 <= i0 goto label23;

        r18.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

     label23:
        $i8 = r18.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i8 <= i2 goto label24;

        r18.<android.widget.Editor$InputMethodState: int mChangedStart> = i2;

     label24:
        if i1 < 0 goto label27;

        $i5 = r18.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i5 <= i1 goto label25;

        r18.<android.widget.Editor$InputMethodState: int mChangedStart> = i1;

     label25:
        $i6 = r18.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i6 <= i3 goto label27;

        r18.<android.widget.Editor$InputMethodState: int mChangedStart> = i3;

        goto label27;

     label26:
        r18.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

     label27:
        r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r23 == null goto label28;

        $r3 = r23.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r3 == null goto label28;

        if i1 >= 0 goto label28;

        $z0 = r1 instanceof android.text.style.SpellCheckSpan;

        if $z0 == 0 goto label28;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r4.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        $r5 = (android.text.style.SpellCheckSpan) r1;

        virtualinvoke $r6.<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>($r5);

     label28:
        return;
    }

    void startActivityAsTextOperationUserIfNecessary(android.content.Intent)
    {
        android.widget.TextView r0;
        android.content.Intent r1;
        android.os.UserHandle $r2, $r5;
        android.content.Context $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        if $r2 == null goto label1;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r5 = r0.<android.widget.TextView: android.os.UserHandle mTextOperationUser>;

        virtualinvoke $r4.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void startActivity(android.content.Intent)>(r1);

     label2:
        return;
    }

    protected void stopTextActionMode()
    {
        android.widget.TextView r0;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.Editor: void stopTextActionMode()>();

     label1:
        return;
    }

    protected boolean supportsAutoSizeText()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 1;
    }

    boolean textCanBeSelected()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod r1;
        boolean $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if r1 == null goto label4;

        $z1 = interfaceinvoke r1.<android.text.method.MovementMethod: boolean canSelectArbitrarily()>();

        if $z1 != 0 goto label1;

        goto label4;

     label1:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z2 != 0 goto label2;

        z6 = 0;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z3 == 0 goto label3;

        z6 = 0;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z4 = $r2 instanceof android.text.Spannable;

        if $z4 == 0 goto label3;

        z6 = 0;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z5 == 0 goto label3;

     label2:
        z6 = 1;

     label3:
        return z6;

     label4:
        return 0;
    }

    void updateAfterEdit()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.widget.Editor r1;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i0 >= 0 goto label1;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 112;

        if $i2 != 80 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label2:
        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        if i0 < 0 goto label4;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if r1 == null goto label3;

        virtualinvoke r1.<android.widget.Editor: void makeBlink()>();

     label3:
        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i0);

     label4:
        return;
    }

    public boolean useDynamicLayout()
    {
        android.widget.TextView r0;
        boolean $z0, z1;
        android.text.Spannable $r1;
        android.text.PrecomputedText $r2;

        r0 := @this: android.widget.TextView;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.text.Spannable mSpannable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.PrecomputedText mPrecomputed>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    boolean usesNoOpTextClassifier()
    {
        android.widget.TextView r0;
        android.view.textclassifier.TextClassifier $r1, $r2;
        boolean z0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()>();

        $r2 = <android.view.textclassifier.TextClassifier: android.view.textclassifier.TextClassifier NO_OP>;

        if $r1 != $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean z0;
        int i0, i1;
        android.widget.TextView$Drawables r3;
        android.graphics.drawable.Drawable[] r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if z0 != 0 goto label3;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 == null goto label3;

        r4 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable[] mShowing>;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r4[i1];

        if r1 != $r2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }

    protected void viewClicked(android.view.inputmethod.InputMethodManager)
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>(r0);

     label1:
        return;
    }

    int viewportToContentHorizontalOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mScrollX>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    int viewportToContentVerticalOffset()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;

        r0 := @this: android.widget.TextView;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = r0.<android.widget.TextView: int mScrollY>;

        i0 = $i1 - $i2;

        i6 = i0;

        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = $i3 & 112;

        if $i4 == 48 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i6 = i0 + $i5;

     label1:
        return i6;
    }
}
