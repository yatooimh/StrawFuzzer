abstract class android.widget.TimePicker$AbstractTimePickerDelegate extends java.lang.Object implements android.widget.TimePicker$TimePickerDelegate
{
    protected android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener;
    private long mAutofilledValue;
    protected final android.content.Context mContext;
    protected final android.widget.TimePicker mDelegator;
    protected final java.util.Locale mLocale;
    protected android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener;

    public void <init>(android.widget.TimePicker, android.content.Context)
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;
        android.widget.TimePicker r1;
        android.content.Context r2;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        java.util.Locale $r5;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        r1 := @parameter0: android.widget.TimePicker;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: android.widget.TimePicker mDelegator> = r1;

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: android.content.Context mContext> = r2;

        $r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r5 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: java.util.Locale mLocale> = $r5;

        return;
    }

    public final void autofill(android.view.autofill.AutofillValue)
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;
        long l0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        boolean $z0;
        java.util.Locale $r8;
        int $i2, $i3;
        android.view.autofill.AutofillValue r9;
        android.icu.util.Calendar r10;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        r9 := @parameter0: android.view.autofill.AutofillValue;

        if r9 == null goto label2;

        $z0 = virtualinvoke r9.<android.view.autofill.AutofillValue: boolean isDate()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        l0 = virtualinvoke r9.<android.view.autofill.AutofillValue: long getDateValue()>();

        $r8 = r0.<android.widget.TimePicker$AbstractTimePickerDelegate: java.util.Locale mLocale>;

        r10 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>($r8);

        virtualinvoke r10.<android.icu.util.Calendar: void setTimeInMillis(long)>(l0);

        $i2 = virtualinvoke r10.<android.icu.util.Calendar: int get(int)>(11);

        $i3 = virtualinvoke r10.<android.icu.util.Calendar: int get(int)>(12);

        virtualinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: void setDate(int,int)>($i2, $i3);

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: long mAutofilledValue> = l0;

        return;

     label2:
        r1 = staticinvoke <android.widget.TimePicker: java.lang.String access$000()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be autofilled into ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r7);

        return;
    }

    public final android.view.autofill.AutofillValue getAutofillValue()
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;
        long l0, $l4;
        android.icu.util.Calendar r1;
        byte $b1;
        java.util.Locale $r2;
        int $i2, $i3;
        android.view.autofill.AutofillValue $r3, $r4;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        l0 = r0.<android.widget.TimePicker$AbstractTimePickerDelegate: long mAutofilledValue>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r4 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forDate(long)>(l0);

        return $r4;

     label1:
        $r2 = r0.<android.widget.TimePicker$AbstractTimePickerDelegate: java.util.Locale mLocale>;

        r1 = staticinvoke <android.icu.util.Calendar: android.icu.util.Calendar getInstance(java.util.Locale)>($r2);

        $i2 = virtualinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: int getHour()>();

        virtualinvoke r1.<android.icu.util.Calendar: void set(int,int)>(11, $i2);

        $i3 = virtualinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: int getMinute()>();

        virtualinvoke r1.<android.icu.util.Calendar: void set(int,int)>(12, $i3);

        $l4 = virtualinvoke r1.<android.icu.util.Calendar: long getTimeInMillis()>();

        $r3 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forDate(long)>($l4);

        return $r3;
    }

    protected void resetAutofilledValue()
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: long mAutofilledValue> = 0L;

        return;
    }

    public void setAutoFillChangeListener(android.widget.TimePicker$OnTimeChangedListener)
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;
        android.widget.TimePicker$OnTimeChangedListener r1;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        r1 := @parameter0: android.widget.TimePicker$OnTimeChangedListener;

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener> = r1;

        return;
    }

    public void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)
    {
        android.widget.TimePicker$AbstractTimePickerDelegate r0;
        android.widget.TimePicker$OnTimeChangedListener r1;

        r0 := @this: android.widget.TimePicker$AbstractTimePickerDelegate;

        r1 := @parameter0: android.widget.TimePicker$OnTimeChangedListener;

        r0.<android.widget.TimePicker$AbstractTimePickerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener> = r1;

        return;
    }
}
