class android.widget.TimePickerClockDelegate extends android.widget.TimePicker$AbstractTimePickerDelegate
{
    private static final int AM;
    private static final int[] ATTRS_DISABLED_ALPHA;
    private static final int[] ATTRS_TEXT_COLOR;
    private static final long DELAY_COMMIT_MILLIS;
    private static final int FROM_EXTERNAL_API;
    private static final int FROM_INPUT_PICKER;
    private static final int FROM_RADIAL_PICKER;
    private static final int HOURS_IN_HALF_DAY;
    private static final int HOUR_INDEX;
    private static final int MINUTE_INDEX;
    private static final int PM;
    private boolean mAllowAutoAdvance;
    private final android.widget.RadioButton mAmLabel;
    private final android.view.View mAmPmLayout;
    private final android.view.View$OnClickListener mClickListener;
    private final java.lang.Runnable mCommitHour;
    private final java.lang.Runnable mCommitMinute;
    private int mCurrentHour;
    private int mCurrentMinute;
    private final com.android.internal.widget.NumericTextView$OnValueChangedListener mDigitEnteredListener;
    private final android.view.View$OnFocusChangeListener mFocusListener;
    private boolean mHourFormatShowLeadingZero;
    private boolean mHourFormatStartsAtZero;
    private final com.android.internal.widget.NumericTextView mHourView;
    private boolean mIs24Hour;
    private boolean mIsAmPmAtLeft;
    private boolean mIsAmPmAtTop;
    private boolean mIsEnabled;
    private boolean mLastAnnouncedIsHour;
    private java.lang.CharSequence mLastAnnouncedText;
    private final com.android.internal.widget.NumericTextView mMinuteView;
    private final android.widget.RadialTimePickerView$OnValueSelectedListener mOnValueSelectedListener;
    private final android.widget.TextInputTimePickerView$OnValueTypedListener mOnValueTypedListener;
    private final android.widget.RadioButton mPmLabel;
    private boolean mRadialPickerModeEnabled;
    private final android.view.View mRadialTimePickerHeader;
    private final android.widget.ImageButton mRadialTimePickerModeButton;
    private final java.lang.String mRadialTimePickerModeEnabledDescription;
    private final android.widget.RadialTimePickerView mRadialTimePickerView;
    private final java.lang.String mSelectHours;
    private final java.lang.String mSelectMinutes;
    private final android.widget.TextView mSeparatorView;
    private final java.util.Calendar mTempCalendar;
    private final android.view.View mTextInputPickerHeader;
    private final java.lang.String mTextInputPickerModeEnabledDescription;
    private final android.widget.TextInputTimePickerView mTextInputPickerView;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <android.widget.TimePickerClockDelegate: int PM> = 1;

        <android.widget.TimePickerClockDelegate: int MINUTE_INDEX> = 1;

        <android.widget.TimePickerClockDelegate: int HOUR_INDEX> = 0;

        <android.widget.TimePickerClockDelegate: int HOURS_IN_HALF_DAY> = 12;

        <android.widget.TimePickerClockDelegate: int FROM_RADIAL_PICKER> = 1;

        <android.widget.TimePickerClockDelegate: int FROM_INPUT_PICKER> = 2;

        <android.widget.TimePickerClockDelegate: int FROM_EXTERNAL_API> = 0;

        <android.widget.TimePickerClockDelegate: long DELAY_COMMIT_MILLIS> = 2000L;

        <android.widget.TimePickerClockDelegate: int AM> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842904;

        <android.widget.TimePickerClockDelegate: int[] ATTRS_TEXT_COLOR> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842803;

        <android.widget.TimePickerClockDelegate: int[] ATTRS_DISABLED_ALPHA> = $r1;

        return;
    }

    public void <init>(android.widget.TimePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TimePickerClockDelegate r0;
        android.content.Context r1, $r12, $r13, $r15, $r77;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5;
        android.content.res.TypedArray r3, r91;
        android.widget.TimePickerClockDelegate$2 $r4;
        android.widget.TimePickerClockDelegate$3 $r5;
        android.widget.TimePickerClockDelegate$4 $r6;
        android.widget.TimePickerClockDelegate$5 $r7;
        android.widget.TimePickerClockDelegate$6 $r8;
        android.widget.TimePickerClockDelegate$7 $r9;
        android.widget.TimePickerClockDelegate$8 $r10;
        int[] $r11, $r76;
        java.lang.Object $r14;
        java.lang.String $r16, $r17, $r41, $r48, $r62, $r64;
        android.widget.TimePickerClockDelegate$NearestTouchDelegate $r18, $r38;
        android.view.View $r19, $r27, $r29, $r39, $r40, $r46, $r47, $r53, $r54, $r57, $r59, $r67, $r69, r82, r83, r86;
        android.view.View$OnClickListener $r20, $r30, $r43, $r50;
        android.view.View$OnFocusChangeListener $r21, $r31;
        com.android.internal.widget.NumericTextView $r22, $r24, $r26, $r32, $r34, $r36, $r37, $r71, $r73, r84, r85;
        com.android.internal.widget.NumericTextView$OnValueChangedListener $r23, $r33;
        android.widget.TimePickerClockDelegate$ClickActionDelegate $r25, $r35;
        android.widget.TextView $r28, $r72;
        java.lang.CharSequence $r42, $r49;
        android.widget.RadioButton $r44, $r45, $r51, $r52, $r74, $r75, r88, r89;
        boolean $z0, $z1;
        android.widget.RadialTimePickerView$OnValueSelectedListener $r55;
        android.widget.RadialTimePickerView $r56, r93;
        android.widget.TextInputTimePickerView$OnValueTypedListener $r58;
        android.widget.TimePickerClockDelegate$1 $r60;
        android.content.res.Resources $r61, $r63, r81;
        java.util.Locale $r65;
        java.util.Calendar $r66, r96;
        android.graphics.drawable.Drawable $r68, $r70;
        android.content.res.ColorStateList $r78, r90, r92;
        android.widget.TimePicker r79;
        android.view.LayoutInflater r80;
        java.lang.String[] r87;
        android.widget.TextInputTimePickerView r94;
        android.widget.ImageButton r95;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r79 := @parameter0: android.widget.TimePicker;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>(r79, r1);

        r0.<android.widget.TimePickerClockDelegate: boolean mRadialPickerModeEnabled> = 1;

        r0.<android.widget.TimePickerClockDelegate: boolean mIsEnabled> = 1;

        r0.<android.widget.TimePickerClockDelegate: boolean mIsAmPmAtLeft> = 0;

        r0.<android.widget.TimePickerClockDelegate: boolean mIsAmPmAtTop> = 0;

        $r4 = new android.widget.TimePickerClockDelegate$2;

        specialinvoke $r4.<android.widget.TimePickerClockDelegate$2: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView$OnValueSelectedListener mOnValueSelectedListener> = $r4;

        $r5 = new android.widget.TimePickerClockDelegate$3;

        specialinvoke $r5.<android.widget.TimePickerClockDelegate$3: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView$OnValueTypedListener mOnValueTypedListener> = $r5;

        $r6 = new android.widget.TimePickerClockDelegate$4;

        specialinvoke $r6.<android.widget.TimePickerClockDelegate$4: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView$OnValueChangedListener mDigitEnteredListener> = $r6;

        $r7 = new android.widget.TimePickerClockDelegate$5;

        specialinvoke $r7.<android.widget.TimePickerClockDelegate$5: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: java.lang.Runnable mCommitHour> = $r7;

        $r8 = new android.widget.TimePickerClockDelegate$6;

        specialinvoke $r8.<android.widget.TimePickerClockDelegate$6: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: java.lang.Runnable mCommitMinute> = $r8;

        $r9 = new android.widget.TimePickerClockDelegate$7;

        specialinvoke $r9.<android.widget.TimePickerClockDelegate$7: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: android.view.View$OnFocusChangeListener mFocusListener> = $r9;

        $r10 = new android.widget.TimePickerClockDelegate$8;

        specialinvoke $r10.<android.widget.TimePickerClockDelegate$8: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        r0.<android.widget.TimePickerClockDelegate: android.view.View$OnClickListener mClickListener> = $r10;

        $r12 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r11 = <com.android.internal.R$styleable: int[] TimePicker>;

        r3 = virtualinvoke $r12.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r11, i0, i1);

        $r13 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r80 = (android.view.LayoutInflater) $r14;

        $r15 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        r81 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke r81.<android.content.res.Resources: java.lang.String getString(int)>(17041202);

        r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectHours> = $r16;

        $r17 = virtualinvoke r81.<android.content.res.Resources: java.lang.String getString(int)>(17041206);

        r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectMinutes> = $r17;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(12, 17367339);

        r82 = virtualinvoke r80.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i3, r79);

        virtualinvoke r82.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        r83 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909538);

        r0.<android.widget.TimePickerClockDelegate: android.view.View mRadialTimePickerHeader> = r83;

        $r18 = new android.widget.TimePickerClockDelegate$NearestTouchDelegate;

        specialinvoke $r18.<android.widget.TimePickerClockDelegate$NearestTouchDelegate: void <init>(android.widget.TimePickerClockDelegate$1)>(null);

        virtualinvoke r83.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r18);

        $r19 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909049);

        r84 = (com.android.internal.widget.NumericTextView) $r19;

        r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView> = r84;

        $r20 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnClickListener mClickListener>;

        virtualinvoke r84.<com.android.internal.widget.NumericTextView: void setOnClickListener(android.view.View$OnClickListener)>($r20);

        $r22 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $r21 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnFocusChangeListener mFocusListener>;

        virtualinvoke $r22.<com.android.internal.widget.NumericTextView: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>($r21);

        $r24 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $r23 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView$OnValueChangedListener mDigitEnteredListener>;

        virtualinvoke $r24.<com.android.internal.widget.NumericTextView: void setOnDigitEnteredListener(com.android.internal.widget.NumericTextView$OnValueChangedListener)>($r23);

        $r26 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $r25 = new android.widget.TimePickerClockDelegate$ClickActionDelegate;

        specialinvoke $r25.<android.widget.TimePickerClockDelegate$ClickActionDelegate: void <init>(android.content.Context,int)>(r1, 17041202);

        virtualinvoke $r26.<com.android.internal.widget.NumericTextView: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r25);

        $r27 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909409);

        $r28 = (android.widget.TextView) $r27;

        r0.<android.widget.TimePickerClockDelegate: android.widget.TextView mSeparatorView> = $r28;

        $r29 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909177);

        r85 = (com.android.internal.widget.NumericTextView) $r29;

        r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView> = r85;

        $r30 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnClickListener mClickListener>;

        virtualinvoke r85.<com.android.internal.widget.NumericTextView: void setOnClickListener(android.view.View$OnClickListener)>($r30);

        $r32 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        $r31 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnFocusChangeListener mFocusListener>;

        virtualinvoke $r32.<com.android.internal.widget.NumericTextView: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>($r31);

        $r34 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        $r33 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView$OnValueChangedListener mDigitEnteredListener>;

        virtualinvoke $r34.<com.android.internal.widget.NumericTextView: void setOnDigitEnteredListener(com.android.internal.widget.NumericTextView$OnValueChangedListener)>($r33);

        $r36 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        $r35 = new android.widget.TimePickerClockDelegate$ClickActionDelegate;

        specialinvoke $r35.<android.widget.TimePickerClockDelegate$ClickActionDelegate: void <init>(android.content.Context,int)>(r1, 17041206);

        virtualinvoke $r36.<com.android.internal.widget.NumericTextView: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r35);

        $r37 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        virtualinvoke $r37.<com.android.internal.widget.NumericTextView: void setRange(int,int)>(0, 59);

        r86 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16908755);

        r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout> = r86;

        $r38 = new android.widget.TimePickerClockDelegate$NearestTouchDelegate;

        specialinvoke $r38.<android.widget.TimePickerClockDelegate$NearestTouchDelegate: void <init>(android.widget.TimePickerClockDelegate$1)>(null);

        virtualinvoke r86.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r38);

        r87 = staticinvoke <android.widget.TimePicker: java.lang.String[] getAmPmStrings(android.content.Context)>(r1);

        $r39 = r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout>;

        $r40 = virtualinvoke $r39.<android.view.View: android.view.View findViewById(int)>(16908753);

        r88 = (android.widget.RadioButton) $r40;

        r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel> = r88;

        $r41 = r87[0];

        $r42 = staticinvoke <android.widget.TimePickerClockDelegate: java.lang.CharSequence obtainVerbatim(java.lang.String)>($r41);

        virtualinvoke r88.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r42);

        $r44 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        $r43 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnClickListener mClickListener>;

        virtualinvoke $r44.<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>($r43);

        $r45 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        staticinvoke <android.widget.TimePickerClockDelegate: void ensureMinimumTextWidth(android.widget.TextView)>($r45);

        $r46 = r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout>;

        $r47 = virtualinvoke $r46.<android.view.View: android.view.View findViewById(int)>(16909303);

        r89 = (android.widget.RadioButton) $r47;

        r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel> = r89;

        $r48 = r87[1];

        $r49 = staticinvoke <android.widget.TimePickerClockDelegate: java.lang.CharSequence obtainVerbatim(java.lang.String)>($r48);

        virtualinvoke r89.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r49);

        $r51 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        $r50 = r0.<android.widget.TimePickerClockDelegate: android.view.View$OnClickListener mClickListener>;

        virtualinvoke $r51.<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>($r50);

        $r52 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        staticinvoke <android.widget.TimePickerClockDelegate: void ensureMinimumTextWidth(android.widget.TextView)>($r52);

        r90 = null;

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i2 == 0 goto label1;

        $r77 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r76 = <android.widget.TimePickerClockDelegate: int[] ATTRS_TEXT_COLOR>;

        r91 = virtualinvoke $r77.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r76, 0, i2);

        $r78 = virtualinvoke r91.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(0);

        r90 = specialinvoke r0.<android.widget.TimePickerClockDelegate: android.content.res.ColorStateList applyLegacyColorFixes(android.content.res.ColorStateList)>($r78);

        virtualinvoke r91.<android.content.res.TypedArray: void recycle()>();

        goto label1;

     label1:
        r92 = r90;

        if r90 != null goto label2;

        r92 = virtualinvoke r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(11);

     label2:
        $r53 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909079);

        r0.<android.widget.TimePickerClockDelegate: android.view.View mTextInputPickerHeader> = $r53;

        if r92 == null goto label3;

        $r71 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        virtualinvoke $r71.<com.android.internal.widget.NumericTextView: void setTextColor(android.content.res.ColorStateList)>(r92);

        $r72 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextView mSeparatorView>;

        virtualinvoke $r72.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r92);

        $r73 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        virtualinvoke $r73.<com.android.internal.widget.NumericTextView: void setTextColor(android.content.res.ColorStateList)>(r92);

        $r74 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        virtualinvoke $r74.<android.widget.RadioButton: void setTextColor(android.content.res.ColorStateList)>(r92);

        $r75 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        virtualinvoke $r75.<android.widget.RadioButton: void setTextColor(android.content.res.ColorStateList)>(r92);

     label3:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>(0);

        if $z0 == 0 goto label4;

        $r67 = r0.<android.widget.TimePickerClockDelegate: android.view.View mRadialTimePickerHeader>;

        $r68 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r67.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r68);

        $r69 = r0.<android.widget.TimePickerClockDelegate: android.view.View mTextInputPickerHeader>;

        $r70 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r69.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r70);

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r54 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909330);

        r93 = (android.widget.RadialTimePickerView) $r54;

        r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView> = r93;

        virtualinvoke r93.<android.widget.RadialTimePickerView: void applyAttributes(android.util.AttributeSet,int,int)>(r2, i0, i1);

        $r56 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r55 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView$OnValueSelectedListener mOnValueSelectedListener>;

        virtualinvoke $r56.<android.widget.RadialTimePickerView: void setOnValueSelectedListener(android.widget.RadialTimePickerView$OnValueSelectedListener)>($r55);

        $r57 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909082);

        r94 = (android.widget.TextInputTimePickerView) $r57;

        r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView> = r94;

        $r58 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView$OnValueTypedListener mOnValueTypedListener>;

        virtualinvoke r94.<android.widget.TextInputTimePickerView: void setListener(android.widget.TextInputTimePickerView$OnValueTypedListener)>($r58);

        $r59 = virtualinvoke r82.<android.view.View: android.view.View findViewById(int)>(16909553);

        r95 = (android.widget.ImageButton) $r59;

        r0.<android.widget.TimePickerClockDelegate: android.widget.ImageButton mRadialTimePickerModeButton> = r95;

        $r60 = new android.widget.TimePickerClockDelegate$1;

        specialinvoke $r60.<android.widget.TimePickerClockDelegate$1: void <init>(android.widget.TimePickerClockDelegate)>(r0);

        virtualinvoke r95.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r60);

        $r61 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r62 = virtualinvoke $r61.<android.content.res.Resources: java.lang.String getString(int)>(17041362);

        r0.<android.widget.TimePickerClockDelegate: java.lang.String mRadialTimePickerModeEnabledDescription> = $r62;

        $r63 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r64 = virtualinvoke $r63.<android.content.res.Resources: java.lang.String getString(int)>(17041363);

        r0.<android.widget.TimePickerClockDelegate: java.lang.String mTextInputPickerModeEnabledDescription> = $r64;

        r0.<android.widget.TimePickerClockDelegate: boolean mAllowAutoAdvance> = 1;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHourFormat()>();

        $r65 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        r96 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r65);

        r0.<android.widget.TimePickerClockDelegate: java.util.Calendar mTempCalendar> = r96;

        $i4 = virtualinvoke r96.<java.util.Calendar: int get(int)>(11);

        $r66 = r0.<android.widget.TimePickerClockDelegate: java.util.Calendar mTempCalendar>;

        $i5 = virtualinvoke $r66.<java.util.Calendar: int get(int)>(12);

        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void initialize(int,int,boolean,int)>($i4, $i5, $z1, 0);

        return;
    }

    static void access$100(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void toggleRadialPickerMode()>();

        return;
    }

    static java.lang.Runnable access$1000(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: java.lang.Runnable mCommitHour>;

        return $r1;
    }

    static com.android.internal.widget.NumericTextView access$1100(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        com.android.internal.widget.NumericTextView $r1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        return $r1;
    }

    static java.lang.Runnable access$1200(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: java.lang.Runnable mCommitMinute>;

        return $r1;
    }

    static void access$1300(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void tryVibrate()>();

        return;
    }

    static boolean access$200(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mAllowAutoAdvance>;

        return $z0;
    }

    static void access$300(android.widget.TimePickerClockDelegate, int, int, boolean, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1;
        boolean z0, z1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setHourInternal(int,int,boolean,boolean)>(i0, i1, z0, z1);

        return;
    }

    static void access$400(android.widget.TimePickerClockDelegate, int, boolean, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;
        boolean z0, z1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setCurrentItemShowing(int,boolean,boolean)>(i0, z0, z1);

        return;
    }

    static int access$500(android.widget.TimePickerClockDelegate, int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.widget.TimePickerClockDelegate: int getLocalizedHour(int)>(i0);

        return $i1;
    }

    static java.lang.String access$600(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectMinutes>;

        return $r1;
    }

    static void access$700(android.widget.TimePickerClockDelegate, int, int, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setMinuteInternal(int,int,boolean)>(i0, i1, z0);

        return;
    }

    static void access$800(android.widget.TimePickerClockDelegate, int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setAmOrPm(int)>(i0);

        return;
    }

    static com.android.internal.widget.NumericTextView access$900(android.widget.TimePickerClockDelegate)
    {
        android.widget.TimePickerClockDelegate r0;
        com.android.internal.widget.NumericTextView $r1;

        r0 := @parameter0: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        return $r1;
    }

    private android.content.res.ColorStateList applyLegacyColorFixes(android.content.res.ColorStateList)
    {
        android.widget.TimePickerClockDelegate r0;
        android.content.res.ColorStateList r1, $r5;
        boolean $z0, $z1;
        int[] $r2, $r7, $r8, $r9, $r10, $r11;
        android.content.Context $r3;
        android.content.res.TypedArray $r4;
        float $f0;
        int[][] $r6;
        int i0, i1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 := @parameter0: android.content.res.ColorStateList;

        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<android.content.res.ColorStateList: boolean hasState(int)>(16843518);

        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $z1 = virtualinvoke r1.<android.content.res.ColorStateList: boolean hasState(int)>(16842913);

        if $z1 == 0 goto label2;

        $r10 = staticinvoke <android.util.StateSet: int[] get(int)>(10);

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r10, 0);

        $r11 = staticinvoke <android.util.StateSet: int[] get(int)>(8);

        i1 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r11, 0);

        goto label3;

     label2:
        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r2 = <android.widget.TimePickerClockDelegate: int[] ATTRS_DISABLED_ALPHA>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $f0 = virtualinvoke $r4.<android.content.res.TypedArray: float getFloat(int,float)>(0, 0.3F);

        i1 = specialinvoke r0.<android.widget.TimePickerClockDelegate: int multiplyAlphaComponent(int,float)>(i0, $f0);

     label3:
        if i0 == 0 goto label5;

        if i1 != 0 goto label4;

        goto label5;

     label4:
        $r5 = new android.content.res.ColorStateList;

        $r6 = newarray (int[])[2];

        $r7 = newarray (int)[1];

        $r7[0] = 16843518;

        $r6[0] = $r7;

        $r8 = newarray (int)[0];

        $r6[1] = $r8;

        $r9 = newarray (int)[2];

        $r9[0] = i0;

        $r9[1] = i1;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r6, $r9);

        return $r5;

     label5:
        return null;

     label6:
        return r1;
    }

    private static void ensureMinimumTextWidth(android.widget.TextView)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @parameter0: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void measure(int,int)>(0, 0);

        i0 = virtualinvoke r0.<android.widget.TextView: int getMeasuredWidth()>();

        virtualinvoke r0.<android.widget.TextView: void setMinWidth(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setMinimumWidth(int)>(i0);

        return;
    }

    private int getCurrentItemShowing()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.RadialTimePickerView $r1;
        int $i0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        return $i0;
    }

    private static java.lang.String getHourMinSeparatorFromPattern(java.lang.String)
    {
        char c0, $c3;
        int $i1, $i2, i4;
        android.text.SpannableStringBuilder $r0;
        java.lang.String $r1, $r3, $r4, r5;
        java.lang.CharSequence $r2;
        boolean z0;

        r5 := @parameter0: java.lang.String;

        z0 = 0;

        i4 = 0;

     label1:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if i4 >= $i1 goto label7;

        c0 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4);

        if c0 == 32 goto label6;

        if c0 == 39 goto label4;

        if c0 == 72 goto label3;

        if c0 == 75 goto label3;

        if c0 == 104 goto label3;

        if c0 == 107 goto label3;

        if z0 != 0 goto label2;

        goto label6;

     label2:
        $c3 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4);

        $r4 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c3);

        return $r4;

     label3:
        z0 = 1;

        goto label6;

     label4:
        if z0 != 0 goto label5;

        goto label6;

     label5:
        $r0 = new android.text.SpannableStringBuilder;

        $r1 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(i4);

        specialinvoke $r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r1);

        $i2 = staticinvoke <android.text.format.DateFormat: int appendQuotedText(android.text.SpannableStringBuilder,int)>($r0, 0);

        $r2 = virtualinvoke $r0.<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>(0, $i2);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return ":";
    }

    private int getLocalizedHour(int)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0, $z1, $z2;
        int i0, i1, i2;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        i1 = i0;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z0 != 0 goto label1;

        i1 = i0 % 12;

     label1:
        i2 = i1;

        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mHourFormatStartsAtZero>;

        if $z1 != 0 goto label3;

        i2 = i1;

        if i1 != 0 goto label3;

        $z2 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z2 == 0 goto label2;

        i2 = 24;

        goto label3;

     label2:
        i2 = 12;

     label3:
        return i2;
    }

    private void initialize(int, int, boolean, int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        r0.<android.widget.TimePickerClockDelegate: int mCurrentHour> = i0;

        r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute> = i1;

        r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour> = z0;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateUI(int)>(i2);

        return;
    }

    private static int lastIndexOfAny(java.lang.String, char[])
    {
        java.lang.String r0;
        char[] r1;
        int i0, $i2, i4, i5;
        char c1, $c3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i0 = lengthof r1;

        if i0 <= 0 goto label5;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = $i2 - 1;

     label1:
        if i4 < 0 goto label5;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        $c3 = r1[i5];

        if c1 != $c3 goto label3;

        return i4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        i4 = i4 + -1;

        goto label1;

     label5:
        return -1;
    }

    private int multiplyAlphaComponent(int, float)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = i0 >> 24;

        $i2 = $i1 & 255;

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i3 = (int) $f3;

        $i5 = $i3 << 24;

        $i4 = 16777215 & i0;

        $i6 = $i5 | $i4;

        return $i6;
    }

    static final java.lang.CharSequence obtainVerbatim(java.lang.String)
    {
        java.lang.String r0;
        android.text.SpannableStringBuilder $r1, $r4;
        android.text.style.TtsSpan$VerbatimBuilder $r2;
        android.text.style.TtsSpan $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>()>();

        $r2 = new android.text.style.TtsSpan$VerbatimBuilder;

        specialinvoke $r2.<android.text.style.TtsSpan$VerbatimBuilder: void <init>(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<android.text.style.TtsSpan$VerbatimBuilder: android.text.style.TtsSpan build()>();

        $r4 = virtualinvoke $r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)>(r0, $r3, 0);

        return $r4;
    }

    private void onTimeChanged()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.TimePicker $r1, $r5, $r7;
        android.widget.TimePicker$OnTimeChangedListener $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        if $r2 == null goto label1;

        $r6 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        $r7 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $i2 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        $i3 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getMinute()>();

        interfaceinvoke $r6.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r7, $i2, $i3);

     label1:
        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener>;

        $r5 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $i0 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        $i1 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getMinute()>();

        interfaceinvoke $r4.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r5, $i0, $i1);

     label2:
        return;
    }

    private void setAmOrPm(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1, $i2, $i3;
        android.widget.RadialTimePickerView $r1;
        boolean $z0;
        android.widget.TimePicker$OnTimeChangedListener $r2, $r3;
        android.widget.TimePicker $r4;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateAmPmLabelStates(int)>(i0);

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $z0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: boolean setAmOrPm(int)>(i0);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        r0.<android.widget.TimePickerClockDelegate: int mCurrentHour> = $i1;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateTextInputPicker()>();

        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $i2 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        $i3 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getMinute()>();

        interfaceinvoke $r3.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r4, $i2, $i3);

     label1:
        return;
    }

    private void setAmPmStart(boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean z0, $z1, z2;
        android.widget.RelativeLayout$LayoutParams r1;
        android.view.View r2, $r3, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        android.view.ViewGroup$LayoutParams $r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        float $f0, $f1;
        java.util.Locale $r8;
        com.android.internal.widget.NumericTextView $r9, $r10;

        r0 := @this: android.widget.TimePickerClockDelegate;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.RelativeLayout$LayoutParams) $r4;

        $i1 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(1);

        if $i1 != 0 goto label06;

        $i5 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(0);

        if $i5 == 0 goto label01;

        goto label06;

     label01:
        $i6 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(3);

        if $i6 != 0 goto label02;

        $i9 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(2);

        if $i9 == 0 goto label13;

     label02:
        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mIsAmPmAtTop>;

        if $z1 != z0 goto label03;

        return;

     label03:
        if z0 == 0 goto label04;

        i10 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(3);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(3);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(2, i10);

        goto label05;

     label04:
        i10 = virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: int getRule(int)>(2);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(2);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(3, i10);

     label05:
        $r11 = r0.<android.widget.TimePickerClockDelegate: android.view.View mRadialTimePickerHeader>;

        r2 = virtualinvoke $r11.<android.view.View: android.view.View findViewById(int)>(i10);

        i0 = virtualinvoke r2.<android.view.View: int getPaddingTop()>();

        i11 = virtualinvoke r2.<android.view.View: int getPaddingBottom()>();

        $i7 = virtualinvoke r2.<android.view.View: int getPaddingLeft()>();

        $i8 = virtualinvoke r2.<android.view.View: int getPaddingRight()>();

        virtualinvoke r2.<android.view.View: void setPadding(int,int,int,int)>($i7, i11, $i8, i0);

        r0.<android.widget.TimePickerClockDelegate: boolean mIsAmPmAtTop> = z0;

        goto label13;

     label06:
        $r5 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r7.<android.util.DisplayMetrics: float density>;

        $f1 = $f0 * 8.0F;

        i12 = (int) $f1;

        $r8 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        $i2 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>($r8);

        if $i2 != 0 goto label07;

        z2 = z0;

        goto label08;

     label07:
        z2 = z0 ^ 1;

     label08:
        if z2 == 0 goto label09;

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(1);

        $r10 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $i4 = virtualinvoke $r10.<com.android.internal.widget.NumericTextView: int getId()>();

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(0, $i4);

        goto label10;

     label09:
        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(0);

        $r9 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        $i3 = virtualinvoke $r9.<com.android.internal.widget.NumericTextView: int getId()>();

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(1, $i3);

     label10:
        if z0 == 0 goto label11;

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void setMarginStart(int)>(0);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void setMarginEnd(int)>(i12);

        goto label12;

     label11:
        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void setMarginStart(int)>(i12);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void setMarginEnd(int)>(0);

     label12:
        r0.<android.widget.TimePickerClockDelegate: boolean mIsAmPmAtLeft> = z2;

     label13:
        $r12 = r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout>;

        virtualinvoke $r12.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return;
    }

    private void setCurrentItemShowing(int, boolean, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;
        android.widget.RadialTimePickerView $r1;
        java.lang.String $r2, $r4;
        android.widget.TimePicker $r3, $r5;
        boolean z0, z1, z3, z4;
        com.android.internal.widget.NumericTextView r6, r7;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void setCurrentItemShowing(int,boolean)>(i0, z0);

        if i0 != 0 goto label1;

        if z1 == 0 goto label2;

        $r5 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $r4 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectHours>;

        virtualinvoke $r5.<android.widget.TimePicker: void announceForAccessibility(java.lang.CharSequence)>($r4);

        goto label2;

     label1:
        if z1 == 0 goto label2;

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $r2 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectMinutes>;

        virtualinvoke $r3.<android.widget.TimePicker: void announceForAccessibility(java.lang.CharSequence)>($r2);

     label2:
        r6 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        if i0 != 0 goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        virtualinvoke r6.<com.android.internal.widget.NumericTextView: void setActivated(boolean)>(z3);

        r7 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        z4 = 0;

        if i0 != 1 goto label5;

        z4 = 1;

     label5:
        virtualinvoke r7.<com.android.internal.widget.NumericTextView: void setActivated(boolean)>(z4);

        return;
    }

    private void setHourInternal(int, int, boolean, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1, $i2;
        boolean z0, z1;
        android.widget.RadialTimePickerView r1, $r3;
        android.widget.TimePicker $r2;
        byte b3;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        if $i2 != i0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.widget.TimePickerClockDelegate: void resetAutofilledValue()>();

        r0.<android.widget.TimePickerClockDelegate: int mCurrentHour> = i0;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderHour(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderAmPm()>();

        b3 = 1;

        if i1 == 1 goto label3;

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r3.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i0);

        r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        if i0 >= 12 goto label2;

        b3 = 0;

     label2:
        virtualinvoke r1.<android.widget.RadialTimePickerView: boolean setAmOrPm(int)>(b3);

     label3:
        if i1 == 2 goto label4;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateTextInputPicker()>();

     label4:
        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r2.<android.widget.TimePicker: void invalidate()>();

        if z1 == 0 goto label5;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void onTimeChanged()>();

     label5:
        return;
    }

    private void setMinuteInternal(int, int, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1, $i2;
        boolean z0;
        android.widget.TimePicker $r1;
        android.widget.RadialTimePickerView $r2;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute>;

        if $i2 != i0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.widget.TimePickerClockDelegate: void resetAutofilledValue()>();

        r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute> = i0;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderMinute(int,boolean)>(i0, 1);

        if i1 == 1 goto label2;

        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r2.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i0);

     label2:
        if i1 == 2 goto label3;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateTextInputPicker()>();

     label3:
        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void invalidate()>();

        if z0 == 0 goto label4;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void onTimeChanged()>();

     label4:
        return;
    }

    private void toggleRadialPickerMode()
    {
        android.widget.TimePickerClockDelegate r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean $z0;
        android.widget.RadialTimePickerView $r2, $r13;
        android.view.View $r3, $r4, $r14, $r15;
        android.widget.TextInputTimePickerView $r5, $r16;
        android.widget.ImageButton $r6, $r8, $r17, $r19;
        java.lang.String $r7, $r18;
        android.content.Context $r9;
        java.lang.Object $r10;
        android.widget.TimePicker $r11;
        android.os.IBinder $r12;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mRadialPickerModeEnabled>;

        if $z0 == 0 goto label1;

        $r13 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r13.<android.widget.RadialTimePickerView: void setVisibility(int)>(8);

        $r14 = r0.<android.widget.TimePickerClockDelegate: android.view.View mRadialTimePickerHeader>;

        virtualinvoke $r14.<android.view.View: void setVisibility(int)>(8);

        $r15 = r0.<android.widget.TimePickerClockDelegate: android.view.View mTextInputPickerHeader>;

        virtualinvoke $r15.<android.view.View: void setVisibility(int)>(0);

        $r16 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        virtualinvoke $r16.<android.widget.TextInputTimePickerView: void setVisibility(int)>(0);

        $r17 = r0.<android.widget.TimePickerClockDelegate: android.widget.ImageButton mRadialTimePickerModeButton>;

        virtualinvoke $r17.<android.widget.ImageButton: void setImageResource(int)>(17301803);

        $r19 = r0.<android.widget.TimePickerClockDelegate: android.widget.ImageButton mRadialTimePickerModeButton>;

        $r18 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mRadialTimePickerModeEnabledDescription>;

        virtualinvoke $r19.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r18);

        r0.<android.widget.TimePickerClockDelegate: boolean mRadialPickerModeEnabled> = 0;

        goto label3;

     label1:
        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r2.<android.widget.RadialTimePickerView: void setVisibility(int)>(0);

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.view.View mRadialTimePickerHeader>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.view.View mTextInputPickerHeader>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(8);

        $r5 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        virtualinvoke $r5.<android.widget.TextInputTimePickerView: void setVisibility(int)>(8);

        $r6 = r0.<android.widget.TimePickerClockDelegate: android.widget.ImageButton mRadialTimePickerModeButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setImageResource(int)>(17301880);

        $r8 = r0.<android.widget.TimePickerClockDelegate: android.widget.ImageButton mRadialTimePickerModeButton>;

        $r7 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mTextInputPickerModeEnabledDescription>;

        virtualinvoke $r8.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r7);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateTextInputPicker()>();

        $r9 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        r1 = (android.view.inputmethod.InputMethodManager) $r10;

        if r1 == null goto label2;

        $r11 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        $r12 = virtualinvoke $r11.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r12, 0);

     label2:
        r0.<android.widget.TimePickerClockDelegate: boolean mRadialPickerModeEnabled> = 1;

     label3:
        return;
    }

    private void tryAnnounceForAccessibility(java.lang.CharSequence, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        java.lang.CharSequence r1, $r3;
        boolean z0, $z1, $z2;
        android.widget.TimePicker $r2;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mLastAnnouncedIsHour>;

        if $z1 != z0 goto label1;

        $r3 = r0.<android.widget.TimePickerClockDelegate: java.lang.CharSequence mLastAnnouncedText>;

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label2;

     label1:
        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r2.<android.widget.TimePicker: void announceForAccessibility(java.lang.CharSequence)>(r1);

        r0.<android.widget.TimePickerClockDelegate: java.lang.CharSequence mLastAnnouncedText> = r1;

        r0.<android.widget.TimePickerClockDelegate: boolean mLastAnnouncedIsHour> = z0;

     label2:
        return;
    }

    private void tryVibrate()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.TimePicker $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: boolean performHapticFeedback(int)>(4);

        return;
    }

    private void updateAmPmLabelStates(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;
        android.widget.RadioButton $r1, $r2, $r3, $r4;
        boolean z1, z2;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        virtualinvoke $r1.<android.widget.RadioButton: void setActivated(boolean)>(z1);

        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        virtualinvoke $r2.<android.widget.RadioButton: void setChecked(boolean)>(z1);

        z2 = 0;

        if i0 != 1 goto label3;

        z2 = 1;

     label3:
        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        virtualinvoke $r3.<android.widget.RadioButton: void setActivated(boolean)>(z2);

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        virtualinvoke $r4.<android.widget.RadioButton: void setChecked(boolean)>(z2);

        return;
    }

    private void updateHeaderAmPm()
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0, $z1;
        java.util.Locale $r1;
        java.lang.String $r2;
        int $i0;
        android.view.View $r3;
        byte b1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.view.View mAmPmLayout>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        goto label4;

     label1:
        $r1 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, "hm");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("a");

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setAmPmStart(boolean)>($z1);

        $i0 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        if $i0 >= 12 goto label2;

        b1 = 0;

        goto label3;

     label2:
        b1 = 1;

     label3:
        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateAmPmLabelStates(int)>(b1);

     label4:
        return;
    }

    private void updateHeaderHour(int, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean z0;
        com.android.internal.widget.NumericTextView $r1, $r2;
        java.lang.CharSequence $r3;
        int i0, i1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = specialinvoke r0.<android.widget.TimePickerClockDelegate: int getLocalizedHour(int)>(i0);

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        virtualinvoke $r1.<com.android.internal.widget.NumericTextView: void setValue(int)>(i1);

        if z0 == 0 goto label1;

        $r2 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.NumericTextView: java.lang.CharSequence getText()>();

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void tryAnnounceForAccessibility(java.lang.CharSequence,boolean)>($r3, 1);

     label1:
        return;
    }

    private void updateHeaderMinute(int, boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;
        boolean z0;
        com.android.internal.widget.NumericTextView $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        virtualinvoke $r1.<com.android.internal.widget.NumericTextView: void setValue(int)>(i0);

        if z0 == 0 goto label1;

        $r2 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        $r3 = virtualinvoke $r2.<com.android.internal.widget.NumericTextView: java.lang.CharSequence getText()>();

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void tryAnnounceForAccessibility(java.lang.CharSequence,boolean)>($r3, 0);

     label1:
        return;
    }

    private void updateHeaderSeparator()
    {
        android.widget.TimePickerClockDelegate r0;
        java.util.Locale r1;
        boolean $z0;
        java.lang.String $r2, r5, r6;
        android.widget.TextView $r3;
        android.widget.TextInputTimePickerView $r4;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z0 == 0 goto label1;

        r5 = "Hm";

        goto label2;

     label1:
        r5 = "hm";

     label2:
        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r1, r5);

        r6 = staticinvoke <android.widget.TimePickerClockDelegate: java.lang.String getHourMinSeparatorFromPattern(java.lang.String)>($r2);

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextView mSeparatorView>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>(r6);

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        virtualinvoke $r4.<android.widget.TextInputTimePickerView: void updateSeparator(java.lang.String)>(r6);

        return;
    }

    private void updateHourFormat()
    {
        android.widget.TimePickerClockDelegate r0;
        java.util.Locale r1, $r4;
        int i0, $i2, $i3, $i4, $i5, i8, $i11, i13, i14, i15, i16;
        char c1, $c6, c9;
        boolean $z1, $z2, z3, z4, $z5, z6;
        com.android.internal.widget.NumericTextView $r2, $r3;
        android.icu.text.DecimalFormatSymbols $r5;
        android.widget.TextInputTimePickerView $r6;
        java.lang.String $r7, r8, r9;
        java.lang.String[] r10;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z1 == 0 goto label01;

        r8 = "Hm";

        goto label02;

     label01:
        r8 = "hm";

     label02:
        r9 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r1, r8);

        i0 = virtualinvoke r9.<java.lang.String: int length()>();

        i8 = 0;

     label03:
        z3 = 0;

        c9 = 0;

        if i8 >= i0 goto label06;

        c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i8);

        if c1 == 72 goto label05;

        if c1 == 104 goto label05;

        if c1 == 75 goto label05;

        if c1 != 107 goto label04;

        goto label05;

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        z3 = 0;

        c9 = c1;

        $i11 = i8 + 1;

        if $i11 >= i0 goto label06;

        z3 = 0;

        c9 = c1;

        $i5 = i8 + 1;

        $c6 = virtualinvoke r9.<java.lang.String: char charAt(int)>($i5);

        if c1 != $c6 goto label06;

        z3 = 1;

        c9 = c1;

     label06:
        r0.<android.widget.TimePickerClockDelegate: boolean mHourFormatShowLeadingZero> = z3;

        if c9 == 75 goto label08;

        if c9 != 72 goto label07;

        goto label08;

     label07:
        z4 = 0;

        goto label09;

     label08:
        z4 = 1;

     label09:
        r0.<android.widget.TimePickerClockDelegate: boolean mHourFormatStartsAtZero> = z4;

        z6 = 1 ^ z4;

        i16 = (int) z6;

        $z5 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z5 == 0 goto label10;

        i13 = 23;

        goto label11;

     label10:
        i13 = 11;

     label11:
        $r2 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $i2 = i13 + i16;

        virtualinvoke $r2.<com.android.internal.widget.NumericTextView: void setRange(int,int)>(i16, $i2);

        $r3 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        $z2 = r0.<android.widget.TimePickerClockDelegate: boolean mHourFormatShowLeadingZero>;

        virtualinvoke $r3.<com.android.internal.widget.NumericTextView: void setShowLeadingZeroes(boolean)>($z2);

        $r4 = r0.<android.widget.TimePickerClockDelegate: java.util.Locale mLocale>;

        $r5 = staticinvoke <android.icu.text.DecimalFormatSymbols: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)>($r4);

        r10 = virtualinvoke $r5.<android.icu.text.DecimalFormatSymbols: java.lang.String[] getDigitStrings()>();

        i14 = 0;

        i15 = 0;

     label12:
        if i15 >= 10 goto label13;

        $r7 = r10[i15];

        $i4 = virtualinvoke $r7.<java.lang.String: int length()>();

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(i14, $i4);

        i15 = i15 + 1;

        goto label12;

     label13:
        $r6 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        $i3 = i14 * 2;

        virtualinvoke $r6.<android.widget.TextInputTimePickerView: void setHourFormat(int)>($i3);

        return;
    }

    private void updateRadialPicker(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1, $i2;
        boolean $z0;
        android.widget.RadialTimePickerView $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i2 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        $i1 = r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute>;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void initialize(int,int,boolean)>($i2, $i1, $z0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setCurrentItemShowing(int,boolean,boolean)>(i0, 0, 1);

        return;
    }

    private void updateTextInputPicker()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.TextInputTimePickerView r1;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;
        byte b4;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        $i2 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        i0 = specialinvoke r0.<android.widget.TimePickerClockDelegate: int getLocalizedHour(int)>($i2);

        i1 = r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute>;

        $i3 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        if $i3 >= 12 goto label1;

        b4 = 0;

        goto label2;

     label1:
        b4 = 1;

     label2:
        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mHourFormatStartsAtZero>;

        virtualinvoke r1.<android.widget.TextInputTimePickerView: void updateTextInputValues(int,int,int,boolean,boolean)>(i0, i1, b4, $z1, $z0);

        return;
    }

    private void updateUI(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1, $i2;
        android.widget.TimePicker $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderAmPm()>();

        $i1 = r0.<android.widget.TimePickerClockDelegate: int mCurrentHour>;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderHour(int,boolean)>($i1, 0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderSeparator()>();

        $i2 = r0.<android.widget.TimePickerClockDelegate: int mCurrentMinute>;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHeaderMinute(int,boolean)>($i2, 0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateRadialPicker(int)>(i0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateTextInputPicker()>();

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void invalidate()>();

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerClockDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.TimePickerClockDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public android.view.View getAmView()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.RadioButton $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        return $r1;
    }

    public int getBaseline()
    {
        android.widget.TimePickerClockDelegate r0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        return -1;
    }

    public int getHour()
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, $i1, $i2, $i3, $i4;
        android.widget.RadialTimePickerView $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $r2 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i1 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getAmOrPm()>();

        if $i1 != 1 goto label2;

        $i3 = i0 % 12;

        $i4 = $i3 + 12;

        return $i4;

     label2:
        $i2 = i0 % 12;

        return $i2;
    }

    public android.view.View getHourView()
    {
        android.widget.TimePickerClockDelegate r0;
        com.android.internal.widget.NumericTextView $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        return $r1;
    }

    public int getMinute()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.RadialTimePickerView $r1;
        int $i0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        return $i0;
    }

    public android.view.View getMinuteView()
    {
        android.widget.TimePickerClockDelegate r0;
        com.android.internal.widget.NumericTextView $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        return $r1;
    }

    public android.view.View getPmView()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.RadioButton $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        return $r1;
    }

    public boolean is24Hour()
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        return $z0;
    }

    public boolean isEnabled()
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIsEnabled>;

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerClockDelegate r0;
        java.lang.String r1, $r12, r14;
        java.util.List r2;
        boolean $z0;
        java.util.Calendar $r3, $r4, $r5;
        int $i0, $i1, $i3;
        android.content.Context $r6;
        long $l2;
        android.widget.RadialTimePickerView $r7;
        java.lang.StringBuilder $r8;
        android.view.accessibility.AccessibilityEvent r13;
        short s4;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r13 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z0 == 0 goto label1;

        s4 = 1 | 128;

        goto label2;

     label1:
        s4 = 1 | 64;

     label2:
        $r3 = r0.<android.widget.TimePickerClockDelegate: java.util.Calendar mTempCalendar>;

        $i0 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(11, $i0);

        $r4 = r0.<android.widget.TimePickerClockDelegate: java.util.Calendar mTempCalendar>;

        $i1 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getMinute()>();

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(12, $i1);

        $r6 = r0.<android.widget.TimePickerClockDelegate: android.content.Context mContext>;

        $r5 = r0.<android.widget.TimePickerClockDelegate: java.util.Calendar mTempCalendar>;

        $l2 = virtualinvoke $r5.<java.util.Calendar: long getTimeInMillis()>();

        r1 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r6, $l2, s4);

        $r7 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i3 = virtualinvoke $r7.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        if $i3 != 0 goto label3;

        r14 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectHours>;

        goto label4;

     label3:
        r14 = r0.<android.widget.TimePickerClockDelegate: java.lang.String mSelectMinutes>;

     label4:
        r2 = virtualinvoke r13.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        android.widget.RadialTimePickerView $r1;
        android.os.Parcelable r2;
        android.widget.TimePicker$AbstractTimePickerDelegate$SavedState r3;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r2 := @parameter0: android.os.Parcelable;

        $z0 = r2 instanceof android.widget.TimePicker$AbstractTimePickerDelegate$SavedState;

        if $z0 == 0 goto label1;

        r3 = (android.widget.TimePicker$AbstractTimePickerDelegate$SavedState) r2;

        $i0 = virtualinvoke r3.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: int getHour()>();

        $i1 = virtualinvoke r3.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: int getMinute()>();

        $z1 = virtualinvoke r3.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: boolean is24HourMode()>();

        $i2 = virtualinvoke r3.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void initialize(int,int,boolean,int)>($i0, $i1, $z1, $i2);

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void invalidate()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerClockDelegate r0;
        android.os.Parcelable r1;
        android.widget.TimePicker$AbstractTimePickerDelegate$SavedState $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = new android.widget.TimePicker$AbstractTimePickerDelegate$SavedState;

        $i0 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        $i1 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getMinute()>();

        $z0 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: boolean is24Hour()>();

        $i2 = specialinvoke r0.<android.widget.TimePickerClockDelegate: int getCurrentItemShowing()>();

        specialinvoke $r2.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: void <init>(android.os.Parcelable,int,int,boolean,int)>(r1, $i0, $i1, $z0, $i2);

        return $r2;
    }

    public void setDate(int, int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0, i1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setHourInternal(int,int,boolean,boolean)>(i0, 0, 1, 0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setMinuteInternal(int,int,boolean)>(i1, 0, 0);

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void onTimeChanged()>();

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean z0;
        com.android.internal.widget.NumericTextView $r1, $r2;
        android.widget.RadioButton $r3, $r4;
        android.widget.RadialTimePickerView $r5;

        r0 := @this: android.widget.TimePickerClockDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mHourView>;

        virtualinvoke $r1.<com.android.internal.widget.NumericTextView: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.TimePickerClockDelegate: com.android.internal.widget.NumericTextView mMinuteView>;

        virtualinvoke $r2.<com.android.internal.widget.NumericTextView: void setEnabled(boolean)>(z0);

        $r3 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mAmLabel>;

        virtualinvoke $r3.<android.widget.RadioButton: void setEnabled(boolean)>(z0);

        $r4 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadioButton mPmLabel>;

        virtualinvoke $r4.<android.widget.RadioButton: void setEnabled(boolean)>(z0);

        $r5 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r5.<android.widget.RadialTimePickerView: void setEnabled(boolean)>(z0);

        r0.<android.widget.TimePickerClockDelegate: boolean mIsEnabled> = z0;

        return;
    }

    public void setHour(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setHourInternal(int,int,boolean,boolean)>(i0, 0, 1, 1);

        return;
    }

    public void setIs24Hour(boolean)
    {
        android.widget.TimePickerClockDelegate r0;
        boolean z0, $z1;
        int $i0, $i1;
        android.widget.RadialTimePickerView $r1;

        r0 := @this: android.widget.TimePickerClockDelegate;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TimePickerClockDelegate: boolean mIs24Hour> = z0;

        $i0 = virtualinvoke r0.<android.widget.TimePickerClockDelegate: int getHour()>();

        r0.<android.widget.TimePickerClockDelegate: int mCurrentHour> = $i0;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateHourFormat()>();

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i1 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void updateUI(int)>($i1);

     label1:
        return;
    }

    public void setMinute(int)
    {
        android.widget.TimePickerClockDelegate r0;
        int i0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerClockDelegate: void setMinuteInternal(int,int,boolean)>(i0, 0, 1);

        return;
    }

    public boolean validateInput()
    {
        android.widget.TimePickerClockDelegate r0;
        android.widget.TextInputTimePickerView $r1;
        boolean $z0;

        r0 := @this: android.widget.TimePickerClockDelegate;

        $r1 = r0.<android.widget.TimePickerClockDelegate: android.widget.TextInputTimePickerView mTextInputPickerView>;

        $z0 = virtualinvoke $r1.<android.widget.TextInputTimePickerView: boolean validateInput()>();

        return $z0;
    }
}
