class android.widget.TimePickerSpinnerDelegate extends android.widget.TimePicker$AbstractTimePickerDelegate
{
    private static final boolean DEFAULT_ENABLED_STATE;
    private static final int HOURS_IN_HALF_DAY;
    private final android.widget.Button mAmPmButton;
    private final android.widget.NumberPicker mAmPmSpinner;
    private final android.widget.EditText mAmPmSpinnerInput;
    private final java.lang.String[] mAmPmStrings;
    private final android.widget.TextView mDivider;
    private char mHourFormat;
    private final android.widget.NumberPicker mHourSpinner;
    private final android.widget.EditText mHourSpinnerInput;
    private boolean mHourWithTwoDigit;
    private boolean mIs24HourView;
    private boolean mIsAm;
    private boolean mIsEnabled;
    private final android.widget.NumberPicker mMinuteSpinner;
    private final android.widget.EditText mMinuteSpinnerInput;
    private final java.util.Calendar mTempCalendar;

    public void <init>(android.widget.TimePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int[] $r1;
        android.content.Context $r2, $r3, r38;
        android.view.LayoutInflater $r4;
        android.widget.TimePicker $r5, $r11, $r13, $r24, $r32, $r33, r37;
        android.view.View $r6, $r7, $r10, $r12, $r14, $r22, $r31, $r34, r46;
        android.widget.TimePickerSpinnerDelegate$1 $r8;
        android.widget.NumberPicker $r9, $r15, $r16, $r17, $r20, $r21, $r25, $r27, $r29, $r30, r41, r44, r48;
        android.widget.NumberPicker$Formatter $r18;
        android.widget.TimePickerSpinnerDelegate$2 $r19;
        java.lang.String[] $r23, $r26;
        boolean $z0, $z1, $z2;
        android.widget.TimePickerSpinnerDelegate$4 $r28;
        int $i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams $r35;
        android.widget.TimePickerSpinnerDelegate$3 $r36;
        android.util.AttributeSet r39;
        android.content.res.TypedArray r40;
        android.widget.EditText r42, r45, r49;
        android.widget.TextView r43;
        android.widget.Button r47;
        android.view.ViewGroup r50;
        android.view.ViewGroup$MarginLayoutParams r51;
        java.util.Locale $r52;
        java.util.Calendar r53, $r54;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r37 := @parameter0: android.widget.TimePicker;

        r38 := @parameter1: android.content.Context;

        r39 := @parameter2: android.util.AttributeSet;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>(r37, r38);

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled> = 1;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r1 = <com.android.internal.R$styleable: int[] TimePicker>;

        r40 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r39, $r1, i1, i2);

        i3 = virtualinvoke r40.<android.content.res.TypedArray: int getResourceId(int,int)>(13, 17367337);

        virtualinvoke r40.<android.content.res.TypedArray: void recycle()>();

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r6 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i3, $r5, 1);

        virtualinvoke $r6.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        $r7 = virtualinvoke r37.<android.widget.TimePicker: android.view.View findViewById(int)>(16909048);

        r41 = (android.widget.NumberPicker) $r7;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner> = r41;

        $r8 = new android.widget.TimePickerSpinnerDelegate$1;

        specialinvoke $r8.<android.widget.TimePickerSpinnerDelegate$1: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke r41.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r8);

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        $r10 = virtualinvoke $r9.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909245);

        r42 = (android.widget.EditText) $r10;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mHourSpinnerInput> = r42;

        virtualinvoke r42.<android.widget.EditText: void setImeOptions(int)>(5);

        $r11 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r12 = virtualinvoke $r11.<android.widget.TimePicker: android.view.View findViewById(int)>(16908933);

        r43 = (android.widget.TextView) $r12;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mDivider> = r43;

        if r43 == null goto label1;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setDividerText()>();

     label1:
        $r13 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r14 = virtualinvoke $r13.<android.widget.TimePicker: android.view.View findViewById(int)>(16909176);

        r44 = (android.widget.NumberPicker) $r14;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner> = r44;

        virtualinvoke r44.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r15 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r15.<android.widget.NumberPicker: void setMaxValue(int)>(59);

        $r16 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r16.<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>(100L);

        $r17 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        $r18 = staticinvoke <android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>();

        virtualinvoke $r17.<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)>($r18);

        $r20 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        $r19 = new android.widget.TimePickerSpinnerDelegate$2;

        specialinvoke $r19.<android.widget.TimePickerSpinnerDelegate$2: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke $r20.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r19);

        $r21 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        $r22 = virtualinvoke $r21.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909245);

        r45 = (android.widget.EditText) $r22;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput> = r45;

        virtualinvoke r45.<android.widget.EditText: void setImeOptions(int)>(5);

        $r23 = staticinvoke <android.widget.TimePickerSpinnerDelegate: java.lang.String[] getAmPmStrings(android.content.Context)>(r38);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String[] mAmPmStrings> = $r23;

        $r24 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        r46 = virtualinvoke $r24.<android.widget.TimePicker: android.view.View findViewById(int)>(16908752);

        $z0 = r46 instanceof android.widget.Button;

        if $z0 == 0 goto label2;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner> = null;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput> = null;

        r47 = (android.widget.Button) r46;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton> = r47;

        $r36 = new android.widget.TimePickerSpinnerDelegate$3;

        specialinvoke $r36.<android.widget.TimePickerSpinnerDelegate$3: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke r47.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r36);

        goto label3;

     label2:
        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton> = null;

        r48 = (android.widget.NumberPicker) r46;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner> = r48;

        virtualinvoke r48.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r25 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r25.<android.widget.NumberPicker: void setMaxValue(int)>(1);

        $r27 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        $r26 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String[] mAmPmStrings>;

        virtualinvoke $r27.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>($r26);

        $r29 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        $r28 = new android.widget.TimePickerSpinnerDelegate$4;

        specialinvoke $r28.<android.widget.TimePickerSpinnerDelegate$4: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke $r29.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r28);

        $r30 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        $r31 = virtualinvoke $r30.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909245);

        r49 = (android.widget.EditText) $r31;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput> = r49;

        virtualinvoke r49.<android.widget.EditText: void setImeOptions(int)>(6);

     label3:
        $z1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isAmPmAtStart()>();

        if $z1 == 0 goto label4;

        $r34 = virtualinvoke r37.<android.widget.TimePicker: android.view.View findViewById(int)>(16909535);

        r50 = (android.view.ViewGroup) $r34;

        virtualinvoke r50.<android.view.ViewGroup: void removeView(android.view.View)>(r46);

        virtualinvoke r50.<android.view.ViewGroup: void addView(android.view.View,int)>(r46, 0);

        $r35 = virtualinvoke r46.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r51 = (android.view.ViewGroup$MarginLayoutParams) $r35;

        i4 = virtualinvoke r51.<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>();

        i5 = virtualinvoke r51.<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>();

        if i4 == i5 goto label4;

        virtualinvoke r51.<android.view.ViewGroup$MarginLayoutParams: void setMarginStart(int)>(i5);

        virtualinvoke r51.<android.view.ViewGroup$MarginLayoutParams: void setMarginEnd(int)>(i4);

     label4:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void getHourFormatData()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHourControl()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateMinuteControl()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmControl()>();

        $r52 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mLocale>;

        r53 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r52);

        r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar> = r53;

        $i6 = virtualinvoke r53.<java.util.Calendar: int get(int)>(11);

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setHour(int)>($i6);

        $r54 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $i7 = virtualinvoke $r54.<java.util.Calendar: int get(int)>(12);

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setMinute(int)>($i7);

        $z2 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isEnabled()>();

        if $z2 != 0 goto label5;

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setEnabled(boolean)>(0);

     label5:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setContentDescriptions()>();

        $r32 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $i0 = virtualinvoke $r32.<android.widget.TimePicker: int getImportantForAccessibility()>();

        if $i0 != 0 goto label6;

        $r33 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r33.<android.widget.TimePicker: void setImportantForAccessibility(int)>(1);

     label6:
        return;
    }

    static void access$000(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateInputState()>();

        return;
    }

    static boolean access$100(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm>;

        return $z0;
    }

    static boolean access$102(android.widget.TimePickerSpinnerDelegate, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter1: boolean;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm> = z0;

        return z0;
    }

    static void access$200(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmControl()>();

        return;
    }

    static void access$300(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

        return;
    }

    static android.widget.NumberPicker access$400(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        return $r1;
    }

    static android.widget.NumberPicker access$500(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        return $r1;
    }

    public static java.lang.String[] getAmPmStrings(android.content.Context)
    {
        android.content.res.Resources $r0;
        android.content.res.Configuration $r1;
        java.util.Locale $r2;
        java.lang.String[] $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r4, $r7, r12, r13;
        int $i0, $i1;
        android.content.Context r10;
        libcore.icu.LocaleData r11;

        r10 := @parameter0: android.content.Context;

        $r0 = virtualinvoke r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r2 = $r1.<android.content.res.Configuration: java.util.Locale locale>;

        r11 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r2);

        $r3 = r11.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $r4 = $r3[0];

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 4 goto label1;

        r12 = r11.<libcore.icu.LocaleData: java.lang.String narrowAm>;

        goto label2;

     label1:
        $r5 = r11.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        r12 = $r5[0];

     label2:
        $r6 = r11.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $r7 = $r6[1];

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 4 goto label3;

        r13 = r11.<libcore.icu.LocaleData: java.lang.String narrowPm>;

        goto label4;

     label3:
        $r8 = r11.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        r13 = $r8[1];

     label4:
        $r9 = newarray (java.lang.String)[2];

        $r9[0] = r12;

        $r9[1] = r13;

        return $r9;
    }

    private void getHourFormatData()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.util.Locale r1;
        int i0, $i2, i4, $i6;
        char c1, $c3, $c5;
        boolean $z0;
        java.lang.String r2, r3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mLocale>;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        r2 = "Hm";

        goto label2;

     label1:
        r2 = "hm";

     label2:
        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r1, r2);

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mHourWithTwoDigit> = 0;

        i4 = 0;

     label3:
        if i4 >= i0 goto label6;

        c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4);

        if c1 == 72 goto label5;

        if c1 == 104 goto label5;

        if c1 == 75 goto label5;

        if c1 != 107 goto label4;

        goto label5;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        $c5 = (char) c1;

        r0.<android.widget.TimePickerSpinnerDelegate: char mHourFormat> = $c5;

        $i6 = i4 + 1;

        if $i6 >= i0 goto label6;

        $i2 = i4 + 1;

        $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2);

        if c1 != $c3 goto label6;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mHourWithTwoDigit> = 1;

     label6:
        return;
    }

    private boolean isAmPmAtStart()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.util.Locale $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mLocale>;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, "hm");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("a");

        return $z0;
    }

    private void onTimeChanged()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePicker $r1, $r5, $r7;
        android.widget.TimePicker$OnTimeChangedListener $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        if $r2 == null goto label1;

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $i2 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        $i3 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getMinute()>();

        interfaceinvoke $r6.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r7, $i2, $i3);

     label1:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mAutoFillChangeListener>;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $i0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        $i1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getMinute()>();

        interfaceinvoke $r4.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r5, $i0, $i1);

     label2:
        return;
    }

    private void setContentDescriptions()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r2, 16909072, 17041356);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r3, 16908918, 17041350);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r4, 16909072, 17041355);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r5, 16908918, 17041349);

        r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>(r1, 16909072, 17041357);

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r6, 16908918, 17041351);

     label1:
        return;
    }

    private void setCurrentHour(int, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, i2;
        boolean z0, $z1;
        android.widget.NumberPicker $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void resetAutofilledValue()>();

        i2 = i0;

        $z1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        if $z1 != 0 goto label4;

        if i0 < 12 goto label2;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm> = 0;

        i2 = i0;

        if i0 <= 12 goto label3;

        i2 = i0 - 12;

        goto label3;

     label2:
        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm> = 1;

        i2 = i0;

        if i0 != 0 goto label3;

        i2 = 12;

     label3:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmControl()>();

     label4:
        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r1.<android.widget.NumberPicker: void setValue(int)>(i2);

        if z0 == 0 goto label5;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

     label5:
        return;
    }

    private void setCurrentMinute(int, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1;
        boolean z0;
        android.widget.NumberPicker $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getMinute()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void resetAutofilledValue()>();

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r1.<android.widget.NumberPicker: void setValue(int)>(i0);

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

     label2:
        return;
    }

    private void setDividerText()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;
        java.util.Locale $r1;
        int $i0, $i1, $i2, i4, i5, i6;
        char $c3;
        java.lang.String r2, r3, r4;
        android.widget.TextView $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        r2 = "Hm";

        goto label2;

     label1:
        r2 = "hm";

     label2:
        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mLocale>;

        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, r2);

        i4 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(72);

        i5 = i4;

        if i4 != -1 goto label3;

        i5 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(104);

     label3:
        if i5 != -1 goto label4;

        r4 = ":";

        goto label6;

     label4:
        $i0 = i5 + 1;

        i6 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(109, $i0);

        if i6 != -1 goto label5;

        $i2 = i5 + 1;

        $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2);

        r4 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c3);

        goto label6;

     label5:
        $i1 = i5 + 1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i1, i6);

     label6:
        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mDivider>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        return;
    }

    private void trySetContentDescription(android.view.View, int, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1;
        android.content.Context $r1;
        java.lang.String $r2;
        android.view.View r3, r4;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r3 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(i0);

        if r4 == null goto label1;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i1);

        virtualinvoke r4.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r2);

     label1:
        return;
    }

    private void updateAmPmControl()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0, $z1, $z2;
        java.lang.String[] $r1;
        java.lang.String $r2;
        android.widget.Button $r3, $r4, $r6;
        android.widget.NumberPicker $r5, r7, r8;
        android.widget.TimePicker $r9;
        int i0, i1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        if $z1 == 0 goto label2;

        r7 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        if r7 == null goto label1;

        virtualinvoke r7.<android.widget.NumberPicker: void setVisibility(int)>(8);

        goto label4;

     label1:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton>;

        virtualinvoke $r6.<android.widget.Button: void setVisibility(int)>(8);

        goto label4;

     label2:
        $z2 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm>;

        z0 = $z2 ^ 1;

        r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        if r8 == null goto label3;

        i0 = (int) z0;

        virtualinvoke r8.<android.widget.NumberPicker: void setValue(int)>(i0);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r5.<android.widget.NumberPicker: void setVisibility(int)>(0);

        goto label4;

     label3:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton>;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String[] mAmPmStrings>;

        i1 = (int) z0;

        $r2 = $r1[i1];

        virtualinvoke $r3.<android.widget.Button: void setText(java.lang.CharSequence)>($r2);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton>;

        virtualinvoke $r4.<android.widget.Button: void setVisibility(int)>(0);

     label4:
        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r9.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        return;
    }

    private void updateHourControl()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;
        char $c0, $c1;
        android.widget.NumberPicker$Formatter r10;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        if $z0 == 0 goto label2;

        $c1 = r0.<android.widget.TimePickerSpinnerDelegate: char mHourFormat>;

        if $c1 != 107 goto label1;

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r8.<android.widget.NumberPicker: void setMinValue(int)>(1);

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r9.<android.widget.NumberPicker: void setMaxValue(int)>(24);

        goto label4;

     label1:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r6.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r7.<android.widget.NumberPicker: void setMaxValue(int)>(23);

        goto label4;

     label2:
        $c0 = r0.<android.widget.TimePickerSpinnerDelegate: char mHourFormat>;

        if $c0 != 75 goto label3;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r4.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r5.<android.widget.NumberPicker: void setMaxValue(int)>(11);

        goto label4;

     label3:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r2.<android.widget.NumberPicker: void setMinValue(int)>(1);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r3.<android.widget.NumberPicker: void setMaxValue(int)>(12);

     label4:
        r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mHourWithTwoDigit>;

        if $z1 == 0 goto label5;

        r10 = staticinvoke <android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>();

        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r1.<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)>(r10);

        return;
    }

    private void updateInputState()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.inputmethod.InputMethodManager r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.widget.EditText $r4, $r5, $r6, $r7, $r10, $r13;
        boolean $z0, $z1, $z2;
        android.widget.TimePicker $r8, $r11, $r14;
        android.os.IBinder $r9, $r12, $r15;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        r1 = (android.view.inputmethod.InputMethodManager) $r3;

        if r1 == null goto label3;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mHourSpinnerInput>;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r4);

        if $z0 == 0 goto label1;

        $r13 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mHourSpinnerInput>;

        virtualinvoke $r13.<android.widget.EditText: void clearFocus()>();

        $r14 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r15 = virtualinvoke $r14.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r15, 0);

        goto label3;

     label1:
        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput>;

        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r5);

        if $z1 == 0 goto label2;

        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r10.<android.widget.EditText: void clearFocus()>();

        $r11 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r12 = virtualinvoke $r11.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r12, 0);

        goto label3;

     label2:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput>;

        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r6);

        if $z2 == 0 goto label3;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput>;

        virtualinvoke $r7.<android.widget.EditText: void clearFocus()>();

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r9 = virtualinvoke $r8.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r9, 0);

     label3:
        return;
    }

    private void updateMinuteControl()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;
        android.widget.EditText $r1, $r2;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r2.<android.widget.EditText: void setImeOptions(int)>(6);

        goto label2;

     label1:
        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r1.<android.widget.EditText: void setImeOptions(int)>(5);

     label2:
        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public android.view.View getAmView()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.EditText $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput>;

        return $r1;
    }

    public int getBaseline()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;
        int $i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        $i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getBaseline()>();

        return $i0;
    }

    public int getHour()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, $i2, $i3;
        android.widget.NumberPicker $r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getValue()>();

        $z0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsAm>;

        if $z1 == 0 goto label2;

        $i3 = i0 % 12;

        return $i3;

     label2:
        $i1 = i0 % 12;

        $i2 = $i1 + 12;

        return $i2;
    }

    public android.view.View getHourView()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.EditText $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mHourSpinnerInput>;

        return $r1;
    }

    public int getMinute()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;
        int $i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        $i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getValue()>();

        return $i0;
    }

    public android.view.View getMinuteView()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.EditText $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mMinuteSpinnerInput>;

        return $r1;
    }

    public android.view.View getPmView()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.EditText $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.EditText mAmPmSpinnerInput>;

        return $r1;
    }

    public boolean is24Hour()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        return $z0;
    }

    public boolean isEnabled()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled>;

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.String r2;
        boolean $z0;
        java.util.Calendar $r3, $r4, $r5;
        int $i0, $i1;
        android.content.Context $r6;
        long $l2;
        java.util.List $r7;
        short s3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        s3 = 1 | 128;

        goto label2;

     label1:
        s3 = 1 | 64;

     label2:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $i0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(11, $i0);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $i1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getMinute()>();

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(12, $i1);

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $l2 = virtualinvoke $r5.<java.util.Calendar: long getTimeInMillis()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r6, $l2, s3);

        $r7 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;
        int $i0, $i1;
        android.os.Parcelable r1;
        android.widget.TimePicker$AbstractTimePickerDelegate$SavedState r2;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.widget.TimePicker$AbstractTimePickerDelegate$SavedState;

        if $z0 == 0 goto label1;

        r2 = (android.widget.TimePicker$AbstractTimePickerDelegate$SavedState) r1;

        $i0 = virtualinvoke r2.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: int getHour()>();

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setHour(int)>($i0);

        $i1 = virtualinvoke r2.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: int getMinute()>();

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setMinute(int)>($i1);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.os.Parcelable r1;
        android.widget.TimePicker$AbstractTimePickerDelegate$SavedState $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = new android.widget.TimePicker$AbstractTimePickerDelegate$SavedState;

        $i0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        $i1 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getMinute()>();

        $z0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>();

        specialinvoke $r2.<android.widget.TimePicker$AbstractTimePickerDelegate$SavedState: void <init>(android.os.Parcelable,int,int,boolean)>(r1, $i0, $i1, $z0);

        return $r2;
    }

    public void setDate(int, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentHour(int,boolean)>(i0, 0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentMinute(int,boolean)>(i1, 0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0;
        android.widget.NumberPicker $r1, $r2, r5;
        android.widget.Button $r3;
        android.widget.TextView r4;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r1.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mDivider>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.widget.TextView: void setEnabled(boolean)>(z0);

     label1:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r2.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.NumberPicker mAmPmSpinner>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        goto label3;

     label2:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.Button mAmPmButton>;

        virtualinvoke $r3.<android.widget.Button: void setEnabled(boolean)>(z0);

     label3:
        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled> = z0;

        return;
    }

    public void setHour(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentHour(int,boolean)>(i0, 1);

        return;
    }

    public void setIs24Hour(boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0, $z1;
        int i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z1 != z0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getHour()>();

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView> = z0;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void getHourFormatData()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHourControl()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentHour(int,boolean)>(i0, 0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateMinuteControl()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmControl()>();

        return;
    }

    public void setMinute(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentMinute(int,boolean)>(i0, 1);

        return;
    }

    public boolean validateInput()
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        return 1;
    }

    public static void <clinit>()
    {
        <android.widget.TimePickerSpinnerDelegate: int HOURS_IN_HALF_DAY> = 12;

        <android.widget.TimePickerSpinnerDelegate: boolean DEFAULT_ENABLED_STATE> = 1;

        return;
    }
}
