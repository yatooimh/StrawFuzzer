public class android.widget.Toolbar extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    private int mButtonGravity;
    private android.widget.ImageButton mCollapseButtonView;
    private java.lang.CharSequence mCollapseDescription;
    private android.graphics.drawable.Drawable mCollapseIcon;
    private boolean mCollapsible;
    private int mContentInsetEndWithActions;
    private int mContentInsetStartWithNavigation;
    private android.widget.RtlSpacingHelper mContentInsets;
    private boolean mEatingTouch;
    android.view.View mExpandedActionView;
    private android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter;
    private int mGravity;
    private final java.util.ArrayList mHiddenViews;
    private android.widget.ImageView mLogoView;
    private int mMaxButtonHeight;
    private com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private android.widget.ActionMenuView mMenuView;
    private final android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener;
    private int mNavButtonStyle;
    private android.widget.ImageButton mNavButtonView;
    private android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener;
    private android.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private final java.lang.Runnable mShowOverflowMenuRunnable;
    private java.lang.CharSequence mSubtitleText;
    private int mSubtitleTextAppearance;
    private int mSubtitleTextColor;
    private android.widget.TextView mSubtitleTextView;
    private final int[] mTempMargins;
    private final java.util.ArrayList mTempViews;
    private int mTitleMarginBottom;
    private int mTitleMarginEnd;
    private int mTitleMarginStart;
    private int mTitleMarginTop;
    private java.lang.CharSequence mTitleText;
    private int mTitleTextAppearance;
    private int mTitleTextColor;
    private android.widget.TextView mTitleTextView;
    private com.android.internal.widget.ToolbarWidgetWrapper mWrapper;

    public void <init>(android.content.Context)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843946);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Toolbar r0;
        android.util.AttributeSet r1;
        android.content.res.TypedArray r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, $i22;
        java.util.ArrayList $r3, $r4;
        int[] $r5, $r8, $r9;
        android.widget.Toolbar$1 $r6;
        android.widget.Toolbar$2 $r7;
        android.widget.RtlSpacingHelper $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.Context $r12, r13;
        android.graphics.drawable.Drawable $r14, r18, r20;
        java.lang.CharSequence $r15, r16, r17, r19, r21;

        r0 := @this: android.widget.Toolbar;

        r13 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        i12 := @parameter2: int;

        i13 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r13, r1, i12, i13);

        r0.<android.widget.Toolbar: int mGravity> = 8388627;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.Toolbar: java.util.ArrayList mTempViews> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews> = $r4;

        $r5 = newarray (int)[2];

        r0.<android.widget.Toolbar: int[] mTempMargins> = $r5;

        $r6 = new android.widget.Toolbar$1;

        specialinvoke $r6.<android.widget.Toolbar$1: void <init>(android.widget.Toolbar)>(r0);

        r0.<android.widget.Toolbar: android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener> = $r6;

        $r7 = new android.widget.Toolbar$2;

        specialinvoke $r7.<android.widget.Toolbar$2: void <init>(android.widget.Toolbar)>(r0);

        r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable> = $r7;

        $r8 = <com.android.internal.R$styleable: int[] Toolbar>;

        r2 = virtualinvoke r13.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r1, $r8, i12, i13);

        $r9 = <com.android.internal.R$styleable: int[] Toolbar>;

        virtualinvoke r0.<android.widget.Toolbar: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>(r13, $r9, r1, r2, i12, i13);

        $i2 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        r0.<android.widget.Toolbar: int mTitleTextAppearance> = $i2;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        r0.<android.widget.Toolbar: int mSubtitleTextAppearance> = $i3;

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(27, 0);

        r0.<android.widget.Toolbar: int mNavButtonStyle> = $i4;

        $i5 = r0.<android.widget.Toolbar: int mGravity>;

        $i6 = virtualinvoke r2.<android.content.res.TypedArray: int getInteger(int,int)>(0, $i5);

        r0.<android.widget.Toolbar: int mGravity> = $i6;

        $i7 = virtualinvoke r2.<android.content.res.TypedArray: int getInteger(int,int)>(23, 48);

        r0.<android.widget.Toolbar: int mButtonGravity> = $i7;

        i14 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(17, 0);

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = i14;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = i14;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = i14;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = i14;

        i15 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(18, -1);

        if i15 < 0 goto label01;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = i15;

     label01:
        i16 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(19, -1);

        if i16 < 0 goto label02;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = i16;

     label02:
        i17 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(20, -1);

        if i17 < 0 goto label03;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = i17;

     label03:
        i18 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(21, -1);

        if i18 < 0 goto label04;

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = i18;

     label04:
        $i8 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(22, -1);

        r0.<android.widget.Toolbar: int mMaxButtonHeight> = $i8;

        i19 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(6, -2147483648);

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(7, -2147483648);

        i20 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, 0);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(9, 0);

        specialinvoke r0.<android.widget.Toolbar: void ensureContentInsets()>();

        $r10 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r10.<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>(i20, i1);

        if i19 != -2147483648 goto label05;

        if i0 == -2147483648 goto label06;

     label05:
        $r11 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r11.<android.widget.RtlSpacingHelper: void setRelative(int,int)>(i19, i0);

     label06:
        $i21 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(25, -2147483648);

        r0.<android.widget.Toolbar: int mContentInsetStartWithNavigation> = $i21;

        $i22 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(26, -2147483648);

        r0.<android.widget.Toolbar: int mContentInsetEndWithActions> = $i22;

        $r14 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(24);

        r0.<android.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon> = $r14;

        $r15 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(13);

        r0.<android.widget.Toolbar: java.lang.CharSequence mCollapseDescription> = $r15;

        r16 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(1);

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r16);

        if $z5 != 0 goto label07;

        virtualinvoke r0.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>(r16);

     label07:
        r17 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r17);

        if $z0 != 0 goto label08;

        virtualinvoke r0.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>(r17);

     label08:
        $r12 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r12;

        $i9 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        virtualinvoke r0.<android.widget.Toolbar: void setPopupTheme(int)>($i9);

        r18 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(11);

        if r18 == null goto label09;

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(r18);

     label09:
        r19 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(12);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z1 != 0 goto label10;

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>(r19);

     label10:
        r20 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        if r20 == null goto label11;

        virtualinvoke r0.<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>(r20);

     label11:
        r21 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(16);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r21);

        if $z2 != 0 goto label12;

        virtualinvoke r0.<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>(r21);

     label12:
        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(14);

        if $z3 == 0 goto label13;

        $i11 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(14, -1);

        virtualinvoke r0.<android.widget.Toolbar: void setTitleTextColor(int)>($i11);

        goto label13;

     label13:
        $z4 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(15);

        if $z4 == 0 goto label14;

        $i10 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(15, -1);

        virtualinvoke r0.<android.widget.Toolbar: void setSubtitleTextColor(int)>($i10);

     label14:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    static android.widget.Toolbar$OnMenuItemClickListener access$000(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$OnMenuItemClickListener $r1;

        r0 := @parameter0: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener>;

        return $r1;
    }

    static void access$200(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;

        r0 := @parameter0: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureCollapseButtonView()>();

        return;
    }

    static android.widget.ImageButton access$300(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1;

        r0 := @parameter0: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        return $r1;
    }

    static int access$400(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @parameter0: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mButtonGravity>;

        return $i0;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        android.widget.Toolbar r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        android.view.ViewGroup$LayoutParams $r2, $r3;
        boolean $z0, $z2, z4;
        android.view.View r4, r6;
        android.widget.Toolbar$LayoutParams r5, r7;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.util.List;

        i8 := @parameter1: int;

        i9 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        z4 = 1;

        if i9 != 1 goto label1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        $i1 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        i10 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i8, $i1);

        interfaceinvoke r1.<java.util.List: void clear()>();

        if z4 == 0 goto label6;

        i11 = i0 - 1;

     label3:
        if i11 < 0 goto label5;

        r4 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i11);

        $r3 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.Toolbar$LayoutParams) $r3;

        $i5 = r5.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i5 != 0 goto label4;

        $z2 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r4);

        if $z2 == 0 goto label4;

        $i6 = r5.<android.widget.Toolbar$LayoutParams: int gravity>;

        $i7 = specialinvoke r0.<android.widget.Toolbar: int getChildHorizontalGravity(int)>($i6);

        if $i7 != i10 goto label4;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        i11 = i11 + -1;

        goto label3;

     label5:
        goto label9;

     label6:
        i12 = 0;

     label7:
        if i12 >= i0 goto label9;

        r6 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i12);

        $r2 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.Toolbar$LayoutParams) $r2;

        $i2 = r7.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i2 != 0 goto label8;

        $z0 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r6);

        if $z0 == 0 goto label8;

        $i3 = r7.<android.widget.Toolbar$LayoutParams: int gravity>;

        $i4 = specialinvoke r0.<android.widget.Toolbar: int getChildHorizontalGravity(int)>($i3);

        if $i4 != i10 goto label8;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r6);

     label8:
        i12 = i12 + 1;

        goto label7;

     label9:
        return;
    }

    private void addSystemView(android.view.View, boolean)
    {
        android.widget.Toolbar r0;
        android.view.View r1, $r2;
        boolean z0, $z1;
        java.util.ArrayList $r3;
        android.view.ViewGroup$LayoutParams r4;
        android.widget.Toolbar$LayoutParams r5;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r4 != null goto label1;

        r5 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);

        if $z1 != 0 goto label2;

        r5 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);

        goto label3;

     label2:
        r5 = (android.widget.Toolbar$LayoutParams) r4;

     label3:
        r5.<android.widget.Toolbar$LayoutParams: int mViewType> = 1;

        if z0 == 0 goto label4;

        $r2 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        if $r2 == null goto label4;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        $r3 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label5;

     label4:
        virtualinvoke r0.<android.widget.Toolbar: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r5);

     label5:
        return;
    }

    private void ensureCollapseButtonView()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1, $r2, $r6, $r7, $r9;
        android.content.Context $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r4;
        java.lang.CharSequence $r5;
        android.widget.Toolbar$3 $r8;
        android.widget.Toolbar$LayoutParams r11;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r1 != null goto label1;

        $r2 = new android.widget.ImageButton;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $i0 = r0.<android.widget.Toolbar: int mNavButtonStyle>;

        specialinvoke $r2.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r3, null, 0, $i0);

        r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView> = $r2;

        $r4 = r0.<android.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        $r6 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r5 = r0.<android.widget.Toolbar: java.lang.CharSequence mCollapseDescription>;

        virtualinvoke $r6.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r5);

        r11 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388611 | $i2;

        r11.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        r11.<android.widget.Toolbar$LayoutParams: int mViewType> = 2;

        $r7 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r7.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r11);

        $r9 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r8 = new android.widget.Toolbar$3;

        specialinvoke $r8.<android.widget.Toolbar$3: void <init>(android.widget.Toolbar)>(r0);

        virtualinvoke $r9.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r8);

     label1:
        return;
    }

    private void ensureContentInsets()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if $r1 != null goto label1;

        $r2 = new android.widget.RtlSpacingHelper;

        specialinvoke $r2.<android.widget.RtlSpacingHelper: void <init>()>();

        r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets> = $r2;

     label1:
        return;
    }

    private void ensureLogoView()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView $r1, $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r1 != null goto label1;

        $r2 = new android.widget.ImageView;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.ImageView: void <init>(android.content.Context)>($r3);

        r0.<android.widget.Toolbar: android.widget.ImageView mLogoView> = $r2;

     label1:
        return;
    }

    private void ensureMenu()
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuBuilder r1, $r3;
        android.widget.ActionMenuView $r2, $r4, $r7;
        android.view.Menu $r5;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r6, $r9, $r10;
        android.content.Context $r8;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenuView()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r3 = virtualinvoke $r2.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        if $r3 != null goto label2;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r5 = virtualinvoke $r4.<android.widget.ActionMenuView: android.view.Menu getMenu()>();

        r1 = (com.android.internal.view.menu.MenuBuilder) $r5;

        $r6 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r6 != null goto label1;

        $r10 = new android.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r10.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(android.widget.Toolbar,android.widget.Toolbar$1)>(r0, null);

        r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r10;

     label1:
        $r7 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r7.<android.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>(1);

        $r9 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r8 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r9, $r8);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2, $r5, $r8, $r9, $r10;
        android.content.Context $r3;
        int $i0, $i1, $i2, $i3;
        android.widget.ActionMenuView$OnMenuItemClickListener $r4;
        com.android.internal.view.menu.MenuBuilder$Callback $r6;
        com.android.internal.view.menu.MenuPresenter$Callback $r7;
        android.widget.Toolbar$LayoutParams r12;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 != null goto label1;

        $r2 = new android.widget.ActionMenuView;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.ActionMenuView: void <init>(android.content.Context)>($r3);

        r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView> = $r2;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r2.<android.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r5 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener>;

        virtualinvoke $r5.<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView$OnMenuItemClickListener)>($r4);

        $r8 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r7 = r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback>;

        $r6 = r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback>;

        virtualinvoke $r8.<android.widget.ActionMenuView: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)>($r7, $r6);

        r12 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388613 | $i2;

        r12.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        $r9 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r9.<android.widget.ActionMenuView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r12);

        $r10 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r10, 0);

     label1:
        return;
    }

    private void ensureNavButtonView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams r1;
        android.widget.ImageButton $r2, $r3, $r5;
        android.content.Context $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 != null goto label1;

        $r3 = new android.widget.ImageButton;

        $r4 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $i0 = r0.<android.widget.Toolbar: int mNavButtonStyle>;

        specialinvoke $r3.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r4, null, 0, $i0);

        r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView> = $r3;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388611 | $i2;

        r1.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r5.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

     label1:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        android.widget.Toolbar r0;
        int i0, i1, $i2, i3;
        byte b4;

        r0 := @this: android.widget.Toolbar;

        i3 := @parameter0: int;

        i0 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        $i2 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i3, i0);

        i1 = $i2 & 7;

        if i1 == 1 goto label2;

        b4 = 3;

        if i1 == 3 goto label2;

        if i1 == 5 goto label2;

        if i0 != 1 goto label1;

        b4 = 5;

     label1:
        return b4;

     label2:
        return i1;
    }

    private int getChildTop(android.view.View, int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.widget.Toolbar$LayoutParams r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, $i32;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i24 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.Toolbar$LayoutParams) $r3;

        i25 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i24 <= 0 goto label1;

        $i23 = i25 - i24;

        i26 = $i23 / 2;

        goto label2;

     label1:
        i26 = 0;

     label2:
        $i2 = r2.<android.widget.Toolbar$LayoutParams: int gravity>;

        i27 = specialinvoke r0.<android.widget.Toolbar: int getChildVerticalGravity(int)>($i2);

        if i27 == 48 goto label6;

        if i27 == 80 goto label5;

        i0 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        i1 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        i28 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        $i12 = i28 - i0;

        $i13 = $i12 - i1;

        $i14 = $i13 - i25;

        i29 = $i14 / 2;

        $i15 = r2.<android.widget.Toolbar$LayoutParams: int topMargin>;

        if i29 >= $i15 goto label3;

        i30 = r2.<android.widget.Toolbar$LayoutParams: int topMargin>;

        goto label4;

     label3:
        $i16 = i28 - i1;

        $i17 = $i16 - i25;

        $i18 = $i17 - i29;

        i31 = $i18 - i0;

        i30 = i29;

        $i19 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        if i31 >= $i19 goto label4;

        $i20 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i21 = $i20 - i31;

        $i22 = i29 - $i21;

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i22);

     label4:
        $i32 = i0 + i30;

        return $i32;

     label5:
        $i5 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        $i6 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        $i7 = $i5 - $i6;

        $i9 = $i7 - i25;

        $i8 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i10 = $i9 - $i8;

        $i11 = $i10 - i26;

        return $i11;

     label6:
        $i3 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        $i4 = $i3 - i26;

        return $i4;
    }

    private int getChildVerticalGravity(int)
    {
        android.widget.Toolbar r0;
        int $i0, $i1, i2, i3;

        r0 := @this: android.widget.Toolbar;

        i2 := @parameter0: int;

        i3 = i2 & 112;

        if i3 == 16 goto label1;

        if i3 == 48 goto label1;

        if i3 == 80 goto label1;

        $i0 = r0.<android.widget.Toolbar: int mGravity>;

        $i1 = $i0 & 112;

        return $i1;

     label1:
        return i3;
    }

    private int getHorizontalMargins(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0, $i1, $i2;
        android.view.View r2;
        android.view.ViewGroup$MarginLayoutParams r3;

        r0 := @this: android.widget.Toolbar;

        r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        $i0 = virtualinvoke r3.<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>();

        $i1 = virtualinvoke r3.<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        android.widget.Toolbar r0;
        android.view.MenuInflater $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = new android.view.MenuInflater;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r1.<android.view.MenuInflater: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    private int getVerticalMargins(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0, $i1, $i2;
        android.view.View r2;
        android.view.ViewGroup$MarginLayoutParams r3;

        r0 := @this: android.widget.Toolbar;

        r2 := @parameter0: android.view.View;

        $r1 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        $i1 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        android.widget.Toolbar r0;
        java.util.List r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15;
        android.view.View r2;
        java.lang.Object $r3;
        android.view.ViewGroup$LayoutParams $r4;
        int[] r5;
        android.widget.Toolbar$LayoutParams r6;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: int[];

        i10 = r5[0];

        i11 = r5[1];

        i12 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i13 = 0;

     label1:
        if i13 >= i0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i13);

        r2 = (android.view.View) $r3;

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.widget.Toolbar$LayoutParams) $r4;

        $i3 = r6.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        i14 = $i3 - i10;

        $i4 = r6.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        i15 = $i4 - i11;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, i14);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i15);

        $i5 = neg i14;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i6 = neg i15;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i7 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i8 = $i7 + i1;

        $i9 = $i8 + i2;

        i12 = i12 + $i9;

        i13 = i13 + 1;

        goto label1;

     label2:
        return i12;
    }

    private boolean isChildOrHidden(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewParent $r2;
        java.util.ArrayList $r3;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == r0 goto label2;

        $r3 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private static boolean isCustomView(android.view.View)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.Toolbar$LayoutParams $r2;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (android.widget.Toolbar$LayoutParams) $r1;

        $i0 = $r2.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int[] r2;
        android.widget.Toolbar$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i11 := @parameter1: int;

        r2 := @parameter2: int[];

        i12 := @parameter3: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r4;

        $i1 = r3.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        $i0 = r2[0];

        i13 = $i1 - $i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i13);

        i14 = i11 + $i2;

        $i3 = neg i13;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        r2[0] = $i4;

        i15 = specialinvoke r0.<android.widget.Toolbar: int getChildTop(android.view.View,int)>(r1, i12);

        i16 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = i14 + i16;

        $i6 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i7 = $i6 + i15;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i14, i15, $i5, $i7);

        $i8 = r3.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        $i9 = $i8 + i16;

        $i10 = i14 + $i9;

        return $i10;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int[] r2;
        android.widget.Toolbar$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i11 := @parameter1: int;

        r2 := @parameter2: int[];

        i12 := @parameter3: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r4;

        $i1 = r3.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        $i0 = r2[1];

        i13 = $i1 - $i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i13);

        i14 = i11 - $i2;

        $i3 = neg i13;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        r2[1] = $i4;

        i15 = specialinvoke r0.<android.widget.Toolbar: int getChildTop(android.view.View,int)>(r1, i12);

        i16 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = i14 - i16;

        $i6 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i7 = $i6 + i15;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i5, i15, i14, $i7);

        $i8 = r3.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        $i9 = $i8 + i16;

        $i10 = i14 - $i9;

        return $i10;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        int[] r2;
        android.view.ViewGroup$MarginLayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: int[];

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r4;

        $i8 = r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i7 = r2[0];

        i4 = $i8 - $i7;

        $i10 = r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i9 = r2[1];

        i5 = $i10 - $i9;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, i4);

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, i5);

        i6 = $i11 + $i12;

        $i13 = neg i4;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        r2[0] = $i14;

        $i15 = neg i5;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        r2[1] = $i16;

        $i18 = r0.<android.widget.Toolbar: int mPaddingLeft>;

        $i17 = r0.<android.widget.Toolbar: int mPaddingRight>;

        $i19 = $i18 + $i17;

        $i20 = $i19 + i6;

        $i22 = $i20 + i1;

        $i21 = r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i23 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i0, $i22, $i21);

        $i25 = r0.<android.widget.Toolbar: int mPaddingTop>;

        $i24 = r0.<android.widget.Toolbar: int mPaddingBottom>;

        $i27 = $i25 + $i24;

        $i26 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i29 = $i27 + $i26;

        $i28 = r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i30 = $i29 + $i28;

        $i32 = $i30 + i3;

        $i31 = r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i33 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i2, $i32, $i31);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i23, $i33);

        $i34 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i35 = $i34 + i6;

        return $i35;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i22 := @parameter1: int;

        i23 := @parameter2: int;

        i24 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i4 = r0.<android.widget.Toolbar: int mPaddingLeft>;

        $i3 = r0.<android.widget.Toolbar: int mPaddingRight>;

        $i6 = $i4 + $i3;

        $i5 = r2.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i8 = $i6 + $i5;

        $i7 = r2.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i9 = $i8 + $i7;

        $i11 = $i9 + i23;

        $i10 = r2.<android.view.ViewGroup$MarginLayoutParams: int width>;

        i2 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i22, $i11, $i10);

        $i13 = r0.<android.widget.Toolbar: int mPaddingTop>;

        $i12 = r0.<android.widget.Toolbar: int mPaddingBottom>;

        $i15 = $i13 + $i12;

        $i14 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i17 = $i15 + $i14;

        $i16 = r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i18 = $i17 + $i16;

        $i20 = $i18 + i0;

        $i19 = r2.<android.view.ViewGroup$MarginLayoutParams: int height>;

        i25 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i24, $i20, $i19);

        i26 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i25);

        i27 = i25;

        if i26 == 1073741824 goto label3;

        i27 = i25;

        if i1 < 0 goto label3;

        if i26 == 0 goto label1;

        $i21 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i25);

        i28 = staticinvoke <java.lang.Math: int min(int,int)>($i21, i1);

        goto label2;

     label1:
        i28 = i1;

     label2:
        i27 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i28, 1073741824);

     label3:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i2, i27);

        return;
    }

    private void postShowOverflowMenu()
    {
        android.widget.Toolbar r0;
        java.lang.Runnable $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private boolean shouldCollapse()
    {
        android.widget.Toolbar r0;
        int i0, $i1, $i2, i3;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $z0 = r0.<android.widget.Toolbar: boolean mCollapsible>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i3);

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r1);

        if $z1 == 0 goto label3;

        $i1 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        if $i1 <= 0 goto label3;

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if $i2 <= 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    private boolean shouldLayout(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewParent $r2;
        int $i0;
        boolean z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 != r0 goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void addChildrenForExpandedActionView()
    {
        android.widget.Toolbar r0;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.view.View $r5;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.view.View) $r4;

        virtualinvoke r0.<android.widget.Toolbar: void addView(android.view.View)>($r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;
        int $i0;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        $i0 = virtualinvoke r0.<android.widget.Toolbar: int getVisibility()>();

        if $i0 != 0 goto label1;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z0 == 0 goto label1;

        $z1 = r1 instanceof android.widget.Toolbar$LayoutParams;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void collapseActionView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter r1;
        com.android.internal.view.menu.MenuItemImpl r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<com.android.internal.view.menu.MenuItemImpl: boolean collapseActionView()>();

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.ActionMenuView: void dismissPopupMenus()>();

     label1:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = new android.widget.Toolbar$LayoutParams;

        specialinvoke $r1.<android.widget.Toolbar$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.util.AttributeSet r1;
        android.widget.Toolbar$LayoutParams $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.Toolbar$LayoutParams $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.util.AttributeSet r1;
        android.widget.Toolbar$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.Toolbar$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.Toolbar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;
        android.widget.Toolbar$LayoutParams $r2, $r3, $r5, $r7, $r8;
        android.view.ViewGroup$MarginLayoutParams $r4;
        android.app.ActionBar$LayoutParams $r6;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        $r7 = new android.widget.Toolbar$LayoutParams;

        $r8 = (android.widget.Toolbar$LayoutParams) r1;

        specialinvoke $r7.<android.widget.Toolbar$LayoutParams: void <init>(android.widget.Toolbar$LayoutParams)>($r8);

        return $r7;

     label1:
        $z1 = r1 instanceof android.app.ActionBar$LayoutParams;

        if $z1 == 0 goto label2;

        $r5 = new android.widget.Toolbar$LayoutParams;

        $r6 = (android.app.ActionBar$LayoutParams) r1;

        specialinvoke $r5.<android.widget.Toolbar$LayoutParams: void <init>(android.app.ActionBar$LayoutParams)>($r6);

        return $r5;

     label2:
        $z2 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label3;

        $r3 = new android.widget.Toolbar$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label3:
        $r2 = new android.widget.Toolbar$LayoutParams;

        specialinvoke $r2.<android.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public java.lang.CharSequence getCollapseContentDescription()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.graphics.drawable.Drawable getCollapseIcon()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public int getContentInsetEnd()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper r1;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.RtlSpacingHelper: int getEnd()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getContentInsetEndWithActions()
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 = r0.<android.widget.Toolbar: int mContentInsetEndWithActions>;

        if i0 == -2147483648 goto label1;

        goto label2;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetEnd()>();

     label2:
        return i0;
    }

    public int getContentInsetLeft()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper r1;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.RtlSpacingHelper: int getLeft()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getContentInsetRight()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper r1;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.RtlSpacingHelper: int getRight()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getContentInsetStart()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper r1;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.widget.RtlSpacingHelper: int getStart()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public int getContentInsetStartWithNavigation()
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 = r0.<android.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if i0 == -2147483648 goto label1;

        goto label2;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetStart()>();

     label2:
        return i0;
    }

    public int getCurrentContentInsetEnd()
    {
        android.widget.Toolbar r0;
        int $i0, $i1, $i2, i3;
        boolean $z0, z1;
        android.widget.ActionMenuView r1;
        com.android.internal.view.menu.MenuBuilder r2;

        r0 := @this: android.widget.Toolbar;

        z1 = 0;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label2;

        r2 = virtualinvoke r1.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        $i0 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetEnd()>();

        $i1 = r0.<android.widget.Toolbar: int mContentInsetEndWithActions>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        goto label4;

     label3:
        i3 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetEnd()>();

     label4:
        return i3;
    }

    public int getCurrentContentInsetLeft()
    {
        android.widget.Toolbar r0;
        boolean $z0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetEnd()>();

        goto label2;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetStart()>();

     label2:
        return i0;
    }

    public int getCurrentContentInsetRight()
    {
        android.widget.Toolbar r0;
        boolean $z0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetStart()>();

        goto label2;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetEnd()>();

     label2:
        return i0;
    }

    public int getCurrentContentInsetStart()
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, i3;

        r0 := @this: android.widget.Toolbar;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetStart()>();

        $i1 = r0.<android.widget.Toolbar: int mContentInsetStartWithNavigation>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        goto label2;

     label1:
        i3 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetStart()>();

     label2:
        return i3;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.view.Menu getMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1;
        android.view.Menu $r2;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenu()>();

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r2 = virtualinvoke $r1.<android.widget.ActionMenuView: android.view.Menu getMenu()>();

        return $r2;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.view.View getNavigationView()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        return $r1;
    }

    android.widget.ActionMenuPresenter getOuterActionMenuPresenter()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuPresenter $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenu()>();

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r2 = virtualinvoke $r1.<android.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>();

        return $r2;
    }

    android.content.Context getPopupContext()
    {
        android.widget.Toolbar r0;
        android.content.Context $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        return $r1;
    }

    public int getPopupTheme()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        return $i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.CharSequence mSubtitleText>;

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.CharSequence mTitleText>;

        return $r1;
    }

    public int getTitleMarginBottom()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        return $i0;
    }

    public int getTitleMarginEnd()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        return $i0;
    }

    public int getTitleMarginStart()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        return $i0;
    }

    public int getTitleMarginTop()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        return $i0;
    }

    public com.android.internal.widget.DecorToolbar getWrapper()
    {
        android.widget.Toolbar r0;
        com.android.internal.widget.ToolbarWidgetWrapper $r1, $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.widget.ToolbarWidgetWrapper;

        specialinvoke $r3.<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean)>(r0, 1);

        r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper> = $r3;

     label1:
        $r2 = r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper>;

        return $r2;
    }

    public boolean hasExpandedActionView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter r1;
        com.android.internal.view.menu.MenuItemImpl $r2;
        boolean z0;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hideOverflowMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuView: boolean hideOverflowMenu()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void inflateMenu(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.view.MenuInflater $r1;
        android.view.Menu $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.widget.Toolbar: android.view.MenuInflater getMenuInflater()>();

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.view.Menu getMenu()>();

        virtualinvoke $r1.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(i0, $r2);

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuView: boolean isOverflowMenuShowPending()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isOverflowMenuShowing()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isTitleTruncated()
    {
        android.widget.Toolbar r0;
        int i0, $i1, i2;
        android.widget.TextView r1;
        android.text.Layout r2;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if r2 != null goto label2;

        return 0;

     label2:
        i0 = virtualinvoke r2.<android.text.Layout: int getLineCount()>();

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        $i1 = virtualinvoke r2.<android.text.Layout: int getEllipsisCount(int)>(i2);

        if $i1 <= 0 goto label4;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.widget.Toolbar r0;
        boolean $z0, $z1, $z2;
        android.view.ViewParent r1;
        android.view.ViewGroup r2;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.view.ViewParent getParent()>();

     label1:
        if r1 == null goto label3;

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        $z1 = virtualinvoke r2.<android.view.ViewGroup: boolean isKeyboardNavigationCluster()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.widget.Toolbar: void setKeyboardNavigationCluster(boolean)>(0);

        $z2 = virtualinvoke r2.<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<android.widget.Toolbar: void setTouchscreenBlocksFocus(boolean)>(0);

        goto label3;

     label2:
        r1 = virtualinvoke r2.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label1;

     label3:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, i76, i77, i78, i79, i80, i81, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, $i94, $i95, $i96, $i97, $i98, $i99, i100, $i101, $i102, i103, i104, i105, i106, i107, i108, i109, i110, $i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, i151, i152, i153, i154, i155, i157, i158;
        int[] r1;
        boolean z0, $z1, z2, z3, $z4, $z5, $z6, $z7, z8, z9;
        android.widget.ImageButton $r2, $r53, $r54, $r55, $r56, $r57;
        android.view.ViewGroup$LayoutParams $r3, $r4, $r20, $r25, $r30, $r35, $r42, $r45;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r16, $r73, $r74, $r75;
        java.lang.Object $r11, $r14, $r17;
        android.view.View $r12, $r15, $r18, $r49, $r50, $r59;
        android.widget.TextView $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r46, $r61, $r62, r65, r66;
        android.widget.ImageView $r47, $r48, $r60;
        android.widget.ActionMenuView $r51, $r52, $r58;
        android.widget.Toolbar$LayoutParams r63, r64, r67, r68, r69, r70, r71, r72;

        r0 := @this: android.widget.Toolbar;

        z2 := @parameter0: boolean;

        i76 := @parameter1: int;

        i77 := @parameter2: int;

        i78 := @parameter3: int;

        i79 := @parameter4: int;

        $i4 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        if $i4 != 1 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getWidth()>();

        i1 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        i80 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingLeft()>();

        i2 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingRight()>();

        i81 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        i3 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        i83 = i0 - i2;

        r1 = r0.<android.widget.Toolbar: int[] mTempMargins>;

        r1[1] = 0;

        r1[0] = 0;

        i84 = virtualinvoke r0.<android.widget.Toolbar: int getMinimumHeight()>();

        if i84 < 0 goto label03;

        $i75 = i79 - i77;

        i85 = staticinvoke <java.lang.Math: int min(int,int)>(i84, $i75);

        goto label04;

     label03:
        i85 = 0;

     label04:
        i86 = i80;

        i87 = i83;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z1 == 0 goto label06;

        if z3 == 0 goto label05;

        $r56 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        i87 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r56, i83, r1, i85);

        i86 = i80;

        goto label06;

     label05:
        $r55 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        i86 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r55, i80, r1, i85);

        i87 = i83;

     label06:
        i88 = i86;

        i89 = i87;

        $r57 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z4 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r57);

        if $z4 == 0 goto label08;

        if z3 == 0 goto label07;

        $r54 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        i89 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r54, i87, r1, i85);

        i88 = i86;

        goto label08;

     label07:
        $r53 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        i88 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r53, i86, r1, i85);

        i89 = i87;

     label08:
        i90 = i88;

        i91 = i89;

        $r58 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z5 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r58);

        if $z5 == 0 goto label10;

        if z3 == 0 goto label09;

        $r52 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i90 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r52, i88, r1, i85);

        i91 = i89;

        goto label10;

     label09:
        $r51 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i91 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r51, i89, r1, i85);

        i90 = i88;

     label10:
        i92 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetLeft()>();

        i93 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetRight()>();

        $i94 = i92 - i90;

        $i95 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i94);

        r1[0] = $i95;

        $i96 = i0 - i2;

        $i97 = $i96 - i91;

        $i98 = i93 - $i97;

        $i99 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i98);

        r1[1] = $i99;

        i100 = staticinvoke <java.lang.Math: int max(int,int)>(i90, i92);

        $i101 = i0 - i2;

        $i102 = $i101 - i93;

        i103 = staticinvoke <java.lang.Math: int min(int,int)>(i91, $i102);

        i104 = i100;

        i105 = i103;

        $r59 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $z6 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r59);

        if $z6 == 0 goto label12;

        if z3 == 0 goto label11;

        $r50 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        i105 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r50, i103, r1, i85);

        i104 = i100;

        goto label12;

     label11:
        $r49 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        i104 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r49, i100, r1, i85);

        i105 = i103;

     label12:
        i106 = i104;

        i107 = i105;

        $r60 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z7 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r60);

        if $z7 == 0 goto label14;

        if z3 == 0 goto label13;

        $r48 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        i107 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r48, i105, r1, i85);

        i106 = i104;

        goto label14;

     label13:
        $r47 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        i106 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r47, i104, r1, i85);

        i107 = i105;

     label14:
        $r61 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        z0 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r61);

        $r62 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        z8 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r62);

        i108 = 0;

        if z0 == 0 goto label15;

        $r44 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r45 = virtualinvoke $r44.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r63 = (android.widget.Toolbar$LayoutParams) $r45;

        $i70 = r63.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $r46 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i71 = virtualinvoke $r46.<android.widget.TextView: int getMeasuredHeight()>();

        $i73 = $i70 + $i71;

        $i72 = r63.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i74 = $i73 + $i72;

        i108 = 0 + $i74;

        goto label15;

     label15:
        i109 = i108;

        if z8 == 0 goto label16;

        $r41 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r42 = virtualinvoke $r41.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r64 = (android.widget.Toolbar$LayoutParams) $r42;

        $i65 = r64.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $r43 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i66 = virtualinvoke $r43.<android.widget.TextView: int getMeasuredHeight()>();

        $i68 = $i65 + $i66;

        $i67 = r64.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i69 = $i68 + $i67;

        i109 = i108 + $i69;

     label16:
        if z0 != 0 goto label18;

        if z8 == 0 goto label17;

        goto label18;

     label17:
        i110 = i106;

        goto label45;

     label18:
        if z0 == 0 goto label19;

        r65 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        goto label20;

     label19:
        r65 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

     label20:
        if z8 == 0 goto label21;

        r66 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        goto label22;

     label21:
        r66 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

     label22:
        $r3 = virtualinvoke r65.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r67 = (android.widget.Toolbar$LayoutParams) $r3;

        $r4 = virtualinvoke r66.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r68 = (android.widget.Toolbar$LayoutParams) $r4;

        if z0 == 0 goto label23;

        $r40 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i64 = virtualinvoke $r40.<android.widget.TextView: int getMeasuredWidth()>();

        if $i64 > 0 goto label24;

        goto label23;

     label23:
        if z8 == 0 goto label25;

        $r39 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i63 = virtualinvoke $r39.<android.widget.TextView: int getMeasuredWidth()>();

        if $i63 <= 0 goto label25;

     label24:
        z9 = 1;

        goto label26;

     label25:
        z9 = 0;

     label26:
        $i111 = r0.<android.widget.Toolbar: int mGravity>;

        i112 = $i111 & 112;

        if i112 == 48 goto label30;

        if i112 == 80 goto label29;

        $i44 = i1 - i81;

        $i45 = $i44 - i3;

        $i46 = $i45 - i109;

        i113 = $i46 / 2;

        $i48 = r67.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i47 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        $i49 = $i48 + $i47;

        if i113 >= $i49 goto label27;

        $i62 = r67.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i61 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        i114 = $i62 + $i61;

        goto label28;

     label27:
        $i50 = i1 - i3;

        $i51 = $i50 - i109;

        $i52 = $i51 - i113;

        i115 = $i52 - i81;

        i114 = i113;

        $i54 = r67.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i53 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i55 = $i54 + $i53;

        if i115 >= $i55 goto label28;

        $i57 = r68.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i56 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i58 = $i57 + $i56;

        $i59 = $i58 - i115;

        $i60 = i113 - $i59;

        i114 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i60);

     label28:
        i116 = i81 + i114;

        goto label31;

     label29:
        $i40 = i1 - i3;

        $i39 = r68.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i42 = $i40 - $i39;

        $i41 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i43 = $i42 - $i41;

        i116 = $i43 - i109;

        goto label31;

     label30:
        $i5 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        $i6 = r67.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i8 = $i5 + $i6;

        $i7 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        i116 = $i8 + $i7;

     label31:
        i117 = i106;

        if z3 == 0 goto label38;

        if z9 == 0 goto label32;

        i118 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        goto label33;

     label32:
        i118 = 0;

     label33:
        $i27 = r1[1];

        i119 = i118 - $i27;

        $i28 = staticinvoke <java.lang.Math: int max(int,int)>(0, i119);

        i120 = i107 - $i28;

        $i29 = neg i119;

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i29);

        r1[1] = $i30;

        i122 = i120;

        if z0 == 0 goto label34;

        $r34 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r35 = virtualinvoke $r34.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r69 = (android.widget.Toolbar$LayoutParams) $r35;

        $r36 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i35 = virtualinvoke $r36.<android.widget.TextView: int getMeasuredWidth()>();

        i123 = i120 - $i35;

        $r37 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i36 = virtualinvoke $r37.<android.widget.TextView: int getMeasuredHeight()>();

        i124 = $i36 + i116;

        $r38 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r38.<android.widget.TextView: void layout(int,int,int,int)>(i123, i116, i120, i124);

        $i37 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i125 = i123 - $i37;

        $i38 = r69.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        i126 = i124 + $i38;

        goto label35;

     label34:
        i126 = i116;

        i125 = i120;

     label35:
        i127 = i122;

        if z8 == 0 goto label36;

        $r29 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r30 = virtualinvoke $r29.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r70 = (android.widget.Toolbar$LayoutParams) $r30;

        $i31 = r70.<android.widget.Toolbar$LayoutParams: int topMargin>;

        i128 = i126 + $i31;

        $r31 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        i129 = virtualinvoke $r31.<android.widget.TextView: int getMeasuredWidth()>();

        $r32 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i32 = virtualinvoke $r32.<android.widget.TextView: int getMeasuredHeight()>();

        i130 = $i32 + i128;

        $r33 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i33 = i122 - i129;

        virtualinvoke $r33.<android.widget.TextView: void layout(int,int,int,int)>($i33, i128, i122, i130);

        $i34 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i127 = i122 - $i34;

        i131 = r70.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

     label36:
        if z9 == 0 goto label37;

        i120 = staticinvoke <java.lang.Math: int min(int,int)>(i125, i127);

     label37:
        i110 = i117;

        i107 = i120;

        goto label45;

     label38:
        if z9 == 0 goto label39;

        i132 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        goto label40;

     label39:
        i132 = 0;

     label40:
        $i9 = r1[0];

        i133 = i132 - $i9;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, i133);

        i134 = i117 + $i10;

        $i11 = neg i133;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        r1[0] = $i12;

        if z0 == 0 goto label41;

        $r24 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r25 = virtualinvoke $r24.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r71 = (android.widget.Toolbar$LayoutParams) $r25;

        $r26 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i23 = virtualinvoke $r26.<android.widget.TextView: int getMeasuredWidth()>();

        i137 = $i23 + i134;

        $r27 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i24 = virtualinvoke $r27.<android.widget.TextView: int getMeasuredHeight()>();

        i138 = $i24 + i116;

        $r28 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r28.<android.widget.TextView: void layout(int,int,int,int)>(i134, i116, i137, i138);

        $i25 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i139 = i137 + $i25;

        $i26 = r71.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        i140 = i138 + $i26;

        goto label42;

     label41:
        i140 = i116;

        i139 = i134;

     label42:
        i141 = i134;

        if z8 == 0 goto label43;

        $r19 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r20 = virtualinvoke $r19.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r72 = (android.widget.Toolbar$LayoutParams) $r20;

        $i19 = r72.<android.widget.Toolbar$LayoutParams: int topMargin>;

        i142 = i140 + $i19;

        $r21 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i20 = virtualinvoke $r21.<android.widget.TextView: int getMeasuredWidth()>();

        i143 = $i20 + i134;

        $r22 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i21 = virtualinvoke $r22.<android.widget.TextView: int getMeasuredHeight()>();

        i144 = $i21 + i142;

        $r23 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r23.<android.widget.TextView: void layout(int,int,int,int)>(i134, i142, i143, i144);

        $i22 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i141 = i143 + $i22;

        i145 = r72.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

     label43:
        if z9 == 0 goto label44;

        i110 = staticinvoke <java.lang.Math: int max(int,int)>(i139, i141);

        goto label45;

     label44:
        i110 = i134;

     label45:
        i146 = i85;

        $r73 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r73, 3);

        $r74 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i147 = virtualinvoke $r74.<java.util.ArrayList: int size()>();

        i148 = 0;

     label46:
        if i148 >= i147 goto label47;

        $r16 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i148);

        $r18 = (android.view.View) $r17;

        i110 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r18, i110, r1, i146);

        i148 = i148 + 1;

        goto label46;

     label47:
        $r5 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r5, 5);

        $r6 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i149 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i150 = 0;

     label48:
        if i150 >= i149 goto label49;

        $r13 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i150);

        $r15 = (android.view.View) $r14;

        i107 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r15, i107, r1, i146);

        i150 = i150 + 1;

        goto label48;

     label49:
        $r7 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r7, 1);

        $r8 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i151 = specialinvoke r0.<android.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])>($r8, r1);

        $i13 = i0 - i80;

        $i14 = $i13 - i2;

        $i15 = $i14 / 2;

        $i17 = i80 + $i15;

        $i16 = i151 / 2;

        i152 = $i17 - $i16;

        i153 = i152 + i151;

        if i152 >= i110 goto label50;

        i154 = i110;

        goto label51;

     label50:
        i154 = i152;

        if i153 <= i107 goto label51;

        $i18 = i153 - i107;

        i154 = i152 - $i18;

     label51:
        $r75 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i155 = virtualinvoke $r75.<java.util.ArrayList: int size()>();

        i157 = i154;

        i158 = 0;

     label52:
        if i158 >= i155 goto label53;

        $r10 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i158);

        $r12 = (android.view.View) $r11;

        i157 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r12, i157, r1, i146);

        i158 = i158 + 1;

        goto label52;

     label53:
        $r9 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.Toolbar r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i69, i70, i71, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108;
        int[] r1;
        android.view.View r2, $r6, $r26, $r27, $r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.widget.ImageButton $r3, $r4, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;
        android.widget.ActionMenuView $r5, $r30, $r31, $r32, $r33, $r34, $r35;
        android.widget.ImageView $r7, $r22, $r23, $r24, $r25;
        android.widget.TextView $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.view.ViewGroup$LayoutParams $r20;
        android.widget.Toolbar$LayoutParams $r21;
        byte b72, b73;

        r0 := @this: android.widget.Toolbar;

        i69 := @parameter0: int;

        i0 := @parameter1: int;

        i70 = 0;

        i71 = 0;

        r1 = r0.<android.widget.Toolbar: int[] mTempMargins>;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isLayoutRtl()>();

        if $z0 == 0 goto label01;

        b72 = 1;

        b73 = 0;

        goto label02;

     label01:
        b72 = 0;

        b73 = 1;

     label02:
        i74 = 0;

        $r3 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r3);

        if $z1 == 0 goto label03;

        $r42 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i62 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r42, i69, 0, i0, 0, $i62);

        $r43 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i63 = virtualinvoke $r43.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r44 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i64 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r44);

        i74 = $i63 + $i64;

        $r45 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i65 = virtualinvoke $r45.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r46 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i66 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r46);

        $i67 = $i65 + $i66;

        i70 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i67);

        $r47 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i68 = virtualinvoke $r47.<android.widget.ImageButton: int getMeasuredState()>();

        i71 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(0, $i68);

     label03:
        i75 = i70;

        i76 = i71;

        $r4 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z2 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z2 == 0 goto label04;

        $r36 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i55 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r36, i69, 0, i0, 0, $i55);

        $r37 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i56 = virtualinvoke $r37.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r38 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i57 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r38);

        i74 = $i56 + $i57;

        $r39 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i58 = virtualinvoke $r39.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r40 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i59 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r40);

        $i60 = $i58 + $i59;

        i75 = staticinvoke <java.lang.Math: int max(int,int)>(i70, $i60);

        $r41 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i61 = virtualinvoke $r41.<android.widget.ImageButton: int getMeasuredState()>();

        i76 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i71, $i61);

     label04:
        i77 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetStart()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i77, i74);

        i78 = 0 + $i1;

        $i2 = i77 - i74;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        r1[b72] = $i3;

        $r5 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z3 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z3 == 0 goto label05;

        $r30 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i50 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r30, i69, i78, i0, 0, $i50);

        $r31 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i79 = virtualinvoke $r31.<android.widget.ActionMenuView: int getMeasuredWidth()>();

        $r32 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i80 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r32);

        $r33 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i51 = virtualinvoke $r33.<android.widget.ActionMenuView: int getMeasuredHeight()>();

        $r34 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i52 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r34);

        $i53 = $i51 + $i52;

        i75 = staticinvoke <java.lang.Math: int max(int,int)>(i75, $i53);

        $r35 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i54 = virtualinvoke $r35.<android.widget.ActionMenuView: int getMeasuredState()>();

        i76 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i76, $i54);

        i81 = i79 + i80;

        goto label06;

     label05:
        i81 = 0;

     label06:
        i82 = virtualinvoke r0.<android.widget.Toolbar: int getCurrentContentInsetEnd()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i82, i81);

        i83 = i78 + $i4;

        $i5 = i82 - i81;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        r1[b73] = $i6;

        $r6 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $z4 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        if $z4 == 0 goto label07;

        $r26 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i45 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r26, i69, i83, i0, 0, r1);

        i84 = i83 + $i45;

        $r27 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i46 = virtualinvoke $r27.<android.view.View: int getMeasuredHeight()>();

        $r28 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i47 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r28);

        $i48 = $i46 + $i47;

        i85 = staticinvoke <java.lang.Math: int max(int,int)>(i75, $i48);

        $r29 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i49 = virtualinvoke $r29.<android.view.View: int getMeasuredState()>();

        i76 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i76, $i49);

        goto label08;

     label07:
        i85 = i75;

        i84 = i83;

     label08:
        i86 = i84;

        i87 = i85;

        i88 = i76;

        $r7 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z5 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r7);

        if $z5 == 0 goto label09;

        $r22 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i40 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r22, i69, i84, i0, 0, r1);

        i86 = i84 + $i40;

        $r23 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i41 = virtualinvoke $r23.<android.widget.ImageView: int getMeasuredHeight()>();

        $r24 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i42 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r24);

        $i43 = $i41 + $i42;

        i87 = staticinvoke <java.lang.Math: int max(int,int)>(i85, $i43);

        $r25 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i44 = virtualinvoke $r25.<android.widget.ImageView: int getMeasuredState()>();

        i88 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i76, $i44);

     label09:
        i89 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i90 = i88;

        i91 = 0;

        i92 = i86;

     label10:
        if i91 >= i89 goto label13;

        r2 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i91);

        $r20 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r21 = (android.widget.Toolbar$LayoutParams) $r20;

        $i34 = $r21.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i34 != 0 goto label12;

        $z9 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r2);

        if $z9 != 0 goto label11;

        goto label12;

     label11:
        $i35 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(r2, i69, i92, i0, 0, r1);

        i92 = i92 + $i35;

        $i36 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i37 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>(r2);

        $i38 = $i36 + $i37;

        i87 = staticinvoke <java.lang.Math: int max(int,int)>(i87, $i38);

        $i39 = virtualinvoke r2.<android.view.View: int getMeasuredState()>();

        i90 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i90, $i39);

        goto label12;

     label12:
        i91 = i91 + 1;

        goto label10;

     label13:
        i95 = 0;

        i96 = 0;

        $i8 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        $i7 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        i97 = $i8 + $i7;

        $i10 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        $i9 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i98 = $i10 + $i9;

        i99 = i90;

        $r8 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z6 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z6 == 0 goto label14;

        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i27 = i92 + i98;

        specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r14, i69, $i27, i0, i97, r1);

        $r15 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i29 = virtualinvoke $r15.<android.widget.TextView: int getMeasuredWidth()>();

        $r16 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i30 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r16);

        i95 = $i29 + $i30;

        $r17 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i31 = virtualinvoke $r17.<android.widget.TextView: int getMeasuredHeight()>();

        $r18 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i32 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r18);

        i96 = $i31 + $i32;

        $r19 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i33 = virtualinvoke $r19.<android.widget.TextView: int getMeasuredState()>();

        i99 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i90, $i33);

     label14:
        $r9 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z7 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r9);

        if $z7 == 0 goto label15;

        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i23 = i92 + i98;

        $i22 = i96 + i97;

        $i24 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r10, i69, $i23, i0, $i22, r1);

        i95 = staticinvoke <java.lang.Math: int max(int,int)>(i95, $i24);

        $r11 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        i100 = virtualinvoke $r11.<android.widget.TextView: int getMeasuredHeight()>();

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        i101 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r12);

        $r13 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i25 = virtualinvoke $r13.<android.widget.TextView: int getMeasuredState()>();

        i99 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i99, $i25);

        $i26 = i100 + i101;

        i96 = i96 + $i26;

        goto label15;

     label15:
        i102 = staticinvoke <java.lang.Math: int max(int,int)>(i87, i96);

        i103 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingLeft()>();

        i104 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingRight()>();

        i105 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        i106 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        $i12 = i92 + i95;

        $i11 = i103 + i104;

        $i13 = $i12 + $i11;

        $i14 = virtualinvoke r0.<android.widget.Toolbar: int getSuggestedMinimumWidth()>();

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i14);

        $i16 = -16777216 & i99;

        i107 = staticinvoke <android.widget.Toolbar: int resolveSizeAndState(int,int,int)>($i15, i69, $i16);

        $i17 = i105 + i106;

        $i18 = i102 + $i17;

        $i19 = virtualinvoke r0.<android.widget.Toolbar: int getSuggestedMinimumHeight()>();

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i19);

        $i21 = i99 << 16;

        i108 = staticinvoke <android.widget.Toolbar: int resolveSizeAndState(int,int,int)>($i20, i0, $i21);

        $z8 = specialinvoke r0.<android.widget.Toolbar: boolean shouldCollapse()>();

        if $z8 == 0 goto label16;

        i108 = 0;

        goto label16;

     label16:
        virtualinvoke r0.<android.widget.Toolbar: void setMeasuredDimension(int,int)>(i107, i108);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$SavedState r1;
        android.os.Parcelable $r2, r4;
        int $i0, $i1;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r3;
        android.widget.ActionMenuView r5;
        com.android.internal.view.menu.MenuBuilder r6;
        android.view.MenuItem r7;
        boolean $z1;

        r0 := @this: android.widget.Toolbar;

        r4 := @parameter0: android.os.Parcelable;

        r1 = (android.widget.Toolbar$SavedState) r4;

        $r2 = virtualinvoke r1.<android.widget.Toolbar$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        r5 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r5 == null goto label1;

        r6 = virtualinvoke r5.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        goto label2;

     label1:
        r6 = null;

     label2:
        $i0 = r1.<android.widget.Toolbar$SavedState: int expandedMenuItemId>;

        if $i0 == 0 goto label3;

        $r3 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r3 == null goto label3;

        if r6 == null goto label3;

        $i1 = r1.<android.widget.Toolbar$SavedState: int expandedMenuItemId>;

        r7 = interfaceinvoke r6.<android.view.Menu: android.view.MenuItem findItem(int)>($i1);

        if r7 == null goto label3;

        interfaceinvoke r7.<android.view.MenuItem: boolean expandActionView()>();

     label3:
        $z1 = r1.<android.widget.Toolbar$SavedState: boolean isOverflowOpen>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<android.widget.Toolbar: void postShowOverflowMenu()>();

     label4:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.RtlSpacingHelper r1;
        boolean z0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>(i0);

        specialinvoke r0.<android.widget.Toolbar: void ensureContentInsets()>();

        r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r1.<android.widget.RtlSpacingHelper: void setDirection(boolean)>(z0);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter r2, $r6;
        android.widget.Toolbar$SavedState $r3;
        android.os.Parcelable $r4;
        com.android.internal.view.menu.MenuItemImpl $r5, $r7;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        $r3 = new android.widget.Toolbar$SavedState;

        $r4 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r3.<android.widget.Toolbar$SavedState: void <init>(android.os.Parcelable)>($r4);

        r2 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if r2 == null goto label1;

        $r5 = r2.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r5 == null goto label1;

        $r6 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r7 = $r6.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        $i0 = virtualinvoke $r7.<com.android.internal.view.menu.MenuItemImpl: int getItemId()>();

        $r3.<android.widget.Toolbar$SavedState: int expandedMenuItemId> = $i0;

     label1:
        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isOverflowMenuShowing()>();

        $r3.<android.widget.Toolbar$SavedState: boolean isOverflowOpen> = $z0;

        return $r3;
    }

    protected void onSetLayoutParams(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0;
        android.widget.Toolbar$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Toolbar r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label1;

        r0.<android.widget.Toolbar: boolean mEatingTouch> = 0;

     label1:
        $z1 = r0.<android.widget.Toolbar: boolean mEatingTouch>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.<android.widget.Toolbar: boolean mEatingTouch> = 1;

     label2:
        if i0 == 1 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<android.widget.Toolbar: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    void removeChildrenForExpandedActionView()
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int $i0, $i1, i2;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.Toolbar$LayoutParams $r3;
        android.widget.ActionMenuView $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.widget.Toolbar;

        $i0 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i2);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.Toolbar$LayoutParams) $r2;

        $i1 = $r3.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i1 == 2 goto label2;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == $r4 goto label2;

        virtualinvoke r0.<android.widget.Toolbar: void removeViewAt(int)>(i2);

        $r5 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return;
    }

    public void setCollapseContentDescription(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)>(r2);

        return;
    }

    public void setCollapseContentDescription(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        android.widget.ImageButton r2;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureCollapseButtonView()>();

     label1:
        r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void setCollapseIcon(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setCollapseIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1, r3;
        android.widget.ImageButton $r2, r4;

        r0 := @this: android.widget.Toolbar;

        r3 := @parameter0: android.graphics.drawable.Drawable;

        if r3 == null goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureCollapseButtonView()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r3);

        goto label2;

     label1:
        r4 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if r4 == null goto label2;

        $r1 = r0.<android.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke r4.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label2:
        return;
    }

    public void setCollapsible(boolean)
    {
        android.widget.Toolbar r0;
        boolean z0;

        r0 := @this: android.widget.Toolbar;

        z0 := @parameter0: boolean;

        r0.<android.widget.Toolbar: boolean mCollapsible> = z0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setContentInsetEndWithActions(int)
    {
        android.widget.Toolbar r0;
        int i0, $i1, i2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i2 = i0;

        if i0 >= 0 goto label1;

        i2 = -2147483648;

     label1:
        $i1 = r0.<android.widget.Toolbar: int mContentInsetEndWithActions>;

        if i2 == $i1 goto label2;

        r0.<android.widget.Toolbar: int mContentInsetEndWithActions> = i2;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetStartWithNavigation(int)
    {
        android.widget.Toolbar r0;
        int i0, $i1, i2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i2 = i0;

        if i0 >= 0 goto label1;

        i2 = -2147483648;

     label1:
        $i1 = r0.<android.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if i2 == $i1 goto label2;

        r0.<android.widget.Toolbar: int mContentInsetStartWithNavigation> = i2;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1;
        android.widget.RtlSpacingHelper $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>(i0, i1);

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1;
        android.widget.RtlSpacingHelper $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.Toolbar: void ensureContentInsets()>();

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<android.widget.RtlSpacingHelper: void setRelative(int,int)>(i0, i1);

        return;
    }

    public void setLogo(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z2;
        android.widget.ImageView $r2, $r3, $r5, $r6, r7, r8;
        java.util.ArrayList $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureLogoView()>();

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z2 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r5);

        if $z2 != 0 goto label2;

        $r6 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r6, 1);

        goto label2;

     label1:
        r7 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if r7 == null goto label2;

        $z0 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(r7);

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r4 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r3 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

     label2:
        r8 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if r8 == null goto label3;

        virtualinvoke r8.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public void setLogoDescription(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        android.widget.ImageView r2;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureLogoView()>();

     label1:
        r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void setMenu(com.android.internal.view.menu.MenuBuilder, android.widget.ActionMenuPresenter)
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuBuilder r1, r3;
        android.widget.ActionMenuPresenter r2, $r16;
        android.widget.ActionMenuView $r4, $r10, $r11, $r18;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r5, $r8, $r9, $r14, $r15, $r17;
        android.content.Context $r6, $r7, $r12, $r13;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        r2 := @parameter1: android.widget.ActionMenuPresenter;

        if r1 != null goto label1;

        $r18 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r18 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.Toolbar: void ensureMenuView()>();

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        r3 = virtualinvoke $r4.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        if r3 != r1 goto label2;

        return;

     label2:
        if r3 == null goto label3;

        $r16 = r0.<android.widget.Toolbar: android.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        virtualinvoke r3.<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>($r16);

        $r17 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke r3.<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>($r17);

     label3:
        $r5 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r5 != null goto label4;

        $r15 = new android.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r15.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(android.widget.Toolbar,android.widget.Toolbar$1)>(r0, null);

        r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r15;

     label4:
        virtualinvoke r2.<android.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>(1);

        if r1 == null goto label5;

        $r12 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>(r2, $r12);

        $r14 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r13 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r14, $r13);

        goto label6;

     label5:
        $r6 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r2.<android.widget.ActionMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>($r6, null);

        $r8 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r7 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r8.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>($r7, null);

        virtualinvoke r2.<android.widget.ActionMenuPresenter: void updateMenuView(boolean)>(1);

        $r9 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $r9.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>(1);

     label6:
        $r10 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r10.<android.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r11 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r11.<android.widget.ActionMenuView: void setPresenter(android.widget.ActionMenuPresenter)>(r2);

        r0.<android.widget.Toolbar: android.widget.ActionMenuPresenter mOuterActionMenuPresenter> = r2;

        return;
    }

    public void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback, com.android.internal.view.menu.MenuBuilder$Callback)
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuPresenter$Callback r1;
        com.android.internal.view.menu.MenuBuilder$Callback r2;
        android.widget.ActionMenuView r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: com.android.internal.view.menu.MenuPresenter$Callback;

        r2 := @parameter1: com.android.internal.view.menu.MenuBuilder$Callback;

        r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback> = r1;

        r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback> = r2;

        r3 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.widget.ActionMenuView: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)>(r1, r2);

     label1:
        return;
    }

    public void setNavigationContentDescription(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        r2 = null;

     label2:
        virtualinvoke r0.<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>(r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        android.widget.ImageButton r2;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

     label1:
        r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z2;
        android.widget.ImageButton $r2, $r3, $r5, $r6, r7, r8;
        java.util.ArrayList $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z2 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r5);

        if $z2 != 0 goto label2;

        $r6 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r6, 1);

        goto label2;

     label1:
        r7 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if r7 == null goto label2;

        $z0 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(r7);

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r4 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r3 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

     label2:
        r8 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if r8 == null goto label3;

        virtualinvoke r8.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        android.widget.Toolbar r0;
        android.view.View$OnClickListener r1;
        android.widget.ImageButton $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View$OnClickListener;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r1);

        return;
    }

    public void setOnMenuItemClickListener(android.widget.Toolbar$OnMenuItemClickListener)
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$OnMenuItemClickListener r1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.widget.Toolbar$OnMenuItemClickListener;

        r0.<android.widget.Toolbar: android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener> = r1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable r1;
        android.widget.ActionMenuView $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenu()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r2.<android.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setPopupTheme(int)
    {
        android.widget.Toolbar r0;
        int i0, $i1;
        android.view.ContextThemeWrapper $r1;
        android.content.Context $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.Toolbar: int mPopupTheme>;

        if $i1 == i0 goto label2;

        r0.<android.widget.Toolbar: int mPopupTheme> = i0;

        if i0 != 0 goto label1;

        $r3 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r3;

        goto label2;

     label1:
        $r1 = new android.view.ContextThemeWrapper;

        $r2 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        specialinvoke $r1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r2, i0);

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r1;

     label2:
        return;
    }

    public void setSubtitle(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        boolean $z0, $z1, $z3;
        android.widget.TextView $r2, $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r14, r15, r16;
        java.util.ArrayList $r4;
        android.content.Context $r8;
        android.text.TextUtils$TruncateAt $r9;
        int i0, i1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r5 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r5 != null goto label2;

        $r7 = new android.widget.TextView;

        $r8 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.TextView: void <init>(android.content.Context)>($r8);

        r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView> = $r7;

        virtualinvoke $r7.<android.widget.TextView: void setSingleLine()>();

        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r9 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r10.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r9);

        i0 = r0.<android.widget.Toolbar: int mSubtitleTextAppearance>;

        if i0 == 0 goto label1;

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r12.<android.widget.TextView: void setTextAppearance(int)>(i0);

     label1:
        i1 = r0.<android.widget.Toolbar: int mSubtitleTextColor>;

        if i1 == 0 goto label2;

        $r11 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r11.<android.widget.TextView: void setTextColor(int)>(i1);

     label2:
        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z3 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r14);

        if $z3 != 0 goto label4;

        $r6 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r6, 1);

        goto label4;

     label3:
        r15 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if r15 == null goto label4;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(r15);

        if $z1 == 0 goto label4;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r4 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

     label4:
        r16 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if r16 == null goto label5;

        virtualinvoke r16.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label5:
        r0.<android.widget.Toolbar: java.lang.CharSequence mSubtitleText> = r1;

        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context r1;
        android.widget.TextView r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0.<android.widget.Toolbar: int mSubtitleTextAppearance> = i0;

        r2 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.TextView: void setTextAppearance(int)>(i0);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.TextView r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mSubtitleTextColor> = i0;

        r1 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.TextView: void setTextColor(int)>(i0);

     label1:
        return;
    }

    public void setTitle(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        boolean $z0, $z1, $z3;
        android.widget.TextView $r2, $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r14, r15, r16;
        java.util.ArrayList $r4;
        android.content.Context $r8;
        android.text.TextUtils$TruncateAt $r9;
        int i0, i1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r5 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r5 != null goto label2;

        $r7 = new android.widget.TextView;

        $r8 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.TextView: void <init>(android.content.Context)>($r8);

        r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView> = $r7;

        virtualinvoke $r7.<android.widget.TextView: void setSingleLine()>();

        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r9 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r10.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r9);

        i0 = r0.<android.widget.Toolbar: int mTitleTextAppearance>;

        if i0 == 0 goto label1;

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r12.<android.widget.TextView: void setTextAppearance(int)>(i0);

     label1:
        i1 = r0.<android.widget.Toolbar: int mTitleTextColor>;

        if i1 == 0 goto label2;

        $r11 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r11.<android.widget.TextView: void setTextColor(int)>(i1);

     label2:
        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z3 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r14);

        if $z3 != 0 goto label4;

        $r6 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r6, 1);

        goto label4;

     label3:
        r15 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if r15 == null goto label4;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean isChildOrHidden(android.view.View)>(r15);

        if $z1 == 0 goto label4;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r4 = r0.<android.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

     label4:
        r16 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if r16 == null goto label5;

        virtualinvoke r16.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label5:
        r0.<android.widget.Toolbar: java.lang.CharSequence mTitleText> = r1;

        return;
    }

    public void setTitleMargin(int, int, int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = i0;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = i1;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = i2;

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = i3;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginBottom(int)
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = i0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginEnd(int)
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = i0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginStart(int)
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = i0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginTop(int)
    {
        android.widget.Toolbar r0;
        int i0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = i0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context r1;
        android.widget.TextView r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0.<android.widget.Toolbar: int mTitleTextAppearance> = i0;

        r2 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.TextView: void setTextAppearance(int)>(i0);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.TextView r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleTextColor> = i0;

        r1 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.widget.TextView: void setTextColor(int)>(i0);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView r1;
        boolean $z0, z1;

        r0 := @this: android.widget.Toolbar;

        r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.widget.ActionMenuView: boolean showOverflowMenu()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static void <clinit>()
    {
        <android.widget.Toolbar: java.lang.String TAG> = "Toolbar";

        return;
    }
}
