public class android.widget.VideoView extends android.view.SurfaceView implements android.widget.MediaController$MediaPlayerControl, android.media.SubtitleController$Anchor
{
    private static final int STATE_ERROR;
    private static final int STATE_IDLE;
    private static final int STATE_PAUSED;
    private static final int STATE_PLAYBACK_COMPLETED;
    private static final int STATE_PLAYING;
    private static final int STATE_PREPARED;
    private static final int STATE_PREPARING;
    private static final java.lang.String TAG;
    private android.media.AudioAttributes mAudioAttributes;
    private int mAudioFocusType;
    private android.media.AudioManager mAudioManager;
    private int mAudioSession;
    private android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener;
    private boolean mCanPause;
    private boolean mCanSeekBack;
    private boolean mCanSeekForward;
    private android.media.MediaPlayer$OnCompletionListener mCompletionListener;
    private int mCurrentBufferPercentage;
    private int mCurrentState;
    private android.media.MediaPlayer$OnErrorListener mErrorListener;
    private java.util.Map mHeaders;
    private android.media.MediaPlayer$OnInfoListener mInfoListener;
    private android.widget.MediaController mMediaController;
    private android.media.MediaPlayer mMediaPlayer;
    private android.media.MediaPlayer$OnCompletionListener mOnCompletionListener;
    private android.media.MediaPlayer$OnErrorListener mOnErrorListener;
    private android.media.MediaPlayer$OnInfoListener mOnInfoListener;
    private android.media.MediaPlayer$OnPreparedListener mOnPreparedListener;
    private final java.util.Vector mPendingSubtitleTracks;
    android.media.MediaPlayer$OnPreparedListener mPreparedListener;
    android.view.SurfaceHolder$Callback mSHCallback;
    private int mSeekWhenPrepared;
    android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener;
    private android.media.SubtitleTrack$RenderingWidget mSubtitleWidget;
    private android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener;
    private int mSurfaceHeight;
    private android.view.SurfaceHolder mSurfaceHolder;
    private int mSurfaceWidth;
    private int mTargetState;
    private android.net.Uri mUri;
    private int mVideoHeight;
    private int mVideoWidth;

    public void <init>(android.content.Context)
    {
        android.widget.VideoView r0;
        android.content.Context r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.VideoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.VideoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.VideoView r0;
        android.content.Context r1, $r11;
        android.util.AttributeSet r2;
        int i0, i1;
        java.util.Vector $r3;
        android.widget.VideoView$1 $r4;
        android.widget.VideoView$2 $r5;
        android.widget.VideoView$3 $r6;
        android.widget.VideoView$4 $r7;
        android.widget.VideoView$5 $r8;
        android.widget.VideoView$6 $r9;
        android.widget.VideoView$7 $r10;
        java.lang.Object $r12;
        android.media.AudioManager $r13;
        android.media.AudioAttributes$Builder $r14, $r15, $r16;
        android.media.AudioAttributes $r17;
        android.view.SurfaceHolder $r18, $r20;
        android.view.SurfaceHolder$Callback $r19;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks> = $r3;

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder> = null;

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        r0.<android.widget.VideoView: int mAudioFocusType> = 1;

        $r4 = new android.widget.VideoView$1;

        specialinvoke $r4.<android.widget.VideoView$1: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener> = $r4;

        $r5 = new android.widget.VideoView$2;

        specialinvoke $r5.<android.widget.VideoView$2: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mPreparedListener> = $r5;

        $r6 = new android.widget.VideoView$3;

        specialinvoke $r6.<android.widget.VideoView$3: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mCompletionListener> = $r6;

        $r7 = new android.widget.VideoView$4;

        specialinvoke $r7.<android.widget.VideoView$4: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener> = $r7;

        $r8 = new android.widget.VideoView$5;

        specialinvoke $r8.<android.widget.VideoView$5: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener> = $r8;

        $r9 = new android.widget.VideoView$6;

        specialinvoke $r9.<android.widget.VideoView$6: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener> = $r9;

        $r10 = new android.widget.VideoView$7;

        specialinvoke $r10.<android.widget.VideoView$7: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback> = $r10;

        r0.<android.widget.VideoView: int mVideoWidth> = 0;

        r0.<android.widget.VideoView: int mVideoHeight> = 0;

        $r11 = r0.<android.widget.VideoView: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r13 = (android.media.AudioManager) $r12;

        r0.<android.widget.VideoView: android.media.AudioManager mAudioManager> = $r13;

        $r14 = new android.media.AudioAttributes$Builder;

        specialinvoke $r14.<android.media.AudioAttributes$Builder: void <init>()>();

        $r15 = virtualinvoke $r14.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(1);

        $r16 = virtualinvoke $r15.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(3);

        $r17 = virtualinvoke $r16.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.widget.VideoView: android.media.AudioAttributes mAudioAttributes> = $r17;

        $r18 = virtualinvoke r0.<android.widget.VideoView: android.view.SurfaceHolder getHolder()>();

        $r19 = r0.<android.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback>;

        interfaceinvoke $r18.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r19);

        $r20 = virtualinvoke r0.<android.widget.VideoView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r20.<android.view.SurfaceHolder: void setType(int)>(3);

        virtualinvoke r0.<android.widget.VideoView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.VideoView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.VideoView: boolean requestFocus()>();

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        return;
    }

    static int access$000(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mVideoWidth>;

        return $i0;
    }

    static int access$002(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mVideoWidth> = i0;

        return i0;
    }

    static int access$100(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mVideoHeight>;

        return $i0;
    }

    static int access$1000(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSurfaceWidth>;

        return $i0;
    }

    static int access$1002(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mSurfaceWidth> = i0;

        return i0;
    }

    static int access$102(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mVideoHeight> = i0;

        return i0;
    }

    static int access$1100(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSurfaceHeight>;

        return $i0;
    }

    static int access$1102(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mSurfaceHeight> = i0;

        return i0;
    }

    static int access$1200(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mTargetState>;

        return $i0;
    }

    static int access$1202(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mTargetState> = i0;

        return i0;
    }

    static android.media.MediaPlayer$OnCompletionListener access$1300(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnCompletionListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mOnCompletionListener>;

        return $r1;
    }

    static int access$1400(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mAudioFocusType>;

        return $i0;
    }

    static android.media.AudioManager access$1500(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static android.media.MediaPlayer$OnInfoListener access$1600(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnInfoListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mOnInfoListener>;

        return $r1;
    }

    static android.media.MediaPlayer$OnErrorListener access$1700(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnErrorListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mOnErrorListener>;

        return $r1;
    }

    static android.content.Context access$1800(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.content.Context mContext>;

        return $r1;
    }

    static android.content.Context access$1900(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.content.Context mContext>;

        return $r1;
    }

    static int access$2002(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mCurrentBufferPercentage> = i0;

        return i0;
    }

    static int access$202(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mCurrentState> = i0;

        return i0;
    }

    static android.view.SurfaceHolder access$2102(android.widget.VideoView, android.view.SurfaceHolder)
    {
        android.widget.VideoView r0;
        android.view.SurfaceHolder r1;

        r0 := @parameter0: android.widget.VideoView;

        r1 := @parameter1: android.view.SurfaceHolder;

        r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder> = r1;

        return r1;
    }

    static void access$2200(android.widget.VideoView)
    {
        android.widget.VideoView r0;

        r0 := @parameter0: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        return;
    }

    static void access$2300(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(z0);

        return;
    }

    static boolean access$302(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanPause> = z0;

        return z0;
    }

    static boolean access$402(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanSeekBack> = z0;

        return z0;
    }

    static boolean access$502(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanSeekForward> = z0;

        return z0;
    }

    static android.media.MediaPlayer$OnPreparedListener access$600(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnPreparedListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mOnPreparedListener>;

        return $r1;
    }

    static android.media.MediaPlayer access$700(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        return $r1;
    }

    static android.widget.MediaController access$800(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.widget.MediaController $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        return $r1;
    }

    static int access$900(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSeekWhenPrepared>;

        return $i0;
    }

    private void attachMediaController()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;
        android.view.ViewParent $r2, $r5;
        boolean $z0, $z1;
        android.widget.MediaController $r3, $r4, r6;
        android.view.View r7;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label3;

        r6 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if r6 == null goto label3;

        virtualinvoke r6.<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController$MediaPlayerControl)>(r0);

        $r2 = virtualinvoke r0.<android.widget.VideoView: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<android.widget.VideoView: android.view.ViewParent getParent()>();

        r7 = (android.view.View) $r5;

        goto label2;

     label1:
        r7 = r0;

     label2:
        $r3 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r3.<android.widget.MediaController: void setAnchorView(android.view.View)>(r7);

        $r4 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        $z1 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        virtualinvoke $r4.<android.widget.MediaController: void setEnabled(boolean)>($z1);

     label3:
        return;
    }

    private boolean isInPlaybackState()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer r1;
        int i0;
        boolean z0;

        r0 := @this: android.widget.VideoView;

        r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        z0 = 1;

        if r1 == null goto label1;

        i0 = r0.<android.widget.VideoView: int mCurrentState>;

        if i0 == -1 goto label1;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void measureAndLayoutSubtitleWidget()
    {
        android.widget.VideoView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.media.SubtitleTrack$RenderingWidget $r1;

        r0 := @this: android.widget.VideoView;

        i0 = virtualinvoke r0.<android.widget.VideoView: int getWidth()>();

        i1 = virtualinvoke r0.<android.widget.VideoView: int getPaddingLeft()>();

        i2 = virtualinvoke r0.<android.widget.VideoView: int getPaddingRight()>();

        i3 = virtualinvoke r0.<android.widget.VideoView: int getHeight()>();

        i4 = virtualinvoke r0.<android.widget.VideoView: int getPaddingTop()>();

        i5 = virtualinvoke r0.<android.widget.VideoView: int getPaddingBottom()>();

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        $i6 = i0 - i1;

        $i9 = $i6 - i2;

        $i7 = i3 - i4;

        $i8 = $i7 - i5;

        interfaceinvoke $r1.<android.media.SubtitleTrack$RenderingWidget: void setSize(int,int)>($i9, $i8);

        return;
    }

    private void openVideo()
    {
        android.widget.VideoView r0;
        int i0, $i1, $i2, $i3;
        android.net.Uri $r1, $r21, $r43, $r56;
        android.view.SurfaceHolder $r2, $r24;
        android.media.MediaPlayer $r3, $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r23, $r25, $r27, $r28, $r29, $r37, $r38, $r46, $r52, $r59, r62;
        android.media.MediaTimeProvider $r4;
        android.media.MediaPlayer$OnPreparedListener $r8;
        android.media.MediaPlayer$OnVideoSizeChangedListener $r10;
        android.media.MediaPlayer$OnCompletionListener $r12;
        android.media.MediaPlayer$OnErrorListener $r14, $r47, $r60;
        android.media.MediaPlayer$OnInfoListener $r16, $r53;
        android.media.MediaPlayer$OnBufferingUpdateListener $r18;
        java.util.Map $r20;
        android.content.Context $r22, r63;
        android.media.AudioAttributes $r26, $r39;
        java.util.Vector $r30, $r31, $r48, $r50, $r61;
        java.lang.Object $r32, $r33, $r34;
        android.media.MediaFormat $r35;
        java.io.InputStream $r36;
        android.media.AudioManager $r40;
        java.lang.Throwable $r41, $r49, $r51, $r54;
        java.lang.String $r45, $r58;
        android.media.SubtitleController r64;
        android.media.WebVttRenderer r65;
        android.media.TtmlRenderer r66;
        android.media.Cea708CaptionRenderer r67;
        android.media.ClosedCaptionRenderer r68;
        java.util.Iterator r69;
        boolean $z3;
        android.util.Pair r70;
        java.lang.StringBuilder r74, r76;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        if $r1 == null goto label22;

        $r2 = r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder>;

        if $r2 != null goto label01;

        goto label22;

     label01:
        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(0);

        i0 = r0.<android.widget.VideoView: int mAudioFocusType>;

        if i0 == 0 goto label02;

        $r40 = r0.<android.widget.VideoView: android.media.AudioManager mAudioManager>;

        $r39 = r0.<android.widget.VideoView: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r40.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,android.media.AudioAttributes,int,int)>(null, $r39, i0, 0);

     label02:
        r62 = new android.media.MediaPlayer;

        specialinvoke r62.<android.media.MediaPlayer: void <init>()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = r62;

        r63 = virtualinvoke r0.<android.widget.VideoView: android.content.Context getContext()>();

        r64 = new android.media.SubtitleController;

        $r3 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r4 = virtualinvoke $r3.<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()>();

        $r5 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke r64.<android.media.SubtitleController: void <init>(android.content.Context,android.media.MediaTimeProvider,android.media.SubtitleController$Listener)>(r63, $r4, $r5);

        r65 = new android.media.WebVttRenderer;

        specialinvoke r65.<android.media.WebVttRenderer: void <init>(android.content.Context)>(r63);

        virtualinvoke r64.<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController$Renderer)>(r65);

        r66 = new android.media.TtmlRenderer;

        specialinvoke r66.<android.media.TtmlRenderer: void <init>(android.content.Context)>(r63);

        virtualinvoke r64.<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController$Renderer)>(r66);

        r67 = new android.media.Cea708CaptionRenderer;

        specialinvoke r67.<android.media.Cea708CaptionRenderer: void <init>(android.content.Context)>(r63);

        virtualinvoke r64.<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController$Renderer)>(r67);

        r68 = new android.media.ClosedCaptionRenderer;

        specialinvoke r68.<android.media.ClosedCaptionRenderer: void <init>(android.content.Context)>(r63);

        virtualinvoke r64.<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController$Renderer)>(r68);

        $r6 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r6.<android.media.MediaPlayer: void setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController$Anchor)>(r64, r0);

        $i1 = r0.<android.widget.VideoView: int mAudioSession>;

        if $i1 == 0 goto label04;

        $r38 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i3 = r0.<android.widget.VideoView: int mAudioSession>;

        virtualinvoke $r38.<android.media.MediaPlayer: void setAudioSessionId(int)>($i3);

     label03:
        goto label05;

     label04:
        $r7 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i2 = virtualinvoke $r7.<android.media.MediaPlayer: int getAudioSessionId()>();

        r0.<android.widget.VideoView: int mAudioSession> = $i2;

     label05:
        $r9 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r8 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mPreparedListener>;

        virtualinvoke $r9.<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>($r8);

        $r11 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r10 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener>;

        virtualinvoke $r11.<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>($r10);

        $r13 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r12 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mCompletionListener>;

        virtualinvoke $r13.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>($r12);

        $r15 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r14 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        virtualinvoke $r15.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r14);

        $r17 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r16 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        virtualinvoke $r17.<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>($r16);

        $r19 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r18 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener>;

        virtualinvoke $r19.<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>($r18);

        r0.<android.widget.VideoView: int mCurrentBufferPercentage> = 0;

        $r23 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r22 = r0.<android.widget.VideoView: android.content.Context mContext>;

        $r21 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        $r20 = r0.<android.widget.VideoView: java.util.Map mHeaders>;

        virtualinvoke $r23.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>($r22, $r21, $r20);

        $r25 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r24 = r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder>;

        virtualinvoke $r25.<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>($r24);

        $r27 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r26 = r0.<android.widget.VideoView: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r27.<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>($r26);

        $r28 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r28.<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>(1);

        $r29 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r29.<android.media.MediaPlayer: void prepareAsync()>();

        $r30 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        r69 = virtualinvoke $r30.<java.util.Vector: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r32 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r70 = (android.util.Pair) $r32;

     label07:
        $r37 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r33 = r70.<android.util.Pair: java.lang.Object first>;

        $r36 = (java.io.InputStream) $r33;

        $r34 = r70.<android.util.Pair: java.lang.Object second>;

        $r35 = (android.media.MediaFormat) $r34;

        virtualinvoke $r37.<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>($r36, $r35);

     label08:
        goto label11;

     label09:
        $r51 := @caughtexception;

     label10:
        $r53 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        $r52 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r53.<android.media.MediaPlayer$OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>($r52, 901, 0);

     label11:
        goto label06;

     label12:
        r0.<android.widget.VideoView: int mCurrentState> = 1;

        specialinvoke r0.<android.widget.VideoView: void attachMediaController()>();

     label13:
        $r31 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r31.<java.util.Vector: void clear()>();

        return;

     label14:
        $r49 := @caughtexception;

        goto label21;

     label15:
        $r54 := @caughtexception;

     label16:
        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r56 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r58 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoView", $r58, $r54);

        r0.<android.widget.VideoView: int mCurrentState> = -1;

        r0.<android.widget.VideoView: int mTargetState> = -1;

        $r60 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        $r59 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r60.<android.media.MediaPlayer$OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>($r59, 1, 0);

     label17:
        $r61 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r61.<java.util.Vector: void clear()>();

        return;

     label18:
        $r41 := @caughtexception;

     label19:
        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r43 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoView", $r45, $r41);

        r0.<android.widget.VideoView: int mCurrentState> = -1;

        r0.<android.widget.VideoView: int mTargetState> = -1;

        $r47 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        $r46 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r47.<android.media.MediaPlayer$OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>($r46, 1, 0);

     label20:
        $r48 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r48.<java.util.Vector: void clear()>();

        return;

     label21:
        $r50 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r50.<java.util.Vector: void clear()>();

        throw $r49;

     label22:
        return;

        catch java.io.IOException from label02 to label03 with label18;
        catch java.lang.IllegalArgumentException from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.io.IOException from label04 to label05 with label18;
        catch java.lang.IllegalArgumentException from label04 to label05 with label15;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.lang.IllegalArgumentException from label05 to label06 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.lang.IllegalArgumentException from label06 to label07 with label15;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.IllegalStateException from label07 to label08 with label09;
        catch java.io.IOException from label07 to label08 with label18;
        catch java.lang.IllegalArgumentException from label07 to label08 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.IllegalArgumentException from label10 to label11 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label18;
        catch java.lang.IllegalArgumentException from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label19 to label20 with label14;
    }

    private void release(boolean)
    {
        android.widget.VideoView r0;
        boolean z0;
        android.media.MediaPlayer r1, $r2;
        java.util.Vector $r3;
        int $i0;
        android.media.AudioManager $r4;

        r0 := @this: android.widget.VideoView;

        z0 := @parameter0: boolean;

        r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.media.MediaPlayer: void reset()>();

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void release()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        $r3 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r3.<java.util.Vector: void clear()>();

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        if z0 == 0 goto label1;

        r0.<android.widget.VideoView: int mTargetState> = 0;

     label1:
        $i0 = r0.<android.widget.VideoView: int mAudioFocusType>;

        if $i0 == 0 goto label2;

        $r4 = r0.<android.widget.VideoView: android.media.AudioManager mAudioManager>;

        virtualinvoke $r4.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>(null);

     label2:
        return;
    }

    private void toggleMediaControlsVisiblity()
    {
        android.widget.VideoView r0;
        android.widget.MediaController $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        $z0 = virtualinvoke $r1.<android.widget.MediaController: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r3.<android.widget.MediaController: void hide()>();

        goto label2;

     label1:
        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r2.<android.widget.MediaController: void show()>();

     label2:
        return;
    }

    public void addSubtitleSource(java.io.InputStream, android.media.MediaFormat)
    {
        android.widget.VideoView r0;
        android.media.MediaFormat r1;
        android.media.MediaPlayer r2, $r6;
        java.util.Vector $r3;
        android.util.Pair $r4;
        java.lang.Throwable $r5;
        android.media.MediaPlayer$OnInfoListener $r7;
        java.io.InputStream r8;

        r0 := @this: android.widget.VideoView;

        r8 := @parameter0: java.io.InputStream;

        r1 := @parameter1: android.media.MediaFormat;

        r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if r2 != null goto label1;

        $r3 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r8, r1);

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r4);

        goto label4;

     label1:
        virtualinvoke r2.<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>(r8, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        $r6 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r7.<android.media.MediaPlayer$OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>($r6, 901, 0);

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public boolean canPause()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanPause>;

        return $z0;
    }

    public boolean canSeekBackward()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanSeekBack>;

        return $z0;
    }

    public boolean canSeekForward()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanSeekForward>;

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.VideoView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2;
        android.media.SubtitleTrack$RenderingWidget $r2, $r3;
        float $f0, $f1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.SurfaceView: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r2 == null goto label1;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke r0.<android.widget.VideoView: int getPaddingLeft()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r0.<android.widget.VideoView: int getPaddingTop()>();

        $f1 = (float) $i2;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r3.<android.media.SubtitleTrack$RenderingWidget: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

     label1:
        return;
    }

    public java.lang.CharSequence getAccessibilityClassName()
    {
        android.widget.VideoView r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.VideoView;

        $r1 = class "Landroid/widget/VideoView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public int getAudioSessionId()
    {
        android.widget.VideoView r0;
        int $i0, $i1, $i2;
        android.media.MediaPlayer $r2;

        r0 := @this: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mAudioSession>;

        if $i0 != 0 goto label1;

        $r2 = new android.media.MediaPlayer;

        specialinvoke $r2.<android.media.MediaPlayer: void <init>()>();

        $i2 = virtualinvoke $r2.<android.media.MediaPlayer: int getAudioSessionId()>();

        r0.<android.widget.VideoView: int mAudioSession> = $i2;

        virtualinvoke $r2.<android.media.MediaPlayer: void release()>();

     label1:
        $i1 = r0.<android.widget.VideoView: int mAudioSession>;

        return $i1;
    }

    public int getBufferPercentage()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $i0 = r0.<android.widget.VideoView: int mCurrentBufferPercentage>;

        return $i0;

     label1:
        return 0;
    }

    public int getCurrentPosition()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getCurrentPosition()>();

        return $i0;

     label1:
        return 0;
    }

    public int getDuration()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getDuration()>();

        return $i0;

     label1:
        return -1;
    }

    public android.os.Looper getSubtitleLooper()
    {
        android.widget.VideoView r0;
        android.os.Looper $r1;

        r0 := @this: android.widget.VideoView;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        return $r1;
    }

    public boolean isPlaying()
    {
        android.widget.VideoView r0;
        boolean $z0, $z1, z2;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    protected void onAttachedToWindow()
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget r1;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.view.SurfaceView: void onAttachedToWindow()>();

        r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void onAttachedToWindow()>();

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget r1;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.view.SurfaceView: void onDetachedFromWindow()>();

        r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void onDetachedFromWindow()>();

     label1:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.VideoView r0;
        int i0;
        android.view.KeyEvent r1;
        android.widget.MediaController $r2, $r4, $r5, $r7, $r9;
        android.media.MediaPlayer $r3, $r6, $r8;
        boolean $z0, $z1, $z2, z3, $z4, $z5;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 == 4 goto label01;

        if i0 == 24 goto label01;

        if i0 == 25 goto label01;

        if i0 == 164 goto label01;

        if i0 == 82 goto label01;

        if i0 == 5 goto label01;

        if i0 == 6 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        $z4 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z4 == 0 goto label12;

        if z3 == 0 goto label12;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label12;

        if i0 == 79 goto label09;

        if i0 != 85 goto label03;

        goto label09;

     label03:
        if i0 != 126 goto label05;

        $r8 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z2 = virtualinvoke $r8.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z2 != 0 goto label04;

        virtualinvoke r0.<android.widget.VideoView: void start()>();

        $r9 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r9.<android.widget.MediaController: void hide()>();

     label04:
        return 1;

     label05:
        if i0 == 86 goto label07;

        if i0 != 127 goto label06;

        goto label07;

     label06:
        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

        goto label12;

     label07:
        $r6 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke $r6.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z1 == 0 goto label08;

        virtualinvoke r0.<android.widget.VideoView: void pause()>();

        $r7 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r7.<android.widget.MediaController: void show()>();

     label08:
        return 1;

     label09:
        $r3 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z0 = virtualinvoke $r3.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z0 == 0 goto label10;

        virtualinvoke r0.<android.widget.VideoView: void pause()>();

        $r5 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r5.<android.widget.MediaController: void show()>();

        goto label11;

     label10:
        virtualinvoke r0.<android.widget.VideoView: void start()>();

        $r4 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r4.<android.widget.MediaController: void hide()>();

     label11:
        return 1;

     label12:
        $z5 = specialinvoke r0.<android.view.SurfaceView: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z5;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.VideoView r0;
        boolean z0;
        int i0, i1, i2, i3;
        android.media.SubtitleTrack$RenderingWidget $r1;

        r0 := @this: android.widget.VideoView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.SurfaceView: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void measureAndLayoutSubtitleWidget()>();

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.VideoView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39;

        r0 := @this: android.widget.VideoView;

        i24 := @parameter0: int;

        i25 := @parameter1: int;

        $i2 = r0.<android.widget.VideoView: int mVideoWidth>;

        i26 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>($i2, i24);

        $i3 = r0.<android.widget.VideoView: int mVideoHeight>;

        i27 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>($i3, i25);

        i28 = i26;

        i29 = i27;

        $i4 = r0.<android.widget.VideoView: int mVideoWidth>;

        if $i4 <= 0 goto label6;

        i28 = i26;

        i29 = i27;

        $i5 = r0.<android.widget.VideoView: int mVideoHeight>;

        if $i5 <= 0 goto label6;

        i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i24);

        i30 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i24);

        i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i25);

        i31 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i25);

        if i0 != 1073741824 goto label2;

        if i1 != 1073741824 goto label2;

        i32 = r0.<android.widget.VideoView: int mVideoWidth>;

        i33 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i19 = i32 * i31;

        $i18 = i30 * i33;

        if $i19 >= $i18 goto label1;

        $i23 = i32 * i31;

        i28 = $i23 / i33;

        i29 = i31;

        goto label6;

     label1:
        i28 = i30;

        i29 = i31;

        $i21 = i32 * i31;

        $i20 = i30 * i33;

        if $i21 <= $i20 goto label6;

        $i22 = i33 * i30;

        i29 = $i22 / i32;

        i28 = i30;

        goto label6;

     label2:
        if i0 != 1073741824 goto label3;

        $i15 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i17 = $i15 * i30;

        $i16 = r0.<android.widget.VideoView: int mVideoWidth>;

        i34 = $i17 / $i16;

        i28 = i30;

        i29 = i34;

        if i1 != -2147483648 goto label6;

        i28 = i30;

        i29 = i34;

        if i34 <= i31 goto label6;

        i28 = i30;

        i29 = i31;

        goto label6;

     label3:
        if i1 != 1073741824 goto label4;

        $i12 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i14 = $i12 * i31;

        $i13 = r0.<android.widget.VideoView: int mVideoHeight>;

        i35 = $i14 / $i13;

        i28 = i35;

        i29 = i31;

        if i0 != -2147483648 goto label6;

        i28 = i35;

        i29 = i31;

        if i35 <= i30 goto label6;

        i28 = i30;

        i29 = i31;

        goto label6;

     label4:
        i36 = r0.<android.widget.VideoView: int mVideoWidth>;

        i37 = r0.<android.widget.VideoView: int mVideoHeight>;

        i38 = i36;

        i39 = i37;

        if i1 != -2147483648 goto label5;

        i38 = i36;

        i39 = i37;

        if i37 <= i31 goto label5;

        $i9 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i11 = $i9 * i31;

        $i10 = r0.<android.widget.VideoView: int mVideoHeight>;

        i38 = $i11 / $i10;

        i39 = i31;

     label5:
        i28 = i38;

        i29 = i39;

        if i0 != -2147483648 goto label6;

        i28 = i38;

        i29 = i39;

        if i38 <= i30 goto label6;

        $i6 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i8 = $i6 * i30;

        $i7 = r0.<android.widget.VideoView: int mVideoWidth>;

        i29 = $i8 / $i7;

        i28 = i30;

     label6:
        virtualinvoke r0.<android.widget.VideoView: void setMeasuredDimension(int,int)>(i28, i29);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.VideoView r0;
        android.view.MotionEvent r1;
        int $i0;
        boolean $z0, $z1;
        android.widget.MediaController $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

     label1:
        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.VideoView r0;
        android.view.MotionEvent r1;
        int $i0;
        boolean $z0, $z1;
        android.widget.MediaController $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

     label1:
        $z1 = specialinvoke r0.<android.view.SurfaceView: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void pause()
    {
        android.widget.VideoView r0;
        boolean $z0, $z1;
        android.media.MediaPlayer $r1, $r2;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void pause()>();

        r0.<android.widget.VideoView: int mCurrentState> = 4;

     label1:
        r0.<android.widget.VideoView: int mTargetState> = 4;

        return;
    }

    public int resolveAdjustedSize(int, int)
    {
        android.widget.VideoView r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>(i0, i1);

        return $i2;
    }

    public void resume()
    {
        android.widget.VideoView r0;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        return;
    }

    public void seekTo(int)
    {
        android.widget.VideoView r0;
        int i0;
        boolean $z0;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r1.<android.media.MediaPlayer: void seekTo(int)>(i0);

        r0.<android.widget.VideoView: int mSeekWhenPrepared> = 0;

        goto label2;

     label1:
        r0.<android.widget.VideoView: int mSeekWhenPrepared> = i0;

     label2:
        return;
    }

    public void setAudioAttributes(android.media.AudioAttributes)
    {
        android.widget.VideoView r0;
        android.media.AudioAttributes r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.AudioAttributes;

        if r1 == null goto label1;

        r0.<android.widget.VideoView: android.media.AudioAttributes mAudioAttributes> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioAttributes");

        throw $r2;
    }

    public void setAudioFocusRequest(int)
    {
        android.widget.VideoView r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal audio focus type ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.widget.VideoView: int mAudioFocusType> = i0;

        return;
    }

    public void setMediaController(android.widget.MediaController)
    {
        android.widget.VideoView r0;
        android.widget.MediaController r1, r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.widget.MediaController;

        r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.MediaController: void hide()>();

     label1:
        r0.<android.widget.VideoView: android.widget.MediaController mMediaController> = r1;

        specialinvoke r0.<android.widget.VideoView: void attachMediaController()>();

        return;
    }

    public void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnCompletionListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnCompletionListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mOnCompletionListener> = r1;

        return;
    }

    public void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnErrorListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnErrorListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mOnErrorListener> = r1;

        return;
    }

    public void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnInfoListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnInfoListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mOnInfoListener> = r1;

        return;
    }

    public void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnPreparedListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnPreparedListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mOnPreparedListener> = r1;

        return;
    }

    public void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget r1, r2, $r3, $r7;
        boolean z0;
        android.media.SubtitleTrack$RenderingWidget$OnChangedListener $r4, $r5;
        android.widget.VideoView$8 $r6;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.SubtitleTrack$RenderingWidget;

        $r3 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r3 != r1 goto label1;

        return;

     label1:
        z0 = virtualinvoke r0.<android.widget.VideoView: boolean isAttachedToWindow()>();

        r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if r2 == null goto label3;

        if z0 == 0 goto label2;

        interfaceinvoke r2.<android.media.SubtitleTrack$RenderingWidget: void onDetachedFromWindow()>();

     label2:
        $r7 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r7.<android.media.SubtitleTrack$RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack$RenderingWidget$OnChangedListener)>(null);

     label3:
        r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget> = r1;

        if r1 == null goto label5;

        $r4 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener>;

        if $r4 != null goto label4;

        $r6 = new android.widget.VideoView$8;

        specialinvoke $r6.<android.widget.VideoView$8: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener> = $r6;

     label4:
        virtualinvoke r0.<android.widget.VideoView: void setWillNotDraw(boolean)>(0);

        $r5 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener>;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack$RenderingWidget$OnChangedListener)>($r5);

        if z0 == 0 goto label6;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void onAttachedToWindow()>();

        virtualinvoke r0.<android.widget.VideoView: void requestLayout()>();

        goto label6;

     label5:
        virtualinvoke r0.<android.widget.VideoView: void setWillNotDraw(boolean)>(1);

     label6:
        virtualinvoke r0.<android.widget.VideoView: void invalidate()>();

        return;
    }

    public void setVideoPath(java.lang.String)
    {
        android.widget.VideoView r0;
        java.lang.String r1;
        android.net.Uri $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        virtualinvoke r0.<android.widget.VideoView: void setVideoURI(android.net.Uri)>($r2);

        return;
    }

    public void setVideoURI(android.net.Uri)
    {
        android.widget.VideoView r0;
        android.net.Uri r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.net.Uri;

        virtualinvoke r0.<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>(r1, null);

        return;
    }

    public void setVideoURI(android.net.Uri, java.util.Map)
    {
        android.widget.VideoView r0;
        android.net.Uri r1;
        java.util.Map r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.Map;

        r0.<android.widget.VideoView: android.net.Uri mUri> = r1;

        r0.<android.widget.VideoView: java.util.Map mHeaders> = r2;

        r0.<android.widget.VideoView: int mSeekWhenPrepared> = 0;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        virtualinvoke r0.<android.widget.VideoView: void requestLayout()>();

        virtualinvoke r0.<android.widget.VideoView: void invalidate()>();

        return;
    }

    public void start()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        r0.<android.widget.VideoView: int mCurrentState> = 3;

     label1:
        r0.<android.widget.VideoView: int mTargetState> = 3;

        return;
    }

    public void stopPlayback()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer r1, $r2;
        android.media.AudioManager $r3;

        r0 := @this: android.widget.VideoView;

        r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.MediaPlayer: void stop()>();

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void release()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        $r3 = r0.<android.widget.VideoView: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>(null);

     label1:
        return;
    }

    public void suspend()
    {
        android.widget.VideoView r0;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.VideoView: java.lang.String TAG> = "VideoView";

        <android.widget.VideoView: int STATE_PREPARING> = 1;

        <android.widget.VideoView: int STATE_PREPARED> = 2;

        <android.widget.VideoView: int STATE_PLAYING> = 3;

        <android.widget.VideoView: int STATE_PLAYBACK_COMPLETED> = 5;

        <android.widget.VideoView: int STATE_PAUSED> = 4;

        <android.widget.VideoView: int STATE_IDLE> = 0;

        <android.widget.VideoView: int STATE_ERROR> = -1;

        return;
    }
}
