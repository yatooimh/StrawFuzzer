public class android.window.DisplayAreaOrganizer extends android.window.WindowOrganizer
{
    public static final int FEATURE_DEFAULT_TASK_CONTAINER;
    public static final int FEATURE_ROOT;
    public static final int FEATURE_SYSTEM_FIRST;
    public static final int FEATURE_SYSTEM_LAST;
    public static final int FEATURE_UNDEFINED;
    public static final int FEATURE_VENDOR_FIRST;
    public static final int FEATURE_WINDOW_TOKENS;
    private static final android.util.Singleton IDisplayAreaOrganizerControllerSingleton;
    private final android.window.IDisplayAreaOrganizer mInterface;

    static void <clinit>()
    {
        android.window.DisplayAreaOrganizer$2 $r0;

        <android.window.DisplayAreaOrganizer: int FEATURE_WINDOW_TOKENS> = 2;

        <android.window.DisplayAreaOrganizer: int FEATURE_VENDOR_FIRST> = 10001;

        <android.window.DisplayAreaOrganizer: int FEATURE_UNDEFINED> = -1;

        <android.window.DisplayAreaOrganizer: int FEATURE_SYSTEM_LAST> = 10000;

        <android.window.DisplayAreaOrganizer: int FEATURE_SYSTEM_FIRST> = 0;

        <android.window.DisplayAreaOrganizer: int FEATURE_ROOT> = 0;

        <android.window.DisplayAreaOrganizer: int FEATURE_DEFAULT_TASK_CONTAINER> = 1;

        $r0 = new android.window.DisplayAreaOrganizer$2;

        specialinvoke $r0.<android.window.DisplayAreaOrganizer$2: void <init>()>();

        <android.window.DisplayAreaOrganizer: android.util.Singleton IDisplayAreaOrganizerControllerSingleton> = $r0;

        return;
    }

    public void <init>()
    {
        android.window.DisplayAreaOrganizer r0;
        android.window.DisplayAreaOrganizer$1 $r1;

        r0 := @this: android.window.DisplayAreaOrganizer;

        specialinvoke r0.<android.window.WindowOrganizer: void <init>()>();

        $r1 = new android.window.DisplayAreaOrganizer$1;

        specialinvoke $r1.<android.window.DisplayAreaOrganizer$1: void <init>(android.window.DisplayAreaOrganizer)>(r0);

        r0.<android.window.DisplayAreaOrganizer: android.window.IDisplayAreaOrganizer mInterface> = $r1;

        return;
    }

    private static android.window.IDisplayAreaOrganizerController getController()
    {
        android.util.Singleton $r0;
        java.lang.Object $r1;
        android.window.IDisplayAreaOrganizerController $r2;

        $r0 = <android.window.DisplayAreaOrganizer: android.util.Singleton IDisplayAreaOrganizerControllerSingleton>;

        $r1 = virtualinvoke $r0.<android.util.Singleton: java.lang.Object get()>();

        $r2 = (android.window.IDisplayAreaOrganizerController) $r1;

        return $r2;
    }

    public void onDisplayAreaAppeared(android.window.DisplayAreaInfo, android.view.SurfaceControl)
    {
        android.window.DisplayAreaOrganizer r0;
        android.window.DisplayAreaInfo r1;
        android.view.SurfaceControl r2;

        r0 := @this: android.window.DisplayAreaOrganizer;

        r1 := @parameter0: android.window.DisplayAreaInfo;

        r2 := @parameter1: android.view.SurfaceControl;

        return;
    }

    public void onDisplayAreaInfoChanged(android.window.DisplayAreaInfo)
    {
        android.window.DisplayAreaOrganizer r0;
        android.window.DisplayAreaInfo r1;

        r0 := @this: android.window.DisplayAreaOrganizer;

        r1 := @parameter0: android.window.DisplayAreaInfo;

        return;
    }

    public void onDisplayAreaVanished(android.window.DisplayAreaInfo)
    {
        android.window.DisplayAreaOrganizer r0;
        android.window.DisplayAreaInfo r1;

        r0 := @this: android.window.DisplayAreaOrganizer;

        r1 := @parameter0: android.window.DisplayAreaInfo;

        return;
    }

    public void registerOrganizer(int)
    {
        android.window.DisplayAreaOrganizer r0;
        int i0;
        android.window.IDisplayAreaOrganizerController $r2;
        android.window.IDisplayAreaOrganizer $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.window.DisplayAreaOrganizer;

        i0 := @parameter0: int;

     label1:
        $r2 = staticinvoke <android.window.DisplayAreaOrganizer: android.window.IDisplayAreaOrganizerController getController()>();

        $r3 = r0.<android.window.DisplayAreaOrganizer: android.window.IDisplayAreaOrganizer mInterface>;

        interfaceinvoke $r2.<android.window.IDisplayAreaOrganizerController: void registerOrganizer(android.window.IDisplayAreaOrganizer,int)>($r3, i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterOrganizer()
    {
        android.window.DisplayAreaOrganizer r0;
        android.window.IDisplayAreaOrganizerController $r2;
        android.window.IDisplayAreaOrganizer $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.window.DisplayAreaOrganizer;

     label1:
        $r2 = staticinvoke <android.window.DisplayAreaOrganizer: android.window.IDisplayAreaOrganizerController getController()>();

        $r3 = r0.<android.window.DisplayAreaOrganizer: android.window.IDisplayAreaOrganizer mInterface>;

        interfaceinvoke $r2.<android.window.IDisplayAreaOrganizerController: void unregisterOrganizer(android.window.IDisplayAreaOrganizer)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
