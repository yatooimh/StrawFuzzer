public class android.window.ITaskOrganizerController$Default extends java.lang.Object implements android.window.ITaskOrganizerController
{

    public void <init>()
    {
        android.window.ITaskOrganizerController$Default r0;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.window.ITaskOrganizerController$Default r0;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        return null;
    }

    public android.app.ActivityManager$RunningTaskInfo createRootTask(int, int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        int i0, i1;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public boolean deleteRootTask(android.window.WindowContainerToken) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        android.window.WindowContainerToken r1;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        r1 := @parameter0: android.window.WindowContainerToken;

        return 0;
    }

    public java.util.List getChildTasks(android.window.WindowContainerToken, int[]) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        android.window.WindowContainerToken r1;
        int[] r2;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        r1 := @parameter0: android.window.WindowContainerToken;

        r2 := @parameter1: int[];

        return null;
    }

    public android.window.WindowContainerToken getImeTarget(int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        int i0;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.util.List getRootTasks(int, int[]) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        int i0;
        int[] r1;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        return null;
    }

    public void registerTaskOrganizer(android.window.ITaskOrganizer, int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        android.window.ITaskOrganizer r1;
        int i0;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        r1 := @parameter0: android.window.ITaskOrganizer;

        i0 := @parameter1: int;

        return;
    }

    public void setInterceptBackPressedOnTaskRoot(android.window.ITaskOrganizer, boolean) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        android.window.ITaskOrganizer r1;
        boolean z0;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        r1 := @parameter0: android.window.ITaskOrganizer;

        z0 := @parameter1: boolean;

        return;
    }

    public void setLaunchRoot(int, android.window.WindowContainerToken) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        int i0;
        android.window.WindowContainerToken r1;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.window.WindowContainerToken;

        return;
    }

    public void unregisterTaskOrganizer(android.window.ITaskOrganizer) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Default r0;
        android.window.ITaskOrganizer r1;

        r0 := @this: android.window.ITaskOrganizerController$Default;

        r1 := @parameter0: android.window.ITaskOrganizer;

        return;
    }
}
