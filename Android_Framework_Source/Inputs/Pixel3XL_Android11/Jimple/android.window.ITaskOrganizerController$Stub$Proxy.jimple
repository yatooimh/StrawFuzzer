class android.window.ITaskOrganizerController$Stub$Proxy extends java.lang.Object implements android.window.ITaskOrganizerController
{
    public static android.window.ITaskOrganizerController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        $r1 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.app.ActivityManager$RunningTaskInfo createRootTask(int, int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int i0, i1, $i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.window.ITaskOrganizerController $r6, $r7;
        java.lang.Throwable $r8;
        android.app.ActivityManager$RunningTaskInfo r9, r10;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.window.ITaskOrganizerController: android.app.ActivityManager$RunningTaskInfo createRootTask(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        $r4 = <android.app.ActivityManager$RunningTaskInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.app.ActivityManager$RunningTaskInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean deleteRootTask(android.window.WindowContainerToken) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.window.ITaskOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.WindowContainerToken r7;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r7 := @parameter0: android.window.WindowContainerToken;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.window.WindowContainerToken: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.window.ITaskOrganizerController: boolean deleteRootTask(android.window.WindowContainerToken)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public java.util.List getChildTasks(android.window.WindowContainerToken, int[]) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        android.window.ITaskOrganizerController $r6, $r7;
        java.lang.Throwable $r8;
        android.window.WindowContainerToken r9;
        java.util.List r10;
        java.util.ArrayList r11;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r9 := @parameter0: android.window.WindowContainerToken;

        r1 := @parameter1: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.window.WindowContainerToken: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r4 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.window.ITaskOrganizerController: java.util.List getChildTasks(android.window.WindowContainerToken,int[])>(r9, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = <android.app.ActivityManager$RunningTaskInfo: android.os.Parcelable$Creator CREATOR>;

        r11 = virtualinvoke r3.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.window.WindowContainerToken getImeTarget(int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.window.ITaskOrganizerController $r6, $r7;
        java.lang.Throwable $r8;
        android.window.WindowContainerToken r9, r10;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.window.ITaskOrganizerController: android.window.WindowContainerToken getImeTarget(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.window.WindowContainerToken: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.window.WindowContainerToken) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        return "android.window.ITaskOrganizerController";
    }

    public java.util.List getRootTasks(int, int[]) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.window.ITaskOrganizerController $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r8);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.window.ITaskOrganizerController: java.util.List getRootTasks(int,int[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.app.ActivityManager$RunningTaskInfo: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerTaskOrganizer(android.window.ITaskOrganizer, int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.window.ITaskOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.ITaskOrganizer r7;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r7 := @parameter0: android.window.ITaskOrganizer;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.window.ITaskOrganizer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        interfaceinvoke $r5.<android.window.ITaskOrganizerController: void registerTaskOrganizer(android.window.ITaskOrganizer,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setInterceptBackPressedOnTaskRoot(android.window.ITaskOrganizer, boolean) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        android.window.ITaskOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.ITaskOrganizer r7;
        byte b0;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r7 := @parameter0: android.window.ITaskOrganizer;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.window.ITaskOrganizer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label07:
        if z0 == 0 goto label08;

        b0 = 1;

        goto label09;

     label08:
        b0 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        interfaceinvoke $r5.<android.window.ITaskOrganizerController: void setInterceptBackPressedOnTaskRoot(android.window.ITaskOrganizer,boolean)>(r7, z0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setLaunchRoot(int, android.window.WindowContainerToken) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.window.ITaskOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.WindowContainerToken r7;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.window.WindowContainerToken;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.window.WindowContainerToken: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        interfaceinvoke $r5.<android.window.ITaskOrganizerController: void setLaunchRoot(int,android.window.WindowContainerToken)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterTaskOrganizer(android.window.ITaskOrganizer) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.window.ITaskOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.ITaskOrganizer r7;

        r0 := @this: android.window.ITaskOrganizerController$Stub$Proxy;

        r7 := @parameter0: android.window.ITaskOrganizer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.ITaskOrganizerController");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.window.ITaskOrganizer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.window.ITaskOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController getDefaultImpl()>();

        interfaceinvoke $r5.<android.window.ITaskOrganizerController: void unregisterTaskOrganizer(android.window.ITaskOrganizer)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
