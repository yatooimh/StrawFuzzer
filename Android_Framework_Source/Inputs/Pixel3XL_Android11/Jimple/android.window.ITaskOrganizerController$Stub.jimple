public abstract class android.window.ITaskOrganizerController$Stub extends android.os.Binder implements android.window.ITaskOrganizerController
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_createRootTask;
    static final int TRANSACTION_deleteRootTask;
    static final int TRANSACTION_getChildTasks;
    static final int TRANSACTION_getImeTarget;
    static final int TRANSACTION_getRootTasks;
    static final int TRANSACTION_registerTaskOrganizer;
    static final int TRANSACTION_setInterceptBackPressedOnTaskRoot;
    static final int TRANSACTION_setLaunchRoot;
    static final int TRANSACTION_unregisterTaskOrganizer;

    public void <init>()
    {
        android.window.ITaskOrganizerController$Stub r0;

        r0 := @this: android.window.ITaskOrganizerController$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.window.ITaskOrganizerController");

        return;
    }

    public static android.window.ITaskOrganizerController asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.window.ITaskOrganizerController$Stub$Proxy $r2;
        boolean $z0;
        android.window.ITaskOrganizerController $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.window.ITaskOrganizerController;

        if $z0 == 0 goto label2;

        $r3 = (android.window.ITaskOrganizerController) r1;

        return $r3;

     label2:
        $r2 = new android.window.ITaskOrganizerController$Stub$Proxy;

        specialinvoke $r2.<android.window.ITaskOrganizerController$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.window.ITaskOrganizerController getDefaultImpl()
    {
        android.window.ITaskOrganizerController $r0;

        $r0 = <android.window.ITaskOrganizerController$Stub$Proxy: android.window.ITaskOrganizerController sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setInterceptBackPressedOnTaskRoot";

     label03:
        return "setLaunchRoot";

     label04:
        return "getImeTarget";

     label05:
        return "getRootTasks";

     label06:
        return "getChildTasks";

     label07:
        return "deleteRootTask";

     label08:
        return "createRootTask";

     label09:
        return "unregisterTaskOrganizer";

     label10:
        return "registerTaskOrganizer";
    }

    public static boolean setDefaultImpl(android.window.ITaskOrganizerController)
    {
        android.window.ITaskOrganizerController r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.window.ITaskOrganizerController;

        $r1 = <android.window.ITaskOrganizerController$Stub$Proxy: android.window.ITaskOrganizerController sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.window.ITaskOrganizerController$Stub$Proxy: android.window.ITaskOrganizerController sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.window.ITaskOrganizerController$Stub r0;

        r0 := @this: android.window.ITaskOrganizerController$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.window.ITaskOrganizerController$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.window.ITaskOrganizerController$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.window.ITaskOrganizerController$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.window.ITaskOrganizerController$Stub r0;
        android.os.Parcel r1, r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        android.os.IBinder $r2, $r11, $r13;
        android.os.Parcelable$Creator $r3, $r7, $r9;
        java.lang.Object $r4, $r8, $r10;
        int[] $r5, $r6;
        android.window.ITaskOrganizer $r12, $r14, r16;
        boolean $z0, z1, z2;
        android.window.WindowContainerToken r17, r18, r20, r22;
        java.util.List r19, r21;
        android.app.ActivityManager$RunningTaskInfo r23;

        r0 := @this: android.window.ITaskOrganizerController$Stub;

        i10 := @parameter0: int;

        r15 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i10 == 1598968902 goto label22;

        z1 = 0;

        tableswitch(i10)
        {
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label17;
            case 4: goto label14;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label07;
            case 8: goto label04;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i10, r15, r1, i0);

        return $z0;

     label02:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $r2 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r16 = staticinvoke <android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer asInterface(android.os.IBinder)>($r2);

        $i1 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        z1 = 1;

     label03:
        virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: void setInterceptBackPressedOnTaskRoot(android.window.ITaskOrganizer,boolean)>(r16, z1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        i11 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label05;

        $r3 = <android.window.WindowContainerToken: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r15);

        r17 = (android.window.WindowContainerToken) $r4;

        goto label06;

     label05:
        r17 = null;

     label06:
        virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: void setLaunchRoot(int,android.window.WindowContainerToken)>(i11, r17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $i3 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        r18 = virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: android.window.WindowContainerToken getImeTarget(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r18 == null goto label08;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r18.<android.window.WindowContainerToken: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label09;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        return 1;

     label10:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $i4 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        $r5 = virtualinvoke r15.<android.os.Parcel: int[] createIntArray()>();

        r19 = virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: java.util.List getRootTasks(int,int[])>($i4, $r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r19);

        return 1;

     label11:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $i5 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label12;

        $r7 = <android.window.WindowContainerToken: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r15);

        r20 = (android.window.WindowContainerToken) $r8;

        goto label13;

     label12:
        r20 = null;

     label13:
        $r6 = virtualinvoke r15.<android.os.Parcel: int[] createIntArray()>();

        r21 = virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: java.util.List getChildTasks(android.window.WindowContainerToken,int[])>(r20, $r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r21);

        return 1;

     label14:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $i6 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label15;

        $r9 = <android.window.WindowContainerToken: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r15);

        r22 = (android.window.WindowContainerToken) $r10;

        goto label16;

     label15:
        r22 = null;

     label16:
        z2 = virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: boolean deleteRootTask(android.window.WindowContainerToken)>(r22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i12 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        return 1;

     label17:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $i7 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        r23 = virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: android.app.ActivityManager$RunningTaskInfo createRootTask(int,int)>($i7, $i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r23 == null goto label18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r23.<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label19;

     label18:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        return 1;

     label20:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $r11 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer asInterface(android.os.IBinder)>($r11);

        virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: void unregisterTaskOrganizer(android.window.ITaskOrganizer)>($r12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.window.ITaskOrganizerController");

        $r13 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r14 = staticinvoke <android.window.ITaskOrganizer$Stub: android.window.ITaskOrganizer asInterface(android.os.IBinder)>($r13);

        $i9 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.window.ITaskOrganizerController$Stub: void registerTaskOrganizer(android.window.ITaskOrganizer,int)>($r14, $i9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.window.ITaskOrganizerController");

        return 1;
    }

    public static void <clinit>()
    {
        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_unregisterTaskOrganizer> = 2;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_setLaunchRoot> = 8;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_setInterceptBackPressedOnTaskRoot> = 9;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_registerTaskOrganizer> = 1;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_getRootTasks> = 6;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_getImeTarget> = 7;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_getChildTasks> = 5;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_deleteRootTask> = 4;

        <android.window.ITaskOrganizerController$Stub: int TRANSACTION_createRootTask> = 3;

        <android.window.ITaskOrganizerController$Stub: java.lang.String DESCRIPTOR> = "android.window.ITaskOrganizerController";

        return;
    }
}
