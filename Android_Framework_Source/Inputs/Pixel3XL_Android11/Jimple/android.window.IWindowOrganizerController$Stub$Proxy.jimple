class android.window.IWindowOrganizerController$Stub$Proxy extends java.lang.Object implements android.window.IWindowOrganizerController
{
    public static android.window.IWindowOrganizerController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public int applySyncTransaction(android.window.WindowContainerTransaction, android.window.IWindowContainerTransactionCallback) throws android.os.RemoteException
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.window.IWindowContainerTransactionCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.window.IWindowOrganizerController $r5, $r6;
        java.lang.Throwable $r7;
        android.window.WindowContainerTransaction r8;
        int i0, i1;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r8 := @parameter0: android.window.WindowContainerTransaction;

        r1 := @parameter1: android.window.IWindowContainerTransactionCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.IWindowOrganizerController");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.window.WindowContainerTransaction: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.window.IWindowContainerTransactionCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.window.IWindowOrganizerController: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void applyTransaction(android.window.WindowContainerTransaction) throws android.os.RemoteException
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.window.IWindowOrganizerController $r4, $r5;
        java.lang.Throwable $r6;
        android.window.WindowContainerTransaction r7;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r7 := @parameter0: android.window.WindowContainerTransaction;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.IWindowOrganizerController");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.window.WindowContainerTransaction: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        interfaceinvoke $r5.<android.window.IWindowOrganizerController: void applyTransaction(android.window.WindowContainerTransaction)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        $r1 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController() throws android.os.RemoteException
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.window.IWindowOrganizerController $r5, $r6;
        java.lang.Throwable $r7;
        android.window.IDisplayAreaOrganizerController r8, r9;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.IWindowOrganizerController");

        $r3 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.window.IWindowOrganizerController: android.window.IDisplayAreaOrganizerController getDisplayAreaOrganizerController()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.window.IDisplayAreaOrganizerController$Stub: android.window.IDisplayAreaOrganizerController asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        return "android.window.IWindowOrganizerController";
    }

    public android.window.ITaskOrganizerController getTaskOrganizerController() throws android.os.RemoteException
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.window.IWindowOrganizerController $r5, $r6;
        java.lang.Throwable $r7;
        android.window.ITaskOrganizerController r8, r9;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.IWindowOrganizerController");

        $r3 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.window.IWindowOrganizerController: android.window.ITaskOrganizerController getTaskOrganizerController()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.window.ITaskOrganizerController$Stub: android.window.ITaskOrganizerController asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean takeScreenshot(android.window.WindowContainerToken, android.view.SurfaceControl) throws android.os.RemoteException
    {
        android.window.IWindowOrganizerController$Stub$Proxy r0;
        android.view.SurfaceControl r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0, z1, z2;
        int $i0, $i1;
        android.window.IWindowOrganizerController $r5, $r6;
        java.lang.Throwable $r7;
        android.window.WindowContainerToken r8;

        r0 := @this: android.window.IWindowOrganizerController$Stub$Proxy;

        r8 := @parameter0: android.window.WindowContainerToken;

        r1 := @parameter1: android.view.SurfaceControl;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.window.IWindowOrganizerController");

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.window.WindowContainerToken: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.window.IWindowOrganizerController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.window.IWindowOrganizerController$Stub: android.window.IWindowOrganizerController getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.window.IWindowOrganizerController: boolean takeScreenshot(android.window.WindowContainerToken,android.view.SurfaceControl)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

     label09:
        goto label11;

     label10:
        z1 = 0;

     label11:
        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label12;

        virtualinvoke r1.<android.view.SurfaceControl: void readFromParcel(android.os.Parcel)>(r3);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
}
