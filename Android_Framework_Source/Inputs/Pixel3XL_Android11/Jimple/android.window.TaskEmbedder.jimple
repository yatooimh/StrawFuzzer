public abstract class android.window.TaskEmbedder extends java.lang.Object
{
    private static final java.lang.String TAG;
    protected android.app.IActivityTaskManager mActivityTaskManager;
    protected final android.content.Context mContext;
    private final dalvik.system.CloseGuard mGuard;
    protected android.window.TaskEmbedder$Host mHost;
    protected android.window.TaskEmbedder$Listener mListener;
    protected boolean mOpened;
    protected android.view.SurfaceControl mSurfaceControl;
    protected android.view.SurfaceControl$Transaction mTransaction;

    public void <init>(android.content.Context, android.window.TaskEmbedder$Host)
    {
        android.window.TaskEmbedder r0;
        android.content.Context r1;
        android.window.TaskEmbedder$Host r2;
        android.app.IActivityTaskManager $r3;
        dalvik.system.CloseGuard $r4;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.window.TaskEmbedder$Host;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r0.<android.window.TaskEmbedder: android.app.IActivityTaskManager mActivityTaskManager> = $r3;

        $r4 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.window.TaskEmbedder: dalvik.system.CloseGuard mGuard> = $r4;

        r0.<android.window.TaskEmbedder: android.content.Context mContext> = r1;

        r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost> = r2;

        return;
    }

    private void applyTapExcludeRegion(android.view.IWindow, android.graphics.Region)
    {
        android.window.TaskEmbedder r0;
        android.graphics.Region r1;
        android.view.IWindowSession $r2;
        android.os.RemoteException $r3;
        android.view.IWindow r5;

        r0 := @this: android.window.TaskEmbedder;

        r5 := @parameter0: android.view.IWindow;

        r1 := @parameter1: android.graphics.Region;

     label1:
        $r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void updateTapExcludeRegion(android.view.IWindow,android.graphics.Region)>(r5, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void clearTapExcludeRegion()
    {
        android.window.TaskEmbedder r0;
        boolean $z0;
        android.window.TaskEmbedder$Host $r1, $r3;
        android.view.IWindow $r2, $r4;

        r0 := @this: android.window.TaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r2 = interfaceinvoke $r1.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r4 = interfaceinvoke $r3.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        specialinvoke r0.<android.window.TaskEmbedder: void applyTapExcludeRegion(android.view.IWindow,android.graphics.Region)>($r4, null);

        return;

     label2:
        return;
    }

    private boolean performRelease()
    {
        android.window.TaskEmbedder r0;
        boolean z0, $z1;
        android.window.TaskEmbedder$Listener r1;
        android.view.SurfaceControl $r2, $r5;
        android.view.SurfaceControl$Transaction $r3, $r4;
        dalvik.system.CloseGuard $r6;

        r0 := @this: android.window.TaskEmbedder;

        $z1 = r0.<android.window.TaskEmbedder: boolean mOpened>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.window.TaskEmbedder: android.view.SurfaceControl$Transaction mTransaction>;

        $r2 = r0.<android.window.TaskEmbedder: android.view.SurfaceControl mSurfaceControl>;

        $r4 = virtualinvoke $r3.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction reparent(android.view.SurfaceControl,android.view.SurfaceControl)>($r2, null);

        virtualinvoke $r4.<android.view.SurfaceControl$Transaction: void apply()>();

        $r5 = r0.<android.window.TaskEmbedder: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r5.<android.view.SurfaceControl: void release()>();

        z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean onRelease()>();

        r1 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        if r1 == null goto label2;

        if z0 == 0 goto label2;

        interfaceinvoke r1.<android.window.TaskEmbedder$Listener: void onReleased()>();

     label2:
        r0.<android.window.TaskEmbedder: boolean mOpened> = 0;

        $r6 = r0.<android.window.TaskEmbedder: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r6.<dalvik.system.CloseGuard: void close()>();

        return 1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.window.TaskEmbedder r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.window.TaskEmbedder;

     label1:
        $r2 = r0.<android.window.TaskEmbedder: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.window.TaskEmbedder: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

        specialinvoke r0.<android.window.TaskEmbedder: boolean performRelease()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.window.TaskEmbedder r0;
        android.graphics.Region r1;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.graphics.Region;

        return 0;
    }

    public int getDisplayId()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        return -1;
    }

    public abstract int getId();

    public android.view.SurfaceControl getSurfaceControl()
    {
        android.window.TaskEmbedder r0;
        android.view.SurfaceControl $r1;

        r0 := @this: android.window.TaskEmbedder;

        $r1 = r0.<android.window.TaskEmbedder: android.view.SurfaceControl mSurfaceControl>;

        return $r1;
    }

    public android.hardware.display.VirtualDisplay getVirtualDisplay()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        return null;
    }

    public boolean initialize(android.view.SurfaceControl)
    {
        android.window.TaskEmbedder r0;
        android.view.SurfaceControl r1, $r13, $r20;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r2;
        android.view.SurfaceControl$Transaction $r3, $r19, $r21;
        java.lang.StringBuilder $r4;
        int $i0;
        java.lang.String $r6, r17;
        android.view.SurfaceControl$Builder $r8, $r9, $r10, $r11, $r12;
        android.window.TaskEmbedder$Listener $r14, $r15;
        dalvik.system.CloseGuard $r18;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.view.SurfaceControl;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label3;

        $r3 = new android.view.SurfaceControl$Transaction;

        specialinvoke $r3.<android.view.SurfaceControl$Transaction: void <init>()>();

        r0.<android.window.TaskEmbedder: android.view.SurfaceControl$Transaction mTransaction> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskEmbedder - ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r17 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new android.view.SurfaceControl$Builder;

        specialinvoke $r8.<android.view.SurfaceControl$Builder: void <init>()>();

        $r9 = virtualinvoke $r8.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

        $r10 = virtualinvoke $r9.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>(r1);

        $r11 = virtualinvoke $r10.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>(r17);

        $r12 = virtualinvoke $r11.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("TaskEmbedder.initialize");

        $r13 = virtualinvoke $r12.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<android.window.TaskEmbedder: android.view.SurfaceControl mSurfaceControl> = $r13;

        $z1 = virtualinvoke r0.<android.window.TaskEmbedder: boolean onInitialize()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r14 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        if $r14 == null goto label2;

        $z2 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z2 == 0 goto label2;

        $r15 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        interfaceinvoke $r15.<android.window.TaskEmbedder$Listener: void onInitialized()>();

     label2:
        r0.<android.window.TaskEmbedder: boolean mOpened> = 1;

        $r18 = r0.<android.window.TaskEmbedder: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r18.<dalvik.system.CloseGuard: void open(java.lang.String)>("release");

        $r19 = r0.<android.window.TaskEmbedder: android.view.SurfaceControl$Transaction mTransaction>;

        $r20 = virtualinvoke r0.<android.window.TaskEmbedder: android.view.SurfaceControl getSurfaceControl()>();

        $r21 = virtualinvoke $r19.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction show(android.view.SurfaceControl)>($r20);

        virtualinvoke $r21.<android.view.SurfaceControl$Transaction: void apply()>();

        return 1;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to initialize for the second time.");

        throw $r2;
    }

    public abstract boolean isInitialized();

    public void notifyBoundsChanged()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        virtualinvoke r0.<android.window.TaskEmbedder: void updateLocationAndTapExcludeRegion()>();

        return;
    }

    public boolean onInitialize()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        virtualinvoke r0.<android.window.TaskEmbedder: void updateLocationAndTapExcludeRegion()>();

        return 1;
    }

    protected boolean onRelease()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void clearTapExcludeRegion()>();

        return 1;
    }

    public abstract void performBackPress();

    protected android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)
    {
        android.window.TaskEmbedder r0;
        android.app.ActivityOptions r1, r3;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.app.ActivityOptions;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label2;

        r3 = r1;

        if r1 != null goto label1;

        r3 = staticinvoke <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>();

     label1:
        return r3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to start activity before ActivityView is ready.");

        throw $r2;
    }

    public void release()
    {
        android.window.TaskEmbedder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.window.TaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.window.TaskEmbedder: boolean performRelease()>();

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to release container that is not initialized.");

        throw $r1;
    }

    public void resizeTask(int, int)
    {
        android.window.TaskEmbedder r0;
        int i0, i1;

        r0 := @this: android.window.TaskEmbedder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setForwardedInsets(android.graphics.Insets)
    {
        android.window.TaskEmbedder r0;
        android.graphics.Insets r1;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.graphics.Insets;

        return;
    }

    public void setListener(android.window.TaskEmbedder$Listener)
    {
        android.window.TaskEmbedder r0;
        android.window.TaskEmbedder$Listener r1, $r2;
        boolean $z0;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.window.TaskEmbedder$Listener;

        r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Listener mListener> = r1;

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        interfaceinvoke $r2.<android.window.TaskEmbedder$Listener: void onInitialized()>();

     label1:
        return;
    }

    public void start()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        virtualinvoke r0.<android.window.TaskEmbedder: void updateLocationAndTapExcludeRegion()>();

        return;
    }

    public void startActivity(android.app.PendingIntent)
    {
        android.window.TaskEmbedder r0;
        android.app.ActivityOptions r1;
        android.os.Bundle $r2;
        android.app.PendingIntent$CanceledException $r3;
        java.lang.RuntimeException $r4;
        android.app.PendingIntent r5;

        r0 := @this: android.window.TaskEmbedder;

        r5 := @parameter0: android.app.PendingIntent;

        r1 = virtualinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(null);

     label1:
        $r2 = virtualinvoke r1.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke r5.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>(null, 0, null, null, null, null, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void startActivity(android.app.PendingIntent, android.content.Intent, android.app.ActivityOptions)
    {
        android.window.TaskEmbedder r0;
        android.content.Intent r1;
        android.app.ActivityOptions r2;
        android.content.Context $r4;
        android.os.Bundle $r5;
        android.app.PendingIntent$CanceledException $r6;
        java.lang.RuntimeException $r7;
        android.app.PendingIntent r8;

        r0 := @this: android.window.TaskEmbedder;

        r8 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: android.app.ActivityOptions;

        virtualinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(r2);

     label1:
        $r4 = r0.<android.window.TaskEmbedder: android.content.Context mContext>;

        $r5 = virtualinvoke r2.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke r8.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>($r4, 0, r1, null, null, null, $r5);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void startActivity(android.content.Intent)
    {
        android.window.TaskEmbedder r0;
        android.content.Intent r1;
        android.app.ActivityOptions r2;
        android.content.Context $r3;
        android.os.Bundle $r4;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(null);

        $r3 = r0.<android.window.TaskEmbedder: android.content.Context mContext>;

        $r4 = virtualinvoke r2.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke $r3.<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>(r1, $r4);

        return;
    }

    public void startActivity(android.content.Intent, android.os.UserHandle)
    {
        android.window.TaskEmbedder r0;
        android.content.Intent r1;
        android.os.UserHandle r2;
        android.app.ActivityOptions r3;
        android.content.Context $r4;
        android.os.Bundle $r5;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.UserHandle;

        r3 = virtualinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(null);

        $r4 = r0.<android.window.TaskEmbedder: android.content.Context mContext>;

        $r5 = virtualinvoke r3.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke $r4.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r1, $r5, r2);

        return;
    }

    public void startShortcutActivity(android.content.pm.ShortcutInfo, android.app.ActivityOptions, android.graphics.Rect)
    {
        android.window.TaskEmbedder r0;
        android.content.pm.ShortcutInfo r1;
        android.app.ActivityOptions r2;
        android.graphics.Rect r3;
        android.content.pm.LauncherApps r4;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.os.Bundle $r8;

        r0 := @this: android.window.TaskEmbedder;

        r1 := @parameter0: android.content.pm.ShortcutInfo;

        r2 := @parameter1: android.app.ActivityOptions;

        r3 := @parameter2: android.graphics.Rect;

        $r5 = r0.<android.window.TaskEmbedder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("launcherapps");

        r4 = (android.content.pm.LauncherApps) $r6;

        virtualinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(r2);

        $r8 = virtualinvoke r2.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

        virtualinvoke r4.<android.content.pm.LauncherApps: void startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)>(r1, r3, $r8);

        return;
    }

    public void stop()
    {
        android.window.TaskEmbedder r0;

        r0 := @this: android.window.TaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void clearTapExcludeRegion()>();

        return;
    }

    protected void updateLocationAndTapExcludeRegion()
    {
        android.window.TaskEmbedder r0;
        boolean $z0;
        android.window.TaskEmbedder$Host $r1, $r3, $r5;
        android.view.IWindow $r2, $r4;
        android.graphics.Region $r6;

        r0 := @this: android.window.TaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.TaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r2 = interfaceinvoke $r1.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r4 = interfaceinvoke $r3.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        $r5 = r0.<android.window.TaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r6 = interfaceinvoke $r5.<android.window.TaskEmbedder$Host: android.graphics.Region getTapExcludeRegion()>();

        specialinvoke r0.<android.window.TaskEmbedder: void applyTapExcludeRegion(android.view.IWindow,android.graphics.Region)>($r4, $r6);

        return;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.window.TaskEmbedder: java.lang.String TAG> = "TaskEmbedder";

        return;
    }
}
