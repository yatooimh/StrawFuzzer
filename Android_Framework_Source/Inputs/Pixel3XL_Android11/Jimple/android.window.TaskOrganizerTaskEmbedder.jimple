public class android.window.TaskOrganizerTaskEmbedder extends android.window.TaskEmbedder
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private boolean mPendingNotifyBoundsChanged;
    private android.app.ActivityManager$RunningTaskInfo mTaskInfo;
    private android.view.SurfaceControl mTaskLeash;
    private android.window.TaskOrganizer mTaskOrganizer;
    private android.window.WindowContainerToken mTaskToken;

    public void <init>(android.content.Context, android.window.TaskEmbedder$Host)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.content.Context r1;
        android.window.TaskEmbedder$Host r2;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.window.TaskEmbedder$Host;

        specialinvoke r0.<android.window.TaskEmbedder: void <init>(android.content.Context,android.window.TaskEmbedder$Host)>(r1, r2);

        return;
    }

    static android.app.ActivityManager$RunningTaskInfo access$100(android.window.TaskOrganizerTaskEmbedder)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.app.ActivityManager$RunningTaskInfo $r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        $r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.app.ActivityManager$RunningTaskInfo mTaskInfo>;

        return $r1;
    }

    static android.app.ActivityManager$RunningTaskInfo access$102(android.window.TaskOrganizerTaskEmbedder, android.app.ActivityManager$RunningTaskInfo)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.app.ActivityManager$RunningTaskInfo r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter1: android.app.ActivityManager$RunningTaskInfo;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.app.ActivityManager$RunningTaskInfo mTaskInfo> = r1;

        return r1;
    }

    static android.window.WindowContainerToken access$200(android.window.TaskOrganizerTaskEmbedder)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.window.WindowContainerToken $r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        $r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        return $r1;
    }

    static android.window.WindowContainerToken access$202(android.window.TaskOrganizerTaskEmbedder, android.window.WindowContainerToken)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.window.WindowContainerToken r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter1: android.window.WindowContainerToken;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken> = r1;

        return r1;
    }

    static android.view.SurfaceControl access$300(android.window.TaskOrganizerTaskEmbedder)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.view.SurfaceControl $r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        $r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.view.SurfaceControl mTaskLeash>;

        return $r1;
    }

    static android.view.SurfaceControl access$302(android.window.TaskOrganizerTaskEmbedder, android.view.SurfaceControl)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.view.SurfaceControl r1;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter1: android.view.SurfaceControl;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.view.SurfaceControl mTaskLeash> = r1;

        return r1;
    }

    static boolean access$400(android.window.TaskOrganizerTaskEmbedder)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        boolean $z0;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        $z0 = r0.<android.window.TaskOrganizerTaskEmbedder: boolean mPendingNotifyBoundsChanged>;

        return $z0;
    }

    static void access$500(android.window.TaskOrganizerTaskEmbedder)
    {
        android.window.TaskOrganizerTaskEmbedder r0;

        r0 := @parameter0: android.window.TaskOrganizerTaskEmbedder;

        specialinvoke r0.<android.window.TaskOrganizerTaskEmbedder: void resetTaskInfo()>();

        return;
    }

    private int getTaskId()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.app.ActivityManager$RunningTaskInfo r1;
        int i0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.app.ActivityManager$RunningTaskInfo mTaskInfo>;

        if r1 == null goto label1;

        i0 = r1.<android.app.ActivityManager$RunningTaskInfo: int taskId>;

        goto label2;

     label1:
        i0 = -1;

     label2:
        return i0;
    }

    private void log(java.lang.String)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TaskOrgTaskEmbedder", $r8);

        return;
    }

    private void resetTaskInfo()
    {
        android.window.TaskOrganizerTaskEmbedder r0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.app.ActivityManager$RunningTaskInfo mTaskInfo> = null;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken> = null;

        r0.<android.window.TaskOrganizerTaskEmbedder: android.view.SurfaceControl mTaskLeash> = null;

        return;
    }

    public int getId()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        int $i0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        $i0 = specialinvoke r0.<android.window.TaskOrganizerTaskEmbedder: int getTaskId()>();

        return $i0;
    }

    public boolean isInitialized()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.window.TaskOrganizer $r1;
        boolean z0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        $r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskOrganizer mTaskOrganizer>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void notifyBoundsChanged()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.graphics.Rect r1;
        android.window.WindowContainerToken $r3, $r7;
        android.window.TaskEmbedder$Host $r4;
        int $i0, $i1;
        android.window.WindowContainerTransaction $r6;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void notifyBoundsChanged()>();

        $r3 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        if $r3 != null goto label1;

        r0.<android.window.TaskOrganizerTaskEmbedder: boolean mPendingNotifyBoundsChanged> = 1;

        return;

     label1:
        r0.<android.window.TaskOrganizerTaskEmbedder: boolean mPendingNotifyBoundsChanged> = 0;

        $r4 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        r1 = interfaceinvoke $r4.<android.window.TaskEmbedder$Host: android.graphics.Rect getScreenBounds()>();

        $i0 = r1.<android.graphics.Rect: int left>;

        if $i0 < 0 goto label2;

        $i1 = r1.<android.graphics.Rect: int top>;

        if $i1 >= 0 goto label3;

     label2:
        virtualinvoke r1.<android.graphics.Rect: void offsetTo(int,int)>(0, 0);

     label3:
        $r6 = new android.window.WindowContainerTransaction;

        specialinvoke $r6.<android.window.WindowContainerTransaction: void <init>()>();

        $r7 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        virtualinvoke $r6.<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setBounds(android.window.WindowContainerToken,android.graphics.Rect)>($r7, r1);

        staticinvoke <android.window.WindowOrganizer: void applyTransaction(android.window.WindowContainerTransaction)>($r6);

        return;
    }

    public boolean onInitialize()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.window.TaskOrganizerTaskEmbedder$TaskOrganizerImpl $r2;
        android.window.TaskOrganizer $r3;
        boolean $z0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        $r2 = new android.window.TaskOrganizerTaskEmbedder$TaskOrganizerImpl;

        specialinvoke $r2.<android.window.TaskOrganizerTaskEmbedder$TaskOrganizerImpl: void <init>(android.window.TaskOrganizerTaskEmbedder,android.window.TaskOrganizerTaskEmbedder$1)>(r0, null);

        r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskOrganizer mTaskOrganizer> = $r2;

        virtualinvoke $r2.<android.window.TaskOrganizer: void registerOrganizer(int)>(6);

        $r3 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskOrganizer mTaskOrganizer>;

        virtualinvoke $r3.<android.window.TaskOrganizer: void setInterceptBackPressedOnTaskRoot(boolean)>(1);

        $z0 = specialinvoke r0.<android.window.TaskEmbedder: boolean onInitialize()>();

        return $z0;
    }

    protected boolean onRelease()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        boolean $z0;
        android.window.TaskOrganizer $r1;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.TaskOrganizerTaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskOrganizer mTaskOrganizer>;

        virtualinvoke $r1.<android.window.TaskOrganizer: void unregisterOrganizer()>();

        specialinvoke r0.<android.window.TaskOrganizerTaskEmbedder: void resetTaskInfo()>();

        return 1;
    }

    public void performBackPress()
    {
        android.window.TaskOrganizerTaskEmbedder r0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        return;
    }

    protected android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        android.app.ActivityOptions r1, r2;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        r1 := @parameter0: android.app.ActivityOptions;

        r2 = specialinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(r1);

        virtualinvoke r2.<android.app.ActivityOptions: void setLaunchWindowingMode(int)>(6);

        return r2;
    }

    public void start()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        boolean $z0;
        android.window.WindowContainerToken $r2, $r4;
        android.window.WindowContainerTransaction $r3;
        android.window.TaskEmbedder$Listener $r6, $r7;
        int $i0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void start()>();

        $z0 = virtualinvoke r0.<android.window.TaskOrganizerTaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = new android.window.WindowContainerTransaction;

        specialinvoke $r3.<android.window.WindowContainerTransaction: void <init>()>();

        $r4 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        virtualinvoke $r3.<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setHidden(android.window.WindowContainerToken,boolean)>($r4, 0);

        staticinvoke <android.window.WindowOrganizer: void applyTransaction(android.window.WindowContainerTransaction)>($r3);

        $r6 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        if $r6 == null goto label3;

        $r7 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        $i0 = specialinvoke r0.<android.window.TaskOrganizerTaskEmbedder: int getTaskId()>();

        interfaceinvoke $r7.<android.window.TaskEmbedder$Listener: void onTaskVisibilityChanged(int,boolean)>($i0, 1);

     label3:
        return;
    }

    public void stop()
    {
        android.window.TaskOrganizerTaskEmbedder r0;
        boolean $z0;
        android.window.WindowContainerToken $r2, $r4;
        android.window.WindowContainerTransaction $r3;
        android.window.TaskEmbedder$Listener $r6, $r7;
        int $i0;

        r0 := @this: android.window.TaskOrganizerTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void stop()>();

        $z0 = virtualinvoke r0.<android.window.TaskOrganizerTaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = new android.window.WindowContainerTransaction;

        specialinvoke $r3.<android.window.WindowContainerTransaction: void <init>()>();

        $r4 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.WindowContainerToken mTaskToken>;

        virtualinvoke $r3.<android.window.WindowContainerTransaction: android.window.WindowContainerTransaction setHidden(android.window.WindowContainerToken,boolean)>($r4, 1);

        staticinvoke <android.window.WindowOrganizer: void applyTransaction(android.window.WindowContainerTransaction)>($r3);

        $r6 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        if $r6 == null goto label3;

        $r7 = r0.<android.window.TaskOrganizerTaskEmbedder: android.window.TaskEmbedder$Listener mListener>;

        $i0 = specialinvoke r0.<android.window.TaskOrganizerTaskEmbedder: int getTaskId()>();

        interfaceinvoke $r7.<android.window.TaskEmbedder$Listener: void onTaskVisibilityChanged(int,boolean)>($i0, 0);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.window.TaskOrganizerTaskEmbedder: java.lang.String TAG> = "TaskOrgTaskEmbedder";

        <android.window.TaskOrganizerTaskEmbedder: boolean DEBUG> = 0;

        return;
    }
}
