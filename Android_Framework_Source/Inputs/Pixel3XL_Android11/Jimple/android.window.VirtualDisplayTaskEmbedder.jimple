public class android.window.VirtualDisplayTaskEmbedder extends android.window.TaskEmbedder
{
    private static final java.lang.String DISPLAY_NAME;
    private static final java.lang.String TAG;
    private int mDisplayDensityDpi;
    private android.graphics.Insets mForwardedInsets;
    private final boolean mSingleTaskInstance;
    private android.app.TaskStackListener mTaskStackListener;
    private android.util.DisplayMetrics mTmpDisplayMetrics;
    private final boolean mUsePublicVirtualDisplay;
    private android.hardware.display.VirtualDisplay mVirtualDisplay;

    public void <init>(android.content.Context, android.window.TaskEmbedder$Host, boolean, boolean)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.content.Context r1;
        android.window.TaskEmbedder$Host r2;
        boolean z0, z1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.window.TaskEmbedder$Host;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.window.TaskEmbedder: void <init>(android.content.Context,android.window.TaskEmbedder$Host)>(r1, r2);

        r0.<android.window.VirtualDisplayTaskEmbedder: boolean mSingleTaskInstance> = z0;

        r0.<android.window.VirtualDisplayTaskEmbedder: boolean mUsePublicVirtualDisplay> = z1;

        return;
    }

    private void clearActivityViewGeometryForIme()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        int i0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        i0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void reportActivityView(int,android.graphics.Matrix)>(i0, null);

        return;
    }

    private static android.view.KeyEvent createKeyEvent(int, int, int)
    {
        int i0, i1, i2;
        long l3;
        android.view.KeyEvent $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l3, l3, i0, i1, 0, 0, -1, 0, 72, 257);

        virtualinvoke $r1.<android.view.KeyEvent: void setDisplayId(int)>(i2);

        return $r1;
    }

    private int getBaseDisplayDensity()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int densityDpi>;

        return $i0;
    }

    private void reportLocation(android.graphics.Matrix, android.graphics.Point)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.graphics.Point r1;
        int i0, $i1, $i2;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;
        android.view.IWindowSession $r5;
        android.window.TaskEmbedder$Host $r6;
        android.view.IWindow $r7;
        android.os.RemoteException $r8;
        android.graphics.Matrix r10;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        r10 := @parameter0: android.graphics.Matrix;

        r1 := @parameter1: android.graphics.Point;

     label1:
        i0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        $r2 = r0.<android.window.VirtualDisplayTaskEmbedder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/inputmethod/InputMethodManager;");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: void reportActivityView(int,android.graphics.Matrix)>(i0, r10);

        $r5 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        $r6 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r7 = interfaceinvoke $r6.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        $i2 = r1.<android.graphics.Point: int x>;

        $i1 = r1.<android.graphics.Point: int y>;

        interfaceinvoke $r5.<android.view.IWindowSession: void updateDisplayContentLocation(android.view.IWindow,int,int,int)>($r7, $i2, $i1, i0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.graphics.Region r1;
        boolean $z0;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        r1 := @parameter0: android.graphics.Region;

        virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: void notifyBoundsChanged()>();

        $z0 = specialinvoke r0.<android.window.TaskEmbedder: boolean gatherTransparentRegion(android.graphics.Region)>(r1);

        return $z0;
    }

    public int getDisplayId()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r1;
        android.view.Display $r2;
        int $i0;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        $r2 = virtualinvoke $r1.<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getDisplayId()>();

        return $i0;

     label1:
        return -1;
    }

    public int getId()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        int $i0;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $i0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        return $i0;
    }

    public android.hardware.display.VirtualDisplay getVirtualDisplay()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        return $r1;

     label1:
        return null;
    }

    public boolean isInitialized()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.hardware.display.VirtualDisplay $r1;
        boolean z0;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean onInitialize()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.hardware.display.DisplayManager r1;
        android.content.Context $r2, $r17;
        java.lang.Object $r3, $r18;
        int $i0, $i1, $i2, $i3, $i4, i7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.window.TaskEmbedder$Host $r8, $r9, $r11;
        android.view.IWindowSession $r10;
        android.view.IWindow $r12;
        android.view.SurfaceControl $r13;
        android.graphics.Insets $r14;
        android.app.TaskStackListener $r15;
        android.app.IActivityTaskManager $r16;
        android.app.ActivityTaskManager $r19;
        android.os.RemoteException $r20;
        short s6;
        android.hardware.display.VirtualDisplay r23;
        android.view.IWindowManager r24;
        android.window.VirtualDisplayTaskEmbedder$TaskStackListenerImpl r25;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $r2 = r0.<android.window.VirtualDisplayTaskEmbedder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManager;");

        r1 = (android.hardware.display.DisplayManager) $r3;

        $i0 = specialinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getBaseDisplayDensity()>();

        r0.<android.window.VirtualDisplayTaskEmbedder: int mDisplayDensityDpi> = $i0;

        $z0 = r0.<android.window.VirtualDisplayTaskEmbedder: boolean mUsePublicVirtualDisplay>;

        if $z0 == 0 goto label1;

        s6 = 264 | 1;

        goto label2;

     label1:
        s6 = 264;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskVirtualDisplay@");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $i2 = interfaceinvoke $r8.<android.window.TaskEmbedder$Host: int getWidth()>();

        $r9 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $i3 = interfaceinvoke $r9.<android.window.TaskEmbedder$Host: int getHeight()>();

        $i4 = r0.<android.window.VirtualDisplayTaskEmbedder: int mDisplayDensityDpi>;

        r23 = virtualinvoke r1.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)>($r7, $i2, $i3, $i4, null, s6);

        r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay> = r23;

        if r23 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VirDispTaskEmbedder", "Failed to initialize TaskEmbedder");

        return 0;

     label3:
        i7 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        r24 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        $r10 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        $r11 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r12 = interfaceinvoke $r11.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        $r13 = r0.<android.window.VirtualDisplayTaskEmbedder: android.view.SurfaceControl mSurfaceControl>;

        interfaceinvoke $r10.<android.view.IWindowSession: void reparentDisplayContent(android.view.IWindow,android.view.SurfaceControl,int)>($r12, $r13, i7);

        interfaceinvoke r24.<android.view.IWindowManager: void dontOverrideDisplayInfo(int)>(i7);

        $z1 = r0.<android.window.VirtualDisplayTaskEmbedder: boolean mSingleTaskInstance>;

        if $z1 == 0 goto label4;

        $r17 = r0.<android.window.VirtualDisplayTaskEmbedder: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/ActivityTaskManager;");

        $r19 = (android.app.ActivityTaskManager) $r18;

        virtualinvoke $r19.<android.app.ActivityTaskManager: void setDisplayToSingleTaskInstance(int)>(i7);

     label4:
        $r14 = r0.<android.window.VirtualDisplayTaskEmbedder: android.graphics.Insets mForwardedInsets>;

        virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: void setForwardedInsets(android.graphics.Insets)>($r14);

        r25 = new android.window.VirtualDisplayTaskEmbedder$TaskStackListenerImpl;

        specialinvoke r25.<android.window.VirtualDisplayTaskEmbedder$TaskStackListenerImpl: void <init>(android.window.VirtualDisplayTaskEmbedder,android.window.VirtualDisplayTaskEmbedder$1)>(r0, null);

        r0.<android.window.VirtualDisplayTaskEmbedder: android.app.TaskStackListener mTaskStackListener> = r25;

        $r16 = r0.<android.window.VirtualDisplayTaskEmbedder: android.app.IActivityTaskManager mActivityTaskManager>;

        $r15 = r0.<android.window.VirtualDisplayTaskEmbedder: android.app.TaskStackListener mTaskStackListener>;

        interfaceinvoke $r16.<android.app.IActivityTaskManager: void registerTaskStackListener(android.app.ITaskStackListener)>($r15);

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        virtualinvoke $r20.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label7:
        $z2 = specialinvoke r0.<android.window.TaskEmbedder: boolean onInitialize()>();

        return $z2;

        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    protected boolean onRelease()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        android.app.TaskStackListener $r2, $r4;
        android.hardware.display.VirtualDisplay $r3;
        android.app.IActivityTaskManager $r5;
        android.os.RemoteException $r6;
        boolean $z1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: boolean onRelease()>();

        specialinvoke r0.<android.window.VirtualDisplayTaskEmbedder: void clearActivityViewGeometryForIme()>();

        $r2 = r0.<android.window.VirtualDisplayTaskEmbedder: android.app.TaskStackListener mTaskStackListener>;

        if $r2 == null goto label5;

     label1:
        $r5 = r0.<android.window.VirtualDisplayTaskEmbedder: android.app.IActivityTaskManager mActivityTaskManager>;

        $r4 = r0.<android.window.VirtualDisplayTaskEmbedder: android.app.TaskStackListener mTaskStackListener>;

        interfaceinvoke $r5.<android.app.IActivityTaskManager: void unregisterTaskStackListener(android.app.ITaskStackListener)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VirDispTaskEmbedder", "Failed to unregister task stack listener", $r6);

     label4:
        r0.<android.window.VirtualDisplayTaskEmbedder: android.app.TaskStackListener mTaskStackListener> = null;

     label5:
        $z1 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z1 == 0 goto label6;

        $r3 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        virtualinvoke $r3.<android.hardware.display.VirtualDisplay: void release()>();

        r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay> = null;

        return 1;

     label6:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void performBackPress()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        int i0;
        android.hardware.input.InputManager r1;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r2;
        android.view.Display $r3;
        android.view.KeyEvent $r4, $r5;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        $r3 = virtualinvoke $r2.<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>();

        i0 = virtualinvoke $r3.<android.view.Display: int getDisplayId()>();

        r1 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        $r4 = staticinvoke <android.window.VirtualDisplayTaskEmbedder: android.view.KeyEvent createKeyEvent(int,int,int)>(0, 4, i0);

        virtualinvoke r1.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>($r4, 0);

        $r5 = staticinvoke <android.window.VirtualDisplayTaskEmbedder: android.view.KeyEvent createKeyEvent(int,int,int)>(1, 4, i0);

        virtualinvoke r1.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>($r5, 0);

        return;
    }

    protected android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        int $i0;
        android.app.ActivityOptions r2, r3;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        r2 := @parameter0: android.app.ActivityOptions;

        r3 = specialinvoke r0.<android.window.TaskEmbedder: android.app.ActivityOptions prepareActivityOptions(android.app.ActivityOptions)>(r2);

        $i0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        virtualinvoke r3.<android.app.ActivityOptions: android.app.ActivityOptions setLaunchDisplayId(int)>($i0);

        return r3;
    }

    public void resizeTask(int, int)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getBaseDisplayDensity()>();

        r0.<android.window.VirtualDisplayTaskEmbedder: int mDisplayDensityDpi> = $i2;

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        $i3 = r0.<android.window.VirtualDisplayTaskEmbedder: int mDisplayDensityDpi>;

        virtualinvoke $r1.<android.hardware.display.VirtualDisplay: void resize(int,int,int)>(i0, i1, $i3);

     label1:
        return;
    }

    public void setForwardedInsets(android.graphics.Insets)
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.view.IWindowManager $r1;
        int $i0;
        android.graphics.Insets $r2, r5;
        android.os.RemoteException $r3;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        r5 := @parameter0: android.graphics.Insets;

        r0.<android.window.VirtualDisplayTaskEmbedder: android.graphics.Insets mForwardedInsets> = r5;

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        $i0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: int getDisplayId()>();

        $r2 = r0.<android.window.VirtualDisplayTaskEmbedder: android.graphics.Insets mForwardedInsets>;

        interfaceinvoke $r1.<android.view.IWindowManager: void setForwardedInsets(int,android.graphics.Insets)>($i0, $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void start()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void start()>();

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        virtualinvoke $r1.<android.hardware.display.VirtualDisplay: void setDisplayState(boolean)>(1);

     label1:
        return;
    }

    public void stop()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.hardware.display.VirtualDisplay $r1;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void stop()>();

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.hardware.display.VirtualDisplay mVirtualDisplay>;

        virtualinvoke $r1.<android.hardware.display.VirtualDisplay: void setDisplayState(boolean)>(0);

        specialinvoke r0.<android.window.VirtualDisplayTaskEmbedder: void clearActivityViewGeometryForIme()>();

     label1:
        return;
    }

    protected void updateLocationAndTapExcludeRegion()
    {
        android.window.VirtualDisplayTaskEmbedder r0;
        boolean $z0;
        android.window.TaskEmbedder$Host $r1, $r3, $r5;
        android.view.IWindow $r2;
        android.graphics.Matrix $r4;
        android.graphics.Point $r6;

        r0 := @this: android.window.VirtualDisplayTaskEmbedder;

        specialinvoke r0.<android.window.TaskEmbedder: void updateLocationAndTapExcludeRegion()>();

        $z0 = virtualinvoke r0.<android.window.VirtualDisplayTaskEmbedder: boolean isInitialized()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r2 = interfaceinvoke $r1.<android.window.TaskEmbedder$Host: android.view.IWindow getWindow()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r4 = interfaceinvoke $r3.<android.window.TaskEmbedder$Host: android.graphics.Matrix getScreenToTaskMatrix()>();

        $r5 = r0.<android.window.VirtualDisplayTaskEmbedder: android.window.TaskEmbedder$Host mHost>;

        $r6 = interfaceinvoke $r5.<android.window.TaskEmbedder$Host: android.graphics.Point getPositionInWindow()>();

        specialinvoke r0.<android.window.VirtualDisplayTaskEmbedder: void reportLocation(android.graphics.Matrix,android.graphics.Point)>($r4, $r6);

        return;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.window.VirtualDisplayTaskEmbedder: java.lang.String TAG> = "VirDispTaskEmbedder";

        <android.window.VirtualDisplayTaskEmbedder: java.lang.String DISPLAY_NAME> = "TaskVirtualDisplay";

        return;
    }
}
