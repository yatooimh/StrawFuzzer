public class android.window.WindowOrganizer extends java.lang.Object
{
    private static final android.util.Singleton IWindowOrganizerControllerSingleton;

    static void <clinit>()
    {
        android.window.WindowOrganizer$1 $r0;

        $r0 = new android.window.WindowOrganizer$1;

        specialinvoke $r0.<android.window.WindowOrganizer$1: void <init>()>();

        <android.window.WindowOrganizer: android.util.Singleton IWindowOrganizerControllerSingleton> = $r0;

        return;
    }

    public void <init>()
    {
        android.window.WindowOrganizer r0;

        r0 := @this: android.window.WindowOrganizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void applyTransaction(android.window.WindowContainerTransaction)
    {
        android.window.IWindowOrganizerController $r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.window.WindowContainerTransaction r3;

        r3 := @parameter0: android.window.WindowContainerTransaction;

     label1:
        $r0 = staticinvoke <android.window.WindowOrganizer: android.window.IWindowOrganizerController getWindowOrganizerController()>();

        interfaceinvoke $r0.<android.window.IWindowOrganizerController: void applyTransaction(android.window.WindowContainerTransaction)>(r3);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.window.IWindowOrganizerController getWindowOrganizerController()
    {
        android.util.Singleton $r0;
        java.lang.Object $r1;
        android.window.IWindowOrganizerController $r2;

        $r0 = <android.window.WindowOrganizer: android.util.Singleton IWindowOrganizerControllerSingleton>;

        $r1 = virtualinvoke $r0.<android.util.Singleton: java.lang.Object get()>();

        $r2 = (android.window.IWindowOrganizerController) $r1;

        return $r2;
    }

    public static android.view.SurfaceControl takeScreenshot(android.window.WindowContainerToken)
    {
        android.view.SurfaceControl r0;
        boolean z0;
        android.window.IWindowOrganizerController $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.window.WindowContainerToken r4;

        r4 := @parameter0: android.window.WindowContainerToken;

     label1:
        r0 = new android.view.SurfaceControl;

        specialinvoke r0.<android.view.SurfaceControl: void <init>()>();

        $r1 = staticinvoke <android.window.WindowOrganizer: android.window.IWindowOrganizerController getWindowOrganizerController()>();

        z0 = interfaceinvoke $r1.<android.window.IWindowOrganizerController: boolean takeScreenshot(android.window.WindowContainerToken,android.view.SurfaceControl)>(r4, r0);

     label2:
        if z0 == 0 goto label3;

        return r0;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int applySyncTransaction(android.window.WindowContainerTransaction, android.window.WindowContainerTransactionCallback)
    {
        android.window.WindowOrganizer r0;
        android.window.WindowContainerTransactionCallback r1;
        int i0;
        android.window.IWindowOrganizerController $r2;
        android.window.IWindowContainerTransactionCallback $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.window.WindowContainerTransaction r6;

        r0 := @this: android.window.WindowOrganizer;

        r6 := @parameter0: android.window.WindowContainerTransaction;

        r1 := @parameter1: android.window.WindowContainerTransactionCallback;

     label1:
        $r2 = staticinvoke <android.window.WindowOrganizer: android.window.IWindowOrganizerController getWindowOrganizerController()>();

        $r3 = r1.<android.window.WindowContainerTransactionCallback: android.window.IWindowContainerTransactionCallback mInterface>;

        i0 = interfaceinvoke $r2.<android.window.IWindowOrganizerController: int applySyncTransaction(android.window.WindowContainerTransaction,android.window.IWindowContainerTransactionCallback)>(r6, $r3);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
