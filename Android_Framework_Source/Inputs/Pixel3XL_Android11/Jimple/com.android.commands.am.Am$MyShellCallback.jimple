final class com.android.commands.am.Am$MyShellCallback extends android.os.ShellCallback
{
    boolean mActive;

    void <init>()
    {
        com.android.commands.am.Am$MyShellCallback r0;

        r0 := @this: com.android.commands.am.Am$MyShellCallback;

        specialinvoke r0.<android.os.ShellCallback: void <init>()>();

        r0.<com.android.commands.am.Am$MyShellCallback: boolean mActive> = 1;

        return;
    }

    public android.os.ParcelFileDescriptor onOpenFile(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.commands.am.Am$MyShellCallback r0;
        boolean $z0, $z1;
        java.io.File $r2;
        java.lang.String $r3, $r10, $r15, $r20, r30, r31, r32, r37, r40, r44;
        java.lang.StringBuilder $r4, $r7, $r17, $r23;
        java.lang.IllegalArgumentException $r16, $r29;
        java.lang.Throwable $r21, $r22;
        java.io.PrintStream $r28, r33, r41;
        android.os.ParcelFileDescriptor r36;

        r0 := @this: com.android.commands.am.Am$MyShellCallback;

        r30 := @parameter0: java.lang.String;

        r31 := @parameter1: java.lang.String;

        r32 := @parameter2: java.lang.String;

        $z0 = r0.<com.android.commands.am.Am$MyShellCallback: boolean mActive>;

        if $z0 != 0 goto label1;

        r33 = <java.lang.System: java.io.PrintStream err>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Open attempt after active for: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.PrintStream: void println(java.lang.String)>($r20);

        return null;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r30);

     label2:
        r36 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r2, 738197504);

     label3:
        if r31 == null goto label8;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        r37 = staticinvoke <android.os.SELinux: java.lang.String getFileContext(java.lang.String)>($r3);

        $z1 = staticinvoke <android.os.SELinux: boolean checkSELinuxAccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r31, r37, "file", "write");

        if $z1 == 0 goto label4;

        goto label8;

     label4:
        virtualinvoke r36.<android.os.ParcelFileDescriptor: void close()>();

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

     label7:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System server has no access to file context ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        r40 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r41 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from path ");

        $r10 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", context ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r40);

        throw $r16;

     label8:
        return r36;

     label9:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open file ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        r44 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(r44);

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r44);

        throw $r29;

        catch java.io.FileNotFoundException from label2 to label3 with label9;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
