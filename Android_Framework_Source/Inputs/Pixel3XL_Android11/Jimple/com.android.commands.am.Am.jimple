public class com.android.commands.am.Am extends com.android.internal.os.BaseCommand
{
    private android.app.IActivityManager mAm;
    private android.content.pm.IPackageManager mPm;

    public void <init>()
    {
        com.android.commands.am.Am r0;

        r0 := @this: com.android.commands.am.Am;

        specialinvoke r0.<com.android.internal.os.BaseCommand: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.am.Am $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.am.Am;

        specialinvoke $r1.<com.android.commands.am.Am: void <init>()>();

        virtualinvoke $r1.<com.android.commands.am.Am: void run(java.lang.String[])>(r0);

        return;
    }

    public void onRun() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.io.PrintStream $r1, $r4;
        android.util.AndroidException $r2, $r5;
        android.os.IBinder $r3;
        java.lang.String $r6;
        boolean $z0;
        java.lang.String[] $r7;
        android.app.IActivityManager r8;
        android.content.pm.IPackageManager r9;

        r0 := @this: com.android.commands.am.Am;

        r8 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r0.<com.android.commands.am.Am: android.app.IActivityManager mAm> = r8;

        if r8 == null goto label4;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r9 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.am.Am: android.content.pm.IPackageManager mPm> = r9;

        if r9 == null goto label3;

        $r6 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("instrument");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.commands.am.Am: void runInstrument()>();

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String[] getRawArgs()>();

        virtualinvoke r0.<com.android.commands.am.Am: void runAmCmd(java.lang.String[])>($r7);

     label2:
        return;

     label3:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Error type 2");

        $r5 = new android.util.AndroidException;

        specialinvoke $r5.<android.util.AndroidException: void <init>(java.lang.String)>("Can\'t connect to package manager; is the system running?");

        throw $r5;

     label4:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Error type 2");

        $r2 = new android.util.AndroidException;

        specialinvoke $r2.<android.util.AndroidException: void <init>(java.lang.String)>("Can\'t connect to activity manager; is the system running?");

        throw $r2;
    }

    public void onShowUsage(java.io.PrintStream)
    {
        com.android.commands.am.Am r0;
        java.lang.String[] $r1;
        android.util.AndroidException $r2;
        java.io.PrintStream $r3, r4;

        r0 := @this: com.android.commands.am.Am;

        r4 := @parameter0: java.io.PrintStream;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "help";

        virtualinvoke r0.<com.android.commands.am.Am: void runAmCmd(java.lang.String[])>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<android.util.AndroidException: void printStackTrace(java.io.PrintStream)>($r3);

     label4:
        return;

        catch android.util.AndroidException from label1 to label2 with label3;
    }

    int parseUserArg(java.lang.String)
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        int i0;

        r0 := @this: com.android.commands.am.Am;

        r1 := @parameter0: java.lang.String;

        $r2 = "all";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        i0 = -1;

        goto label4;

     label1:
        $r3 = "current";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r4 = "cur";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        goto label4;

     label3:
        i0 = -2;

     label4:
        return i0;
    }

    void runAmCmd(java.lang.String[]) throws android.util.AndroidException
    {
        com.android.commands.am.Am r0;
        android.os.IBinder r2;
        java.io.FileDescriptor r3, r4, r5;
        com.android.commands.am.Am$1 r6;
        com.android.commands.am.Am$MyShellCallback $r7;
        android.app.IActivityManager $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        java.io.PrintStream $r11;
        java.lang.String[] r12;
        android.util.AndroidException r15;

        r0 := @this: com.android.commands.am.Am;

        r12 := @parameter0: java.lang.String[];

        $r7 = new com.android.commands.am.Am$MyShellCallback;

        specialinvoke $r7.<com.android.commands.am.Am$MyShellCallback: void <init>()>();

     label1:
        $r8 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        r2 = interfaceinvoke $r8.<android.app.IActivityManager: android.os.IBinder asBinder()>();

        r3 = <java.io.FileDescriptor: java.io.FileDescriptor in>;

        r4 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        r5 = <java.io.FileDescriptor: java.io.FileDescriptor err>;

        r6 = new com.android.commands.am.Am$1;

        specialinvoke r6.<com.android.commands.am.Am$1: void <init>(com.android.commands.am.Am,android.os.Handler)>(r0, null);

        interfaceinvoke r2.<android.os.IBinder: void shellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r3, r4, r5, r12, $r7, r6);

     label2:
        $r7.<com.android.commands.am.Am$MyShellCallback: boolean mActive> = 0;

        return;

     label3:
        $r9 := @caughtexception;

        goto label6;

     label4:
        $r10 := @caughtexception;

     label5:
        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error type 2");

        r15 = new android.util.AndroidException;

        specialinvoke r15.<android.util.AndroidException: void <init>(java.lang.String)>("Can\'t call activity manager; is the system running?");

        throw r15;

     label6:
        $r7.<com.android.commands.am.Am$MyShellCallback: boolean mActive> = 0;

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public void runInstrument() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        com.android.commands.am.Instrument $r1;
        android.content.pm.IPackageManager $r2;
        android.app.IActivityManager $r3;
        int $i0, $i1;
        java.lang.String $r4, $r9, $r10, $r11, $r13, $r14, $r15, $r16, r18, r19, r20;
        java.io.PrintStream $r5, r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.StringBuilder $r6;
        android.os.Bundle $r12;

        r0 := @this: com.android.commands.am.Am;

        $r1 = new com.android.commands.am.Instrument;

        $r3 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r2 = r0.<com.android.commands.am.Am: android.content.pm.IPackageManager mPm>;

        specialinvoke $r1.<com.android.commands.am.Instrument: void <init>(android.app.IActivityManager,android.content.pm.IPackageManager)>($r3, $r2);

     label01:
        r18 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r18 == null goto label16;

        $z0 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z0 == 0 goto label02;

        $r16 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r1.<com.android.commands.am.Instrument: java.lang.String profileFile> = $r16;

        goto label01;

     label02:
        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-w");

        if $z1 == 0 goto label03;

        $r1.<com.android.commands.am.Instrument: boolean wait> = 1;

        goto label01;

     label03:
        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z2 == 0 goto label04;

        $r1.<com.android.commands.am.Instrument: boolean rawMode> = 1;

        goto label01;

     label04:
        $z3 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-m");

        if $z3 == 0 goto label05;

        $r1.<com.android.commands.am.Instrument: boolean protoStd> = 1;

        goto label01;

     label05:
        $z4 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z4 == 0 goto label06;

        $r1.<com.android.commands.am.Instrument: boolean protoFile> = 1;

        $r13 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String peekNextArg()>();

        if $r13 == null goto label01;

        $r14 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String peekNextArg()>();

        $z14 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z14 != 0 goto label01;

        $r15 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArg()>();

        $r1.<com.android.commands.am.Instrument: java.lang.String logPath> = $r15;

        goto label01;

     label06:
        $z5 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z5 == 0 goto label07;

        r19 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r20 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r12 = $r1.<com.android.commands.am.Instrument: android.os.Bundle args>;

        virtualinvoke $r12.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r19, r20);

        goto label01;

     label07:
        $z6 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no_window_animation");

        if $z6 != 0 goto label15;

        $z7 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no-window-animation");

        if $z7 == 0 goto label08;

        goto label15;

     label08:
        $z8 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no-hidden-api-checks");

        if $z8 == 0 goto label09;

        $r1.<com.android.commands.am.Instrument: boolean disableHiddenApiChecks> = 1;

        goto label01;

     label09:
        $z9 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no-test-api-checks");

        if $z9 == 0 goto label10;

        $r1.<com.android.commands.am.Instrument: boolean disableTestApiChecks> = 0;

        goto label01;

     label10:
        $z10 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no-test-api-access");

        if $z10 == 0 goto label11;

        $r1.<com.android.commands.am.Instrument: boolean disableTestApiChecks> = 0;

        goto label01;

     label11:
        $z11 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--no-isolated-storage");

        if $z11 == 0 goto label12;

        $r1.<com.android.commands.am.Instrument: boolean disableIsolatedStorage> = 1;

        goto label01;

     label12:
        $z12 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z12 == 0 goto label13;

        $r11 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $i1 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r11);

        $r1.<com.android.commands.am.Instrument: int userId> = $i1;

        goto label01;

     label13:
        $z13 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--abi");

        if $z13 == 0 goto label14;

        $r10 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r1.<com.android.commands.am.Instrument: java.lang.String abi> = $r10;

        goto label01;

     label14:
        r21 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;

     label15:
        $r1.<com.android.commands.am.Instrument: boolean noWindowAnimation> = 1;

        goto label01;

     label16:
        $i0 = $r1.<com.android.commands.am.Instrument: int userId>;

        if $i0 != -1 goto label17;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t start instrumentation with user \'all\'");

        return;

     label17:
        $r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r1.<com.android.commands.am.Instrument: java.lang.String componentNameArg> = $r4;

        virtualinvoke $r1.<com.android.commands.am.Instrument: void run()>();

        return;
    }
}
