class com.android.commands.am.Instrument$InstrumentationWatcher extends android.app.IInstrumentationWatcher$Stub
{
    private boolean mFinished;
    private final com.android.commands.am.Instrument$StatusReporter mReporter;
    final com.android.commands.am.Instrument this$0;

    public void <init>(com.android.commands.am.Instrument, com.android.commands.am.Instrument$StatusReporter)
    {
        com.android.commands.am.Instrument$InstrumentationWatcher r0;
        com.android.commands.am.Instrument r1;
        com.android.commands.am.Instrument$StatusReporter r2;

        r0 := @this: com.android.commands.am.Instrument$InstrumentationWatcher;

        r1 := @parameter0: com.android.commands.am.Instrument;

        r2 := @parameter1: com.android.commands.am.Instrument$StatusReporter;

        r0.<com.android.commands.am.Instrument$InstrumentationWatcher: com.android.commands.am.Instrument this$0> = r1;

        specialinvoke r0.<android.app.IInstrumentationWatcher$Stub: void <init>()>();

        r0.<com.android.commands.am.Instrument$InstrumentationWatcher: boolean mFinished> = 0;

        r0.<com.android.commands.am.Instrument$InstrumentationWatcher: com.android.commands.am.Instrument$StatusReporter mReporter> = r2;

        return;
    }

    public void instrumentationFinished(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.commands.am.Instrument$InstrumentationWatcher r0;
        int i0;
        android.os.Bundle r1;
        com.android.commands.am.Instrument$StatusReporter $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.commands.am.Instrument$InstrumentationWatcher;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.commands.am.Instrument$InstrumentationWatcher: com.android.commands.am.Instrument$StatusReporter mReporter>;

        interfaceinvoke $r2.<com.android.commands.am.Instrument$StatusReporter: void onInstrumentationFinishedLocked(android.content.ComponentName,int,android.os.Bundle)>(r4, i0, r1);

        r0.<com.android.commands.am.Instrument$InstrumentationWatcher: boolean mFinished> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void instrumentationStatus(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.commands.am.Instrument$InstrumentationWatcher r0;
        int i0;
        android.os.Bundle r1;
        com.android.commands.am.Instrument$StatusReporter $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.commands.am.Instrument$InstrumentationWatcher;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.commands.am.Instrument$InstrumentationWatcher: com.android.commands.am.Instrument$StatusReporter mReporter>;

        interfaceinvoke $r2.<com.android.commands.am.Instrument$StatusReporter: void onInstrumentationStatusLocked(android.content.ComponentName,int,android.os.Bundle)>(r4, i0, r1);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean waitForFinish()
    {
        com.android.commands.am.Instrument$InstrumentationWatcher r0;
        java.lang.IllegalStateException r1;
        com.android.commands.am.Instrument $r2;
        android.app.IActivityManager $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5, $r6;
        boolean z0, z1;

        r0 := @this: com.android.commands.am.Instrument$InstrumentationWatcher;

        entermonitor r0;

     label01:
        z0 = r0.<com.android.commands.am.Instrument$InstrumentationWatcher: boolean mFinished>;

     label02:
        if z0 != 0 goto label11;

     label03:
        $r2 = r0.<com.android.commands.am.Instrument$InstrumentationWatcher: com.android.commands.am.Instrument this$0>;

        $r3 = staticinvoke <com.android.commands.am.Instrument: android.app.IActivityManager access$200(com.android.commands.am.Instrument)>($r2);

        $r4 = interfaceinvoke $r3.<android.app.IActivityManager: android.os.IBinder asBinder()>();

        z1 = interfaceinvoke $r4.<android.os.IBinder: boolean pingBinder()>();

     label04:
        if z1 != 0 goto label07;

     label05:
        exitmonitor r0;

     label06:
        return 0;

     label07:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(1000L);

     label08:
        goto label01;

     label09:
        $r5 := @caughtexception;

     label10:
        r1 = new java.lang.IllegalStateException;

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r5);

        throw r1;

     label11:
        exitmonitor r0;

     label12:
        return 1;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.InterruptedException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }
}
