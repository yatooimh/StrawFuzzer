public class com.android.commands.am.Instrument extends java.lang.Object
{
    public static final java.lang.String DEFAULT_LOG_DIR;
    private static final int STATUS_TEST_FAILED_ASSERTION;
    private static final int STATUS_TEST_FAILED_OTHER;
    private static final int STATUS_TEST_PASSED;
    private static final int STATUS_TEST_STARTED;
    private static final java.lang.String TAG;
    public java.lang.String abi;
    public android.os.Bundle args;
    public java.lang.String componentNameArg;
    public boolean disableHiddenApiChecks;
    public boolean disableIsolatedStorage;
    public boolean disableTestApiChecks;
    java.lang.String logPath;
    private final android.app.IActivityManager mAm;
    private final android.content.pm.IPackageManager mPm;
    private final android.view.IWindowManager mWm;
    public boolean noWindowAnimation;
    public java.lang.String profileFile;
    boolean protoFile;
    boolean protoStd;
    public boolean rawMode;
    public int userId;
    public boolean wait;

    public void <init>(android.app.IActivityManager, android.content.pm.IPackageManager)
    {
        com.android.commands.am.Instrument r0;
        android.app.IActivityManager r1;
        android.content.pm.IPackageManager r2;
        android.os.Bundle $r3;
        android.os.IBinder $r4;
        android.view.IWindowManager $r5;

        r0 := @this: com.android.commands.am.Instrument;

        r1 := @parameter0: android.app.IActivityManager;

        r2 := @parameter1: android.content.pm.IPackageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.am.Instrument: java.lang.String profileFile> = null;

        r0.<com.android.commands.am.Instrument: boolean wait> = 0;

        r0.<com.android.commands.am.Instrument: boolean rawMode> = 0;

        r0.<com.android.commands.am.Instrument: boolean protoStd> = 0;

        r0.<com.android.commands.am.Instrument: boolean protoFile> = 0;

        r0.<com.android.commands.am.Instrument: java.lang.String logPath> = null;

        r0.<com.android.commands.am.Instrument: boolean noWindowAnimation> = 0;

        r0.<com.android.commands.am.Instrument: boolean disableHiddenApiChecks> = 0;

        r0.<com.android.commands.am.Instrument: boolean disableTestApiChecks> = 1;

        r0.<com.android.commands.am.Instrument: boolean disableIsolatedStorage> = 0;

        r0.<com.android.commands.am.Instrument: java.lang.String abi> = null;

        r0.<com.android.commands.am.Instrument: int userId> = -2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<com.android.commands.am.Instrument: android.os.Bundle args> = $r3;

        r0.<com.android.commands.am.Instrument: android.app.IActivityManager mAm> = r1;

        r0.<com.android.commands.am.Instrument: android.content.pm.IPackageManager mPm> = r2;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r4);

        r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm> = $r5;

        return;
    }

    static java.util.Collection access$000(java.util.Collection)
    {
        java.util.Collection r0, $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <com.android.commands.am.Instrument: java.util.Collection sorted(java.util.Collection)>(r0);

        return $r1;
    }

    static java.lang.String access$100(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.android.commands.am.Instrument: java.lang.String readLogcat(long)>(l0);

        return $r0;
    }

    static android.app.IActivityManager access$200(com.android.commands.am.Instrument)
    {
        com.android.commands.am.Instrument r0;
        android.app.IActivityManager $r1;

        r0 := @parameter0: com.android.commands.am.Instrument;

        $r1 = r0.<com.android.commands.am.Instrument: android.app.IActivityManager mAm>;

        return $r1;
    }

    private android.content.ComponentName parseComponentName(java.lang.String) throws java.lang.Exception
    {
        com.android.commands.am.Instrument r0;
        java.util.List r1;
        android.content.pm.InstrumentationInfo r2;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r4;
        android.content.pm.ParceledListSlice $r5;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.StringBuilder $r7, $r12, $r13, $r31;
        java.lang.IllegalArgumentException $r10, $r17, $r34;
        java.lang.String $r11, $r15, $r18, $r21, $r28, $r29, $r30, $r35, r36;
        java.lang.Object $r19, $r24, $r26;
        android.content.ComponentName $r20, $r25, $r27, r37;

        r0 := @this: com.android.commands.am.Instrument;

        r36 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r36.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z0 == 0 goto label02;

        r37 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r36);

        if r37 == null goto label01;

        return r37;

     label01:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad component name: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r34 = new java.lang.IllegalArgumentException;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label02:
        $r4 = r0.<com.android.commands.am.Instrument: android.content.pm.IPackageManager mPm>;

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>(null, 0);

        r1 = virtualinvoke $r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        if r1 != null goto label03;

        i4 = 0;

        goto label04;

     label03:
        i4 = interfaceinvoke r1.<java.util.List: int size()>();

     label04:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label05:
        if i5 >= i4 goto label07;

        $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        r2 = (android.content.pm.InstrumentationInfo) $r26;

        $r27 = new android.content.ComponentName;

        $r29 = r2.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r28 = r2.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r27.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r29, $r28);

        $r30 = r2.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z1 == 0 goto label06;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label11;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 != 1 goto label08;

        $r24 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r25 = (android.content.ComponentName) $r24;

        return $r25;

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        i6 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i7 = 0;

     label09:
        if i7 >= i6 goto label10;

        $r19 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r20 = (android.content.ComponentName) $r19;

        $r21 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i7 = i7 + 1;

        goto label09;

     label10:
        $i2 = virtualinvoke $r12.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r12.<java.lang.StringBuilder: void setLength(int)>($i3);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found multiple instrumentations: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label11:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No instrumentation found for: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private static java.lang.String readLogcat(long)
    {
        long l0;
        java.lang.Process r0;
        char[] r1;
        int i1, $i3;
        java.lang.String[] $r2, $r3;
        java.lang.ProcessBuilder $r4, r27;
        java.io.OutputStream $r5;
        java.io.InputStream $r6;
        java.lang.Throwable $r8, $r9;
        java.lang.String $r12, $r14, r17, r22;
        java.text.SimpleDateFormat r25;
        java.util.Date r26;
        java.lang.StringBuilder r28, r30;
        java.io.InputStreamReader r29;
        java.io.IOException r31;

        l0 := @parameter0: long;

     label01:
        r25 = new java.text.SimpleDateFormat;

        specialinvoke r25.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

        r26 = new java.util.Date;

        specialinvoke r26.<java.util.Date: void <init>(long)>(l0);

        r17 = virtualinvoke r25.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r26);

        r27 = new java.lang.ProcessBuilder;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke r27.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r2);

        $r3 = newarray (java.lang.String)[5];

        $r3[0] = "logcat";

        $r3[1] = "-d";

        $r3[2] = "-v threadtime,uid";

        $r3[3] = "-T";

        $r3[4] = r17;

        $r4 = virtualinvoke r27.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r3);

        r0 = virtualinvoke $r4.<java.lang.ProcessBuilder: java.lang.Process start()>();

        $r5 = virtualinvoke r0.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        r29 = new java.io.InputStreamReader;

        $r6 = virtualinvoke r0.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke r29.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        r1 = newarray (char)[4096];

     label02:
        $i3 = lengthof r1;

        i1 = virtualinvoke r29.<java.io.InputStreamReader: int read(char[],int,int)>(r1, 0, $i3);

     label03:
        if i1 < 0 goto label06;

        if i1 <= 0 goto label02;

     label04:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, 0, i1);

     label05:
        goto label02;

     label06:
        virtualinvoke r0.<java.lang.Process: int waitFor()>();

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

     label09:
        r22 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return r22;

     label11:
        $r9 := @caughtexception;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading logcat command:\n");

        r31 = (java.io.IOException) $r9;

        $r12 = virtualinvoke r31.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    private static java.util.Collection sorted(java.util.Collection)
    {
        java.util.ArrayList $r0;
        java.util.Collection r1;

        r1 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        return $r0;
    }

    public void run() throws java.lang.Exception
    {
        com.android.commands.am.Instrument r0;
        int i0, $i1, i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        java.lang.String $r1, $r2, $r3, $r5, $r7, $r8, $r11, $r12, $r13, $r14, $r21;
        android.os.Bundle $r4;
        android.app.IActivityManager $r6;
        android.view.IWindowManager $r9, $r10, $r15, $r16, $r17, $r18, $r23;
        java.lang.Exception $r20;
        java.lang.Throwable $r22;
        com.android.commands.am.Instrument$StatusReporter r24, r27;
        float[] r25, r26, r28;
        com.android.commands.am.Instrument$InstrumentationWatcher r29, r41;
        android.app.UiAutomationConnection r30, r42;
        android.content.ComponentName r31;
        java.lang.String[] r32;
        byte b3, b4;
        com.android.commands.am.Instrument$TextStatusReporter r39;
        com.android.commands.am.Instrument$ProtoStatusReporter r40;
        java.lang.StringBuilder r43, r45;
        android.util.AndroidException r44, r46;

        r0 := @this: com.android.commands.am.Instrument;

        r24 = null;

        r25 = null;

        r26 = null;

        r27 = null;

        r28 = null;

     label01:
        $z0 = r0.<com.android.commands.am.Instrument: boolean protoFile>;

        if $z0 != 0 goto label10;

     label02:
        r26 = null;

        r27 = null;

        r28 = null;

     label03:
        $z8 = r0.<com.android.commands.am.Instrument: boolean protoStd>;

        if $z8 == 0 goto label05;

     label04:
        goto label10;

     label05:
        r26 = null;

        r27 = null;

        r28 = null;

     label06:
        $z9 = r0.<com.android.commands.am.Instrument: boolean wait>;

        if $z9 == 0 goto label14;

     label07:
        r26 = null;

        r27 = null;

        r28 = null;

     label08:
        r39 = new com.android.commands.am.Instrument$TextStatusReporter;

        $z10 = r0.<com.android.commands.am.Instrument: boolean rawMode>;

        specialinvoke r39.<com.android.commands.am.Instrument$TextStatusReporter: void <init>(com.android.commands.am.Instrument,boolean)>(r0, $z10);

        r24 = r39;

     label09:
        goto label14;

     label10:
        r26 = null;

        r27 = null;

        r28 = null;

     label11:
        r40 = new com.android.commands.am.Instrument$ProtoStatusReporter;

        r24 = r40;

     label12:
        r26 = null;

        r27 = null;

        r28 = null;

     label13:
        specialinvoke r40.<com.android.commands.am.Instrument$ProtoStatusReporter: void <init>(com.android.commands.am.Instrument)>(r0);

     label14:
        r29 = null;

        r30 = null;

        if r24 == null goto label22;

        r26 = null;

        r27 = r24;

        r28 = null;

     label15:
        r41 = new com.android.commands.am.Instrument$InstrumentationWatcher;

        r29 = r41;

     label16:
        r26 = null;

        r27 = r24;

        r28 = null;

     label17:
        specialinvoke r41.<com.android.commands.am.Instrument$InstrumentationWatcher: void <init>(com.android.commands.am.Instrument,com.android.commands.am.Instrument$StatusReporter)>(r0, r24);

     label18:
        r26 = null;

        r27 = r24;

        r28 = null;

     label19:
        r42 = new android.app.UiAutomationConnection;

        r30 = r42;

     label20:
        r26 = null;

        r27 = r24;

        r28 = null;

     label21:
        specialinvoke r42.<android.app.UiAutomationConnection: void <init>()>();

     label22:
        r26 = null;

        r27 = r24;

        r28 = null;

     label23:
        $z1 = r0.<com.android.commands.am.Instrument: boolean noWindowAnimation>;

        if $z1 == 0 goto label32;

     label24:
        r26 = null;

        r27 = r24;

        r28 = null;

     label25:
        $r15 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        r25 = interfaceinvoke $r15.<android.view.IWindowManager: float[] getAnimationScales()>();

     label26:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label27:
        $r16 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r16.<android.view.IWindowManager: void setAnimationScale(int,float)>(0, 0.0F);

     label28:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label29:
        $r17 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r17.<android.view.IWindowManager: void setAnimationScale(int,float)>(1, 0.0F);

     label30:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label31:
        $r18 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r18.<android.view.IWindowManager: void setAnimationScale(int,float)>(2, 0.0F);

     label32:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label33:
        $r1 = r0.<com.android.commands.am.Instrument: java.lang.String componentNameArg>;

        r31 = specialinvoke r0.<com.android.commands.am.Instrument: android.content.ComponentName parseComponentName(java.lang.String)>($r1);

     label34:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label35:
        $r2 = r0.<com.android.commands.am.Instrument: java.lang.String abi>;

        if $r2 == null goto label60;

     label36:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label37:
        r32 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

     label38:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label39:
        i0 = lengthof r32;

     label40:
        i2 = 0;

     label41:
        z11 = 0;

        if i2 >= i0 goto label45;

        r26 = r25;

        r27 = r24;

        r28 = r25;

     label42:
        $r14 = r32[i2];

        $r13 = r0.<com.android.commands.am.Instrument: java.lang.String abi>;

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z7 == 0 goto label44;

     label43:
        z11 = 1;

        goto label45;

     label44:
        i2 = i2 + 1;

        goto label41;

     label45:
        if z11 == 0 goto label46;

        goto label60;

     label46:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label47:
        r44 = new android.util.AndroidException;

     label48:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label49:
        r43 = new java.lang.StringBuilder;

     label50:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label51:
        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

     label52:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label53:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_FAILED: Unsupported instruction set ");

     label54:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label55:
        $r11 = r0.<com.android.commands.am.Instrument: java.lang.String abi>;

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label56:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label57:
        $r12 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<android.util.AndroidException: void <init>(java.lang.String)>($r12);

     label58:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label59:
        throw r44;

     label60:
        b3 = 0;

        r26 = r25;

        r27 = r24;

        r28 = r25;

     label61:
        $z2 = r0.<com.android.commands.am.Instrument: boolean disableHiddenApiChecks>;

        if $z2 == 0 goto label63;

     label62:
        b3 = 1;

     label63:
        b4 = b3;

        r26 = r25;

        r27 = r24;

        r28 = r25;

     label64:
        $z3 = r0.<com.android.commands.am.Instrument: boolean disableTestApiChecks>;

        if $z3 == 0 goto label66;

     label65:
        b4 = b3 | 4;

     label66:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label67:
        $z4 = r0.<com.android.commands.am.Instrument: boolean disableIsolatedStorage>;

        if $z4 == 0 goto label69;

     label68:
        b4 = b4 | 2;

        goto label69;

     label69:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label70:
        $r6 = r0.<com.android.commands.am.Instrument: android.app.IActivityManager mAm>;

        $r5 = r0.<com.android.commands.am.Instrument: java.lang.String profileFile>;

        $r4 = r0.<com.android.commands.am.Instrument: android.os.Bundle args>;

        $i1 = r0.<com.android.commands.am.Instrument: int userId>;

        $r3 = r0.<com.android.commands.am.Instrument: java.lang.String abi>;

        $z5 = interfaceinvoke $r6.<android.app.IActivityManager: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>(r31, $r5, b4, $r4, r29, r30, $i1, $r3);

        if $z5 == 0 goto label79;

     label71:
        if r29 == null goto label77;

        r26 = r25;

        r27 = r24;

        r28 = r25;

     label72:
        $z6 = virtualinvoke r29.<com.android.commands.am.Instrument$InstrumentationWatcher: boolean waitForFinish()>();

        if $z6 != 0 goto label77;

     label73:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label74:
        interfaceinvoke r24.<com.android.commands.am.Instrument$StatusReporter: void onError(java.lang.String,boolean)>("INSTRUMENTATION_ABORTED: System has crashed.", 0);

     label75:
        if r25 == null goto label76;

        $r10 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r10.<android.view.IWindowManager: void setAnimationScales(float[])>(r25);

     label76:
        return;

     label77:
        if r25 == null goto label78;

        $r9 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r9.<android.view.IWindowManager: void setAnimationScales(float[])>(r25);

     label78:
        return;

     label79:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label80:
        r46 = new android.util.AndroidException;

     label81:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label82:
        r45 = new java.lang.StringBuilder;

     label83:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label84:
        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

     label85:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label86:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_FAILED: ");

     label87:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label88:
        $r7 = virtualinvoke r31.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label89:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label90:
        $r8 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r46.<android.util.AndroidException: void <init>(java.lang.String)>($r8);

     label91:
        r26 = r25;

        r27 = r24;

        r28 = r25;

     label92:
        throw r46;

     label93:
        $r22 := @caughtexception;

        goto label98;

     label94:
        $r20 := @caughtexception;

        if r27 == null goto label96;

        r26 = r28;

     label95:
        $r21 = virtualinvoke $r20.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke r27.<com.android.commands.am.Instrument$StatusReporter: void onError(java.lang.String,boolean)>($r21, 1);

     label96:
        r26 = r28;

     label97:
        throw $r20;

     label98:
        if r26 == null goto label99;

        $r23 = r0.<com.android.commands.am.Instrument: android.view.IWindowManager mWm>;

        interfaceinvoke $r23.<android.view.IWindowManager: void setAnimationScales(float[])>(r26);

     label99:
        throw $r22;

        catch java.lang.Exception from label01 to label02 with label94;
        catch java.lang.Throwable from label01 to label02 with label93;
        catch java.lang.Exception from label03 to label04 with label94;
        catch java.lang.Throwable from label03 to label04 with label93;
        catch java.lang.Exception from label06 to label07 with label94;
        catch java.lang.Throwable from label06 to label07 with label93;
        catch java.lang.Exception from label08 to label09 with label94;
        catch java.lang.Throwable from label08 to label09 with label93;
        catch java.lang.Exception from label11 to label12 with label94;
        catch java.lang.Throwable from label11 to label12 with label93;
        catch java.lang.Exception from label13 to label14 with label94;
        catch java.lang.Throwable from label13 to label14 with label93;
        catch java.lang.Exception from label15 to label16 with label94;
        catch java.lang.Throwable from label15 to label16 with label93;
        catch java.lang.Exception from label17 to label18 with label94;
        catch java.lang.Throwable from label17 to label18 with label93;
        catch java.lang.Exception from label19 to label20 with label94;
        catch java.lang.Throwable from label19 to label20 with label93;
        catch java.lang.Exception from label21 to label22 with label94;
        catch java.lang.Throwable from label21 to label22 with label93;
        catch java.lang.Exception from label23 to label24 with label94;
        catch java.lang.Throwable from label23 to label24 with label93;
        catch java.lang.Exception from label25 to label26 with label94;
        catch java.lang.Throwable from label25 to label26 with label93;
        catch java.lang.Exception from label27 to label28 with label94;
        catch java.lang.Throwable from label27 to label28 with label93;
        catch java.lang.Exception from label29 to label30 with label94;
        catch java.lang.Throwable from label29 to label30 with label93;
        catch java.lang.Exception from label31 to label32 with label94;
        catch java.lang.Throwable from label31 to label32 with label93;
        catch java.lang.Exception from label33 to label34 with label94;
        catch java.lang.Throwable from label33 to label34 with label93;
        catch java.lang.Exception from label35 to label36 with label94;
        catch java.lang.Throwable from label35 to label36 with label93;
        catch java.lang.Exception from label37 to label38 with label94;
        catch java.lang.Throwable from label37 to label38 with label93;
        catch java.lang.Exception from label39 to label40 with label94;
        catch java.lang.Throwable from label39 to label40 with label93;
        catch java.lang.Exception from label42 to label43 with label94;
        catch java.lang.Throwable from label42 to label43 with label93;
        catch java.lang.Exception from label47 to label48 with label94;
        catch java.lang.Throwable from label47 to label48 with label93;
        catch java.lang.Exception from label49 to label50 with label94;
        catch java.lang.Throwable from label49 to label50 with label93;
        catch java.lang.Exception from label51 to label52 with label94;
        catch java.lang.Throwable from label51 to label52 with label93;
        catch java.lang.Exception from label53 to label54 with label94;
        catch java.lang.Throwable from label53 to label54 with label93;
        catch java.lang.Exception from label55 to label56 with label94;
        catch java.lang.Throwable from label55 to label56 with label93;
        catch java.lang.Exception from label57 to label58 with label94;
        catch java.lang.Throwable from label57 to label58 with label93;
        catch java.lang.Exception from label59 to label60 with label94;
        catch java.lang.Throwable from label59 to label60 with label93;
        catch java.lang.Exception from label61 to label62 with label94;
        catch java.lang.Throwable from label61 to label62 with label93;
        catch java.lang.Exception from label64 to label65 with label94;
        catch java.lang.Throwable from label64 to label65 with label93;
        catch java.lang.Exception from label67 to label68 with label94;
        catch java.lang.Throwable from label67 to label68 with label93;
        catch java.lang.Exception from label70 to label71 with label94;
        catch java.lang.Throwable from label70 to label71 with label93;
        catch java.lang.Exception from label72 to label73 with label94;
        catch java.lang.Throwable from label72 to label73 with label93;
        catch java.lang.Exception from label74 to label75 with label94;
        catch java.lang.Throwable from label74 to label75 with label93;
        catch java.lang.Exception from label80 to label81 with label94;
        catch java.lang.Throwable from label80 to label81 with label93;
        catch java.lang.Exception from label82 to label83 with label94;
        catch java.lang.Throwable from label82 to label83 with label93;
        catch java.lang.Exception from label84 to label85 with label94;
        catch java.lang.Throwable from label84 to label85 with label93;
        catch java.lang.Exception from label86 to label87 with label94;
        catch java.lang.Throwable from label86 to label87 with label93;
        catch java.lang.Exception from label88 to label89 with label94;
        catch java.lang.Throwable from label88 to label89 with label93;
        catch java.lang.Exception from label90 to label91 with label94;
        catch java.lang.Throwable from label90 to label91 with label93;
        catch java.lang.Exception from label92 to label93 with label94;
        catch java.lang.Throwable from label92 to label93 with label93;
        catch java.lang.Throwable from label95 to label96 with label93;
        catch java.lang.Throwable from label97 to label98 with label93;
    }

    public static void <clinit>()
    {
        <com.android.commands.am.Instrument: java.lang.String TAG> = "am";

        <com.android.commands.am.Instrument: int STATUS_TEST_STARTED> = 1;

        <com.android.commands.am.Instrument: int STATUS_TEST_PASSED> = 0;

        <com.android.commands.am.Instrument: int STATUS_TEST_FAILED_OTHER> = -2;

        <com.android.commands.am.Instrument: int STATUS_TEST_FAILED_ASSERTION> = -1;

        <com.android.commands.am.Instrument: java.lang.String DEFAULT_LOG_DIR> = "instrument-logs";

        return;
    }
}
