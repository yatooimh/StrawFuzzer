public class com.android.commands.bmgr.Bmgr extends java.lang.Object
{
    private static final java.lang.String BMGR_ERR_NO_RESTORESESSION_FOR_USER;
    private static final java.lang.String BMGR_NOT_ACTIVATED_FOR_USER;
    private static final java.lang.String BMGR_NOT_RUNNING_ERR;
    private static final java.lang.String PM_NOT_RUNNING_ERR;
    public static final java.lang.String TAG;
    private static final java.lang.String TRANSPORT_NOT_RUNNING_ERR;
    private java.lang.String[] mArgs;
    private final android.app.backup.IBackupManager mBmgr;
    private int mNextArg;
    private android.app.backup.IRestoreSession mRestore;

    void <init>()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.IBinder $r1;
        android.app.backup.IBackupManager $r2;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r2 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r1);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr> = $r2;

        return;
    }

    void <init>(android.app.backup.IBackupManager)
    {
        com.android.commands.bmgr.Bmgr r0;
        android.app.backup.IBackupManager r1;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: android.app.backup.IBackupManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr> = r1;

        return;
    }

    static java.lang.String access$100(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.commands.bmgr.Bmgr: java.lang.String convertBackupStatusToString(int)>(i0);

        return $r0;
    }

    static java.lang.String access$400(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.commands.bmgr.Bmgr: java.lang.String eventCategoryToString(int)>(i0);

        return $r0;
    }

    static java.lang.String access$500(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.commands.bmgr.Bmgr: java.lang.String eventIdToString(int)>(i0);

        return $r0;
    }

    private java.lang.String activatedToString(boolean)
    {
        com.android.commands.bmgr.Bmgr r0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = "activated";

        goto label2;

     label1:
        r1 = "deactivated";

     label2:
        return r1;
    }

    private void backupNowAllPackages(int, boolean, int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, i1;
        boolean z0;
        android.os.IBinder $r1;
        android.content.pm.ParceledListSlice $r2;
        java.util.stream.Stream $r3, $r5;
        com.android.commands.bmgr.'-$$Lambda$Bmgr$q6dkg0QPsICRBdCVDH_xoI7L7DE' $r4;
        com.android.commands.bmgr.'-$$Lambda$Bmgr$veRYTIgMXojhOx5oIjGwkqACXg0' $r6;
        java.lang.Object[] $r7;
        android.app.backup.IBackupManager $r8;
        java.util.List $r9, r17, r18;
        java.io.PrintStream $r10, $r12, $r14;
        android.os.RemoteException $r11, $r15;
        java.lang.String $r13;
        android.content.pm.IPackageManager r16;
        java.lang.String[] r20, r21, r22;
        java.util.function.Function r24;
        java.util.function.IntFunction r25;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r16 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r1);

        if r16 != null goto label01;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label01:
        r17 = null;

     label02:
        $r2 = interfaceinvoke r16.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(0, i0);

        r18 = virtualinvoke $r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label03:
        r17 = r18;

        goto label05;

     label04:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke $r11.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label05:
        if r17 == null goto label10;

        $r3 = interfaceinvoke r17.<java.util.List: java.util.stream.Stream stream()>();

        $r4 = <com.android.commands.bmgr._$$Lambda$Bmgr$q6dkg0QPsICRBdCVDH_xoI7L7DE: com.android.commands.bmgr.'-$$Lambda$Bmgr$q6dkg0QPsICRBdCVDH_xoI7L7DE' INSTANCE>;

        r24 = (java.util.function.Function) $r4;

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r24);

        $r6 = <com.android.commands.bmgr._$$Lambda$Bmgr$veRYTIgMXojhOx5oIjGwkqACXg0: com.android.commands.bmgr.'-$$Lambda$Bmgr$veRYTIgMXojhOx5oIjGwkqACXg0' INSTANCE>;

        r25 = (java.util.function.IntFunction) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(r25);

        r20 = (java.lang.String[]) $r7;

        r21 = newarray (java.lang.String)[0];

     label06:
        $r8 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r22 = interfaceinvoke $r8.<android.app.backup.IBackupManager: java.lang.String[] filterAppsEligibleForBackupForUser(int,java.lang.String[])>(i0, r20);

     label07:
        r21 = r22;

        goto label09;

     label08:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r15);

     label09:
        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r21);

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void backupNowPackages(int,java.util.List,boolean,int)>(i0, $r9, z0, i1);

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private void backupNowPackages(int, java.util.List, boolean, int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, i1, $i2, $i3;
        com.android.commands.bmgr.Bmgr$BackupObserver r1;
        android.app.backup.IBackupManager $r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;
        java.io.PrintStream $r6;
        android.os.RemoteException $r7;
        java.util.List r8;
        boolean z0, z1;
        byte b4;
        com.android.commands.bmgr.Bmgr$BackupMonitor r9;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r8 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        b4 = 0;

        if z0 == 0 goto label01;

        b4 = 0 | 1;

     label01:
        r1 = new com.android.commands.bmgr.Bmgr$BackupObserver;

        specialinvoke r1.<com.android.commands.bmgr.Bmgr$BackupObserver: void <init>(com.android.commands.bmgr.Bmgr$1)>(null);

     label02:
        if i1 == 0 goto label08;

     label03:
        r9 = new com.android.commands.bmgr.Bmgr$BackupMonitor;

     label04:
        if i1 != 2 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        specialinvoke r9.<com.android.commands.bmgr.Bmgr$BackupMonitor: void <init>(boolean,com.android.commands.bmgr.Bmgr$1)>(z1, null);

     label07:
        goto label09;

     label08:
        r9 = null;

     label09:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i2];

        $r4 = interfaceinvoke r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $i3 = interfaceinvoke $r2.<android.app.backup.IBackupManager: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>(i0, $r5, r1, r9, b4);

        if $i3 != 0 goto label11;

        virtualinvoke r1.<com.android.commands.bmgr.Bmgr$BackupObserver: void waitForCompletion()>();

     label10:
        goto label12;

     label11:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Unable to run backup");

     label12:
        goto label14;

     label13:
        $r7 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r7);

     label14:
        return;

        catch android.os.RemoteException from label01 to label02 with label13;
        catch android.os.RemoteException from label03 to label04 with label13;
        catch android.os.RemoteException from label06 to label07 with label13;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch android.os.RemoteException from label11 to label12 with label13;
    }

    private static java.lang.String convertBackupStatusToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -1005 goto label9;

        if i0 == -1000 goto label8;

        if i0 == 0 goto label7;

        if i0 == -1003 goto label6;

        if i0 == -1002 goto label5;

        tableswitch(i0)
        {
            case -2003: goto label4;
            case -2002: goto label3;
            case -2001: goto label2;
            default: goto label1;
        };

     label1:
        return "Unknown error";

     label2:
        return "Backup is not allowed";

     label3:
        return "Package not found";

     label4:
        return "Backup cancelled";

     label5:
        return "Transport rejected package because it wasn\'t able to process it at the time";

     label6:
        return "Agent error";

     label7:
        return "Success";

     label8:
        return "Transport error";

     label9:
        return "Size quota exceeded";
    }

    private void doActivateService(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        boolean z0;
        java.io.PrintStream r1;
        java.lang.StringBuilder r2;
        android.app.backup.IBackupManager $r3;
        java.lang.String $r8, r10, r11;
        android.os.RemoteException $r9;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r10 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r10 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

        $r3 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void setBackupServiceActive(int,boolean)>(i0, z0);

        r1 = <java.lang.System: java.io.PrintStream out>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup service now ");

     label2:
        if z0 == 0 goto label3;

        r11 = "activated";

        goto label4;

     label3:
        r11 = "deactivated";

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r9);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void doActivated(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.lang.StringBuilder r1;
        android.app.backup.IBackupManager $r3;
        boolean $z0;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;
        java.io.PrintStream r8;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

     label1:
        r8 = <java.lang.System: java.io.PrintStream out>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Manager currently ");

        $r3 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $z0 = interfaceinvoke $r3.<android.app.backup.IBackupManager: boolean isBackupServiceActive(int)>(i0);

        $r4 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String activatedToString(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doAutoRestore(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        boolean z0;
        java.io.PrintStream r1;
        java.lang.StringBuilder r2;
        android.app.backup.IBackupManager $r3;
        java.lang.String $r8, r10, r11;
        android.os.RemoteException $r9;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r10 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r10 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

        $r3 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void setAutoRestore(boolean)>(z0);

        r1 = <java.lang.System: java.io.PrintStream out>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Auto restore is now ");

     label2:
        if z0 == 0 goto label3;

        r11 = "enabled";

        goto label4;

     label3:
        r11 = "disabled";

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r9);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void doBackup(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        android.app.backup.IBackupManager $r1;
        android.os.RemoteException $r2;
        java.lang.String r3;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r3 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r3 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        $r1 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r1.<android.app.backup.IBackupManager: void dataChangedForUser(int,java.lang.String)>(i0, r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doBackupNow(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r2;
        java.io.PrintStream $r3, $r11, r20, r22;
        java.lang.StringBuilder $r4, $r12;
        java.lang.String $r10, $r16, r18, r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7, z8;
        byte b4;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        z7 = 0;

        z8 = 0;

        b4 = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label01:
        r18 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r18 == null goto label07;

        $z0 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--all");

        if $z0 == 0 goto label02;

        z7 = 1;

        goto label01;

     label02:
        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--non-incremental");

        if $z1 == 0 goto label03;

        z8 = 1;

        goto label01;

     label03:
        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--incremental");

        if $z2 == 0 goto label04;

        z8 = 0;

        goto label01;

     label04:
        $z3 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--monitor");

        if $z3 == 0 goto label05;

        b4 = 1;

        goto label01;

     label05:
        $z4 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("--monitor-verbose");

        if $z4 == 0 goto label06;

        b4 = 2;

        goto label01;

     label06:
        $z5 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r18);

        if $z5 != 0 goto label01;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

        goto label01;

     label07:
        r19 = "non-";

        if z7 == 0 goto label11;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label10;

        r20 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ");

        if z8 == 0 goto label08;

        goto label09;

     label08:
        r19 = "";

     label09:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incremental backup for all packages.");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r20.<java.io.PrintStream: void println(java.lang.String)>($r16);

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void backupNowAllPackages(int,boolean,int)>(i0, z8, b4);

        goto label15;

     label10:
        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Provide only \'--all\' flag or list of packages.");

        goto label15;

     label11:
        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label14;

        r22 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ");

        if z8 == 0 goto label12;

        goto label13;

     label12:
        r19 = "";

     label13:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incremental backup for ");

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested packages.");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.io.PrintStream: void println(java.lang.String)>($r10);

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void backupNowPackages(int,java.util.List,boolean,int)>(i0, $r2, z8, b4);

        goto label15;

     label14:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Provide \'--all\' flag or list of packages.");

     label15:
        return;
    }

    private void doCancel(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.io.PrintStream $r4;
        android.app.backup.IBackupManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        $r2 = "backups";

        $r3 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

     label1:
        $r5 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void cancelBackupsForUser(int)>(i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r6);

     label4:
        return;

     label5:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Unknown command.");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doEnable(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        boolean z0;
        java.io.PrintStream r1;
        android.app.backup.IBackupManager $r2;
        java.lang.String $r4, $r6, r9;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r9 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r9 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r9);

        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r2.<android.app.backup.IBackupManager: void setBackupEnabledForUser(int,boolean)>(i0, z0);

        r1 = <java.lang.System: java.io.PrintStream out>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Manager now ");

        $r4 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String enableToString(boolean)>(z0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r8);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doEnabled(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        boolean z0;
        java.lang.StringBuilder r1;
        android.app.backup.IBackupManager $r2;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r7;
        java.io.PrintStream r8;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        z0 = interfaceinvoke $r2.<android.app.backup.IBackupManager: boolean isBackupEnabledForUser(int)>(i0);

        r8 = <java.lang.System: java.io.PrintStream out>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Manager currently ");

        $r4 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String enableToString(boolean)>(z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doFullTransportBackup(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.io.PrintStream $r2;
        android.util.ArraySet $r3;
        android.app.backup.IBackupManager $r4;
        java.lang.String[] $r5, $r7;
        java.lang.Object[] $r6;
        android.os.RemoteException $r8;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Performing full transport backup");

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

     label1:
        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 == null goto label2;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        goto label1;

     label2:
        $i1 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if $i1 <= 0 goto label6;

     label3:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $i2 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        $r5 = newarray (java.lang.String)[$i2];

        $r6 = virtualinvoke $r3.<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        interfaceinvoke $r4.<android.app.backup.IBackupManager: void fullTransportBackupForUser(int,java.lang.String[])>(i0, $r7);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r8);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void doInit(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i1, $i2, $i3;
        java.io.PrintStream r1, r19;
        android.util.ArraySet $r2;
        com.android.commands.bmgr.Bmgr$InitObserver $r3;
        java.lang.String $r6, $r13, r16;
        android.app.backup.IBackupManager $r7;
        java.lang.String[] $r8, $r10;
        java.lang.Object[] $r9;
        android.os.RemoteException $r14;
        java.lang.StringBuilder r18, r20;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

     label1:
        r16 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r16 == null goto label2;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r16);

        goto label1;

     label2:
        $i1 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if $i1 != 0 goto label3;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label3:
        $r3 = new com.android.commands.bmgr.Bmgr$InitObserver;

        specialinvoke $r3.<com.android.commands.bmgr.Bmgr$InitObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

     label4:
        r1 = <java.lang.System: java.io.PrintStream out>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing transports: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $i2 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        $r8 = newarray (java.lang.String)[$i2];

        $r9 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (java.lang.String[]) $r9;

        interfaceinvoke $r7.<android.app.backup.IBackupManager: void initializeTransportsForUser(int,java.lang.String[],android.app.backup.IBackupObserver)>(i0, $r10, $r3);

        virtualinvoke $r3.<com.android.commands.bmgr.Bmgr$InitObserver: void waitForCompletion(long)>(30000L);

        r19 = <java.lang.System: java.io.PrintStream out>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialization result: ");

        $i3 = $r3.<com.android.commands.bmgr.Bmgr$InitObserver: int result>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r14);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void doList(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.lang.String $r1, $r3, $r7, r9;
        boolean $z0, $z1;
        android.app.backup.IBackupManager $r2;
        android.app.backup.IRestoreSession $r4, r10;
        android.os.RemoteException $r8;
        java.io.PrintStream r11;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r9 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $r1 = "transports";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doListTransports(int)>(i0);

        return;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r10 = interfaceinvoke $r2.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSessionForUser(int,java.lang.String,java.lang.String)>(i0, null, null);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore> = r10;

     label2:
        if r10 != null goto label5;

     label3:
        r11 = <java.lang.System: java.io.PrintStream err>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not get restore session for user ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label4:
        return;

     label5:
        $r3 = "sets";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doListRestoreSets()>();

     label6:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        interfaceinvoke $r4.<android.app.backup.IRestoreSession: void endRestoreSession()>();

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r8);

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void doListRestoreSets()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.app.backup.IRestoreSession $r1;
        int $i0;
        android.app.backup.RestoreSet[] $r2;
        java.io.PrintStream $r3, $r5, $r7;
        android.os.RemoteException $r4;
        java.lang.String $r6;
        com.android.commands.bmgr.Bmgr$RestoreObserver r8;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label1:
        r8 = new com.android.commands.bmgr.Bmgr$RestoreObserver;

        specialinvoke r8.<com.android.commands.bmgr.Bmgr$RestoreObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

        $r1 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i0 = interfaceinvoke $r1.<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>(r8, null);

        if $i0 == 0 goto label3;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Unable to request restore sets");

     label2:
        goto label4;

     label3:
        virtualinvoke r8.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

        $r2 = r8.<com.android.commands.bmgr.Bmgr$RestoreObserver: android.app.backup.RestoreSet[] sets>;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void printRestoreSets(android.app.backup.RestoreSet[])>($r2);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the backup transport.  Is the system running?");

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void doListTransports(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        boolean z0, $z1;
        java.lang.String[] r1;
        java.lang.String r2, $r5, $r11, $r14, r16, r19, r20;
        java.io.PrintStream r3, $r8, $r13;
        java.lang.StringBuilder r4;
        android.app.backup.IBackupManager $r6, $r7, $r12;
        int $i0, i1, i4, i5, i6, i7;
        android.os.RemoteException $r15;
        android.content.ComponentName[] r17;
        android.content.ComponentName r18;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i1 := @parameter0: int;

        r16 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

     label01:
        $r5 = "-c";

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r16);

     label02:
        if z0 == 0 goto label09;

     label03:
        $r12 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r17 = interfaceinvoke $r12.<android.app.backup.IBackupManager: android.content.ComponentName[] listAllTransportComponentsForUser(int)>(i1);

        i4 = lengthof r17;

     label04:
        i5 = 0;

     label05:
        if i5 >= i4 goto label08;

        r18 = r17[i5];

     label06:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r14 = virtualinvoke r18.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        return;

     label09:
        $r6 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r19 = interfaceinvoke $r6.<android.app.backup.IBackupManager: java.lang.String getCurrentTransportForUser(int)>(i1);

        $r7 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r1 = interfaceinvoke $r7.<android.app.backup.IBackupManager: java.lang.String[] listAllTransportsForUser(int)>(i1);

     label10:
        if r1 == null goto label22;

     label11:
        $i0 = lengthof r1;

        if $i0 != 0 goto label13;

     label12:
        goto label22;

     label13:
        i6 = lengthof r1;

     label14:
        i7 = 0;

     label15:
        if i7 >= i6 goto label21;

        r2 = r1[i7];

     label16:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z1 == 0 goto label18;

     label17:
        r20 = "  * ";

        goto label19;

     label18:
        r20 = "    ";

     label19:
        r3 = <java.lang.System: java.io.PrintStream out>;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label20:
        i7 = i7 + 1;

        goto label15;

     label21:
        goto label25;

     label22:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("No transports available.");

     label23:
        return;

     label24:
        $r15 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r15);

     label25:
        return;

        catch android.os.RemoteException from label01 to label02 with label24;
        catch android.os.RemoteException from label03 to label04 with label24;
        catch android.os.RemoteException from label06 to label07 with label24;
        catch android.os.RemoteException from label09 to label10 with label24;
        catch android.os.RemoteException from label11 to label12 with label24;
        catch android.os.RemoteException from label13 to label14 with label24;
        catch android.os.RemoteException from label16 to label17 with label24;
        catch android.os.RemoteException from label19 to label20 with label24;
        catch android.os.RemoteException from label22 to label23 with label24;
    }

    private void doPrintWhitelist()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String[] r1;
        int i0, i1;
        android.app.backup.IBackupManager $r2;
        java.io.PrintStream $r3;
        android.os.RemoteException $r4;
        java.lang.String r5;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label01:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r1 = interfaceinvoke $r2.<android.app.backup.IBackupManager: java.lang.String[] getTransportWhitelist()>();

     label02:
        if r1 == null goto label08;

     label03:
        i0 = lengthof r1;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label08;

        r5 = r1[i1];

     label06:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(r5);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r4);

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label06 to label07 with label09;
    }

    private void doRestore(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i2;
        long l1;
        java.lang.String r1, r3;
        boolean $z0;
        java.lang.Throwable $r2;
        java.util.HashSet r4, r5;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r3 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r3 != null goto label01;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label01:
        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(46);

        if $i2 >= 0 goto label12;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z0 == 0 goto label02;

        goto label12;

     label02:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r3, 16);

     label03:
        r4 = null;

     label04:
        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

     label05:
        if r1 == null goto label09;

        r5 = r4;

        if r4 != null goto label07;

     label06:
        r5 = new java.util.HashSet;

        specialinvoke r5.<java.util.HashSet: void <init>()>();

     label07:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label08:
        r4 = r5;

        goto label04;

     label09:
        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestoreAll(int,long,java.util.HashSet)>(i0, l1, r4);

     label10:
        goto label13;

     label11:
        $r2 := @caughtexception;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label12:
        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestorePackage(java.lang.String)>(r3);

     label13:
        return;

        catch java.lang.NumberFormatException from label02 to label03 with label11;
        catch java.lang.NumberFormatException from label04 to label05 with label11;
        catch java.lang.NumberFormatException from label06 to label07 with label11;
        catch java.lang.NumberFormatException from label07 to label08 with label11;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    private void doRestoreAll(int, long, java.util.HashSet)
    {
        com.android.commands.bmgr.Bmgr r0;
        long l0, $l4;
        int i1, $i2, $i3, $i6, $i7, $i8, i9, i10;
        android.app.backup.RestoreSet r2;
        java.io.PrintStream r3, $r7, $r8, $r9, r23;
        com.android.commands.bmgr.Bmgr$RestoreObserver $r4;
        android.app.backup.IBackupManager $r5;
        android.app.backup.IRestoreSession $r6, $r15, $r16, r22;
        byte $b5;
        java.lang.String $r11, $r13, $r19;
        android.os.RemoteException $r20;
        java.util.HashSet r21;
        java.lang.StringBuilder r24, r26;
        android.app.backup.RestoreSet[] r25;
        boolean z3;
        java.lang.String[] r27;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i9 := @parameter0: int;

        l0 := @parameter1: long;

        r21 := @parameter2: java.util.HashSet;

        $r4 = new com.android.commands.bmgr.Bmgr$RestoreObserver;

        specialinvoke $r4.<com.android.commands.bmgr.Bmgr$RestoreObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

     label01:
        $r5 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r22 = interfaceinvoke $r5.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSessionForUser(int,java.lang.String,java.lang.String)>(i9, null, null);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore> = r22;

     label02:
        if r22 != null goto label05;

     label03:
        r23 = <java.lang.System: java.io.PrintStream err>;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Could not get restore session for user ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r19 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label04:
        return;

     label05:
        r25 = null;

        z3 = 0;

     label06:
        $i2 = interfaceinvoke r22.<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>($r4, null);

        if $i2 != 0 goto label23;

        virtualinvoke $r4.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

        r25 = $r4.<com.android.commands.bmgr.Bmgr$RestoreObserver: android.app.backup.RestoreSet[] sets>;

     label07:
        if r25 == null goto label22;

     label08:
        i1 = lengthof r25;

     label09:
        i10 = 0;

     label10:
        if i10 >= i1 goto label22;

        r2 = r25[i10];

     label11:
        $l4 = r2.<android.app.backup.RestoreSet: long token>;

        $b5 = $l4 cmp l0;

        if $b5 != 0 goto label21;

        r3 = <java.lang.System: java.io.PrintStream out>;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restore: ");

        $r11 = r2.<android.app.backup.RestoreSet: java.lang.String name>;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label12:
        if r21 != null goto label16;

        z3 = 0;

     label13:
        $r16 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i8 = interfaceinvoke $r16.<android.app.backup.IRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor)>(l0, $r4, null);

        if $i8 != 0 goto label15;

     label14:
        z3 = 1;

     label15:
        goto label23;

     label16:
        $i6 = virtualinvoke r21.<java.util.HashSet: int size()>();

        r27 = newarray (java.lang.String)[$i6];

        virtualinvoke r21.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>(r27);

     label17:
        z3 = 0;

     label18:
        $r15 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i7 = interfaceinvoke $r15.<android.app.backup.IRestoreSession: int restorePackages(long,android.app.backup.IRestoreObserver,java.lang.String[],android.app.backup.IBackupManagerMonitor)>(l0, $r4, r27, null);

        if $i7 != 0 goto label20;

     label19:
        z3 = 1;

     label20:
        goto label23;

     label21:
        i10 = i10 + 1;

        goto label10;

     label22:
        z3 = 0;

     label23:
        if z3 != 0 goto label29;

        if r25 == null goto label28;

     label24:
        $i3 = lengthof r25;

        if $i3 != 0 goto label26;

     label25:
        goto label28;

     label26:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("No matching restore set token.  Available sets:");

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void printRestoreSets(android.app.backup.RestoreSet[])>(r25);

     label27:
        goto label29;

     label28:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("No available restore sets; no restore performed");

     label29:
        if z3 == 0 goto label31;

     label30:
        virtualinvoke $r4.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

     label31:
        $r6 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        interfaceinvoke $r6.<android.app.backup.IRestoreSession: void endRestoreSession()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("done");

     label32:
        goto label34;

     label33:
        $r20 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r20);

     label34:
        return;

        catch android.os.RemoteException from label01 to label02 with label33;
        catch android.os.RemoteException from label03 to label04 with label33;
        catch android.os.RemoteException from label06 to label07 with label33;
        catch android.os.RemoteException from label08 to label09 with label33;
        catch android.os.RemoteException from label11 to label12 with label33;
        catch android.os.RemoteException from label13 to label14 with label33;
        catch android.os.RemoteException from label16 to label17 with label33;
        catch android.os.RemoteException from label18 to label19 with label33;
        catch android.os.RemoteException from label24 to label25 with label33;
        catch android.os.RemoteException from label26 to label27 with label33;
        catch android.os.RemoteException from label28 to label29 with label33;
        catch android.os.RemoteException from label30 to label31 with label33;
        catch android.os.RemoteException from label31 to label32 with label33;
    }

    private void doRestorePackage(java.lang.String)
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1;
        java.io.PrintStream $r2, $r3;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("The syntax \'restore <package>\' is no longer supported, please use ");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\'restore <token> <package>\'.");

        return;
    }

    private void doTransport(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.io.PrintStream r1, r17;
        java.lang.String $r2, $r9, $r13, r15, r16;
        boolean $z0;
        android.app.backup.IBackupManager $r3;
        android.os.RemoteException $r14;
        java.lang.StringBuilder r18, r19;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

     label01:
        r15 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

     label02:
        if r15 != null goto label05;

     label03:
        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

     label04:
        return;

     label05:
        $r2 = "-c";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z0 == 0 goto label07;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doTransportByComponent(int)>(i0);

     label06:
        return;

     label07:
        $r3 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r16 = interfaceinvoke $r3.<android.app.backup.IBackupManager: java.lang.String selectBackupTransportForUser(int,java.lang.String)>(i0, r15);

     label08:
        if r16 != null goto label11;

     label09:
        r17 = <java.lang.System: java.io.PrintStream out>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown transport \'");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' specified; no changes made.");

        $r13 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label10:
        goto label12;

     label11:
        r1 = <java.lang.System: java.io.PrintStream out>;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected transport ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (formerly ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label12:
        goto label14;

     label13:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r14);

     label14:
        return;

        catch android.os.RemoteException from label01 to label02 with label13;
        catch android.os.RemoteException from label03 to label04 with label13;
        catch android.os.RemoteException from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label13;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch android.os.RemoteException from label11 to label12 with label13;
    }

    private void doTransportByComponent(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        com.android.commands.bmgr.Bmgr$1 r2;
        java.util.concurrent.CountDownLatch $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        java.io.PrintStream $r6;
        java.lang.String r7;
        android.app.backup.IBackupManager r8;
        android.content.ComponentName r9;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r7 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r7 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

     label2:
        r8 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r9 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r7);

        r2 = new com.android.commands.bmgr.Bmgr$1;

        specialinvoke r2.<com.android.commands.bmgr.Bmgr$1: void <init>(com.android.commands.bmgr.Bmgr,java.util.concurrent.CountDownLatch)>(r0, $r3);

        interfaceinvoke r8.<android.app.backup.IBackupManager: void selectBackupTransportAsyncForUser(int,android.content.ComponentName,android.app.backup.ISelectBackupTransportCallback)>(i0, r9, r2);

     label3:
        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>();

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Operation interrupted.");

     label6:
        return;

     label7:
        $r4 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r4);

        return;

        catch android.os.RemoteException from label2 to label3 with label7;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    private void doWipe(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.lang.String r1, r2, $r9;
        java.io.PrintStream r3;
        android.app.backup.IBackupManager $r4;
        android.os.RemoteException $r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r2 != null goto label2;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label2:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r4.<android.app.backup.IBackupManager: void clearBackupDataForUser(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        r3 = <java.lang.System: java.io.PrintStream out>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wiped backup data for ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r10);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private java.lang.String enableToString(boolean)
    {
        com.android.commands.bmgr.Bmgr r0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = "enabled";

        goto label2;

     label1:
        r1 = "disabled";

     label2:
        return r1;
    }

    private static java.lang.String eventCategoryToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "UNKNOWN_CATEGORY";

     label1:
        return "BACKUP_MANAGER_POLICY";

     label2:
        return "AGENT";

     label3:
        return "TRANSPORT";
    }

    private static java.lang.String eventIdToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4: goto label42;
            case 5: goto label41;
            case 6: goto label01;
            case 7: goto label40;
            case 8: goto label01;
            case 9: goto label39;
            case 10: goto label38;
            case 11: goto label37;
            case 12: goto label36;
            case 13: goto label35;
            case 14: goto label34;
            case 15: goto label33;
            case 16: goto label32;
            case 17: goto label01;
            case 18: goto label31;
            case 19: goto label30;
            case 20: goto label01;
            case 21: goto label29;
            case 22: goto label28;
            case 23: goto label27;
            case 24: goto label26;
            case 25: goto label25;
            case 26: goto label24;
            case 27: goto label23;
            case 28: goto label22;
            case 29: goto label21;
            case 30: goto label20;
            case 31: goto label19;
            case 32: goto label01;
            case 33: goto label01;
            case 34: goto label18;
            case 35: goto label17;
            case 36: goto label16;
            case 37: goto label15;
            case 38: goto label14;
            case 39: goto label13;
            case 40: goto label12;
            case 41: goto label11;
            case 42: goto label10;
            case 43: goto label09;
            case 44: goto label08;
            case 45: goto label07;
            case 46: goto label06;
            case 47: goto label05;
            case 48: goto label04;
            case 49: goto label03;
            case 50: goto label02;
            default: goto label01;
        };

     label01:
        return "UNKNOWN_ID";

     label02:
        return "TRANSPORT_IS_NULL";

     label03:
        return "NO_PACKAGES";

     label04:
        return "WIDGET_UNKNOWN_VERSION";

     label05:
        return "WIDGET_METADATA_MISMATCH";

     label06:
        return "CORRUPT_MANIFEST";

     label07:
        return "FULL_RESTORE_TIMEOUT";

     label08:
        return "UNKNOWN_VERSION";

     label09:
        return "EXPECTED_DIFFERENT_PACKAGE";

     label10:
        return "MISSING_SIGNATURE";

     label11:
        return "CANNOT_RESTORE_WITHOUT_APK";

     label12:
        return "APK_NOT_INSTALLED";

     label13:
        return "FULL_RESTORE_ALLOW_BACKUP_FALSE";

     label14:
        return "SYSTEM_APP_NO_AGENT";

     label15:
        return "FULL_RESTORE_SIGNATURE_MISMATCH";

     label16:
        return "VERSION_OF_BACKUP_OLDER";

     label17:
        return "VERSIONS_MATCH";

     label18:
        return "RESTORE_ANY_VERSION";

     label19:
        return "KEY_VALUE_RESTORE_TIMEOUT";

     label20:
        return "CANT_FIND_AGENT";

     label21:
        return "SIGNATURE_MISMATCH";

     label22:
        return "APP_HAS_NO_AGENT";

     label23:
        return "RESTORE_VERSION_HIGHER";

     label24:
        return "PACKAGE_NOT_PRESENT";

     label25:
        return "LOST_TRANSPORT";

     label26:
        return "PM_AGENT_HAS_NO_METADATA";

     label27:
        return "NO_PM_METADATA_RECEIVED";

     label28:
        return "NO_RESTORE_METADATA_AVAILABLE";

     label29:
        return "KEY_VALUE_BACKUP_CANCEL";

     label30:
        return "EXCEPTION_FULL_BACKUP";

     label31:
        return "QUOTA_HIT_PREFLIGHT";

     label32:
        return "ERROR_PREFLIGHT";

     label33:
        return "PACKAGE_TRANSPORT_NOT_PRESENT";

     label34:
        return "DEVICE_NOT_PROVISIONED";

     label35:
        return "BACKUP_DISABLED";

     label36:
        return "PACKAGE_NOT_FOUND";

     label37:
        return "PACKAGE_STOPPED";

     label38:
        return "PACKAGE_KEY_VALUE_PARTICIPANT";

     label39:
        return "PACKAGE_INELIGIBLE";

     label40:
        return "NO_DATA_TO_SEND";

     label41:
        return "ILLEGAL_KEY";

     label42:
        return "FULL_BACKUP_CANCEL";
    }

    private void handleRemoteException(android.os.RemoteException)
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.RemoteException r1;
        java.io.PrintStream $r2, $r4;
        java.lang.String $r3;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: android.os.RemoteException;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r3 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;
    }

    private boolean isBackupActive(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        java.io.PrintStream r1;
        android.app.backup.IBackupManager $r2;
        boolean $z0;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $z0 = interfaceinvoke $r2.<android.app.backup.IBackupManager: boolean isBackupServiceActive(int)>(i0);

        if $z0 != 0 goto label3;

        r1 = <java.lang.System: java.io.PrintStream err>;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Backup Manager is not activated for user ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r6 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r6);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    static java.lang.String lambda$backupNowAllPackages$0(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r1 = r0.<android.content.pm.PackageInfo: java.lang.String packageName>;

        return $r1;
    }

    static java.lang.String[] lambda$backupNowAllPackages$1(int)
    {
        int i0;
        java.lang.String[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.String)[i0];

        return $r0;
    }

    public static void main(java.lang.String[])
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.Exception $r1;
        java.io.PrintStream $r2;
        java.lang.String[] r3;

        r3 := @parameter0: java.lang.String[];

     label1:
        r0 = new com.android.commands.bmgr.Bmgr;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void <init>()>();

        virtualinvoke r0.<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>(r3);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Exception caught:");

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i1, $i2;
        java.lang.String[] r1;
        java.lang.String r2;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 = r0.<com.android.commands.bmgr.Bmgr: int mNextArg>;

        r1 = r0.<com.android.commands.bmgr.Bmgr: java.lang.String[] mArgs>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        return null;

     label1:
        r2 = r1[i0];

        $i2 = i0 + 1;

        r0.<com.android.commands.bmgr.Bmgr: int mNextArg> = $i2;

        return r2;
    }

    private int parseUserId()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        $r1 = "--user";

        $r2 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $i2 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r3);

        return $i2;

     label1:
        $i0 = r0.<com.android.commands.bmgr.Bmgr: int mNextArg>;

        $i1 = $i0 - 1;

        r0.<com.android.commands.bmgr.Bmgr: int mNextArg> = $i1;

        return 0;
    }

    private void printRestoreSets(android.app.backup.RestoreSet[])
    {
        com.android.commands.bmgr.Bmgr r0;
        android.app.backup.RestoreSet[] r1;
        int i0, $i1, i3;
        android.app.backup.RestoreSet r2;
        java.io.PrintStream r3, $r5;
        java.lang.StringBuilder $r6;
        long $l2;
        java.lang.String $r8, $r11, $r13;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: android.app.backup.RestoreSet[];

        if r1 == null goto label4;

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        goto label4;

     label1:
        i0 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        r2 = r1[i3];

        r3 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $l2 = r2.<android.app.backup.RestoreSet: long token>;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r11 = r2.<android.app.backup.RestoreSet: java.lang.String name>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r13);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;

     label4:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("No restore sets");

        return;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: bmgr [--user <userId>] [backup|restore|list|transport|run]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("       bmgr backup PACKAGE");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("       bmgr enable BOOL");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("       bmgr enabled");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("       bmgr list transports [-c]");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("       bmgr list sets");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("       bmgr transport WHICH|-c WHICH_COMPONENT");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("       bmgr restore TOKEN");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("       bmgr restore TOKEN PACKAGE...");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("       bmgr run");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("       bmgr wipe TRANSPORT PACKAGE");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("       bmgr fullbackup PACKAGE...");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("       bmgr backupnow [--monitor|--monitor-verbose] --all|PACKAGE...");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("       bmgr cancel backups");

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("       bmgr init TRANSPORT...");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("       bmgr activate BOOL");

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("       bmgr activated");

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("       bmgr autorestore BOOL");

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("The \'--user\' option specifies the user on which the operation is run.");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("It must be the first argument before the operation.");

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("The default value is 0 which is the system user.");

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("");

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("The \'backup\' command schedules a backup pass for the named package.");

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("Note that the backup pass will effectively be a no-op if the package");

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("does not actually have changed data to store.");

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("");

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("The \'enable\' command enables or disables the entire backup mechanism.");

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("If the argument is \'true\' it will be enabled, otherwise it will be");

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("disabled.  When disabled, neither backup or restore operations will");

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("be performed.");

        $r31 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("");

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("The \'enabled\' command reports the current enabled/disabled state of");

        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("the backup mechanism.");

        $r34 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("");

        $r35 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("The \'list transports\' command reports the names of the backup transports");

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("BackupManager is currently bound to. These names can be passed as arguments");

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("to the \'transport\' and \'wipe\' commands.  The currently active transport");

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("is indicated with a \'*\' character. If -c flag is used, all available");

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("transport components on the device are listed. These can be used with");

        $r40 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("the component variant of \'transport\' command.");

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("");

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("The \'list sets\' command reports the token and name of each restore set");

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("available to the device via the currently active transport.");

        $r44 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("");

        $r45 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("The \'transport\' command designates the named transport as the currently");

        $r46 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("active one.  This setting is persistent across reboots. If -c flag is");

        $r47 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("specified, the following string is treated as a component name.");

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("");

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("The \'restore\' command when given just a restore token initiates a full-system");

        $r50 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("restore operation from the currently active transport.  It will deliver");

        $r51 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("the restore set designated by the TOKEN argument to each application");

        $r52 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("that had contributed data to that restore set.");

        $r53 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("");

        $r54 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("The \'restore\' command when given a token and one or more package names");

        $r55 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("initiates a restore operation of just those given packages from the restore");

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("set designated by the TOKEN argument.  It is effectively the same as the");

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("\'restore\' operation supplying only a token, but applies a filter to the");

        $r58 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("set of applications to be restored.");

        $r59 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("");

        $r60 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("The \'run\' command causes any scheduled backup operation to be initiated");

        $r61 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>("immediately, without the usual waiting period for batching together");

        $r62 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("data changes.");

        $r63 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("");

        $r64 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("The \'wipe\' command causes all backed-up data for the given package to be");

        $r65 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("erased from the given transport\'s storage.  The next backup operation");

        $r66 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("that the given application performs will rewrite its entire data set.");

        $r67 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("Transport names to use here are those reported by \'list transports\'.");

        $r68 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>("");

        $r69 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>("The \'fullbackup\' command induces a full-data stream backup for one or more");

        $r70 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>("packages.  The data is sent via the currently active transport.");

        $r71 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>("");

        $r72 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>("The \'backupnow\' command runs an immediate backup for one or more packages.");

        $r73 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>("    --all flag runs backup for all eligible packages.");

        $r74 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>("    --monitor flag prints monitor events.");

        $r75 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>("    --monitor-verbose flag prints monitor events with all keys.");

        $r76 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>("For each package it will run key/value or full data backup ");

        $r77 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>("depending on the package\'s manifest declarations.");

        $r78 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>("The data is sent via the currently active transport.");

        $r79 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>("");

        $r80 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>("The \'cancel backups\' command cancels all running backups.");

        $r81 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>("");

        $r82 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>("The \'init\' command initializes the given transports, wiping all data");

        $r83 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>("from their backing data stores.");

        $r84 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>("");

        $r85 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>("The \'activate\' command activates or deactivates the backup service.");

        $r86 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>("If the argument is \'true\' it will be activated, otherwise it will be");

        $r87 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>("deactivated. When deactivated, the service will not be running and no");

        $r88 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>("operations can be performed until activation.");

        $r89 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>("");

        $r90 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>("The \'activated\' command reports the current activated/deactivated");

        $r91 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r91.<java.io.PrintStream: void println(java.lang.String)>("state of the backup mechanism.");

        $r92 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>("");

        $r93 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>("The \'autorestore\' command enables or disables automatic restore when");

        $r94 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>("a new package is installed.");

        return;
    }

    void doRun(int)
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0;
        android.app.backup.IBackupManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r2.<android.app.backup.IBackupManager: void backupNowForUser(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void handleRemoteException(android.os.RemoteException)>($r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.bmgr.Bmgr r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, r28;
        android.app.backup.IBackupManager $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.io.PrintStream $r25, $r26;
        java.lang.String[] r27;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r27 := @parameter0: java.lang.String[];

        $i1 = lengthof r27;

        if $i1 >= 1 goto label01;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label01:
        r0.<com.android.commands.bmgr.Bmgr: java.lang.String[] mArgs> = r27;

        r0.<com.android.commands.bmgr.Bmgr: int mNextArg> = 0;

        i0 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: int parseUserId()>();

        r28 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("Bmgr", $r7);

        $r8 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        if $r8 != null goto label02;

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label02:
        $r9 = "activate";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z0 == 0 goto label03;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doActivateService(int)>(i0);

        return;

     label03:
        $r10 = "activated";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z1 == 0 goto label04;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doActivated(int)>(i0);

        return;

     label04:
        $z2 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: boolean isBackupActive(int)>(i0);

        if $z2 != 0 goto label05;

        return;

     label05:
        $r11 = "autorestore";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z3 == 0 goto label06;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doAutoRestore(int)>(i0);

        return;

     label06:
        $r12 = "enabled";

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z4 == 0 goto label07;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doEnabled(int)>(i0);

        return;

     label07:
        $r13 = "enable";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z5 == 0 goto label08;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doEnable(int)>(i0);

        return;

     label08:
        $r14 = "run";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z6 == 0 goto label09;

        virtualinvoke r0.<com.android.commands.bmgr.Bmgr: void doRun(int)>(i0);

        return;

     label09:
        $r15 = "backup";

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z7 == 0 goto label10;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doBackup(int)>(i0);

        return;

     label10:
        $r16 = "init";

        $z8 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z8 == 0 goto label11;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doInit(int)>(i0);

        return;

     label11:
        $r17 = "list";

        $z9 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z9 == 0 goto label12;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doList(int)>(i0);

        return;

     label12:
        $r18 = "restore";

        $z10 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z10 == 0 goto label13;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestore(int)>(i0);

        return;

     label13:
        $r19 = "transport";

        $z11 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z11 == 0 goto label14;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doTransport(int)>(i0);

        return;

     label14:
        $r20 = "wipe";

        $z12 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z12 == 0 goto label15;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doWipe(int)>(i0);

        return;

     label15:
        $r21 = "fullbackup";

        $z13 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z13 == 0 goto label16;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doFullTransportBackup(int)>(i0);

        return;

     label16:
        $r22 = "backupnow";

        $z14 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z14 == 0 goto label17;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doBackupNow(int)>(i0);

        return;

     label17:
        $r23 = "cancel";

        $z15 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z15 == 0 goto label18;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doCancel(int)>(i0);

        return;

     label18:
        $r24 = "whitelist";

        $z16 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z16 == 0 goto label19;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doPrintWhitelist()>();

        return;

     label19:
        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Unknown command");

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.bmgr.Bmgr: java.lang.String TRANSPORT_NOT_RUNNING_ERR> = "Error: Could not access the backup transport.  Is the system running?";

        <com.android.commands.bmgr.Bmgr: java.lang.String TAG> = "Bmgr";

        <com.android.commands.bmgr.Bmgr: java.lang.String PM_NOT_RUNNING_ERR> = "Error: Could not access the Package Manager.  Is the system running?";

        <com.android.commands.bmgr.Bmgr: java.lang.String BMGR_NOT_RUNNING_ERR> = "Error: Could not access the Backup Manager.  Is the system running?";

        <com.android.commands.bmgr.Bmgr: java.lang.String BMGR_NOT_ACTIVATED_FOR_USER> = "Error: Backup Manager is not activated for user ";

        <com.android.commands.bmgr.Bmgr: java.lang.String BMGR_ERR_NO_RESTORESESSION_FOR_USER> = "Error: Could not get restore session for user ";

        return;
    }
}
