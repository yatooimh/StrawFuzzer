public final class com.android.commands.bu.Backup extends java.lang.Object
{
    static final java.lang.String TAG;
    static java.lang.String[] mArgs;
    android.app.backup.IBackupManager mBackupManager;
    int mNextArg;

    void <init>()
    {
        com.android.commands.bu.Backup r0;
        android.os.IBinder $r1;
        android.app.backup.IBackupManager $r2;

        r0 := @this: com.android.commands.bu.Backup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r2 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r1);

        r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager> = $r2;

        return;
    }

    void <init>(android.app.backup.IBackupManager)
    {
        com.android.commands.bu.Backup r0;
        android.app.backup.IBackupManager r1;

        r0 := @this: com.android.commands.bu.Backup;

        r1 := @parameter0: android.app.backup.IBackupManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager> = r1;

        return;
    }

    private void doBackup(int, int)
    {
        com.android.commands.bu.Backup r0;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19, z20, z21, z22, z23, z24;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r27, $r28, $r32, $r33, $r36, $r37, r40;
        java.lang.Throwable $r21, $r25, $r29, $r30, $r34, $r38, $r39, r49;
        android.os.RemoteException $r22, $r23, $r24;
        android.os.ParcelFileDescriptor r42;
        java.lang.String[] r43, r46;
        android.app.backup.IBackupManager r44;
        java.lang.Object[] $r45;
        java.util.ArrayList r54;
        java.lang.StringBuilder r55, r56, r57, r58;
        java.io.IOException r59, r60, r61;

        r0 := @this: com.android.commands.bu.Backup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r54 = new java.util.ArrayList;

        specialinvoke r54.<java.util.ArrayList: void <init>()>();

        z17 = 0;

        z18 = 1;

        z19 = 1;

        z20 = 0;

        z21 = 0;

        z22 = 0;

        z23 = 0;

        z24 = 0;

     label01:
        r40 = specialinvoke r0.<com.android.commands.bu.Backup: java.lang.String nextArg()>();

        if r40 == null goto label19;

        $z0 = virtualinvoke r40.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label18;

        $r3 = "-apk";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z1 == 0 goto label02;

        z24 = 1;

        goto label01;

     label02:
        $r4 = "-noapk";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z2 == 0 goto label03;

        z24 = 0;

        goto label01;

     label03:
        $r5 = "-obb";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z3 == 0 goto label04;

        z23 = 1;

        goto label01;

     label04:
        $r6 = "-noobb";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z4 == 0 goto label05;

        z23 = 0;

        goto label01;

     label05:
        $r7 = "-shared";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z5 == 0 goto label06;

        z22 = 1;

        goto label01;

     label06:
        $r8 = "-noshared";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z6 == 0 goto label07;

        z22 = 0;

        goto label01;

     label07:
        $r9 = "-system";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z7 == 0 goto label08;

        z19 = 1;

        goto label01;

     label08:
        $r10 = "-nosystem";

        $z8 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z8 == 0 goto label09;

        z19 = 0;

        goto label01;

     label09:
        $r11 = "-widgets";

        $z9 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z9 == 0 goto label10;

        z20 = 1;

        goto label01;

     label10:
        $r12 = "-nowidgets";

        $z10 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z10 == 0 goto label11;

        z20 = 0;

        goto label01;

     label11:
        $r13 = "-all";

        $z11 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z11 == 0 goto label12;

        z21 = 1;

        goto label01;

     label12:
        $r14 = "-compress";

        $z12 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z12 == 0 goto label13;

        z18 = 1;

        goto label01;

     label13:
        $r15 = "-nocompress";

        $z13 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z13 == 0 goto label14;

        z18 = 0;

        goto label01;

     label14:
        $r16 = "-keyvalue";

        $z14 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z14 == 0 goto label15;

        z17 = 1;

        goto label01;

     label15:
        $r17 = "-nokeyvalue";

        $z15 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z15 == 0 goto label16;

        z17 = 0;

        goto label01;

     label16:
        $r18 = "-user";

        $z16 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r40);

        if $z16 == 0 goto label17;

        specialinvoke r0.<com.android.commands.bu.Backup: java.lang.String nextArg()>();

        goto label01;

     label17:
        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown backup flag ");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r20 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("bu", $r20);

        goto label01;

     label18:
        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>(r40);

        goto label01;

     label19:
        if z21 == 0 goto label20;

        $i3 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label20;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("bu", "-all passed for backup along with specific package names");

     label20:
        if z21 != 0 goto label21;

        if z22 != 0 goto label21;

        $i2 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "no backup packages supplied and neither -shared nor -all given");

        return;

     label21:
        r42 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

     label22:
        $i4 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        r43 = newarray (java.lang.String)[$i4];

        r44 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        $r45 = virtualinvoke r54.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r43);

        r46 = (java.lang.String[]) $r45;

     label23:
        interfaceinvoke r44.<android.app.backup.IBackupManager: void adbBackup(int,android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>(i1, r42, z24, z23, z22, z20, z21, z19, z18, z17, r46);

     label24:
        if r42 == null goto label39;

     label25:
        virtualinvoke r42.<android.os.ParcelFileDescriptor: void close()>();

     label26:
        goto label39;

     label27:
        $r25 := @caughtexception;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO error closing output for backup: ");

        r59 = (java.io.IOException) $r25;

        $r27 = virtualinvoke r59.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r28 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r28);

        goto label26;

     label28:
        $r38 := @caughtexception;

        r49 = $r38;

        goto label41;

     label29:
        $r22 := @caughtexception;

        goto label34;

     label30:
        $r29 := @caughtexception;

        r49 = $r29;

        goto label41;

     label31:
        $r24 := @caughtexception;

        goto label34;

     label32:
        $r39 := @caughtexception;

        r49 = $r39;

        r42 = null;

        goto label41;

     label33:
        $r23 := @caughtexception;

        r42 = null;

     label34:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Unable to invoke backup manager for backup");

     label35:
        if r42 == null goto label39;

     label36:
        virtualinvoke r42.<android.os.ParcelFileDescriptor: void close()>();

     label37:
        goto label39;

     label38:
        $r34 := @caughtexception;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO error closing output for backup: ");

        r60 = (java.io.IOException) $r34;

        $r36 = virtualinvoke r60.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r37 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r37);

        goto label37;

     label39:
        return;

     label40:
        $r21 := @caughtexception;

        r49 = $r21;

     label41:
        if r42 == null goto label45;

     label42:
        virtualinvoke r42.<android.os.ParcelFileDescriptor: void close()>();

     label43:
        goto label45;

     label44:
        $r30 := @caughtexception;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO error closing output for backup: ");

        r61 = (java.io.IOException) $r30;

        $r32 = virtualinvoke r61.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r33);

     label45:
        throw r49;

        catch android.os.RemoteException from label21 to label22 with label33;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch android.os.RemoteException from label22 to label23 with label31;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch android.os.RemoteException from label23 to label24 with label29;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label34 to label35 with label40;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label42 to label43 with label44;
    }

    private void doRestore(int, int)
    {
        com.android.commands.bu.Backup r0;
        int i0, i1;
        android.os.ParcelFileDescriptor r1, r7, r8;
        android.app.backup.IBackupManager $r2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4, $r5, $r6;

        r0 := @this: com.android.commands.bu.Backup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 = null;

        r8 = null;

     label01:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

     label02:
        r8 = r1;

        r7 = r1;

     label03:
        $r2 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        interfaceinvoke $r2.<android.app.backup.IBackupManager: void adbRestore(int,android.os.ParcelFileDescriptor)>(i1, r1);

     label04:
        if r1 == null goto label14;

     label05:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        goto label14;

     label07:
        $r4 := @caughtexception;

        goto label06;

     label08:
        $r6 := @caughtexception;

        goto label15;

     label09:
        $r3 := @caughtexception;

        r8 = r7;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Unable to invoke backup manager for restore");

     label11:
        if r7 == null goto label14;

     label12:
        virtualinvoke r7.<android.os.ParcelFileDescriptor: void close()>();

     label13:
        goto label06;

     label14:
        return;

     label15:
        if r8 == null goto label19;

     label16:
        virtualinvoke r8.<android.os.ParcelFileDescriptor: void close()>();

     label17:
        goto label19;

     label18:
        $r5 := @caughtexception;

        goto label17;

     label19:
        throw $r6;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.io.IOException from label12 to label13 with label07;
        catch java.io.IOException from label16 to label17 with label18;
    }

    private boolean isBackupActiveForUser(int)
    {
        com.android.commands.bu.Backup r0;
        int i0;
        boolean z0;
        android.app.backup.IBackupManager $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.commands.bu.Backup;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        z0 = interfaceinvoke $r3.<android.app.backup.IBackupManager: boolean isBackupServiceActive(int)>(i0);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not access BackupManager: ");

        $r7 = virtualinvoke $r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r9);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void main(java.lang.String[])
    {
        com.android.commands.bu.Backup r0;
        java.lang.Exception $r1;
        java.lang.String[] r2;

        r2 := @parameter0: java.lang.String[];

     label1:
        r0 = new com.android.commands.bu.Backup;

        specialinvoke r0.<com.android.commands.bu.Backup: void <init>()>();

        virtualinvoke r0.<com.android.commands.bu.Backup: void run(java.lang.String[])>(r2);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("bu", "Error running backup/restore", $r1);

     label4:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("bu", "Finished.");

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.bu.Backup r0;
        int i0, $i1, $i2;
        java.lang.String[] r1;
        java.lang.String r2;

        r0 := @this: com.android.commands.bu.Backup;

        i0 = r0.<com.android.commands.bu.Backup: int mNextArg>;

        r1 = <com.android.commands.bu.Backup: java.lang.String[] mArgs>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        return null;

     label1:
        r2 = r1[i0];

        $i2 = i0 + 1;

        r0.<com.android.commands.bu.Backup: int mNextArg> = $i2;

        return r2;
    }

    private int parseUserId()
    {
        com.android.commands.bu.Backup r0;
        java.lang.String[] r1, $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.commands.bu.Backup;

        i4 = 0;

     label1:
        r1 = <com.android.commands.bu.Backup: java.lang.String[] mArgs>;

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        if i4 >= $i1 goto label3;

        $r3 = "-user";

        $r2 = r1[i4];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r4 = <com.android.commands.bu.Backup: java.lang.String[] mArgs>;

        $i2 = i4 + 1;

        $r5 = $r4[$i2];

        $i3 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r5);

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(" backup [-user USER_ID] [-f FILE] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("        [-all] [-system|-nosystem] [-keyvalue|-nokeyvalue] [PACKAGE...]");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("     write an archive of the device\'s data to FILE [default=backup.adb]");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("     package list optional if -all/-shared are supplied");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("     -user: user ID for which to perform the operation (default - system user)");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("     -apk/-noapk: do/don\'t back up .apk files (default -noapk)");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("     -obb/-noobb: do/don\'t back up .obb files (default -noobb)");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("     -shared|-noshared: do/don\'t back up shared storage (default -noshared)");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("     -all: back up all installed applications");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("     -system|-nosystem: include system apps in -all (default -system)");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("     -keyvalue|-nokeyvalue: include apps that perform key/value backups.");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("         (default -nokeyvalue)");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(" restore [-user USER_ID] FILE       restore device contents from FILE");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("     -user: user ID for which to perform the operation (default - system user)");

        return;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.bu.Backup r0;
        int i0, $i2, $i3;
        android.app.backup.IBackupManager $r2;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r5, $r7, $r11, r14;
        boolean $z0, $z1, $z2;
        java.lang.String[] r12;

        r0 := @this: com.android.commands.bu.Backup;

        r12 := @parameter0: java.lang.String[];

        $r2 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Can\'t obtain Backup Manager binder");

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning: ");

        $r5 = r12[0];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("bu", $r7);

        <com.android.commands.bu.Backup: java.lang.String[] mArgs> = r12;

        i0 = specialinvoke r0.<com.android.commands.bu.Backup: int parseUserId()>();

        $z0 = specialinvoke r0.<com.android.commands.bu.Backup: boolean isBackupActiveForUser(int)>(i0);

        if $z0 != 0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackupManager is not available for user ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r11);

        return;

     label2:
        r14 = specialinvoke r0.<com.android.commands.bu.Backup: java.lang.String nextArg()>();

        $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("backup");

        if $z1 == 0 goto label3;

        $i3 = <android.system.OsConstants: int STDOUT_FILENO>;

        specialinvoke r0.<com.android.commands.bu.Backup: void doBackup(int,int)>($i3, i0);

        goto label5;

     label3:
        $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("restore");

        if $z2 == 0 goto label4;

        $i2 = <android.system.OsConstants: int STDIN_FILENO>;

        specialinvoke r0.<com.android.commands.bu.Backup: void doRestore(int,int)>($i2, i0);

        goto label5;

     label4:
        staticinvoke <com.android.commands.bu.Backup: void showUsage()>();

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.bu.Backup: java.lang.String TAG> = "bu";

        return;
    }
}
