abstract class com.android.commands.content.Content$Command extends java.lang.Object
{
    final android.net.Uri mUri;
    final int mUserId;

    public void <init>(android.net.Uri, int)
    {
        com.android.commands.content.Content$Command r0;
        android.net.Uri r1;
        int i0;

        r0 := @this: com.android.commands.content.Content$Command;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.content.Content$Command: android.net.Uri mUri> = r1;

        r0.<com.android.commands.content.Content$Command: int mUserId> = i0;

        return;
    }

    public static java.lang.String resolveCallingPackage()
    {
        int i0;

        i0 = staticinvoke <android.os.Process: int myUid()>();

        if i0 == 0 goto label2;

        if i0 == 2000 goto label1;

        return null;

     label1:
        return "com.android.shell";

     label2:
        return "root";
    }

    public final void execute()
    {
        com.android.commands.content.Content$Command r0;
        java.lang.String r1, $r5, $r8;
        android.os.Binder r2;
        java.lang.IllegalStateException r3;
        android.net.Uri $r4;
        int $i0, $i1, $i2;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, r14;
        java.lang.Throwable $r9;
        android.app.IActivityManager r10;
        android.content.IContentProvider r11, r13;
        android.app.ContentProviderHolder r12;
        java.io.PrintStream r17;

        r0 := @this: com.android.commands.content.Content$Command;

        $r4 = r0.<com.android.commands.content.Content$Command: android.net.Uri mUri>;

        r1 = virtualinvoke $r4.<android.net.Uri: java.lang.String getAuthority()>();

     label01:
        r10 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label02:
        r2 = new android.os.Binder;

        specialinvoke r2.<android.os.Binder: void <init>()>();

     label03:
        r11 = null;

     label04:
        $i0 = r0.<com.android.commands.content.Content$Command: int mUserId>;

        r12 = interfaceinvoke r10.<android.app.IActivityManager: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)>(r1, $i0, r2, "*cmd*");

     label05:
        if r12 == null goto label12;

        r11 = null;

     label06:
        r13 = r12.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

     label07:
        r11 = r13;

     label08:
        virtualinvoke r0.<com.android.commands.content.Content$Command: void onExecute(android.content.IContentProvider)>(r13);

     label09:
        if r13 == null goto label11;

     label10:
        $i1 = r0.<com.android.commands.content.Content$Command: int mUserId>;

        interfaceinvoke r10.<android.app.IActivityManager: void removeContentProviderExternalAsUser(java.lang.String,android.os.IBinder,int)>(r1, r2, $i1);

     label11:
        goto label30;

     label12:
        r11 = null;

     label13:
        r3 = new java.lang.IllegalStateException;

     label14:
        r11 = null;

     label15:
        r14 = new java.lang.StringBuilder;

     label16:
        r11 = null;

     label17:
        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

     label18:
        r11 = null;

     label19:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find provider: ");

     label20:
        r11 = null;

     label21:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label22:
        r11 = null;

     label23:
        $r5 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

     label24:
        r11 = null;

     label25:
        throw r3;

     label26:
        $r9 := @caughtexception;

        if r11 == null goto label28;

     label27:
        $i2 = r0.<com.android.commands.content.Content$Command: int mUserId>;

        interfaceinvoke r10.<android.app.IActivityManager: void removeContentProviderExternalAsUser(java.lang.String,android.os.IBinder,int)>(r1, r2, $i2);

     label28:
        throw $r9;

     label29:
        $r6 := @caughtexception;

        r17 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while accessing provider:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label30:
        return;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label02 to label03 with label29;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Exception from label10 to label11 with label29;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Exception from label28 to label29 with label29;
    }

    protected abstract void onExecute(android.content.IContentProvider) throws java.lang.Exception;
}
