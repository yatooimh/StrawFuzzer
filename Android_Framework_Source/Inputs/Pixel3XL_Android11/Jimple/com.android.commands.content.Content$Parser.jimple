class com.android.commands.content.Content$Parser extends java.lang.Object
{
    private static final java.lang.String ARGUMENT_ARG;
    private static final java.lang.String ARGUMENT_BIND;
    private static final java.lang.String ARGUMENT_CALL;
    private static final java.lang.String ARGUMENT_DELETE;
    private static final java.lang.String ARGUMENT_EXTRA;
    private static final java.lang.String ARGUMENT_GET_TYPE;
    private static final java.lang.String ARGUMENT_INSERT;
    private static final java.lang.String ARGUMENT_METHOD;
    private static final java.lang.String ARGUMENT_PREFIX;
    private static final java.lang.String ARGUMENT_PROJECTION;
    private static final java.lang.String ARGUMENT_QUERY;
    private static final java.lang.String ARGUMENT_READ;
    private static final java.lang.String ARGUMENT_SORT;
    private static final java.lang.String ARGUMENT_UPDATE;
    private static final java.lang.String ARGUMENT_URI;
    private static final java.lang.String ARGUMENT_USER;
    private static final java.lang.String ARGUMENT_WHERE;
    private static final java.lang.String ARGUMENT_WRITE;
    private static final java.lang.String COLON;
    private static final java.lang.String TYPE_BOOLEAN;
    private static final java.lang.String TYPE_DOUBLE;
    private static final java.lang.String TYPE_FLOAT;
    private static final java.lang.String TYPE_INTEGER;
    private static final java.lang.String TYPE_LONG;
    private static final java.lang.String TYPE_NULL;
    private static final java.lang.String TYPE_STRING;
    private final com.android.commands.content.Content$Tokenizer mTokenizer;

    public void <init>(java.lang.String[])
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String[] r1;
        com.android.commands.content.Content$Tokenizer $r2;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.commands.content.Content$Tokenizer;

        specialinvoke $r2.<com.android.commands.content.Content$Tokenizer: void <init>(java.lang.String[])>(r1);

        r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer> = $r2;

        return;
    }

    private java.lang.String argumentValueRequired(java.lang.String)
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r7, r8;
        com.android.commands.content.Content$Tokenizer $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r8 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 != 0 goto label1;

        return r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for argument: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private android.util.Pair parseBindValue()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r7, $r8, $r13, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r28, r41, r43, r44;
        com.android.commands.content.Content$Tokenizer $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r3, $r9, $r24;
        java.lang.IllegalArgumentException $r6, $r12, $r27;
        char $c0;
        int $i1, $i3;
        java.lang.Object $r14, $r15, $r16;
        android.util.Pair $r29, $r31, $r33, $r35, $r37, $r39, $r40;
        double $d0;
        java.lang.Double $r30;
        float $f0;
        java.lang.Float $r32;
        long $l2;
        java.lang.Long $r34;
        java.lang.Integer $r36;
        java.lang.Boolean $r38;
        java.util.List r42;

        r0 := @this: com.android.commands.content.Content$Parser;

        $r2 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r41 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r41);

        if $z0 != 0 goto label9;

        $r8 = ":";

        $c0 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(0);

        r42 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.util.List splitWithEscaping(java.lang.String,char)>(r41, $c0);

        $i1 = interfaceinvoke r42.<java.util.List: int size()>();

        if $i1 != 3 goto label8;

        $r14 = interfaceinvoke r42.<java.util.List: java.lang.Object get(int)>(0);

        r1 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r42.<java.util.List: java.lang.Object get(int)>(1);

        r43 = (java.lang.String) $r15;

        $r16 = interfaceinvoke r42.<java.util.List: java.lang.Object get(int)>(2);

        r44 = (java.lang.String) $r16;

        $r17 = "s";

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        if $z1 == 0 goto label1;

        $r40 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r44);

        return $r40;

     label1:
        $r18 = "b";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z2 == 0 goto label2;

        $z8 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r44);

        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r39 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r38);

        return $r39;

     label2:
        $r19 = "i";

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z3 == 0 goto label3;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r44);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r37 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r36);

        return $r37;

     label3:
        $r20 = "l";

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z4 == 0 goto label4;

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r44);

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r35 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r34);

        return $r35;

     label4:
        $r21 = "f";

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z5 == 0 goto label5;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r44);

        $r32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r33 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r32);

        return $r33;

     label5:
        $r22 = "d";

        $z6 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z6 == 0 goto label6;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r44);

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r31 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r30);

        return $r31;

     label6:
        $r23 = "n";

        $z7 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r43);

        if $z7 == 0 goto label7;

        $r29 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, null);

        return $r29;

     label7:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label8:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding not well formed: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label9:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding not well formed: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private void parseBindValue(android.content.ContentValues)
    {
        com.android.commands.content.Content$Parser r0;
        android.content.ContentValues r1;
        android.util.Pair r2;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: android.content.ContentValues;

        r2 = specialinvoke r0.<com.android.commands.content.Content$Parser: android.util.Pair parseBindValue()>();

        $r3 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.String) $r3;

        $r4 = r2.<android.util.Pair: java.lang.Object second>;

        virtualinvoke r1.<android.content.ContentValues: void putObject(java.lang.String,java.lang.Object)>($r5, $r4);

        return;
    }

    private void parseBindValue(android.os.Bundle)
    {
        com.android.commands.content.Content$Parser r0;
        android.os.Bundle r1;
        android.util.Pair r2;
        java.lang.Object $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.commands.content.Content$Parser: android.util.Pair parseBindValue()>();

        $r3 = r2.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.String) $r3;

        $r4 = r2.<android.util.Pair: java.lang.Object second>;

        virtualinvoke r1.<android.os.Bundle: void putObject(java.lang.String,java.lang.Object)>($r5, $r4);

        return;
    }

    private com.android.commands.content.Content$DeleteCommand parseDeleteCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r14, $r15, $r16, $r17;
        android.os.Bundle $r3;
        java.lang.IllegalArgumentException $r4, $r13;
        com.android.commands.content.Content$DeleteCommand $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r10;
        android.net.Uri r18;
        int i0;
        com.android.commands.content.Content$Tokenizer $r19;

        r0 := @this: com.android.commands.content.Content$Parser;

        r18 = null;

        i0 = 0;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

     label1:
        $r19 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r19);

        if r2 == null goto label6;

        $r6 = "--uri";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r17 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        r18 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r17);

        goto label1;

     label2:
        $r7 = "--user";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        $r16 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        goto label1;

     label3:
        $r8 = "--where";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        $r15 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-selection", $r15);

        goto label1;

     label4:
        $r9 = "--extra";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.os.Bundle)>($r3);

        goto label1;

     label5:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label6:
        if r18 == null goto label7;

        $r5 = new com.android.commands.content.Content$DeleteCommand;

        specialinvoke $r5.<com.android.commands.content.Content$DeleteCommand: void <init>(android.net.Uri,int,android.os.Bundle)>(r18, i0, $r3);

        return $r5;

     label7:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r4;
    }

    private com.android.commands.content.Content$GetTypeCommand parseGetTypeCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r4, $r5, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r2, $r9;
        com.android.commands.content.Content$GetTypeCommand $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;
        android.net.Uri r13;
        int i0;
        com.android.commands.content.Content$Tokenizer $r14;

        r0 := @this: com.android.commands.content.Content$Parser;

        r13 = null;

        i0 = 0;

     label1:
        $r14 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r1 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r14);

        if r1 == null goto label4;

        $r4 = "--uri";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r12 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        goto label1;

     label2:
        $r5 = "--user";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r11 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        goto label1;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        if r13 == null goto label5;

        $r3 = new com.android.commands.content.Content$GetTypeCommand;

        specialinvoke $r3.<com.android.commands.content.Content$GetTypeCommand: void <init>(android.net.Uri,int)>(r13, i0);

        return $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r2;
    }

    private com.android.commands.content.Content$InsertCommand parseInsertCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r3, $r9, $r10, $r11, $r12, $r17, $r18, $r19;
        android.content.ContentValues $r4;
        android.os.Bundle $r5;
        java.lang.IllegalArgumentException $r6, $r7, $r16;
        int $i0, i1;
        com.android.commands.content.Content$InsertCommand $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r13;
        android.net.Uri r20;
        com.android.commands.content.Content$Tokenizer $r21;

        r0 := @this: com.android.commands.content.Content$Parser;

        r20 = null;

        i1 = 0;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label1:
        $r21 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r3 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r21);

        if r3 == null goto label6;

        $r9 = "--uri";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        r20 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r19);

        goto label1;

     label2:
        $r10 = "--user";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label3;

        $r18 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        goto label1;

     label3:
        $r11 = "--bind";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label4;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.content.ContentValues)>($r4);

        goto label1;

     label4:
        $r12 = "--extra";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.os.Bundle)>($r5);

        goto label1;

     label5:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label6:
        if r20 == null goto label8;

        $i0 = virtualinvoke $r4.<android.content.ContentValues: int size()>();

        if $i0 == 0 goto label7;

        $r8 = new com.android.commands.content.Content$InsertCommand;

        specialinvoke $r8.<com.android.commands.content.Content$InsertCommand: void <init>(android.net.Uri,int,android.content.ContentValues,android.os.Bundle)>(r20, i1, $r4, $r5);

        return $r8;

     label7:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bindings not specified. Did you specify --bind argument(s)?");

        throw $r7;

     label8:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r6;
    }

    private com.android.commands.content.Content$ReadCommand parseReadCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r4, $r5, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r2, $r9;
        com.android.commands.content.Content$ReadCommand $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;
        android.net.Uri r13;
        int i0;
        com.android.commands.content.Content$Tokenizer $r14;

        r0 := @this: com.android.commands.content.Content$Parser;

        r13 = null;

        i0 = 0;

     label1:
        $r14 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r1 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r14);

        if r1 == null goto label4;

        $r4 = "--uri";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r12 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        goto label1;

     label2:
        $r5 = "--user";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r11 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        goto label1;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        if r13 == null goto label5;

        $r3 = new com.android.commands.content.Content$ReadCommand;

        specialinvoke $r3.<com.android.commands.content.Content$ReadCommand: void <init>(android.net.Uri,int)>(r13, i0);

        return $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r2;
    }

    private com.android.commands.content.Content$UpdateCommand parseUpdateCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r3, $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21;
        android.content.ContentValues $r4;
        android.os.Bundle $r5;
        java.lang.IllegalArgumentException $r6, $r7, $r17;
        int $i0, i1;
        com.android.commands.content.Content$UpdateCommand $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r14;
        android.net.Uri r22;
        com.android.commands.content.Content$Tokenizer $r23;

        r0 := @this: com.android.commands.content.Content$Parser;

        r22 = null;

        i1 = 0;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label1:
        $r23 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r3 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r23);

        if r3 == null goto label7;

        $r9 = "--uri";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r21 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        r22 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r21);

        goto label1;

     label2:
        $r10 = "--user";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label3;

        $r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        goto label1;

     label3:
        $r11 = "--where";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label4;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-selection", $r19);

        goto label1;

     label4:
        $r12 = "--bind";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.content.ContentValues)>($r4);

        goto label1;

     label5:
        $r13 = "--extra";

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 == 0 goto label6;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.os.Bundle)>($r5);

        goto label1;

     label6:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label7:
        if r22 == null goto label9;

        $i0 = virtualinvoke $r4.<android.content.ContentValues: int size()>();

        if $i0 == 0 goto label8;

        $r8 = new com.android.commands.content.Content$UpdateCommand;

        specialinvoke $r8.<com.android.commands.content.Content$UpdateCommand: void <init>(android.net.Uri,int,android.content.ContentValues,android.os.Bundle)>(r22, i1, $r4, $r5);

        return $r8;

     label8:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bindings not specified. Did you specify --bind argument(s)?");

        throw $r7;

     label9:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r6;
    }

    private com.android.commands.content.Content$WriteCommand parseWriteCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r4, $r5, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r2, $r9;
        com.android.commands.content.Content$WriteCommand $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;
        android.net.Uri r13;
        int i0;
        com.android.commands.content.Content$Tokenizer $r14;

        r0 := @this: com.android.commands.content.Content$Parser;

        r13 = null;

        i0 = 0;

     label1:
        $r14 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r1 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r14);

        if r1 == null goto label4;

        $r4 = "--uri";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r12 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        goto label1;

     label2:
        $r5 = "--user";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r11 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        goto label1;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        if r13 == null goto label5;

        $r3 = new com.android.commands.content.Content$WriteCommand;

        specialinvoke $r3.<com.android.commands.content.Content$WriteCommand: void <init>(android.net.Uri,int)>(r13, i0);

        return $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r2;
    }

    private java.util.List splitWithEscaping(java.lang.String, char)
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, $r6, $r8;
        char c0, c1, $c4;
        java.util.ArrayList $r4;
        java.lang.StringBuilder $r5;
        int $i2, $i3, i5;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i5 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i2 goto label6;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if c1 != 92 goto label3;

        i5 = i5 + 1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 == $i3 goto label2;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        goto label5;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid escaping");

        throw $r9;

     label3:
        if c1 != c0 goto label4;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label5;

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r4;
    }

    public com.android.commands.content.Content$CallCommand parseCallCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r2, $r7, $r8, $r9, $r10, $r11, $r16, $r17, $r18, r19, r20;
        android.os.Bundle $r3;
        java.lang.IllegalArgumentException $r4, $r5, $r15;
        com.android.commands.content.Content$CallCommand $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r12;
        int i0;
        android.net.Uri r21;
        com.android.commands.content.Content$Tokenizer $r22;

        r0 := @this: com.android.commands.content.Content$Parser;

        r19 = null;

        i0 = 0;

        r20 = null;

        r21 = null;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

     label1:
        $r22 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r22);

        if r2 == null goto label7;

        $r7 = "--uri";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r18 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        r21 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r18);

        goto label1;

     label2:
        $r8 = "--user";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        $r17 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        goto label1;

     label3:
        $r9 = "--method";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        goto label1;

     label4:
        $r10 = "--arg";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        goto label1;

     label5:
        $r11 = "--extra";

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.os.Bundle)>($r3);

        goto label1;

     label6:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label7:
        if r21 == null goto label9;

        if r19 == null goto label8;

        $r6 = new com.android.commands.content.Content$CallCommand;

        specialinvoke $r6.<com.android.commands.content.Content$CallCommand: void <init>(android.net.Uri,int,java.lang.String,java.lang.String,android.os.Bundle)>(r21, i0, r19, r20, $r3);

        return $r6;

     label8:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider method not specified.");

        throw $r5;

     label9:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r4;
    }

    public com.android.commands.content.Content$Command parseCommand()
    {
        com.android.commands.content.Content$Parser r0;
        com.android.commands.content.Content$Tokenizer $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r25, $r27, r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.commands.content.Content$GetTypeCommand $r13;
        com.android.commands.content.Content$WriteCommand $r14;
        com.android.commands.content.Content$ReadCommand $r15;
        com.android.commands.content.Content$CallCommand $r16;
        com.android.commands.content.Content$QueryCommand $r17;
        com.android.commands.content.Content$UpdateCommand $r18;
        com.android.commands.content.Content$DeleteCommand $r19;
        com.android.commands.content.Content$InsertCommand $r20;
        java.lang.Throwable $r21;
        java.io.PrintStream $r22, r32;
        java.lang.StringBuilder r34, r36;
        java.lang.IllegalArgumentException r35, r37;

        r0 := @this: com.android.commands.content.Content$Parser;

     label01:
        $r1 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r28 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r1);

        $r2 = "insert";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z0 == 0 goto label02;

        $r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$InsertCommand parseInsertCommand()>();

        return $r20;

     label02:
        $r3 = "delete";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z1 == 0 goto label03;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$DeleteCommand parseDeleteCommand()>();

        return $r19;

     label03:
        $r4 = "update";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z2 == 0 goto label04;

        $r18 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$UpdateCommand parseUpdateCommand()>();

        return $r18;

     label04:
        $r5 = "query";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z3 == 0 goto label05;

        $r17 = virtualinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$QueryCommand parseQueryCommand()>();

        return $r17;

     label05:
        $r6 = "call";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z4 == 0 goto label06;

        $r16 = virtualinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$CallCommand parseCallCommand()>();

        return $r16;

     label06:
        $r7 = "read";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z5 == 0 goto label07;

        $r15 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$ReadCommand parseReadCommand()>();

        return $r15;

     label07:
        $r8 = "write";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z6 == 0 goto label08;

        $r14 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$WriteCommand parseWriteCommand()>();

        return $r14;

     label08:
        $r9 = "gettype";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z7 == 0 goto label09;

        $r13 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$GetTypeCommand parseGetTypeCommand()>();

        return $r13;

     label09:
        r35 = new java.lang.IllegalArgumentException;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operation: ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r12 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw r35;

     label10:
        $r21 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("usage: adb shell content [subcommand] [options]\n\nusage: adb shell content insert --uri <URI> [--user <USER_ID>] --bind <BINDING> [--bind <BINDING>...] [--extra <BINDING>...]\n  <URI> a content provider URI.\n  <BINDING> binds a typed value to a column and is formatted:\n  <COLUMN_NAME>:<TYPE>:<COLUMN_VALUE> where:\n  <TYPE> specifies data type such as:\n  b - boolean, s - string, i - integer, l - long, f - float, d - double, n - null\n  Note: Omit the value for passing an empty string, e.g column:s:\n  Example:\n  # Add \"new_setting\" secure setting with value \"new_value\".\n  adb shell content insert --uri content://settings/secure --bind name:s:new_setting --bind value:s:new_value\n\nusage: adb shell content update --uri <URI> [--user <USER_ID>] [--where <WHERE>] [--extra <BINDING>...]\n  <WHERE> is a SQL style where clause in quotes (You have to escape single quotes - see example below).\n  Example:\n  # Change \"new_setting\" secure setting to \"newer_value\".\n  adb shell content update --uri content://settings/secure --bind value:s:newer_value --where \"name=\'new_setting\'\"\n\nusage: adb shell content delete --uri <URI> [--user <USER_ID>] --bind <BINDING> [--bind <BINDING>...] [--where <WHERE>] [--extra <BINDING>...]\n  Example:\n  # Remove \"new_setting\" secure setting.\n  adb shell content delete --uri content://settings/secure --where \"name=\'new_setting\'\"\n\nusage: adb shell content query --uri <URI> [--user <USER_ID>] [--projection <PROJECTION>] [--where <WHERE>] [--sort <SORT_ORDER>] [--extra <BINDING>...]\n  <PROJECTION> is a list of colon separated column names and is formatted:\n  <COLUMN_NAME>[:<COLUMN_NAME>...]\n  <SORT_ORDER> is the order in which rows in the result should be sorted.\n  Example:\n  # Select \"name\" and \"value\" columns from secure settings where \"name\" is equal to \"new_setting\" and sort the result by name in ascending order.\n  adb shell content query --uri content://settings/secure --projection name:value --where \"name=\'new_setting\'\" --sort \"name ASC\"\n\nusage: adb shell content call --uri <URI> --method <METHOD> [--arg <ARG>]\n       [--extra <BINDING> ...]\n  <METHOD> is the name of a provider-defined method\n  <ARG> is an optional string argument\n  <BINDING> is like --bind above, typed data of the form <KEY>:{b,s,i,l,f,d}:<VAL>\n\nusage: adb shell content read --uri <URI> [--user <USER_ID>]\n  Example:\n  adb shell \'content read --uri content://settings/system/ringtone_cache\' > host.ogg\n\nusage: adb shell content write --uri <URI> [--user <USER_ID>]\n  Example:\n  adb shell \'content write --uri content://settings/system/ringtone_cache\' < host.ogg\n\nusage: adb shell content gettype --uri <URI> [--user <USER_ID>]\n  Example:\n  adb shell content gettype --uri content://media/internal/audio/media/\n\n");

        r32 = <java.lang.System: java.io.PrintStream out>;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ERROR] ");

        r37 = (java.lang.IllegalArgumentException) $r21;

        $r25 = virtualinvoke r37.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<java.io.PrintStream: void println(java.lang.String)>($r27);

        return null;

        catch java.lang.IllegalArgumentException from label01 to label02 with label10;
        catch java.lang.IllegalArgumentException from label02 to label03 with label10;
        catch java.lang.IllegalArgumentException from label03 to label04 with label10;
        catch java.lang.IllegalArgumentException from label04 to label05 with label10;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
        catch java.lang.IllegalArgumentException from label07 to label08 with label10;
        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
        catch java.lang.IllegalArgumentException from label09 to label10 with label10;
    }

    public com.android.commands.content.Content$QueryCommand parseQueryCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r19, $r20, $r21;
        android.os.Bundle $r3;
        java.lang.IllegalArgumentException $r4, $r15;
        com.android.commands.content.Content$QueryCommand $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r12;
        android.net.Uri r22;
        int i0;
        java.lang.String[] r23;
        com.android.commands.content.Content$Tokenizer $r24;

        r0 := @this: com.android.commands.content.Content$Parser;

        r22 = null;

        i0 = 0;

        r23 = null;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

     label1:
        $r24 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r24);

        if r2 == null goto label8;

        $r6 = "--uri";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r21 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        r22 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r21);

        goto label1;

     label2:
        $r7 = "--user";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        $r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        goto label1;

     label3:
        $r8 = "--where";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-selection", $r19);

        goto label1;

     label4:
        $r9 = "--sort";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        $r18 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android:query-arg-sql-sort-order", $r18);

        goto label1;

     label5:
        $r10 = "--projection";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

        $r17 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r2);

        r23 = virtualinvoke $r17.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\\s]*:[\\s]*");

        goto label1;

     label6:
        $r11 = "--extra";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label7;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.os.Bundle)>($r3);

        goto label1;

     label7:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label8:
        if r22 == null goto label9;

        $r5 = new com.android.commands.content.Content$QueryCommand;

        specialinvoke $r5.<com.android.commands.content.Content$QueryCommand: void <init>(android.net.Uri,int,java.lang.String[],android.os.Bundle)>(r22, i0, r23, $r3);

        return $r5;

     label9:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r4;
    }

    public static void <clinit>()
    {
        <com.android.commands.content.Content$Parser: java.lang.String TYPE_STRING> = "s";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_NULL> = "n";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_LONG> = "l";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_INTEGER> = "i";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_FLOAT> = "f";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_DOUBLE> = "d";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_BOOLEAN> = "b";

        <com.android.commands.content.Content$Parser: java.lang.String COLON> = ":";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_WRITE> = "write";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_WHERE> = "--where";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_USER> = "--user";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_URI> = "--uri";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_UPDATE> = "update";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_SORT> = "--sort";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_READ> = "read";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_QUERY> = "query";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_PROJECTION> = "--projection";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_PREFIX> = "--";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_METHOD> = "--method";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_INSERT> = "insert";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_GET_TYPE> = "gettype";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_EXTRA> = "--extra";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_DELETE> = "delete";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_CALL> = "call";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_BIND> = "--bind";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_ARG> = "--arg";

        return;
    }
}
