class com.android.commands.hid.Device$DeviceHandler extends android.os.Handler
{
    private int mBarrierToken;
    private long mPtr;
    final com.android.commands.hid.Device this$0;

    public void <init>(com.android.commands.hid.Device, android.os.Looper)
    {
        com.android.commands.hid.Device$DeviceHandler r0;
        com.android.commands.hid.Device r1;
        android.os.Looper r2;

        r0 := @this: com.android.commands.hid.Device$DeviceHandler;

        r1 := @parameter0: com.android.commands.hid.Device;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.commands.hid.Device$DeviceHandler: com.android.commands.hid.Device this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.commands.hid.Device$DeviceHandler r0;
        int i0, $i1, $i2, $i3, $i4, $i10;
        java.lang.Object r1, $r2, $r3, $r4, $r9, $r11, $r16;
        com.android.commands.hid.Device$DeviceCallback $r5;
        com.android.commands.hid.Device $r6, $r14, $r15;
        java.lang.String $r7;
        byte[] $r8, $r10, $r12;
        long $l5, l13, l14, l15;
        byte $b6, $b8, $b11;
        java.lang.IllegalArgumentException $r13;
        android.os.Looper $r17;
        java.lang.Throwable $r18;
        android.os.Message r19;
        com.android.internal.os.SomeArgs r21;

        r0 := @this: com.android.commands.hid.Device$DeviceHandler;

        r19 := @parameter0: android.os.Message;

        i0 = r19.<android.os.Message: int what>;

        if i0 == 1 goto label13;

        if i0 == 2 goto label11;

        if i0 == 3 goto label09;

        if i0 != 4 goto label08;

        l13 = r0.<com.android.commands.hid.Device$DeviceHandler: long mPtr>;

        $b11 = l13 cmp 0L;

        if $b11 == 0 goto label01;

        staticinvoke <com.android.commands.hid.Device: void access$400(long)>(l13);

        $r17 = virtualinvoke r0.<com.android.commands.hid.Device$DeviceHandler: android.os.Looper getLooper()>();

        virtualinvoke $r17.<android.os.Looper: void quitSafely()>();

        r0.<com.android.commands.hid.Device$DeviceHandler: long mPtr> = 0L;

        goto label02;

     label01:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("HidDevice", "Tried to close already closed device.");

     label02:
        $r14 = r0.<com.android.commands.hid.Device$DeviceHandler: com.android.commands.hid.Device this$0>;

        r1 = staticinvoke <com.android.commands.hid.Device: java.lang.Object access$500(com.android.commands.hid.Device)>($r14);

        entermonitor r1;

     label03:
        $r15 = r0.<com.android.commands.hid.Device$DeviceHandler: com.android.commands.hid.Device this$0>;

        $r16 = staticinvoke <com.android.commands.hid.Device: java.lang.Object access$500(com.android.commands.hid.Device)>($r15);

        virtualinvoke $r16.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label04:
        goto label14;

     label05:
        $r18 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        throw $r18;

     label08:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown device message");

        throw $r13;

     label09:
        l14 = r0.<com.android.commands.hid.Device$DeviceHandler: long mPtr>;

        $b8 = l14 cmp 0L;

        if $b8 == 0 goto label10;

        $i10 = r19.<android.os.Message: int arg1>;

        $r11 = r19.<android.os.Message: java.lang.Object obj>;

        $r12 = (byte[]) $r11;

        staticinvoke <com.android.commands.hid.Device: void access$300(long,int,byte[])>(l14, $i10, $r12);

        goto label14;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("HidDevice", "Tried to send feature report reply to closed device.");

        goto label14;

     label11:
        l15 = r0.<com.android.commands.hid.Device$DeviceHandler: long mPtr>;

        $b6 = l15 cmp 0L;

        if $b6 == 0 goto label12;

        $r9 = r19.<android.os.Message: java.lang.Object obj>;

        $r10 = (byte[]) $r9;

        staticinvoke <com.android.commands.hid.Device: void access$200(long,byte[])>(l15, $r10);

        goto label14;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("HidDevice", "Tried to send report to closed device.");

        goto label14;

     label13:
        $r2 = r19.<android.os.Message: java.lang.Object obj>;

        r21 = (com.android.internal.os.SomeArgs) $r2;

        $r3 = r21.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r7 = (java.lang.String) $r3;

        $i1 = r21.<com.android.internal.os.SomeArgs: int argi1>;

        $i2 = r21.<com.android.internal.os.SomeArgs: int argi2>;

        $i3 = r21.<com.android.internal.os.SomeArgs: int argi3>;

        $i4 = r21.<com.android.internal.os.SomeArgs: int argi4>;

        $r4 = r21.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r8 = (byte[]) $r4;

        $r5 = new com.android.commands.hid.Device$DeviceCallback;

        $r6 = r0.<com.android.commands.hid.Device$DeviceHandler: com.android.commands.hid.Device this$0>;

        specialinvoke $r5.<com.android.commands.hid.Device$DeviceCallback: void <init>(com.android.commands.hid.Device,com.android.commands.hid.Device$1)>($r6, null);

        $l5 = staticinvoke <com.android.commands.hid.Device: long access$100(java.lang.String,int,int,int,int,byte[],com.android.commands.hid.Device$DeviceCallback)>($r7, $i1, $i2, $i3, $i4, $r8, $r5);

        r0.<com.android.commands.hid.Device$DeviceHandler: long mPtr> = $l5;

        virtualinvoke r0.<com.android.commands.hid.Device$DeviceHandler: void pauseEvents()>();

     label14:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    public void pauseEvents()
    {
        com.android.commands.hid.Device$DeviceHandler r0;
        android.os.MessageQueue $r2;
        int $i0;

        r0 := @this: com.android.commands.hid.Device$DeviceHandler;

        virtualinvoke r0.<com.android.commands.hid.Device$DeviceHandler: android.os.Looper getLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $i0 = virtualinvoke $r2.<android.os.MessageQueue: int postSyncBarrier()>();

        r0.<com.android.commands.hid.Device$DeviceHandler: int mBarrierToken> = $i0;

        return;
    }

    public void resumeEvents()
    {
        com.android.commands.hid.Device$DeviceHandler r0;
        android.os.MessageQueue $r2;
        int $i0;

        r0 := @this: com.android.commands.hid.Device$DeviceHandler;

        virtualinvoke r0.<com.android.commands.hid.Device$DeviceHandler: android.os.Looper getLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $i0 = r0.<com.android.commands.hid.Device$DeviceHandler: int mBarrierToken>;

        virtualinvoke $r2.<android.os.MessageQueue: void removeSyncBarrier(int)>($i0);

        r0.<com.android.commands.hid.Device$DeviceHandler: int mBarrierToken> = 0;

        return;
    }
}
