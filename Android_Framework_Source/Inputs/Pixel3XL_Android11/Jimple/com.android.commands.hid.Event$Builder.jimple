class com.android.commands.hid.Event$Builder extends java.lang.Object
{
    private com.android.commands.hid.Event mEvent;

    public void <init>()
    {
        com.android.commands.hid.Event$Builder r0;
        com.android.commands.hid.Event $r1;

        r0 := @this: com.android.commands.hid.Event$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.commands.hid.Event;

        specialinvoke $r1.<com.android.commands.hid.Event: void <init>()>();

        r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent> = $r1;

        return;
    }

    static void access$1100(com.android.commands.hid.Event$Builder, java.lang.String)
    {
        com.android.commands.hid.Event$Builder r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.commands.hid.Event$Builder;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.commands.hid.Event$Builder: void setCommand(java.lang.String)>(r1);

        return;
    }

    private void setCommand(java.lang.String)
    {
        com.android.commands.hid.Event$Builder r0;
        java.lang.String r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: java.lang.String access$102(com.android.commands.hid.Event,java.lang.String)>($r2, r1);

        return;
    }

    public com.android.commands.hid.Event build()
    {
        com.android.commands.hid.Event$Builder r0;
        com.android.commands.hid.Event $r1, $r3, $r6, $r9, $r12, $r15, $r18, $r20, $r23;
        int $i0, $i1;
        java.lang.IllegalStateException $r2, $r5, $r17, $r19, $r22;
        java.lang.String $r4, $r7, $r8, $r10, $r11, $r13, $r14;
        boolean $z0, $z1, $z2;
        byte[] $r16, $r21;

        r0 := @this: com.android.commands.hid.Event$Builder;

        $r1 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $i0 = staticinvoke <com.android.commands.hid.Event: int access$000(com.android.commands.hid.Event)>($r1);

        if $i0 == -1 goto label8;

        $r3 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r4 = staticinvoke <com.android.commands.hid.Event: java.lang.String access$100(com.android.commands.hid.Event)>($r3);

        if $r4 == null goto label7;

        $r7 = "register";

        $r6 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r8 = staticinvoke <com.android.commands.hid.Event: java.lang.String access$100(com.android.commands.hid.Event)>($r6);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r20 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r21 = staticinvoke <com.android.commands.hid.Event: byte[] access$300(com.android.commands.hid.Event)>($r20);

        if $r21 == null goto label1;

        goto label6;

     label1:
        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Device registration is missing descriptor");

        throw $r22;

     label2:
        $r10 = "delay";

        $r9 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r11 = staticinvoke <com.android.commands.hid.Event: java.lang.String access$100(com.android.commands.hid.Event)>($r9);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label4;

        $r18 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $i1 = staticinvoke <com.android.commands.hid.Event: int access$1000(com.android.commands.hid.Event)>($r18);

        if $i1 <= 0 goto label3;

        goto label6;

     label3:
        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Delay has missing or invalid duration");

        throw $r19;

     label4:
        $r13 = "report";

        $r12 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r14 = staticinvoke <com.android.commands.hid.Event: java.lang.String access$100(com.android.commands.hid.Event)>($r12);

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label6;

        $r15 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        $r16 = staticinvoke <com.android.commands.hid.Event: byte[] access$400(com.android.commands.hid.Event)>($r15);

        if $r16 == null goto label5;

        goto label6;

     label5:
        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Report command is missing report data");

        throw $r17;

     label6:
        $r23 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        return $r23;

     label7:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Event does not contain a command");

        throw $r5;

     label8:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No event id");

        throw $r2;
    }

    public void setBus(com.android.commands.hid.Event$Bus)
    {
        com.android.commands.hid.Event$Builder r0;
        com.android.commands.hid.Event$Bus r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: com.android.commands.hid.Event$Bus;

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: com.android.commands.hid.Event$Bus access$902(com.android.commands.hid.Event,com.android.commands.hid.Event$Bus)>($r2, r1);

        return;
    }

    public void setDescriptor(byte[])
    {
        com.android.commands.hid.Event$Builder r0;
        byte[] r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: byte[] access$302(com.android.commands.hid.Event,byte[])>($r2, r1);

        return;
    }

    public void setDuration(int)
    {
        com.android.commands.hid.Event$Builder r0;
        int i0;
        com.android.commands.hid.Event $r1;

        r0 := @this: com.android.commands.hid.Event$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: int access$1002(com.android.commands.hid.Event,int)>($r1, i0);

        return;
    }

    public void setFeatureReports(android.util.SparseArray)
    {
        com.android.commands.hid.Event$Builder r0;
        android.util.SparseArray r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: android.util.SparseArray;

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: android.util.SparseArray access$502(com.android.commands.hid.Event,android.util.SparseArray)>($r2, r1);

        return;
    }

    public void setId(int)
    {
        com.android.commands.hid.Event$Builder r0;
        int i0;
        com.android.commands.hid.Event $r1;

        r0 := @this: com.android.commands.hid.Event$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: int access$002(com.android.commands.hid.Event,int)>($r1, i0);

        return;
    }

    public void setName(java.lang.String)
    {
        com.android.commands.hid.Event$Builder r0;
        java.lang.String r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: java.lang.String access$202(com.android.commands.hid.Event,java.lang.String)>($r2, r1);

        return;
    }

    public void setOutputs(java.util.Map)
    {
        com.android.commands.hid.Event$Builder r0;
        java.util.Map r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: java.util.Map access$602(com.android.commands.hid.Event,java.util.Map)>($r2, r1);

        return;
    }

    public void setPid(int)
    {
        com.android.commands.hid.Event$Builder r0;
        int i0;
        com.android.commands.hid.Event $r1;

        r0 := @this: com.android.commands.hid.Event$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: int access$802(com.android.commands.hid.Event,int)>($r1, i0);

        return;
    }

    public void setReport(byte[])
    {
        com.android.commands.hid.Event$Builder r0;
        byte[] r1;
        com.android.commands.hid.Event $r2;

        r0 := @this: com.android.commands.hid.Event$Builder;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: byte[] access$402(com.android.commands.hid.Event,byte[])>($r2, r1);

        return;
    }

    public void setVid(int)
    {
        com.android.commands.hid.Event$Builder r0;
        int i0;
        com.android.commands.hid.Event $r1;

        r0 := @this: com.android.commands.hid.Event$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event mEvent>;

        staticinvoke <com.android.commands.hid.Event: int access$702(com.android.commands.hid.Event,int)>($r1, i0);

        return;
    }
}
