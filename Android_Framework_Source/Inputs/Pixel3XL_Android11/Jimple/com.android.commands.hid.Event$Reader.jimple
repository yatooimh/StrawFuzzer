public class com.android.commands.hid.Event$Reader extends java.lang.Object
{
    private android.util.JsonReader mReader;

    public void <init>(java.io.InputStreamReader)
    {
        com.android.commands.hid.Event$Reader r0;
        android.util.JsonReader $r1;
        java.io.InputStreamReader r2;

        r0 := @this: com.android.commands.hid.Event$Reader;

        r2 := @parameter0: java.io.InputStreamReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.JsonReader;

        specialinvoke $r1.<android.util.JsonReader: void <init>(java.io.Reader)>(r2);

        r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader> = $r1;

        virtualinvoke $r1.<android.util.JsonReader: void setLenient(boolean)>(1);

        return;
    }

    private void consumeRemainingElements() throws java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        android.util.JsonReader $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.commands.hid.Event$Reader;

     label1:
        $r1 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z0 = virtualinvoke $r1.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r2.<android.util.JsonReader: void skipValue()>();

        goto label1;

     label2:
        return;
    }

    private com.android.commands.hid.Event$Bus readBus() throws java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        android.util.JsonReader $r1;
        java.lang.String $r2, $r3;
        com.android.commands.hid.Event$Bus $r4;

        r0 := @this: com.android.commands.hid.Event$Reader;

        $r1 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r2 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = staticinvoke <com.android.commands.hid.Event$Bus: com.android.commands.hid.Event$Bus valueOf(java.lang.String)>($r3);

        return $r4;
    }

    private byte[] readData() throws java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        int i0, $i1, $i2, $i3, i6;
        java.util.ArrayList $r2;
        android.util.JsonReader $r3, $r4, $r5, $r9, $r13;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Integer $r7, $r11;
        java.lang.IllegalStateException $r8, $r14;
        byte $b4, $b5;
        java.lang.String $r10;
        java.lang.Throwable $r12;
        byte[] r15;

        r0 := @this: com.android.commands.hid.Event$Reader;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r3.<android.util.JsonReader: void beginArray()>();

     label2:
        $r4 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z0 = virtualinvoke $r4.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r10 = virtualinvoke $r9.<android.util.JsonReader: java.lang.String nextString()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r10);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label3:
        goto label2;

     label4:
        $r5 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r5.<android.util.JsonReader: void endArray()>();

     label5:
        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r15 = newarray (byte)[$i1];

        i6 = 0;

     label6:
        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label8;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i3 = i0 & 255;

        if $i3 != i0 goto label7;

        $b4 = (byte) i0;

        $b5 = (byte) $b4;

        r15[i6] = $b5;

        i6 = i6 + 1;

        goto label6;

     label7:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid data, all values must be byte-sized");

        throw $r8;

     label8:
        return r15;

     label9:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r13 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r13.<android.util.JsonReader: void endArray()>();

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Encountered malformed data.", $r12);

        throw $r14;

        catch java.lang.IllegalStateException from label1 to label2 with label9;
        catch java.lang.NumberFormatException from label1 to label2 with label9;
        catch java.lang.IllegalStateException from label2 to label3 with label9;
        catch java.lang.NumberFormatException from label2 to label3 with label9;
        catch java.lang.IllegalStateException from label4 to label5 with label9;
        catch java.lang.NumberFormatException from label4 to label5 with label9;
    }

    private android.util.SparseArray readFeatureReports() throws java.lang.IllegalStateException, java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        java.lang.String r1, $r13;
        int i0, i1;
        android.util.SparseArray $r2;
        android.util.JsonReader $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r14;
        java.lang.IllegalStateException $r16, r19;
        byte[] r18;
        byte b2;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.commands.hid.Event$Reader;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

     label01:
        $r3 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r3.<android.util.JsonReader: void beginArray()>();

     label02:
        $r4 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z0 = virtualinvoke $r4.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label24;

     label03:
        i1 = 0;

        r18 = null;

     label04:
        $r6 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r6.<android.util.JsonReader: void beginObject()>();

     label05:
        $r7 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z1 = virtualinvoke $r7.<android.util.JsonReader: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r9 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        r1 = virtualinvoke $r9.<android.util.JsonReader: java.lang.String nextName()>();

     label06:
        b2 = -1;

     label07:
        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

     label08:
        if i0 == 3355 goto label12;

        if i0 == 3076010 goto label10;

     label09:
        goto label14;

     label10:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("data");

        if $z3 == 0 goto label09;

     label11:
        b2 = 1;

        goto label14;

     label12:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z2 == 0 goto label09;

     label13:
        b2 = 0;

     label14:
        if b2 == 0 goto label18;

        if b2 != 1 goto label17;

     label15:
        r18 = specialinvoke r0.<com.android.commands.hid.Event$Reader: byte[] readData()>();

     label16:
        goto label19;

     label17:
        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r10 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r10.<android.util.JsonReader: void endObject()>();

        r19 = new java.lang.IllegalStateException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key in feature report: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw r19;

     label18:
        i1 = specialinvoke r0.<com.android.commands.hid.Event$Reader: int readInt()>();

     label19:
        goto label05;

     label20:
        $r8 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r8.<android.util.JsonReader: void endObject()>();

     label21:
        if r18 == null goto label23;

     label22:
        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r18);

     label23:
        goto label02;

     label24:
        $r5 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r5.<android.util.JsonReader: void endArray()>();

     label25:
        return $r2;

     label26:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r15 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r15.<android.util.JsonReader: void endArray()>();

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Encountered malformed data.", $r14);

        throw $r16;

        catch java.lang.IllegalStateException from label01 to label02 with label26;
        catch java.lang.NumberFormatException from label01 to label02 with label26;
        catch java.lang.IllegalStateException from label02 to label03 with label26;
        catch java.lang.NumberFormatException from label02 to label03 with label26;
        catch java.lang.IllegalStateException from label04 to label05 with label26;
        catch java.lang.NumberFormatException from label04 to label05 with label26;
        catch java.lang.IllegalStateException from label05 to label06 with label26;
        catch java.lang.NumberFormatException from label05 to label06 with label26;
        catch java.lang.IllegalStateException from label07 to label08 with label26;
        catch java.lang.NumberFormatException from label07 to label08 with label26;
        catch java.lang.IllegalStateException from label10 to label11 with label26;
        catch java.lang.NumberFormatException from label10 to label11 with label26;
        catch java.lang.IllegalStateException from label12 to label13 with label26;
        catch java.lang.NumberFormatException from label12 to label13 with label26;
        catch java.lang.IllegalStateException from label15 to label16 with label26;
        catch java.lang.NumberFormatException from label15 to label16 with label26;
        catch java.lang.IllegalStateException from label17 to label18 with label26;
        catch java.lang.NumberFormatException from label17 to label18 with label26;
        catch java.lang.IllegalStateException from label18 to label19 with label26;
        catch java.lang.NumberFormatException from label18 to label19 with label26;
        catch java.lang.IllegalStateException from label20 to label21 with label26;
        catch java.lang.NumberFormatException from label20 to label21 with label26;
        catch java.lang.IllegalStateException from label22 to label23 with label26;
        catch java.lang.NumberFormatException from label22 to label23 with label26;
        catch java.lang.IllegalStateException from label24 to label25 with label26;
        catch java.lang.NumberFormatException from label24 to label25 with label26;
    }

    private int readInt() throws java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        android.util.JsonReader $r1;
        java.lang.String $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: com.android.commands.hid.Event$Reader;

        $r1 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r2 = virtualinvoke $r1.<android.util.JsonReader: java.lang.String nextString()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    private java.util.Map readOutputs() throws java.lang.IllegalStateException, java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        java.lang.String r2, $r18;
        int i0;
        java.util.HashMap $r3;
        android.util.JsonReader $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r15, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.nio.ByteBuffer $r10;
        java.lang.Throwable $r19;
        java.lang.IllegalStateException $r21, r24;
        byte[] r22, r23;
        byte b1;
        java.lang.StringBuilder r25;

        r0 := @this: com.android.commands.hid.Event$Reader;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

     label01:
        $r4 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r4.<android.util.JsonReader: void beginArray()>();

     label02:
        $r5 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z0 = virtualinvoke $r5.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label28;

     label03:
        r22 = null;

        r23 = null;

     label04:
        $r7 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r7.<android.util.JsonReader: void beginObject()>();

     label05:
        $r8 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z1 = virtualinvoke $r8.<android.util.JsonReader: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r12 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        r2 = virtualinvoke $r12.<android.util.JsonReader: java.lang.String nextName()>();

     label06:
        b1 = -1;

     label07:
        i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

     label08:
        if i0 == -1724546052 goto label14;

        if i0 == -1005512447 goto label12;

        if i0 == -340323263 goto label10;

     label09:
        goto label16;

     label10:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("response");

        if $z4 == 0 goto label09;

     label11:
        b1 = 2;

        goto label16;

     label12:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("output");

        if $z3 == 0 goto label09;

     label13:
        b1 = 1;

        goto label16;

     label14:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("description");

        if $z2 == 0 goto label09;

     label15:
        b1 = 0;

     label16:
        if b1 == 0 goto label22;

        if b1 == 1 goto label20;

        if b1 != 2 goto label19;

     label17:
        r23 = specialinvoke r0.<com.android.commands.hid.Event$Reader: byte[] readData()>();

     label18:
        goto label23;

     label19:
        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r15 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r15.<android.util.JsonReader: void endObject()>();

        r24 = new java.lang.IllegalStateException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key in outputs: ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw r24;

     label20:
        r22 = specialinvoke r0.<com.android.commands.hid.Event$Reader: byte[] readData()>();

     label21:
        goto label23;

     label22:
        $r13 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r13.<android.util.JsonReader: java.lang.String nextString()>();

     label23:
        goto label05;

     label24:
        $r9 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r9.<android.util.JsonReader: void endObject()>();

     label25:
        if r22 == null goto label27;

     label26:
        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r22);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r23);

     label27:
        goto label02;

     label28:
        $r6 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r6.<android.util.JsonReader: void endArray()>();

     label29:
        return $r3;

     label30:
        $r19 := @caughtexception;

        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r20 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r20.<android.util.JsonReader: void endArray()>();

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Encountered malformed data.", $r19);

        throw $r21;

        catch java.lang.IllegalStateException from label01 to label02 with label30;
        catch java.lang.NumberFormatException from label01 to label02 with label30;
        catch java.lang.IllegalStateException from label02 to label03 with label30;
        catch java.lang.NumberFormatException from label02 to label03 with label30;
        catch java.lang.IllegalStateException from label04 to label05 with label30;
        catch java.lang.NumberFormatException from label04 to label05 with label30;
        catch java.lang.IllegalStateException from label05 to label06 with label30;
        catch java.lang.NumberFormatException from label05 to label06 with label30;
        catch java.lang.IllegalStateException from label07 to label08 with label30;
        catch java.lang.NumberFormatException from label07 to label08 with label30;
        catch java.lang.IllegalStateException from label10 to label11 with label30;
        catch java.lang.NumberFormatException from label10 to label11 with label30;
        catch java.lang.IllegalStateException from label12 to label13 with label30;
        catch java.lang.NumberFormatException from label12 to label13 with label30;
        catch java.lang.IllegalStateException from label14 to label15 with label30;
        catch java.lang.NumberFormatException from label14 to label15 with label30;
        catch java.lang.IllegalStateException from label17 to label18 with label30;
        catch java.lang.NumberFormatException from label17 to label18 with label30;
        catch java.lang.IllegalStateException from label19 to label20 with label30;
        catch java.lang.NumberFormatException from label19 to label20 with label30;
        catch java.lang.IllegalStateException from label20 to label21 with label30;
        catch java.lang.NumberFormatException from label20 to label21 with label30;
        catch java.lang.IllegalStateException from label22 to label23 with label30;
        catch java.lang.NumberFormatException from label22 to label23 with label30;
        catch java.lang.IllegalStateException from label24 to label25 with label30;
        catch java.lang.NumberFormatException from label24 to label25 with label30;
        catch java.lang.IllegalStateException from label26 to label27 with label30;
        catch java.lang.NumberFormatException from label26 to label27 with label30;
        catch java.lang.IllegalStateException from label28 to label29 with label30;
        catch java.lang.NumberFormatException from label28 to label29 with label30;
    }

    public com.android.commands.hid.Event getNextEvent() throws java.io.IOException
    {
        com.android.commands.hid.Event$Reader r0;
        android.util.JsonReader $r1, $r5, $r6, $r7, $r8, $r13, $r16, $r19, r23;
        android.util.JsonToken $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Map $r9;
        android.util.SparseArray $r10;
        byte[] $r11, $r15;
        com.android.commands.hid.Event$Bus $r12;
        java.lang.String $r14, $r17, r22;
        java.lang.Throwable $r18;
        com.android.commands.hid.Event r20;
        byte b5;
        com.android.commands.hid.Event$Builder r25;
        java.lang.Exception r26;

        r0 := @this: com.android.commands.hid.Event$Reader;

        r20 = null;

     label01:
        if r20 != null goto label59;

        $r1 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r2 = virtualinvoke $r1.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = <android.util.JsonToken: android.util.JsonToken END_DOCUMENT>;

        if $r2 == $r3 goto label59;

        r25 = new com.android.commands.hid.Event$Builder;

        specialinvoke r25.<com.android.commands.hid.Event$Builder: void <init>()>();

     label02:
        $r5 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r5.<android.util.JsonReader: void beginObject()>();

     label03:
        $r6 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $z0 = virtualinvoke $r6.<android.util.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label56;

        $r8 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        r22 = virtualinvoke $r8.<android.util.JsonReader: java.lang.String nextName()>();

     label04:
        b5 = -1;

     label05:
        $i0 = virtualinvoke r22.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1992012396: goto label27;
            case -1106114670: goto label25;
            case -934521548: goto label23;
            case -748366993: goto label21;
            case -401007242: goto label19;
            case 3355: goto label17;
            case 97920: goto label15;
            case 110987: goto label13;
            case 116753: goto label11;
            case 3373707: goto label09;
            case 950394699: goto label07;
            default: goto label06;
        };

     label06:
        goto label29;

     label07:
        $z1 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("command");

        if $z1 == 0 goto label06;

     label08:
        b5 = 1;

        goto label29;

     label09:
        $z2 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z2 == 0 goto label06;

     label10:
        b5 = 3;

        goto label29;

     label11:
        $z3 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("vid");

        if $z3 == 0 goto label06;

     label12:
        b5 = 4;

        goto label29;

     label13:
        $z4 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("pid");

        if $z4 == 0 goto label06;

     label14:
        b5 = 5;

        goto label29;

     label15:
        $z5 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("bus");

        if $z5 == 0 goto label06;

     label16:
        b5 = 6;

        goto label29;

     label17:
        $z6 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z6 == 0 goto label06;

     label18:
        b5 = 0;

        goto label29;

     label19:
        $z7 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("feature_reports");

        if $z7 == 0 goto label06;

     label20:
        b5 = 8;

        goto label29;

     label21:
        $z8 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("descriptor");

        if $z8 == 0 goto label06;

     label22:
        b5 = 2;

        goto label29;

     label23:
        $z9 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("report");

        if $z9 == 0 goto label06;

     label24:
        b5 = 7;

        goto label29;

     label25:
        $z10 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("outputs");

        if $z10 == 0 goto label06;

     label26:
        b5 = 9;

        goto label29;

     label27:
        $z11 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>("duration");

        if $z11 == 0 goto label06;

     label28:
        b5 = 10;

     label29:
        tableswitch(b5)
        {
            case 0: goto label52;
            case 1: goto label50;
            case 2: goto label48;
            case 3: goto label46;
            case 4: goto label44;
            case 5: goto label42;
            case 6: goto label40;
            case 7: goto label38;
            case 8: goto label36;
            case 9: goto label34;
            case 10: goto label32;
            default: goto label30;
        };

     label30:
        r23 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

     label31:
        goto label54;

     label32:
        $i1 = specialinvoke r0.<com.android.commands.hid.Event$Reader: int readInt()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setDuration(int)>($i1);

     label33:
        goto label55;

     label34:
        $r9 = specialinvoke r0.<com.android.commands.hid.Event$Reader: java.util.Map readOutputs()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setOutputs(java.util.Map)>($r9);

     label35:
        goto label55;

     label36:
        $r10 = specialinvoke r0.<com.android.commands.hid.Event$Reader: android.util.SparseArray readFeatureReports()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setFeatureReports(android.util.SparseArray)>($r10);

     label37:
        goto label55;

     label38:
        $r11 = specialinvoke r0.<com.android.commands.hid.Event$Reader: byte[] readData()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setReport(byte[])>($r11);

     label39:
        goto label55;

     label40:
        $r12 = specialinvoke r0.<com.android.commands.hid.Event$Reader: com.android.commands.hid.Event$Bus readBus()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setBus(com.android.commands.hid.Event$Bus)>($r12);

     label41:
        goto label55;

     label42:
        $i2 = specialinvoke r0.<com.android.commands.hid.Event$Reader: int readInt()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setPid(int)>($i2);

     label43:
        goto label55;

     label44:
        $i3 = specialinvoke r0.<com.android.commands.hid.Event$Reader: int readInt()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setVid(int)>($i3);

     label45:
        goto label55;

     label46:
        $r13 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r14 = virtualinvoke $r13.<android.util.JsonReader: java.lang.String nextString()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setName(java.lang.String)>($r14);

     label47:
        goto label55;

     label48:
        $r15 = specialinvoke r0.<com.android.commands.hid.Event$Reader: byte[] readData()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setDescriptor(byte[])>($r15);

     label49:
        goto label55;

     label50:
        $r16 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        $r17 = virtualinvoke $r16.<android.util.JsonReader: java.lang.String nextString()>();

        staticinvoke <com.android.commands.hid.Event$Builder: void access$1100(com.android.commands.hid.Event$Builder,java.lang.String)>(r25, $r17);

     label51:
        goto label55;

     label52:
        $i4 = specialinvoke r0.<com.android.commands.hid.Event$Reader: int readInt()>();

        virtualinvoke r25.<com.android.commands.hid.Event$Builder: void setId(int)>($i4);

     label53:
        goto label55;

     label54:
        virtualinvoke r23.<android.util.JsonReader: void skipValue()>();

     label55:
        goto label03;

     label56:
        $r7 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r7.<android.util.JsonReader: void endObject()>();

     label57:
        r20 = virtualinvoke r25.<com.android.commands.hid.Event$Builder: com.android.commands.hid.Event build()>();

        goto label01;

     label58:
        $r18 := @caughtexception;

        r26 = (java.lang.Exception) $r18;

        staticinvoke <com.android.commands.hid.Event: void access$1200(java.lang.String,java.lang.Exception)>("Error reading in object, ignoring.", r26);

        specialinvoke r0.<com.android.commands.hid.Event$Reader: void consumeRemainingElements()>();

        $r19 = r0.<com.android.commands.hid.Event$Reader: android.util.JsonReader mReader>;

        virtualinvoke $r19.<android.util.JsonReader: void endObject()>();

        goto label01;

     label59:
        return r20;

        catch java.lang.IllegalStateException from label02 to label03 with label58;
        catch java.lang.IllegalStateException from label03 to label04 with label58;
        catch java.lang.IllegalStateException from label05 to label06 with label58;
        catch java.lang.IllegalStateException from label07 to label08 with label58;
        catch java.lang.IllegalStateException from label09 to label10 with label58;
        catch java.lang.IllegalStateException from label11 to label12 with label58;
        catch java.lang.IllegalStateException from label13 to label14 with label58;
        catch java.lang.IllegalStateException from label15 to label16 with label58;
        catch java.lang.IllegalStateException from label17 to label18 with label58;
        catch java.lang.IllegalStateException from label19 to label20 with label58;
        catch java.lang.IllegalStateException from label21 to label22 with label58;
        catch java.lang.IllegalStateException from label23 to label24 with label58;
        catch java.lang.IllegalStateException from label25 to label26 with label58;
        catch java.lang.IllegalStateException from label27 to label28 with label58;
        catch java.lang.IllegalStateException from label30 to label31 with label58;
        catch java.lang.IllegalStateException from label32 to label33 with label58;
        catch java.lang.IllegalStateException from label34 to label35 with label58;
        catch java.lang.IllegalStateException from label36 to label37 with label58;
        catch java.lang.IllegalStateException from label38 to label39 with label58;
        catch java.lang.IllegalStateException from label40 to label41 with label58;
        catch java.lang.IllegalStateException from label42 to label43 with label58;
        catch java.lang.IllegalStateException from label44 to label45 with label58;
        catch java.lang.IllegalStateException from label46 to label47 with label58;
        catch java.lang.IllegalStateException from label48 to label49 with label58;
        catch java.lang.IllegalStateException from label50 to label51 with label58;
        catch java.lang.IllegalStateException from label52 to label53 with label58;
        catch java.lang.IllegalStateException from label54 to label55 with label58;
        catch java.lang.IllegalStateException from label56 to label57 with label58;
    }
}
