public class com.android.commands.monkey.Monkey extends java.lang.Object
{
    private static final int DEBUG_ALLOW_ANY_RESTARTS;
    private static final int DEBUG_ALLOW_ANY_STARTS;
    private static int NUM_READ_TOMBSTONE_RETRIES;
    private static final java.io.File TOMBSTONES_PATH;
    private static final java.lang.String TOMBSTONE_PREFIX;
    public static android.content.Intent currentIntent;
    public static java.lang.String currentPackage;
    private boolean mAbort;
    private android.app.IActivityManager mAm;
    private java.lang.String[] mArgs;
    private long mBugreportFrequency;
    int mCount;
    private boolean mCountEvents;
    private java.lang.String mCurArgData;
    long mDeviceSleepTime;
    long mDroppedFlipEvents;
    long mDroppedKeyEvents;
    long mDroppedPointerEvents;
    long mDroppedRotationEvents;
    long mDroppedTrackballEvents;
    com.android.commands.monkey.MonkeyEventSource mEventSource;
    float[] mFactors;
    private boolean mGenerateHprof;
    private boolean mGetPeriodicBugreport;
    private boolean mIgnoreCrashes;
    private boolean mIgnoreNativeCrashes;
    private boolean mIgnoreSecurityExceptions;
    private boolean mIgnoreTimeouts;
    private boolean mKillProcessAfterError;
    private java.util.ArrayList mMainApps;
    private java.util.ArrayList mMainCategories;
    private java.lang.String mMatchDescription;
    private boolean mMonitorNativeCrashes;
    private com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor;
    private int mNextArg;
    private boolean mPermissionTargetSystem;
    private java.lang.String mPkgBlacklistFile;
    private java.lang.String mPkgWhitelistFile;
    private android.content.pm.IPackageManager mPm;
    long mProfileWaitTime;
    java.util.Random mRandom;
    boolean mRandomizeScript;
    boolean mRandomizeThrottle;
    private java.lang.String mReportProcessName;
    private boolean mRequestAnrBugreport;
    private boolean mRequestAnrTraces;
    private boolean mRequestAppCrashBugreport;
    private boolean mRequestBugreport;
    private boolean mRequestDumpsysMemInfo;
    private boolean mRequestPeriodicBugreport;
    private boolean mRequestProcRank;
    private boolean mRequestWatchdogBugreport;
    private java.util.ArrayList mScriptFileNames;
    boolean mScriptLog;
    long mSeed;
    private boolean mSendNoEvents;
    private int mServerPort;
    private java.lang.String mSetupFileName;
    long mThrottle;
    private java.util.HashSet mTombstones;
    private int mVerbose;
    private boolean mWatchdogWaiting;
    private android.view.IWindowManager mWm;

    static void <clinit>()
    {
        java.io.File $r0;

        <com.android.commands.monkey.Monkey: java.lang.String TOMBSTONE_PREFIX> = "tombstone_";

        <com.android.commands.monkey.Monkey: int DEBUG_ALLOW_ANY_STARTS> = 0;

        <com.android.commands.monkey.Monkey: int DEBUG_ALLOW_ANY_RESTARTS> = 0;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/data/tombstones");

        <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH> = $r0;

        <com.android.commands.monkey.Monkey: int NUM_READ_TOMBSTONE_RETRIES> = 5;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.Monkey r0;
        java.util.ArrayList $r1, $r2, $r3;
        float[] $r4;
        com.android.commands.monkey.MonkeyNetworkMonitor $r5;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 1;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency> = 10L;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps> = $r2;

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle> = 0;

        r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom> = null;

        r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime> = 5000L;

        r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime> = 30000L;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mScriptLog> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames> = $r3;

        r0.<com.android.commands.monkey.Monkey: int mServerPort> = -1;

        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        $r4 = newarray (float)[12];

        r0.<com.android.commands.monkey.Monkey: float[] mFactors> = $r4;

        $r5 = new com.android.commands.monkey.MonkeyNetworkMonitor;

        specialinvoke $r5.<com.android.commands.monkey.MonkeyNetworkMonitor: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor> = $r5;

        r0.<com.android.commands.monkey.Monkey: boolean mPermissionTargetSystem> = 0;

        return;
    }

    static int access$000(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        int $i0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $i0 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        return $i0;
    }

    static android.content.pm.IPackageManager access$100(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        android.content.pm.IPackageManager $r1;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $r1 = r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        return $r1;
    }

    static boolean access$1002(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = z0;

        return z0;
    }

    static boolean access$1102(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = z0;

        return z0;
    }

    static boolean access$1202(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = z0;

        return z0;
    }

    static boolean access$1300(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts>;

        return $z0;
    }

    static boolean access$1402(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = z0;

        return z0;
    }

    static boolean access$1500(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        return $z0;
    }

    static boolean access$1502(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = z0;

        return z0;
    }

    static java.lang.String access$200(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $r1 = r0.<com.android.commands.monkey.Monkey: java.lang.String mMatchDescription>;

        return $r1;
    }

    static boolean access$300(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes>;

        return $z0;
    }

    static boolean access$400(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        return $z0;
    }

    static boolean access$502(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mAbort> = z0;

        return z0;
    }

    static boolean access$602(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = z0;

        return z0;
    }

    static java.lang.String access$702(com.android.commands.monkey.Monkey, java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName> = r1;

        return r1;
    }

    static boolean access$800(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        return $z0;
    }

    static boolean access$902(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = z0;

        return z0;
    }

    private boolean checkInternalConfiguration()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        return 1;
    }

    private boolean checkNativeCrashes()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String[] r1, $r11;
        int i0, $i1, i5;
        java.io.File $r4, $r6, $r7, $r9;
        java.util.HashSet $r5, r22;
        boolean $z0, $z2, z3, z4;
        long $l2, $l3, $l4;
        java.lang.Long $r8, $r20;
        java.lang.String $r10, $r15, $r19, r21;
        java.nio.file.Path $r12;
        java.lang.StringBuilder $r13;
        com.android.commands.monkey.Logger r23;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r4 = <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH>;

        r1 = virtualinvoke $r4.<java.io.File: java.lang.String[] list()>();

        if r1 == null goto label6;

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        goto label6;

     label1:
        z3 = 0;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i5 = 0;

     label2:
        if i5 >= i0 goto label5;

        r21 = r1[i5];

        z4 = z3;

        $z0 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("tombstone_");

        if $z0 == 0 goto label4;

        $r6 = new java.io.File;

        $r7 = <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r21);

        $l2 = virtualinvoke $r6.<java.io.File: long lastModified()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r8);

        r22 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones>;

        if r22 == null goto label3;

        z4 = z3;

        $l4 = virtualinvoke $r6.<java.io.File: long lastModified()>();

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z2 = virtualinvoke r22.<java.util.HashSet: boolean contains(java.lang.Object)>($r20);

        if $z2 != 0 goto label4;

     label3:
        z4 = 1;

        $r9 = <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH>;

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = r21;

        $r12 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($r10, $r11);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void waitForTombstoneToBeWritten(java.nio.file.Path)>($r12);

        r23 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** New tombstone found: ");

        $r15 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $l3 = virtualinvoke $r6.<java.io.File: long length()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r19);

     label4:
        i5 = i5 + 1;

        z3 = z4;

        goto label2;

     label5:
        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = $r5;

        return z3;

     label6:
        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        return 0;
    }

    private void commandLineReport(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r3, $r5, $r9, $r11, $r14, $r16, r17, r27;
        boolean z0, $z1;
        int i0;
        java.lang.Runtime $r4;
        com.android.commands.monkey.Logger $r6, $r10, $r15, r18, r29, r32;
        java.io.File $r7, r35;
        java.lang.Throwable $r8;
        java.lang.Exception $r12;
        java.lang.Process r20;
        java.io.BufferedWriter r21, r37;
        java.io.InputStream r24;
        java.lang.StringBuilder r34, r40, r41;
        java.io.FileWriter r36;
        java.io.InputStreamReader r38;
        java.io.BufferedReader r39;
        java.io.IOException r42;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        r18 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r3);

        staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

     label01:
        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r20 = virtualinvoke $r4.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(r17);

     label02:
        r21 = null;

     label03:
        $z1 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        if $z1 == 0 goto label04;

        r37 = new java.io.BufferedWriter;

        r21 = r37;

        r36 = new java.io.FileWriter;

        r35 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>();

        specialinvoke r35.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r1);

        specialinvoke r36.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r35, 1);

        specialinvoke r37.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r36);

     label04:
        r24 = virtualinvoke r20.<java.lang.Process: java.io.InputStream getInputStream()>();

        r38 = new java.io.InputStreamReader;

        specialinvoke r38.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r24);

        r39 = new java.io.BufferedReader;

        specialinvoke r39.<java.io.BufferedReader: void <init>(java.io.Reader)>(r38);

     label05:
        r27 = virtualinvoke r39.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        if r27 == null goto label18;

     label07:
        z0 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

     label08:
        if z0 == 0 goto label16;

     label09:
        virtualinvoke r21.<java.io.Writer: void write(java.lang.String)>(r27);

        virtualinvoke r21.<java.io.Writer: void write(java.lang.String)>("\n");

     label10:
        goto label05;

     label11:
        $r8 := @caughtexception;

     label12:
        $r9 = virtualinvoke r39.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r9 == null goto label14;

     label13:
        goto label12;

     label14:
        $r10 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r42 = (java.io.IOException) $r8;

        $r11 = virtualinvoke r42.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r10.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r11);

     label15:
        goto label18;

     label16:
        $r6 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r6.<com.android.commands.monkey.Logger: void println(java.lang.String)>(r27);

     label17:
        goto label05;

     label18:
        i0 = virtualinvoke r20.<java.lang.Process: int waitFor()>();

        r29 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status was ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r5);

     label19:
        if r21 == null goto label21;

     label20:
        virtualinvoke r21.<java.io.Writer: void close()>();

     label21:
        goto label23;

     label22:
        $r12 := @caughtexception;

        r32 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Exception from ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r14 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r14);

        $r15 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r16 = virtualinvoke $r12.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r15.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r16);

     label23:
        return;

        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label04 to label05 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label07 to label08 with label22;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    private void getBugreport(java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.StringBuilder $r1, $r6;
        long $l0;
        java.lang.String $r3, $r5, $r9, r10, r12;

        r0 := @this: com.android.commands.monkey.Monkey;

        r10 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ ,:]", "_");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>($r9, "bugreport");

        return;
    }

    private boolean getMainApps()
    {
        com.android.commands.monkey.Monkey r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean z0;
        java.util.ArrayList $r1, $r2, $r4, r48;
        com.android.commands.monkey.Logger $r3, $r38, r42, r46, r50, r52;
        java.lang.Object $r5, $r11;
        android.content.pm.IPackageManager $r6;
        android.content.pm.ParceledListSlice $r7;
        java.lang.String $r10, $r17, $r22, $r24, $r27, $r32, $r35, r40, r45;
        android.content.pm.ActivityInfo $r12, $r16, $r23, $r26;
        android.content.pm.ApplicationInfo $r13;
        com.android.commands.monkey.MonkeyUtils$PackageFilter $r14;
        android.os.RemoteException $r37;
        android.content.Intent r39;
        java.util.List r41;
        java.lang.StringBuilder r43, r47, r51, r53;
        android.content.pm.ResolveInfo r44;
        android.content.ComponentName r49;

        r0 := @this: com.android.commands.monkey.Monkey;

     label01:
        $r1 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label02:
        i9 = 0;

     label03:
        if i9 >= i0 goto label22;

     label04:
        r39 = new android.content.Intent;

        specialinvoke r39.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r4 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r40 = (java.lang.String) $r5;

        $i3 = virtualinvoke r40.<java.lang.String: int length()>();

        if $i3 <= 0 goto label05;

        virtualinvoke r39.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r40);

     label05:
        $r6 = r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        $i4 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r7 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r39, null, 0, $i4);

        r41 = virtualinvoke $r7.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label06:
        if r41 == null goto label20;

     label07:
        $i5 = interfaceinvoke r41.<java.util.List: int size()>();

        if $i5 != 0 goto label09;

     label08:
        goto label20;

     label09:
        $i6 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i6 < 2 goto label10;

        r42 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Selecting main activities from category ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r35 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r35);

     label10:
        i1 = interfaceinvoke r41.<java.util.List: int size()>();

     label11:
        i10 = 0;

     label12:
        if i10 >= i1 goto label21;

     label13:
        $r11 = interfaceinvoke r41.<java.util.List: java.lang.Object get(int)>(i10);

        r44 = (android.content.pm.ResolveInfo) $r11;

        $r12 = r44.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r45 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r14 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        z0 = virtualinvoke $r14.<com.android.commands.monkey.MonkeyUtils$PackageFilter: boolean checkEnteringPackage(java.lang.String)>(r45);

     label14:
        if z0 == 0 goto label18;

     label15:
        $i8 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i8 < 2 goto label16;

        r46 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   + Using main activity ");

        $r26 = r44.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = $r26.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r32);

     label16:
        r48 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        r49 = new android.content.ComponentName;

        $r23 = r44.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r23.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r49.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r45, $r24);

        virtualinvoke r48.<java.util.ArrayList: boolean add(java.lang.Object)>(r49);

     label17:
        goto label19;

     label18:
        $i7 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i7 < 3 goto label19;

        r50 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   - NOT USING main activity ");

        $r16 = r44.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r16.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r50.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r22);

     label19:
        i10 = i10 + 1;

        goto label12;

     label20:
        r52 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Warning: no activities found for category ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r10 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r52.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r10);

     label21:
        i9 = i9 + 1;

        goto label03;

     label22:
        $r2 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label23;

        $r3 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r3.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** No activities found to run, monkey aborted.");

        return 0;

     label23:
        return 1;

     label24:
        $r37 := @caughtexception;

        $r38 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r38.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Failed talking with package manager!");

        return 0;

        catch android.os.RemoteException from label01 to label02 with label24;
        catch android.os.RemoteException from label04 to label05 with label24;
        catch android.os.RemoteException from label05 to label06 with label24;
        catch android.os.RemoteException from label07 to label08 with label24;
        catch android.os.RemoteException from label09 to label10 with label24;
        catch android.os.RemoteException from label10 to label11 with label24;
        catch android.os.RemoteException from label13 to label14 with label24;
        catch android.os.RemoteException from label15 to label16 with label24;
        catch android.os.RemoteException from label16 to label17 with label24;
        catch android.os.RemoteException from label18 to label19 with label24;
        catch android.os.RemoteException from label20 to label21 with label24;
    }

    private boolean getSystemInterfaces()
    {
        com.android.commands.monkey.Monkey r0;
        android.app.IActivityManager r1, $r4, r11;
        android.os.IBinder $r2, $r3;
        com.android.commands.monkey.MonkeyNetworkMonitor $r5;
        com.android.commands.monkey.Logger $r6, $r7, $r8, $r10;
        android.os.RemoteException $r9;
        android.view.IWindowManager r12;
        android.content.pm.IPackageManager r13;
        com.android.commands.monkey.Monkey$ActivityController r14;

        r0 := @this: com.android.commands.monkey.Monkey;

        r11 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm> = r11;

        if r11 != null goto label1;

        $r8 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r8.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: Unable to connect to activity manager; is the system running?");

        return 0;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        r12 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm> = r12;

        if r12 != null goto label2;

        $r7 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r7.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: Unable to connect to window manager; is the system running?");

        return 0;

     label2:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r13 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm> = r13;

        if r13 != null goto label3;

        $r6 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r6.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: Unable to connect to package manager; is the system running?");

        return 0;

     label3:
        r1 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        r14 = new com.android.commands.monkey.Monkey$ActivityController;

        specialinvoke r14.<com.android.commands.monkey.Monkey$ActivityController: void <init>(com.android.commands.monkey.Monkey,com.android.commands.monkey.Monkey$1)>(r0, null);

        interfaceinvoke r1.<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>(r14, 1);

        $r5 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        $r4 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        virtualinvoke $r5.<com.android.commands.monkey.MonkeyNetworkMonitor: void register(android.app.IActivityManager)>($r4);

     label4:
        return 1;

     label5:
        $r9 := @caughtexception;

        $r10 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r10.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Failed talking with activity manager!");

        return 0;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private static boolean loadPackageListFromFile(java.lang.String, java.util.Set)
    {
        java.io.BufferedReader r0, r16, r17;
        java.io.FileReader r1;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r2, $r5, $r6, $r9, $r11;
        java.lang.StringBuilder $r3, $r7, $r12, r27;
        java.lang.String $r4, $r8, $r10, $r13, r14, r19, r20;
        java.util.Set r15;
        com.android.commands.monkey.Logger r22, r26, r29, r32;

        r14 := @parameter0: java.lang.String;

        r15 := @parameter1: java.util.Set;

        r16 = null;

        r17 = null;

     label01:
        r0 = new java.io.BufferedReader;

     label02:
        r16 = null;

        r17 = null;

     label03:
        r1 = new java.io.FileReader;

     label04:
        r16 = null;

        r17 = null;

     label05:
        specialinvoke r1.<java.io.FileReader: void <init>(java.lang.String)>(r14);

     label06:
        r16 = null;

        r17 = null;

     label07:
        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

     label08:
        r16 = r0;

        r17 = r0;

     label09:
        r19 = virtualinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if r19 == null goto label19;

        r16 = r0;

        r17 = r0;

     label11:
        r20 = virtualinvoke r19.<java.lang.String: java.lang.String trim()>();

     label12:
        r16 = r0;

        r17 = r0;

     label13:
        $i0 = virtualinvoke r20.<java.lang.String: int length()>();

        if $i0 <= 0 goto label08;

     label14:
        r16 = r0;

        r17 = r0;

     label15:
        $z0 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label08;

     label16:
        r16 = r0;

        r17 = r0;

     label17:
        interfaceinvoke r15.<java.util.Set: boolean add(java.lang.Object)>(r20);

     label18:
        goto label08;

     label19:
        virtualinvoke r0.<java.io.BufferedReader: void close()>();

     label20:
        goto label22;

     label21:
        $r11 := @caughtexception;

        r22 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r13);

        goto label20;

     label22:
        return 1;

     label23:
        $r5 := @caughtexception;

        goto label41;

     label24:
        $r9 := @caughtexception;

        r16 = r17;

     label25:
        r26 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

     label26:
        r16 = r17;

     label27:
        r27 = new java.lang.StringBuilder;

     label28:
        r16 = r17;

     label29:
        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

     label30:
        r16 = r17;

     label31:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label32:
        r16 = r17;

     label33:
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

     label34:
        r16 = r17;

     label35:
        $r10 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r26.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r10);

     label36:
        if r17 == null goto label40;

     label37:
        virtualinvoke r17.<java.io.BufferedReader: void close()>();

     label38:
        goto label40;

     label39:
        $r2 := @caughtexception;

        r29 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r4);

     label40:
        return 0;

     label41:
        if r16 == null goto label45;

     label42:
        virtualinvoke r16.<java.io.BufferedReader: void close()>();

     label43:
        goto label45;

     label44:
        $r6 := @caughtexception;

        r32 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r8);

     label45:
        throw $r5;

        catch java.io.IOException from label01 to label02 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.lang.Throwable from label27 to label28 with label23;
        catch java.lang.Throwable from label29 to label30 with label23;
        catch java.lang.Throwable from label31 to label32 with label23;
        catch java.lang.Throwable from label33 to label34 with label23;
        catch java.lang.Throwable from label35 to label36 with label23;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.io.IOException from label42 to label43 with label44;
    }

    private boolean loadPackageLists()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String $r1, $r2, r10, r12;
        java.util.HashSet $r3, $r5;
        com.android.commands.monkey.MonkeyUtils$PackageFilter $r4, $r6, $r8;
        boolean $z0, $z1, $z2;
        com.android.commands.monkey.Logger $r7;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile>;

        if $r1 != null goto label1;

        $r8 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        $z2 = virtualinvoke $r8.<com.android.commands.monkey.MonkeyUtils$PackageFilter: boolean hasValidPackages()>();

        if $z2 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile>;

        if $r2 == null goto label2;

        $r7 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r7.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: you can not specify a package blacklist together with a whitelist or individual packages (via -p).");

        return 0;

     label2:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r10 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile>;

        if r10 == null goto label3;

        $z1 = staticinvoke <com.android.commands.monkey.Monkey: boolean loadPackageListFromFile(java.lang.String,java.util.Set)>(r10, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r4 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        virtualinvoke $r4.<com.android.commands.monkey.MonkeyUtils$PackageFilter: void addValidPackages(java.util.Set)>($r3);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r12 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile>;

        if r12 == null goto label4;

        $z0 = staticinvoke <com.android.commands.monkey.Monkey: boolean loadPackageListFromFile(java.lang.String,java.util.Set)>(r12, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r6 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        virtualinvoke $r6.<com.android.commands.monkey.MonkeyUtils$PackageFilter: void addInvalidPackages(java.util.Set)>($r5);

        return 1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.monkey.Logger r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        com.android.commands.monkey.Monkey $r8;
        int $i0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>("com.android.commands.monkey");

        r1 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args: ");

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r7);

        $r8 = new com.android.commands.monkey.Monkey;

        specialinvoke $r8.<com.android.commands.monkey.Monkey: void <init>()>();

        $i0 = specialinvoke $r8.<com.android.commands.monkey.Monkey: int run(java.lang.String[])>(r0);

        staticinvoke <java.lang.System: void exit(int)>($i0);

        return;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.monkey.Monkey r0;
        int i0, $i1, $i2;
        java.lang.String[] r1;
        java.lang.String r2;

        r0 := @this: com.android.commands.monkey.Monkey;

        i0 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r1 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        return null;

     label1:
        r2 = r1[i0];

        $i2 = i0 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i2;

        return r2;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.monkey.Monkey r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        java.lang.String r1, $r7, $r13, $r17, $r20, $r21, $r22;
        com.android.commands.monkey.Logger r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.String[] $r12, $r16, r23;
        char $c9;

        r0 := @this: com.android.commands.monkey.Monkey;

        i0 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r23 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof r23;

        if i0 < $i1 goto label1;

        return null;

     label1:
        r1 = r23[i0];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i2 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i3 = $i2 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 <= 1 goto label5;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c9 == 45 goto label5;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i10 <= 2 goto label4;

        $r21 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = $r21;

        $r22 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r22;

     label4:
        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        return r1;

     label5:
        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        r2 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arg=\"");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" mCurArgData=\"");

        $r7 = r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" mNextArg=");

        $i5 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" argwas=\"");

        $r12 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i6 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i7 = $i6 - 1;

        $r13 = $r12[$i7];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" nextarg=\"");

        $r16 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i8 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r17 = $r16[$i8];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r20);

        return r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.monkey.Monkey r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r7, r8;
        com.android.commands.monkey.Logger r2;
        java.lang.StringBuilder $r3;
        java.lang.String[] r9;

        r0 := @this: com.android.commands.monkey.Monkey;

        r8 = r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        if r8 == null goto label1;

        return r8;

     label1:
        i0 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r9 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof r9;

        if i0 < $i1 goto label2;

        return null;

     label2:
        r1 = r9[i0];

        r2 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data=\"");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r7);

        $i2 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i3 = $i2 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i3;

        return r1;
    }

    private long nextOptionLong(java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r5, $r11;
        long l0;
        com.android.commands.monkey.Logger r3;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label2:
        return l0;

     label3:
        $r6 := @caughtexception;

        r3 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a number");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r11);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean processOptions()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i7, $i33, $i34;
        com.android.commands.monkey.MonkeyUtils$PackageFilter $r2;
        com.android.commands.monkey.Logger $r3, r42, r46, r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        java.lang.String $r6, $r8, $r9, $r10, $r11, $r24, $r26, $r27, $r31, $r33, $r39, r41, r44;
        long $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l35;
        java.util.ArrayList $r7, $r25;
        float[] $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.RuntimeException $r28;
        java.lang.StringBuilder $r29, $r35, r43;
        java.lang.Throwable $r34;
        java.util.HashSet r40;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = lengthof $r1;

        if $i0 >= 1 goto label01;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label01:
        r40 = new java.util.HashSet;

        specialinvoke r40.<java.util.HashSet: void <init>()>();

     label02:
        r41 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOption()>();

     label03:
        if r41 == null goto label88;

     label04:
        $z0 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z0 == 0 goto label06;

        $l35 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Seed");

        r0.<com.android.commands.monkey.Monkey: long mSeed> = $l35;

     label05:
        goto label02;

     label06:
        $z1 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z1 == 0 goto label08;

        $r27 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        interfaceinvoke r40.<java.util.Set: boolean add(java.lang.Object)>($r27);

     label07:
        goto label02;

     label08:
        $z2 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z2 == 0 goto label10;

        $r25 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r26 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label09:
        goto label02;

     label10:
        $z3 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z3 == 0 goto label12;

        $i33 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        $i34 = $i33 + 1;

        r0.<com.android.commands.monkey.Monkey: int mVerbose> = $i34;

     label11:
        goto label02;

     label12:
        $z4 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-crashes");

        if $z4 == 0 goto label14;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes> = 1;

     label13:
        goto label02;

     label14:
        $z5 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-timeouts");

        if $z5 == 0 goto label16;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts> = 1;

     label15:
        goto label02;

     label16:
        $z6 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-security-exceptions");

        if $z6 == 0 goto label18;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions> = 1;

     label17:
        goto label02;

     label18:
        $z7 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--monitor-native-crashes");

        if $z7 == 0 goto label20;

        r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes> = 1;

     label19:
        goto label02;

     label20:
        $z8 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-native-crashes");

        if $z8 == 0 goto label22;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreNativeCrashes> = 1;

     label21:
        goto label02;

     label22:
        $z9 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--kill-process-after-error");

        if $z9 == 0 goto label24;

        r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError> = 1;

     label23:
        goto label02;

     label24:
        $z10 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--hprof");

        if $z10 == 0 goto label26;

        r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof> = 1;

     label25:
        goto label02;

     label26:
        $z11 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--match-description");

        if $z11 == 0 goto label28;

        $r24 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mMatchDescription> = $r24;

     label27:
        goto label02;

     label28:
        $z12 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-touch");

        if $z12 == 0 goto label30;

        $r23 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l31 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("touch events percentage");

        $l32 = neg $l31;

        $f11 = (float) $l32;

        $r23[0] = $f11;

     label29:
        goto label02;

     label30:
        $z13 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-motion");

        if $z13 == 0 goto label32;

        $r22 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l29 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("motion events percentage");

        $l30 = neg $l29;

        $f10 = (float) $l30;

        $r22[1] = $f10;

     label31:
        goto label02;

     label32:
        $z14 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-trackball");

        if $z14 == 0 goto label34;

        $r21 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l27 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("trackball events percentage");

        $l28 = neg $l27;

        $f9 = (float) $l28;

        $r21[3] = $f9;

     label33:
        goto label02;

     label34:
        $z15 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-rotation");

        if $z15 == 0 goto label36;

        $r20 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l25 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("screen rotation events percentage");

        $l26 = neg $l25;

        $f8 = (float) $l26;

        $r20[4] = $f8;

     label35:
        goto label02;

     label36:
        $z16 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-syskeys");

        if $z16 == 0 goto label38;

        $r19 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l23 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("system (key) operations percentage");

        $l24 = neg $l23;

        $f7 = (float) $l24;

        $r19[8] = $f7;

     label37:
        goto label02;

     label38:
        $z17 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-nav");

        if $z17 == 0 goto label40;

        $r18 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l21 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("nav events percentage");

        $l22 = neg $l21;

        $f6 = (float) $l22;

        $r18[6] = $f6;

     label39:
        goto label02;

     label40:
        $z18 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-majornav");

        if $z18 == 0 goto label42;

        $r17 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l19 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("major nav events percentage");

        $l20 = neg $l19;

        $f5 = (float) $l20;

        $r17[7] = $f5;

     label41:
        goto label02;

     label42:
        $z19 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-appswitch");

        if $z19 == 0 goto label44;

        $r16 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l17 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("app switch events percentage");

        $l18 = neg $l17;

        $f4 = (float) $l18;

        $r16[9] = $f4;

     label43:
        goto label02;

     label44:
        $z20 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-flip");

        if $z20 == 0 goto label46;

        $r15 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l15 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("keyboard flip percentage");

        $l16 = neg $l15;

        $f3 = (float) $l16;

        $r15[10] = $f3;

     label45:
        goto label02;

     label46:
        $z21 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-anyevent");

        if $z21 == 0 goto label48;

        $r14 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l13 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("any events percentage");

        $l14 = neg $l13;

        $f2 = (float) $l14;

        $r14[11] = $f2;

     label47:
        goto label02;

     label48:
        $z22 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-pinchzoom");

        if $z22 == 0 goto label50;

        $r13 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l11 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("pinch zoom events percentage");

        $l12 = neg $l11;

        $f1 = (float) $l12;

        $r13[2] = $f1;

     label49:
        goto label02;

     label50:
        $z23 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pct-permission");

        if $z23 == 0 goto label52;

        $r12 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l9 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("runtime permission toggle events percentage");

        $l10 = neg $l9;

        $f0 = (float) $l10;

        $r12[5] = $f0;

     label51:
        goto label02;

     label52:
        $z24 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pkg-blacklist-file");

        if $z24 == 0 goto label54;

        $r11 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile> = $r11;

     label53:
        goto label02;

     label54:
        $z25 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--pkg-whitelist-file");

        if $z25 == 0 goto label56;

        $r10 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile> = $r10;

     label55:
        goto label02;

     label56:
        $z26 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--throttle");

        if $z26 == 0 goto label58;

        $l8 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("delay (in milliseconds) to wait between events");

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = $l8;

     label57:
        goto label02;

     label58:
        $z27 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--randomize-throttle");

        if $z27 == 0 goto label60;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle> = 1;

     label59:
        goto label02;

     label60:
        $z28 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--wait-dbg");

        if $z28 == 0 goto label62;

     label61:
        goto label02;

     label62:
        $z29 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--dbg-no-events");

        if $z29 == 0 goto label64;

        r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents> = 1;

     label63:
        goto label02;

     label64:
        $z30 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--port");

        if $z30 == 0 goto label66;

        $l6 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Server port to listen on for commands");

        $i7 = (int) $l6;

        r0.<com.android.commands.monkey.Monkey: int mServerPort> = $i7;

     label65:
        goto label02;

     label66:
        $z31 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--setup");

        if $z31 == 0 goto label68;

        $r9 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName> = $r9;

     label67:
        goto label02;

     label68:
        $z32 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z32 == 0 goto label70;

        $r7 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $r8 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label69:
        goto label02;

     label70:
        $z33 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--profile-wait");

        if $z33 == 0 goto label72;

        $l5 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Profile delay (in milliseconds) to wait between user action");

        r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime> = $l5;

     label71:
        goto label02;

     label72:
        $z34 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--device-sleep-time");

        if $z34 == 0 goto label74;

        $l4 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Device sleep time(in milliseconds)");

        r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime> = $l4;

     label73:
        goto label02;

     label74:
        $z35 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--randomize-script");

        if $z35 == 0 goto label76;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript> = 1;

     label75:
        goto label02;

     label76:
        $z36 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--script-log");

        if $z36 == 0 goto label78;

        r0.<com.android.commands.monkey.Monkey: boolean mScriptLog> = 1;

     label77:
        goto label02;

     label78:
        $z37 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--bugreport");

        if $z37 == 0 goto label80;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport> = 1;

     label79:
        goto label02;

     label80:
        $z38 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--periodic-bugreport");

        if $z38 == 0 goto label82;

        r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport> = 1;

        $l3 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Number of iterations");

        r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency> = $l3;

     label81:
        goto label02;

     label82:
        $z39 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("--permission-target-system");

        if $z39 == 0 goto label84;

        r0.<com.android.commands.monkey.Monkey: boolean mPermissionTargetSystem> = 1;

     label83:
        goto label02;

     label84:
        $z40 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("-h");

        if $z40 == 0 goto label86;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label85:
        return 0;

     label86:
        r42 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: Unknown option: ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r6 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r6);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label87:
        return 0;

     label88:
        $r2 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        virtualinvoke $r2.<com.android.commands.monkey.MonkeyUtils$PackageFilter: void addValidPackages(java.util.Set)>(r40);

     label89:
        $i1 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        if $i1 != -1 goto label93;

        r44 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextArg()>();

        if r44 != null goto label90;

        $r3 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r3.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: Count not specified");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label90:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r44);

        r0.<com.android.commands.monkey.Monkey: int mCount> = $i2;

     label91:
        goto label93;

     label92:
        $r34 := @caughtexception;

        r46 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: Count is not a number: \"");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r39);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label93:
        return 1;

     label94:
        $r28 := @caughtexception;

        r49 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        $r31 = virtualinvoke $r28.<java.lang.RuntimeException: java.lang.String toString()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r49.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r33);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

        catch java.lang.RuntimeException from label01 to label02 with label94;
        catch java.lang.RuntimeException from label02 to label03 with label94;
        catch java.lang.RuntimeException from label04 to label05 with label94;
        catch java.lang.RuntimeException from label06 to label07 with label94;
        catch java.lang.RuntimeException from label08 to label09 with label94;
        catch java.lang.RuntimeException from label10 to label11 with label94;
        catch java.lang.RuntimeException from label12 to label13 with label94;
        catch java.lang.RuntimeException from label14 to label15 with label94;
        catch java.lang.RuntimeException from label16 to label17 with label94;
        catch java.lang.RuntimeException from label18 to label19 with label94;
        catch java.lang.RuntimeException from label20 to label21 with label94;
        catch java.lang.RuntimeException from label22 to label23 with label94;
        catch java.lang.RuntimeException from label24 to label25 with label94;
        catch java.lang.RuntimeException from label26 to label27 with label94;
        catch java.lang.RuntimeException from label28 to label29 with label94;
        catch java.lang.RuntimeException from label30 to label31 with label94;
        catch java.lang.RuntimeException from label32 to label33 with label94;
        catch java.lang.RuntimeException from label34 to label35 with label94;
        catch java.lang.RuntimeException from label36 to label37 with label94;
        catch java.lang.RuntimeException from label38 to label39 with label94;
        catch java.lang.RuntimeException from label40 to label41 with label94;
        catch java.lang.RuntimeException from label42 to label43 with label94;
        catch java.lang.RuntimeException from label44 to label45 with label94;
        catch java.lang.RuntimeException from label46 to label47 with label94;
        catch java.lang.RuntimeException from label48 to label49 with label94;
        catch java.lang.RuntimeException from label50 to label51 with label94;
        catch java.lang.RuntimeException from label52 to label53 with label94;
        catch java.lang.RuntimeException from label54 to label55 with label94;
        catch java.lang.RuntimeException from label56 to label57 with label94;
        catch java.lang.RuntimeException from label58 to label59 with label94;
        catch java.lang.RuntimeException from label60 to label61 with label94;
        catch java.lang.RuntimeException from label62 to label63 with label94;
        catch java.lang.RuntimeException from label64 to label65 with label94;
        catch java.lang.RuntimeException from label66 to label67 with label94;
        catch java.lang.RuntimeException from label68 to label69 with label94;
        catch java.lang.RuntimeException from label70 to label71 with label94;
        catch java.lang.RuntimeException from label72 to label73 with label94;
        catch java.lang.RuntimeException from label74 to label75 with label94;
        catch java.lang.RuntimeException from label76 to label77 with label94;
        catch java.lang.RuntimeException from label78 to label79 with label94;
        catch java.lang.RuntimeException from label80 to label81 with label94;
        catch java.lang.RuntimeException from label82 to label83 with label94;
        catch java.lang.RuntimeException from label84 to label85 with label94;
        catch java.lang.RuntimeException from label86 to label87 with label94;
        catch java.lang.RuntimeException from label88 to label89 with label94;
        catch java.lang.NumberFormatException from label90 to label91 with label92;
    }

    private void reportAnrTraces()
    {
        com.android.commands.monkey.Monkey r0;
        java.io.File[] r1;
        int i0, i4;
        long l1, l3, l5;
        java.io.File $r2, r10, r11;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        byte $b2;
        java.lang.Throwable $r8;

        r0 := @this: com.android.commands.monkey.Monkey;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(5000L);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/data/anr/");

        r1 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label8;

        r10 = null;

        l3 = 0L;

        i0 = lengthof r1;

        i4 = 0;

     label5:
        if i4 >= i0 goto label7;

        r11 = r1[i4];

        l1 = virtualinvoke r11.<java.io.File: long lastModified()>();

        l5 = l3;

        $b2 = l1 cmp l3;

        if $b2 <= 0 goto label6;

        l5 = l1;

        r10 = r11;

     label6:
        i4 = i4 + 1;

        l3 = l5;

        goto label5;

     label7:
        if r10 == null goto label8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cat ");

        $r5 = virtualinvoke r10.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("anr traces", $r7);

     label8:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void reportDumpsysMemInfo()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("meminfo", "dumpsys meminfo");

        return;
    }

    private void reportProcRank()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("procrank", "procrank");

        return;
    }

    private int run(java.lang.String[])
    {
        com.android.commands.monkey.Monkey r0;
        com.android.commands.monkey.Logger r1, $r15, $r36, $r42, $r43, $r93, r103, r106, r114, r125, r127;
        int i0, $i1, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i15, $i22, $i25, $i26, $i30, $i34, $i35, $i36, $i40, $i42, $i43, $i45, $i48, i50, i51, i52, i53, i54, i55, i56, i57, $i58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z23, $z24, $z25;
        java.util.ArrayList $r2, $r5, $r57, $r61, $r63, $r74, $r75, $r82, $r83, r108, r110;
        long $l2, $l5, $l8, $l16, $l17, $l18, $l19, $l20, $l21, $l24, $l27, $l28, $l29, $l31, $l32, $l33, $l37, $l38, $l39, $l41, $l44, $l46, $l47;
        byte $b3, $b23;
        java.util.Random $r3, $r6, $r56, $r60, $r64;
        com.android.commands.monkey.MonkeySourceRandom $r4, $r8, $r50;
        com.android.commands.monkey.MonkeyEventSource $r7, $r49, $r58, $r118;
        com.android.commands.monkey.MonkeyNetworkMonitor $r9, $r13, $r14, $r122;
        com.android.commands.monkey.MonkeyRotationEvent $r10, $r97;
        android.app.IActivityManager $r11, $r98, $r121, $r123;
        android.view.IWindowManager $r12, $r99;
        java.lang.StringBuilder $r16, $r24, $r51, $r67, $r76, $r85, r119, r120;
        java.lang.String $r23, $r35, $r38, $r41, $r45, $r48, $r54, $r66, $r72, $r79, $r81, $r89, $r90, $r91, r101, r111;
        float $f0, $f1;
        com.android.commands.monkey.MonkeySourceRandomScript $r55, $r59;
        com.android.commands.monkey.MonkeySourceScript $r62;
        java.lang.Object $r65, $r78;
        com.android.commands.monkey.MonkeyUtils$PackageFilter $r73;
        float[] $r84, r117;
        java.lang.Throwable $r92, $r95, $r96;
        android.os.RemoteException $r94;
        java.lang.String[] r100;
        java.util.Iterator r105;
        com.android.commands.monkey.MonkeySourceNetwork r112;

        r0 := @this: com.android.commands.monkey.Monkey;

        r100 := @parameter0: java.lang.String[];

        i50 = lengthof r100;

        i51 = 0;

     label01:
        if i51 >= i50 goto label03;

        $r91 = "--wait-dbg";

        $r90 = r100[i51];

        $z23 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>($r90);

        if $z23 == 0 goto label02;

        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label02:
        i51 = i51 + 1;

        goto label01;

     label03:
        r0.<com.android.commands.monkey.Monkey: int mVerbose> = 0;

        r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs> = r100;

        i52 = lengthof r100;

        i53 = 0;

     label04:
        if i53 >= i52 goto label05;

        r101 = r100[i53];

        r1 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arg: \"");

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r89 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r89);

        i53 = i53 + 1;

        goto label04;

     label05:
        r0.<com.android.commands.monkey.Monkey: int mNextArg> = 0;

        i54 = 0;

     label06:
        if i54 >= 12 goto label07;

        $r84 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $r84[i54] = 1.0F;

        i54 = i54 + 1;

        goto label06;

     label07:
        $z0 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean processOptions()>();

        if $z0 != 0 goto label08;

        return -1;

     label08:
        $z1 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean loadPackageLists()>();

        if $z1 != 0 goto label09;

        return -1;

     label09:
        $r2 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label10;

        $r82 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r82.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.LAUNCHER");

        $r83 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r83.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.MONKEY");

     label10:
        $l2 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label11;

        $l44 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i45 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l46 = (long) $i45;

        $l47 = $l44 + $l46;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = $l47;

     label11:
        $i4 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i4 <= 0 goto label13;

        r103 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Monkey: seed=");

        $l41 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l41);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i42 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r72 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r103.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r72);

        $r73 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        virtualinvoke $r73.<com.android.commands.monkey.MonkeyUtils$PackageFilter: void dump()>();

        $r74 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i43 = virtualinvoke $r74.<java.util.ArrayList: int size()>();

        if $i43 == 0 goto label13;

        $r75 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        r105 = virtualinvoke $r75.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z20 = interfaceinvoke r105.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label13;

        r106 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":IncludeCategory: ");

        $r78 = interfaceinvoke r105.<java.util.Iterator: java.lang.Object next()>();

        $r79 = (java.lang.String) $r78;

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r106.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r81);

        goto label12;

     label13:
        $z24 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkInternalConfiguration()>();

        if $z24 != 0 goto label14;

        return -2;

     label14:
        $z2 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>();

        if $z2 != 0 goto label15;

        return -3;

     label15:
        $z3 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean getMainApps()>();

        if $z3 != 0 goto label16;

        return -4;

     label16:
        $r3 = new java.util.Random;

        $l5 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        specialinvoke $r3.<java.util.Random: void <init>(long)>($l5);

        r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom> = $r3;

        r108 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        if r108 == null goto label17;

        $i36 = virtualinvoke r108.<java.util.ArrayList: int size()>();

        if $i36 != 1 goto label17;

        $r62 = new com.android.commands.monkey.MonkeySourceScript;

        $r64 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $r63 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $r65 = virtualinvoke $r63.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r66 = (java.lang.String) $r65;

        $l39 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z19 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $l38 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l37 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        specialinvoke $r62.<com.android.commands.monkey.MonkeySourceScript: void <init>(java.util.Random,java.lang.String,long,boolean,long,long)>($r64, $r66, $l39, $z19, $l38, $l37);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r62;

        $i40 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r62.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i40);

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 0;

        goto label29;

     label17:
        r110 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        if r110 == null goto label20;

        $i26 = virtualinvoke r110.<java.util.ArrayList: int size()>();

        if $i26 <= 1 goto label20;

        r111 = r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName>;

        if r111 == null goto label18;

        $r59 = new com.android.commands.monkey.MonkeySourceRandomScript;

        $r61 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $l33 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z18 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $r60 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $l32 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l31 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        $z17 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript>;

        specialinvoke $r59.<com.android.commands.monkey.MonkeySourceRandomScript: void <init>(java.lang.String,java.util.ArrayList,long,boolean,java.util.Random,long,long,boolean)>(r111, $r61, $l33, $z18, $r60, $l32, $l31, $z17);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r59;

        $i34 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i35 = $i34 + 1;

        r0.<com.android.commands.monkey.Monkey: int mCount> = $i35;

        goto label19;

     label18:
        $r55 = new com.android.commands.monkey.MonkeySourceRandomScript;

        $r57 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $l29 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z16 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $r56 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $l28 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l27 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        $z15 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript>;

        specialinvoke $r55.<com.android.commands.monkey.MonkeySourceRandomScript: void <init>(java.util.ArrayList,long,boolean,java.util.Random,long,long,boolean)>($r57, $l29, $z16, $r56, $l28, $l27, $z15);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r55;

     label19:
        $r58 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i30 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r58.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i30);

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 0;

        goto label29;

     label20:
        $i6 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        if $i6 == -1 goto label24;

     label21:
        r112 = new com.android.commands.monkey.MonkeySourceNetwork;

        $i25 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        specialinvoke r112.<com.android.commands.monkey.MonkeySourceNetwork: void <init>(int)>($i25);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = r112;

     label22:
        r0.<com.android.commands.monkey.Monkey: int mCount> = 2147483647;

        goto label29;

     label23:
        $r92 := @caughtexception;

        $r93 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r93.<com.android.commands.monkey.Logger: void println(java.lang.String)>("Error binding to network socket.");

        return -5;

     label24:
        $i7 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i7 < 2 goto label25;

        r114 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Seeded: ");

        $l24 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r114.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r54);

     label25:
        $r4 = new com.android.commands.monkey.MonkeySourceRandom;

        $r6 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $r5 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $l8 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z5 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $z4 = r0.<com.android.commands.monkey.Monkey: boolean mPermissionTargetSystem>;

        specialinvoke $r4.<com.android.commands.monkey.MonkeySourceRandom: void <init>(java.util.Random,java.util.List,long,boolean,boolean)>($r6, $r5, $l8, $z5, $z4);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r4;

        $i9 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r4.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i9);

        i55 = 0;

     label26:
        if i55 >= 12 goto label28;

        r117 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f0 = r117[i55];

        $b23 = $f0 cmpg 0.0F;

        if $b23 > 0 goto label27;

        $r49 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r50 = (com.android.commands.monkey.MonkeySourceRandom) $r49;

        $f1 = r117[i55];

        virtualinvoke $r50.<com.android.commands.monkey.MonkeySourceRandom: void setFactors(int,float)>(i55, $f1);

     label27:
        i55 = i55 + 1;

        goto label26;

     label28:
        $r7 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r8 = (com.android.commands.monkey.MonkeySourceRandom) $r7;

        virtualinvoke $r8.<com.android.commands.monkey.MonkeySourceRandom: void generateActivity()>();

     label29:
        $r118 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $z25 = interfaceinvoke $r118.<com.android.commands.monkey.MonkeyEventSource: boolean validate()>();

        if $z25 != 0 goto label30;

        return -5;

     label30:
        $z6 = r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z6 == 0 goto label31;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

     label31:
        $r9 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r9.<com.android.commands.monkey.MonkeyNetworkMonitor: void start()>();

     label32:
        i56 = specialinvoke r0.<com.android.commands.monkey.Monkey: int runMonkeyCycles()>();

     label33:
        $r10 = new com.android.commands.monkey.MonkeyRotationEvent;

        specialinvoke $r10.<com.android.commands.monkey.MonkeyRotationEvent: void <init>(int,boolean)>(0, 0);

        $r12 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r11 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i10 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        virtualinvoke $r10.<com.android.commands.monkey.MonkeyRotationEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r12, $r11, $i10);

        $r13 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r13.<com.android.commands.monkey.MonkeyNetworkMonitor: void stop()>();

        entermonitor r0;

     label34:
        $z7 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z7 == 0 goto label35;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

     label35:
        $z8 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport>;

        if $z8 == 0 goto label36;

        $r43 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r43.<com.android.commands.monkey.Logger: void println(java.lang.String)>("Print the anr report");

        r119 = new java.lang.StringBuilder;

        specialinvoke r119.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anr_");

        $r45 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        virtualinvoke r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r48 = virtualinvoke r119.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r48);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

     label36:
        $z9 = r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport>;

        if $z9 == 0 goto label37;

        $r42 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r42.<com.android.commands.monkey.Logger: void println(java.lang.String)>("Print the watchdog report");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("anr_watchdog_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

     label37:
        $z10 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport>;

        if $z10 == 0 goto label38;

        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app_crash");

        $r38 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r41 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r41);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

     label38:
        $z11 = r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z11 == 0 goto label39;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

     label39:
        $z12 = r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport>;

        if $z12 == 0 goto label40;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("Bugreport_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

     label40:
        $z13 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        if $z13 == 0 goto label41;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label41:
        exitmonitor r0;

     label42:
        $z14 = r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z14 == 0 goto label43;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

        $i22 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i22 <= 0 goto label43;

        $r36 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r36.<com.android.commands.monkey.Logger: void println(java.lang.String)>("// Generated profiling reports in /data/misc");

     label43:
        $r121 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        interfaceinvoke $r121.<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>(null, 1);

        $r122 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        $r123 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        virtualinvoke $r122.<com.android.commands.monkey.MonkeyNetworkMonitor: void unregister(android.app.IActivityManager)>($r123);

     label44:
        i57 = i56;

        goto label46;

     label45:
        $r94 := @caughtexception;

        i0 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        i57 = i56;

        if i56 < i0 goto label46;

        i57 = i0 - 1;

     label46:
        $i58 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i58 <= 0 goto label47;

        r125 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Dropped: keys=");

        $l17 = r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pointers=");

        $l18 = r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trackballs=");

        $l19 = r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flips=");

        $l20 = r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rotations=");

        $l21 = r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r35 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r125.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r35);

     label47:
        $r14 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r14.<com.android.commands.monkey.MonkeyNetworkMonitor: void dump()>();

        $i12 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i13 = $i12 - 1;

        if i57 >= $i13 goto label48;

        r127 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** System appears to have crashed at event ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i57);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $i15 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using seed ");

        $l16 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r23 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r127.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r23);

        return i57;

     label48:
        $i14 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i14 <= 0 goto label49;

        $r15 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r15.<com.android.commands.monkey.Logger: void println(java.lang.String)>("// Monkey finished");

     label49:
        return 0;

     label50:
        $r95 := @caughtexception;

     label51:
        exitmonitor r0;

     label52:
        throw $r95;

     label53:
        $r96 := @caughtexception;

        $r97 = new com.android.commands.monkey.MonkeyRotationEvent;

        specialinvoke $r97.<com.android.commands.monkey.MonkeyRotationEvent: void <init>(int,boolean)>(0, 0);

        $r99 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r98 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i48 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        virtualinvoke $r97.<com.android.commands.monkey.MonkeyRotationEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r99, $r98, $i48);

        throw $r96;

        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label32 to label33 with label53;
        catch java.lang.Throwable from label34 to label35 with label50;
        catch java.lang.Throwable from label35 to label36 with label50;
        catch java.lang.Throwable from label36 to label37 with label50;
        catch java.lang.Throwable from label37 to label38 with label50;
        catch java.lang.Throwable from label38 to label39 with label50;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch java.lang.Throwable from label40 to label41 with label50;
        catch java.lang.Throwable from label41 to label42 with label50;
        catch android.os.RemoteException from label43 to label44 with label45;
        catch java.lang.Throwable from label51 to label52 with label50;
    }

    private int runMonkeyCycles()
    {
        com.android.commands.monkey.Monkey r0;
        long l0, $l4, $l5, $l6, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18;
        java.lang.StringBuilder r1, r36, r37, r39, r43, $r49;
        int i1, $i2, $i3, $i8, $i17, i19, i20, i21, i22, i23, i24, i25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, z24, z25, z26, z27, z28, z29, $z30, z31, z32, $z33;
        byte $b7;
        android.app.IActivityManager $r4;
        android.view.IWindowManager $r5;
        com.android.commands.monkey.Logger $r6, $r7, $r8, $r18, $r22, $r28, r38, r41, r42, r48;
        java.lang.String $r14, $r17, $r21, $r24, $r27, $r30, $r33, r40, $r51;
        java.lang.RuntimeException $r34;
        java.lang.Throwable $r35;
        com.android.commands.monkey.MonkeyEventSource $r44;
        com.android.commands.monkey.MonkeyEvent r45;

        r0 := @this: com.android.commands.monkey.Monkey;

        i19 = 0;

        i20 = 0;

        z23 = 0;

        z24 = 0;

        z25 = 0;

        z26 = 0;

     label001:
        if z26 != 0 goto label143;

        i21 = i19;

     label002:
        $i2 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        if i20 >= $i2 goto label143;

     label003:
        i21 = i19;

     label004:
        entermonitor r0;

     label005:
        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank>;

        if $z0 == 0 goto label006;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportProcRank()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = 0;

     label006:
        z27 = z23;

     label007:
        $z1 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z1 == 0 goto label009;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

     label008:
        z27 = 1;

     label009:
        $z2 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport>;

        if $z2 == 0 goto label010;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anr_");

        $r30 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r33 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r33);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

     label010:
        $z3 = r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport>;

        if $z3 == 0 goto label011;

        $r28 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r28.<com.android.commands.monkey.Logger: void println(java.lang.String)>("Print the watchdog report");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("anr_watchdog_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

     label011:
        $z4 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport>;

        if $z4 == 0 goto label012;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app_crash");

        $r24 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r27 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r27);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

     label012:
        $z5 = r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport>;

        if $z5 == 0 goto label013;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("Bugreport_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

     label013:
        z28 = z24;

     label014:
        $z6 = r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z6 == 0 goto label016;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

     label015:
        z28 = 1;

     label016:
        $z7 = r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes>;

        if $z7 == 0 goto label024;

        $z18 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkNativeCrashes()>();

        if $z18 == 0 goto label024;

     label017:
        if i19 <= 0 goto label024;

     label018:
        $r22 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r22.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** New native crash detected.");

        $z19 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        if $z19 == 0 goto label019;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("native_crash_");

     label019:
        $z20 = r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z20 != 0 goto label022;

        $z21 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreNativeCrashes>;

        if $z21 == 0 goto label022;

        $z22 = r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        if $z22 == 0 goto label021;

     label020:
        goto label022;

     label021:
        z29 = 0;

        goto label023;

     label022:
        z29 = 1;

     label023:
        r0.<com.android.commands.monkey.Monkey: boolean mAbort> = z29;

     label024:
        $z30 = r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z30 == 0 goto label026;

     label025:
        z25 = 1;

     label026:
        $z8 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        if $z8 == 0 goto label027;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label027:
        exitmonitor r0;

     label028:
        z23 = z27;

        if z27 == 0 goto label030;

        z23 = 0;

        i21 = i19;

     label029:
        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

     label030:
        z24 = z28;

        if z28 == 0 goto label032;

        z24 = 0;

        i21 = i19;

     label031:
        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

     label032:
        if z25 == 0 goto label047;

        i21 = i19;

     label033:
        $r18 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r18.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Monkey aborted due to error.");

     label034:
        i21 = i19;

     label035:
        r38 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

     label036:
        i21 = i19;

     label037:
        r39 = new java.lang.StringBuilder;

     label038:
        i21 = i19;

     label039:
        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

     label040:
        i21 = i19;

     label041:
        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events injected: ");

     label042:
        i21 = i19;

     label043:
        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

     label044:
        i21 = i19;

     label045:
        $r21 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r21);

     label046:
        return i19;

     label047:
        i21 = i19;

     label048:
        $z9 = r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents>;

        if $z9 == 0 goto label050;

     label049:
        i19 = i19 + 1;

        i20 = i20 + 1;

        goto label001;

     label050:
        i21 = i19;

     label051:
        $i3 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i3 <= 0 goto label086;

     label052:
        $i17 = i19 % 100;

        if $i17 != 0 goto label086;

        if i19 == 0 goto label086;

        i21 = i19;

     label053:
        $l18 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r40 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l18);

     label054:
        i21 = i19;

     label055:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label056:
        i21 = i19;

     label057:
        r41 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

     label058:
        i21 = i19;

     label059:
        r1 = new java.lang.StringBuilder;

     label060:
        i21 = i19;

     label061:
        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label062:
        i21 = i19;

     label063:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    //[calendar_time:");

     label064:
        i21 = i19;

     label065:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

     label066:
        i21 = i19;

     label067:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" system_uptime:");

     label068:
        i21 = i19;

     label069:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

     label070:
        i21 = i19;

     label071:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label072:
        i21 = i19;

     label073:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r14);

     label074:
        i21 = i19;

     label075:
        r42 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

     label076:
        i21 = i19;

     label077:
        r43 = new java.lang.StringBuilder;

     label078:
        i21 = i19;

     label079:
        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

     label080:
        i21 = i19;

     label081:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    // Sending event #");

     label082:
        i21 = i19;

     label083:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

     label084:
        i21 = i19;

     label085:
        $r17 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r17);

     label086:
        i21 = i19;

     label087:
        $r44 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        r45 = interfaceinvoke $r44.<com.android.commands.monkey.MonkeyEventSource: com.android.commands.monkey.MonkeyEvent getNextEvent()>();

     label088:
        if r45 == null goto label126;

        i21 = i19;

     label089:
        $r5 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r4 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i8 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        i22 = virtualinvoke r45.<com.android.commands.monkey.MonkeyEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r5, $r4, $i8);

     label090:
        if i22 != 0 goto label112;

        i21 = i19;

     label091:
        $r8 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r8.<com.android.commands.monkey.Logger: void println(java.lang.String)>("    // Injection Failed");

     label092:
        i21 = i19;

     label093:
        $z14 = r45 instanceof com.android.commands.monkey.MonkeyKeyEvent;

        if $z14 == 0 goto label097;

     label094:
        i21 = i19;

     label095:
        $l15 = r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        $l16 = $l15 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = $l16;

     label096:
        z31 = z26;

        goto label120;

     label097:
        i21 = i19;

     label098:
        $z15 = r45 instanceof com.android.commands.monkey.MonkeyMotionEvent;

        if $z15 == 0 goto label102;

     label099:
        i21 = i19;

     label100:
        $l13 = r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        $l14 = $l13 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = $l14;

     label101:
        z31 = z26;

        goto label120;

     label102:
        i21 = i19;

     label103:
        $z16 = r45 instanceof com.android.commands.monkey.MonkeyFlipEvent;

        if $z16 == 0 goto label107;

     label104:
        i21 = i19;

     label105:
        $l11 = r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        $l12 = $l11 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = $l12;

     label106:
        z31 = z26;

        goto label120;

     label107:
        z31 = z26;

        i21 = i19;

     label108:
        $z17 = r45 instanceof com.android.commands.monkey.MonkeyRotationEvent;

        if $z17 == 0 goto label120;

     label109:
        i21 = i19;

     label110:
        $l9 = r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents>;

        $l10 = $l9 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents> = $l10;

     label111:
        z31 = z26;

        goto label120;

     label112:
        if i22 != -1 goto label115;

        z31 = 1;

        i21 = i19;

     label113:
        $r7 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r7.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: RemoteException while injecting event.");

     label114:
        goto label120;

     label115:
        z31 = z26;

        if i22 != -2 goto label120;

        i21 = i19;

     label116:
        $z13 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions>;

        z32 = 1 ^ $z13;

     label117:
        z31 = z32;

        if z32 == 0 goto label120;

        i21 = i19;

     label118:
        $r6 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r6.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Error: SecurityException while injecting event.");

     label119:
        z31 = z32;

     label120:
        i23 = i19;

        i24 = i20;

        i21 = i19;

     label121:
        $z33 = r45 instanceof com.android.commands.monkey.MonkeyThrottleEvent;

        if $z33 != 0 goto label125;

     label122:
        i25 = i19 + 1;

        i23 = i25;

        i24 = i20;

        i21 = i25;

     label123:
        $z12 = r0.<com.android.commands.monkey.Monkey: boolean mCountEvents>;

        if $z12 == 0 goto label125;

     label124:
        i24 = i20 + 1;

        i23 = i25;

     label125:
        i20 = i24;

        goto label137;

     label126:
        i21 = i19;

     label127:
        $z10 = r0.<com.android.commands.monkey.Monkey: boolean mCountEvents>;

        if $z10 != 0 goto label143;

     label128:
        i1 = i20 + 1;

        i21 = i19;

     label129:
        specialinvoke r0.<com.android.commands.monkey.Monkey: void writeScriptLog(int)>(i1);

     label130:
        i23 = i19;

        i20 = i1;

        z31 = z26;

        i21 = i19;

     label131:
        $z11 = r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport>;

        if $z11 == 0 goto label137;

     label132:
        i23 = i19;

        i20 = i1;

        z31 = z26;

        i21 = i19;

     label133:
        $l5 = (long) i1;

        $l4 = r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency>;

        $l6 = $l5 % $l4;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label137;

     label134:
        i21 = i19;

     label135:
        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 1;

     label136:
        z31 = z26;

        i20 = i1;

        i23 = i19;

     label137:
        i19 = i23;

        z26 = z31;

        goto label001;

     label138:
        $r35 := @caughtexception;

     label139:
        exitmonitor r0;

     label140:
        i21 = i19;

     label141:
        throw $r35;

     label142:
        $r34 := @caughtexception;

        staticinvoke <com.android.commands.monkey.Logger: void error(java.lang.String,java.lang.Throwable)>("** Error: A RuntimeException occurred:", $r34);

        i19 = i21;

        goto label143;

     label143:
        r48 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events injected: ");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r48.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r51);

        return i19;

        catch java.lang.RuntimeException from label002 to label003 with label142;
        catch java.lang.RuntimeException from label004 to label005 with label142;
        catch java.lang.Throwable from label005 to label006 with label138;
        catch java.lang.Throwable from label007 to label008 with label138;
        catch java.lang.Throwable from label009 to label010 with label138;
        catch java.lang.Throwable from label010 to label011 with label138;
        catch java.lang.Throwable from label011 to label012 with label138;
        catch java.lang.Throwable from label012 to label013 with label138;
        catch java.lang.Throwable from label014 to label015 with label138;
        catch java.lang.Throwable from label016 to label017 with label138;
        catch java.lang.Throwable from label018 to label019 with label138;
        catch java.lang.Throwable from label019 to label020 with label138;
        catch java.lang.Throwable from label023 to label024 with label138;
        catch java.lang.Throwable from label024 to label025 with label138;
        catch java.lang.Throwable from label026 to label027 with label138;
        catch java.lang.Throwable from label027 to label028 with label138;
        catch java.lang.RuntimeException from label029 to label030 with label142;
        catch java.lang.RuntimeException from label031 to label032 with label142;
        catch java.lang.RuntimeException from label033 to label034 with label142;
        catch java.lang.RuntimeException from label035 to label036 with label142;
        catch java.lang.RuntimeException from label037 to label038 with label142;
        catch java.lang.RuntimeException from label039 to label040 with label142;
        catch java.lang.RuntimeException from label041 to label042 with label142;
        catch java.lang.RuntimeException from label043 to label044 with label142;
        catch java.lang.RuntimeException from label045 to label046 with label142;
        catch java.lang.RuntimeException from label048 to label049 with label142;
        catch java.lang.RuntimeException from label051 to label052 with label142;
        catch java.lang.RuntimeException from label053 to label054 with label142;
        catch java.lang.RuntimeException from label055 to label056 with label142;
        catch java.lang.RuntimeException from label057 to label058 with label142;
        catch java.lang.RuntimeException from label059 to label060 with label142;
        catch java.lang.RuntimeException from label061 to label062 with label142;
        catch java.lang.RuntimeException from label063 to label064 with label142;
        catch java.lang.RuntimeException from label065 to label066 with label142;
        catch java.lang.RuntimeException from label067 to label068 with label142;
        catch java.lang.RuntimeException from label069 to label070 with label142;
        catch java.lang.RuntimeException from label071 to label072 with label142;
        catch java.lang.RuntimeException from label073 to label074 with label142;
        catch java.lang.RuntimeException from label075 to label076 with label142;
        catch java.lang.RuntimeException from label077 to label078 with label142;
        catch java.lang.RuntimeException from label079 to label080 with label142;
        catch java.lang.RuntimeException from label081 to label082 with label142;
        catch java.lang.RuntimeException from label083 to label084 with label142;
        catch java.lang.RuntimeException from label085 to label086 with label142;
        catch java.lang.RuntimeException from label087 to label088 with label142;
        catch java.lang.RuntimeException from label089 to label090 with label142;
        catch java.lang.RuntimeException from label091 to label092 with label142;
        catch java.lang.RuntimeException from label093 to label094 with label142;
        catch java.lang.RuntimeException from label095 to label096 with label142;
        catch java.lang.RuntimeException from label098 to label099 with label142;
        catch java.lang.RuntimeException from label100 to label101 with label142;
        catch java.lang.RuntimeException from label103 to label104 with label142;
        catch java.lang.RuntimeException from label105 to label106 with label142;
        catch java.lang.RuntimeException from label108 to label109 with label142;
        catch java.lang.RuntimeException from label110 to label111 with label142;
        catch java.lang.RuntimeException from label113 to label114 with label142;
        catch java.lang.RuntimeException from label116 to label117 with label142;
        catch java.lang.RuntimeException from label118 to label119 with label142;
        catch java.lang.RuntimeException from label121 to label122 with label142;
        catch java.lang.RuntimeException from label123 to label124 with label142;
        catch java.lang.RuntimeException from label127 to label128 with label142;
        catch java.lang.RuntimeException from label129 to label130 with label142;
        catch java.lang.RuntimeException from label131 to label132 with label142;
        catch java.lang.RuntimeException from label133 to label134 with label142;
        catch java.lang.RuntimeException from label135 to label136 with label142;
        catch java.lang.Throwable from label139 to label140 with label138;
        catch java.lang.RuntimeException from label141 to label142 with label142;
    }

    private void showUsage()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.StringBuffer $r2;
        com.android.commands.monkey.Logger $r31;
        java.lang.String $r32;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("usage: monkey [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] ...]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [-c MAIN_CATEGORY [-c MAIN_CATEGORY] ...]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--ignore-crashes] [--ignore-timeouts]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--ignore-security-exceptions]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--monitor-native-crashes] [--ignore-native-crashes]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--kill-process-after-error] [--hprof]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--match-description TEXT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-touch PERCENT] [--pct-motion PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-trackball PERCENT] [--pct-syskeys PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-nav PERCENT] [--pct-majornav PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-appswitch PERCENT] [--pct-flip PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-anyevent PERCENT] [--pct-pinchzoom PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-permission PERCENT]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pkg-blacklist-file PACKAGE_BLACKLIST_FILE]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pkg-whitelist-file PACKAGE_WHITELIST_FILE]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--wait-dbg] [--dbg-no-events]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--setup scriptfile] [-f scriptfile [-f scriptfile] ...]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--port port]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [-s SEED] [-v [-v] ...]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--throttle MILLISEC] [--randomize-throttle]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--profile-wait MILLISEC]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--device-sleep-time MILLISEC]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--randomize-script]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--script-log]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--bugreport]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--periodic-bugreport]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--permission-target-system]\n");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              COUNT\n");

        $r31 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r32 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r31.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r32);

        return;
    }

    private void signalPersistentProcesses()
    {
        com.android.commands.monkey.Monkey r0;
        android.app.IActivityManager $r1;
        java.lang.Throwable $r2, $r3;
        android.os.RemoteException $r4;
        com.android.commands.monkey.Logger $r5;

        r0 := @this: com.android.commands.monkey.Monkey;

     label1:
        $r1 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        interfaceinvoke $r1.<android.app.IActivityManager: void signalPersistentProcesses(int)>(10);

        entermonitor r0;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(2000L);

        exitmonitor r0;

     label3:
        goto label9;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

     label7:
        $r2 := @caughtexception;

        goto label9;

     label8:
        $r4 := @caughtexception;

        $r5 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r5.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Failed talking with activity manager!");

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.InterruptedException from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.InterruptedException from label6 to label7 with label7;
    }

    private void waitForTombstoneToBeWritten(java.nio.file.Path)
    {
        com.android.commands.monkey.Monkey r0;
        long l0, l1;
        int $i2, i5;
        com.android.commands.monkey.Logger $r2, r13;
        byte $b3, $b4;
        java.lang.Throwable $r3, $r9;
        java.lang.String $r6, $r8;
        java.nio.file.Path r10;
        boolean z2;
        java.lang.StringBuilder r14;
        java.io.IOException r15;

        r0 := @this: com.android.commands.monkey.Monkey;

        r10 := @parameter0: java.nio.file.Path;

        i5 = 0;

     label01:
        z2 = 0;

     label02:
        $i2 = <com.android.commands.monkey.Monkey: int NUM_READ_TOMBSTONE_RETRIES>;

        if i5 >= $i2 goto label10;

        l0 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r10);

     label03:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label04:
        goto label06;

     label05:
        $r9 := @caughtexception;

        goto label04;

     label06:
        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label09;

     label07:
        l1 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r10);

     label08:
        $b4 = l1 cmp l0;

        if $b4 != 0 goto label09;

        z2 = 1;

        goto label10;

     label09:
        i5 = i5 + 1;

        goto label01;

     label10:
        goto label12;

     label11:
        $r3 := @caughtexception;

        r13 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get tombstone file size: ");

        r15 = (java.io.IOException) $r3;

        $r6 = virtualinvoke r15.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r8);

        z2 = 0;

     label12:
        if z2 != 0 goto label13;

        $r2 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r2.<com.android.commands.monkey.Logger: void println(java.lang.String)>("Incomplete tombstone file.");

        return;

     label13:
        return;

        catch java.io.IOException from label02 to label03 with label11;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label07 to label08 with label11;
    }

    private void writeScriptLog(int)
    {
        com.android.commands.monkey.Monkey r0;
        int i0;
        java.io.File $r2, r17;
        long $l1;
        java.lang.String $r6, $r9, $r12;
        java.lang.Throwable $r10;
        com.android.commands.monkey.Logger $r11;
        java.io.FileWriter r18;
        java.io.BufferedWriter r19;
        java.lang.StringBuilder r20;
        java.io.IOException r21;

        r0 := @this: com.android.commands.monkey.Monkey;

        i0 := @parameter0: int;

     label1:
        r19 = new java.io.BufferedWriter;

        r18 = new java.io.FileWriter;

        r17 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>();

        specialinvoke r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "scriptlog.txt");

        specialinvoke r18.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r17, 1);

        specialinvoke r19.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r18);

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iteration: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.io.Writer: void write(java.lang.String)>($r9);

        virtualinvoke r19.<java.io.Writer: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        r21 = (java.io.IOException) $r10;

        $r12 = virtualinvoke r21.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r11.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r12);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
