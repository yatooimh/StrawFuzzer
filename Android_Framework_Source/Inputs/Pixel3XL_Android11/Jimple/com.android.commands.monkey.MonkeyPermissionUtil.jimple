public class com.android.commands.monkey.MonkeyPermissionUtil extends java.lang.Object
{
    private static final java.lang.String[] MODERN_PERMISSION_GROUPS;
    private static final java.lang.String PERMISSION_GROUP_PREFIX;
    private static final java.lang.String PERMISSION_PREFIX;
    private final android.permission.IPermissionManager mPermManager;
    private java.util.Map mPermissionMap;
    private android.content.pm.IPackageManager mPm;
    private boolean mTargetSystemPackages;
    private java.util.List mTargetedPackages;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.commands.monkey.MonkeyPermissionUtil: java.lang.String PERMISSION_PREFIX> = "android.permission.";

        <com.android.commands.monkey.MonkeyPermissionUtil: java.lang.String PERMISSION_GROUP_PREFIX> = "android.permission-group.";

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "android.permission-group.CALENDAR";

        $r0[1] = "android.permission-group.CAMERA";

        $r0[2] = "android.permission-group.CONTACTS";

        $r0[3] = "android.permission-group.LOCATION";

        $r0[4] = "android.permission-group.SENSORS";

        $r0[5] = "android.permission-group.SMS";

        $r0[6] = "android.permission-group.PHONE";

        $r0[7] = "android.permission-group.MICROPHONE";

        $r0[8] = "android.permission-group.STORAGE";

        <com.android.commands.monkey.MonkeyPermissionUtil: java.lang.String[] MODERN_PERMISSION_GROUPS> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        android.os.IBinder $r1, $r3;
        android.content.pm.IPackageManager $r2;
        android.permission.IPermissionManager $r4;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r2 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r1);

        r0.<com.android.commands.monkey.MonkeyPermissionUtil: android.content.pm.IPackageManager mPm> = $r2;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("permissionmgr");

        $r4 = staticinvoke <android.permission.IPermissionManager$Stub: android.permission.IPermissionManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.monkey.MonkeyPermissionUtil: android.permission.IPermissionManager mPermManager> = $r4;

        return;
    }

    private static boolean isModernPermissionGroup(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.lang.String[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = <com.android.commands.monkey.MonkeyPermissionUtil: java.lang.String[] MODERN_PERMISSION_GROUPS>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean shouldTargetPackage(android.content.pm.PackageInfo)
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        android.content.pm.PackageInfo r1;
        com.android.commands.monkey.MonkeyUtils$PackageFilter $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, $z2;
        android.content.pm.ApplicationInfo $r6;
        int $i0, $i1;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $r2 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        $r3 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r2.<com.android.commands.monkey.MonkeyUtils$PackageFilter: boolean checkEnteringPackage(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: boolean mTargetSystemPackages>;

        if $z1 == 0 goto label2;

        $r4 = staticinvoke <com.android.commands.monkey.MonkeyUtils: com.android.commands.monkey.MonkeyUtils$PackageFilter getPackageFilter()>();

        $r5 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z2 = virtualinvoke $r4.<com.android.commands.monkey.MonkeyUtils$PackageFilter: boolean isPackageInvalid(java.lang.String)>($r5);

        if $z2 != 0 goto label2;

        $r6 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean shouldTargetPermission(java.lang.String, android.content.pm.PermissionInfo) throws android.os.RemoteException
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        android.content.pm.PermissionInfo r1;
        int i0, $i1, $i2, $i3;
        android.permission.IPermissionManager $r2;
        java.lang.String $r3, $r4, r5, r6;
        boolean $z0, z1;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PermissionInfo;

        $r2 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: android.permission.IPermissionManager mPermManager>;

        $r3 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i0 = interfaceinvoke $r2.<android.permission.IPermissionManager: int getPermissionFlags(java.lang.String,java.lang.String,int)>($r3, r5, $i1);

        r6 = r1.<android.content.pm.PermissionInfo: java.lang.String group>;

        z1 = 1;

        if r6 == null goto label1;

        $i2 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i2 != 1 goto label1;

        $i3 = i0 & 20;

        if $i3 != 0 goto label1;

        $r4 = r1.<android.content.pm.PermissionInfo: java.lang.String group>;

        $z0 = staticinvoke <com.android.commands.monkey.MonkeyPermissionUtil: boolean isModernPermissionGroup(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void dump()
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        java.util.Iterator r1, r2;
        com.android.commands.monkey.Logger $r3, $r8, $r22;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r9, $r11, $r13;
        java.lang.Object[] $r7, $r23;
        java.lang.String $r10, $r14, $r15, r18, r19, r20, r21, $r24;
        java.util.List $r12;
        int $i0, $i1;
        java.util.Map$Entry r16;
        android.content.pm.PermissionInfo r17;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        $r3 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r3.<com.android.commands.monkey.Logger: void println(java.lang.String)>("// Targeted packages and permissions:");

        $r4 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r6;

        $r8 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("//  + Using %s", $r7);

        virtualinvoke $r8.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r10);

        $r11 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.List) $r11;

        r2 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.content.pm.PermissionInfo) $r13;

        r18 = r17.<android.content.pm.PermissionInfo: java.lang.String name>;

        r19 = r18;

        if r18 == null goto label3;

        r19 = r18;

        $z3 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>("android.permission.");

        if $z3 == 0 goto label3;

        $r15 = "android.permission.";

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        r19 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        r20 = r17.<android.content.pm.PermissionInfo: java.lang.String group>;

        r21 = r20;

        if r20 == null goto label4;

        r21 = r20;

        $z2 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("android.permission-group.");

        if $z2 == 0 goto label4;

        $r14 = "android.permission-group.";

        $i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        r21 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>($i0);

     label4:
        $r22 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = r19;

        $r23[1] = r21;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("//    Permission: %s [%s]", $r23);

        virtualinvoke $r22.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r24);

        goto label2;

     label5:
        goto label1;

     label6:
        return;
    }

    public com.android.commands.monkey.MonkeyPermissionEvent generateRandomPermissionEvent(java.util.Random)
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        java.util.Random r1;
        java.util.List r2, r9;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r5, $r7;
        java.util.Map $r4;
        com.android.commands.monkey.MonkeyPermissionEvent $r6;
        android.content.pm.PermissionInfo $r8;
        java.lang.String r10;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        r1 := @parameter0: java.util.Random;

        r9 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.List mTargetedPackages>;

        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        $i1 = virtualinvoke r1.<java.util.Random: int nextInt(int)>($i0);

        $r3 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>($i1);

        r10 = (java.lang.String) $r3;

        $r4 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r2 = (java.util.List) $r5;

        $r6 = new com.android.commands.monkey.MonkeyPermissionEvent;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i3 = virtualinvoke r1.<java.util.Random: int nextInt(int)>($i2);

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r8 = (android.content.pm.PermissionInfo) $r7;

        specialinvoke $r6.<com.android.commands.monkey.MonkeyPermissionEvent: void <init>(java.lang.String,android.content.pm.PermissionInfo)>(r10, $r8);

        return $r6;
    }

    public boolean populatePermissionsMapping()
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        java.util.Iterator r1;
        android.content.pm.PackageInfo r2;
        java.util.ArrayList r3, $r9;
        int i0, $i1, $i2, i3;
        java.util.HashMap $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.ParceledListSlice $r6;
        java.util.List $r7;
        java.util.Map $r8, $r10, $r16;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.util.Set $r11;
        java.lang.Object $r12;
        android.content.pm.ApplicationInfo $r13;
        java.lang.String[] $r14, r22;
        java.lang.String $r15, $r19, r23;
        android.permission.IPermissionManager $r18;
        android.os.RemoteException $r20;
        com.android.commands.monkey.Logger $r21;
        android.content.pm.PermissionInfo r24;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap> = $r4;

     label01:
        $r5 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: android.content.pm.IPackageManager mPm>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(4096, $i1);

        $r7 = virtualinvoke $r6.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r1 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label17;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.PackageInfo) $r12;

        $z1 = specialinvoke r0.<com.android.commands.monkey.MonkeyPermissionUtil: boolean shouldTargetPackage(android.content.pm.PackageInfo)>(r2);

        if $z1 != 0 goto label04;

     label03:
        goto label02;

     label04:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r13 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r13.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 > 22 goto label06;

     label05:
        goto label02;

     label06:
        $r14 = r2.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        if $r14 != null goto label08;

     label07:
        goto label02;

     label08:
        r22 = r2.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i0 = lengthof r22;

     label09:
        i3 = 0;

     label10:
        if i3 >= i0 goto label15;

        r23 = r22[i3];

     label11:
        $r18 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: android.permission.IPermissionManager mPermManager>;

        r24 = interfaceinvoke $r18.<android.permission.IPermissionManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>(r23, "shell", 0);

     label12:
        if r24 == null goto label14;

     label13:
        $r19 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z3 = specialinvoke r0.<com.android.commands.monkey.MonkeyPermissionUtil: boolean shouldTargetPermission(java.lang.String,android.content.pm.PermissionInfo)>($r19, r24);

        if $z3 == 0 goto label14;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r24);

     label14:
        i3 = i3 + 1;

        goto label10;

     label15:
        $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label16;

        $r16 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap>;

        $r15 = r2.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r3);

     label16:
        goto label02;

     label17:
        $r8 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap>;

        $z0 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label18;

        $r9 = new java.util.ArrayList;

        $r10 = r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.Map mPermissionMap>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r0.<com.android.commands.monkey.MonkeyPermissionUtil: java.util.List mTargetedPackages> = $r9;

     label18:
        return 1;

     label19:
        $r20 := @caughtexception;

        $r21 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r21.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Failed talking with package manager!");

        return 0;

        catch android.os.RemoteException from label01 to label02 with label19;
        catch android.os.RemoteException from label02 to label03 with label19;
        catch android.os.RemoteException from label04 to label05 with label19;
        catch android.os.RemoteException from label06 to label07 with label19;
        catch android.os.RemoteException from label08 to label09 with label19;
        catch android.os.RemoteException from label11 to label12 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch android.os.RemoteException from label15 to label16 with label19;
    }

    public void setTargetSystemPackages(boolean)
    {
        com.android.commands.monkey.MonkeyPermissionUtil r0;
        boolean z0;

        r0 := @this: com.android.commands.monkey.MonkeyPermissionUtil;

        z0 := @parameter0: boolean;

        r0.<com.android.commands.monkey.MonkeyPermissionUtil: boolean mTargetSystemPackages> = z0;

        return;
    }
}
