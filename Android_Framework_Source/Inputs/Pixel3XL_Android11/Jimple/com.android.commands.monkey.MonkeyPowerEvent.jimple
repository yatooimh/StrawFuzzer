public class com.android.commands.monkey.MonkeyPowerEvent extends com.android.commands.monkey.MonkeyEvent
{
    private static final java.lang.String LOG_FILE;
    private static final java.lang.String TAG;
    private static final java.lang.String TEST_DELAY_STARTED;
    private static final java.lang.String TEST_ENDED;
    private static final java.lang.String TEST_IDLE_ENDED;
    private static final java.lang.String TEST_SEQ_BEGIN;
    private static final java.lang.String TEST_STARTED;
    private static final long USB_DELAY_TIME;
    private static java.util.ArrayList mLogEvents;
    private static long mTestStartTime;
    private java.lang.String mPowerLogTag;
    private java.lang.String mTestResult;

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <com.android.commands.monkey.MonkeyPowerEvent: long USB_DELAY_TIME> = 10000L;

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_STARTED> = "AUTOTEST_TEST_BEGIN";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_SEQ_BEGIN> = "AUTOTEST_SEQUENCE_BEGIN";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_IDLE_ENDED> = "AUTOTEST_IDLE_SUCCESS";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_ENDED> = "AUTOTEST_TEST_SUCCESS";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_DELAY_STARTED> = "AUTOTEST_TEST_BEGIN_DELAY";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TAG> = "PowerTester";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String LOG_FILE> = "/sdcard/autotester.log";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = null;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = r1;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = r1;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = r2;

        return;
    }

    private void bufferLogEvent(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1, r3, r4;
        long l0, $l4, $l5, l6, l7;
        int $i1, $i2, $i3;
        java.util.ArrayList $r2;
        android.content.ContentValues $r5;
        java.lang.Long $r7;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_TEST_BEGIN");

        if $i1 != 0 goto label1;

        <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime> = l0;

        l6 = l0;

        goto label4;

     label1:
        $i2 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_IDLE_SUCCESS");

        if $i2 != 0 goto label3;

        l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        $l5 = <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime>;

        l6 = $l5 + l7;

        r4 = "AUTOTEST_TEST_SUCCESS";

     label2:
        r3 = r4;

        goto label4;

     label3:
        l6 = l0;

        r4 = r3;

        $i3 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_TEST_BEGIN_DELAY");

        if $i3 != 0 goto label2;

        $l4 = 10000L + l0;

        <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime> = $l4;

        l6 = <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime>;

        r3 = "AUTOTEST_TEST_BEGIN";

     label4:
        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r7);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("tag", r3);

        if r1 == null goto label5;

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", r1);

     label5:
        $r2 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return;
    }

    private void writeLogEvents()
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.StringBuffer r1;
        android.content.ContentValues[] $r2, r15;
        java.util.ArrayList $r3, $r5;
        java.lang.Object[] $r4;
        int $i0, i2;
        java.lang.String $r6, $r8, $r9, $r10, r19;
        java.lang.Long $r7;
        long $l1;
        boolean $z0;
        java.lang.Throwable $r11, $r12, $r13, $r14;
        java.io.FileWriter r16, r17, r20;
        android.content.ContentValues r18;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        $r3 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        $r2 = newarray (android.content.ContentValues)[0];

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r15 = (android.content.ContentValues[]) $r4;

        $r5 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r16 = null;

        r17 = null;

     label01:
        r1 = new java.lang.StringBuffer;

     label02:
        r16 = null;

        r17 = null;

     label03:
        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

     label04:
        i2 = 0;

     label05:
        r16 = null;

        r17 = null;

     label06:
        $i0 = lengthof r15;

        if i2 >= $i0 goto label22;

     label07:
        r18 = r15[i2];

        r16 = null;

        r17 = null;

     label08:
        $r7 = virtualinvoke r18.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("date");

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label09:
        r16 = null;

        r17 = null;

     label10:
        $r9 = virtualinvoke r18.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("tag");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label11:
        r16 = null;

        r17 = null;

     label12:
        $z0 = virtualinvoke r18.<android.content.ContentValues: boolean containsKey(java.lang.String)>("value");

        if $z0 == 0 goto label19;

     label13:
        r16 = null;

        r17 = null;

     label14:
        r19 = virtualinvoke r18.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("value");

     label15:
        r16 = null;

        r17 = null;

     label16:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label17:
        r16 = null;

        r17 = null;

     label18:
        $r10 = virtualinvoke r19.<java.lang.String: java.lang.String replace(char,char)>(10, 47);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label19:
        r16 = null;

        r17 = null;

     label20:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label21:
        i2 = i2 + 1;

        goto label05;

     label22:
        r16 = null;

        r17 = null;

     label23:
        r20 = new java.io.FileWriter;

     label24:
        r16 = null;

        r17 = null;

     label25:
        specialinvoke r20.<java.io.FileWriter: void <init>(java.lang.String,boolean)>("/sdcard/autotester.log", 1);

     label26:
        r16 = r20;

        r17 = r20;

     label27:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r20.<java.io.FileWriter: void write(java.lang.String)>($r6);

     label28:
        virtualinvoke r20.<java.io.FileWriter: void close()>();

     label29:
        goto label37;

     label30:
        $r13 := @caughtexception;

        goto label37;

     label31:
        $r12 := @caughtexception;

        goto label38;

     label32:
        $r14 := @caughtexception;

        r16 = r17;

     label33:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerTester", "Can\'t write sdcard log file", $r14);

     label34:
        if r17 == null goto label29;

     label35:
        virtualinvoke r17.<java.io.FileWriter: void close()>();

     label36:
        goto label29;

     label37:
        return;

     label38:
        if r16 == null goto label42;

     label39:
        virtualinvoke r16.<java.io.FileWriter: void close()>();

     label40:
        goto label42;

     label41:
        $r11 := @caughtexception;

        goto label42;

     label42:
        throw $r12;

        catch java.io.IOException from label01 to label02 with label32;
        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.io.IOException from label03 to label04 with label32;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.io.IOException from label06 to label07 with label32;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.io.IOException from label08 to label09 with label32;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.io.IOException from label10 to label11 with label32;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.io.IOException from label12 to label13 with label32;
        catch java.lang.Throwable from label12 to label13 with label31;
        catch java.io.IOException from label14 to label15 with label32;
        catch java.lang.Throwable from label14 to label15 with label31;
        catch java.io.IOException from label16 to label17 with label32;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.io.IOException from label18 to label19 with label32;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.io.IOException from label20 to label21 with label32;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.io.IOException from label23 to label24 with label32;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.io.IOException from label25 to label26 with label32;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.io.IOException from label27 to label28 with label32;
        catch java.lang.Throwable from label27 to label28 with label31;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label33 to label34 with label31;
        catch java.io.IOException from label35 to label36 with label30;
        catch java.io.IOException from label39 to label40 with label41;
    }

    public int injectEvent(android.view.IWindowManager, android.app.IActivityManager, int)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        android.app.IActivityManager r1;
        int i0, $i1;
        java.lang.String $r2, $r3, $r4, r6, r7;
        android.view.IWindowManager r5;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r5 := @parameter0: android.view.IWindowManager;

        r1 := @parameter1: android.app.IActivityManager;

        i0 := @parameter2: int;

        r6 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        if r6 == null goto label2;

        $i1 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_SEQUENCE_BEGIN");

        if $i1 != 0 goto label1;

        $r4 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        $r3 = <android.os.Build: java.lang.String FINGERPRINT>;

        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void bufferLogEvent(java.lang.String,java.lang.String)>($r4, $r3);

        goto label3;

     label1:
        r7 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult>;

        if r7 == null goto label3;

        $r2 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void bufferLogEvent(java.lang.String,java.lang.String)>($r2, r7);

        goto label3;

     label2:
        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void writeLogEvents()>();

     label3:
        return 1;
    }
}
