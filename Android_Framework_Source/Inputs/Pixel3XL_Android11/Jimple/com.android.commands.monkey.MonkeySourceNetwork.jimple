public class com.android.commands.monkey.MonkeySourceNetwork extends java.lang.Object implements com.android.commands.monkey.MonkeyEventSource
{
    private static final java.util.Map COMMAND_MAP;
    private static final java.lang.String DONE;
    public static final com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn EARG;
    public static final com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn ERROR;
    private static final java.lang.String ERROR_STR;
    public static final int MONKEY_NETWORK_VERSION;
    public static final com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn OK;
    private static final java.lang.String OK_STR;
    private static final java.lang.String QUIT;
    private static final java.lang.String TAG;
    private static com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn deferredReturn;
    private java.net.Socket clientSocket;
    private final com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl commandQueue;
    private java.io.BufferedReader input;
    private java.io.PrintWriter output;
    private java.net.ServerSocket serverSocket;
    private boolean started;

    static void <clinit>()
    {
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn $r1, $r2, $r3;
        java.util.HashMap $r4;
        com.android.commands.monkey.MonkeySourceNetwork$FlipCommand $r5;
        com.android.commands.monkey.MonkeySourceNetwork$TouchCommand $r7;
        java.util.Map $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50;
        com.android.commands.monkey.MonkeySourceNetwork$TrackballCommand $r10;
        com.android.commands.monkey.MonkeySourceNetwork$KeyCommand $r13;
        com.android.commands.monkey.MonkeySourceNetwork$SleepCommand $r16;
        com.android.commands.monkey.MonkeySourceNetwork$WakeCommand $r19;
        com.android.commands.monkey.MonkeySourceNetwork$TapCommand $r22;
        com.android.commands.monkey.MonkeySourceNetwork$PressCommand $r25;
        com.android.commands.monkey.MonkeySourceNetwork$TypeCommand $r28;
        com.android.commands.monkey.MonkeySourceNetworkVars$ListVarCommand $r31;
        com.android.commands.monkey.MonkeySourceNetworkVars$GetVarCommand $r34;
        com.android.commands.monkey.MonkeySourceNetworkViews$ListViewsCommand $r37;
        com.android.commands.monkey.MonkeySourceNetworkViews$QueryViewCommand $r40;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetRootViewCommand $r43;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetViewsWithTextCommand $r46;
        com.android.commands.monkey.MonkeySourceNetwork$DeferReturnCommand $r49;

        <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String TAG> = "MonkeyStub";

        <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String QUIT> = "quit";

        <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String OK_STR> = "OK";

        <com.android.commands.monkey.MonkeySourceNetwork: int MONKEY_NETWORK_VERSION> = 2;

        <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String ERROR_STR> = "ERROR";

        <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String DONE> = "done";

        $r1 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        specialinvoke $r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean)>(1);

        <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn OK> = $r1;

        $r2 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        specialinvoke $r2.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean)>(0);

        <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn ERROR> = $r2;

        $r3 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        specialinvoke $r3.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean,java.lang.String)>(0, "Invalid Argument");

        <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn EARG> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP> = $r4;

        $r5 = new com.android.commands.monkey.MonkeySourceNetwork$FlipCommand;

        specialinvoke $r5.<com.android.commands.monkey.MonkeySourceNetwork$FlipCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flip", $r5);

        $r8 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r7 = new com.android.commands.monkey.MonkeySourceNetwork$TouchCommand;

        specialinvoke $r7.<com.android.commands.monkey.MonkeySourceNetwork$TouchCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("touch", $r7);

        $r11 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r10 = new com.android.commands.monkey.MonkeySourceNetwork$TrackballCommand;

        specialinvoke $r10.<com.android.commands.monkey.MonkeySourceNetwork$TrackballCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("trackball", $r10);

        $r14 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r13 = new com.android.commands.monkey.MonkeySourceNetwork$KeyCommand;

        specialinvoke $r13.<com.android.commands.monkey.MonkeySourceNetwork$KeyCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", $r13);

        $r17 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r16 = new com.android.commands.monkey.MonkeySourceNetwork$SleepCommand;

        specialinvoke $r16.<com.android.commands.monkey.MonkeySourceNetwork$SleepCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sleep", $r16);

        $r20 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r19 = new com.android.commands.monkey.MonkeySourceNetwork$WakeCommand;

        specialinvoke $r19.<com.android.commands.monkey.MonkeySourceNetwork$WakeCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("wake", $r19);

        $r23 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r22 = new com.android.commands.monkey.MonkeySourceNetwork$TapCommand;

        specialinvoke $r22.<com.android.commands.monkey.MonkeySourceNetwork$TapCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tap", $r22);

        $r26 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r25 = new com.android.commands.monkey.MonkeySourceNetwork$PressCommand;

        specialinvoke $r25.<com.android.commands.monkey.MonkeySourceNetwork$PressCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("press", $r25);

        $r29 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r28 = new com.android.commands.monkey.MonkeySourceNetwork$TypeCommand;

        specialinvoke $r28.<com.android.commands.monkey.MonkeySourceNetwork$TypeCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r28);

        $r32 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r31 = new com.android.commands.monkey.MonkeySourceNetworkVars$ListVarCommand;

        specialinvoke $r31.<com.android.commands.monkey.MonkeySourceNetworkVars$ListVarCommand: void <init>()>();

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("listvar", $r31);

        $r35 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r34 = new com.android.commands.monkey.MonkeySourceNetworkVars$GetVarCommand;

        specialinvoke $r34.<com.android.commands.monkey.MonkeySourceNetworkVars$GetVarCommand: void <init>()>();

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getvar", $r34);

        $r38 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r37 = new com.android.commands.monkey.MonkeySourceNetworkViews$ListViewsCommand;

        specialinvoke $r37.<com.android.commands.monkey.MonkeySourceNetworkViews$ListViewsCommand: void <init>()>();

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("listviews", $r37);

        $r41 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r40 = new com.android.commands.monkey.MonkeySourceNetworkViews$QueryViewCommand;

        specialinvoke $r40.<com.android.commands.monkey.MonkeySourceNetworkViews$QueryViewCommand: void <init>()>();

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("queryview", $r40);

        $r44 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r43 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetRootViewCommand;

        specialinvoke $r43.<com.android.commands.monkey.MonkeySourceNetworkViews$GetRootViewCommand: void <init>()>();

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getrootview", $r43);

        $r47 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r46 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetViewsWithTextCommand;

        specialinvoke $r46.<com.android.commands.monkey.MonkeySourceNetworkViews$GetViewsWithTextCommand: void <init>()>();

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getviewswithtext", $r46);

        $r50 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r49 = new com.android.commands.monkey.MonkeySourceNetwork$DeferReturnCommand;

        specialinvoke $r49.<com.android.commands.monkey.MonkeySourceNetwork$DeferReturnCommand: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deferreturn", $r49);

        return;
    }

    public void <init>(int) throws java.io.IOException
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        int i0;
        com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl $r1;
        java.net.ServerSocket $r2;
        java.net.InetAddress $r3;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl;

        specialinvoke $r1.<com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl: void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)>(null);

        r0.<com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl commandQueue> = $r1;

        r0.<com.android.commands.monkey.MonkeySourceNetwork: boolean started> = 0;

        $r2 = new java.net.ServerSocket;

        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        specialinvoke $r2.<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, 0, $r3);

        r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.ServerSocket serverSocket> = $r2;

        return;
    }

    static int access$000(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: int getKeyCode(java.lang.String)>(r0);

        return $i0;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: boolean wake()>();

        return $z0;
    }

    static java.util.Map access$200()
    {
        java.util.Map $r0;

        $r0 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        return $r0;
    }

    static com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn access$302(com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn)
    {
        com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn r0;

        r0 := @parameter0: com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn;

        <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn deferredReturn> = r0;

        return r0;
    }

    private static java.util.List commandLineSplit(java.lang.String)
    {
        java.util.ArrayList $r2;
        java.util.StringTokenizer $r3;
        java.lang.StringBuffer $r4;
        boolean $z0, $z2, $z4, z5;
        java.lang.String $r5, $r7, $r10, $r12, $r13, r15, r17, r18;
        int $i0, $i1;

        r15 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String)>(r15);

        z5 = 0;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

     label1:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label6;

        r17 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if z5 != 0 goto label2;

        $z4 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z4 == 0 goto label2;

        $r13 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String replaceQuotedChars(java.lang.String)>(r17);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        z5 = 1;

        goto label5;

     label2:
        if z5 == 0 goto label4;

        $z2 = virtualinvoke r17.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z2 == 0 goto label3;

        z5 = 0;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r10 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String replaceQuotedChars(java.lang.String)>(r17);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r18 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke r18.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r12 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label5;

     label3:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String replaceQuotedChars(java.lang.String)>(r17);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label5;

     label4:
        $r5 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: java.lang.String replaceQuotedChars(java.lang.String)>(r17);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label5:
        goto label1;

     label6:
        return $r2;
    }

    private static int getKeyCode(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        int i0, i1, i2;

        r0 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        i1 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: int getKeyCode(java.lang.String)>(r0);

        i0 = i1;

        if i1 != 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KEYCODE_");

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: int getKeyCode(java.lang.String)>($r6);

        i0 = i2;

        if i2 != 0 goto label4;

        return -1;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void handleReturn(com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn)
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        r1 := @parameter0: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        $z0 = virtualinvoke r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: boolean wasSuccessful()>();

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: boolean hasMessage()>();

        if $z2 == 0 goto label1;

        $r3 = virtualinvoke r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: java.lang.String getMessage()>();

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void returnOk(java.lang.String)>($r3);

        goto label4;

     label1:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void returnOk()>();

        goto label4;

     label2:
        $z1 = virtualinvoke r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: boolean hasMessage()>();

        if $z1 == 0 goto label3;

        $r2 = virtualinvoke r1.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: java.lang.String getMessage()>();

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void returnError(java.lang.String)>($r2);

        goto label4;

     label3:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void returnError()>();

     label4:
        return;
    }

    private static java.lang.String replaceQuotedChars(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\"", "\"");

        return $r1;
    }

    private void returnError()
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.io.PrintWriter $r1;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("ERROR");

        return;
    }

    private void returnError(java.lang.String)
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.lang.String r1;
        java.io.PrintWriter $r2, $r3, $r4;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("ERROR");

        $r3 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r4 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        return;
    }

    private void returnOk()
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.io.PrintWriter $r1;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("OK");

        return;
    }

    private void returnOk(java.lang.String)
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.lang.String r1;
        java.io.PrintWriter $r2, $r3, $r4;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("OK");

        $r3 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r4 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        return;
    }

    private void startServer() throws java.io.IOException
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.net.ServerSocket $r1;
        java.net.Socket $r2, $r5, $r8;
        java.io.BufferedReader $r3;
        java.io.InputStreamReader $r4;
        java.io.InputStream $r6;
        java.io.PrintWriter $r7;
        java.io.OutputStream $r9;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.ServerSocket serverSocket>;

        $r2 = virtualinvoke $r1.<java.net.ServerSocket: java.net.Socket accept()>();

        r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.Socket clientSocket> = $r2;

        staticinvoke <com.android.commands.monkey.MonkeySourceNetworkViews: void setup()>();

        staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: boolean wake()>();

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.Socket clientSocket>;

        $r6 = virtualinvoke $r5.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.BufferedReader input> = $r3;

        $r7 = new java.io.PrintWriter;

        $r8 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.Socket clientSocket>;

        $r9 = virtualinvoke $r8.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r9, 1);

        r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output> = $r7;

        return;
    }

    private void stopServer() throws java.io.IOException
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.net.Socket $r1;
        java.io.BufferedReader $r2;
        java.io.PrintWriter $r3;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.net.Socket clientSocket>;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        staticinvoke <com.android.commands.monkey.MonkeySourceNetworkViews: void teardown()>();

        $r2 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.BufferedReader input>;

        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        $r3 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.PrintWriter output>;

        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

        r0.<com.android.commands.monkey.MonkeySourceNetwork: boolean started> = 0;

        return;
    }

    private void translateCommand(java.lang.String)
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r10;
        int $i1;
        java.util.Map $r5;
        java.lang.Object $r6, $r7;
        com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl $r8;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn $r9;
        java.util.List r12;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommand r13;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        r10 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("translateCommand: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonkeyStub", $r4);

        r12 = staticinvoke <com.android.commands.monkey.MonkeySourceNetwork: java.util.List commandLineSplit(java.lang.String)>(r10);

        $i1 = interfaceinvoke r12.<java.util.List: int size()>();

        if $i1 <= 0 goto label1;

        $r5 = <com.android.commands.monkey.MonkeySourceNetwork: java.util.Map COMMAND_MAP>;

        $r6 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r13 = (com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommand) $r7;

        if r13 == null goto label1;

        $r8 = r0.<com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl commandQueue>;

        $r9 = interfaceinvoke r13.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommand: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn translateCommand(java.util.List,com.android.commands.monkey.MonkeySourceNetwork$CommandQueue)>(r12, $r8);

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void handleReturn(com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn)>($r9);

     label1:
        return;
    }

    private static final boolean wake()
    {
        android.os.IBinder $r0;
        long $l0;
        android.os.RemoteException $r1;
        android.os.IPowerManager r2;

        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("power");

        r2 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager asInterface(android.os.IBinder)>($r0);

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        interfaceinvoke r2.<android.os.IPowerManager: void wakeUp(long,int,java.lang.String,java.lang.String)>($l0, 0, "Monkey", null);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MonkeyStub", "Got remote exception", $r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.commands.monkey.MonkeyEvent getNextEvent()
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        java.lang.String r1, $r4, $r5, r15;
        boolean z0, $z1, $z2, $z3;
        com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn $r2, $r7;
        java.io.BufferedReader $r3;
        com.android.commands.monkey.MonkeyNoopEvent $r6;
        java.lang.Throwable $r8, $r9, $r10;
        com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl $r12;
        com.android.commands.monkey.MonkeyEvent r13;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn r14;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        $z1 = r0.<com.android.commands.monkey.MonkeySourceNetwork: boolean started>;

        if $z1 != 0 goto label04;

     label01:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void startServer()>();

     label02:
        r0.<com.android.commands.monkey.MonkeySourceNetwork: boolean started> = 1;

        goto label04;

     label03:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MonkeyStub", "Got IOException from server", $r9);

        return null;

     label04:
        $r12 = r0.<com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl commandQueue>;

        r13 = virtualinvoke $r12.<com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl: com.android.commands.monkey.MonkeyEvent getNextQueuedEvent()>();

     label05:
        if r13 == null goto label06;

        return r13;

     label06:
        $r2 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn deferredReturn>;

        if $r2 == null goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonkeyStub", "Waiting for event");

        $r7 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn deferredReturn>;

        r14 = virtualinvoke $r7.<com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn waitForEvent()>();

        <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$DeferredReturn deferredReturn> = null;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void handleReturn(com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn)>(r14);

     label07:
        $r3 = r0.<com.android.commands.monkey.MonkeySourceNetwork: java.io.BufferedReader input>;

        r1 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        r15 = r1;

        if r1 != null goto label11;

     label09:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonkeyStub", "Connection dropped.");

     label10:
        r15 = "done";

     label11:
        $r4 = "done";

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

     label12:
        if z0 == 0 goto label18;

     label13:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void stopServer()>();

     label14:
        $r6 = new com.android.commands.monkey.MonkeyNoopEvent;

        specialinvoke $r6.<com.android.commands.monkey.MonkeyNoopEvent: void <init>()>();

        return $r6;

     label15:
        $r8 := @caughtexception;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MonkeyStub", "Got IOException shutting down!", $r8);

     label17:
        return null;

     label18:
        $r5 = "quit";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z2 == 0 goto label20;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonkeyStub", "Quit requested");

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void returnOk()>();

     label19:
        return null;

     label20:
        $z3 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z3 == 0 goto label22;

     label21:
        goto label04;

     label22:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork: void translateCommand(java.lang.String)>(r15);

     label23:
        goto label04;

     label24:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MonkeyStub", "Exception: ", $r10);

        return null;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label20 to label21 with label24;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public void setVerbose(int)
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;
        int i0;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        i0 := @parameter0: int;

        return;
    }

    public boolean validate()
    {
        com.android.commands.monkey.MonkeySourceNetwork r0;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork;

        return 1;
    }
}
