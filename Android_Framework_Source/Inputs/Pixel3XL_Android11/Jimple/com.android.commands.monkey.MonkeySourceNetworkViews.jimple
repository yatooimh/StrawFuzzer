public class com.android.commands.monkey.MonkeySourceNetworkViews extends java.lang.Object
{
    private static final java.lang.String CLASS_NOT_FOUND;
    private static final java.util.Map COMMAND_MAP;
    private static final java.lang.String HANDLER_THREAD_NAME;
    private static final java.lang.String NO_ACCESSIBILITY_EVENT;
    private static final java.lang.String NO_CONNECTION;
    private static final java.lang.String NO_NODE;
    private static final java.lang.String REMOTE_ERROR;
    private static java.util.Map sClassMap;
    private static final android.os.HandlerThread sHandlerThread;
    private static android.content.pm.IPackageManager sPm;
    protected static android.app.UiAutomation sUiTestAutomationBridge;

    static void <clinit>()
    {
        android.os.IBinder $r1;
        android.content.pm.IPackageManager $r2;
        java.util.HashMap $r3, $r4;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetLocation $r5;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetText $r7;
        java.util.Map $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetClass $r10;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetChecked $r13;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetEnabled $r16;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetSelected $r19;
        com.android.commands.monkey.MonkeySourceNetworkViews$SetSelected $r22;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetFocused $r25;
        com.android.commands.monkey.MonkeySourceNetworkViews$SetFocused $r28;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetParent $r31;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetChildren $r34;
        com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds $r37;
        android.os.HandlerThread $r40;

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String REMOTE_ERROR> = "Unable to retrieve application info from PackageManager";

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String NO_NODE> = "Node with given ID does not exist";

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String NO_CONNECTION> = "Failed to connect to AccessibilityService, try restarting Monkey";

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String NO_ACCESSIBILITY_EVENT> = "No accessibility event has occured yet";

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String HANDLER_THREAD_NAME> = "UiAutomationHandlerThread";

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.String CLASS_NOT_FOUND> = "Error retrieving class information";

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r2 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r1);

        <com.android.commands.monkey.MonkeySourceNetworkViews: android.content.pm.IPackageManager sPm> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map sClassMap> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP> = $r4;

        $r5 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetLocation;

        specialinvoke $r5.<com.android.commands.monkey.MonkeySourceNetworkViews$GetLocation: void <init>()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getlocation", $r5);

        $r8 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r7 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetText;

        specialinvoke $r7.<com.android.commands.monkey.MonkeySourceNetworkViews$GetText: void <init>()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gettext", $r7);

        $r11 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r10 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetClass;

        specialinvoke $r10.<com.android.commands.monkey.MonkeySourceNetworkViews$GetClass: void <init>()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getclass", $r10);

        $r14 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r13 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetChecked;

        specialinvoke $r13.<com.android.commands.monkey.MonkeySourceNetworkViews$GetChecked: void <init>()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getchecked", $r13);

        $r17 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r16 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetEnabled;

        specialinvoke $r16.<com.android.commands.monkey.MonkeySourceNetworkViews$GetEnabled: void <init>()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getenabled", $r16);

        $r20 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r19 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetSelected;

        specialinvoke $r19.<com.android.commands.monkey.MonkeySourceNetworkViews$GetSelected: void <init>()>();

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getselected", $r19);

        $r23 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r22 = new com.android.commands.monkey.MonkeySourceNetworkViews$SetSelected;

        specialinvoke $r22.<com.android.commands.monkey.MonkeySourceNetworkViews$SetSelected: void <init>()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("setselected", $r22);

        $r26 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r25 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetFocused;

        specialinvoke $r25.<com.android.commands.monkey.MonkeySourceNetworkViews$GetFocused: void <init>()>();

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getfocused", $r25);

        $r29 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r28 = new com.android.commands.monkey.MonkeySourceNetworkViews$SetFocused;

        specialinvoke $r28.<com.android.commands.monkey.MonkeySourceNetworkViews$SetFocused: void <init>()>();

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("setfocused", $r28);

        $r32 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r31 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetParent;

        specialinvoke $r31.<com.android.commands.monkey.MonkeySourceNetworkViews$GetParent: void <init>()>();

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getparent", $r31);

        $r35 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r34 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetChildren;

        specialinvoke $r34.<com.android.commands.monkey.MonkeySourceNetworkViews$GetChildren: void <init>()>();

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getchildren", $r34);

        $r38 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        $r37 = new com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds;

        specialinvoke $r37.<com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds: void <init>()>();

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("getaccessibilityids", $r37);

        $r40 = new android.os.HandlerThread;

        specialinvoke $r40.<android.os.HandlerThread: void <init>(java.lang.String)>("UiAutomationHandlerThread");

        <com.android.commands.monkey.MonkeySourceNetworkViews: android.os.HandlerThread sHandlerThread> = $r40;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.MonkeySourceNetworkViews r0;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetworkViews;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.pm.IPackageManager access$000()
    {
        android.content.pm.IPackageManager $r0;

        $r0 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.content.pm.IPackageManager sPm>;

        return $r0;
    }

    static java.lang.Class access$100(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0, r1;
        java.lang.Class $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.commands.monkey.MonkeySourceNetworkViews: java.lang.Class getIdClass(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    static android.view.accessibility.AccessibilityNodeInfo access$200(java.lang.String) throws com.android.commands.monkey.MonkeyViewException
    {
        java.lang.String r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.commands.monkey.MonkeySourceNetworkViews: android.view.accessibility.AccessibilityNodeInfo getNodeByViewId(java.lang.String)>(r0);

        return $r1;
    }

    static android.view.accessibility.AccessibilityNodeInfo access$300(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.commands.monkey.MonkeySourceNetworkViews: android.view.accessibility.AccessibilityNodeInfo getNodeByAccessibilityIds(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    static java.util.Map access$400()
    {
        java.util.Map $r0;

        $r0 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map COMMAND_MAP>;

        return $r0;
    }

    private static java.lang.Class getIdClass(java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0, $r9, r12;
        java.lang.Class r1, r13;
        java.util.Map $r2, $r10;
        java.lang.Object $r3;
        dalvik.system.DexClassLoader $r4;
        java.lang.ClassLoader $r5;
        java.lang.StringBuilder $r6;

        r0 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        $r2 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map sClassMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Class) $r3;

        r13 = r1;

        if r1 != null goto label1;

        $r4 = new dalvik.system.DexClassLoader;

        $r5 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        specialinvoke $r4.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>(r12, "/data/local/tmp", null, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".R$id");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = virtualinvoke $r4.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>($r9);

        $r10 = <com.android.commands.monkey.MonkeySourceNetworkViews: java.util.Map sClassMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r13);

     label1:
        return r13;
    }

    private static android.view.accessibility.AccessibilityNodeInfo getNodeByAccessibilityIds(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2;
        android.app.UiAutomation $r2;
        android.view.accessibility.AccessibilityInteractionClient $r3;
        long $l3;
        android.view.accessibility.AccessibilityNodeInfo $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $r2 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.app.UiAutomation sUiTestAutomationBridge>;

        i2 = virtualinvoke $r2.<android.app.UiAutomation: int getConnectionId()>();

        $r3 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $l3 = (long) i1;

        $r4 = virtualinvoke $r3.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int,android.os.Bundle)>(i2, i0, $l3, 0, 0, null);

        return $r4;
    }

    private static android.view.accessibility.AccessibilityNodeInfo getNodeByViewId(java.lang.String) throws com.android.commands.monkey.MonkeyViewException
    {
        int i0;
        android.app.UiAutomation $r0;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        long $l1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String r3;
        java.util.List r4;
        android.view.accessibility.AccessibilityNodeInfo r5;

        r3 := @parameter0: java.lang.String;

        $r0 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.app.UiAutomation sUiTestAutomationBridge>;

        i0 = virtualinvoke $r0.<android.app.UiAutomation: int getConnectionId()>();

        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r4 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByViewId(int,int,long,java.lang.String)>(i0, 2147483647, $l1, r3);

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    public static void setup()
    {
        android.os.HandlerThread $r1, $r2, $r4;
        android.app.UiAutomation $r3;
        android.os.Looper $r5;
        android.app.UiAutomationConnection $r6;

        $r1 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.os.HandlerThread sHandlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: void setDaemon(boolean)>(1);

        $r2 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.os.HandlerThread sHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = new android.app.UiAutomation;

        $r4 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.os.HandlerThread sHandlerThread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r6 = new android.app.UiAutomationConnection;

        specialinvoke $r6.<android.app.UiAutomationConnection: void <init>()>();

        specialinvoke $r3.<android.app.UiAutomation: void <init>(android.os.Looper,android.app.IUiAutomationConnection)>($r5, $r6);

        <com.android.commands.monkey.MonkeySourceNetworkViews: android.app.UiAutomation sUiTestAutomationBridge> = $r3;

        virtualinvoke $r3.<android.app.UiAutomation: void connect()>();

        return;
    }

    public static void teardown()
    {
        android.os.HandlerThread $r0;

        $r0 = <com.android.commands.monkey.MonkeySourceNetworkViews: android.os.HandlerThread sHandlerThread>;

        virtualinvoke $r0.<android.os.HandlerThread: boolean quit()>();

        return;
    }
}
