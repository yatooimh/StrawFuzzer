public class com.android.commands.monkey.MonkeySourceRandom extends java.lang.Object implements com.android.commands.monkey.MonkeyEventSource
{
    public static final int FACTORZ_COUNT;
    public static final int FACTOR_ANYTHING;
    public static final int FACTOR_APPSWITCH;
    public static final int FACTOR_FLIP;
    public static final int FACTOR_MAJORNAV;
    public static final int FACTOR_MOTION;
    public static final int FACTOR_NAV;
    public static final int FACTOR_PERMISSION;
    public static final int FACTOR_PINCHZOOM;
    public static final int FACTOR_ROTATION;
    public static final int FACTOR_SYSOPS;
    public static final int FACTOR_TOUCH;
    public static final int FACTOR_TRACKBALL;
    private static final int GESTURE_DRAG;
    private static final int GESTURE_PINCH_OR_ZOOM;
    private static final int GESTURE_TAP;
    private static final int[] MAJOR_NAV_KEYS;
    private static final int[] NAV_KEYS;
    private static final boolean[] PHYSICAL_KEY_EXISTS;
    private static final int[] SCREEN_ROTATION_DEGREES;
    private static final int[] SYS_KEYS;
    private int mEventCount;
    private float[] mFactors;
    private boolean mKeyboardOpen;
    private java.util.List mMainApps;
    private com.android.commands.monkey.MonkeyPermissionUtil mPermissionUtil;
    private com.android.commands.monkey.MonkeyEventQueue mQ;
    private java.util.Random mRandom;
    private long mThrottle;
    private int mVerbose;

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r4, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean[] $r3, $r5, r6;
        boolean $z0;

        <com.android.commands.monkey.MonkeySourceRandom: int GESTURE_TAP> = 0;

        <com.android.commands.monkey.MonkeySourceRandom: int GESTURE_PINCH_OR_ZOOM> = 2;

        <com.android.commands.monkey.MonkeySourceRandom: int GESTURE_DRAG> = 1;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_TRACKBALL> = 3;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_TOUCH> = 0;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_SYSOPS> = 8;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_ROTATION> = 4;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_PINCHZOOM> = 2;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_PERMISSION> = 5;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_NAV> = 6;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_MOTION> = 1;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_MAJORNAV> = 7;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_FLIP> = 10;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_APPSWITCH> = 9;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTOR_ANYTHING> = 11;

        <com.android.commands.monkey.MonkeySourceRandom: int FACTORZ_COUNT> = 12;

        $r0 = newarray (int)[4];

        $r0[0] = 19;

        $r0[1] = 20;

        $r0[2] = 21;

        $r0[3] = 22;

        <com.android.commands.monkey.MonkeySourceRandom: int[] NAV_KEYS> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 82;

        $r1[1] = 23;

        <com.android.commands.monkey.MonkeySourceRandom: int[] MAJOR_NAV_KEYS> = $r1;

        $r2 = newarray (int)[8];

        $r2[0] = 3;

        $r2[1] = 4;

        $r2[2] = 5;

        $r2[3] = 6;

        $r2[4] = 24;

        $r2[5] = 25;

        $r2[6] = 164;

        $r2[7] = 91;

        <com.android.commands.monkey.MonkeySourceRandom: int[] SYS_KEYS> = $r2;

        $i0 = staticinvoke <android.view.KeyEvent: int getMaxKeyCode()>();

        $i1 = $i0 + 1;

        $r3 = newarray (boolean)[$i1];

        <com.android.commands.monkey.MonkeySourceRandom: boolean[] PHYSICAL_KEY_EXISTS> = $r3;

        i6 = 0;

     label1:
        r6 = <com.android.commands.monkey.MonkeySourceRandom: boolean[] PHYSICAL_KEY_EXISTS>;

        $i2 = lengthof r6;

        if i6 >= $i2 goto label2;

        r6[i6] = 1;

        i6 = i6 + 1;

        goto label1;

     label2:
        i7 = 0;

     label3:
        r7 = <com.android.commands.monkey.MonkeySourceRandom: int[] SYS_KEYS>;

        $i3 = lengthof r7;

        if i7 >= $i3 goto label4;

        $r5 = <com.android.commands.monkey.MonkeySourceRandom: boolean[] PHYSICAL_KEY_EXISTS>;

        $i5 = r7[i7];

        $i4 = r7[i7];

        $z0 = staticinvoke <android.view.KeyCharacterMap: boolean deviceHasKey(int)>($i4);

        $r5[$i5] = $z0;

        i7 = i7 + 1;

        goto label3;

     label4:
        $r4 = newarray (int)[4];

        $r4[0] = 0;

        $r4[1] = 1;

        $r4[2] = 2;

        $r4[3] = 3;

        <com.android.commands.monkey.MonkeySourceRandom: int[] SCREEN_ROTATION_DEGREES> = $r4;

        return;
    }

    public void <init>(java.util.Random, java.util.List, long, boolean, boolean)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.List r1;
        long l0;
        boolean z0, z1;
        float[] r2;
        com.android.commands.monkey.MonkeyEventQueue $r3;
        com.android.commands.monkey.MonkeyPermissionUtil $r4;
        java.util.Random r5;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r5 := @parameter0: java.util.Random;

        r1 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = newarray (float)[12];

        r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors> = r2;

        r0.<com.android.commands.monkey.MonkeySourceRandom: int mEventCount> = 0;

        r0.<com.android.commands.monkey.MonkeySourceRandom: int mVerbose> = 0;

        r0.<com.android.commands.monkey.MonkeySourceRandom: long mThrottle> = 0L;

        r0.<com.android.commands.monkey.MonkeySourceRandom: boolean mKeyboardOpen> = 0;

        r2[0] = 15.0F;

        r2[1] = 10.0F;

        r2[3] = 15.0F;

        r2[4] = 0.0F;

        r2[6] = 25.0F;

        r2[7] = 15.0F;

        r2[8] = 2.0F;

        r2[9] = 2.0F;

        r2[10] = 1.0F;

        r2[5] = 0.0F;

        r2[11] = 13.0F;

        r2[2] = 2.0F;

        r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom> = r5;

        r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.List mMainApps> = r1;

        $r3 = new com.android.commands.monkey.MonkeyEventQueue;

        specialinvoke $r3.<com.android.commands.monkey.MonkeyEventQueue: void <init>(java.util.Random,long,boolean)>(r5, l0, z0);

        r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ> = $r3;

        $r4 = new com.android.commands.monkey.MonkeyPermissionUtil;

        specialinvoke $r4.<com.android.commands.monkey.MonkeyPermissionUtil: void <init>()>();

        r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyPermissionUtil mPermissionUtil> = $r4;

        virtualinvoke $r4.<com.android.commands.monkey.MonkeyPermissionUtil: void setTargetSystemPackages(boolean)>(z1);

        return;
    }

    private boolean adjustEventFactors()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        com.android.commands.monkey.Logger r1, $r2, $r11, $r12;
        byte $b0, $b2, $b3, $b4, $b5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13, f14, f15;
        int $i1, i6, i7, i8, i9, i10;
        boolean $z0;
        java.lang.StringBuilder $r3;
        float[] $r7, r13, r14, r16;
        java.lang.String $r10;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        f12 = 0.0F;

        f13 = 0.0F;

        i6 = 0;

        i7 = 0;

     label01:
        if i7 >= 12 goto label04;

        r13 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f9 = r13[i7];

        $b5 = $f9 cmpg 0.0F;

        if $b5 > 0 goto label02;

        $f11 = r13[i7];

        f12 = f12 - $f11;

        goto label03;

     label02:
        $f10 = r13[i7];

        f13 = f13 + $f10;

        i6 = i6 + 1;

     label03:
        i7 = i7 + 1;

        goto label01;

     label04:
        $b0 = f12 cmpl 100.0F;

        if $b0 <= 0 goto label05;

        $r12 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r12.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Event weights > 100%");

        return 0;

     label05:
        if i6 != 0 goto label07;

        $b3 = f12 cmpg 99.9F;

        if $b3 < 0 goto label06;

        $b4 = f12 cmpl 100.1F;

        if $b4 <= 0 goto label07;

     label06:
        $r11 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        virtualinvoke $r11.<com.android.commands.monkey.Logger: void println(java.lang.String)>("** Event weights != 100%");

        return 0;

     label07:
        $f0 = 100.0F - f12;

        f14 = $f0 / f13;

        i8 = 0;

     label08:
        if i8 >= 12 goto label11;

        r14 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f4 = r14[i8];

        $b2 = $f4 cmpg 0.0F;

        if $b2 > 0 goto label09;

        $f7 = r14[i8];

        $f8 = neg $f7;

        r14[i8] = $f8;

        goto label10;

     label09:
        $f5 = r14[i8];

        $f6 = $f5 * f14;

        r14[i8] = $f6;

     label10:
        i8 = i8 + 1;

        goto label08;

     label11:
        $i1 = r0.<com.android.commands.monkey.MonkeySourceRandom: int mVerbose>;

        if $i1 <= 0 goto label13;

        $r2 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        virtualinvoke $r2.<com.android.commands.monkey.Logger: void println(java.lang.String)>("// Event percentages:");

        i9 = 0;

     label12:
        if i9 >= 12 goto label13;

        r1 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f3 = $r7[i9];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r10);

        i9 = i9 + 1;

        goto label12;

     label13:
        $z0 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: boolean validateKeys()>();

        if $z0 != 0 goto label14;

        return 0;

     label14:
        f15 = 0.0F;

        i10 = 0;

     label15:
        if i10 >= 12 goto label16;

        r16 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f1 = r16[i10];

        $f2 = $f1 / 100.0F;

        f15 = f15 + $f2;

        r16[i10] = f15;

        i10 = i10 + 1;

        goto label15;

     label16:
        return 1;
    }

    private void generateEvents()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.util.Random $r1, $r2, $r11, $r15, $r16, $r17, $r18, $r22, $r23, $r24, $r25, $r26;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10;
        int $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22;
        boolean[] $r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.commands.monkey.MonkeyKeyEvent $r4, $r6;
        com.android.commands.monkey.MonkeyEventQueue $r5, $r7, $r9, $r14, $r20;
        com.android.commands.monkey.MonkeyFlipEvent $r8;
        com.android.commands.monkey.MonkeyActivityEvent $r10;
        java.lang.Object $r12;
        android.content.ComponentName $r13;
        com.android.commands.monkey.MonkeyPermissionUtil $r19;
        com.android.commands.monkey.MonkeyPermissionEvent $r21;
        float[] r27, r28;
        int[] r29, r30, r31;
        java.util.List r32;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        f0 = virtualinvoke $r1.<java.util.Random: float nextFloat()>();

        r27 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f1 = r27[0];

        $b0 = f0 cmpg $f1;

        if $b0 >= 0 goto label01;

        $r26 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generatePointerEvent(java.util.Random,int)>($r26, 0);

        return;

     label01:
        $f2 = r27[1];

        $b1 = f0 cmpg $f2;

        if $b1 >= 0 goto label02;

        $r25 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generatePointerEvent(java.util.Random,int)>($r25, 1);

        return;

     label02:
        $f3 = r27[2];

        $b2 = f0 cmpg $f3;

        if $b2 >= 0 goto label03;

        $r24 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generatePointerEvent(java.util.Random,int)>($r24, 2);

        return;

     label03:
        $f4 = r27[3];

        $b3 = f0 cmpg $f4;

        if $b3 >= 0 goto label04;

        $r23 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generateTrackballEvent(java.util.Random)>($r23);

        return;

     label04:
        $f5 = r27[4];

        $b4 = f0 cmpg $f5;

        if $b4 >= 0 goto label05;

        $r22 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generateRotationEvent(java.util.Random)>($r22);

        return;

     label05:
        $f6 = r27[5];

        $b5 = f0 cmpg $f6;

        if $b5 >= 0 goto label06;

        $r20 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r19 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyPermissionUtil mPermissionUtil>;

        $r18 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $r21 = virtualinvoke $r19.<com.android.commands.monkey.MonkeyPermissionUtil: com.android.commands.monkey.MonkeyPermissionEvent generateRandomPermissionEvent(java.util.Random)>($r18);

        virtualinvoke $r20.<com.android.commands.monkey.MonkeyEventQueue: boolean add(java.lang.Object)>($r21);

        return;

     label06:
        r28 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f7 = r28[6];

        $b6 = f0 cmpg $f7;

        if $b6 >= 0 goto label07;

        r29 = <com.android.commands.monkey.MonkeySourceRandom: int[] NAV_KEYS>;

        $r17 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i20 = lengthof r29;

        $i21 = virtualinvoke $r17.<java.util.Random: int nextInt(int)>($i20);

        i22 = r29[$i21];

        goto label12;

     label07:
        $f8 = r28[7];

        $b7 = f0 cmpg $f8;

        if $b7 >= 0 goto label08;

        r30 = <com.android.commands.monkey.MonkeySourceRandom: int[] MAJOR_NAV_KEYS>;

        $r16 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i18 = lengthof r30;

        $i19 = virtualinvoke $r16.<java.util.Random: int nextInt(int)>($i18);

        i22 = r30[$i19];

        goto label12;

     label08:
        $f9 = r28[8];

        $b8 = f0 cmpg $f9;

        if $b8 >= 0 goto label09;

        r31 = <com.android.commands.monkey.MonkeySourceRandom: int[] SYS_KEYS>;

        $r15 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i16 = lengthof r31;

        $i17 = virtualinvoke $r15.<java.util.Random: int nextInt(int)>($i16);

        i22 = r31[$i17];

        goto label12;

     label09:
        $f10 = r28[9];

        $b9 = f0 cmpg $f10;

        if $b9 >= 0 goto label10;

        r32 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.List mMainApps>;

        $r10 = new com.android.commands.monkey.MonkeyActivityEvent;

        $r11 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i14 = interfaceinvoke r32.<java.util.List: int size()>();

        $i15 = virtualinvoke $r11.<java.util.Random: int nextInt(int)>($i14);

        $r12 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>($i15);

        $r13 = (android.content.ComponentName) $r12;

        specialinvoke $r10.<com.android.commands.monkey.MonkeyActivityEvent: void <init>(android.content.ComponentName)>($r13);

        $r14 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r14.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r10);

        return;

     label10:
        $f11 = r28[10];

        $b10 = f0 cmpg $f11;

        if $b10 >= 0 goto label11;

        $r8 = new com.android.commands.monkey.MonkeyFlipEvent;

        $z1 = r0.<com.android.commands.monkey.MonkeySourceRandom: boolean mKeyboardOpen>;

        specialinvoke $r8.<com.android.commands.monkey.MonkeyFlipEvent: void <init>(boolean)>($z1);

        $z2 = r0.<com.android.commands.monkey.MonkeySourceRandom: boolean mKeyboardOpen>;

        $z3 = $z2 ^ 1;

        r0.<com.android.commands.monkey.MonkeySourceRandom: boolean mKeyboardOpen> = $z3;

        $r9 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r9.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r8);

        return;

     label11:
        $r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i11 = staticinvoke <android.view.KeyEvent: int getMaxKeyCode()>();

        $i12 = $i11 - 1;

        $i13 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i12);

        i22 = $i13 + 1;

     label12:
        if i22 == 26 goto label13;

        if i22 == 6 goto label13;

        if i22 == 223 goto label13;

        if i22 == 276 goto label13;

        $r3 = <com.android.commands.monkey.MonkeySourceRandom: boolean[] PHYSICAL_KEY_EXISTS>;

        $z0 = $r3[i22];

        if $z0 == 0 goto label13;

        $r4 = new com.android.commands.monkey.MonkeyKeyEvent;

        specialinvoke $r4.<com.android.commands.monkey.MonkeyKeyEvent: void <init>(int,int)>(0, i22);

        $r5 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r5.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r4);

        $r6 = new com.android.commands.monkey.MonkeyKeyEvent;

        specialinvoke $r6.<com.android.commands.monkey.MonkeyKeyEvent: void <init>(int,int)>(1, i22);

        $r7 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r7.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r6);

        return;

     label13:
        goto label06;
    }

    private void generatePointerEvent(java.util.Random, int)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        android.view.Display r2;
        android.graphics.PointF r3, r4, r5, r6;
        long l0;
        android.hardware.display.DisplayManagerGlobal $r7;
        com.android.commands.monkey.MonkeyTouchEvent $r8, $r13, $r19, $r25, $r31, $r37;
        com.android.commands.monkey.MonkeyEventQueue $r9, $r14, $r20, $r26, $r32, $r36;
        com.android.commands.monkey.MonkeyMotionEvent $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r38, $r39, $r40;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        int i1, i2, i3, i4, i5;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        i1 := @parameter1: int;

        $r7 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r2 = virtualinvoke $r7.<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>(0);

        r3 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: android.graphics.PointF randomPoint(java.util.Random,android.view.Display)>(r1, r2);

        r4 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: android.graphics.PointF randomVector(java.util.Random)>(r1);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r9 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r8 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r8.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(0);

        $r10 = virtualinvoke $r8.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f1 = r3.<android.graphics.PointF: float x>;

        $f0 = r3.<android.graphics.PointF: float y>;

        $r11 = virtualinvoke $r10.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f1, $f0);

        $r12 = virtualinvoke $r11.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(0);

        virtualinvoke $r9.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r12);

        if i1 != 1 goto label3;

        i2 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10);

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r3, r4);

        $r32 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r31 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r31.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(2);

        $r33 = virtualinvoke $r31.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f15 = r3.<android.graphics.PointF: float x>;

        $f14 = r3.<android.graphics.PointF: float y>;

        $r34 = virtualinvoke $r33.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f15, $f14);

        $r35 = virtualinvoke $r34.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(1);

        virtualinvoke $r32.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r35);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label6;

     label3:
        if i1 != 2 goto label6;

        r5 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: android.graphics.PointF randomPoint(java.util.Random,android.view.Display)>(r1, r2);

        r6 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: android.graphics.PointF randomVector(java.util.Random)>(r1);

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r3, r4);

        $r14 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r13 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r13.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(261);

        $r15 = virtualinvoke $r13.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f3 = r3.<android.graphics.PointF: float x>;

        $f2 = r3.<android.graphics.PointF: float y>;

        $r16 = virtualinvoke $r15.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f3, $f2);

        $f5 = r5.<android.graphics.PointF: float x>;

        $f4 = r5.<android.graphics.PointF: float y>;

        $r17 = virtualinvoke $r16.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(1, $f5, $f4);

        $r18 = virtualinvoke $r17.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(1);

        virtualinvoke $r14.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r18);

        i4 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10);

        i5 = 0;

     label4:
        if i5 >= i4 goto label5;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r3, r4);

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r5, r6);

        $r26 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r25 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r25.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(2);

        $r27 = virtualinvoke $r25.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f11 = r3.<android.graphics.PointF: float x>;

        $f10 = r3.<android.graphics.PointF: float y>;

        $r28 = virtualinvoke $r27.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f11, $f10);

        $f13 = r5.<android.graphics.PointF: float x>;

        $f12 = r5.<android.graphics.PointF: float y>;

        $r29 = virtualinvoke $r28.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(1, $f13, $f12);

        $r30 = virtualinvoke $r29.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(1);

        virtualinvoke $r26.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r30);

        i5 = i5 + 1;

        goto label4;

     label5:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r3, r4);

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r5, r6);

        $r20 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r19 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r19.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(262);

        $r21 = virtualinvoke $r19.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f7 = r3.<android.graphics.PointF: float x>;

        $f6 = r3.<android.graphics.PointF: float y>;

        $r22 = virtualinvoke $r21.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f7, $f6);

        $f9 = r5.<android.graphics.PointF: float x>;

        $f8 = r5.<android.graphics.PointF: float y>;

        $r23 = virtualinvoke $r22.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(1, $f9, $f8);

        $r24 = virtualinvoke $r23.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(1);

        virtualinvoke $r20.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r24);

        goto label6;

     label6:
        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void randomWalk(java.util.Random,android.view.Display,android.graphics.PointF,android.graphics.PointF)>(r1, r2, r3, r4);

        $r36 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r37 = new com.android.commands.monkey.MonkeyTouchEvent;

        specialinvoke $r37.<com.android.commands.monkey.MonkeyTouchEvent: void <init>(int)>(1);

        $r38 = virtualinvoke $r37.<com.android.commands.monkey.MonkeyTouchEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l0);

        $f16 = r3.<android.graphics.PointF: float x>;

        $f17 = r3.<android.graphics.PointF: float y>;

        $r39 = virtualinvoke $r38.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f16, $f17);

        $r40 = virtualinvoke $r39.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(0);

        virtualinvoke $r36.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r40);

        return;
    }

    private void generateRotationEvent(java.util.Random)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        com.android.commands.monkey.MonkeyEventQueue r2;
        int[] r3;
        com.android.commands.monkey.MonkeyRotationEvent $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        r3 = <com.android.commands.monkey.MonkeySourceRandom: int[] SCREEN_ROTATION_DEGREES>;

        $r4 = new com.android.commands.monkey.MonkeyRotationEvent;

        $i0 = lengthof r3;

        $i1 = virtualinvoke r1.<java.util.Random: int nextInt(int)>($i0);

        $i2 = r3[$i1];

        $z0 = virtualinvoke r1.<java.util.Random: boolean nextBoolean()>();

        specialinvoke $r4.<com.android.commands.monkey.MonkeyRotationEvent: void <init>(int,boolean)>($i2, $z0);

        virtualinvoke r2.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r4);

        return;
    }

    private void generateTrackballEvent(java.util.Random)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        int i0, i1, $i3, $i4, $i5, i6;
        com.android.commands.monkey.MonkeyEventQueue r2, $r5, $r10;
        com.android.commands.monkey.MonkeyMotionEvent r3, $r6, $r7, $r8, $r11, $r12, $r13, $r15;
        long l2;
        com.android.commands.monkey.MonkeyTrackballEvent $r4, $r9, $r14;
        float $f0, $f1;
        boolean z0;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        i6 = 0;

     label1:
        z0 = 1;

        if i6 >= 10 goto label4;

        i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10);

        i1 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10);

        r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r14 = new com.android.commands.monkey.MonkeyTrackballEvent;

        specialinvoke $r14.<com.android.commands.monkey.MonkeyTrackballEvent: void <init>(int)>(2);

        $i4 = i0 - 5;

        $f1 = (float) $i4;

        $i5 = i1 - 5;

        $f0 = (float) $i5;

        r3 = virtualinvoke $r14.<com.android.commands.monkey.MonkeyTrackballEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, $f1, $f0);

        if i6 <= 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r15 = virtualinvoke r3.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(z0);

        virtualinvoke r2.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r15);

        i6 = i6 + 1;

        goto label1;

     label4:
        $i3 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10);

        if $i3 != 0 goto label5;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r4 = new com.android.commands.monkey.MonkeyTrackballEvent;

        specialinvoke $r4.<com.android.commands.monkey.MonkeyTrackballEvent: void <init>(int)>(0);

        $r6 = virtualinvoke $r4.<com.android.commands.monkey.MonkeyTrackballEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l2);

        $r7 = virtualinvoke $r6.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, 0.0F, 0.0F);

        $r8 = virtualinvoke $r7.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(1);

        virtualinvoke $r5.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r8);

        $r10 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r9 = new com.android.commands.monkey.MonkeyTrackballEvent;

        specialinvoke $r9.<com.android.commands.monkey.MonkeyTrackballEvent: void <init>(int)>(1);

        $r11 = virtualinvoke $r9.<com.android.commands.monkey.MonkeyTrackballEvent: com.android.commands.monkey.MonkeyMotionEvent setDownTime(long)>(l2);

        $r12 = virtualinvoke $r11.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent addPointer(int,float,float)>(0, 0.0F, 0.0F);

        $r13 = virtualinvoke $r12.<com.android.commands.monkey.MonkeyMotionEvent: com.android.commands.monkey.MonkeyMotionEvent setIntermediateNote(boolean)>(0);

        virtualinvoke $r10.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r13);

     label5:
        return;
    }

    public static int getKeyCode(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.view.KeyEvent: int keyCodeFromString(java.lang.String)>(r0);

        return $i0;
    }

    public static java.lang.String getKeyName(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.view.KeyEvent: java.lang.String keyCodeToString(int)>(i0);

        return $r0;
    }

    private android.graphics.PointF randomPoint(java.util.Random, android.view.Display)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        android.view.Display r2;
        android.graphics.PointF $r3;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        r2 := @parameter1: android.view.Display;

        $r3 = new android.graphics.PointF;

        $i0 = virtualinvoke r2.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke r1.<java.util.Random: int nextInt(int)>($i0);

        $f0 = (float) $i1;

        $i2 = virtualinvoke r2.<android.view.Display: int getHeight()>();

        $i3 = virtualinvoke r1.<java.util.Random: int nextInt(int)>($i2);

        $f1 = (float) $i3;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r3;
    }

    private android.graphics.PointF randomVector(java.util.Random)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        android.graphics.PointF $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        $r2 = new android.graphics.PointF;

        $f0 = virtualinvoke r1.<java.util.Random: float nextFloat()>();

        $f1 = $f0 - 0.5F;

        $f2 = $f1 * 50.0F;

        $f3 = virtualinvoke r1.<java.util.Random: float nextFloat()>();

        $f4 = $f3 - 0.5F;

        $f5 = $f4 * 50.0F;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f2, $f5);

        return $r2;
    }

    private void randomWalk(java.util.Random, android.view.Display, android.graphics.PointF, android.graphics.PointF)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        java.util.Random r1;
        android.view.Display r2;
        android.graphics.PointF r3, r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int $i0, $i1;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: java.util.Random;

        r2 := @parameter1: android.view.Display;

        r3 := @parameter2: android.graphics.PointF;

        r4 := @parameter3: android.graphics.PointF;

        $f0 = r3.<android.graphics.PointF: float x>;

        $f1 = virtualinvoke r1.<java.util.Random: float nextFloat()>();

        $f2 = r4.<android.graphics.PointF: float x>;

        $f3 = $f1 * $f2;

        $f4 = $f0 + $f3;

        $i0 = virtualinvoke r2.<android.view.Display: int getWidth()>();

        $f5 = (float) $i0;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        $f7 = staticinvoke <java.lang.Math: float max(float,float)>($f6, 0.0F);

        r3.<android.graphics.PointF: float x> = $f7;

        $f8 = r3.<android.graphics.PointF: float y>;

        $f9 = virtualinvoke r1.<java.util.Random: float nextFloat()>();

        $f10 = r4.<android.graphics.PointF: float y>;

        $f11 = $f9 * $f10;

        $f12 = $f8 + $f11;

        $i1 = virtualinvoke r2.<android.view.Display: int getHeight()>();

        $f13 = (float) $i1;

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>($f12, $f13);

        $f15 = staticinvoke <java.lang.Math: float max(float,float)>($f14, 0.0F);

        r3.<android.graphics.PointF: float y> = $f15;

        return;
    }

    private static boolean validateKeyCategory(java.lang.String, int[], float)
    {
        java.lang.String r0, $r8;
        float f0;
        byte $b0;
        int $i1, $i2, i3;
        java.lang.StringBuilder $r2;
        boolean[] $r9;
        boolean $z0;
        int[] r10;
        com.android.commands.monkey.Logger r11;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: int[];

        f0 := @parameter2: float;

        $b0 = f0 cmpg 0.1F;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        i3 = 0;

     label2:
        $i1 = lengthof r10;

        if i3 >= $i1 goto label4;

        $r9 = <com.android.commands.monkey.MonkeySourceRandom: boolean[] PHYSICAL_KEY_EXISTS>;

        $i2 = r10[i3];

        $z0 = $r9[$i2];

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        r11 = <com.android.commands.monkey.Logger: com.android.commands.monkey.Logger err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no physical keys but with factor ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%.");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<com.android.commands.monkey.Logger: void println(java.lang.String)>($r8);

        return 0;
    }

    private boolean validateKeys()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        float[] $r1, $r3, $r5;
        float $f0, $f1, $f2;
        int[] $r2, $r4, $r6;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        $r2 = <com.android.commands.monkey.MonkeySourceRandom: int[] NAV_KEYS>;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f0 = $r1[6];

        $z0 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: boolean validateKeyCategory(java.lang.String,int[],float)>("NAV_KEYS", $r2, $f0);

        if $z0 == 0 goto label1;

        $r4 = <com.android.commands.monkey.MonkeySourceRandom: int[] MAJOR_NAV_KEYS>;

        $r3 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f1 = $r3[7];

        $z1 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: boolean validateKeyCategory(java.lang.String,int[],float)>("MAJOR_NAV_KEYS", $r4, $f1);

        if $z1 == 0 goto label1;

        $r6 = <com.android.commands.monkey.MonkeySourceRandom: int[] SYS_KEYS>;

        $r5 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f2 = $r5[8];

        $z2 = staticinvoke <com.android.commands.monkey.MonkeySourceRandom: boolean validateKeyCategory(java.lang.String,int[],float)>("SYS_KEYS", $r6, $f2);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public void generateActivity()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        com.android.commands.monkey.MonkeyActivityEvent $r1;
        java.util.Random $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.content.ComponentName $r4;
        com.android.commands.monkey.MonkeyEventQueue $r5;
        java.util.List r6;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r6 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.List mMainApps>;

        $r1 = new com.android.commands.monkey.MonkeyActivityEvent;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: java.util.Random mRandom>;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i0);

        $r3 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (android.content.ComponentName) $r3;

        specialinvoke $r1.<com.android.commands.monkey.MonkeyActivityEvent: void <init>(android.content.ComponentName)>($r4);

        $r5 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r5.<com.android.commands.monkey.MonkeyEventQueue: void addLast(com.android.commands.monkey.MonkeyEvent)>($r1);

        return;
    }

    public com.android.commands.monkey.MonkeyEvent getNextEvent()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        com.android.commands.monkey.MonkeyEvent r1;
        com.android.commands.monkey.MonkeyEventQueue $r2, $r3, $r5;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object $r4;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $z0 = virtualinvoke $r2.<com.android.commands.monkey.MonkeyEventQueue: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: void generateEvents()>();

     label1:
        $i0 = r0.<com.android.commands.monkey.MonkeySourceRandom: int mEventCount>;

        $i1 = $i0 + 1;

        r0.<com.android.commands.monkey.MonkeySourceRandom: int mEventCount> = $i1;

        $r3 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        $r4 = virtualinvoke $r3.<com.android.commands.monkey.MonkeyEventQueue: java.lang.Object getFirst()>();

        r1 = (com.android.commands.monkey.MonkeyEvent) $r4;

        $r5 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEventQueue mQ>;

        virtualinvoke $r5.<com.android.commands.monkey.MonkeyEventQueue: java.lang.Object removeFirst()>();

        return r1;
    }

    public void setFactors(int, float)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        int i0;
        float f0;
        float[] $r1;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $r1[i0] = f0;

        return;
    }

    public void setFactors(float[])
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        float[] r1, $r2;
        int $i0, i1, i2;
        float $f0;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        r1 := @parameter0: float[];

        i1 = 12;

        $i0 = lengthof r1;

        if $i0 >= 12 goto label1;

        i1 = lengthof r1;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f0 = r1[i2];

        $r2[i2] = $f0;

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public void setVerbose(int)
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        int i0;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        i0 := @parameter0: int;

        r0.<com.android.commands.monkey.MonkeySourceRandom: int mVerbose> = i0;

        return;
    }

    public boolean validate()
    {
        com.android.commands.monkey.MonkeySourceRandom r0;
        boolean z0, $z1, z2, $z3, $z4;
        float[] $r1;
        float $f0;
        byte $b0;
        com.android.commands.monkey.MonkeyPermissionUtil $r2, $r3;
        int $i1;

        r0 := @this: com.android.commands.monkey.MonkeySourceRandom;

        z2 = 1;

        $r1 = r0.<com.android.commands.monkey.MonkeySourceRandom: float[] mFactors>;

        $f0 = $r1[5];

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r2 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyPermissionUtil mPermissionUtil>;

        $z1 = virtualinvoke $r2.<com.android.commands.monkey.MonkeyPermissionUtil: boolean populatePermissionsMapping()>();

        z0 = 1 & $z1;

        z2 = z0;

        if z0 == 0 goto label1;

        z2 = z0;

        $i1 = r0.<com.android.commands.monkey.MonkeySourceRandom: int mVerbose>;

        if $i1 < 2 goto label1;

        $r3 = r0.<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyPermissionUtil mPermissionUtil>;

        virtualinvoke $r3.<com.android.commands.monkey.MonkeyPermissionUtil: void dump()>();

        z2 = z0;

     label1:
        $z3 = specialinvoke r0.<com.android.commands.monkey.MonkeySourceRandom: boolean adjustEventFactors()>();

        $z4 = $z3 & z2;

        return $z4;
    }
}
