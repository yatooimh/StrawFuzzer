public class com.android.commands.svc.PowerCommand extends com.android.commands.svc.Svc$Command
{
    private static final int FORCE_SUSPEND_DELAY_DEFAULT_MILLIS;

    public void <init>()
    {
        com.android.commands.svc.PowerCommand r0;

        r0 := @this: com.android.commands.svc.PowerCommand;

        specialinvoke r0.<com.android.commands.svc.Svc$Command: void <init>(java.lang.String)>("power");

        return;
    }

    private void maybeLogRemoteException(java.lang.String)
    {
        com.android.commands.svc.PowerCommand r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;
        java.util.Optional $r3;
        java.lang.Boolean $r4, $r6;
        java.lang.Object $r5;
        java.io.PrintStream $r7;

        r0 := @this: com.android.commands.svc.PowerCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("sys.powerctl");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.sysprop.InitProperties: java.util.Optional userspace_reboot_in_progress()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = virtualinvoke $r3.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(r1);

     label1:
        return;
    }

    public java.lang.String longHelp()
    {
        com.android.commands.svc.PowerCommand r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r8;

        r0 := @this: com.android.commands.svc.PowerCommand;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.android.commands.svc.PowerCommand: java.lang.String shortHelp()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nusage: svc power stayon [true|false|usb|ac|wireless]\n         Set the \'keep awake while plugged in\' setting.\n       svc power reboot [reason]\n         Perform a runtime shutdown and reboot device with specified reason.\n       svc power shutdown\n         Perform a runtime shutdown and power off the device.\n       svc power forcesuspend [t]\n         Force the system into suspend, ignoring all wakelocks.\n         t - Number of milliseconds to wait before issuing force-suspend.\n             Helps with devices that can\'t suspend while plugged in.\n             Defaults to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n             When using a delay, you must use the nohup shell modifier:\n             \'adb shell nohup svc power forcesuspend [time]\'\n         Use caution; this is dangerous. It puts the device to sleep\n         immediately without giving apps or the system an opportunity to\n         save their state.\n");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.svc.PowerCommand r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l0, $l5;
        int $i1, $i2, $i3, $i4, i7;
        android.os.IBinder $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r28, $r33, $r37, $r39, $r44, r50, $r62;
        java.io.PrintStream $r10, r48, r52, r59, $r61;
        android.os.RemoteException $r22, $r23, $r29, $r40;
        java.lang.Throwable $r24;
        java.lang.StringBuilder $r25, $r30, $r35, $r41;
        java.lang.Exception $r34;
        java.lang.String[] r45;
        android.os.IPowerManager r46;
        byte b6;

        r0 := @this: com.android.commands.svc.PowerCommand;

        r45 := @parameter0: java.lang.String[];

        $i1 = lengthof r45;

        if $i1 < 2 goto label29;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("power");

        r46 = staticinvoke <android.os.IPowerManager$Stub: android.os.IPowerManager asInterface(android.os.IBinder)>($r1);

        $r3 = "stayon";

        $r2 = r45[1];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label11;

        $i4 = lengthof r45;

        if $i4 != 3 goto label11;

        $r13 = "true";

        $r12 = r45[2];

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z5 == 0 goto label01;

        b6 = 7;

        goto label05;

     label01:
        $r15 = "false";

        $r14 = r45[2];

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label02;

        b6 = 0;

        goto label05;

     label02:
        $r17 = "usb";

        $r16 = r45[2];

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z7 == 0 goto label03;

        b6 = 2;

        goto label05;

     label03:
        $r19 = "ac";

        $r18 = r45[2];

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z8 == 0 goto label04;

        b6 = 1;

        goto label05;

     label04:
        $r21 = "wireless";

        $r20 = r45[2];

        $z9 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label29;

        b6 = 4;

     label05:
        if b6 == 0 goto label07;

     label06:
        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        interfaceinvoke r46.<android.os.IPowerManager: void wakeUp(long,int,java.lang.String,java.lang.String)>($l5, 0, "PowerCommand", null);

     label07:
        interfaceinvoke r46.<android.os.IPowerManager: void setStayOnSetting(int)>(b6);

     label08:
        goto label10;

     label09:
        $r40 := @caughtexception;

        r48 = <java.lang.System: java.io.PrintStream err>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Faild to set setting: ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r48.<java.io.PrintStream: void println(java.lang.String)>($r44);

     label10:
        return;

     label11:
        $r5 = "reboot";

        $r4 = r45[1];

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        i7 = 0;

        if z0 == 0 goto label17;

        r50 = null;

        $i3 = lengthof r45;

        if $i3 != 3 goto label12;

        r50 = r45[2];

     label12:
        interfaceinvoke r46.<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>(0, r50, 1);

     label13:
        goto label16;

     label14:
        $r34 := @caughtexception;

        r52 = <java.lang.System: java.io.PrintStream err>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to reboot: ");

        $r37 = virtualinvoke $r34.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r52.<java.io.PrintStream: void println(java.lang.String)>($r39);

        goto label16;

     label15:
        $r22 := @caughtexception;

        specialinvoke r0.<com.android.commands.svc.PowerCommand: void maybeLogRemoteException(java.lang.String)>("Failed to reboot.");

        goto label13;

     label16:
        return;

     label17:
        $r7 = "shutdown";

        $r6 = r45[1];

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label22;

     label18:
        interfaceinvoke r46.<android.os.IPowerManager: void shutdown(boolean,java.lang.String,boolean)>(0, null, 1);

     label19:
        goto label21;

     label20:
        $r23 := @caughtexception;

        specialinvoke r0.<com.android.commands.svc.PowerCommand: void maybeLogRemoteException(java.lang.String)>("Failed to shutdown.");

     label21:
        return;

     label22:
        $r9 = "forcesuspend";

        $r8 = r45[1];

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label29;

        $i2 = lengthof r45;

        if $i2 <= 2 goto label23;

        $r11 = r45[2];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        goto label23;

     label23:
        l0 = (long) i7;

     label24:
        staticinvoke <java.lang.Thread: void sleep(long)>(l0);

        $z4 = interfaceinvoke r46.<android.os.IPowerManager: boolean forceSuspend()>();

        if $z4 != 0 goto label28;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Failed to force suspend.");

     label25:
        goto label28;

     label26:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to force-suspend with exception: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.svc.PowerCommand: void maybeLogRemoteException(java.lang.String)>($r33);

        goto label28;

     label27:
        $r24 := @caughtexception;

        r59 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to force suspend: ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r59.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label28:
        return;

     label29:
        $r61 = <java.lang.System: java.io.PrintStream err>;

        $r62 = virtualinvoke r0.<com.android.commands.svc.PowerCommand: java.lang.String longHelp()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r62);

        return;

        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch android.os.RemoteException from label12 to label13 with label15;
        catch java.lang.Exception from label12 to label13 with label14;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch java.lang.InterruptedException from label24 to label25 with label27;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    public java.lang.String shortHelp()
    {
        com.android.commands.svc.PowerCommand r0;

        r0 := @this: com.android.commands.svc.PowerCommand;

        return "Control the power manager";
    }

    public static void <clinit>()
    {
        <com.android.commands.svc.PowerCommand: int FORCE_SUSPEND_DELAY_DEFAULT_MILLIS> = 0;

        return;
    }
}
