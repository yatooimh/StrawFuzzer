public class com.android.commands.svc.SystemServerCommand extends com.android.commands.svc.Svc$Command
{

    public void <init>()
    {
        com.android.commands.svc.SystemServerCommand r0;

        r0 := @this: com.android.commands.svc.SystemServerCommand;

        specialinvoke r0.<com.android.commands.svc.Svc$Command: void <init>(java.lang.String)>("system-server");

        return;
    }

    private void waitForCrash() throws java.lang.Exception
    {
        com.android.commands.svc.SystemServerCommand r0;
        android.os.ParcelFileDescriptor r1;
        android.app.IActivityManager $r2;
        java.io.PrintStream $r3, $r6;
        java.io.FileInputStream $r4;
        java.io.FileDescriptor $r5;

        r0 := @this: com.android.commands.svc.SystemServerCommand;

        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r1 = interfaceinvoke $r2.<android.app.IActivityManager: android.os.ParcelFileDescriptor getLifeMonitor()>();

        if r1 != null goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Unable to get life monitor.");

        return;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Waiting for the system server process to die...");

        $r4 = new java.io.FileInputStream;

        $r5 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r5);

        virtualinvoke $r4.<java.io.FileInputStream: int read()>();

        return;
    }

    public java.lang.String longHelp()
    {
        com.android.commands.svc.SystemServerCommand r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6;

        r0 := @this: com.android.commands.svc.SystemServerCommand;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.android.commands.svc.SystemServerCommand: java.lang.String shortHelp()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nusage: system-server wait-for-crash\n         Wait until the system server process crashes.\n\n");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.svc.SystemServerCommand r0;
        int $i0, $i1;
        java.io.PrintStream $r1;
        java.lang.String $r2, r5;
        boolean $z0;
        java.lang.Exception $r3;
        java.lang.String[] r4;
        byte b2;

        r0 := @this: com.android.commands.svc.SystemServerCommand;

        r4 := @parameter0: java.lang.String[];

     label01:
        $i0 = lengthof r4;

        if $i0 <= 1 goto label10;

     label02:
        r5 = r4[1];

        b2 = -1;

     label03:
        $i1 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        if $i1 == -318476469 goto label05;

     label04:
        goto label07;

     label05:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("wait-for-crash");

        if $z0 == 0 goto label04;

     label06:
        b2 = 0;

     label07:
        if b2 == 0 goto label08;

        goto label10;

     label08:
        specialinvoke r0.<com.android.commands.svc.SystemServerCommand: void waitForCrash()>();

     label09:
        return;

     label10:
        goto label12;

     label11:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label12:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke r0.<com.android.commands.svc.SystemServerCommand: java.lang.String longHelp()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
    }

    public java.lang.String shortHelp()
    {
        com.android.commands.svc.SystemServerCommand r0;

        r0 := @this: com.android.commands.svc.SystemServerCommand;

        return "System server process related command";
    }
}
