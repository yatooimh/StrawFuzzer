public class com.android.commands.svc.UsbCommand extends com.android.commands.svc.Svc$Command
{

    public void <init>()
    {
        com.android.commands.svc.UsbCommand r0;

        r0 := @this: com.android.commands.svc.UsbCommand;

        specialinvoke r0.<com.android.commands.svc.Svc$Command: void <init>(java.lang.String)>("usb");

        return;
    }

    public java.lang.String longHelp()
    {
        com.android.commands.svc.UsbCommand r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6;

        r0 := @this: com.android.commands.svc.UsbCommand;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<com.android.commands.svc.UsbCommand: java.lang.String shortHelp()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nusage: svc usb setFunctions [function]\n         Set the current usb function. If function is blank, sets to charging.\n       svc usb setScreenUnlockedFunctions [function]\n         Sets the functions which, if the device was charging, become current onscreen unlock. If function is blank, turn off this feature.\n       svc usb getFunctions\n          Gets the list of currently enabled functions\n       svc usb resetUsbGadget\n          Reset usb gadget\n\npossible values of [function] are any of \'mtp\', \'ptp\', \'rndis\', \'midi\'\n");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.svc.UsbCommand r0;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1, $i4;
        java.io.PrintStream $r1, $r12, r38, r41, r44, r47;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r18, $r23, $r28, $r33, r36;
        android.os.IBinder $r3;
        long $l2, $l3, $l5;
        android.os.RemoteException $r14, $r19, $r24, $r29;
        java.lang.StringBuilder $r15, $r20, $r25, $r30;
        java.lang.String[] r34;
        android.hardware.usb.IUsbManager r35;

        r0 := @this: com.android.commands.svc.UsbCommand;

        r34 := @parameter0: java.lang.String[];

        $i0 = lengthof r34;

        if $i0 < 2 goto label24;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("usb");

        r35 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager asInterface(android.os.IBinder)>($r3);

        $r5 = "setFunctions";

        $r4 = r34[1];

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        r36 = "";

        if z0 == 0 goto label07;

     label01:
        $i4 = lengthof r34;

        if $i4 < 3 goto label03;

     label02:
        r36 = r34[2];

     label03:
        $l5 = staticinvoke <android.hardware.usb.UsbManager: long usbFunctionsFromString(java.lang.String)>(r36);

        interfaceinvoke r35.<android.hardware.usb.IUsbManager: void setCurrentFunctions(long)>($l5);

     label04:
        goto label06;

     label05:
        $r29 := @caughtexception;

        r38 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error communicating with UsbManager: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label06:
        return;

     label07:
        $r7 = "getFunctions";

        $r6 = r34[1];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label12;

     label08:
        $r12 = <java.lang.System: java.io.PrintStream err>;

        $l3 = interfaceinvoke r35.<android.hardware.usb.IUsbManager: long getCurrentFunctions()>();

        $r13 = staticinvoke <android.hardware.usb.UsbManager: java.lang.String usbFunctionsToString(long)>($l3);

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        r41 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error communicating with UsbManager: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label11:
        return;

     label12:
        $r9 = "setScreenUnlockedFunctions";

        $r8 = r34[1];

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label19;

     label13:
        $i1 = lengthof r34;

        if $i1 < 3 goto label15;

     label14:
        r36 = r34[2];

     label15:
        $l2 = staticinvoke <android.hardware.usb.UsbManager: long usbFunctionsFromString(java.lang.String)>(r36);

        interfaceinvoke r35.<android.hardware.usb.IUsbManager: void setScreenUnlockedFunctions(long)>($l2);

     label16:
        goto label18;

     label17:
        $r14 := @caughtexception;

        r44 = <java.lang.System: java.io.PrintStream err>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error communicating with UsbManager: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label18:
        return;

     label19:
        $r11 = "resetUsbGadget";

        $r10 = r34[1];

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label24;

     label20:
        interfaceinvoke r35.<android.hardware.usb.IUsbManager: void resetUsbGadget()>();

     label21:
        goto label23;

     label22:
        $r24 := @caughtexception;

        r47 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error communicating with UsbManager: ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r47.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label23:
        return;

     label24:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke r0.<com.android.commands.svc.UsbCommand: java.lang.String longHelp()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label20 to label21 with label22;
    }

    public java.lang.String shortHelp()
    {
        com.android.commands.svc.UsbCommand r0;

        r0 := @this: com.android.commands.svc.UsbCommand;

        return "Control Usb state";
    }
}
