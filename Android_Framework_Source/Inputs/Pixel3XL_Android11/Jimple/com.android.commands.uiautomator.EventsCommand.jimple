public class com.android.commands.uiautomator.EventsCommand extends com.android.commands.uiautomator.Launcher$Command
{
    private java.lang.Object mQuitLock;

    public void <init>()
    {
        com.android.commands.uiautomator.EventsCommand r0;
        java.lang.Object $r1;

        r0 := @this: com.android.commands.uiautomator.EventsCommand;

        specialinvoke r0.<com.android.commands.uiautomator.Launcher$Command: void <init>(java.lang.String)>("events");

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.uiautomator.EventsCommand: java.lang.Object mQuitLock> = $r1;

        return;
    }

    public java.lang.String detailedOptions()
    {
        com.android.commands.uiautomator.EventsCommand r0;

        r0 := @this: com.android.commands.uiautomator.EventsCommand;

        return null;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.uiautomator.EventsCommand r0;
        android.app.UiAutomation $r3;
        java.lang.Object $r5, r10;
        java.lang.Throwable $r6, $r7;
        java.lang.String[] r8;
        com.android.uiautomator.core.UiAutomationShellWrapper r12;
        com.android.commands.uiautomator.EventsCommand$1 r13;
        java.lang.InterruptedException r14;

        r0 := @this: com.android.commands.uiautomator.EventsCommand;

        r8 := @parameter0: java.lang.String[];

        r12 = new com.android.uiautomator.core.UiAutomationShellWrapper;

        specialinvoke r12.<com.android.uiautomator.core.UiAutomationShellWrapper: void <init>()>();

        virtualinvoke r12.<com.android.uiautomator.core.UiAutomationShellWrapper: void connect()>();

        $r3 = virtualinvoke r12.<com.android.uiautomator.core.UiAutomationShellWrapper: android.app.UiAutomation getUiAutomation()>();

        r13 = new com.android.commands.uiautomator.EventsCommand$1;

        specialinvoke r13.<com.android.commands.uiautomator.EventsCommand$1: void <init>(com.android.commands.uiautomator.EventsCommand)>(r0);

        virtualinvoke $r3.<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation$OnAccessibilityEventListener)>(r13);

        r10 = r0.<com.android.commands.uiautomator.EventsCommand: java.lang.Object mQuitLock>;

        entermonitor r10;

     label1:
        $r5 = r0.<com.android.commands.uiautomator.EventsCommand: java.lang.Object mQuitLock>;

        virtualinvoke $r5.<java.lang.Object: void wait()>();

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        goto label8;

     label4:
        $r7 := @caughtexception;

     label5:
        r14 = (java.lang.InterruptedException) $r7;

        virtualinvoke r14.<java.lang.InterruptedException: void printStackTrace()>();

     label6:
        exitmonitor r10;

     label7:
        virtualinvoke r12.<com.android.uiautomator.core.UiAutomationShellWrapper: void disconnect()>();

        return;

     label8:
        exitmonitor r10;

     label9:
        throw $r6;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
        catch java.lang.Throwable from label8 to label9 with label3;
    }

    public java.lang.String shortHelp()
    {
        com.android.commands.uiautomator.EventsCommand r0;

        r0 := @this: com.android.commands.uiautomator.EventsCommand;

        return "prints out accessibility events until terminated";
    }
}
