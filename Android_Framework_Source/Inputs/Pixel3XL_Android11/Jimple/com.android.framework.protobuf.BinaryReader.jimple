abstract class com.android.framework.protobuf.BinaryReader extends java.lang.Object implements com.android.framework.protobuf.Reader
{
    private static final int FIXED32_MULTIPLE_MASK;
    private static final int FIXED64_MULTIPLE_MASK;

    private void <init>()
    {
        com.android.framework.protobuf.BinaryReader r0;

        r0 := @this: com.android.framework.protobuf.BinaryReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.framework.protobuf.BinaryReader$1)
    {
        com.android.framework.protobuf.BinaryReader r0;
        com.android.framework.protobuf.BinaryReader$1 r1;

        r0 := @this: com.android.framework.protobuf.BinaryReader;

        r1 := @parameter0: com.android.framework.protobuf.BinaryReader$1;

        specialinvoke r0.<com.android.framework.protobuf.BinaryReader: void <init>()>();

        return;
    }

    public static com.android.framework.protobuf.BinaryReader newInstance(java.nio.ByteBuffer, boolean)
    {
        java.nio.ByteBuffer r0;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r1;
        com.android.framework.protobuf.BinaryReader$SafeHeapReader $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z1 == 0 goto label1;

        $r2 = new com.android.framework.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke $r2.<com.android.framework.protobuf.BinaryReader$SafeHeapReader: void <init>(java.nio.ByteBuffer,boolean)>(r0, z0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Direct buffers not yet supported");

        throw $r1;
    }

    public abstract int getTotalBytesRead();

    public boolean shouldDiscardUnknownFields()
    {
        com.android.framework.protobuf.BinaryReader r0;

        r0 := @this: com.android.framework.protobuf.BinaryReader;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.framework.protobuf.BinaryReader: int FIXED64_MULTIPLE_MASK> = 7;

        <com.android.framework.protobuf.BinaryReader: int FIXED32_MULTIPLE_MASK> = 3;

        return;
    }
}
