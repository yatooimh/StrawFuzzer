class com.android.framework.protobuf.ByteString$LiteralByteString extends com.android.framework.protobuf.ByteString$LeafByteString
{
    private static final long serialVersionUID;
    protected final byte[] bytes;

    void <init>(byte[])
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        byte[] r1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: byte[];

        specialinvoke r0.<com.android.framework.protobuf.ByteString$LeafByteString: void <init>()>();

        if r1 == null goto label1;

        r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes> = r1;

        return;

     label1:
        throw null;
    }

    public final java.nio.ByteBuffer asReadOnlyByteBuffer()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2, $r3;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        return $r3;
    }

    public final java.util.List asReadOnlyByteBufferList()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.nio.ByteBuffer $r1;
        java.util.List $r2;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        $r1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    public byte byteAt(int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    public final void copyTo(java.nio.ByteBuffer)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.nio.ByteBuffer r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        byte[] r1, $r2;
        int i0, i1, i2;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r1, i1, i2);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0, r2, $r4;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        com.android.framework.protobuf.ByteString $r3;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.android.framework.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        $r3 = (com.android.framework.protobuf.ByteString) r1;

        $i3 = virtualinvoke $r3.<com.android.framework.protobuf.ByteString: int size()>();

        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $i4 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        if $i4 != 0 goto label4;

        return 1;

     label4:
        $z1 = r1 instanceof com.android.framework.protobuf.ByteString$LiteralByteString;

        if $z1 == 0 goto label6;

        r2 = (com.android.framework.protobuf.ByteString$LiteralByteString) r1;

        i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        i1 = virtualinvoke r2.<com.android.framework.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        if i0 == 0 goto label5;

        if i1 == 0 goto label5;

        if i0 == i1 goto label5;

        return 0;

     label5:
        $r4 = (com.android.framework.protobuf.ByteString$LiteralByteString) r1;

        $i5 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        $z3 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: boolean equalsRange(com.android.framework.protobuf.ByteString,int,int)>($r4, 0, $i5);

        return $z3;

     label6:
        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z2;
    }

    final boolean equalsRange(com.android.framework.protobuf.ByteString, int, int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12, i13, i14;
        java.lang.StringBuilder $r2, $r8;
        java.lang.IllegalArgumentException $r6, $r15;
        java.lang.String $r7, $r16;
        boolean $z0, $z1;
        com.android.framework.protobuf.ByteString $r17, $r18, r19;
        byte $b10, $b11;
        byte[] r20, r21;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r19 := @parameter0: com.android.framework.protobuf.ByteString;

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = virtualinvoke r19.<com.android.framework.protobuf.ByteString: int size()>();

        if i0 > $i2 goto label6;

        $i4 = i12 + i0;

        $i5 = virtualinvoke r19.<com.android.framework.protobuf.ByteString: int size()>();

        if $i4 > $i5 goto label5;

        $z0 = r19 instanceof com.android.framework.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label4;

        r1 = (com.android.framework.protobuf.ByteString$LiteralByteString) r19;

        r20 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        r21 = r1.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i13 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i8 = virtualinvoke r1.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i14 = $i8 + i12;

     label1:
        $i9 = i1 + i0;

        if i13 >= $i9 goto label3;

        $b11 = r20[i13];

        $b10 = r21[i14];

        if $b11 == $b10 goto label2;

        return 0;

     label2:
        i13 = i13 + 1;

        i14 = i14 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        $i7 = i12 + i0;

        $r17 = virtualinvoke r19.<com.android.framework.protobuf.ByteString: com.android.framework.protobuf.ByteString substring(int,int)>(i12, $i7);

        $r18 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: com.android.framework.protobuf.ByteString substring(int,int)>(0, i0);

        $z1 = virtualinvoke $r17.<com.android.framework.protobuf.ByteString: boolean equals(java.lang.Object)>($r18);

        return $z1;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran off end of other: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = virtualinvoke r19.<com.android.framework.protobuf.ByteString: int size()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length too large: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $i3 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    protected int getOffsetIntoBytes()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        return 0;
    }

    byte internalByteAt(int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    public final boolean isValidUtf8()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0, $i1, $i2;
        byte[] $r1;
        boolean $z0;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        $i2 = $i1 + i0;

        $z0 = staticinvoke <com.android.framework.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, i0, $i2);

        return $z0;
    }

    public final com.android.framework.protobuf.CodedInputStream newCodedInput()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        com.android.framework.protobuf.CodedInputStream $r2;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <com.android.framework.protobuf.CodedInputStream: com.android.framework.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r1, $i0, $i1, 1);

        return $r2;
    }

    public final java.io.InputStream newInput()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    protected final int partialHash(int, int, int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i4 = $i3 + i1;

        $i5 = staticinvoke <com.android.framework.protobuf.Internal: int partialHash(int,byte[],int,int)>(i0, $r1, $i4, i2);

        return $i5;
    }

    protected final int partialIsValidUtf8(int, int, int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        byte[] $r1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i6 = $i2 + i5;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = i6 + i1;

        $i4 = staticinvoke <com.android.framework.protobuf.Utf8: int partialIsValidUtf8(int,byte[],int,int)>(i0, $r1, i6, $i3);

        return $i4;
    }

    public int size()
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final com.android.framework.protobuf.ByteString substring(int, int)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        int i0, $i1, $i2, $i3, i4, i5;
        com.android.framework.protobuf.ByteString$BoundedByteString $r1;
        byte[] $r2;
        com.android.framework.protobuf.ByteString $r3;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        i5 = staticinvoke <com.android.framework.protobuf.ByteString$LiteralByteString: int checkRange(int,int,int)>(i0, i4, $i1);

        if i5 != 0 goto label1;

        $r3 = <com.android.framework.protobuf.ByteString: com.android.framework.protobuf.ByteString EMPTY>;

        return $r3;

     label1:
        $r1 = new com.android.framework.protobuf.ByteString$BoundedByteString;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i3 = $i2 + i0;

        specialinvoke $r1.<com.android.framework.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r2, $i3, i5);

        return $r1;
    }

    protected final java.lang.String toStringInternal(java.nio.charset.Charset)
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.nio.charset.Charset r1;
        java.lang.String $r2;
        byte[] $r3;
        int $i0, $i1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new java.lang.String;

        $r3 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, $i0, $i1, r1);

        return $r2;
    }

    final void writeTo(com.android.framework.protobuf.ByteOutput) throws java.io.IOException
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        com.android.framework.protobuf.ByteOutput r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: com.android.framework.protobuf.ByteOutput;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke r1.<com.android.framework.protobuf.ByteOutput: void writeLazy(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public final void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.io.OutputStream r1;
        byte[] $r2;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] toByteArray()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    final void writeToInternal(java.io.OutputStream, int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.ByteString$LiteralByteString r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3;
        byte[] $r2;

        r0 := @this: com.android.framework.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.framework.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<com.android.framework.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i3 = $i2 + i0;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i3, i1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.framework.protobuf.ByteString$LiteralByteString: long serialVersionUID> = 1L;

        return;
    }
}
