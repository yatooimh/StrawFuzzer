public abstract class com.android.framework.protobuf.CodedOutputStream extends com.android.framework.protobuf.ByteOutput
{
    public static final int DEFAULT_BUFFER_SIZE;
    private static final boolean HAS_UNSAFE_ARRAY_OPERATIONS;
    public static final int LITTLE_ENDIAN_32_SIZE;
    private static final java.util.logging.Logger logger;
    private boolean serializationDeterministic;
    com.android.framework.protobuf.CodedOutputStreamWriter wrapper;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        <com.android.framework.protobuf.CodedOutputStream: int LITTLE_ENDIAN_32_SIZE> = 4;

        <com.android.framework.protobuf.CodedOutputStream: int DEFAULT_BUFFER_SIZE> = 4096;

        $r0 = class "Lcom/android/framework/protobuf/CodedOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.android.framework.protobuf.CodedOutputStream: java.util.logging.Logger logger> = $r2;

        $z0 = staticinvoke <com.android.framework.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        <com.android.framework.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z0;

        return;
    }

    private void <init>()
    {
        com.android.framework.protobuf.CodedOutputStream r0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        specialinvoke r0.<com.android.framework.protobuf.ByteOutput: void <init>()>();

        return;
    }

    void <init>(com.android.framework.protobuf.CodedOutputStream$1)
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        com.android.framework.protobuf.CodedOutputStream$1 r1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: com.android.framework.protobuf.CodedOutputStream$1;

        specialinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void <init>()>();

        return;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <com.android.framework.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return $z0;
    }

    public static int computeBoolSize(int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>(z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeByteArraySize(int, byte[])
    {
        int i0, $i1, $i2, $i3;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeByteArraySizeNoTag(byte[])>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeByteBufferSize(int, java.nio.ByteBuffer)
    {
        int i0, $i1, $i2, $i3;
        java.nio.ByteBuffer r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteBuffer;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeByteBufferSizeNoTag(java.nio.ByteBuffer)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeByteBufferSizeNoTag(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0, $i1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeBytesSize(int, com.android.framework.protobuf.ByteString)
    {
        int i0, $i1, $i2, $i3;
        com.android.framework.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.ByteString;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.android.framework.protobuf.ByteString)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSizeNoTag(com.android.framework.protobuf.ByteString)
    {
        com.android.framework.protobuf.ByteString r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.framework.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.ByteString: int size()>();

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    public static int computeDoubleSize(int, double)
    {
        int i0, $i1, $i2, $i3;
        double d0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>(d0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double d0;

        d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i0);

        return $i1;
    }

    public static int computeFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int i0, $i1, $i2, $i3;
        float f0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>(f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float f0;

        f0 := @parameter0: float;

        return 4;
    }

    public static int computeGroupSize(int, com.android.framework.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.android.framework.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.MessageLite;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.android.framework.protobuf.MessageLite)>(r0);

        $i4 = $i2 + $i3;

        return $i4;
    }

    static int computeGroupSize(int, com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.android.framework.protobuf.MessageLite r0;
        com.android.framework.protobuf.Schema r1;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.MessageLite;

        r1 := @parameter2: com.android.framework.protobuf.Schema;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.android.framework.protobuf.MessageLite,com.android.framework.protobuf.Schema)>(r0, r1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeGroupSizeNoTag(com.android.framework.protobuf.MessageLite)
    {
        com.android.framework.protobuf.MessageLite r0;
        int $i0;

        r0 := @parameter0: com.android.framework.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<com.android.framework.protobuf.MessageLite: int getSerializedSize()>();

        return $i0;
    }

    static int computeGroupSizeNoTag(com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema)
    {
        com.android.framework.protobuf.MessageLite r0;
        com.android.framework.protobuf.Schema r1;
        com.android.framework.protobuf.AbstractMessageLite $r2;
        int $i0;

        r0 := @parameter0: com.android.framework.protobuf.MessageLite;

        r1 := @parameter1: com.android.framework.protobuf.Schema;

        $r2 = (com.android.framework.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<com.android.framework.protobuf.AbstractMessageLite: int getSerializedSize(com.android.framework.protobuf.Schema)>(r1);

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        return $i1;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l0);

        return $i1;
    }

    public static int computeLazyFieldMessageSetExtensionSize(int, com.android.framework.protobuf.LazyFieldLite)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.framework.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.LazyFieldLite;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLazyFieldSize(int,com.android.framework.protobuf.LazyFieldLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeLazyFieldSize(int, com.android.framework.protobuf.LazyFieldLite)
    {
        int i0, $i1, $i2, $i3;
        com.android.framework.protobuf.LazyFieldLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.LazyFieldLite;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(com.android.framework.protobuf.LazyFieldLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeLazyFieldSizeNoTag(com.android.framework.protobuf.LazyFieldLite)
    {
        com.android.framework.protobuf.LazyFieldLite r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.framework.protobuf.LazyFieldLite;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.LazyFieldLite: int getSerializedSize()>();

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeLengthDelimitedFieldSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int computeMessageSetExtensionSize(int, com.android.framework.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.framework.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.MessageLite;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeMessageSize(int,com.android.framework.protobuf.MessageLite)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeMessageSize(int, com.android.framework.protobuf.MessageLite)
    {
        int i0, $i1, $i2, $i3;
        com.android.framework.protobuf.MessageLite r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.MessageLite;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.android.framework.protobuf.MessageLite)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    static int computeMessageSize(int, com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema)
    {
        int i0, $i1, $i2, $i3;
        com.android.framework.protobuf.MessageLite r0;
        com.android.framework.protobuf.Schema r1;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.MessageLite;

        r1 := @parameter2: com.android.framework.protobuf.Schema;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.android.framework.protobuf.MessageLite,com.android.framework.protobuf.Schema)>(r0, r1);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSizeNoTag(com.android.framework.protobuf.MessageLite)
    {
        com.android.framework.protobuf.MessageLite r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.framework.protobuf.MessageLite;

        $i0 = interfaceinvoke r0.<com.android.framework.protobuf.MessageLite: int getSerializedSize()>();

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computeMessageSizeNoTag(com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema)
    {
        com.android.framework.protobuf.MessageLite r0;
        com.android.framework.protobuf.Schema r1;
        com.android.framework.protobuf.AbstractMessageLite $r2;
        int $i0, $i1;

        r0 := @parameter0: com.android.framework.protobuf.MessageLite;

        r1 := @parameter1: com.android.framework.protobuf.Schema;

        $r2 = (com.android.framework.protobuf.AbstractMessageLite) r0;

        $i0 = virtualinvoke $r2.<com.android.framework.protobuf.AbstractMessageLite: int getSerializedSize(com.android.framework.protobuf.Schema)>(r1);

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i1;
    }

    static int computePreferredBufferSize(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 <= 4096 goto label1;

        return 4096;

     label1:
        return i0;
    }

    public static int computeRawMessageSetExtensionSize(int, com.android.framework.protobuf.ByteString)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.framework.protobuf.ByteString r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.ByteString;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, i0);

        $i4 = $i2 + $i3;

        $i5 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeBytesSize(int,com.android.framework.protobuf.ByteString)>(3, r0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    public static int computeRawVarint32Size(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i0);

        return $i1;
    }

    public static int computeRawVarint64Size(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l0);

        return $i1;
    }

    public static int computeSFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeSInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i2;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        java.lang.String r0;
        int $i0, i1;
        com.android.framework.protobuf.Utf8$UnpairedSurrogateException $r2;
        java.nio.charset.Charset $r3;
        byte[] $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        i1 = staticinvoke <com.android.framework.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <com.android.framework.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        i1 = lengthof $r4;

     label4:
        $i0 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>(i1);

        return $i0;

        catch com.android.framework.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label3;
    }

    public static int computeTagSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.WireFormat: int makeTag(int,int)>(i0, 0);

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        return $i2;
    }

    public static int computeUInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & -16384;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = -2097152 & i0;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = -268435456 & i0;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeUInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long $l0, $l3, $l5, $l7, l9, l11, l13;
        byte $b1, $b2, $b4, $b6, $b8;
        int i10, i12, i14;

        l9 := @parameter0: long;

        $l0 = -128L & l9;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        $b2 = l9 cmp 0L;

        if $b2 >= 0 goto label2;

        return 10;

     label2:
        i10 = 2;

        l11 = l9;

        $l3 = -34359738368L & l9;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label3;

        i10 = 2 + 4;

        l11 = l9 >>> 28;

     label3:
        i12 = i10;

        l13 = l11;

        $l5 = -2097152L & l11;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label4;

        i12 = i10 + 2;

        l13 = l11 >>> 14;

     label4:
        i14 = i12;

        $l7 = -16384L & l13;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label5;

        i14 = i12 + 1;

     label5:
        return i14;
    }

    public static int encodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 << 1;

        $i1 = i0 >> 31;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

    public static long encodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3;

        l0 := @parameter0: long;

        $l2 = l0 << 1;

        $l1 = l0 >> 63;

        $l3 = $l2 ^ $l1;

        return $l3;
    }

    static com.android.framework.protobuf.CodedOutputStream newInstance(com.android.framework.protobuf.ByteOutput, int)
    {
        com.android.framework.protobuf.ByteOutput r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        com.android.framework.protobuf.CodedOutputStream$ByteOutputEncoder $r2;

        r0 := @parameter0: com.android.framework.protobuf.ByteOutput;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        $r2 = new com.android.framework.protobuf.CodedOutputStream$ByteOutputEncoder;

        specialinvoke $r2.<com.android.framework.protobuf.CodedOutputStream$ByteOutputEncoder: void <init>(com.android.framework.protobuf.ByteOutput,int)>(r0, i0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be positive");

        throw $r1;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        com.android.framework.protobuf.CodedOutputStream $r1;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>(r0, 4096);

        return $r1;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream r0;
        int i0;
        com.android.framework.protobuf.CodedOutputStream$OutputStreamEncoder $r1;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $r1 = new com.android.framework.protobuf.CodedOutputStream$OutputStreamEncoder;

        specialinvoke $r1.<com.android.framework.protobuf.CodedOutputStream$OutputStreamEncoder: void <init>(java.io.OutputStream,int)>(r0, i0);

        return $r1;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer)
    {
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r0;
        com.android.framework.protobuf.CodedOutputStream$HeapNioEncoder $r1;
        java.nio.ByteBuffer r2;
        com.android.framework.protobuf.CodedOutputStream r3;

        r2 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke r2.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r1 = new com.android.framework.protobuf.CodedOutputStream$HeapNioEncoder;

        specialinvoke $r1.<com.android.framework.protobuf.CodedOutputStream$HeapNioEncoder: void <init>(java.nio.ByteBuffer)>(r2);

        return $r1;

     label1:
        $z1 = virtualinvoke r2.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r2.<java.nio.ByteBuffer: boolean isReadOnly()>();

        if $z2 != 0 goto label4;

        $z3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream$UnsafeDirectNioEncoder: boolean isSupported()>();

        if $z3 == 0 goto label2;

        r3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStream newUnsafeInstance(java.nio.ByteBuffer)>(r2);

        goto label3;

     label2:
        r3 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStream newSafeInstance(java.nio.ByteBuffer)>(r2);

     label3:
        return r3;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ByteBuffer is read-only");

        throw $r0;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0;
        com.android.framework.protobuf.CodedOutputStream $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        com.android.framework.protobuf.CodedOutputStream $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStream newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static com.android.framework.protobuf.CodedOutputStream newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.android.framework.protobuf.CodedOutputStream$ArrayEncoder $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new com.android.framework.protobuf.CodedOutputStream$ArrayEncoder;

        specialinvoke $r1.<com.android.framework.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    static com.android.framework.protobuf.CodedOutputStream newSafeInstance(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        com.android.framework.protobuf.CodedOutputStream$SafeDirectNioEncoder $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = new com.android.framework.protobuf.CodedOutputStream$SafeDirectNioEncoder;

        specialinvoke $r1.<com.android.framework.protobuf.CodedOutputStream$SafeDirectNioEncoder: void <init>(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    static com.android.framework.protobuf.CodedOutputStream newUnsafeInstance(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        com.android.framework.protobuf.CodedOutputStream$UnsafeDirectNioEncoder $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = new com.android.framework.protobuf.CodedOutputStream$UnsafeDirectNioEncoder;

        specialinvoke $r1.<com.android.framework.protobuf.CodedOutputStream$UnsafeDirectNioEncoder: void <init>(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    public final void checkNoSpaceLeft()
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public abstract void flush() throws java.io.IOException;

    public abstract int getTotalBytesWritten();

    final void inefficientWriteStringNoTag(java.lang.String, com.android.framework.protobuf.Utf8$UnpairedSurrogateException) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        com.android.framework.protobuf.Utf8$UnpairedSurrogateException r1;
        java.util.logging.Level $r2;
        java.util.logging.Logger $r3;
        java.nio.charset.Charset $r4;
        int $i0, $i1;
        com.android.framework.protobuf.CodedOutputStream$OutOfSpaceException $r5, $r7;
        java.lang.IndexOutOfBoundsException $r6;
        java.lang.String r8;
        byte[] r9;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.framework.protobuf.Utf8$UnpairedSurrogateException;

        $r3 = <com.android.framework.protobuf.CodedOutputStream: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", r1);

        $r4 = <com.android.framework.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        r9 = virtualinvoke r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

     label1:
        $i0 = lengthof r9;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        $i1 = lengthof r9;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>(r9, 0, $i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new com.android.framework.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r7.<com.android.framework.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label4;
        catch com.android.framework.protobuf.CodedOutputStream$OutOfSpaceException from label1 to label2 with label3;
    }

    boolean isSerializationDeterministic()
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        boolean $z0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        $z0 = r0.<com.android.framework.protobuf.CodedOutputStream: boolean serializationDeterministic>;

        return $z0;
    }

    public abstract int spaceLeft();

    public void useDeterministicSerialization()
    {
        com.android.framework.protobuf.CodedOutputStream r0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r0.<com.android.framework.protobuf.CodedOutputStream: boolean serializationDeterministic> = 1;

        return;
    }

    public abstract void write(byte) throws java.io.IOException;

    public abstract void write(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract void write(byte[], int, int) throws java.io.IOException;

    public abstract void writeBool(int, boolean) throws java.io.IOException;

    public final void writeBoolNoTag(boolean) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        z0 := @parameter0: boolean;

        $b0 = (byte) z0;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void write(byte)>($b0);

        return;
    }

    public abstract void writeByteArray(int, byte[]) throws java.io.IOException;

    public abstract void writeByteArray(int, byte[], int, int) throws java.io.IOException;

    public final void writeByteArrayNoTag(byte[]) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    abstract void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException;

    public abstract void writeByteBuffer(int, java.nio.ByteBuffer) throws java.io.IOException;

    public abstract void writeBytes(int, com.android.framework.protobuf.ByteString) throws java.io.IOException;

    public abstract void writeBytesNoTag(com.android.framework.protobuf.ByteString) throws java.io.IOException;

    public final void writeDouble(int, double) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        double d0;
        long $l1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, $l1);

        return;
    }

    public final void writeDoubleNoTag(double) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        double d0;
        long $l0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeEnum(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeInt32(int,int)>(i0, i1);

        return;
    }

    public final void writeEnumNoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeInt32NoTag(int)>(i0);

        return;
    }

    public abstract void writeFixed32(int, int) throws java.io.IOException;

    public abstract void writeFixed32NoTag(int) throws java.io.IOException;

    public abstract void writeFixed64(int, long) throws java.io.IOException;

    public abstract void writeFixed64NoTag(long) throws java.io.IOException;

    public final void writeFloat(int, float) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0, $i1;
        float f0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, $i1);

        return;
    }

    public final void writeFloatNoTag(float) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        float f0;
        int $i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeGroup(int, com.android.framework.protobuf.MessageLite) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        com.android.framework.protobuf.MessageLite r1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.framework.protobuf.MessageLite;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeGroupNoTag(com.android.framework.protobuf.MessageLite)>(r1);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    final void writeGroup(int, com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        com.android.framework.protobuf.MessageLite r1;
        com.android.framework.protobuf.Schema r2;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.framework.protobuf.MessageLite;

        r2 := @parameter2: com.android.framework.protobuf.Schema;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeGroupNoTag(com.android.framework.protobuf.MessageLite,com.android.framework.protobuf.Schema)>(r1, r2);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeTag(int,int)>(i0, 4);

        return;
    }

    public final void writeGroupNoTag(com.android.framework.protobuf.MessageLite) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        com.android.framework.protobuf.MessageLite r1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: com.android.framework.protobuf.MessageLite;

        interfaceinvoke r1.<com.android.framework.protobuf.MessageLite: void writeTo(com.android.framework.protobuf.CodedOutputStream)>(r0);

        return;
    }

    final void writeGroupNoTag(com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        com.android.framework.protobuf.MessageLite r1;
        com.android.framework.protobuf.Schema r2;
        com.android.framework.protobuf.CodedOutputStreamWriter $r3;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: com.android.framework.protobuf.MessageLite;

        r2 := @parameter1: com.android.framework.protobuf.Schema;

        $r3 = r0.<com.android.framework.protobuf.CodedOutputStream: com.android.framework.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke r2.<com.android.framework.protobuf.Schema: void writeTo(java.lang.Object,com.android.framework.protobuf.Writer)>(r1, $r3);

        return;
    }

    public abstract void writeInt32(int, int) throws java.io.IOException;

    public abstract void writeInt32NoTag(int) throws java.io.IOException;

    public final void writeInt64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, l1);

        return;
    }

    public final void writeInt64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>(l0);

        return;
    }

    public abstract void writeLazy(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract void writeLazy(byte[], int, int) throws java.io.IOException;

    public abstract void writeMessage(int, com.android.framework.protobuf.MessageLite) throws java.io.IOException;

    abstract void writeMessage(int, com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema) throws java.io.IOException;

    public abstract void writeMessageNoTag(com.android.framework.protobuf.MessageLite) throws java.io.IOException;

    abstract void writeMessageNoTag(com.android.framework.protobuf.MessageLite, com.android.framework.protobuf.Schema) throws java.io.IOException;

    public abstract void writeMessageSetExtension(int, com.android.framework.protobuf.MessageLite) throws java.io.IOException;

    public final void writeRawByte(byte) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        byte b0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        b0 := @parameter0: byte;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void write(byte)>(b0);

        return;
    }

    public final void writeRawByte(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        byte $b1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void write(byte)>($b1);

        return;
    }

    public final void writeRawBytes(com.android.framework.protobuf.ByteString) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        com.android.framework.protobuf.ByteString r1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: com.android.framework.protobuf.ByteString;

        virtualinvoke r1.<com.android.framework.protobuf.ByteString: void writeTo(com.android.framework.protobuf.ByteOutput)>(r0);

        return;
    }

    public abstract void writeRawBytes(java.nio.ByteBuffer) throws java.io.IOException;

    public final void writeRawBytes(byte[]) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public final void writeRawBytes(byte[], int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public final void writeRawLittleEndian32(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>(i0);

        return;
    }

    public final void writeRawLittleEndian64(long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>(l0);

        return;
    }

    public abstract void writeRawMessageSetExtension(int, com.android.framework.protobuf.ByteString) throws java.io.IOException;

    public final void writeRawVarint32(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>(i0);

        return;
    }

    public final void writeRawVarint64(long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>(l0);

        return;
    }

    public final void writeSFixed32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed32(int,int)>(i0, i1);

        return;
    }

    public final void writeSFixed32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>(i0);

        return;
    }

    public final void writeSFixed64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed64(int,long)>(i0, l1);

        return;
    }

    public final void writeSFixed64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>(l0);

        return;
    }

    public final void writeSInt32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0, i1, $i2;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i1);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt32(int,int)>(i0, $i2);

        return;
    }

    public final void writeSInt32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0, $i1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: int encodeZigZag32(int)>(i0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeSInt64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        int i0;
        long l1, $l2;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l2 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l1);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt64(int,long)>(i0, $l2);

        return;
    }

    public final void writeSInt64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.CodedOutputStream r0;
        long l0, $l1;

        r0 := @this: com.android.framework.protobuf.CodedOutputStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.android.framework.protobuf.CodedOutputStream: long encodeZigZag64(long)>(l0);

        virtualinvoke r0.<com.android.framework.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public abstract void writeString(int, java.lang.String) throws java.io.IOException;

    public abstract void writeStringNoTag(java.lang.String) throws java.io.IOException;

    public abstract void writeTag(int, int) throws java.io.IOException;

    public abstract void writeUInt32(int, int) throws java.io.IOException;

    public abstract void writeUInt32NoTag(int) throws java.io.IOException;

    public abstract void writeUInt64(int, long) throws java.io.IOException;

    public abstract void writeUInt64NoTag(long) throws java.io.IOException;
}
