abstract class com.android.framework.protobuf.Utf8$Processor extends java.lang.Object
{

    void <init>()
    {
        com.android.framework.protobuf.Utf8$Processor r0;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int partialIsValidUtf8(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i13, $i14, i16, i17, i18, i20, i22, i24;
        byte $b7, $b8, $b12, $b15, b19, b21, b23;

        r0 := @parameter0: java.nio.ByteBuffer;

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = staticinvoke <com.android.framework.protobuf.Utf8: int access$200(java.nio.ByteBuffer,int,int)>(r0, i16, i0);

        i17 = i16 + $i1;

     label01:
        if i17 < i0 goto label02;

        return 0;

     label02:
        i18 = i17 + 1;

        b19 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i17);

        if b19 >= 0 goto label16;

        if b19 >= -32 goto label06;

        if i18 < i0 goto label03;

        return b19;

     label03:
        if b19 < -62 goto label05;

        $b15 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i18);

        if $b15 <= -65 goto label04;

        goto label05;

     label04:
        i17 = i18 + 1;

        goto label14;

     label05:
        return -1;

     label06:
        if b19 >= -16 goto label12;

        $i11 = i0 - 1;

        if i18 < $i11 goto label07;

        $i13 = i0 - i18;

        $i14 = staticinvoke <com.android.framework.protobuf.Utf8: int access$300(java.nio.ByteBuffer,int,int,int)>(r0, b19, i18, $i13);

        return $i14;

     label07:
        i20 = i18 + 1;

        b21 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i18);

        if b21 > -65 goto label11;

        if b19 != -32 goto label08;

        if b21 < -96 goto label11;

     label08:
        if b19 != -19 goto label09;

        if b21 >= -96 goto label11;

     label09:
        $b12 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i20);

        if $b12 <= -65 goto label10;

        goto label11;

     label10:
        i17 = i20 + 1;

        goto label14;

     label11:
        return -1;

     label12:
        $i2 = i0 - 2;

        if i18 < $i2 goto label13;

        $i9 = i0 - i18;

        $i10 = staticinvoke <com.android.framework.protobuf.Utf8: int access$300(java.nio.ByteBuffer,int,int,int)>(r0, b19, i18, $i9);

        return $i10;

     label13:
        i22 = i18 + 1;

        b23 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i18);

        if b23 > -65 goto label15;

        $i4 = b19 << 28;

        $i3 = b23 + 112;

        $i5 = $i4 + $i3;

        $i6 = $i5 >> 30;

        if $i6 != 0 goto label15;

        i24 = i22 + 1;

        $b7 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i22);

        if $b7 > -65 goto label15;

        i17 = i24 + 1;

        $b8 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i24);

        if $b8 <= -65 goto label14;

        goto label15;

     label14:
        goto label01;

     label15:
        return -1;

     label16:
        i17 = i18;

        goto label01;
    }

    final java.lang.String decodeUtf8(java.nio.ByteBuffer, int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.nio.ByteBuffer r1;
        int i0, i1, i2, $i3;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r5;
        byte[] $r4;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i2 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $r4 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $i3 = i2 + i0;

        $r5 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: java.lang.String decodeUtf8(byte[],int,int)>($r4, $i3, i1);

        return $r5;

     label1:
        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: java.lang.String decodeUtf8Direct(java.nio.ByteBuffer,int,int)>(r1, i0, i1);

        return $r3;

     label2:
        $r2 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: java.lang.String decodeUtf8Default(java.nio.ByteBuffer,int,int)>(r1, i0, i1);

        return $r2;
    }

    abstract java.lang.String decodeUtf8(byte[], int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException;

    final java.lang.String decodeUtf8Default(java.nio.ByteBuffer, int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.nio.ByteBuffer r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, i16, i17, i18, i20, i22, i23, i26, i27, i28;
        char[] r2;
        byte b1, $b9, $b10, $b13, $b14, $b15, b19, b21, b24;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6, $r7;
        java.lang.String $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.framework.protobuf.InvalidProtocolBufferException $r10, $r11, $r12;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: java.nio.ByteBuffer;

        i16 := @parameter1: int;

        i17 := @parameter2: int;

        $i2 = i16 | i17;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i4 = $i3 - i16;

        $i5 = $i4 - i17;

        $i6 = $i2 | $i5;

        if $i6 < 0 goto label15;

        i0 = i16 + i17;

        r2 = newarray (char)[i17];

        i18 = 0;

     label01:
        if i16 >= i0 goto label03;

        b19 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        $z4 = staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: boolean access$400(byte)>(b19);

        if $z4 != 0 goto label02;

        goto label03;

     label02:
        i16 = i16 + 1;

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$500(byte,char[],int)>(b19, r2, i18);

        i18 = i18 + 1;

        goto label01;

     label03:
        if i16 >= i0 goto label14;

        i20 = i16 + 1;

        b21 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        $z0 = staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: boolean access$400(byte)>(b21);

        if $z0 == 0 goto label07;

        i22 = i18 + 1;

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$500(byte,char[],int)>(b21, r2, i18);

        i23 = i20;

     label04:
        if i23 >= i0 goto label06;

        b24 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i23);

        $z3 = staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: boolean access$400(byte)>(b24);

        if $z3 != 0 goto label05;

        goto label06;

     label05:
        i23 = i23 + 1;

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$500(byte,char[],int)>(b24, r2, i22);

        i22 = i22 + 1;

        goto label04;

     label06:
        i16 = i23;

        i18 = i22;

        goto label12;

     label07:
        $z1 = staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: boolean access$600(byte)>(b21);

        if $z1 == 0 goto label09;

        if i20 >= i0 goto label08;

        $b15 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i20);

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$700(byte,byte,char[],int)>(b21, $b15, r2, i18);

        i16 = i20 + 1;

        i18 = i18 + 1;

        goto label12;

     label08:
        $r12 = staticinvoke <com.android.framework.protobuf.InvalidProtocolBufferException: com.android.framework.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        throw $r12;

     label09:
        $z2 = staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: boolean access$800(byte)>(b21);

        if $z2 == 0 goto label11;

        $i12 = i0 - 1;

        if i20 >= $i12 goto label10;

        i26 = i20 + 1;

        $b13 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i20);

        $b14 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i26);

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$900(byte,byte,byte,char[],int)>(b21, $b13, $b14, r2, i18);

        i16 = i26 + 1;

        i18 = i18 + 1;

        goto label12;

     label10:
        $r11 = staticinvoke <com.android.framework.protobuf.InvalidProtocolBufferException: com.android.framework.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        throw $r11;

     label11:
        $i8 = i0 - 2;

        if i20 >= $i8 goto label13;

        i27 = i20 + 1;

        b1 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i20);

        i28 = i27 + 1;

        $b9 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i27);

        $b10 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i28);

        staticinvoke <com.android.framework.protobuf.Utf8$DecodeUtil: void access$1000(byte,byte,byte,byte,char[],int)>(b21, b1, $b9, $b10, r2, i18);

        i16 = i28 + 1;

        $i11 = i18 + 1;

        i18 = $i11 + 1;

     label12:
        goto label03;

     label13:
        $r10 = staticinvoke <com.android.framework.protobuf.InvalidProtocolBufferException: com.android.framework.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        throw $r10;

     label14:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i18);

        return $r9;

     label15:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        $r4 = newarray (java.lang.Object)[3];

        $i7 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);

        $r4[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("buffer limit=%d, index=%d, limit=%d", $r4);

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    abstract java.lang.String decodeUtf8Direct(java.nio.ByteBuffer, int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException;

    abstract int encodeUtf8(java.lang.CharSequence, byte[], int, int);

    final void encodeUtf8(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.lang.CharSequence r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        byte[] $r3;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.nio.ByteBuffer;

        $z0 = virtualinvoke r2.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r2.<java.nio.ByteBuffer: int arrayOffset()>();

        $r3 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        $i2 = $i1 + i0;

        $i3 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $i4 = staticinvoke <com.android.framework.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>(r1, $r3, $i2, $i3);

        $i5 = $i4 - i0;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        goto label3;

     label1:
        $z1 = virtualinvoke r2.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: void encodeUtf8Direct(java.lang.CharSequence,java.nio.ByteBuffer)>(r1, r2);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: void encodeUtf8Default(java.lang.CharSequence,java.nio.ByteBuffer)>(r1, r2);

     label3:
        return;
    }

    final void encodeUtf8Default(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.lang.CharSequence r1;
        int i0, i3, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i30, $i32, i33, i34, i35, i36, i38, i39, i41, i42, i43, i45, i46, i48, i50, i53, $i54, $i55, $i56, i57, $i59;
        char c1, c2, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c24, $c25, $c26, $c27, c37, $c58;
        byte $b11, $b23, $b28, $b29, $b31, b40, b44, b47, b49, b51, b52;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r15, $r20, $r21;
        java.nio.ByteBuffer r22;
        com.android.framework.protobuf.Utf8$UnpairedSurrogateException r26;
        java.lang.StringBuilder $r27;
        java.lang.ArrayIndexOutOfBoundsException $r29;
        java.lang.String $r30;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: java.lang.CharSequence;

        r22 := @parameter1: java.nio.ByteBuffer;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i33 = virtualinvoke r22.<java.nio.ByteBuffer: int position()>();

        i34 = 0;

     label01:
        if i34 >= i0 goto label07;

        i35 = i33;

        i36 = i34;

     label02:
        c37 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i34);

     label03:
        if c37 >= 128 goto label07;

        i35 = i33;

        i36 = i34;

     label04:
        $i32 = i33 + i34;

        $b31 = (byte) c37;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($i32, $b31);

     label05:
        i34 = i34 + 1;

        goto label01;

     label06:
        $r20 := @caughtexception;

        i34 = i36;

        goto label55;

     label07:
        if i34 != i0 goto label10;

        i35 = i33;

        i36 = i34;

     label08:
        $i30 = i33 + i34;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i30);

     label09:
        return;

     label10:
        i38 = i33 + i34;

     label11:
        if i34 >= i0 goto label52;

        i35 = i38;

        i36 = i34;

     label12:
        c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i34);

     label13:
        if c1 >= 128 goto label16;

        i35 = i38;

        i36 = i34;

     label14:
        $b29 = (byte) c1;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i38, $b29);

     label15:
        goto label51;

     label16:
        if c1 >= 2048 goto label22;

        i39 = i38 + 1;

        $c24 = c1 >>> 6;

        $c25 = $c24 | 192;

        b40 = (byte) $c25;

        i41 = i39;

     label17:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i38, b40);

     label18:
        i41 = i39;

     label19:
        $c26 = c1 & 63;

        $c27 = $c26 | 128;

        $b28 = (byte) $c27;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i39, $b28);

     label20:
        i38 = i39;

        goto label51;

     label21:
        $r21 := @caughtexception;

        i35 = i41;

        goto label55;

     label22:
        if c1 < 55296 goto label45;

        if 57343 >= c1 goto label23;

        goto label45;

     label23:
        i42 = i34;

        $i12 = i34 + 1;

        if $i12 == i0 goto label39;

        i34 = i34 + 1;

        i35 = i38;

        i36 = i34;

     label24:
        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i34);

     label25:
        i35 = i38;

        i36 = i34;

        i42 = i34;

     label26:
        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>(c1, c2);

        if $z0 == 0 goto label39;

     label27:
        i35 = i38;

        i36 = i34;

     label28:
        i3 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>(c1, c2);

     label29:
        i43 = i38 + 1;

        $i13 = i3 >>> 18;

        $i14 = $i13 | 240;

        b44 = (byte) $i14;

        i45 = i43;

     label30:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i38, b44);

     label31:
        i46 = i43 + 1;

        $i15 = i3 >>> 12;

        $i16 = $i15 & 63;

        $i17 = $i16 | 128;

        b47 = (byte) $i17;

        i35 = i46;

        i36 = i34;

     label32:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i43, b47);

     label33:
        i48 = i46 + 1;

        $i18 = i3 >>> 6;

        $i19 = $i18 & 63;

        $i20 = $i19 | 128;

        b49 = (byte) $i20;

        i45 = i48;

     label34:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i46, b49);

     label35:
        i45 = i48;

     label36:
        $i21 = i3 & 63;

        $i22 = $i21 | 128;

        $b23 = (byte) $i22;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i48, $b23);

     label37:
        i38 = i48;

        goto label51;

     label38:
        $r15 := @caughtexception;

        i35 = i45;

        goto label55;

     label39:
        i35 = i38;

        i36 = i42;

     label40:
        r26 = new com.android.framework.protobuf.Utf8$UnpairedSurrogateException;

     label41:
        i35 = i38;

        i36 = i42;

     label42:
        specialinvoke r26.<com.android.framework.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>(i42, i0);

     label43:
        i35 = i38;

        i36 = i42;

     label44:
        throw r26;

     label45:
        i50 = i38 + 1;

        $c4 = c1 >>> 12;

        $c5 = $c4 | 224;

        b51 = (byte) $c5;

        i41 = i50;

     label46:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i38, b51);

     label47:
        i38 = i50 + 1;

        $c6 = c1 >>> 6;

        $c7 = $c6 & 63;

        $c8 = $c7 | 128;

        b52 = (byte) $c8;

        i35 = i38;

        i36 = i34;

     label48:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i50, b52);

     label49:
        i35 = i38;

        i36 = i34;

     label50:
        $c9 = c1 & 63;

        $c10 = $c9 | 128;

        $b11 = (byte) $c10;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i38, $b11);

     label51:
        i34 = i34 + 1;

        i38 = i38 + 1;

        goto label11;

     label52:
        i35 = i38;

        i36 = i34;

     label53:
        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i38);

     label54:
        return;

     label55:
        i53 = virtualinvoke r22.<java.nio.ByteBuffer: int position()>();

        $i54 = virtualinvoke r22.<java.nio.ByteBuffer: int position()>();

        $i55 = i35 - $i54;

        $i56 = $i55 + 1;

        i57 = staticinvoke <java.lang.Math: int max(int,int)>(i34, $i56);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        $c58 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i34);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c58);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $i59 = i53 + i57;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        $r29 = new java.lang.ArrayIndexOutOfBoundsException;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r30);

        throw $r29;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label06;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label08 to label09 with label06;
        catch java.lang.IndexOutOfBoundsException from label12 to label13 with label06;
        catch java.lang.IndexOutOfBoundsException from label14 to label15 with label06;
        catch java.lang.IndexOutOfBoundsException from label17 to label18 with label21;
        catch java.lang.IndexOutOfBoundsException from label19 to label20 with label21;
        catch java.lang.IndexOutOfBoundsException from label24 to label25 with label06;
        catch java.lang.IndexOutOfBoundsException from label26 to label27 with label06;
        catch java.lang.IndexOutOfBoundsException from label28 to label29 with label06;
        catch java.lang.IndexOutOfBoundsException from label30 to label31 with label38;
        catch java.lang.IndexOutOfBoundsException from label32 to label33 with label06;
        catch java.lang.IndexOutOfBoundsException from label34 to label35 with label38;
        catch java.lang.IndexOutOfBoundsException from label36 to label37 with label38;
        catch java.lang.IndexOutOfBoundsException from label40 to label41 with label06;
        catch java.lang.IndexOutOfBoundsException from label42 to label43 with label06;
        catch java.lang.IndexOutOfBoundsException from label44 to label45 with label06;
        catch java.lang.IndexOutOfBoundsException from label46 to label47 with label21;
        catch java.lang.IndexOutOfBoundsException from label48 to label49 with label06;
        catch java.lang.IndexOutOfBoundsException from label50 to label51 with label06;
        catch java.lang.IndexOutOfBoundsException from label53 to label54 with label06;
    }

    abstract void encodeUtf8Direct(java.lang.CharSequence, java.nio.ByteBuffer);

    final boolean isValidUtf8(java.nio.ByteBuffer, int, int)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 = 0;

        $i2 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(int,java.nio.ByteBuffer,int,int)>(0, r1, i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    final boolean isValidUtf8(byte[], int, int)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        byte[] r1;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 = 0;

        $i2 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(int,byte[],int,int)>(0, r1, i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    final int partialIsValidUtf8(int, java.nio.ByteBuffer, int, int)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.nio.ByteBuffer r1;
        boolean $z0, $z1;
        byte[] $r2;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.ByteBuffer;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i3 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $i7 = i3 + i1;

        $i6 = i3 + i2;

        $i8 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(int,byte[],int,int)>(i0, $r2, $i7, $i6);

        return $i8;

     label1:
        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label2;

        $i5 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8Direct(int,java.nio.ByteBuffer,int,int)>(i0, r1, i1, i2);

        return $i5;

     label2:
        $i4 = virtualinvoke r0.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8Default(int,java.nio.ByteBuffer,int,int)>(i0, r1, i1, i2);

        return $i4;
    }

    abstract int partialIsValidUtf8(int, byte[], int, int);

    final int partialIsValidUtf8Default(int, java.nio.ByteBuffer, int, int)
    {
        com.android.framework.protobuf.Utf8$Processor r0;
        java.nio.ByteBuffer r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, i15, i16, i17, i20, i23, i26, $i27;
        byte b1, $b8, $b12, $b14, b18, b19, b21, b24, b25;

        r0 := @this: com.android.framework.protobuf.Utf8$Processor;

        i15 := @parameter0: int;

        r1 := @parameter1: java.nio.ByteBuffer;

        i16 := @parameter2: int;

        i0 := @parameter3: int;

        i17 = i16;

        if i15 == 0 goto label17;

        if i16 < i0 goto label01;

        return i15;

     label01:
        b1 = (byte) i15;

        if b1 >= -32 goto label04;

        if b1 < -62 goto label03;

        $b14 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        if $b14 <= -65 goto label02;

        goto label03;

     label02:
        i17 = i16 + 1;

        goto label17;

     label03:
        return -1;

     label04:
        if b1 >= -16 goto label10;

        $i11 = i15 >> 8;

        b18 = (byte) $i11;

        b19 = b18;

        i20 = i16;

        if b18 != 0 goto label05;

        i20 = i16 + 1;

        b19 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        if i20 < i0 goto label05;

        $i13 = staticinvoke <com.android.framework.protobuf.Utf8: int access$000(int,int)>(b1, b19);

        return $i13;

     label05:
        if b19 > -65 goto label09;

        if b1 != -32 goto label06;

        if b19 < -96 goto label09;

     label06:
        if b1 != -19 goto label07;

        if b19 >= -96 goto label09;

     label07:
        $b12 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i20);

        if $b12 <= -65 goto label08;

        goto label09;

     label08:
        i17 = i20 + 1;

        goto label17;

     label09:
        return -1;

     label10:
        $i2 = i15 >> 8;

        b21 = (byte) $i2;

        if b21 != 0 goto label12;

        i23 = i16 + 1;

        b21 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        if i23 < i0 goto label11;

        $i10 = staticinvoke <com.android.framework.protobuf.Utf8: int access$000(int,int)>(b1, b21);

        return $i10;

     label11:
        i16 = i23;

        b24 = 0;

        goto label13;

     label12:
        $i3 = i15 >> 16;

        b24 = (byte) $i3;

     label13:
        b25 = b24;

        i26 = i16;

        if b24 != 0 goto label14;

        i26 = i16 + 1;

        b25 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i16);

        if i26 < i0 goto label14;

        $i9 = staticinvoke <com.android.framework.protobuf.Utf8: int access$100(int,int,int)>(b1, b21, b25);

        return $i9;

     label14:
        if b21 > -65 goto label16;

        $i5 = b1 << 28;

        $i4 = b21 + 112;

        $i6 = $i5 + $i4;

        $i7 = $i6 >> 30;

        if $i7 != 0 goto label16;

        if b25 > -65 goto label16;

        $b8 = virtualinvoke r1.<java.nio.ByteBuffer: byte get(int)>(i26);

        if $b8 <= -65 goto label15;

        goto label16;

     label15:
        i17 = i26 + 1;

        goto label17;

     label16:
        return -1;

     label17:
        $i27 = staticinvoke <com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(java.nio.ByteBuffer,int,int)>(r1, i17, i0);

        return $i27;
    }

    abstract int partialIsValidUtf8Direct(int, java.nio.ByteBuffer, int, int);
}
