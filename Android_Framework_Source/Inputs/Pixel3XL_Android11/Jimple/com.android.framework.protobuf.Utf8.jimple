final class com.android.framework.protobuf.Utf8 extends java.lang.Object
{
    private static final long ASCII_MASK_LONG;
    public static final int COMPLETE;
    public static final int MALFORMED;
    static final int MAX_BYTES_PER_CHAR;
    private static final int UNSAFE_COUNT_ASCII_THRESHOLD;
    private static final com.android.framework.protobuf.Utf8$Processor processor;

    static void <clinit>()
    {
        boolean $z0, $z1;
        com.android.framework.protobuf.Utf8$SafeProcessor $r0;
        com.android.framework.protobuf.Utf8$UnsafeProcessor $r1;
        com.android.framework.protobuf.Utf8$Processor r2;

        <com.android.framework.protobuf.Utf8: int UNSAFE_COUNT_ASCII_THRESHOLD> = 16;

        <com.android.framework.protobuf.Utf8: int MAX_BYTES_PER_CHAR> = 3;

        <com.android.framework.protobuf.Utf8: int MALFORMED> = -1;

        <com.android.framework.protobuf.Utf8: int COMPLETE> = 0;

        <com.android.framework.protobuf.Utf8: long ASCII_MASK_LONG> = -9187201950435737472L;

        $z0 = staticinvoke <com.android.framework.protobuf.Utf8$UnsafeProcessor: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.framework.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z1 != 0 goto label1;

        $r1 = new com.android.framework.protobuf.Utf8$UnsafeProcessor;

        specialinvoke $r1.<com.android.framework.protobuf.Utf8$UnsafeProcessor: void <init>()>();

        r2 = $r1;

        goto label2;

     label1:
        $r0 = new com.android.framework.protobuf.Utf8$SafeProcessor;

        specialinvoke $r0.<com.android.framework.protobuf.Utf8$SafeProcessor: void <init>()>();

        r2 = $r0;

     label2:
        <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor> = r2;

        return;
    }

    private void <init>()
    {
        com.android.framework.protobuf.Utf8 r0;

        r0 := @this: com.android.framework.protobuf.Utf8;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int access$000(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int)>(i0, i1);

        return $i2;
    }

    static int access$100(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int,int)>(i0, i1, i2);

        return $i3;
    }

    static int access$1100(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(byte[],int,int)>(r0, i0, i1);

        return $i2;
    }

    static int access$1200(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int)>(i0);

        return $i1;
    }

    static int access$200(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, $i2;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.android.framework.protobuf.Utf8: int estimateConsecutiveAscii(java.nio.ByteBuffer,int,int)>(r0, i0, i1);

        return $i2;
    }

    static int access$300(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(java.nio.ByteBuffer,int,int,int)>(r0, i0, i1, i2);

        return $i3;
    }

    static java.lang.String decodeUtf8(java.nio.ByteBuffer, int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException
    {
        java.nio.ByteBuffer r0;
        int i0, i1;
        com.android.framework.protobuf.Utf8$Processor $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $r2 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)>(r0, i0, i1);

        return $r2;
    }

    static java.lang.String decodeUtf8(byte[], int, int) throws com.android.framework.protobuf.InvalidProtocolBufferException
    {
        byte[] r0;
        int i0, i1;
        com.android.framework.protobuf.Utf8$Processor $r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $r2 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: java.lang.String decodeUtf8(byte[],int,int)>(r0, i0, i1);

        return $r2;
    }

    static int encode(java.lang.CharSequence, byte[], int, int)
    {
        java.lang.CharSequence r0;
        byte[] r1;
        int i0, i1, $i2;
        com.android.framework.protobuf.Utf8$Processor $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $i2 = virtualinvoke $r2.<com.android.framework.protobuf.Utf8$Processor: int encodeUtf8(java.lang.CharSequence,byte[],int,int)>(r0, r1, i0, i1);

        return $i2;
    }

    static void encodeUtf8(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        java.lang.CharSequence r0;
        java.nio.ByteBuffer r1;
        com.android.framework.protobuf.Utf8$Processor $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.nio.ByteBuffer;

        $r2 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        virtualinvoke $r2.<com.android.framework.protobuf.Utf8$Processor: void encodeUtf8(java.lang.CharSequence,java.nio.ByteBuffer)>(r0, r1);

        return;
    }

    static int encodedLength(java.lang.CharSequence)
    {
        int i0, $i4, $i5, $i6, i8, i9, i10, i11;
        java.lang.StringBuilder $r0;
        long $l2, $l3;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        char $c7, c12;
        java.lang.CharSequence r5;

        r5 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        i8 = 0;

     label1:
        i9 = i0;

        i10 = i8;

        if i8 >= i0 goto label2;

        i9 = i0;

        i10 = i8;

        $c7 = interfaceinvoke r5.<java.lang.CharSequence: char charAt(int)>(i8);

        if $c7 >= 128 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        i11 = i9;

        if i10 >= i0 goto label4;

        c12 = interfaceinvoke r5.<java.lang.CharSequence: char charAt(int)>(i10);

        if c12 >= 2048 goto label3;

        $i5 = 127 - c12;

        $i6 = $i5 >>> 31;

        i9 = i9 + $i6;

        i10 = i10 + 1;

        goto label2;

     label3:
        $i4 = staticinvoke <com.android.framework.protobuf.Utf8: int encodedLengthGeneral(java.lang.CharSequence,int)>(r5, i10);

        i11 = i9 + $i4;

     label4:
        if i11 < i0 goto label5;

        return i11;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        $l2 = (long) i11;

        $l3 = $l2 + 4294967296L;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static int encodedLengthGeneral(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0, i2, $i3, $i4, $i5, i6, i7, i8;
        char c1;
        com.android.framework.protobuf.Utf8$UnpairedSurrogateException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i6 := @parameter1: int;

        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i7 = 0;

     label1:
        if i6 >= i0 goto label5;

        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i6);

        if c1 >= 2048 goto label2;

        $i4 = 127 - c1;

        $i5 = $i4 >>> 31;

        i7 = i7 + $i5;

        i8 = i6;

        goto label4;

     label2:
        i2 = i7 + 2;

        i7 = i2;

        i8 = i6;

        if 55296 > c1 goto label4;

        i7 = i2;

        i8 = i6;

        if c1 > 57343 goto label4;

        $i3 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i6);

        if $i3 < 65536 goto label3;

        i8 = i6 + 1;

        i7 = i2;

        goto label4;

     label3:
        $r1 = new com.android.framework.protobuf.Utf8$UnpairedSurrogateException;

        specialinvoke $r1.<com.android.framework.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>(i6, i0);

        throw $r1;

     label4:
        i6 = i8 + 1;

        goto label1;

     label5:
        return i7;
    }

    private static int estimateConsecutiveAscii(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, $i2, $i3, i7;
        long $l4, $l5;
        byte $b6;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i7 = i0;

     label1:
        $i2 = i1 - 7;

        if i7 >= $i2 goto label2;

        $l4 = virtualinvoke r0.<java.nio.ByteBuffer: long getLong(int)>(i7);

        $l5 = $l4 & -9187201950435737472L;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label2;

        i7 = i7 + 8;

        goto label1;

     label2:
        $i3 = i7 - i0;

        return $i3;
    }

    private static int incompleteStateFor(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 <= -12 goto label1;

        i0 = -1;

        goto label1;

     label1:
        return i0;
    }

    private static int incompleteStateFor(int, int)
    {
        int i0, $i1, i2, i3;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i2 > -12 goto label2;

        if i0 <= -65 goto label1;

        goto label2;

     label1:
        $i1 = i0 << 8;

        i3 = $i1 ^ i2;

        goto label3;

     label2:
        i3 = -1;

     label3:
        return i3;
    }

    private static int incompleteStateFor(int, int, int)
    {
        int i0, i1, $i2, $i3, $i4, i5, i6;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i5 > -12 goto label2;

        if i0 > -65 goto label2;

        if i1 <= -65 goto label1;

        goto label2;

     label1:
        $i2 = i0 << 8;

        $i4 = $i2 ^ i5;

        $i3 = i1 << 16;

        i6 = $i4 ^ $i3;

        goto label3;

     label2:
        i6 = -1;

     label3:
        return i6;
    }

    private static int incompleteStateFor(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3, $i5, $i7, $i9;
        byte $b4, $b6, $b8;
        java.lang.AssertionError $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 == 0 goto label3;

        if i2 == 1 goto label2;

        if i2 != 2 goto label1;

        $b6 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i1);

        $i7 = i1 + 1;

        $b8 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>($i7);

        $i9 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int,int)>(i0, $b6, $b8);

        return $i9;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i1);

        $i5 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int)>(i0, $b4);

        return $i5;

     label3:
        $i3 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int)>(i0);

        return $i3;
    }

    private static int incompleteStateFor(byte[], int, int)
    {
        byte[] r0;
        int i0, $i2, $i3, $i5, $i6, $i9, i10, i11;
        byte b1, $b4, $b7, $b8;
        java.lang.AssertionError $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i10 := @parameter2: int;

        $i2 = i0 - 1;

        b1 = r0[$i2];

        i11 = i10 - i0;

        if i11 == 0 goto label3;

        if i11 == 1 goto label2;

        if i11 != 2 goto label1;

        $b8 = r0[i0];

        $i6 = i0 + 1;

        $b7 = r0[$i6];

        $i9 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int,int)>(b1, $b8, $b7);

        return $i9;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $b4 = r0[i0];

        $i5 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int,int)>(b1, $b4);

        return $i5;

     label3:
        $i3 = staticinvoke <com.android.framework.protobuf.Utf8: int incompleteStateFor(int)>(b1);

        return $i3;
    }

    static boolean isValidUtf8(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        com.android.framework.protobuf.Utf8$Processor $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $z0 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: boolean isValidUtf8(java.nio.ByteBuffer,int,int)>(r0, $i0, $i1);

        return $z0;
    }

    public static boolean isValidUtf8(byte[])
    {
        byte[] r0;
        int $i0;
        com.android.framework.protobuf.Utf8$Processor $r1;
        boolean $z0;

        r0 := @parameter0: byte[];

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $i0 = lengthof r0;

        $z0 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: boolean isValidUtf8(byte[],int,int)>(r0, 0, $i0);

        return $z0;
    }

    public static boolean isValidUtf8(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.android.framework.protobuf.Utf8$Processor $r1;
        boolean $z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $z0 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: boolean isValidUtf8(byte[],int,int)>(r0, i0, i1);

        return $z0;
    }

    static int partialIsValidUtf8(int, java.nio.ByteBuffer, int, int)
    {
        int i0, i1, i2, $i3;
        java.nio.ByteBuffer r0;
        com.android.framework.protobuf.Utf8$Processor $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteBuffer;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $i3 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(int,java.nio.ByteBuffer,int,int)>(i0, r0, i1, i2);

        return $i3;
    }

    public static int partialIsValidUtf8(int, byte[], int, int)
    {
        int i0, i1, i2, $i3;
        byte[] r0;
        com.android.framework.protobuf.Utf8$Processor $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = <com.android.framework.protobuf.Utf8: com.android.framework.protobuf.Utf8$Processor processor>;

        $i3 = virtualinvoke $r1.<com.android.framework.protobuf.Utf8$Processor: int partialIsValidUtf8(int,byte[],int,int)>(i0, r0, i1, i2);

        return $i3;
    }
}
