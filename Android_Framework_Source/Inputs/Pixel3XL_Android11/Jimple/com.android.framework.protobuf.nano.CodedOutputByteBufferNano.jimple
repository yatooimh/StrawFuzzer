public final class com.android.framework.protobuf.nano.CodedOutputByteBufferNano extends java.lang.Object
{
    public static final int LITTLE_ENDIAN_32_SIZE;
    public static final int LITTLE_ENDIAN_64_SIZE;
    private static final int MAX_UTF8_EXPANSION;
    private final java.nio.ByteBuffer buffer;

    private void <init>(java.nio.ByteBuffer)
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        java.nio.ByteBuffer r1;
        java.nio.ByteOrder $r2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer> = r1;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        return;
    }

    private void <init>(byte[], int, int)
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        byte[] r1;
        int i0, i1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r1, i0, i1);

        specialinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void <init>(java.nio.ByteBuffer)>($r2);

        return;
    }

    public static int computeBoolSize(int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeBoolSizeNoTag(boolean)>(z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeBytesSize(int, byte[])
    {
        int i0, $i1, $i2, $i3;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeBytesSizeNoTag(byte[])>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSizeNoTag(byte[])
    {
        byte[] r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>($i0);

        $i2 = lengthof r0;

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSize(int, double)
    {
        int i0, $i1, $i2, $i3;
        double d0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeDoubleSizeNoTag(double)>(d0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double d0;

        d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeEnumSizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i0);

        return $i1;
    }

    static int computeFieldSize(int, int, java.lang.Object)
    {
        int i0, i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i28, $i29, $i30;
        java.lang.Long $r0, $r2, $r12, $r14, $r15;
        long $l2, $l6, $l21, $l25, $l27;
        java.lang.Integer $r1, $r3, $r4, $r5, $r11, $r13;
        byte[] $r6;
        com.android.framework.protobuf.nano.MessageNano $r7, $r8;
        java.lang.String $r9, $r22;
        java.lang.Boolean $r10;
        boolean $z0;
        java.lang.Float $r16;
        float $f0;
        java.lang.Double $r17;
        double $d0;
        java.lang.StringBuilder $r18;
        java.lang.IllegalArgumentException $r21;
        java.lang.Object r23;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r23 := @parameter2: java.lang.Object;

        tableswitch(i1)
        {
            case 1: goto label19;
            case 2: goto label18;
            case 3: goto label17;
            case 4: goto label16;
            case 5: goto label15;
            case 6: goto label14;
            case 7: goto label13;
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label10;
            case 11: goto label09;
            case 12: goto label08;
            case 13: goto label07;
            case 14: goto label06;
            case 15: goto label05;
            case 16: goto label04;
            case 17: goto label03;
            case 18: goto label02;
            default: goto label01;
        };

     label01:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label02:
        $r0 = (java.lang.Long) r23;

        $l2 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSInt64Size(int,long)>(i0, $l2);

        return $i3;

     label03:
        $r1 = (java.lang.Integer) r23;

        $i4 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $i5 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSInt32Size(int,int)>(i0, $i4);

        return $i5;

     label04:
        $r2 = (java.lang.Long) r23;

        $l6 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $i7 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSFixed64Size(int,long)>(i0, $l6);

        return $i7;

     label05:
        $r3 = (java.lang.Integer) r23;

        $i8 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i9 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSFixed32Size(int,int)>(i0, $i8);

        return $i9;

     label06:
        $r4 = (java.lang.Integer) r23;

        $i10 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i11 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeEnumSize(int,int)>(i0, $i10);

        return $i11;

     label07:
        $r5 = (java.lang.Integer) r23;

        $i12 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i13 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeUInt32Size(int,int)>(i0, $i12);

        return $i13;

     label08:
        $r6 = (byte[]) r23;

        $i14 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeBytesSize(int,byte[])>(i0, $r6);

        return $i14;

     label09:
        $r7 = (com.android.framework.protobuf.nano.MessageNano) r23;

        $i15 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeMessageSize(int,com.android.framework.protobuf.nano.MessageNano)>(i0, $r7);

        return $i15;

     label10:
        $r8 = (com.android.framework.protobuf.nano.MessageNano) r23;

        $i16 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeGroupSize(int,com.android.framework.protobuf.nano.MessageNano)>(i0, $r8);

        return $i16;

     label11:
        $r9 = (java.lang.String) r23;

        $i17 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeStringSize(int,java.lang.String)>(i0, $r9);

        return $i17;

     label12:
        $r10 = (java.lang.Boolean) r23;

        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        $i18 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeBoolSize(int,boolean)>(i0, $z0);

        return $i18;

     label13:
        $r11 = (java.lang.Integer) r23;

        $i19 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i20 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFixed32Size(int,int)>(i0, $i19);

        return $i20;

     label14:
        $r12 = (java.lang.Long) r23;

        $l21 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $i22 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFixed64Size(int,long)>(i0, $l21);

        return $i22;

     label15:
        $r13 = (java.lang.Integer) r23;

        $i23 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i24 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeInt32Size(int,int)>(i0, $i23);

        return $i24;

     label16:
        $r14 = (java.lang.Long) r23;

        $l25 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $i26 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeUInt64Size(int,long)>(i0, $l25);

        return $i26;

     label17:
        $r15 = (java.lang.Long) r23;

        $l27 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        $i28 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeInt64Size(int,long)>(i0, $l27);

        return $i28;

     label18:
        $r16 = (java.lang.Float) r23;

        $f0 = virtualinvoke $r16.<java.lang.Float: float floatValue()>();

        $i29 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFloatSize(int,float)>(i0, $f0);

        return $i29;

     label19:
        $r17 = (java.lang.Double) r23;

        $d0 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $i30 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeDoubleSize(int,double)>(i0, $d0);

        return $i30;
    }

    public static int computeFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int i0, $i1, $i2, $i3;
        float f0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeFloatSizeNoTag(float)>(f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float f0;

        f0 := @parameter0: float;

        return 4;
    }

    public static int computeGroupSize(int, com.android.framework.protobuf.nano.MessageNano)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.android.framework.protobuf.nano.MessageNano r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.nano.MessageNano;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeGroupSizeNoTag(com.android.framework.protobuf.nano.MessageNano)>(r0);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeGroupSizeNoTag(com.android.framework.protobuf.nano.MessageNano)
    {
        com.android.framework.protobuf.nano.MessageNano r0;
        int $i0;

        r0 := @parameter0: com.android.framework.protobuf.nano.MessageNano;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.nano.MessageNano: int getSerializedSize()>();

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i0);

        return $i1;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint64Size(long)>(l0);

        return $i1;
    }

    public static int computeMessageSize(int, com.android.framework.protobuf.nano.MessageNano)
    {
        int i0, $i1, $i2, $i3;
        com.android.framework.protobuf.nano.MessageNano r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.framework.protobuf.nano.MessageNano;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeMessageSizeNoTag(com.android.framework.protobuf.nano.MessageNano)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSizeNoTag(com.android.framework.protobuf.nano.MessageNano)
    {
        com.android.framework.protobuf.nano.MessageNano r0;
        int i0, $i1, $i2;

        r0 := @parameter0: com.android.framework.protobuf.nano.MessageNano;

        i0 = virtualinvoke r0.<com.android.framework.protobuf.nano.MessageNano: int getSerializedSize()>();

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int computeRawVarint32Size(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & -16384;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = -2097152 & i0;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = -268435456 & i0;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeRawVarint64Size(long)
    {
        long l0, $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17;
        byte $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16, $b18;

        l0 := @parameter0: long;

        $l1 = -128L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $l3 = -16384L & l0;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        return 2;

     label2:
        $l5 = -2097152L & l0;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label3;

        return 3;

     label3:
        $l7 = -268435456L & l0;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label4;

        return 4;

     label4:
        $l9 = -34359738368L & l0;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label5;

        return 5;

     label5:
        $l11 = -4398046511104L & l0;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label6;

        return 6;

     label6:
        $l13 = -562949953421312L & l0;

        $b14 = $l13 cmp 0L;

        if $b14 != 0 goto label7;

        return 7;

     label7:
        $l15 = -72057594037927936L & l0;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label8;

        return 8;

     label8:
        $l17 = -9223372036854775808L & l0;

        $b18 = $l17 cmp 0L;

        if $b18 != 0 goto label9;

        return 9;

     label9:
        return 10;
    }

    public static int computeSFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encodeZigZag32(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>($i1);

        return $i2;
    }

    public static int computeSInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeSInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: long encodeZigZag64(long)>(l0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint64Size(long)>($l1);

        return $i2;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeStringSizeNoTag(java.lang.String)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encodedLength(java.lang.CharSequence)>(r0);

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int computeTagSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.WireFormatNano: int makeTag(int,int)>(i0, 0);

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>($i1);

        return $i2;
    }

    public static int computeUInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeUInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i0);

        return $i1;
    }

    public static int computeUInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeUInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint64Size(long)>(l0);

        return $i1;
    }

    private static int encode(java.lang.CharSequence, byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i18, $i19, $i20, $i23, $i24, $i40, $i51, $i52, $i55, i56, i57, i59, i61, i62, i63, i64, i65, i66, i67, i68, i69;
        char c2, c3, $c27, $c28, $c31, $c32, $c33, $c36, $c37, $c41, $c42, $c45, $c46, c60;
        java.lang.StringBuilder $r1, $r8;
        java.lang.ArrayIndexOutOfBoundsException $r6;
        java.lang.String $r7, $r12;
        java.lang.IllegalArgumentException $r11;
        boolean $z0;
        byte $b11, $b12, $b16, $b17, $b21, $b22, $b25, $b26, $b29, $b30, $b34, $b35, $b38, $b39, $b43, $b44, $b47, $b48, $b49, $b50, $b53, $b54;
        java.lang.CharSequence r13;

        r13 := @parameter0: java.lang.CharSequence;

        r0 := @parameter1: byte[];

        i56 := @parameter2: int;

        i57 := @parameter3: int;

        i0 = interfaceinvoke r13.<java.lang.CharSequence: int length()>();

        i1 = i56 + i57;

        i59 = 0;

     label01:
        if i59 >= i0 goto label02;

        $i52 = i59 + i56;

        if $i52 >= i1 goto label02;

        c60 = interfaceinvoke r13.<java.lang.CharSequence: char charAt(int)>(i59);

        if c60 >= 128 goto label02;

        $i55 = i56 + i59;

        $b53 = (byte) c60;

        $b54 = (byte) $b53;

        r0[$i55] = $b54;

        i59 = i59 + 1;

        goto label01;

     label02:
        if i59 != i0 goto label03;

        $i51 = i56 + i0;

        return $i51;

     label03:
        i61 = i56 + i59;

     label04:
        if i59 >= i0 goto label12;

        c2 = interfaceinvoke r13.<java.lang.CharSequence: char charAt(int)>(i59);

        if c2 >= 128 goto label05;

        if i61 >= i1 goto label05;

        $b49 = (byte) c2;

        $b50 = (byte) $b49;

        r0[i61] = $b50;

        i61 = i61 + 1;

        goto label09;

     label05:
        if c2 >= 2048 goto label06;

        $i40 = i1 - 2;

        if i61 > $i40 goto label06;

        i62 = i61 + 1;

        $c41 = c2 >>> 6;

        $c42 = $c41 | 960;

        $b43 = (byte) $c42;

        $b44 = (byte) $b43;

        r0[i61] = $b44;

        i61 = i62 + 1;

        $c45 = c2 & 63;

        $c46 = $c45 | 128;

        $b47 = (byte) $c46;

        $b48 = (byte) $b47;

        r0[i62] = $b48;

        goto label09;

     label06:
        if c2 < 55296 goto label07;

        if 57343 >= c2 goto label08;

     label07:
        $i4 = i1 - 3;

        if i61 > $i4 goto label08;

        i63 = i61 + 1;

        $c27 = c2 >>> 12;

        $c28 = $c27 | 480;

        $b29 = (byte) $c28;

        $b30 = (byte) $b29;

        r0[i61] = $b30;

        i64 = i63 + 1;

        $c31 = c2 >>> 6;

        $c32 = $c31 & 63;

        $c33 = $c32 | 128;

        $b34 = (byte) $c33;

        $b35 = (byte) $b34;

        r0[i63] = $b35;

        $c36 = c2 & 63;

        $c37 = $c36 | 128;

        $b38 = (byte) $c37;

        $b39 = (byte) $b38;

        r0[i64] = $b39;

        i61 = i64 + 1;

        goto label09;

     label08:
        $i5 = i1 - 4;

        if i61 > $i5 goto label11;

        i65 = i59;

        $i6 = i59 + 1;

        $i7 = interfaceinvoke r13.<java.lang.CharSequence: int length()>();

        if $i6 == $i7 goto label10;

        i59 = i59 + 1;

        c3 = interfaceinvoke r13.<java.lang.CharSequence: char charAt(int)>(i59);

        i65 = i59;

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>(c2, c3);

        if $z0 == 0 goto label10;

        i66 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>(c2, c3);

        i67 = i61 + 1;

        $i9 = i66 >>> 18;

        $i10 = $i9 | 240;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r0[i61] = $b12;

        i68 = i67 + 1;

        $i13 = i66 >>> 12;

        $i14 = $i13 & 63;

        $i15 = $i14 | 128;

        $b16 = (byte) $i15;

        $b17 = (byte) $b16;

        r0[i67] = $b17;

        i69 = i68 + 1;

        $i18 = i66 >>> 6;

        $i19 = $i18 & 63;

        $i20 = $i19 | 128;

        $b21 = (byte) $i20;

        $b22 = (byte) $b21;

        r0[i68] = $b22;

        i61 = i69 + 1;

        $i23 = i66 & 63;

        $i24 = $i23 | 128;

        $b25 = (byte) $i24;

        $b26 = (byte) $b25;

        r0[i69] = $b26;

     label09:
        i59 = i59 + 1;

        goto label04;

     label10:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        $i8 = i65 - 1;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label11:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i61);

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label12:
        return i61;
    }

    private static void encode(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        boolean $z0, $z1;
        java.nio.ReadOnlyBufferException $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.nio.BufferOverflowException $r4;
        java.lang.CharSequence r6;
        java.nio.ByteBuffer r7;

        r6 := @parameter0: java.lang.CharSequence;

        r7 := @parameter1: java.nio.ByteBuffer;

        $z0 = virtualinvoke r7.<java.nio.ByteBuffer: boolean isReadOnly()>();

        if $z0 != 0 goto label6;

        $z1 = virtualinvoke r7.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z1 == 0 goto label4;

     label1:
        $r1 = virtualinvoke r7.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r7.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke r7.<java.nio.ByteBuffer: int position()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r7.<java.nio.ByteBuffer: int remaining()>();

        $i4 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encode(java.lang.CharSequence,byte[],int,int)>(r6, $r1, $i2, $i3);

        $i5 = virtualinvoke r7.<java.nio.ByteBuffer: int arrayOffset()>();

        $i6 = $i4 - $i5;

        virtualinvoke r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i6);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.nio.BufferOverflowException;

        specialinvoke $r4.<java.nio.BufferOverflowException: void <init>()>();

        virtualinvoke $r4.<java.nio.BufferOverflowException: java.lang.Throwable initCause(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void encodeDirect(java.lang.CharSequence,java.nio.ByteBuffer)>(r6, r7);

     label5:
        return;

     label6:
        $r0 = new java.nio.ReadOnlyBufferException;

        specialinvoke $r0.<java.nio.ReadOnlyBufferException: void <init>()>();

        throw $r0;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private static void encodeDirect(java.lang.CharSequence, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int i0, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, i37, i38, i39;
        char c1, c2, $c3, $c4, $c6, $c7, $c8, $c10, $c11, $c30, $c31, $c33, $c34;
        byte $b5, $b9, $b12, $b18, $b22, $b26, $b29, $b32, $b35, $b36;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        boolean $z0;
        java.lang.CharSequence r16;

        r16 := @parameter0: java.lang.CharSequence;

        r0 := @parameter1: java.nio.ByteBuffer;

        i0 = interfaceinvoke r16.<java.lang.CharSequence: int length()>();

        i37 = 0;

     label1:
        if i37 >= i0 goto label8;

        c1 = interfaceinvoke r16.<java.lang.CharSequence: char charAt(int)>(i37);

        if c1 >= 128 goto label2;

        $b36 = (byte) c1;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b36);

        goto label7;

     label2:
        if c1 >= 2048 goto label3;

        $c30 = c1 >>> 6;

        $c31 = $c30 | 960;

        $b32 = (byte) $c31;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b32);

        $c33 = c1 & 63;

        $c34 = 128 | $c33;

        $b35 = (byte) $c34;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b35);

        goto label7;

     label3:
        if c1 < 55296 goto label6;

        if 57343 >= c1 goto label4;

        goto label6;

     label4:
        i38 = i37;

        $i13 = i37 + 1;

        $i14 = interfaceinvoke r16.<java.lang.CharSequence: int length()>();

        if $i13 == $i14 goto label5;

        i37 = i37 + 1;

        c2 = interfaceinvoke r16.<java.lang.CharSequence: char charAt(int)>(i37);

        i38 = i37;

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>(c1, c2);

        if $z0 == 0 goto label5;

        i39 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>(c1, c2);

        $i16 = i39 >>> 18;

        $i17 = $i16 | 240;

        $b18 = (byte) $i17;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b18);

        $i19 = i39 >>> 12;

        $i20 = $i19 & 63;

        $i21 = $i20 | 128;

        $b22 = (byte) $i21;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b22);

        $i23 = i39 >>> 6;

        $i24 = $i23 & 63;

        $i25 = $i24 | 128;

        $b26 = (byte) $i25;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b26);

        $i27 = i39 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b29);

        goto label7;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        $i15 = i38 - 1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label6:
        $c3 = c1 >>> 12;

        $c4 = $c3 | 480;

        $b5 = (byte) $c4;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

        $c6 = c1 >>> 6;

        $c7 = $c6 & 63;

        $c8 = $c7 | 128;

        $b9 = (byte) $c8;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b9);

        $c10 = c1 & 63;

        $c11 = 128 | $c10;

        $b12 = (byte) $c11;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b12);

     label7:
        i37 = i37 + 1;

        goto label1;

     label8:
        return;
    }

    public static int encodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 << 1;

        $i1 = i0 >> 31;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

    public static long encodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3;

        l0 := @parameter0: long;

        $l2 = l0 << 1;

        $l1 = l0 >> 63;

        $l3 = $l2 ^ $l1;

        return $l3;
    }

    private static int encodedLength(java.lang.CharSequence)
    {
        int i0, $i4, $i5, $i6, i8, i9, i10, i11;
        java.lang.StringBuilder $r0;
        long $l2, $l3;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        char $c7, c12;
        java.lang.CharSequence r5;

        r5 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        i8 = 0;

     label1:
        i9 = i0;

        i10 = i8;

        if i8 >= i0 goto label2;

        i9 = i0;

        i10 = i8;

        $c7 = interfaceinvoke r5.<java.lang.CharSequence: char charAt(int)>(i8);

        if $c7 >= 128 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        i11 = i9;

        if i10 >= i0 goto label4;

        c12 = interfaceinvoke r5.<java.lang.CharSequence: char charAt(int)>(i10);

        if c12 >= 2048 goto label3;

        $i5 = 127 - c12;

        $i6 = $i5 >>> 31;

        i9 = i9 + $i6;

        i10 = i10 + 1;

        goto label2;

     label3:
        $i4 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encodedLengthGeneral(java.lang.CharSequence,int)>(r5, i10);

        i11 = i9 + $i4;

     label4:
        if i11 < i0 goto label5;

        return i11;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        $l2 = (long) i11;

        $l3 = $l2 + 4294967296L;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    private static int encodedLengthGeneral(java.lang.CharSequence, int)
    {
        int i0, i2, $i3, $i4, $i5, i6, i7, i8;
        char c1;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        java.lang.CharSequence r5;

        r5 := @parameter0: java.lang.CharSequence;

        i6 := @parameter1: int;

        i0 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        i7 = 0;

     label1:
        if i6 >= i0 goto label5;

        c1 = interfaceinvoke r5.<java.lang.CharSequence: char charAt(int)>(i6);

        if c1 >= 2048 goto label2;

        $i4 = 127 - c1;

        $i5 = $i4 >>> 31;

        i7 = i7 + $i5;

        i8 = i6;

        goto label4;

     label2:
        i2 = i7 + 2;

        i7 = i2;

        i8 = i6;

        if 55296 > c1 goto label4;

        i7 = i2;

        i8 = i6;

        if c1 > 57343 goto label4;

        $i3 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r5, i6);

        if $i3 < 65536 goto label3;

        i8 = i6 + 1;

        i7 = i2;

        goto label4;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label4:
        i6 = i8 + 1;

        goto label1;

     label5:
        return i7;
    }

    public static com.android.framework.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: com.android.framework.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static com.android.framework.protobuf.nano.CodedOutputByteBufferNano newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        specialinvoke $r1.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public void checkNoSpaceLeft()
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        $i0 = virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public int position()
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        return $i0;
    }

    public void reset()
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        return;
    }

    public int spaceLeft()
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        return $i0;
    }

    public void writeBool(int, boolean) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeBoolNoTag(boolean)>(z0);

        return;
    }

    public void writeBoolNoTag(boolean) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(int)>(i0);

        return;
    }

    public void writeBytes(int, byte[]) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        byte[] r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeBytesNoTag(byte[])>(r1);

        return;
    }

    public void writeBytesNoTag(byte[]) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawBytes(byte[])>(r1);

        return;
    }

    public void writeDouble(int, double) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        double d0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeDoubleNoTag(double)>(d0);

        return;
    }

    public void writeDoubleNoTag(double) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        double d0;
        long $l0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian64(long)>($l0);

        return;
    }

    public void writeEnum(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeEnumNoTag(int)>(i1);

        return;
    }

    public void writeEnumNoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>(i0);

        return;
    }

    void writeField(int, int, java.lang.Object) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1, $i3, $i5, $i6, $i7, $i8, $i10;
        java.lang.Long $r1, $r3, $r13, $r15, $r16;
        long $l2, $l4, $l9, $l11, $l12;
        java.lang.Integer $r2, $r4, $r5, $r6, $r12, $r14;
        byte[] $r7;
        com.android.framework.protobuf.nano.MessageNano $r8, $r9;
        java.lang.String $r10, $r23;
        java.lang.Boolean $r11;
        boolean $z0;
        java.lang.Float $r17;
        float $f0;
        java.lang.Double $r18;
        double $d0;
        java.lang.StringBuilder $r19;
        java.io.IOException $r22;
        java.lang.Object r24;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r24 := @parameter2: java.lang.Object;

        tableswitch(i1)
        {
            case 1: goto label19;
            case 2: goto label18;
            case 3: goto label17;
            case 4: goto label16;
            case 5: goto label15;
            case 6: goto label14;
            case 7: goto label13;
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label10;
            case 11: goto label09;
            case 12: goto label08;
            case 13: goto label07;
            case 14: goto label06;
            case 15: goto label05;
            case 16: goto label04;
            case 17: goto label03;
            case 18: goto label02;
            default: goto label01;
        };

     label01:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = new java.io.IOException;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label02:
        $r1 = (java.lang.Long) r24;

        $l2 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSInt64(int,long)>(i0, $l2);

        goto label20;

     label03:
        $r2 = (java.lang.Integer) r24;

        $i3 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSInt32(int,int)>(i0, $i3);

        goto label20;

     label04:
        $r3 = (java.lang.Long) r24;

        $l4 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSFixed64(int,long)>(i0, $l4);

        goto label20;

     label05:
        $r4 = (java.lang.Integer) r24;

        $i5 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSFixed32(int,int)>(i0, $i5);

        goto label20;

     label06:
        $r5 = (java.lang.Integer) r24;

        $i6 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeEnum(int,int)>(i0, $i6);

        goto label20;

     label07:
        $r6 = (java.lang.Integer) r24;

        $i7 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeUInt32(int,int)>(i0, $i7);

        goto label20;

     label08:
        $r7 = (byte[]) r24;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeBytes(int,byte[])>(i0, $r7);

        goto label20;

     label09:
        $r8 = (com.android.framework.protobuf.nano.MessageNano) r24;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeMessage(int,com.android.framework.protobuf.nano.MessageNano)>(i0, $r8);

        goto label20;

     label10:
        $r9 = (com.android.framework.protobuf.nano.MessageNano) r24;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeGroup(int,com.android.framework.protobuf.nano.MessageNano)>(i0, $r9);

        goto label20;

     label11:
        $r10 = (java.lang.String) r24;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeString(int,java.lang.String)>(i0, $r10);

        goto label20;

     label12:
        $r11 = (java.lang.Boolean) r24;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeBool(int,boolean)>(i0, $z0);

        goto label20;

     label13:
        $r12 = (java.lang.Integer) r24;

        $i8 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFixed32(int,int)>(i0, $i8);

        goto label20;

     label14:
        $r13 = (java.lang.Long) r24;

        $l9 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFixed64(int,long)>(i0, $l9);

        goto label20;

     label15:
        $r14 = (java.lang.Integer) r24;

        $i10 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeInt32(int,int)>(i0, $i10);

        goto label20;

     label16:
        $r15 = (java.lang.Long) r24;

        $l11 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeUInt64(int,long)>(i0, $l11);

        goto label20;

     label17:
        $r16 = (java.lang.Long) r24;

        $l12 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeInt64(int,long)>(i0, $l12);

        goto label20;

     label18:
        $r17 = (java.lang.Float) r24;

        $f0 = virtualinvoke $r17.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFloat(int,float)>(i0, $f0);

        goto label20;

     label19:
        $r18 = (java.lang.Double) r24;

        $d0 = virtualinvoke $r18.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeDouble(int,double)>(i0, $d0);

     label20:
        return;
    }

    public void writeFixed32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFixed32NoTag(int)>(i1);

        return;
    }

    public void writeFixed32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian32(int)>(i0);

        return;
    }

    public void writeFixed64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFixed64NoTag(long)>(l1);

        return;
    }

    public void writeFixed64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian64(long)>(l0);

        return;
    }

    public void writeFloat(int, float) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        float f0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeFloatNoTag(float)>(f0);

        return;
    }

    public void writeFloatNoTag(float) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        float f0;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian32(int)>($i0);

        return;
    }

    public void writeGroup(int, com.android.framework.protobuf.nano.MessageNano) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        com.android.framework.protobuf.nano.MessageNano r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.framework.protobuf.nano.MessageNano;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeGroupNoTag(com.android.framework.protobuf.nano.MessageNano)>(r1);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 4);

        return;
    }

    public void writeGroupNoTag(com.android.framework.protobuf.nano.MessageNano) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        com.android.framework.protobuf.nano.MessageNano r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: com.android.framework.protobuf.nano.MessageNano;

        virtualinvoke r1.<com.android.framework.protobuf.nano.MessageNano: void writeTo(com.android.framework.protobuf.nano.CodedOutputByteBufferNano)>(r0);

        return;
    }

    public void writeInt32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeInt32NoTag(int)>(i1);

        return;
    }

    public void writeInt32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long $l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>(i0);

        goto label2;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint64(long)>($l1);

     label2:
        return;
    }

    public void writeInt64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeInt64NoTag(long)>(l1);

        return;
    }

    public void writeInt64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint64(long)>(l0);

        return;
    }

    public void writeMessage(int, com.android.framework.protobuf.nano.MessageNano) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        com.android.framework.protobuf.nano.MessageNano r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.framework.protobuf.nano.MessageNano;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeMessageNoTag(com.android.framework.protobuf.nano.MessageNano)>(r1);

        return;
    }

    public void writeMessageNoTag(com.android.framework.protobuf.nano.MessageNano) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        com.android.framework.protobuf.nano.MessageNano r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: com.android.framework.protobuf.nano.MessageNano;

        $i0 = virtualinvoke r1.<com.android.framework.protobuf.nano.MessageNano: int getCachedSize()>();

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i0);

        virtualinvoke r1.<com.android.framework.protobuf.nano.MessageNano: void writeTo(com.android.framework.protobuf.nano.CodedOutputByteBufferNano)>(r0);

        return;
    }

    public void writeRawByte(byte) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        byte b0;
        java.nio.ByteBuffer $r1, $r3, $r4, $r5;
        boolean $z0;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException $r2;
        int $i1, $i2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b0);

        return;

     label1:
        $r2 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $r3 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $r4 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i2 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i1, $i2);

        throw $r2;
    }

    public void writeRawByte(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        byte $b1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(byte)>($b1);

        return;
    }

    public void writeRawBytes(byte[]) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawBytes(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void writeRawBytes(byte[], int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;
        java.nio.ByteBuffer $r2, $r4, $r5, $r6;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException $r3;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i2 < i1 goto label1;

        $r6 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i0, i1);

        return;

     label1:
        $r3 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $r4 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i3 = virtualinvoke $r4.<java.nio.ByteBuffer: int position()>();

        $r5 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i4 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r3.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i3, $i4);

        throw $r3;
    }

    public void writeRawLittleEndian32(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, $i1, $i2, $i3;
        java.nio.ByteBuffer $r1, $r3, $r4, $r5;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException $r2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i1 < 4 goto label1;

        $r5 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        return;

     label1:
        $r2 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $r3 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $r4 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i3 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i2, $i3);

        throw $r2;
    }

    public void writeRawLittleEndian64(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0;
        java.nio.ByteBuffer $r1, $r3, $r4, $r5;
        int $i1, $i2, $i3;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException $r2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i1 < 8 goto label1;

        $r5 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>(l0);

        return;

     label1:
        $r2 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $r3 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $r4 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i3 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r2.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i2, $i3);

        throw $r2;
    }

    public void writeRawVarint32(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i3 := @parameter0: int;

     label1:
        $i0 = i3 & -128;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(int)>(i3);

        return;

     label2:
        $i1 = i3 & 127;

        $i2 = $i1 | 128;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(int)>($i2);

        i3 = i3 >>> 7;

        goto label1;
    }

    public void writeRawVarint64(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long $l0, l6;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l6 := @parameter0: long;

     label1:
        $l0 = -128L & l6;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $i5 = (int) l6;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(int)>($i5);

        return;

     label2:
        $i2 = (int) l6;

        $i3 = $i2 & 127;

        $i4 = $i3 | 128;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawByte(int)>($i4);

        l6 = l6 >>> 7;

        goto label1;
    }

    public void writeSFixed32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSFixed32NoTag(int)>(i1);

        return;
    }

    public void writeSFixed32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian32(int)>(i0);

        return;
    }

    public void writeSFixed64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSFixed64NoTag(long)>(l1);

        return;
    }

    public void writeSFixed64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawLittleEndian64(long)>(l0);

        return;
    }

    public void writeSInt32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSInt32NoTag(int)>(i1);

        return;
    }

    public void writeSInt32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, $i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encodeZigZag32(int)>(i0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i1);

        return;
    }

    public void writeSInt64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeSInt64NoTag(long)>(l1);

        return;
    }

    public void writeSInt64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0, $l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: long encodeZigZag64(long)>(l0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint64(long)>($l1);

        return;
    }

    public void writeString(int, java.lang.String) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.nio.ByteBuffer $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r16, $r17;
        java.lang.Throwable $r14;
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException $r15, r20;
        java.lang.String r19;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        r19 := @parameter0: java.lang.String;

     label1:
        $i3 = virtualinvoke r19.<java.lang.String: int length()>();

        i0 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>($i3);

        $i4 = virtualinvoke r19.<java.lang.String: int length()>();

        $i5 = $i4 * 3;

        $i6 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>($i5);

        if i0 != $i6 goto label4;

        $r3 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $r4 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i8 = virtualinvoke $r4.<java.nio.ByteBuffer: int remaining()>();

        if $i8 < i0 goto label3;

        $r6 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i11 = i1 + i0;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i11);

        $r8 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void encode(java.lang.CharSequence,java.nio.ByteBuffer)>(r19, $r8);

        $r9 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        i2 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>();

        $r10 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);

        $i12 = i2 - i1;

        $i13 = $i12 - i0;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i13);

        $r12 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i2);

     label2:
        goto label5;

     label3:
        r20 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $i9 = i1 + i0;

        $r5 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i10 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        specialinvoke r20.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i9, $i10);

        throw r20;

     label4:
        $i7 = staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int encodedLength(java.lang.CharSequence)>(r19);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i7);

        $r2 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        staticinvoke <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void encode(java.lang.CharSequence,java.nio.ByteBuffer)>(r19, $r2);

     label5:
        return;

     label6:
        $r14 := @caughtexception;

        $r15 = new com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        $r16 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i14 = virtualinvoke $r16.<java.nio.ByteBuffer: int position()>();

        $r17 = r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: java.nio.ByteBuffer buffer>;

        $i15 = virtualinvoke $r17.<java.nio.ByteBuffer: int limit()>();

        specialinvoke $r15.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: void <init>(int,int)>($i14, $i15);

        virtualinvoke $r15.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException: java.lang.Throwable initCause(java.lang.Throwable)>($r14);

        throw $r15;

        catch java.nio.BufferOverflowException from label1 to label2 with label6;
        catch java.nio.BufferOverflowException from label3 to label4 with label6;
        catch java.nio.BufferOverflowException from label4 to label5 with label6;
    }

    public void writeTag(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1, $i2;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.framework.protobuf.nano.WireFormatNano: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i2);

        return;
    }

    public void writeUInt32(int, int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeUInt32NoTag(int)>(i1);

        return;
    }

    public void writeUInt32NoTag(int) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>(i0);

        return;
    }

    public void writeUInt64(int, long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0;
        long l1;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeUInt64NoTag(long)>(l1);

        return;
    }

    public void writeUInt64NoTag(long) throws java.io.IOException
    {
        com.android.framework.protobuf.nano.CodedOutputByteBufferNano r0;
        long l0;

        r0 := @this: com.android.framework.protobuf.nano.CodedOutputByteBufferNano;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.framework.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint64(long)>(l0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int MAX_UTF8_EXPANSION> = 3;

        <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int LITTLE_ENDIAN_64_SIZE> = 8;

        <com.android.framework.protobuf.nano.CodedOutputByteBufferNano: int LITTLE_ENDIAN_32_SIZE> = 4;

        return;
    }
}
