public class com.android.future.usb.UsbManager extends java.lang.Object
{
    public static final java.lang.String ACTION_USB_ACCESSORY_ATTACHED;
    public static final java.lang.String ACTION_USB_ACCESSORY_DETACHED;
    public static final java.lang.String EXTRA_PERMISSION_GRANTED;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.hardware.usb.IUsbManager mService;

    private void <init>(android.content.Context, android.hardware.usb.IUsbManager)
    {
        com.android.future.usb.UsbManager r0;
        android.content.Context r1;
        android.hardware.usb.IUsbManager r2;

        r0 := @this: com.android.future.usb.UsbManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.usb.IUsbManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.future.usb.UsbManager: android.content.Context mContext> = r1;

        r0.<com.android.future.usb.UsbManager: android.hardware.usb.IUsbManager mService> = r2;

        return;
    }

    public static com.android.future.usb.UsbAccessory getAccessory(android.content.Intent)
    {
        android.os.Parcelable $r0;
        com.android.future.usb.UsbAccessory $r1;
        android.content.Intent r2;
        android.hardware.usb.UsbAccessory r3;

        r2 := @parameter0: android.content.Intent;

        $r0 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("accessory");

        r3 = (android.hardware.usb.UsbAccessory) $r0;

        if r3 != null goto label1;

        return null;

     label1:
        $r1 = new com.android.future.usb.UsbAccessory;

        specialinvoke $r1.<com.android.future.usb.UsbAccessory: void <init>(android.hardware.usb.UsbAccessory)>(r3);

        return $r1;
    }

    public static com.android.future.usb.UsbManager getInstance(android.content.Context)
    {
        android.content.Context r0;
        com.android.future.usb.UsbManager $r1;
        android.os.IBinder $r2;
        android.hardware.usb.IUsbManager $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.future.usb.UsbManager;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("usb");

        $r3 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager asInterface(android.os.IBinder)>($r2);

        specialinvoke $r1.<com.android.future.usb.UsbManager: void <init>(android.content.Context,android.hardware.usb.IUsbManager)>(r0, $r3);

        return $r1;
    }

    public com.android.future.usb.UsbAccessory[] getAccessoryList()
    {
        com.android.future.usb.UsbManager r0;
        android.hardware.usb.IUsbManager $r1;
        com.android.future.usb.UsbAccessory $r2;
        com.android.future.usb.UsbAccessory[] $r3;
        android.os.RemoteException $r4;
        android.hardware.usb.UsbAccessory r5;

        r0 := @this: com.android.future.usb.UsbManager;

     label1:
        $r1 = r0.<com.android.future.usb.UsbManager: android.hardware.usb.IUsbManager mService>;

        r5 = interfaceinvoke $r1.<android.hardware.usb.IUsbManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>();

     label2:
        if r5 != null goto label3;

        return null;

     label3:
        $r2 = new com.android.future.usb.UsbAccessory;

        specialinvoke $r2.<com.android.future.usb.UsbAccessory: void <init>(android.hardware.usb.UsbAccessory)>(r5);

     label4:
        $r3 = newarray (com.android.future.usb.UsbAccessory)[1];

        $r3[0] = $r2;

        return $r3;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbManager", "RemoteException in getAccessoryList", $r4);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public boolean hasPermission(com.android.future.usb.UsbAccessory)
    {
        com.android.future.usb.UsbManager r0;
        android.hardware.usb.IUsbManager r1;
        android.hardware.usb.UsbAccessory r2;
        boolean z0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        android.os.RemoteException $r9;
        com.android.future.usb.UsbAccessory r10;

        r0 := @this: com.android.future.usb.UsbManager;

        r10 := @parameter0: com.android.future.usb.UsbAccessory;

     label1:
        r1 = r0.<com.android.future.usb.UsbManager: android.hardware.usb.IUsbManager mService>;

        r2 = new android.hardware.usb.UsbAccessory;

        $r3 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>();

        $r4 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getModel()>();

        $r5 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>();

        $r6 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>();

        $r7 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getUri()>();

        $r8 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>();

        specialinvoke r2.<android.hardware.usb.UsbAccessory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5, $r6, $r7, $r8);

        z0 = interfaceinvoke r1.<android.hardware.usb.IUsbManager: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>(r2);

     label2:
        return z0;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbManager", "RemoteException in hasPermission", $r9);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openAccessory(com.android.future.usb.UsbAccessory)
    {
        com.android.future.usb.UsbManager r0;
        android.hardware.usb.IUsbManager r1;
        android.hardware.usb.UsbAccessory r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        android.os.RemoteException $r9;
        com.android.future.usb.UsbAccessory r10;
        android.os.ParcelFileDescriptor r11;

        r0 := @this: com.android.future.usb.UsbManager;

        r10 := @parameter0: com.android.future.usb.UsbAccessory;

     label1:
        r1 = r0.<com.android.future.usb.UsbManager: android.hardware.usb.IUsbManager mService>;

        r2 = new android.hardware.usb.UsbAccessory;

        $r3 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>();

        $r4 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getModel()>();

        $r5 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>();

        $r6 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>();

        $r7 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getUri()>();

        $r8 = virtualinvoke r10.<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>();

        specialinvoke r2.<android.hardware.usb.UsbAccessory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5, $r6, $r7, $r8);

        r11 = interfaceinvoke r1.<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>(r2);

     label2:
        return r11;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbManager", "RemoteException in openAccessory", $r9);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestPermission(com.android.future.usb.UsbAccessory, android.app.PendingIntent)
    {
        com.android.future.usb.UsbManager r0;
        android.app.PendingIntent r1;
        android.hardware.usb.IUsbManager r2;
        android.hardware.usb.UsbAccessory r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        android.content.Context $r10;
        android.os.RemoteException $r12;
        com.android.future.usb.UsbAccessory r13;

        r0 := @this: com.android.future.usb.UsbManager;

        r13 := @parameter0: com.android.future.usb.UsbAccessory;

        r1 := @parameter1: android.app.PendingIntent;

     label1:
        r2 = r0.<com.android.future.usb.UsbManager: android.hardware.usb.IUsbManager mService>;

        r3 = new android.hardware.usb.UsbAccessory;

        $r4 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>();

        $r5 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getModel()>();

        $r6 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>();

        $r7 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>();

        $r8 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getUri()>();

        $r9 = virtualinvoke r13.<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>();

        specialinvoke r3.<android.hardware.usb.UsbAccessory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6, $r7, $r8, $r9);

        $r10 = r0.<com.android.future.usb.UsbManager: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke r2.<android.hardware.usb.IUsbManager: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>(r3, $r11, r1);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UsbManager", "RemoteException in requestPermission", $r12);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.future.usb.UsbManager: java.lang.String TAG> = "UsbManager";

        <com.android.future.usb.UsbManager: java.lang.String EXTRA_PERMISSION_GRANTED> = "permission";

        <com.android.future.usb.UsbManager: java.lang.String ACTION_USB_ACCESSORY_DETACHED> = "android.hardware.usb.action.USB_ACCESSORY_DETACHED";

        <com.android.future.usb.UsbManager: java.lang.String ACTION_USB_ACCESSORY_ATTACHED> = "android.hardware.usb.action.USB_ACCESSORY_ATTACHED";

        return;
    }
}
