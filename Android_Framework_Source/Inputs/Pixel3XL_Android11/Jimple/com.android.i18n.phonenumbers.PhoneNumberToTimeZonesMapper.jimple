public class com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper extends java.lang.Object
{
    private static final java.lang.String MAPPING_DATA_DIRECTORY;
    private static final java.lang.String MAPPING_DATA_FILE_NAME;
    private static final java.lang.String UNKNOWN_TIMEZONE;
    static final java.util.List UNKNOWN_TIME_ZONE_LIST;
    private static final java.util.logging.Logger logger;
    private com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap;

    static void <clinit>()
    {
        java.util.ArrayList $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.util.logging.Logger $r4;

        <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.lang.String UNKNOWN_TIMEZONE> = "Etc/Unknown";

        <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.lang.String MAPPING_DATA_FILE_NAME> = "map_data";

        <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.lang.String MAPPING_DATA_DIRECTORY> = "/com/android/i18n/phonenumbers/timezones/data/";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);

        <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List UNKNOWN_TIME_ZONE_LIST> = $r1;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("Etc/Unknown");

        $r2 = class "Lcom/android/i18n/phonenumbers/PhoneNumberToTimeZonesMapper;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r3);

        <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.logging.Logger logger> = $r4;

        return;
    }

    private void <init>(com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap r1;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r1 := @parameter0: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap> = null;

        r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap> = r1;

        return;
    }

    void <init>(com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap, com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper$1)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap r1;
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper$1 r2;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r1 := @parameter0: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap;

        r2 := @parameter1: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper$1;

        specialinvoke r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: void <init>(com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap)>(r1);

        return;
    }

    void <init>(java.lang.String)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap $r7;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap> = null;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("map_data");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap loadPrefixTimeZonesMapFromFile(java.lang.String)>($r6);

        r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap> = $r7;

        return;
    }

    static com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap access$000(java.lang.String)
    {
        java.lang.String r0;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap loadPrefixTimeZonesMapFromFile(java.lang.String)>(r0);

        return $r1;
    }

    private static void close(java.io.InputStream)
    {
        java.lang.Throwable $r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;
        java.io.InputStream r4;
        java.io.IOException r6;

        r4 := @parameter0: java.io.InputStream;

        if r4 == null goto label4;

     label1:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r6 = (java.io.IOException) $r0;

        $r3 = virtualinvoke r6.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.util.List getCountryLevelTimeZonesforNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap $r1;
        boolean $z0;
        java.util.List $r2, r4;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r3;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r3 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        $r1 = r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap>;

        r4 = virtualinvoke $r1.<com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap: java.util.List lookupCountryLevelTimeZonesForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r3);

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r4 = <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List UNKNOWN_TIME_ZONE_LIST>;

        goto label1;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r4);

        return $r2;
    }

    public static com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper getInstance()
    {
        java.lang.Throwable $r0;
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r1;

        entermonitor class "Lcom/android/i18n/phonenumbers/PhoneNumberToTimeZonesMapper;";

     label1:
        r1 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper$LazyHolder: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper access$200()>();

     label2:
        exitmonitor class "Lcom/android/i18n/phonenumbers/PhoneNumberToTimeZonesMapper;";

        return r1;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/android/i18n/phonenumbers/PhoneNumberToTimeZonesMapper;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private java.util.List getTimeZonesForGeocodableNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap $r1;
        boolean $z0;
        java.util.List $r2, r4;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r3;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r3 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        $r1 = r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap prefixTimeZonesMap>;

        r4 = virtualinvoke $r1.<com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap: java.util.List lookupTimeZonesForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r3);

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r4 = <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List UNKNOWN_TIME_ZONE_LIST>;

        goto label1;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r4);

        return $r2;
    }

    public static java.lang.String getUnknownTimeZone()
    {
        return "Etc/Unknown";
    }

    private static com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap loadPrefixTimeZonesMapFromFile(java.lang.String)
    {
        java.io.InputStream r0;
        java.lang.Class $r2;
        java.lang.Throwable $r4, $r5;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        java.lang.String $r8, r9;
        java.io.ObjectInputStream r10, r11, r16;
        com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap r15;
        java.io.IOException r17;

        r9 := @parameter0: java.lang.String;

        $r2 = class "Lcom/android/i18n/phonenumbers/PhoneNumberToTimeZonesMapper;";

        r0 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r9);

        r15 = new com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap;

        specialinvoke r15.<com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap: void <init>()>();

        r10 = null;

        r11 = null;

     label01:
        r16 = new java.io.ObjectInputStream;

     label02:
        r10 = null;

        r11 = null;

     label03:
        specialinvoke r16.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r0);

     label04:
        r10 = r16;

        r11 = r16;

     label05:
        virtualinvoke r15.<com.android.i18n.phonenumbers.prefixmapper.PrefixTimeZonesMap: void readExternal(java.io.ObjectInput)>(r16);

     label06:
        r11 = r16;

     label07:
        staticinvoke <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: void close(java.io.InputStream)>(r11);

        goto label12;

     label08:
        $r4 := @caughtexception;

        goto label13;

     label09:
        $r5 := @caughtexception;

        r10 = r11;

     label10:
        $r6 = <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.logging.Logger logger>;

        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r17 = (java.io.IOException) $r5;

        $r8 = virtualinvoke r17.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r7, $r8);

     label11:
        goto label07;

     label12:
        return r15;

     label13:
        staticinvoke <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: void close(java.io.InputStream)>(r10);

        throw $r4;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public java.util.List getTimeZonesForGeographicalNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r1;
        java.util.List $r2;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r1 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        $r2 = specialinvoke r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List getTimeZonesForGeocodableNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        return $r2;
    }

    public java.util.List getTimeZonesForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)
    {
        com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper r0;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r1;
        com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType r2, $r4;
        com.android.i18n.phonenumbers.PhoneNumberUtil $r3, $r5;
        int $i0;
        boolean $z0;
        java.util.List $r6, $r7, $r8;

        r0 := @this: com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper;

        r1 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        $r3 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        r2 = virtualinvoke $r3.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        $r4 = <com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType UNKNOWN>;

        if r2 != $r4 goto label1;

        $r8 = <com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List UNKNOWN_TIME_ZONE_LIST>;

        return $r8;

     label1:
        $r5 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        $i0 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        $z0 = virtualinvoke $r5.<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isNumberGeographical(com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType,int)>(r2, $i0);

        if $z0 != 0 goto label2;

        $r7 = specialinvoke r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List getCountryLevelTimeZonesforNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        return $r7;

     label2:
        $r6 = virtualinvoke r0.<com.android.i18n.phonenumbers.PhoneNumberToTimeZonesMapper: java.util.List getTimeZonesForGeographicalNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        return $r6;
    }
}
