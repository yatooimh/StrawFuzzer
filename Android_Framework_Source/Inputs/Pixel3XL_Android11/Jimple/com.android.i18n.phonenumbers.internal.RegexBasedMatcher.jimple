public final class com.android.i18n.phonenumbers.internal.RegexBasedMatcher extends java.lang.Object implements com.android.i18n.phonenumbers.internal.MatcherApi
{
    private final com.android.i18n.phonenumbers.internal.RegexCache regexCache;

    private void <init>()
    {
        com.android.i18n.phonenumbers.internal.RegexBasedMatcher r0;
        com.android.i18n.phonenumbers.internal.RegexCache $r1;

        r0 := @this: com.android.i18n.phonenumbers.internal.RegexBasedMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.i18n.phonenumbers.internal.RegexCache;

        specialinvoke $r1.<com.android.i18n.phonenumbers.internal.RegexCache: void <init>(int)>(100);

        r0.<com.android.i18n.phonenumbers.internal.RegexBasedMatcher: com.android.i18n.phonenumbers.internal.RegexCache regexCache> = $r1;

        return;
    }

    public static com.android.i18n.phonenumbers.internal.MatcherApi create()
    {
        com.android.i18n.phonenumbers.internal.RegexBasedMatcher $r0;

        $r0 = new com.android.i18n.phonenumbers.internal.RegexBasedMatcher;

        specialinvoke $r0.<com.android.i18n.phonenumbers.internal.RegexBasedMatcher: void <init>()>();

        return $r0;
    }

    private static boolean match(java.lang.CharSequence, java.util.regex.Pattern, boolean)
    {
        java.util.regex.Pattern r0;
        boolean $z0, $z1, z2;
        java.lang.CharSequence r1;
        java.util.regex.Matcher r2;

        r1 := @parameter0: java.lang.CharSequence;

        r0 := @parameter1: java.util.regex.Pattern;

        z2 := @parameter2: boolean;

        r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        z2 = 1;

        goto label2;

     label2:
        return z2;
    }

    public boolean matchNationalNumber(java.lang.CharSequence, com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc, boolean)
    {
        com.android.i18n.phonenumbers.internal.RegexBasedMatcher r0;
        java.lang.CharSequence r1;
        boolean z0, $z1;
        int $i0;
        com.android.i18n.phonenumbers.internal.RegexCache $r2;
        java.util.regex.Pattern $r3;
        com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc r4;
        java.lang.String r5;

        r0 := @this: com.android.i18n.phonenumbers.internal.RegexBasedMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        r4 := @parameter1: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc;

        z0 := @parameter2: boolean;

        r5 = virtualinvoke r4.<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getNationalNumberPattern()>();

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.i18n.phonenumbers.internal.RegexBasedMatcher: com.android.i18n.phonenumbers.internal.RegexCache regexCache>;

        $r3 = virtualinvoke $r2.<com.android.i18n.phonenumbers.internal.RegexCache: java.util.regex.Pattern getPatternForRegex(java.lang.String)>(r5);

        $z1 = staticinvoke <com.android.i18n.phonenumbers.internal.RegexBasedMatcher: boolean match(java.lang.CharSequence,java.util.regex.Pattern,boolean)>(r1, $r3, z0);

        return $z1;
    }
}
