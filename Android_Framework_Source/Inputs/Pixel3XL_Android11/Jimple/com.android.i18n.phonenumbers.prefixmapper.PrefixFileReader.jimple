public class com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader extends java.lang.Object
{
    private static final java.util.logging.Logger logger;
    private java.util.Map availablePhonePrefixMaps;
    private com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider;
    private final java.lang.String phonePrefixDataDirectory;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/android/i18n/phonenumbers/prefixmapper/PrefixFileReader;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger logger> = $r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.lang.String r1;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider;

        specialinvoke $r2.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: void <init>()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps> = $r3;

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory> = r1;

        specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void loadMappingFileProvider()>();

        return;
    }

    private static void close(java.io.InputStream)
    {
        java.lang.Throwable $r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        java.lang.String $r3;
        java.io.InputStream r4;
        java.io.IOException r6;

        r4 := @parameter0: java.io.InputStream;

        if r4 == null goto label4;

     label1:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger logger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r6 = (java.io.IOException) $r0;

        $r3 = virtualinvoke r6.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        int i0, $i1;
        java.lang.String r1, r2, r8, r9;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r3;
        java.util.Map $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap $r7;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider>;

        r9 = virtualinvoke $r3.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: java.lang.String getFileName(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r8, r1, r2);

        $i1 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r9);

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void loadPhonePrefixMapFromFile(java.lang.String)>(r9);

     label2:
        $r5 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        $r7 = (com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap) $r6;

        return $r7;
    }

    private void loadMappingFileProvider()
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.io.InputStream r1;
        java.lang.String $r3, $r5, $r11;
        java.lang.Class $r4;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r6;
        java.lang.Throwable $r7, $r8;
        java.util.logging.Logger $r9;
        java.util.logging.Level $r10;
        java.io.ObjectInputStream r13, r14, r19;
        java.lang.StringBuilder r18;
        java.io.IOException r20;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("config");

        $r4 = class "Lcom/android/i18n/phonenumbers/prefixmapper/PrefixFileReader;";

        $r5 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = virtualinvoke $r4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r5);

        r13 = null;

        r14 = null;

     label01:
        r19 = new java.io.ObjectInputStream;

     label02:
        r13 = null;

        r14 = null;

     label03:
        specialinvoke r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

     label04:
        r13 = r19;

        r14 = r19;

     label05:
        $r6 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider>;

        virtualinvoke $r6.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: void readExternal(java.io.ObjectInput)>(r19);

     label06:
        r14 = r19;

     label07:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r14);

        goto label12;

     label08:
        $r7 := @caughtexception;

        goto label13;

     label09:
        $r8 := @caughtexception;

        r13 = r14;

     label10:
        $r9 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger logger>;

        $r10 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r20 = (java.io.IOException) $r8;

        $r11 = virtualinvoke r20.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r10, $r11);

     label11:
        goto label07;

     label12:
        return;

     label13:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r13);

        throw $r7;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    private void loadPhonePrefixMapFromFile(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.io.InputStream r1;
        java.lang.String $r4, $r6, $r12, r13;
        java.lang.Class $r5;
        java.util.Map $r7;
        java.lang.Throwable $r8, $r9;
        java.util.logging.Logger $r10;
        java.util.logging.Level $r11;
        java.io.ObjectInputStream r15, r16, r21;
        java.lang.StringBuilder r20;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap r22;
        java.io.IOException r23;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r13 := @parameter0: java.lang.String;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r5 = class "Lcom/android/i18n/phonenumbers/prefixmapper/PrefixFileReader;";

        $r6 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r6);

        r15 = null;

        r16 = null;

     label01:
        r21 = new java.io.ObjectInputStream;

     label02:
        r15 = null;

        r16 = null;

     label03:
        specialinvoke r21.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

     label04:
        r15 = r21;

        r16 = r21;

     label05:
        r22 = new com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap;

     label06:
        r15 = r21;

        r16 = r21;

     label07:
        specialinvoke r22.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: void <init>()>();

     label08:
        r15 = r21;

        r16 = r21;

     label09:
        virtualinvoke r22.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: void readExternal(java.io.ObjectInput)>(r21);

     label10:
        r15 = r21;

        r16 = r21;

     label11:
        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r22);

     label12:
        r16 = r21;

        goto label16;

     label13:
        $r8 := @caughtexception;

        goto label17;

     label14:
        $r9 := @caughtexception;

        r15 = r16;

     label15:
        $r10 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger logger>;

        $r11 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        r23 = (java.io.IOException) $r9;

        $r12 = virtualinvoke r23.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r11, $r12);

     label16:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r16);

        return;

     label17:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r15);

        throw $r8;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    private boolean mayFallBackToEnglish(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("zh");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ja");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ko");

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        long $l0, $l1;
        int $i2, $i3, i4;
        boolean $z0;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r2;
        java.lang.String r3, r4, r5, r7, r8, r10;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap r6, r9;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r2 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        i4 = virtualinvoke r2.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        if i4 == 1 goto label1;

        goto label2;

     label1:
        $l0 = virtualinvoke r2.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()>();

        $l1 = $l0 / 10000000L;

        $i2 = (int) $l1;

        i4 = $i2 + 1000;

     label2:
        r6 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int,java.lang.String,java.lang.String,java.lang.String)>(i4, r3, r4, r5);

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: java.lang.String lookup(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r2);

        goto label4;

     label3:
        r7 = null;

     label4:
        if r7 == null goto label5;

        r8 = r7;

        $i3 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i3 != 0 goto label7;

     label5:
        r8 = r7;

        $z0 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: boolean mayFallBackToEnglish(java.lang.String)>(r3);

        if $z0 == 0 goto label7;

        r9 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int,java.lang.String,java.lang.String,java.lang.String)>(i4, "en", "", "");

        if r9 != null goto label6;

        return "";

     label6:
        r8 = virtualinvoke r9.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: java.lang.String lookup(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r2);

     label7:
        r10 = "";

        if r8 == null goto label8;

        r10 = r8;

     label8:
        return r10;
    }
}
