public class com.android.ims.ImsCall extends java.lang.Object implements com.android.ims.internal.ICall
{
    private static final boolean CONF_DBG;
    private static final boolean DBG;
    private static final boolean FORCE_DEBUG;
    private static final java.lang.String TAG;
    private static final int UPDATE_EXTEND_TO_CONFERENCE;
    private static final int UPDATE_HOLD;
    private static final int UPDATE_HOLD_MERGE;
    private static final int UPDATE_MERGE;
    private static final int UPDATE_NONE;
    private static final int UPDATE_RESUME;
    private static final int UPDATE_UNSPECIFIED;
    public static final int USSD_MODE_NOTIFY;
    public static final int USSD_MODE_REQUEST;
    private static final boolean VDBG;
    private static final java.util.concurrent.atomic.AtomicInteger sUniqueIdGenerator;
    private boolean mAnswerWithRtt;
    private android.telephony.ims.ImsCallProfile mCallProfile;
    private boolean mCallSessionMergePending;
    private java.util.List mConferenceParticipants;
    private android.content.Context mContext;
    private boolean mHold;
    private com.android.ims.ImsCall$ImsCallSessionListenerProxy mImsCallSessionListenerProxy;
    private boolean mInCall;
    private boolean mIsConferenceHost;
    private boolean mIsMerged;
    private android.telephony.ims.ImsReasonInfo mLastReasonInfo;
    private com.android.ims.ImsCall$Listener mListener;
    private java.lang.Object mLockObj;
    private com.android.ims.internal.ImsStreamMediaSession mMediaSession;
    private com.android.ims.ImsCall mMergeHost;
    private com.android.ims.ImsCall mMergePeer;
    private boolean mMergeRequestedByConference;
    private boolean mMute;
    private int mOverrideReason;
    private android.telephony.ims.ImsCallProfile mProposedCallProfile;
    private android.telephony.ims.ImsCallSession mSession;
    private boolean mSessionEndDuringMerge;
    private android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo;
    private boolean mTerminationRequestPending;
    private android.telephony.ims.ImsCallSession mTransientConferenceSession;
    private int mUpdateRequest;
    private boolean mWasVideoCall;
    public final int uniqueId;

    static void <clinit>()
    {
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r0;

        <com.android.ims.ImsCall: int USSD_MODE_REQUEST> = 1;

        <com.android.ims.ImsCall: int USSD_MODE_NOTIFY> = 0;

        <com.android.ims.ImsCall: int UPDATE_UNSPECIFIED> = 6;

        <com.android.ims.ImsCall: int UPDATE_RESUME> = 3;

        <com.android.ims.ImsCall: int UPDATE_NONE> = 0;

        <com.android.ims.ImsCall: int UPDATE_MERGE> = 4;

        <com.android.ims.ImsCall: int UPDATE_HOLD_MERGE> = 2;

        <com.android.ims.ImsCall: int UPDATE_HOLD> = 1;

        <com.android.ims.ImsCall: int UPDATE_EXTEND_TO_CONFERENCE> = 5;

        <com.android.ims.ImsCall: java.lang.String TAG> = "ImsCall";

        <com.android.ims.ImsCall: boolean FORCE_DEBUG> = 0;

        <com.android.ims.ImsCall: boolean CONF_DBG> = 1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ImsCall", 3);

        <com.android.ims.ImsCall: boolean DBG> = $z0;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ImsCall", 2);

        <com.android.ims.ImsCall: boolean VDBG> = $z1;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <com.android.ims.ImsCall: java.util.concurrent.atomic.AtomicInteger sUniqueIdGenerator> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0;
        android.content.Context r1;
        android.telephony.ims.ImsCallProfile r2;
        java.lang.Object $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i0;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.telephony.ims.ImsCallProfile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.ImsCall: java.lang.Object mLockObj> = $r3;

        r0.<com.android.ims.ImsCall: boolean mInCall> = 0;

        r0.<com.android.ims.ImsCall: boolean mHold> = 0;

        r0.<com.android.ims.ImsCall: boolean mMute> = 0;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener> = null;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = null;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = null;

        r0.<com.android.ims.ImsCall: boolean mMergeRequestedByConference> = 0;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo> = null;

        r0.<com.android.ims.ImsCall: com.android.ims.internal.ImsStreamMediaSession mMediaSession> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession> = null;

        r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge> = 0;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo> = null;

        r0.<com.android.ims.ImsCall: boolean mIsMerged> = 0;

        r0.<com.android.ims.ImsCall: boolean mCallSessionMergePending> = 0;

        r0.<com.android.ims.ImsCall: boolean mTerminationRequestPending> = 0;

        r0.<com.android.ims.ImsCall: boolean mIsConferenceHost> = 0;

        r0.<com.android.ims.ImsCall: boolean mWasVideoCall> = 0;

        r0.<com.android.ims.ImsCall: int mOverrideReason> = 0;

        r0.<com.android.ims.ImsCall: boolean mAnswerWithRtt> = 0;

        r0.<com.android.ims.ImsCall: android.content.Context mContext> = r1;

        virtualinvoke r0.<com.android.ims.ImsCall: void setCallProfile(android.telephony.ims.ImsCallProfile)>(r2);

        $r4 = <com.android.ims.ImsCall: java.util.concurrent.atomic.AtomicInteger sUniqueIdGenerator>;

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r0.<com.android.ims.ImsCall: int uniqueId> = $i0;

        return;
    }

    static void access$000(com.android.ims.ImsCall, java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>(r1);

        return;
    }

    static boolean access$100(com.android.ims.ImsCall, android.telephony.ims.ImsCallSession)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallSession r1;
        boolean $z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsCallSession;

        $z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isTransientConferenceSession(android.telephony.ims.ImsCallSession)>(r1);

        return $z0;
    }

    static int access$1000(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        int $i0;

        r0 := @parameter0: com.android.ims.ImsCall;

        $i0 = r0.<com.android.ims.ImsCall: int mOverrideReason>;

        return $i0;
    }

    static void access$1100(com.android.ims.ImsCall, android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsReasonInfo r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsReasonInfo;

        specialinvoke r0.<com.android.ims.ImsCall: void processCallTerminated(android.telephony.ims.ImsReasonInfo)>(r1);

        return;
    }

    static int access$1200(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        int $i0;

        r0 := @parameter0: com.android.ims.ImsCall;

        $i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        return $i0;
    }

    static int access$1202(com.android.ims.ImsCall, int)
    {
        com.android.ims.ImsCall r0;
        int i0;

        r0 := @parameter0: com.android.ims.ImsCall;

        i0 := @parameter1: int;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = i0;

        return i0;
    }

    static void access$1300(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;

        r0 := @parameter0: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void mergeInternal()>();

        return;
    }

    static boolean access$1402(com.android.ims.ImsCall, boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        z0 := @parameter1: boolean;

        r0.<com.android.ims.ImsCall: boolean mHold> = z0;

        return z0;
    }

    static java.lang.Object access$1500(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        return $r1;
    }

    static boolean access$1600(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        $z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergeHost()>();

        return $z0;
    }

    static com.android.ims.ImsCall access$1700(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0, $r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        return $r1;
    }

    static void access$1800(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;

        r0 := @parameter0: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void processMergeComplete()>();

        return;
    }

    static android.telephony.ims.ImsCallSession access$1902(com.android.ims.ImsCall, android.telephony.ims.ImsCallSession)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallSession r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsCallSession;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession> = r1;

        return r1;
    }

    static com.android.ims.ImsCall$Listener access$200(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        return $r1;
    }

    static android.telephony.ims.ImsCallProfile access$2002(com.android.ims.ImsCall, android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsCallProfile;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile> = r1;

        return r1;
    }

    static com.android.ims.ImsCall access$2100(com.android.ims.ImsCall, android.telephony.ims.ImsCallSession, android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0, $r3;
        android.telephony.ims.ImsCallSession r1;
        android.telephony.ims.ImsCallProfile r2;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsCallSession;

        r2 := @parameter2: android.telephony.ims.ImsCallProfile;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: com.android.ims.ImsCall createNewCall(android.telephony.ims.ImsCallSession,android.telephony.ims.ImsCallProfile)>(r1, r2);

        return $r3;
    }

    static boolean access$2200()
    {
        boolean $z0;

        $z0 = <com.android.ims.ImsCall: boolean VDBG>;

        return $z0;
    }

    static android.telephony.ims.ImsCallProfile access$300(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile $r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        return $r1;
    }

    static void access$400(com.android.ims.ImsCall, java.lang.String, java.lang.Throwable)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    static void access$500(com.android.ims.ImsCall, boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(z0);

        return;
    }

    static void access$600(com.android.ims.ImsCall, java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>(r1);

        return;
    }

    static boolean access$700(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        $z0 = r0.<com.android.ims.ImsCall: boolean mIsConferenceHost>;

        return $z0;
    }

    static boolean access$702(com.android.ims.ImsCall, boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;

        r0 := @parameter0: com.android.ims.ImsCall;

        z0 := @parameter1: boolean;

        r0.<com.android.ims.ImsCall: boolean mIsConferenceHost> = z0;

        return z0;
    }

    static android.telephony.ims.ImsReasonInfo access$802(com.android.ims.ImsCall, android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsReasonInfo r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsReasonInfo;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo> = r1;

        return r1;
    }

    static void access$900(com.android.ims.ImsCall, android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsReasonInfo r1;

        r0 := @parameter0: com.android.ims.ImsCall;

        r1 := @parameter1: android.telephony.ims.ImsReasonInfo;

        specialinvoke r0.<com.android.ims.ImsCall: void processMergeFailed(android.telephony.ims.ImsReasonInfo)>(r1);

        return;
    }

    private java.lang.String appendImsCallInfoToString(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ImsCall=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void clear(android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsReasonInfo r1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: android.telephony.ims.ImsReasonInfo;

        r0.<com.android.ims.ImsCall: boolean mInCall> = 0;

        r0.<com.android.ims.ImsCall: boolean mHold> = 0;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo> = r1;

        return;
    }

    private void clearMergeInfo()
    {
        com.android.ims.ImsCall r0, r1, r2;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("clearMergeInfo :: clearing all merge info");

        r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if r1 == null goto label1;

        r1.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = null;

        r1.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

        r1.<com.android.ims.ImsCall: boolean mCallSessionMergePending> = 0;

     label1:
        r2 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if r2 == null goto label2;

        r2.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = null;

        r2.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

        r2.<com.android.ims.ImsCall: boolean mCallSessionMergePending> = 0;

     label2:
        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = null;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = null;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

        r0.<com.android.ims.ImsCall: boolean mCallSessionMergePending> = 0;

        return;
    }

    private void clearSessionTerminationFlags()
    {
        com.android.ims.ImsCall r0;

        r0 := @this: com.android.ims.ImsCall;

        r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge> = 0;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo> = null;

        return;
    }

    private android.telephony.ims.ImsCallSession$Listener createCallSessionListener()
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$ImsCallSessionListenerProxy $r2;

        r0 := @this: com.android.ims.ImsCall;

        $r2 = new com.android.ims.ImsCall$ImsCallSessionListenerProxy;

        specialinvoke $r2.<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void <init>(com.android.ims.ImsCall)>(r0);

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$ImsCallSessionListenerProxy mImsCallSessionListenerProxy> = $r2;

        return $r2;
    }

    private android.telephony.ims.ImsStreamMediaProfile createHoldMediaProfile()
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile r2, $r5;
        android.telephony.ims.ImsStreamMediaProfile $r3, $r4, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.ims.ImsCall;

        $r3 = new android.telephony.ims.ImsStreamMediaProfile;

        specialinvoke $r3.<android.telephony.ims.ImsStreamMediaProfile: void <init>()>();

        r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        if r2 != null goto label1;

        return $r3;

     label1:
        $r4 = r2.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i0 = $r4.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality> = $i0;

        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r6 = $r5.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i1 = $r6.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality>;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality> = $i1;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mAudioDirection> = 2;

        $i2 = $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality>;

        if $i2 == 0 goto label2;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoDirection> = 2;

     label2:
        return $r3;
    }

    private com.android.ims.ImsCall createNewCall(android.telephony.ims.ImsCallSession, android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0, $r1, r7;
        android.content.Context $r2;
        com.android.ims.ImsException $r3;
        android.telephony.ims.ImsCallSession r4;
        android.telephony.ims.ImsCallProfile r5;

        r0 := @this: com.android.ims.ImsCall;

        r4 := @parameter0: android.telephony.ims.ImsCallSession;

        r5 := @parameter1: android.telephony.ims.ImsCallProfile;

        $r1 = new com.android.ims.ImsCall;

        $r2 = r0.<com.android.ims.ImsCall: android.content.Context mContext>;

        specialinvoke $r1.<com.android.ims.ImsCall: void <init>(android.content.Context,android.telephony.ims.ImsCallProfile)>($r2, r5);

     label1:
        virtualinvoke $r1.<com.android.ims.ImsCall: void attachSession(android.telephony.ims.ImsCallSession)>(r4);

     label2:
        r7 = $r1;

        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r1.<com.android.ims.ImsCall: void close()>();

        r7 = null;

     label4:
        return r7;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    private android.telephony.ims.ImsStreamMediaProfile createResumeMediaProfile()
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile r2, $r5;
        android.telephony.ims.ImsStreamMediaProfile $r3, $r4, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.ims.ImsCall;

        $r3 = new android.telephony.ims.ImsStreamMediaProfile;

        specialinvoke $r3.<android.telephony.ims.ImsStreamMediaProfile: void <init>()>();

        r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        if r2 != null goto label1;

        return $r3;

     label1:
        $r4 = r2.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i0 = $r4.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality>;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mAudioQuality> = $i0;

        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r6 = $r5.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $i1 = $r6.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality>;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality> = $i1;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mAudioDirection> = 3;

        $i2 = $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoQuality>;

        if $i2 == 0 goto label2;

        $r3.<android.telephony.ims.ImsStreamMediaProfile: int mVideoDirection> = 3;

     label2:
        return $r3;
    }

    private void enforceConversationMode()
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCall;

        $z0 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        if $z0 == 0 goto label1;

        r0.<com.android.ims.ImsCall: boolean mHold> = 0;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

     label1:
        return;
    }

    private boolean isMergeHost()
    {
        com.android.ims.ImsCall r0, $r1, $r2;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r2 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isMergePeer()
    {
        com.android.ims.ImsCall r0, $r1, $r2;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r1 != null goto label1;

        $r2 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isMerging()
    {
        com.android.ims.ImsCall r0, $r1, $r2;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r1 != null goto label2;

        $r2 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r2 == null goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public static boolean isSessionAlive(android.telephony.ims.ImsCallSession)
    {
        android.telephony.ims.ImsCallSession r0;
        boolean $z0, z1;

        r0 := @parameter0: android.telephony.ims.ImsCallSession;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<android.telephony.ims.ImsCallSession: boolean isAlive()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isTransientConferenceSession(android.telephony.ims.ImsCallSession)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallSession r1, $r2, $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: android.telephony.ims.ImsCallSession;

        if r1 == null goto label1;

        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if r1 == $r2 goto label1;

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        if r1 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isUpdatePending(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0, r6;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        r0 := @this: com.android.ims.ImsCall;

        r6 := @parameter0: com.android.ims.ImsCall;

        if r6 == null goto label1;

        $i0 = r6.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge :: update is in progress; request=");

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>($r5);

        return 1;

     label1:
        return 0;
    }

    private void logd(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String appendImsCallInfoToString(java.lang.String)>(r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImsCall", $r2);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String appendImsCallInfoToString(java.lang.String)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImsCall", $r2);

        return;
    }

    private void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String appendImsCallInfoToString(java.lang.String)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ImsCall", $r3, r2);

        return;
    }

    private void logi(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String appendImsCallInfoToString(java.lang.String)>(r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsCall", $r2);

        return;
    }

    private void logv(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String appendImsCallInfoToString(java.lang.String)>(r1);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ImsCall", $r2);

        return;
    }

    private void markCallAsMerged(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0, $z1;
        android.telephony.ims.ImsCallSession $r1;
        android.telephony.ims.ImsReasonInfo $r2;
        short s0;
        java.lang.String r3;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $z1 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r1);

        if $z1 != 0 goto label3;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("markCallAsMerged");

        virtualinvoke r0.<com.android.ims.ImsCall: void setIsMerged(boolean)>(z0);

        r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge> = 1;

        if z0 == 0 goto label1;

        s0 = 510;

        r3 = "Call ended by network";

        goto label2;

     label1:
        s0 = 108;

        r3 = "Call ended during conference merge process.";

     label2:
        $r2 = new android.telephony.ims.ImsReasonInfo;

        specialinvoke $r2.<android.telephony.ims.ImsReasonInfo: void <init>(int,int,java.lang.String)>(s0, 0, r3);

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo> = $r2;

     label3:
        return;
    }

    private void merge() throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21, $r24;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.telephony.ims.ImsCallSession $r8, $r16, $r25;
        android.content.Context $r14;
        android.content.res.Resources $r15;
        android.telephony.ims.ImsStreamMediaProfile $r17;
        java.lang.Throwable $r22;
        com.android.ims.ImsException r23, r26, r27;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("merge :: ");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isUpdatePending(com.android.ims.ImsCall)>(r0);

        if $z0 == 0 goto label04;

        specialinvoke r0.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

        $r18 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r18 == null goto label02;

        $r21 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r21.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

     label02:
        $r19 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r19 == null goto label03;

        $r20 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        specialinvoke $r20.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

     label03:
        r23 = new com.android.ims.ImsException;

        specialinvoke r23.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call update is in progress", 102);

        throw r23;

     label04:
        $r2 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $z1 = specialinvoke r0.<com.android.ims.ImsCall: boolean isUpdatePending(com.android.ims.ImsCall)>($r2);

        if $z1 != 0 goto label17;

        $r7 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $z2 = specialinvoke r0.<com.android.ims.ImsCall: boolean isUpdatePending(com.android.ims.ImsCall)>($r7);

        if $z2 == 0 goto label06;

     label05:
        goto label17;

     label06:
        $r8 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r8 == null goto label16;

        $z3 = r0.<com.android.ims.ImsCall: boolean mHold>;

        if $z3 != 0 goto label10;

        $r14 = r0.<com.android.ims.ImsCall: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $z8 = virtualinvoke $r15.<android.content.res.Resources: boolean getBoolean(int)>(17891612);

        if $z8 == 0 goto label08;

     label07:
        goto label10;

     label08:
        $r16 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $r17 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsStreamMediaProfile createHoldMediaProfile()>();

        virtualinvoke $r16.<android.telephony.ims.ImsCallSession: void hold(android.telephony.ims.ImsStreamMediaProfile)>($r17);

        r0.<com.android.ims.ImsCall: boolean mHold> = 1;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 2;

     label09:
        goto label14;

     label10:
        $r9 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r9 == null goto label12;

        $r12 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $z6 = virtualinvoke $r12.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z6 != 0 goto label12;

        $z7 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z7 != 0 goto label12;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 4;

        $r13 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r13.<com.android.ims.ImsCall: int mUpdateRequest> = 4;

     label11:
        goto label13;

     label12:
        $r24 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r24 == null goto label13;

        $r10 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $z4 = virtualinvoke $r10.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z4 != 0 goto label13;

        $z5 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z5 != 0 goto label13;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 4;

        $r11 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $r11.<com.android.ims.ImsCall: int mUpdateRequest> = 4;

     label13:
        $r25 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r25.<android.telephony.ims.ImsCallSession: void merge()>();

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("merge :: no call session");

        r26 = new com.android.ims.ImsException;

        specialinvoke r26.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r26;

     label17:
        specialinvoke r0.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

        $r3 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r3 == null goto label18;

        $r6 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r6.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

     label18:
        $r4 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        if $r4 == null goto label19;

        $r5 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        specialinvoke $r5.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

     label19:
        r27 = new com.android.ims.ImsException;

        specialinvoke r27.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Peer or host call update is in progress", 102);

        throw r27;

     label20:
        $r22 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    private void mergeInternal()
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallSession $r1;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("mergeInternal :: ");

        $r1 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<android.telephony.ims.ImsCallSession: void merge()>();

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 4;

        return;
    }

    private void notifyConferenceSessionTerminated(android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsReasonInfo r3;

        r0 := @this: com.android.ims.ImsCall;

        r3 := @parameter0: android.telephony.ims.ImsReasonInfo;

        r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        specialinvoke r0.<com.android.ims.ImsCall: void clear(android.telephony.ims.ImsReasonInfo)>(r3);

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<com.android.ims.ImsCall$Listener: void onCallTerminated(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>(r0, r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("notifyConferenceSessionTerminated :: ", $r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void notifyConferenceStateUpdated(android.telephony.ims.ImsConferenceState)
    {
        com.android.ims.ImsCall r0;
        java.util.List r1;
        java.util.HashMap $r2;
        java.lang.Throwable $r3;
        android.telephony.ims.ImsConferenceState r4;
        com.android.ims.ImsCall$Listener r5;

        r0 := @this: com.android.ims.ImsCall;

        r4 := @parameter0: android.telephony.ims.ImsConferenceState;

        if r4 == null goto label6;

        $r2 = r4.<android.telephony.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        if $r2 != null goto label1;

        goto label6;

     label1:
        r1 = staticinvoke <com.android.ims.ImsCall: java.util.List parseConferenceState(android.telephony.ims.ImsConferenceState)>(r4);

        r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants> = r1;

        if r1 == null goto label5;

        r5 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        if r5 == null goto label5;

     label2:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onConferenceParticipantsStateChanged(com.android.ims.ImsCall,java.util.List)>(r0, r1);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("notifyConferenceStateUpdated :: ", $r3);

     label5:
        return;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void notifySessionTerminatedDuringMerge()
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener r1;
        boolean $z0, z1;
        java.lang.Throwable $r2, $r3;
        android.telephony.ims.ImsReasonInfo r4;

        r0 := @this: com.android.ims.ImsCall;

        z1 = 0;

        r4 = null;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

     label02:
        $z0 = r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge>;

        if $z0 == 0 goto label05;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("notifySessionTerminatedDuringMerge ::reporting terminate during merge");

     label03:
        z1 = 1;

     label04:
        r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo>;

     label05:
        specialinvoke r0.<com.android.ims.ImsCall: void clearSessionTerminationFlags()>();

        exitmonitor r0;

     label06:
        if r1 == null goto label10;

        if z1 == 0 goto label10;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void processCallTerminated(android.telephony.ims.ImsReasonInfo)>(r4);

     label08:
        goto label10;

     label09:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("notifySessionTerminatedDuringMerge :: ", $r2);

     label10:
        return;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static java.util.List parseConferenceState(android.telephony.ims.ImsConferenceState)
    {
        java.util.Iterator r0;
        java.lang.String r2, r3, r4, $r13, $r18, $r21, $r25, r31, r33;
        int i0, $i1;
        java.util.HashMap $r6;
        java.util.ArrayList $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10;
        java.lang.StringBuilder $r11;
        com.android.ims.internal.ConferenceParticipant $r26;
        java.util.List $r27;
        android.telephony.ims.ImsConferenceState r28;
        java.util.Set r29;
        java.util.Map$Entry r30;
        android.os.Bundle r32;
        android.net.Uri r34, r35;

        r28 := @parameter0: android.telephony.ims.ImsConferenceState;

        $r6 = r28.<android.telephony.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        r29 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        if r29 != null goto label1;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r27;

     label1:
        r0 = interfaceinvoke r29.<java.util.Set: java.util.Iterator iterator()>();

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke r29.<java.util.Set: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

     label2:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        r31 = (java.lang.String) $r9;

        $r10 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        r32 = (android.os.Bundle) $r10;

        r2 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("status");

        r3 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("user");

        r4 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("display-text");

        r33 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("endpoint");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyConferenceStateUpdated :: key=");

        $r13 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsCall", r31);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", user=");

        $r18 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsCall", r3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", displayName= ");

        $r21 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsCall", r4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", endpoint=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r25 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ImsCall", $r25);

        r34 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);

        if r33 != null goto label3;

        r33 = "";

        goto label3;

     label3:
        r35 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r33);

        i0 = staticinvoke <android.telephony.ims.ImsConferenceState: int getConnectionStateForStatus(java.lang.String)>(r2);

        if i0 == 6 goto label4;

        $r26 = new com.android.ims.internal.ConferenceParticipant;

        specialinvoke $r26.<com.android.ims.internal.ConferenceParticipant: void <init>(android.net.Uri,java.lang.String,android.net.Uri,int,int)>(r34, r4, r35, i0, -1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label4;

     label4:
        goto label2;

     label5:
        return $r7;
    }

    private void processCallTerminated(android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8;
        android.telephony.ims.ImsReasonInfo r9;
        com.android.ims.ImsCall$Listener r11;

        r0 := @this: com.android.ims.ImsCall;

        r9 := @parameter0: android.telephony.ims.ImsReasonInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCallTerminated :: reason=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userInitiated = ");

        $z0 = r0.<com.android.ims.ImsCall: boolean mTerminationRequestPending>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r6);

        entermonitor r0;

     label01:
        $z1 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z1 == 0 goto label03;

        $z3 = r0.<com.android.ims.ImsCall: boolean mTerminationRequestPending>;

        if $z3 != 0 goto label03;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("processCallTerminated :: burying termination during ongoing merge.");

        r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge> = 1;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mSessionEndDuringMergeReasonInfo> = r9;

        exitmonitor r0;

     label02:
        return;

     label03:
        $z2 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z2 == 0 goto label05;

        specialinvoke r0.<com.android.ims.ImsCall: void notifyConferenceSessionTerminated(android.telephony.ims.ImsReasonInfo)>(r9);

        exitmonitor r0;

     label04:
        return;

     label05:
        r11 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        specialinvoke r0.<com.android.ims.ImsCall: void clear(android.telephony.ims.ImsReasonInfo)>(r9);

        exitmonitor r0;

     label06:
        if r11 == null goto label10;

     label07:
        virtualinvoke r11.<com.android.ims.ImsCall$Listener: void onCallTerminated(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>(r0, r9);

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("processCallTerminated :: ", $r8);

     label10:
        return;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void processMergeComplete()
    {
        com.android.ims.ImsCall r0, $r3, $r6, $r7, $r12, $r14, $r15, $r17, $r21, $r22, r26, r27, r29, $r30, r31;
        java.lang.StringBuilder r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        android.telephony.ims.ImsCallSession $r2, $r4, $r5, $r13, $r16, r28;
        java.util.List $r11, $r18, $r19, $r20, r36;
        java.lang.Throwable $r23, $r24, $r25;
        java.lang.String $r32;
        com.android.ims.ImsCall$Listener r34;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("processMergeComplete :: ");

        $z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergeHost()>();

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("processMergeComplete :: We are not the merge host!");

        return;

     label01:
        z9 = 0;

        entermonitor r0;

     label02:
        $z1 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z1 == 0 goto label09;

        virtualinvoke r0.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

     label03:
        $z8 = r0.<com.android.ims.ImsCall: boolean mMergeRequestedByConference>;

        if $z8 != 0 goto label05;

        r0.<com.android.ims.ImsCall: boolean mHold> = 0;

     label04:
        z9 = 1;

     label05:
        $r22 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r22.<com.android.ims.ImsCall: void markCallAsMerged(boolean)>(0);

     label06:
        r26 = r0;

     label07:
        r27 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

     label08:
        goto label30;

     label09:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        if $r2 != null goto label11;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("processMergeComplete :: No transient session!");

        exitmonitor r0;

     label10:
        return;

     label11:
        $r3 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r3 != null goto label13;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("processMergeComplete :: No merge peer!");

        exitmonitor r0;

     label12:
        return;

     label13:
        r28 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession> = null;

        virtualinvoke r28.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>(null);

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $z2 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r4);

        if $z2 == 0 goto label18;

        $r15 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r16 = virtualinvoke $r15.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        $z6 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r16);

        if $z6 != 0 goto label18;

        $r17 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r17.<com.android.ims.ImsCall: boolean mHold> = 0;

        r0.<com.android.ims.ImsCall: boolean mHold> = 1;

        $r18 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        if $r18 == null goto label14;

        $r19 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        $z7 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>();

        if $z7 != 0 goto label14;

        $r21 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r20 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        $r21.<com.android.ims.ImsCall: java.util.List mConferenceParticipants> = $r20;

     label14:
        r29 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

     label15:
        z9 = 1;

     label16:
        virtualinvoke r0.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

        $r30 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        virtualinvoke $r30.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("processMergeComplete :: transient will transfer to merge peer");

     label17:
        r31 = r0;

        goto label28;

     label18:
        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $z3 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r5);

        if $z3 != 0 goto label24;

        $r12 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r13 = virtualinvoke $r12.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getCallSession()>();

        $z5 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r13);

        if $z5 == 0 goto label24;

     label19:
        r29 = r0;

     label20:
        r31 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

     label21:
        z9 = 0;

     label22:
        virtualinvoke r0.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

        $r14 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        virtualinvoke $r14.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("processMergeComplete :: transient will stay with the merge host");

     label23:
        goto label28;

     label24:
        r29 = r0;

     label25:
        r31 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $r6 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r6.<com.android.ims.ImsCall: void markCallAsMerged(boolean)>(0);

     label26:
        z9 = 0;

     label27:
        virtualinvoke r0.<com.android.ims.ImsCall: void setIsMerged(boolean)>(0);

        $r7 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        virtualinvoke $r7.<com.android.ims.ImsCall: void setIsMerged(boolean)>(1);

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("processMergeComplete :: transient will stay with us (I\'m the host).");

     label28:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processMergeComplete :: call=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is the final host");

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r32);

        specialinvoke r29.<com.android.ims.ImsCall: void setTransientSessionAsPrimary(android.telephony.ims.ImsCallSession)>(r28);

     label29:
        r27 = r31;

        r26 = r29;

     label30:
        r34 = r26.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        staticinvoke <com.android.ims.ImsCall: void updateCallProfile(com.android.ims.ImsCall)>(r27);

        staticinvoke <com.android.ims.ImsCall: void updateCallProfile(com.android.ims.ImsCall)>(r26);

        specialinvoke r0.<com.android.ims.ImsCall: void clearMergeInfo()>();

        specialinvoke r27.<com.android.ims.ImsCall: void notifySessionTerminatedDuringMerge()>();

        specialinvoke r26.<com.android.ims.ImsCall: void clearSessionTerminationFlags()>();

        r26.<com.android.ims.ImsCall: boolean mIsConferenceHost> = 1;

        exitmonitor r0;

     label31:
        if r34 == null goto label39;

     label32:
        virtualinvoke r34.<com.android.ims.ImsCall$Listener: void onCallMerged(com.android.ims.ImsCall,com.android.ims.ImsCall,boolean)>(r26, r27, z9);

     label33:
        goto label35;

     label34:
        $r23 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("processMergeComplete :: ", $r23);

     label35:
        r36 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        if r36 == null goto label39;

        $z4 = interfaceinvoke r36.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label39;

     label36:
        $r11 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        virtualinvoke r34.<com.android.ims.ImsCall$Listener: void onConferenceParticipantsStateChanged(com.android.ims.ImsCall,java.util.List)>(r26, $r11);

     label37:
        goto label39;

     label38:
        $r25 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("processMergeComplete :: ", $r25);

     label39:
        return;

     label40:
        $r24 := @caughtexception;

     label41:
        exitmonitor r0;

     label42:
        throw $r24;

        catch java.lang.Throwable from label02 to label03 with label40;
        catch java.lang.Throwable from label03 to label04 with label40;
        catch java.lang.Throwable from label05 to label06 with label40;
        catch java.lang.Throwable from label07 to label08 with label40;
        catch java.lang.Throwable from label09 to label10 with label40;
        catch java.lang.Throwable from label11 to label12 with label40;
        catch java.lang.Throwable from label13 to label14 with label40;
        catch java.lang.Throwable from label14 to label15 with label40;
        catch java.lang.Throwable from label16 to label17 with label40;
        catch java.lang.Throwable from label18 to label19 with label40;
        catch java.lang.Throwable from label20 to label21 with label40;
        catch java.lang.Throwable from label22 to label23 with label40;
        catch java.lang.Throwable from label25 to label26 with label40;
        catch java.lang.Throwable from label27 to label28 with label40;
        catch java.lang.Throwable from label28 to label29 with label40;
        catch java.lang.Throwable from label30 to label31 with label40;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.lang.Throwable from label41 to label42 with label40;
    }

    private void processMergeFailed(android.telephony.ims.ImsReasonInfo)
    {
        com.android.ims.ImsCall r0, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        android.telephony.ims.ImsCallSession $r5, $r10;
        java.lang.Throwable $r11, $r12;
        android.telephony.ims.ImsReasonInfo r13;
        com.android.ims.ImsCall$Listener r15;

        r0 := @this: com.android.ims.ImsCall;

        r13 := @parameter0: android.telephony.ims.ImsReasonInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processMergeFailed :: reason=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        entermonitor r0;

     label01:
        $z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergeHost()>();

        if $z0 != 0 goto label03;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("processMergeFailed :: We are not the merge host!");

        exitmonitor r0;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        if $r5 == null goto label04;

        $r10 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        virtualinvoke $r10.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>(null);

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession> = null;

     label04:
        r15 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        specialinvoke r0.<com.android.ims.ImsCall: void markCallAsMerged(boolean)>(1);

        specialinvoke r0.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

        specialinvoke r0.<com.android.ims.ImsCall: void notifySessionTerminatedDuringMerge()>();

        $r6 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        if $r6 == null goto label06;

        $r7 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r7.<com.android.ims.ImsCall: void markCallAsMerged(boolean)>(1);

        $r8 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r8.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(0);

        $r9 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        specialinvoke $r9.<com.android.ims.ImsCall: void notifySessionTerminatedDuringMerge()>();

     label05:
        goto label07;

     label06:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("processMergeFailed :: No merge peer!");

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void clearMergeInfo()>();

        exitmonitor r0;

     label08:
        if r15 == null goto label12;

     label09:
        virtualinvoke r15.<com.android.ims.ImsCall$Listener: void onCallMergeFailed(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>(r0, r13);

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("processMergeFailed :: ", $r12);

     label12:
        return;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void setCallSessionMergePending(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        r0.<com.android.ims.ImsCall: boolean mCallSessionMergePending> = z0;

        return;
    }

    private void setMergePeer(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0, r1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: com.android.ims.ImsCall;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = r1;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = null;

        r1.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = r0;

        r1.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = null;

        return;
    }

    private void setTransientSessionAsPrimary(android.telephony.ims.ImsCallSession)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallSession $r1, r4;
        android.telephony.ims.ImsCallSession$Listener $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r4 := @parameter0: android.telephony.ims.ImsCallSession;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>(null);

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = r4;

        $r2 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession$Listener createCallSessionListener()>();

        virtualinvoke r4.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>($r2);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean shouldProcessConferenceResult()
    {
        com.android.ims.ImsCall r0, $r6, $r9, $r11, $r13, $r17, $r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, z14, $z16, $z17;
        java.lang.StringBuilder r1, r19, r20;
        java.lang.String $r4, $r8, $r15, r22;
        android.telephony.ims.ImsCallSession $r10, $r16;
        java.lang.Throwable $r18;

        r0 := @this: com.android.ims.ImsCall;

        z11 = 0;

        entermonitor r0;

     label01:
        z0 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergeHost()>();

     label02:
        z12 = 0;

        if z0 != 0 goto label05;

     label03:
        $z10 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergePeer()>();

        if $z10 != 0 goto label05;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("shouldProcessConferenceResult :: no merge in progress");

        exitmonitor r0;

     label04:
        return 0;

     label05:
        $z1 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergeHost()>();

        if $z1 == 0 goto label11;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("shouldProcessConferenceResult :: We are a merge host");

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldProcessConferenceResult :: Here is the merge peer=");

        $r13 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r15);

        $z7 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z7 != 0 goto label07;

        $r17 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer>;

        $z9 = virtualinvoke $r17.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z9 != 0 goto label07;

     label06:
        z14 = 1;

        goto label08;

     label07:
        z14 = 0;

     label08:
        z11 = z14;

     label09:
        $z16 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z16 != 0 goto label18;

        $r16 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        $z8 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r16);

        z11 = z14 & $z8;

     label10:
        goto label18;

     label11:
        $z2 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergePeer()>();

        if $z2 == 0 goto label17;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("shouldProcessConferenceResult :: We are a merge peer");

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldProcessConferenceResult :: Here is the merge host=");

        $r6 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r8);

        $z3 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z3 != 0 goto label13;

        $r11 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $z6 = virtualinvoke $r11.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z6 != 0 goto label13;

     label12:
        z12 = 1;

        goto label13;

     label13:
        $r21 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $z17 = virtualinvoke $r21.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z17 != 0 goto label15;

        $r9 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost>;

        $r10 = $r9.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        $z5 = staticinvoke <com.android.ims.ImsCall: boolean isSessionAlive(android.telephony.ims.ImsCallSession)>($r10);

        z11 = z12 & $z5;

     label14:
        goto label18;

     label15:
        $z4 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        z11 = $z4 ^ 1;

     label16:
        goto label18;

     label17:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("shouldProcessConferenceResult : merge in progress but call is neither host nor peer.");

     label18:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldProcessConferenceResult :: returning:");

     label19:
        if z11 == 0 goto label20;

        r22 = "true";

        goto label21;

     label20:
        r22 = "false";

     label21:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        exitmonitor r0;

     label22:
        return z11;

     label23:
        $r18 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void throwImsException(java.lang.Throwable, int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Throwable r1;
        int i0;
        boolean $z0;
        com.android.ims.ImsException $r2, $r4;
        java.lang.String $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.Throwable;

        i0 := @parameter1: int;

        $z0 = r1 instanceof com.android.ims.ImsException;

        if $z0 == 0 goto label1;

        $r4 = (com.android.ims.ImsException) r1;

        throw $r4;

     label1:
        $r2 = new com.android.ims.ImsException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r2.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>($r3, r1, i0);

        throw $r2;
    }

    private void trackVideoStateHistory(android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0;
        android.telephony.ims.ImsCallProfile r1;
        boolean $z0, z1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: android.telephony.ims.ImsCallProfile;

        $z0 = r0.<com.android.ims.ImsCall: boolean mWasVideoCall>;

        if $z0 != 0 goto label2;

        if r1 == null goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = virtualinvoke r1.<android.telephony.ims.ImsCallProfile: boolean isVideoCall()>();

     label3:
        r0.<com.android.ims.ImsCall: boolean mWasVideoCall> = z1;

        return;
    }

    private void updateCallProfile()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, $r4;
        android.telephony.ims.ImsCallProfile $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $r5 = virtualinvoke $r4.<android.telephony.ims.ImsCallSession: android.telephony.ims.ImsCallProfile getCallProfile()>();

        virtualinvoke r0.<com.android.ims.ImsCall: void setCallProfile(android.telephony.ims.ImsCallProfile)>($r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static void updateCallProfile(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0;

        r0 := @parameter0: com.android.ims.ImsCall;

        if r0 == null goto label1;

        specialinvoke r0.<com.android.ims.ImsCall: void updateCallProfile()>();

     label1:
        return;
    }

    private java.lang.String updateRequestToString(int)
    {
        com.android.ims.ImsCall r0;
        int i0;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label8;
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return "UNKNOWN";

     label2:
        return "UNSPECIFIED";

     label3:
        return "EXTEND_TO_CONFERENCE";

     label4:
        return "MERGE";

     label5:
        return "RESUME";

     label6:
        return "HOLD_MERGE";

     label7:
        return "HOLD";

     label8:
        return "NONE";
    }

    public void accept(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        int i0;
        android.telephony.ims.ImsStreamMediaProfile $r1;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        $r1 = new android.telephony.ims.ImsStreamMediaProfile;

        specialinvoke $r1.<android.telephony.ims.ImsStreamMediaProfile: void <init>()>();

        virtualinvoke r0.<com.android.ims.ImsCall: void accept(int,android.telephony.ims.ImsStreamMediaProfile)>(i0, $r1);

        return;
    }

    public void accept(int, android.telephony.ims.ImsStreamMediaProfile) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;
        android.telephony.ims.ImsCallSession $r7, r14;
        android.telephony.ims.ImsCallProfile $r8, r15;
        java.lang.Throwable $r9, $r10;
        android.telephony.ims.ImsStreamMediaProfile r11;
        java.lang.Object r13;
        com.android.ims.ImsException r17, r18;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        r11 := @parameter1: android.telephony.ims.ImsStreamMediaProfile;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accept :: callType=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profile=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r6);

        $z0 = r0.<com.android.ims.ImsCall: boolean mAnswerWithRtt>;

        if $z0 == 0 goto label01;

        r11.<android.telephony.ims.ImsStreamMediaProfile: int mRttMode> = 1;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("accept :: changing media profile RTT mode to full");

     label01:
        r13 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r13;

     label02:
        r14 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label03:
        if r14 == null goto label12;

     label04:
        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void accept(int,android.telephony.ims.ImsStreamMediaProfile)>(i0, r11);

     label05:
        $z1 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        if $z1 == 0 goto label07;

        $r8 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile>;

        if $r8 == null goto label07;

        $z2 = <com.android.ims.ImsCall: boolean DBG>;

        if $z2 == 0 goto label06;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("accept :: call profile will be updated");

     label06:
        r15 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile>;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile> = r15;

        specialinvoke r0.<com.android.ims.ImsCall: void trackVideoStateHistory(android.telephony.ims.ImsCallProfile)>(r15);

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile> = null;

     label07:
        $z3 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        if $z3 == 0 goto label08;

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i1 != 6 goto label08;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

     label08:
        exitmonitor r13;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("accept :: ", $r9);

        r17 = new com.android.ims.ImsException;

        specialinvoke r17.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("accept()", $r9, 0);

        throw r17;

     label12:
        r18 = new com.android.ims.ImsException;

        specialinvoke r18.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call to answer", 148);

        throw r18;

     label13:
        $r10 := @caughtexception;

     label14:
        exitmonitor r13;

     label15:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void attachSession(android.telephony.ims.ImsCallSession) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.telephony.ims.ImsCallSession$Listener $r5;
        java.lang.Throwable $r6, $r7;
        android.telephony.ims.ImsCallSession r8;
        java.lang.Object r10;

        r0 := @this: com.android.ims.ImsCall;

        r8 := @parameter0: android.telephony.ims.ImsCallSession;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachSession :: session=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        r10 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r10;

     label01:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = r8;

     label02:
        $r5 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession$Listener createCallSessionListener()>();

        virtualinvoke r8.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>($r5);

     label03:
        goto label06;

     label04:
        $r6 := @caughtexception;

     label05:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("attachSession :: ", $r6);

        specialinvoke r0.<com.android.ims.ImsCall: void throwImsException(java.lang.Throwable,int)>($r6, 0);

     label06:
        exitmonitor r10;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r10;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean checkIfRemoteUserIsSame(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.String r1, $r3;
        android.telephony.ims.ImsCallProfile $r2;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r3 = virtualinvoke $r2.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String,java.lang.String)>("remote_uri", "");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public void close()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r4.<android.telephony.ims.ImsCallSession: void close()>();

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = null;

     label2:
        goto label4;

     label3:
        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("close :: Cannot close Null call session!");

     label4:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile> = null;

        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo> = null;

        r0.<com.android.ims.ImsCall: com.android.ims.internal.ImsStreamMediaSession mMediaSession> = null;

        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void conferenceStateUpdated(android.telephony.ims.ImsConferenceState)
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener r1;
        java.lang.Throwable $r2, $r3;
        android.telephony.ims.ImsConferenceState r4;

        r0 := @this: com.android.ims.ImsCall;

        r4 := @parameter0: android.telephony.ims.ImsConferenceState;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.ims.ImsCall: void notifyConferenceStateUpdated(android.telephony.ims.ImsConferenceState)>(r4);

        r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        exitmonitor r0;

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r1.<com.android.ims.ImsCall$Listener: void onCallConferenceStateUpdated(com.android.ims.ImsCall,android.telephony.ims.ImsConferenceState)>(r0, r4);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("callSessionConferenceStateUpdated :: ", $r2);

     label6:
        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void consultativeTransfer(com.android.ims.ImsCall) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0, r12;
        java.lang.StringBuilder $r1;
        android.telephony.ims.ImsCallSession $r3, $r8, $r9, r15;
        java.lang.String $r7;
        java.lang.Throwable $r10, $r11;
        java.lang.Object r14;
        com.android.ims.ImsException r17, r18;

        r0 := @this: com.android.ims.ImsCall;

        r12 := @parameter0: com.android.ims.ImsCall;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("consultativeTransfer :: session=");

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", other call=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r7);

        r14 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r14;

     label01:
        r15 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r15 == null goto label08;

     label03:
        $r8 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $r9 = virtualinvoke r12.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession getSession()>();

        virtualinvoke $r8.<android.telephony.ims.ImsCallSession: void transfer(android.telephony.ims.ImsCallSession)>($r9);

     label04:
        exitmonitor r14;

     label05:
        return;

     label06:
        $r11 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("consultativeTransfer :: ", $r11);

        r17 = new com.android.ims.ImsException;

        specialinvoke r17.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("consultativeTransfer()", $r11, 0);

        throw r17;

     label08:
        r18 = new com.android.ims.ImsException;

        specialinvoke r18.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call to transfer", 148);

        throw r18;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void deflect(java.lang.String) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        android.telephony.ims.ImsCallSession $r3, $r9, r15;
        java.lang.String $r6, $r8, r12;
        java.lang.Throwable $r10, $r11;
        java.lang.Object r14;
        com.android.ims.ImsException r17, r18;

        r0 := @this: com.android.ims.ImsCall;

        r12 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deflect :: session=");

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number=");

        $r6 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsCall", r12);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r8);

        r14 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r14;

     label01:
        r15 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r15 == null goto label08;

     label03:
        $r9 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r9.<android.telephony.ims.ImsCallSession: void deflect(java.lang.String)>(r12);

     label04:
        exitmonitor r14;

     label05:
        return;

     label06:
        $r11 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("deflect :: ", $r11);

        r17 = new com.android.ims.ImsException;

        specialinvoke r17.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("deflect()", $r11, 0);

        throw r17;

     label08:
        r18 = new com.android.ims.ImsException;

        specialinvoke r18.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call to deflect", 148);

        throw r18;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean equalsTo(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCall r0;
        com.android.ims.internal.ICall r1;
        boolean $z0, $z1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z1;

     label2:
        return 0;
    }

    public void extendToConference(java.lang.String[]) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.String $r3, $r5;
        android.telephony.ims.ImsCallSession $r6, $r7;
        com.android.ims.ImsException $r8, r11, r13;
        java.lang.Throwable $r9;
        java.lang.String[] r10;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.ims.ImsCall;

        r10 := @parameter0: java.lang.String[];

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("extendToConference ::");

        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isOnHold()>();

        if $z0 == 0 goto label2;

        $z1 = <com.android.ims.ImsCall: boolean DBG>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("extendToConference :: call is on hold");

     label1:
        $r8 = new com.android.ims.ImsException;

        specialinvoke $r8.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Not in a call to extend a call to conference", 102);

        throw $r8;

     label2:
        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label3:
        $i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i0 != 0 goto label6;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label5;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void extendToConference(java.lang.String[])>(r10);

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 5;

        exitmonitor r1;

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("extendToConference :: ");

        r11 = new com.android.ims.ImsException;

        specialinvoke r11.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r11;

     label6:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extendToConference :: update is in progress; request=");

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i1);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        r13 = new com.android.ims.ImsException;

        specialinvoke r13.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call update is in progress", 102);

        throw r13;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String getCallExtra(java.lang.String) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r2, r6;
        java.lang.Throwable $r3, $r4;
        java.lang.String r5, r7;
        com.android.ims.ImsException r9, r10;

        r0 := @this: com.android.ims.ImsCall;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r6 == null goto label08;

     label03:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        r7 = virtualinvoke $r2.<android.telephony.ims.ImsCallSession: java.lang.String getProperty(java.lang.String)>(r5);

     label04:
        exitmonitor r1;

     label05:
        return r7;

     label06:
        $r3 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("getCallExtra :: ", $r3);

        r9 = new com.android.ims.ImsException;

        specialinvoke r9.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getCallExtra()", $r3, 0);

        throw r9;

     label08:
        r10 = new com.android.ims.ImsException;

        specialinvoke r10.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r10;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.telephony.ims.ImsCallProfile getCallProfile()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallProfile r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.telephony.ims.ImsCallSession getCallSession()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallSession r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getConferenceParticipants()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.util.List $r3, $r6, $r7, $r8;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r10;
        java.util.ArrayList r11, r12;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getConferenceParticipants :: mConferenceParticipants");

        $r3 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        $r6 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        if $r6 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r7 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>(int)>(0);

        exitmonitor r1;

     label4:
        return r11;

     label5:
        r12 = new java.util.ArrayList;

        $r8 = r0.<com.android.ims.ImsCall: java.util.List mConferenceParticipants>;

        specialinvoke r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        exitmonitor r1;

     label6:
        return r12;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public com.android.ims.ImsCall$ImsCallSessionListenerProxy getImsCallSessionListenerProxy()
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$ImsCallSessionListenerProxy $r1;

        r0 := @this: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$ImsCallSessionListenerProxy mImsCallSessionListenerProxy>;

        return $r1;
    }

    public android.telephony.ims.ImsReasonInfo getLastReasonInfo()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsReasonInfo r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.ims.ImsCall$Listener getListener()
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @this: com.android.ims.ImsCall;

        $r1 = r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener>;

        return $r1;
    }

    public android.telephony.ims.ImsCallProfile getLocalCallProfile() throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        com.android.ims.ImsException r2, r9;
        android.telephony.ims.ImsCallSession $r3, r6;
        java.lang.Throwable $r4, $r5;
        android.telephony.ims.ImsCallProfile r7;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r6 == null goto label08;

     label03:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        r7 = virtualinvoke $r3.<android.telephony.ims.ImsCallSession: android.telephony.ims.ImsCallProfile getLocalCallProfile()>();

     label04:
        exitmonitor r1;

     label05:
        return r7;

     label06:
        $r4 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("getLocalCallProfile :: ", $r4);

        r2 = new com.android.ims.ImsException;

        specialinvoke r2.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getLocalCallProfile()", $r4, 0);

        throw r2;

     label08:
        r9 = new com.android.ims.ImsException;

        specialinvoke r9.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r9;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public com.android.ims.internal.ImsStreamMediaSession getMediaSession()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.ims.internal.ImsStreamMediaSession r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.ims.ImsCall: com.android.ims.internal.ImsStreamMediaSession mMediaSession>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getNetworkType()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        int i0, $i1, i2;
        java.lang.String r2, r9;
        android.telephony.ims.ImsCallProfile $r3, $r4, $r5, $r6;
        boolean $z0;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        if $r3 != null goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        i0 = virtualinvoke $r4.<android.telephony.ims.ImsCallProfile: int getCallExtraInt(java.lang.String,int)>("android.telephony.ims.extra.CALL_NETWORK_TYPE", 0);

     label04:
        i2 = i0;

        if i0 != 0 goto label11;

     label05:
        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        r2 = virtualinvoke $r5.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("CallRadioTech");

     label06:
        r9 = r2;

     label07:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label08;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        r9 = virtualinvoke $r6.<android.telephony.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("callRadioTech");

     label08:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

        i2 = staticinvoke <android.telephony.ServiceState: int rilRadioTechnologyToNetworkType(int)>($i1);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        i2 = 0;

     label11:
        exitmonitor r1;

     label12:
        return i2;

     label13:
        $r7 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.telephony.ims.ImsCallProfile getProposedCallProfile()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallProfile r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isInCall()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile>;

        exitmonitor r1;

     label4:
        return r3;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.telephony.ims.ImsCallProfile getRemoteCallProfile() throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, r6;
        java.lang.Throwable $r4, $r5;
        android.telephony.ims.ImsCallProfile r7;
        com.android.ims.ImsException r8, r9;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r6 == null goto label08;

     label03:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        r7 = virtualinvoke $r3.<android.telephony.ims.ImsCallSession: android.telephony.ims.ImsCallProfile getRemoteCallProfile()>();

     label04:
        exitmonitor r1;

     label05:
        return r7;

     label06:
        $r4 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("getRemoteCallProfile :: ", $r4);

        r8 = new com.android.ims.ImsException;

        specialinvoke r8.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getRemoteCallProfile()", $r4, 0);

        throw r8;

     label08:
        r9 = new com.android.ims.ImsException;

        specialinvoke r9.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r9;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.telephony.ims.ImsCallSession getSession()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallSession r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getState()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        int i0;
        android.telephony.ims.ImsCallSession $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        i0 = virtualinvoke $r4.<android.telephony.ims.ImsCallSession: int getState()>();

        exitmonitor r1;

     label4:
        return i0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean hasPendingUpdate()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i0 == 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void hold() throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.String $r3, $r5;
        android.telephony.ims.ImsCallSession $r6, $r7;
        android.telephony.ims.ImsStreamMediaProfile $r8;
        java.lang.Throwable $r9;
        com.android.ims.ImsException r10, r12;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("hold :: ");

        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isOnHold()>();

        if $z0 == 0 goto label2;

        $z1 = <com.android.ims.ImsCall: boolean DBG>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("hold :: call is already on hold");

     label1:
        return;

     label2:
        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label3:
        $i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i0 != 0 goto label6;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label5;

        r0.<com.android.ims.ImsCall: boolean mHold> = 1;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $r8 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsStreamMediaProfile createHoldMediaProfile()>();

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void hold(android.telephony.ims.ImsStreamMediaProfile)>($r8);

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 1;

        exitmonitor r1;

     label4:
        return;

     label5:
        r10 = new com.android.ims.ImsException;

        specialinvoke r10.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r10;

     label6:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hold :: update is in progress; request=");

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i1);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>($r5);

        r12 = new com.android.ims.ImsException;

        specialinvoke r12.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call update is in progress", 102);

        throw r12;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void inviteParticipants(java.lang.String[]) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String[] r5;
        com.android.ims.ImsException r6;

        r0 := @this: com.android.ims.ImsCall;

        r5 := @parameter0: java.lang.String[];

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("inviteParticipants ::");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r3.<android.telephony.ims.ImsCallSession: void inviteParticipants(java.lang.String[])>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("inviteParticipants :: ");

        r6 = new com.android.ims.ImsException;

        specialinvoke r6.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean isCallSessionMergePending()
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCall;

        $z0 = r0.<com.android.ims.ImsCall: boolean mCallSessionMergePending>;

        return $z0;
    }

    public boolean isConferenceHost()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.ims.ImsCall: boolean mIsConferenceHost>;

        if $z1 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z2;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isInCall()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isMergeRequestedByConf()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.ims.ImsCall: boolean mMergeRequestedByConference>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isMerged()
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCall;

        $z0 = r0.<com.android.ims.ImsCall: boolean mIsMerged>;

        return $z0;
    }

    public boolean isMultiparty()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0;
        android.telephony.ims.ImsCallSession $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 != null goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        z0 = virtualinvoke $r4.<android.telephony.ims.ImsCallSession: boolean isMultiparty()>();

        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isMuted()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.ims.ImsCall: boolean mMute>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isOnHold()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.ims.ImsCall: boolean mHold>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isPendingHold()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

     label2:
        z0 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isVideoCall()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallProfile $r3, $r4;
        boolean $z0, z1;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $z0 = virtualinvoke $r4.<android.telephony.ims.ImsCallProfile: boolean isVideoCall()>();

        if $z0 == 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isWifiCall()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallProfile r3;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

     label02:
        z0 = 0;

        if r3 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $i0 = virtualinvoke r0.<com.android.ims.ImsCall: int getNetworkType()>();

        if $i0 != 18 goto label07;

     label06:
        z0 = 1;

     label07:
        exitmonitor r1;

     label08:
        return z0;

     label09:
        $r2 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void merge(com.android.ims.ImsCall) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0, r7;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.android.ims.ImsException $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r6;
        java.lang.Object r9;

        r0 := @this: com.android.ims.ImsCall;

        r7 := @parameter0: com.android.ims.ImsCall;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge(1) :: bgImsCall=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        if r7 == null goto label13;

        r9 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r9;

     label01:
        specialinvoke r0.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(1);

        specialinvoke r7.<com.android.ims.ImsCall: void setCallSessionMergePending(boolean)>(1);

        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z0 != 0 goto label02;

        $z3 = virtualinvoke r7.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z3 == 0 goto label03;

     label02:
        $z1 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z1 == 0 goto label05;

     label03:
        specialinvoke r0.<com.android.ims.ImsCall: void setMergePeer(com.android.ims.ImsCall)>(r7);

     label04:
        goto label06;

     label05:
        virtualinvoke r0.<com.android.ims.ImsCall: void setMergeHost(com.android.ims.ImsCall)>(r7);

     label06:
        exitmonitor r9;

     label07:
        $z2 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z2 == 0 goto label08;

        r0.<com.android.ims.ImsCall: boolean mMergeRequestedByConference> = 1;

        goto label09;

     label08:
        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("merge : mMergeRequestedByConference not set");

     label09:
        specialinvoke r0.<com.android.ims.ImsCall: void merge()>();

        return;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r9;

     label12:
        throw $r6;

     label13:
        $r5 = new com.android.ims.ImsException;

        specialinvoke $r5.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No background call", 101);

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void reject(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.telephony.ims.ImsCallSession $r6, $r8;
        boolean $z0, $z1, $z2;
        android.telephony.ims.ImsCallProfile $r7;
        java.lang.Throwable $r9;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reject :: reason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label2;

        $r8 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r8.<android.telephony.ims.ImsCallSession: void reject(int)>(i0);

     label2:
        $z0 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        if $z0 == 0 goto label4;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile>;

        if $r7 == null goto label4;

        $z1 = <com.android.ims.ImsCall: boolean DBG>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("reject :: call profile is not updated; destroy it...");

     label3:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mProposedCallProfile> = null;

     label4:
        $z2 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        if $z2 == 0 goto label5;

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i1 != 6 goto label5;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 0;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void removeParticipants(java.lang.String[]) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        android.telephony.ims.ImsCallSession $r3, $r6, $r7;
        java.lang.String $r5;
        java.lang.Throwable $r8;
        java.lang.String[] r9;
        java.lang.Object r11;
        com.android.ims.ImsException r12;

        r0 := @this: com.android.ims.ImsCall;

        r9 := @parameter0: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeParticipants :: session=");

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        r11 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r11;

     label1:
        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label3;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void removeParticipants(java.lang.String[])>(r9);

        exitmonitor r11;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("removeParticipants :: ");

        r12 = new com.android.ims.ImsException;

        specialinvoke r12.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r12;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r11;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void resetIsMergeRequestedByConf(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r0.<com.android.ims.ImsCall: boolean mMergeRequestedByConference> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void resume() throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.String $r3, $r5;
        android.telephony.ims.ImsCallSession $r6, $r7;
        android.telephony.ims.ImsStreamMediaProfile $r8;
        java.lang.Throwable $r9;
        com.android.ims.ImsException r10, r12;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("resume :: ");

        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isOnHold()>();

        if $z0 != 0 goto label2;

        $z1 = <com.android.ims.ImsCall: boolean DBG>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("resume :: call is not being held");

     label1:
        return;

     label2:
        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label3:
        $i0 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i0 != 0 goto label6;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label5;

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 3;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        $r8 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsStreamMediaProfile createResumeMediaProfile()>();

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void resume(android.telephony.ims.ImsStreamMediaProfile)>($r8);

        exitmonitor r1;

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("resume :: ");

        r10 = new com.android.ims.ImsException;

        specialinvoke r10.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r10;

     label6:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resume :: update is in progress; request=");

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r3 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i1);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>($r5);

        r12 = new com.android.ims.ImsException;

        specialinvoke r12.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call update is in progress", 102);

        throw r12;

     label7:
        $r9 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.ims.ImsCall r0;
        char c0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r2, $r3;
        java.lang.Throwable $r4;
        android.os.Message r5;

        r0 := @this: com.android.ims.ImsCall;

        c0 := @parameter0: char;

        r5 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendDtmf :: ");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r3.<android.telephony.ims.ImsCallSession: void sendDtmf(char,android.os.Message)>(c0, r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void sendRttMessage(java.lang.String)
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r2, $r5;
        android.telephony.ims.ImsCallProfile $r3;
        android.telephony.ims.ImsStreamMediaProfile $r4;
        boolean $z0;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.ims.ImsCall;

        r7 := @parameter0: java.lang.String;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r2 != null goto label2;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("sendRttMessage::no session");

     label2:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r4 = $r3.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $z0 = virtualinvoke $r4.<android.telephony.ims.ImsStreamMediaProfile: boolean isRttCall()>();

        if $z0 != 0 goto label4;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttMessage::Not an rtt call, ignoring");

        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r5.<android.telephony.ims.ImsCallSession: void sendRttMessage(java.lang.String)>(r7);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void sendRttModifyRequest(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r2, $r3;
        android.telephony.ims.ImsCallProfile $r4, $r6, r10, r11;
        android.telephony.ims.ImsStreamMediaProfile $r5, $r7, r12;
        java.lang.Throwable $r8;
        android.os.Parcel r9;
        byte b0;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttModifyRequest");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r2 != null goto label02;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("sendRttModifyRequest::no session");

     label02:
        if z0 == 0 goto label05;

     label03:
        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r7 = $r6.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $z2 = virtualinvoke $r7.<android.telephony.ims.ImsStreamMediaProfile: boolean isRttCall()>();

        if $z2 == 0 goto label05;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttModifyRequest::Already RTT call, ignoring request to turn on.");

        exitmonitor r1;

     label04:
        return;

     label05:
        if z0 != 0 goto label08;

     label06:
        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r5 = $r4.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $z1 = virtualinvoke $r5.<android.telephony.ims.ImsStreamMediaProfile: boolean isRttCall()>();

        if $z1 != 0 goto label08;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttModifyRequest::Not RTT call, ignoring request to turn off.");

        exitmonitor r1;

     label07:
        return;

     label08:
        r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r10 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

     label09:
        b0 = 0;

     label10:
        virtualinvoke r10.<android.telephony.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r9, 0);

        virtualinvoke r9.<android.os.Parcel: void setDataPosition(int)>(0);

        r11 = new android.telephony.ims.ImsCallProfile;

        specialinvoke r11.<android.telephony.ims.ImsCallProfile: void <init>(android.os.Parcel)>(r9);

        r12 = r11.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

     label11:
        if z0 == 0 goto label12;

        b0 = 1;

        goto label12;

     label12:
        virtualinvoke r12.<android.telephony.ims.ImsStreamMediaProfile: void setRttMode(int)>(b0);

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r3.<android.telephony.ims.ImsCallSession: void sendRttModifyRequest(android.telephony.ims.ImsCallProfile)>(r11);

        exitmonitor r1;

     label13:
        return;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void sendRttModifyResponse(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0, $z1;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, $r6;
        android.telephony.ims.ImsCallProfile $r4;
        android.telephony.ims.ImsStreamMediaProfile $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttModifyResponse");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 != null goto label2;

        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("sendRttModifyResponse::no session");

     label2:
        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        $r5 = $r4.<android.telephony.ims.ImsCallProfile: android.telephony.ims.ImsStreamMediaProfile mMediaProfile>;

        $z1 = virtualinvoke $r5.<android.telephony.ims.ImsStreamMediaProfile: boolean isRttCall()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("sendRttModifyResponse::Already RTT call, ignoring.");

        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r6.<android.telephony.ims.ImsCallSession: void sendRttModifyResponse(boolean)>(z0);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void sendUssd(java.lang.String) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r8;
        android.telephony.ims.ImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.Object r10;
        com.android.ims.ImsException r11;

        r0 := @this: com.android.ims.ImsCall;

        r8 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendUssd :: ussdMessage=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        r10 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r10;

     label1:
        $r5 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r6.<android.telephony.ims.ImsCallSession: void sendUssd(java.lang.String)>(r8);

        exitmonitor r10;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("sendUssd :: ");

        r11 = new com.android.ims.ImsException;

        specialinvoke r11.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r11;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setAnswerWithRtt()
    {
        com.android.ims.ImsCall r0;

        r0 := @this: com.android.ims.ImsCall;

        r0.<com.android.ims.ImsCall: boolean mAnswerWithRtt> = 1;

        return;
    }

    public void setCallProfile(android.telephony.ims.ImsCallProfile)
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.telephony.ims.ImsCallProfile r3;

        r0 := @this: com.android.ims.ImsCall;

        r3 := @parameter0: android.telephony.ims.ImsCallProfile;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile> = r3;

        specialinvoke r0.<com.android.ims.ImsCall: void trackVideoStateHistory(android.telephony.ims.ImsCallProfile)>(r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setIsMerged(boolean)
    {
        com.android.ims.ImsCall r0;
        boolean z0;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        r0.<com.android.ims.ImsCall: boolean mIsMerged> = z0;

        return;
    }

    public void setListener(com.android.ims.ImsCall$Listener)
    {
        com.android.ims.ImsCall r0;
        com.android.ims.ImsCall$Listener r1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: com.android.ims.ImsCall$Listener;

        virtualinvoke r0.<com.android.ims.ImsCall: void setListener(com.android.ims.ImsCall$Listener,boolean)>(r1, 0);

        return;
    }

    public void setListener(com.android.ims.ImsCall$Listener, boolean)
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        boolean z0, z1, z2;
        int i0;
        android.telephony.ims.ImsReasonInfo r2;
        java.lang.Throwable $r3, $r4;
        com.android.ims.ImsCall$Listener r5;

        r0 := @this: com.android.ims.ImsCall;

        r5 := @parameter0: com.android.ims.ImsCall$Listener;

        z1 := @parameter1: boolean;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall$Listener mListener> = r5;

     label02:
        if r5 == null goto label20;

        if z1 != 0 goto label03;

        goto label20;

     label03:
        z0 = r0.<com.android.ims.ImsCall: boolean mInCall>;

        z2 = r0.<com.android.ims.ImsCall: boolean mHold>;

        i0 = virtualinvoke r0.<com.android.ims.ImsCall: int getState()>();

        r2 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsReasonInfo mLastReasonInfo>;

        exitmonitor r1;

     label04:
        if r2 == null goto label08;

     label05:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onCallError(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>(r0, r2);

     label06:
        goto label17;

     label07:
        $r3 := @caughtexception;

        goto label18;

     label08:
        if z0 == 0 goto label13;

        if z2 == 0 goto label11;

     label09:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onCallHeld(com.android.ims.ImsCall)>(r0);

     label10:
        goto label17;

     label11:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onCallStarted(com.android.ims.ImsCall)>(r0);

     label12:
        goto label17;

     label13:
        if i0 == 3 goto label16;

        if i0 == 8 goto label14;

        goto label17;

     label14:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onCallTerminated(com.android.ims.ImsCall,android.telephony.ims.ImsReasonInfo)>(r0, r2);

     label15:
        goto label17;

     label16:
        virtualinvoke r5.<com.android.ims.ImsCall$Listener: void onCallProgressing(com.android.ims.ImsCall)>(r0);

     label17:
        goto label19;

     label18:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("setListener() :: ", $r3);

     label19:
        return;

     label20:
        exitmonitor r1;

     label21:
        return;

     label22:
        $r4 := @caughtexception;

     label23:
        exitmonitor r1;

     label24:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public void setMergeHost(com.android.ims.ImsCall)
    {
        com.android.ims.ImsCall r0, r1;

        r0 := @this: com.android.ims.ImsCall;

        r1 := @parameter0: com.android.ims.ImsCall;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = r1;

        r0.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = null;

        r1.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergeHost> = null;

        r1.<com.android.ims.ImsCall: com.android.ims.ImsCall mMergePeer> = r0;

        return;
    }

    public void setMute(boolean) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        java.lang.String $r5, r9;
        android.telephony.ims.ImsCallSession $r6;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.ims.ImsCall;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.ims.ImsCall: boolean mMute>;

        if $z1 == z0 goto label09;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMute :: turning mute ");

     label02:
        if z0 == 0 goto label03;

        r9 = "on";

        goto label04;

     label03:
        r9 = "off";

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        r0.<com.android.ims.ImsCall: boolean mMute> = z0;

     label05:
        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r6.<android.telephony.ims.ImsCallSession: void setMute(boolean)>(z0);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("setMute :: ", $r8);

        specialinvoke r0.<com.android.ims.ImsCall: void throwImsException(java.lang.Throwable,int)>($r8, 0);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void start(android.telephony.ims.ImsCallSession, java.lang.String) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r10;
        android.telephony.ims.ImsCallSession$Listener $r5;
        android.telephony.ims.ImsCallProfile $r6;
        java.lang.Throwable $r7, $r8;
        android.telephony.ims.ImsCallSession r9;
        java.lang.Object r12;
        com.android.ims.ImsException r14;

        r0 := @this: com.android.ims.ImsCall;

        r9 := @parameter0: android.telephony.ims.ImsCallSession;

        r10 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(1) :: session=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        r12 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r12;

     label1:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = r9;

     label2:
        $r5 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession$Listener createCallSessionListener()>();

        virtualinvoke r9.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>($r5);

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        virtualinvoke r9.<android.telephony.ims.ImsCallSession: void start(java.lang.String,android.telephony.ims.ImsCallProfile)>(r10, $r6);

     label3:
        exitmonitor r12;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("start(1) :: ", $r7);

        r14 = new com.android.ims.ImsException;

        specialinvoke r14.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("start(1)", $r7, 0);

        throw r14;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r12;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void start(android.telephony.ims.ImsCallSession, java.lang.String[]) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.telephony.ims.ImsCallSession$Listener $r5;
        android.telephony.ims.ImsCallProfile $r6;
        java.lang.Throwable $r7, $r8;
        android.telephony.ims.ImsCallSession r9;
        java.lang.String[] r10;
        java.lang.Object r12;
        com.android.ims.ImsException r14;

        r0 := @this: com.android.ims.ImsCall;

        r9 := @parameter0: android.telephony.ims.ImsCallSession;

        r10 := @parameter1: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(n) :: session=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r4);

        r12 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r12;

     label1:
        r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession> = r9;

        r0.<com.android.ims.ImsCall: boolean mIsConferenceHost> = 1;

     label2:
        $r5 = specialinvoke r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession$Listener createCallSessionListener()>();

        virtualinvoke r9.<android.telephony.ims.ImsCallSession: void setListener(android.telephony.ims.ImsCallSession$Listener)>($r5);

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        virtualinvoke r9.<android.telephony.ims.ImsCallSession: void start(java.lang.String[],android.telephony.ims.ImsCallProfile)>(r10, $r6);

     label3:
        exitmonitor r12;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

     label6:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("start(n) :: ", $r8);

        r14 = new com.android.ims.ImsException;

        specialinvoke r14.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("start(n)", $r8, 0);

        throw r14;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r12;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void startDtmf(char)
    {
        com.android.ims.ImsCall r0;
        char c0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        c0 := @parameter0: char;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("startDtmf :: ");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r4.<android.telephony.ims.ImsCallSession: void startDtmf(char)>(c0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void stopDtmf()
    {
        com.android.ims.ImsCall r0;
        java.lang.Object r1;
        android.telephony.ims.ImsCallSession $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.ImsCall;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("stopDtmf :: ");

        r1 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r4.<android.telephony.ims.ImsCallSession: void stopDtmf()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void terminate(int)
    {
        com.android.ims.ImsCall r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.telephony.ims.ImsCallSession $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.Object r10;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terminate :: reason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r5);

        r10 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r10;

     label1:
        r0.<com.android.ims.ImsCall: boolean mHold> = 0;

        r0.<com.android.ims.ImsCall: boolean mInCall> = 0;

        r0.<com.android.ims.ImsCall: boolean mTerminationRequestPending> = 1;

        $r6 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r6 == null goto label2;

        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r7.<android.telephony.ims.ImsCallSession: void terminate(int)>(i0);

     label2:
        exitmonitor r10;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void terminate(int, int)
    {
        com.android.ims.ImsCall r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terminate :: reason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; overrideReason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r7);

        r0.<com.android.ims.ImsCall: int mOverrideReason> = i1;

        virtualinvoke r0.<com.android.ims.ImsCall: void terminate(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.ims.ImsCall r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.StringBuilder $r4, $r42;
        int $i0, $i1, $i2;
        java.lang.String $r12, $r39, $r45, r49, r50, r52, r53, r54, r55, r56, r57, r58, r59, r60;
        android.telephony.ims.ImsCallSession $r33, $r36;
        android.telephony.ims.ImsCallProfile r51;

        r0 := @this: com.android.ims.ImsCall;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsCall objId:");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onHold:");

        z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isOnHold()>();

        if z0 == 0 goto label01;

        r49 = "Y";

        goto label02;

     label01:
        r49 = "N";

     label02:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mute:");

        $z1 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMuted()>();

        if $z1 == 0 goto label03;

        r50 = "Y";

        goto label04;

     label03:
        r50 = "N";

     label04:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        r51 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallProfile mCallProfile>;

        if r51 == null goto label05;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallProfile:");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType:");

        $i2 = virtualinvoke r0.<com.android.ims.ImsCall: int getNetworkType()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label05:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" updateRequest:");

        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r12 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merging:");

        $z2 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMerging()>();

        if $z2 == 0 goto label06;

        r52 = "Y";

        goto label07;

     label06:
        r52 = "N";

     label07:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $z3 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMerging()>();

        if $z3 == 0 goto label09;

        $z11 = specialinvoke r0.<com.android.ims.ImsCall: boolean isMergePeer()>();

        if $z11 == 0 goto label08;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        goto label09;

     label08:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H");

     label09:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge action pending:");

        $z12 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isCallSessionMergePending()>();

        if $z12 == 0 goto label10;

        r53 = "Y";

        goto label11;

     label10:
        r53 = "N";

     label11:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merged:");

        $z4 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMerged()>();

        if $z4 == 0 goto label12;

        r54 = "Y";

        goto label13;

     label12:
        r54 = "N";

     label13:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" multiParty:");

        $z5 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isMultiparty()>();

        if $z5 == 0 goto label14;

        r55 = "Y";

        goto label15;

     label14:
        r55 = "N";

     label15:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" confHost:");

        $z6 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isConferenceHost()>();

        if $z6 == 0 goto label16;

        r56 = "Y";

        goto label17;

     label16:
        r56 = "N";

     label17:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" buried term:");

        $z7 = r0.<com.android.ims.ImsCall: boolean mSessionEndDuringMerge>;

        if $z7 == 0 goto label18;

        r57 = "Y";

        goto label19;

     label18:
        r57 = "N";

     label19:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isVideo: ");

        $z8 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isVideoCall()>();

        if $z8 == 0 goto label20;

        r58 = "Y";

        goto label21;

     label20:
        r58 = "N";

     label21:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wasVideo: ");

        $z9 = r0.<com.android.ims.ImsCall: boolean mWasVideoCall>;

        if $z9 == 0 goto label22;

        r59 = "Y";

        goto label23;

     label22:
        r59 = "N";

     label23:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isWifi: ");

        $z10 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isWifiCall()>();

        if $z10 == 0 goto label24;

        r60 = "Y";

        goto label25;

     label24:
        r60 = "N";

     label25:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session:");

        $r33 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transientSession:");

        $r36 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mTransientConferenceSession>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r39 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r39;
    }

    public void transfer(java.lang.String, boolean) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        boolean z0;
        java.lang.StringBuilder $r1;
        android.telephony.ims.ImsCallSession $r3, $r11, r17;
        java.lang.String $r6, $r10, r14;
        java.lang.Throwable $r12, $r13;
        java.lang.Object r16;
        com.android.ims.ImsException r19, r20;

        r0 := @this: com.android.ims.ImsCall;

        r14 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transfer :: session=");

        $r3 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number=");

        $r6 = staticinvoke <com.android.telephony.Rlog: java.lang.String pii(java.lang.String,java.lang.Object)>("ImsCall", r14);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isConfirmationRequired=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r10);

        r16 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r16;

     label01:
        r17 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

     label02:
        if r17 == null goto label08;

     label03:
        $r11 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r11.<android.telephony.ims.ImsCallSession: void transfer(java.lang.String,boolean)>(r14, z0);

     label04:
        exitmonitor r16;

     label05:
        return;

     label06:
        $r13 := @caughtexception;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String,java.lang.Throwable)>("transfer :: ", $r13);

        r19 = new com.android.ims.ImsException;

        specialinvoke r19.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("transfer()", $r13, 0);

        throw r19;

     label08:
        r20 = new com.android.ims.ImsException;

        specialinvoke r20.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call to transfer", 148);

        throw r20;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r16;

     label11:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void update(int, android.telephony.ims.ImsStreamMediaProfile) throws com.android.ims.ImsException
    {
        com.android.ims.ImsCall r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, r18;
        java.lang.String $r6, $r10, $r12;
        boolean $z0, $z1, $z2;
        android.telephony.ims.ImsCallSession $r7, $r8;
        com.android.ims.ImsException $r13, r19, r20;
        java.lang.Throwable $r14;
        android.telephony.ims.ImsStreamMediaProfile r15;
        java.lang.Object r17;

        r0 := @this: com.android.ims.ImsCall;

        i0 := @parameter0: int;

        r15 := @parameter1: android.telephony.ims.ImsStreamMediaProfile;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update :: callType=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaProfile=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r6);

        $z0 = virtualinvoke r0.<com.android.ims.ImsCall: boolean isOnHold()>();

        if $z0 == 0 goto label02;

        $z2 = <com.android.ims.ImsCall: boolean DBG>;

        if $z2 == 0 goto label01;

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>("update :: call is on hold");

     label01:
        $r13 = new com.android.ims.ImsException;

        specialinvoke $r13.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Not in a call to update call", 102);

        throw $r13;

     label02:
        r17 = r0.<com.android.ims.ImsCall: java.lang.Object mLockObj>;

        entermonitor r17;

     label03:
        $i1 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        if $i1 == 0 goto label05;

        $z1 = <com.android.ims.ImsCall: boolean DBG>;

        if $z1 == 0 goto label04;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update :: update is in progress; request=");

        $i2 = r0.<com.android.ims.ImsCall: int mUpdateRequest>;

        $r10 = specialinvoke r0.<com.android.ims.ImsCall: java.lang.String updateRequestToString(int)>($i2);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsCall: void logi(java.lang.String)>($r12);

     label04:
        r19 = new com.android.ims.ImsException;

        specialinvoke r19.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call update is in progress", 102);

        throw r19;

     label05:
        $r7 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        if $r7 == null goto label07;

        $r8 = r0.<com.android.ims.ImsCall: android.telephony.ims.ImsCallSession mSession>;

        virtualinvoke $r8.<android.telephony.ims.ImsCallSession: void update(int,android.telephony.ims.ImsStreamMediaProfile)>(i0, r15);

        r0.<com.android.ims.ImsCall: int mUpdateRequest> = 6;

        exitmonitor r17;

     label06:
        return;

     label07:
        specialinvoke r0.<com.android.ims.ImsCall: void loge(java.lang.String)>("update :: ");

        r20 = new com.android.ims.ImsException;

        specialinvoke r20.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No call session", 148);

        throw r20;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r17;

     label10:
        throw $r14;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean wasVideoCall()
    {
        com.android.ims.ImsCall r0;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCall;

        $z0 = r0.<com.android.ims.ImsCall: boolean mWasVideoCall>;

        return $z0;
    }
}
