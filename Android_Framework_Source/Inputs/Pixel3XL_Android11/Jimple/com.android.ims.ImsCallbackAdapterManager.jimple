public abstract class com.android.ims.ImsCallbackAdapterManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.util.SparseArray mCallbackSubscriptionMap;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;
    private final android.os.RemoteCallbackList mRemoteCallbacks;
    private final int mSlotId;
    public android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubChangedListener;

    public void <init>(android.content.Context, java.lang.Object, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        android.content.Context r1;
        java.lang.Object r2;
        int i0;
        android.util.SparseArray $r3;
        android.os.RemoteCallbackList $r4;
        android.os.Looper $r5;
        com.android.ims.ImsCallbackAdapterManager$1 $r6;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap> = $r3;

        $r4 = new android.os.RemoteCallbackList;

        specialinvoke $r4.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks> = $r4;

        r0.<com.android.ims.ImsCallbackAdapterManager: android.content.Context mContext> = r1;

        r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock> = r2;

        r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId> = i0;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r5 != null goto label1;

        staticinvoke <android.os.Looper: void prepare()>();

     label1:
        $r6 = new com.android.ims.ImsCallbackAdapterManager$1;

        specialinvoke $r6.<com.android.ims.ImsCallbackAdapterManager$1: void <init>(com.android.ims.ImsCallbackAdapterManager)>(r0);

        r0.<com.android.ims.ImsCallbackAdapterManager: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubChangedListener> = $r6;

        return;
    }

    static android.content.Context access$000(com.android.ims.ImsCallbackAdapterManager)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: android.content.Context mContext>;

        return $r1;
    }

    static int access$100(com.android.ims.ImsCallbackAdapterManager)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int $i0;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        $i0 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        return $i0;
    }

    static java.lang.Object access$200(com.android.ims.ImsCallbackAdapterManager)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.SparseArray access$300(com.android.ims.ImsCallbackAdapterManager)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        return $r1;
    }

    static void access$400(com.android.ims.ImsCallbackAdapterManager, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void removeCallbacksForSubscription(int)>(i0);

        return;
    }

    private void clearCallbacksForAllSubscriptions()
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        java.lang.Object r1;
        java.util.ArrayList r2;
        android.util.SparseArray $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Integer $r5;
        java.lang.Throwable $r6;
        com.android.ims._$$Lambda$ImsCallbackAdapterManager$XZNh_kwgQDeCYju08IQLLU4ORxE r7;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label2:
        i2 = 0;

     label3:
        $r3 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label5;

        $r4 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        r7 = new com.android.ims._$$Lambda$ImsCallbackAdapterManager$XZNh_kwgQDeCYju08IQLLU4ORxE;

        specialinvoke r7.<com.android.ims._$$Lambda$ImsCallbackAdapterManager$XZNh_kwgQDeCYju08IQLLU4ORxE: void <init>(com.android.ims.ImsCallbackAdapterManager)>(r0);

        interfaceinvoke r2.<java.util.List: void forEach(java.util.function.Consumer)>(r7);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void lambda$XZNh-kwgQDeCYju08IQLLU4ORxE(com.android.ims.ImsCallbackAdapterManager, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0;

        r0 := @parameter0: com.android.ims.ImsCallbackAdapterManager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void removeCallbacksForSubscription(int)>(i0);

        return;
    }

    private void linkCallbackToSubscription(android.os.IInterface, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0, $i1;
        java.lang.Object r1, $r5, r9;
        java.util.Set r2, r12;
        android.util.SparseArray $r3, $r4, $r6;
        java.lang.Throwable $r7;
        android.os.IInterface r8;
        android.util.ArraySet r11;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r8 := @parameter0: android.os.IInterface;

        i0 := @parameter1: int;

        r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label02;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void registerForSubscriptionsChanged()>();

     label02:
        $r4 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.Set) $r5;

     label03:
        r9 = r2;

        if r2 != null goto label06;

     label04:
        r11 = new android.util.ArraySet;

        r9 = r11;

        specialinvoke r11.<android.util.ArraySet: void <init>()>();

     label05:
        $r6 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r11);

     label06:
        r12 = (java.util.Set) r9;

        interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r8);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void registerForSubscriptionsChanged()
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r7;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener $r8;
        android.telephony.SubscriptionManager r9;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/SubscriptionManager;");

        r9 = (android.telephony.SubscriptionManager) $r2;

        if r9 == null goto label1;

        $r8 = r0.<com.android.ims.ImsCallbackAdapterManager: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubChangedListener>;

        virtualinvoke r9.<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r8);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i0 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, "registerForSubscriptionsChanged: could not find SubscriptionManager.");

     label2:
        return;
    }

    private void removeCallbacksForSubscription(int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.util.SparseArray $r1, $r3, $r4;
        java.lang.Object $r2, $r5, r19;
        android.os.IInterface $r6;
        java.lang.StringBuilder $r7, $r11;
        java.lang.String $r14, r17;
        java.lang.Throwable $r15;
        java.util.Set r20;
        java.util.Iterator r21;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 != 0 goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i2 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r17 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove all callbacks: invalid subId ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r17, $r14);

        return;

     label01:
        r19 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r19;

     label02:
        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r20 = (java.util.Set) $r2;

     label03:
        if r20 != null goto label06;

     label04:
        exitmonitor r19;

     label05:
        return;

     label06:
        $r3 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        r21 = interfaceinvoke r20.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r5 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.os.IInterface) $r5;

        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void removeCallback(android.os.IInterface)>($r6);

     label08:
        goto label07;

     label09:
        $r4 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label10;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void unregisterForSubscriptionsChanged()>();

     label10:
        exitmonitor r19;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r19;

     label14:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void unlinkCallbackFromSubscription(android.os.IInterface, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0, $i1;
        java.lang.Object r1, $r4;
        java.util.Set r2;
        android.util.SparseArray $r3, $r5, $r8;
        boolean $z1;
        java.lang.Throwable $r6;
        android.os.IInterface r7;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r7 := @parameter0: android.os.IInterface;

        i0 := @parameter1: int;

        r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.Set) $r4;

     label2:
        if r2 == null goto label4;

     label3:
        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r7);

        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        $r8 = r0.<com.android.ims.ImsCallbackAdapterManager: android.util.SparseArray mCallbackSubscriptionMap>;

        $i1 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label5;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void unregisterForSubscriptionsChanged()>();

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void unregisterForSubscriptionsChanged()
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r7;
        android.telephony.SubscriptionManager$OnSubscriptionsChangedListener $r8;
        android.telephony.SubscriptionManager r9;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        $r1 = r0.<com.android.ims.ImsCallbackAdapterManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/SubscriptionManager;");

        r9 = (android.telephony.SubscriptionManager) $r2;

        if r9 == null goto label1;

        $r8 = r0.<com.android.ims.ImsCallbackAdapterManager: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener mSubChangedListener>;

        virtualinvoke r9.<android.telephony.SubscriptionManager: void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>($r8);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i0 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, "unregisterForSubscriptionsChanged: could not find SubscriptionManager.");

     label2:
        return;
    }

    public final void addCallback(android.os.IInterface)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2, r12;
        int $i0;
        java.lang.String $r8, r13;
        android.os.RemoteCallbackList $r9;
        java.lang.Throwable $r10;
        android.os.IInterface r11;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r11 := @parameter0: android.os.IInterface;

        r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void registerCallback(android.os.IInterface)>(r11);

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i0 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r13 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Local callback added: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r13, $r8);

        $r9 = r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks>;

        virtualinvoke $r9.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r11);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addCallbackForSubscription(android.os.IInterface, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r8, r12;
        java.lang.Throwable $r9;
        android.os.IInterface r10;
        java.lang.Object r14;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r10 := @parameter0: android.os.IInterface;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i1 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r12 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add callback: invalid subId ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r12, $r8);

        return;

     label1:
        r14 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r14;

     label2:
        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void addCallback(android.os.IInterface)>(r10);

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void linkCallbackToSubscription(android.os.IInterface,int)>(r10, i0);

        exitmonitor r14;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r14;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void close()
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        java.lang.Object r1;
        android.os.RemoteCallbackList $r2, $r7, $r8;
        int $i0, $i1, i3;
        java.lang.String $r6;
        java.lang.Throwable $r9;
        android.os.IInterface r10;
        java.lang.StringBuilder r11;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r1 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        i3 = $i0 - 1;

     label02:
        if i3 < 0 goto label05;

     label03:
        $r7 = r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks>;

        r10 = virtualinvoke $r7.<android.os.RemoteCallbackList: android.os.IInterface getRegisteredCallbackItem(int)>(i3);

        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void unregisterCallback(android.os.IInterface)>(r10);

        $r8 = r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks>;

        virtualinvoke $r8.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r10);

     label04:
        i3 = i3 + -1;

        goto label02;

     label05:
        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void clearCallbacksForAllSubscriptions()>();

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i1 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, "Closing connection and clearing callbacks");

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public abstract void registerCallback(android.os.IInterface);

    public final void removeCallback(android.os.IInterface)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r2, $r6;
        int $i0;
        android.os.RemoteCallbackList $r10;
        boolean $z0;
        java.lang.Throwable $r11;
        android.os.IInterface r12;
        java.lang.Object r15;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r12 := @parameter0: android.os.IInterface;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i0 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Local callback removed: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r1, $r9);

        r15 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r15;

     label1:
        $r10 = r0.<com.android.ims.ImsCallbackAdapterManager: android.os.RemoteCallbackList mRemoteCallbacks>;

        $z0 = virtualinvoke $r10.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r12);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void unregisterCallback(android.os.IInterface)>(r12);

     label2:
        exitmonitor r15;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r15;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void removeCallbackForSubscription(android.os.IInterface, int)
    {
        com.android.ims.ImsCallbackAdapterManager r0;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r8, r12;
        java.lang.Throwable $r9;
        android.os.IInterface r10;
        java.lang.Object r14;

        r0 := @this: com.android.ims.ImsCallbackAdapterManager;

        r10 := @parameter0: android.os.IInterface;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsCallbackAM [");

        $i1 = r0.<com.android.ims.ImsCallbackAdapterManager: int mSlotId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r12 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove callback: invalid subId ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r12, $r8);

        return;

     label1:
        r14 = r0.<com.android.ims.ImsCallbackAdapterManager: java.lang.Object mLock>;

        entermonitor r14;

     label2:
        virtualinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void removeCallback(android.os.IInterface)>(r10);

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void unlinkCallbackFromSubscription(android.os.IInterface,int)>(r10, i0);

        exitmonitor r14;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r14;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public abstract void unregisterCallback(android.os.IInterface);

    public static void <clinit>()
    {
        <com.android.ims.ImsCallbackAdapterManager: java.lang.String TAG> = "ImsCallbackAM";

        return;
    }
}
