class com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager extends com.android.ims.ImsCallbackAdapterManager
{
    final com.android.ims.MmTelFeatureConnection this$0;

    public void <init>(com.android.ims.MmTelFeatureConnection, android.content.Context, java.lang.Object)
    {
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager r0;
        com.android.ims.MmTelFeatureConnection r1;
        android.content.Context r2;
        java.lang.Object r3;
        int $i0;

        r0 := @this: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        r1 := @parameter0: com.android.ims.MmTelFeatureConnection;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.Object;

        r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0> = r1;

        $i0 = r1.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        specialinvoke r0.<com.android.ims.ImsCallbackAdapterManager: void <init>(android.content.Context,java.lang.Object,int)>(r2, r3, $i0);

        return;
    }

    public volatile void registerCallback(android.os.IInterface)
    {
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager r0;
        android.os.IInterface r1;
        android.telephony.ims.aidl.IImsCapabilityCallback $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        r1 := @parameter0: android.os.IInterface;

        $r2 = (android.telephony.ims.aidl.IImsCapabilityCallback) r1;

        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void registerCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>($r2);

        return;
    }

    public void registerCallback(android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager r0;
        java.lang.Object r1;
        android.telephony.ims.aidl.IImsMmTelFeature r2;
        com.android.ims.MmTelFeatureConnection $r3, $r4, $r5, $r7, $r10;
        android.os.IBinder $r6;
        java.lang.StringBuilder $r8;
        int $i0;
        java.lang.String $r13;
        java.lang.IllegalStateException $r14, $r17, r24;
        java.lang.Throwable $r15;
        android.os.RemoteException $r16, $r18;
        android.telephony.ims.aidl.IImsCapabilityCallback r19;

        r0 := @this: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        r19 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r3 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        r1 = $r3.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        virtualinvoke $r4.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r7 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $r5 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $r6 = $r5.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        r2 = staticinvoke <com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature access$000(com.android.ims.MmTelFeatureConnection,android.os.IBinder)>($r7, $r6);

     label02:
        exitmonitor r1;

     label03:
        if r2 == null goto label07;

     label04:
        interfaceinvoke r2.<android.telephony.ims.aidl.IImsMmTelFeature: void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r19);

     label05:
        return;

     label06:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>(" CapabilityCallbackManager - MmTelFeature binder is null.");

        throw $r17;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $r10 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $i0 = $r10.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, "CapabilityCallbackManager, register: Couldn\'t get binder");

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CapabilityCallbackManager: MmTelFeature is not available!");

        throw $r14;

     label08:
        $r15 := @caughtexception;

        goto label11;

     label09:
        $r18 := @caughtexception;

     label10:
        r24 = new java.lang.IllegalStateException;

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CapabilityCallbackManager - MmTelFeature binder is dead.");

        throw r24;

     label11:
        exitmonitor r1;

     label12:
        throw $r15;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public volatile void unregisterCallback(android.os.IInterface)
    {
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager r0;
        android.os.IInterface r1;
        android.telephony.ims.aidl.IImsCapabilityCallback $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        r1 := @parameter0: android.os.IInterface;

        $r2 = (android.telephony.ims.aidl.IImsCapabilityCallback) r1;

        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void unregisterCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>($r2);

        return;
    }

    public void unregisterCallback(android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager r0;
        java.lang.Object r1;
        android.telephony.ims.aidl.IImsMmTelFeature r2;
        com.android.ims.MmTelFeatureConnection $r3, $r4, $r5, $r7, $r10, $r17, $r23;
        android.os.IBinder $r6;
        java.lang.StringBuilder $r8, $r15, r34;
        int $i0, $i2, $i4;
        java.lang.String $r13, $r20, $r26;
        android.os.RemoteException $r14, $r21;
        java.lang.Throwable $r27;
        android.telephony.ims.aidl.IImsCapabilityCallback r28;

        r0 := @this: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        r28 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r3 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        r1 = $r3.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        virtualinvoke $r4.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r7 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $r5 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $r6 = $r5.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        r2 = staticinvoke <com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature access$000(com.android.ims.MmTelFeatureConnection,android.os.IBinder)>($r7, $r6);

     label02:
        exitmonitor r1;

     label03:
        if r2 == null goto label07;

     label04:
        interfaceinvoke r2.<android.telephony.ims.aidl.IImsMmTelFeature: void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r28);

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $r17 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $i2 = $r17.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r20, "CapabilityCallbackManager, unregister: Binder is dead.");

        goto label05;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $r10 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $i0 = $r10.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, "CapabilityCallbackManager, unregister: binder is null.");

     label08:
        return;

     label09:
        $r27 := @caughtexception;

        goto label13;

     label10:
        $r21 := @caughtexception;

     label11:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $r23 = r0.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: com.android.ims.MmTelFeatureConnection this$0>;

        $i4 = $r23.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r26, "CapabilityCallbackManager, unregister: couldn\'t get binder.");

        exitmonitor r1;

     label12:
        return;

     label13:
        exitmonitor r1;

     label14:
        throw $r27;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
    }
}
