public class com.android.ims.MmTelFeatureConnection extends com.android.ims.FeatureConnection
{
    protected static final java.lang.String TAG;
    private final com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager;
    private android.telephony.ims.aidl.IImsConfig mConfigBinder;
    private final com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager;
    private final com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager;
    private boolean mSupportsEmergencyCalling;

    public void <init>(android.content.Context, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.content.Context r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;
        java.lang.Object $r3, $r5, $r7;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r4;
        com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager $r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.ims.FeatureConnection: void <init>(android.content.Context,int)>(r1, i0);

        r0.<com.android.ims.MmTelFeatureConnection: boolean mSupportsEmergencyCalling> = 0;

        $r2 = new com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter;

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        specialinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void <init>(com.android.ims.MmTelFeatureConnection,android.content.Context,java.lang.Object)>(r0, r1, $r3);

        r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager> = $r2;

        $r4 = new com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager;

        $r5 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        specialinvoke $r4.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void <init>(com.android.ims.MmTelFeatureConnection,android.content.Context,java.lang.Object)>(r0, r1, $r5);

        r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager> = $r4;

        $r6 = new com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager;

        $r7 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        specialinvoke $r6.<com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager: void <init>(com.android.ims.MmTelFeatureConnection,android.content.Context,java.lang.Object)>(r0, r1, $r7);

        r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager> = $r6;

        return;
    }

    static android.telephony.ims.aidl.IImsMmTelFeature access$000(com.android.ims.MmTelFeatureConnection, android.os.IBinder)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.os.IBinder r1;
        android.telephony.ims.aidl.IImsMmTelFeature $r2;

        r0 := @parameter0: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter1: android.os.IBinder;

        $r2 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public static com.android.ims.MmTelFeatureConnection create(android.content.Context, int)
    {
        int i0;
        com.android.ims.MmTelFeatureConnection $r1;
        boolean $z0;
        com.android.ims.internal.IImsServiceFeatureCallback $r2;
        java.lang.StringBuilder $r3, $r9;
        java.lang.String $r7, $r13;
        android.os.IBinder $r8;
        android.content.Context r14;
        android.telephony.TelephonyManager r15;
        android.telephony.ims.aidl.IImsMmTelFeature r17;

        r14 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = new com.android.ims.MmTelFeatureConnection;

        specialinvoke $r1.<com.android.ims.MmTelFeatureConnection: void <init>(android.content.Context,int)>(r14, i0);

        $z0 = staticinvoke <com.android.ims.ImsManager: boolean isImsSupportedOnDevice(android.content.Context)>(r14);

        if $z0 != 0 goto label1;

        <com.android.ims.MmTelFeatureConnection: boolean sImsSupportedOnDevice> = 0;

        return $r1;

     label1:
        r15 = virtualinvoke $r1.<com.android.ims.MmTelFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r15 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>($r13, "create: TelephonyManager is null!");

        return $r1;

     label2:
        $r2 = virtualinvoke $r1.<com.android.ims.MmTelFeatureConnection: com.android.ims.internal.IImsServiceFeatureCallback getListener()>();

        r17 = virtualinvoke r15.<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsMmTelFeature getImsMmTelFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, $r2);

        if r17 == null goto label3;

        $r8 = interfaceinvoke r17.<android.telephony.ims.aidl.IImsMmTelFeature: android.os.IBinder asBinder()>();

        virtualinvoke $r1.<com.android.ims.MmTelFeatureConnection: void setBinder(android.os.IBinder)>($r8);

        virtualinvoke $r1.<com.android.ims.MmTelFeatureConnection: int getFeatureState()>();

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>($r7, "create: binder is null!");

     label4:
        return $r1;
    }

    private android.telephony.ims.aidl.IImsConfig getConfig()
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsConfig $r1, $r2, $r3, r7, r9;
        int $i0;
        java.lang.Throwable $r4, $r5;
        java.lang.Object r6, r10;
        android.telephony.TelephonyManager r8;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r6 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r6;

     label01:
        $r1 = r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder>;

        if $r1 == null goto label03;

        r7 = r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder>;

        exitmonitor r6;

     label02:
        return r7;

     label03:
        exitmonitor r6;

     label04:
        r8 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r8 == null goto label05;

        $i0 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        r9 = virtualinvoke r8.<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsConfig getImsConfig(int,int)>($i0, 1);

        goto label06;

     label05:
        r9 = null;

     label06:
        r10 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r10;

     label07:
        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder>;

        if $r2 != null goto label08;

        r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder> = r9;

     label08:
        exitmonitor r10;

     label09:
        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder>;

        return $r3;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r10;

     label12:
        throw $r4;

     label13:
        $r5 := @caughtexception;

     label14:
        exitmonitor r6;

     label15:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.os.IBinder r1;
        android.telephony.ims.aidl.IImsMmTelFeature $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.telephony.ims.aidl.IImsMmTelFeature$Stub: android.telephony.ims.aidl.IImsMmTelFeature asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    private void removeImsFeatureCallback()
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.TelephonyManager r1;
        int $i0;
        com.android.ims.internal.IImsServiceFeatureCallback $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r1 == null goto label1;

        $i0 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        $r2 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.internal.IImsServiceFeatureCallback getListener()>();

        virtualinvoke r1.<android.telephony.TelephonyManager: void unregisterImsFeatureCallback(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>($i0, 1, $r2);

     label1:
        return;
    }

    public void acknowledgeSms(int, int, int) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsMmTelFeature $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r4 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r3);

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsMmTelFeature: void acknowledgeSms(int,int,int)>(i0, i1, i2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void acknowledgeSmsReport(int, int, int) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsMmTelFeature $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r4 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r3);

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsMmTelFeature: void acknowledgeSmsReport(int,int,int)>(i0, i1, i2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void addCallback(android.os.IInterface)>(r1);

        return;
    }

    public void addCapabilityCallbackForSubscription(android.telephony.ims.aidl.IImsCapabilityCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void addCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void addProvisioningCallbackForSubscription(android.telephony.ims.aidl.IImsConfigCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsConfigCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsConfigCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager: void addCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void addRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void addCallback(android.os.IInterface)>(r1);

        return;
    }

    public void addRegistrationCallbackForSubscription(android.telephony.ims.aidl.IImsRegistrationCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void addCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void changeEnabledCapabilities(android.telephony.ims.feature.CapabilityChangeRequest, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        java.lang.Object r2;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsMmTelFeature $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.feature.CapabilityChangeRequest r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r6 := @parameter0: android.telephony.ims.feature.CapabilityChangeRequest;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r2 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r4 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r3);

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsMmTelFeature: void changeCapabilitiesConfiguration(android.telephony.ims.feature.CapabilityChangeRequest,android.telephony.ims.aidl.IImsCapabilityCallback)>(r6, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void closeConnection()
    {
        com.android.ims.MmTelFeatureConnection r0;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r3;
        com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager $r4;
        boolean $z0;
        android.os.IBinder $r5;
        android.telephony.ims.aidl.IImsMmTelFeature $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        int $i0;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        java.lang.Object r14;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void close()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r3.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void close()>();

        $r4 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager>;

        virtualinvoke $r4.<com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager: void close()>();

     label1:
        r14 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r14;

     label2:
        $z0 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: boolean isBinderAlive()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r6 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r5);

        interfaceinvoke $r6.<android.telephony.ims.aidl.IImsMmTelFeature: void setListener(android.telephony.ims.aidl.IImsMmTelListener)>(null);

     label3:
        exitmonitor r14;

     label4:
        goto label9;

     label5:
        $r13 := @caughtexception;

     label6:
        exitmonitor r14;

     label7:
        throw $r13;

     label8:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i0 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r12, "closeConnection: couldn\'t remove listener!");

     label9:
        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch android.os.RemoteException from label7 to label8 with label8;
    }

    public android.telephony.ims.ImsCallProfile createCallProfile(int, int) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.ImsCallProfile r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r5 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: android.telephony.ims.ImsCallProfile createCallProfile(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.ims.internal.IImsCallSession createCallSession(android.telephony.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.ImsCallProfile r5;
        com.android.ims.internal.IImsCallSession r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r5 := @parameter0: android.telephony.ims.ImsCallProfile;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r6 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: com.android.ims.internal.IImsCallSession createCallSession(android.telephony.ims.ImsCallProfile)>(r5);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.telephony.ims.aidl.IImsConfig getConfigInterface()
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsConfig $r1;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        $r1 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig getConfig()>();

        return $r1;
    }

    public com.android.ims.internal.IImsEcbm getEcbmInterface() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        com.android.ims.internal.IImsEcbm r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r5 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: com.android.ims.internal.IImsEcbm getEcbmInterface()>();

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        com.android.ims.internal.IImsMultiEndpoint r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r5 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface()>();

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected android.telephony.ims.aidl.IImsRegistration getRegistrationBinder()
    {
        com.android.ims.MmTelFeatureConnection r0;
        int $i0;
        android.telephony.TelephonyManager r1;
        android.telephony.ims.aidl.IImsRegistration r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r1 == null goto label1;

        $i0 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        r2 = virtualinvoke r1.<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>($i0, 1);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public java.lang.String getSmsFormat() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r5 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: java.lang.String getSmsFormat()>();

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.ims.internal.IImsUt getUtInterface() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        com.android.ims.internal.IImsUt r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        r5 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: com.android.ims.internal.IImsUt getUtInterface()>();

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void handleImsFeatureCreatedCallback(int, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1, $i2, $i3, $i5;
        java.lang.Object r1;
        java.lang.String $r5, $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11, r12;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i2 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        if $i2 == i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        if i1 == 0 goto label06;

        if i1 == 1 goto label04;

        goto label07;

     label04:
        $z0 = r0.<com.android.ims.MmTelFeatureConnection: boolean mIsAvailable>;

        if $z0 != 0 goto label07;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i5 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r9, "MmTel enabled");

        r0.<com.android.ims.MmTelFeatureConnection: boolean mIsAvailable> = 1;

     label05:
        goto label07;

     label06:
        r0.<com.android.ims.MmTelFeatureConnection: boolean mSupportsEmergencyCalling> = 1;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i3 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, "Emergency calling enabled");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    protected void handleImsFeatureRemovedCallback(int, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1, $i2, $i3, $i5;
        java.lang.Object r1;
        java.lang.String $r5, $r9;
        java.lang.Throwable $r10;
        java.lang.StringBuilder r11, r12;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $i2 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        if $i2 == i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        if i1 == 0 goto label06;

        if i1 == 1 goto label04;

        goto label07;

     label04:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i5 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r9, "MmTel removed");

        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void onRemovedOrDied()>();

     label05:
        goto label07;

     label06:
        r0.<com.android.ims.MmTelFeatureConnection: boolean mSupportsEmergencyCalling> = 0;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i3 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, "Emergency calling disabled");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    protected void handleImsStatusChangedCallback(int, int, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1, i2, $i3, $i5;
        java.lang.Object r1, $r11, $r17;
        java.lang.String r2, $r12, $r18, $r20;
        java.util.Map $r9, $r15;
        java.lang.Integer $r10, $r16, $r21;
        com.android.ims.FeatureConnection$IFeatureUpdate $r22, $r23;
        java.lang.Throwable $r24;
        java.lang.StringBuilder r25, r26;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i3 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r2 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("imsStatusChanged: slot: ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" feature: ");

        $r9 = <android.telephony.ims.feature.ImsFeature: java.util.Map FEATURE_LOG_MAP>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (java.lang.String) $r11;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status: ");

        $r15 = <android.telephony.ims.feature.ImsFeature: java.util.Map STATE_LOG_MAP>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r18 = (java.lang.String) $r17;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r2, $r20);

        $i5 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        if $i5 != i0 goto label4;

     label2:
        if i1 != 1 goto label4;

     label3:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r0.<com.android.ims.MmTelFeatureConnection: java.lang.Integer mFeatureStateCached> = $r21;

        $r22 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.FeatureConnection$IFeatureUpdate mStatusCallback>;

        if $r22 == null goto label4;

        $r23 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.FeatureConnection$IFeatureUpdate mStatusCallback>;

        interfaceinvoke $r23.<com.android.ims.FeatureConnection$IFeatureUpdate: void notifyStateChanged()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r24 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r24;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isEmergencyMmTelAvailable()
    {
        com.android.ims.MmTelFeatureConnection r0;
        boolean $z0;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        $z0 = r0.<com.android.ims.MmTelFeatureConnection: boolean mSupportsEmergencyCalling>;

        return $z0;
    }

    protected void onRemovedOrDied()
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r3;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r4;
        com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        specialinvoke r0.<com.android.ims.MmTelFeatureConnection: void removeImsFeatureCallback()>();

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.ims.FeatureConnection: void onRemovedOrDied()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r3.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void close()>();

        $r4 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r4.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void close()>();

        $r5 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager>;

        virtualinvoke $r5.<com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager: void close()>();

        r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsConfig mConfigBinder> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onSmsReady() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsMmTelFeature $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r4 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r3);

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsMmTelFeature: void onSmsReady()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void openConnection(android.telephony.ims.feature.MmTelFeature$Listener) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.feature.MmTelFeature$Listener r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r5 := @parameter0: android.telephony.ims.feature.MmTelFeature$Listener;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: void setListener(android.telephony.ims.aidl.IImsMmTelListener)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.telephony.ims.feature.MmTelFeature$MmTelCapabilities queryCapabilityStatus() throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        int $i0;
        java.lang.Throwable $r4;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        r5 = new android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        $i0 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: int queryCapabilityStatus()>();

        specialinvoke r5.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: void <init>(int)>($i0);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void queryEnabledCapabilities(int, int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IImsCapabilityCallback r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: void queryCapabilityConfiguration(int,int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, i1, r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void removeCallback(android.os.IInterface)>(r1);

        return;
    }

    public void removeCapabilityCallbackForSubscription(android.telephony.ims.aidl.IImsCapabilityCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager mCapabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$CapabilityCallbackManager: void removeCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void removeProvisioningCallbackForSubscription(android.telephony.ims.aidl.IImsConfigCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsConfigCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsConfigCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager mProvisioningCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ProvisioningCallbackManager: void removeCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void removeRegistrationCallback(android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void removeCallback(android.os.IInterface)>(r1);

        return;
    }

    public void removeRegistrationCallbackForSubscription(android.telephony.ims.aidl.IImsRegistrationCallback, int)
    {
        com.android.ims.MmTelFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        int i0;
        com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter $r2;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.MmTelFeatureConnection$ImsRegistrationCallbackAdapter: void removeCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    protected java.lang.Integer retrieveFeatureState()
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0;
        android.os.IBinder $r2, $r3;
        android.telephony.ims.aidl.IImsMmTelFeature $r4;
        java.lang.Integer $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r4 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r3);

        i0 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsMmTelFeature: int getFeatureState()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r5;

     label3:
        $r6 := @caughtexception;

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSms(int, int, java.lang.String, java.lang.String, boolean, byte[]) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0, i1;
        java.lang.String r1, r7;
        boolean z0;
        byte[] r2;
        java.lang.Object r3;
        android.os.IBinder $r4;
        android.telephony.ims.aidl.IImsMmTelFeature $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: byte[];

        r3 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r4 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r5 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r4);

        interfaceinvoke $r5.<android.telephony.ims.aidl.IImsMmTelFeature: void sendSms(int,int,java.lang.String,java.lang.String,boolean,byte[])>(i0, i1, r7, r1, z0, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setSmsListener(android.telephony.ims.aidl.IImsSmsListener) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IImsSmsListener r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        r5 := @parameter0: android.telephony.ims.aidl.IImsSmsListener;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: void setSmsListener(android.telephony.ims.aidl.IImsSmsListener)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setUiTTYMode(int, android.os.Message) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        int i0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.Throwable $r4;
        android.os.Message r5;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        i0 := @parameter0: int;

        r5 := @parameter1: android.os.Message;

        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: void setUiTtyMode(int,android.os.Message)>(i0, r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int shouldProcessCall(boolean, java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.MmTelFeatureConnection r0;
        boolean z0, $z1;
        java.lang.Object r1;
        int i0, $i1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsMmTelFeature $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.lang.String[] r10;

        r0 := @this: com.android.ims.MmTelFeatureConnection;

        z0 := @parameter0: boolean;

        r10 := @parameter1: java.lang.String[];

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: boolean isEmergencyMmTelAvailable()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmTelFeatureConnection [");

        $i1 = r0.<com.android.ims.MmTelFeatureConnection: int mSlotId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r8, "MmTel does not support emergency over IMS, fallback to CS.");

        return 1;

     label1:
        r1 = r0.<com.android.ims.MmTelFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        virtualinvoke r0.<com.android.ims.MmTelFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.MmTelFeatureConnection: android.os.IBinder mBinder>;

        $r3 = specialinvoke r0.<com.android.ims.MmTelFeatureConnection: android.telephony.ims.aidl.IImsMmTelFeature getServiceInterface(android.os.IBinder)>($r2);

        i0 = interfaceinvoke $r3.<android.telephony.ims.aidl.IImsMmTelFeature: int shouldProcessCall(java.lang.String[])>(r10);

        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.ims.MmTelFeatureConnection: java.lang.String TAG> = "MmTelFeatureConnection";

        return;
    }
}
