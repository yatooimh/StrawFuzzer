public class com.android.ims.RcsFeatureConnection extends com.android.ims.FeatureConnection
{
    private static final java.lang.String TAG;
    public com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager mAvailabilityCallbackManager;
    public com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager;

    private void <init>(android.content.Context, int, com.android.ims.FeatureConnection$IFeatureUpdate)
    {
        com.android.ims.RcsFeatureConnection r0;
        android.content.Context r1, $r4, $r6;
        int i0;
        com.android.ims.FeatureConnection$IFeatureUpdate r2;
        com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager $r3;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.ims.FeatureConnection$IFeatureUpdate;

        specialinvoke r0.<com.android.ims.FeatureConnection: void <init>(android.content.Context,int)>(r1, i0);

        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void setStatusCallback(com.android.ims.FeatureConnection$IFeatureUpdate)>(r2);

        $r3 = new com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager;

        $r4 = r0.<com.android.ims.RcsFeatureConnection: android.content.Context mContext>;

        specialinvoke $r3.<com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager: void <init>(com.android.ims.RcsFeatureConnection,android.content.Context)>(r0, $r4);

        r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager mAvailabilityCallbackManager> = $r3;

        $r5 = new com.android.ims.RcsFeatureConnection$RegistrationCallbackManager;

        $r6 = r0.<com.android.ims.RcsFeatureConnection: android.content.Context mContext>;

        specialinvoke $r5.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void <init>(com.android.ims.RcsFeatureConnection,android.content.Context)>(r0, $r6);

        r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager> = $r5;

        return;
    }

    static void access$000(com.android.ims.RcsFeatureConnection, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;

        r0 := @parameter0: com.android.ims.RcsFeatureConnection;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r1);

        return;
    }

    static void access$100(com.android.ims.RcsFeatureConnection, java.lang.String)
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.ims.RcsFeatureConnection;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void loge(java.lang.String)>(r1);

        return;
    }

    static void access$200(com.android.ims.RcsFeatureConnection, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;

        r0 := @parameter0: com.android.ims.RcsFeatureConnection;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r1);

        return;
    }

    static void access$300(com.android.ims.RcsFeatureConnection, java.lang.String)
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.ims.RcsFeatureConnection;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>(r1);

        return;
    }

    private void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsRcsFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IImsCapabilityCallback r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r5 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r3 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsRcsFeature: void addCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static com.android.ims.RcsFeatureConnection create(android.content.Context, int, com.android.ims.FeatureConnection$IFeatureUpdate)
    {
        int i0;
        com.android.ims.RcsFeatureConnection $r0;
        boolean $z0;
        java.lang.Object $r1;
        com.android.ims.internal.IImsServiceFeatureCallback $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.IBinder $r7;
        android.content.Context r8;
        com.android.ims.FeatureConnection$IFeatureUpdate r9;
        android.telephony.TelephonyManager r11;
        android.telephony.ims.aidl.IImsRcsFeature r12;

        r8 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r9 := @parameter2: com.android.ims.FeatureConnection$IFeatureUpdate;

        $r0 = new com.android.ims.RcsFeatureConnection;

        specialinvoke $r0.<com.android.ims.RcsFeatureConnection: void <init>(android.content.Context,int,com.android.ims.FeatureConnection$IFeatureUpdate)>(r8, i0, r9);

        $z0 = staticinvoke <com.android.ims.ImsManager: boolean isImsSupportedOnDevice(android.content.Context)>(r8);

        if $z0 != 0 goto label1;

        <com.android.ims.RcsFeatureConnection: boolean sImsSupportedOnDevice> = 0;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RcsFeatureConnection", "create: IMS is not supported");

        return $r0;

     label1:
        $r1 = virtualinvoke r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r11 = (android.telephony.TelephonyManager) $r1;

        if r11 != null goto label2;

        staticinvoke <com.android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RcsFeatureConnection", "create: TelephonyManager is null");

        return $r0;

     label2:
        $r2 = virtualinvoke $r0.<com.android.ims.RcsFeatureConnection: com.android.ims.internal.IImsServiceFeatureCallback getListener()>();

        r12 = virtualinvoke r11.<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRcsFeature getImsRcsFeatureAndListen(int,com.android.ims.internal.IImsServiceFeatureCallback)>(i0, $r2);

        if r12 == null goto label3;

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RcsFeatureConnection", "create: set binder");

        $r7 = interfaceinvoke r12.<android.telephony.ims.aidl.IImsRcsFeature: android.os.IBinder asBinder()>();

        virtualinvoke $r0.<com.android.ims.RcsFeatureConnection: void setBinder(android.os.IBinder)>($r7);

        virtualinvoke $r0.<com.android.ims.RcsFeatureConnection: int getFeatureState()>();

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("create: binder is null! Slot Id: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RcsFeatureConnection", $r6);

     label4:
        return $r0;
    }

    private boolean isUpdateForThisFeatureAndSlot(int, int)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0, i1, $i2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        if $i2 != i0 goto label1;

        if i1 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void log(java.lang.String)
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RcsFeatureConnection [");

        $i0 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r7, r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RcsFeatureConnection [");

        $i0 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r7, r1);

        return;
    }

    private void logi(java.lang.String)
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RcsFeatureConnection [");

        $i0 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.telephony.Rlog: int i(java.lang.String,java.lang.String)>($r7, r1);

        return;
    }

    private void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsRcsFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IImsCapabilityCallback r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r5 := @parameter0: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r3 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsRcsFeature: void removeCapabilityCallback(android.telephony.ims.aidl.IImsCapabilityCallback)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void removeImsFeatureCallback()
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.TelephonyManager r1;
        int $i0;
        com.android.ims.internal.IImsServiceFeatureCallback $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r1 == null goto label1;

        $i0 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        $r2 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: com.android.ims.internal.IImsServiceFeatureCallback getListener()>();

        virtualinvoke r1.<android.telephony.TelephonyManager: void unregisterImsFeatureCallback(int,int,com.android.ims.internal.IImsServiceFeatureCallback)>($i0, 2, $r2);

     label1:
        return;
    }

    public void addCallback(android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void addCallback(android.os.IInterface)>(r1);

        return;
    }

    public void addCallbackForSubscription(int, android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager mAvailabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager: void addCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void addCallbackForSubscription(int, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void addCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void changeEnabledCapabilities(android.telephony.ims.feature.CapabilityChangeRequest, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        java.lang.Object r2;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsRcsFeature $r4;
        java.lang.Throwable $r5;
        android.telephony.ims.feature.CapabilityChangeRequest r6;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r6 := @parameter0: android.telephony.ims.feature.CapabilityChangeRequest;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        r2 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r4 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r3);

        interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: void changeCapabilitiesConfiguration(android.telephony.ims.feature.CapabilityChangeRequest,android.telephony.ims.aidl.IImsCapabilityCallback)>(r6, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void close()
    {
        com.android.ims.RcsFeatureConnection r0;
        com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager $r1;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void removeRcsFeatureListener()>();

        $r1 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager mAvailabilityCallbackManager>;

        virtualinvoke $r1.<com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager: void close()>();

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void close()>();

        return;
    }

    protected android.telephony.ims.aidl.IImsRegistration getRegistrationBinder()
    {
        com.android.ims.RcsFeatureConnection r0;
        int $i0;
        android.telephony.TelephonyManager r1;
        android.telephony.ims.aidl.IImsRegistration r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.TelephonyManager getTelephonyManager()>();

        if r1 == null goto label1;

        $i0 = r0.<com.android.ims.RcsFeatureConnection: int mSlotId>;

        r2 = virtualinvoke r1.<android.telephony.TelephonyManager: android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int)>($i0, 2);

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    public android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)
    {
        com.android.ims.RcsFeatureConnection r0;
        android.os.IBinder r1;
        android.telephony.ims.aidl.IImsRcsFeature $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.telephony.ims.aidl.IImsRcsFeature$Stub: android.telephony.ims.aidl.IImsRcsFeature asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public void handleImsFeatureCreatedCallback(int, int)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0, i1;
        java.lang.StringBuilder $r1, r13;
        java.lang.String $r6, $r9;
        boolean $z0, $z1;
        java.lang.Throwable $r10;
        java.lang.Object r12;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS feature created: slotId= ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feature=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>($r6);

        $z0 = specialinvoke r0.<com.android.ims.RcsFeatureConnection: boolean isUpdateForThisFeatureAndSlot(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r12 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        $z1 = r0.<com.android.ims.RcsFeatureConnection: boolean mIsAvailable>;

        if $z1 != 0 goto label3;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RCS enabled on slotId: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>($r9);

        r0.<com.android.ims.RcsFeatureConnection: boolean mIsAvailable> = 1;

     label3:
        exitmonitor r12;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r12;

     label7:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void handleImsFeatureRemovedCallback(int, int)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0, i1;
        java.lang.StringBuilder $r1, r13;
        java.lang.String $r6, $r9;
        boolean $z0;
        java.lang.Throwable $r10;
        java.lang.Object r12;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS feature removed: slotId= ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feature=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>($r6);

        $z0 = specialinvoke r0.<com.android.ims.RcsFeatureConnection: boolean isUpdateForThisFeatureAndSlot(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r12 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r12;

     label2:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rcs UCE removed on slotId: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>($r9);

        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void onRemovedOrDied()>();

        exitmonitor r12;

     label3:
        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r12;

     label6:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void handleImsStatusChangedCallback(int, int, int)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r9;
        boolean $z0;
        java.lang.Integer $r10;
        java.lang.Throwable $r11;
        java.lang.Object r13;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS status changed: slotId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feature=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void logi(java.lang.String)>($r9);

        $z0 = specialinvoke r0.<com.android.ims.RcsFeatureConnection: boolean isUpdateForThisFeatureAndSlot(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r13 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r13;

     label2:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r0.<com.android.ims.RcsFeatureConnection: java.lang.Integer mFeatureStateCached> = $r10;

        exitmonitor r13;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r13;

     label6:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void onRemovedOrDied()
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        specialinvoke r0.<com.android.ims.RcsFeatureConnection: void removeImsFeatureCallback()>();

        specialinvoke r0.<com.android.ims.FeatureConnection: void onRemovedOrDied()>();

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void close()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void queryCapabilityConfiguration(int, int, android.telephony.ims.aidl.IImsCapabilityCallback) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsRcsFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IImsCapabilityCallback r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: android.telephony.ims.aidl.IImsCapabilityCallback;

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r3 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsRcsFeature: void queryCapabilityConfiguration(int,int,android.telephony.ims.aidl.IImsCapabilityCallback)>(i0, i1, r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int queryCapabilityStatus() throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.Object r1;
        int i0;
        android.os.IBinder $r3;
        android.telephony.ims.aidl.IImsRcsFeature $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r3 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r4 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r3);

        i0 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: int queryCapabilityStatus()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeCallback(android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r1 := @parameter0: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void removeCallback(android.os.IInterface)>(r1);

        return;
    }

    public void removeCallbackForSubscription(int, android.telephony.ims.aidl.IImsCapabilityCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0;
        android.telephony.ims.aidl.IImsCapabilityCallback r1;
        com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsCapabilityCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager mAvailabilityCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$AvailabilityCallbackManager: void removeCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void removeCallbackForSubscription(int, android.telephony.ims.aidl.IImsRegistrationCallback)
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0;
        android.telephony.ims.aidl.IImsRegistrationCallback r1;
        com.android.ims.RcsFeatureConnection$RegistrationCallbackManager $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.aidl.IImsRegistrationCallback;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: com.android.ims.RcsFeatureConnection$RegistrationCallbackManager mRegistrationCallbackManager>;

        virtualinvoke $r2.<com.android.ims.RcsFeatureConnection$RegistrationCallbackManager: void removeCallbackForSubscription(android.os.IInterface,int)>(r1, i0);

        return;
    }

    public void removeRcsFeatureListener()
    {
        com.android.ims.RcsFeatureConnection r0;
        android.os.RemoteException $r2;

        r0 := @this: com.android.ims.RcsFeatureConnection;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void setRcsFeatureListener(android.telephony.ims.aidl.IRcsFeatureListener)>(null);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.Integer retrieveFeatureState()
    {
        com.android.ims.RcsFeatureConnection r0;
        int i0;
        android.os.IBinder $r2, $r3;
        android.telephony.ims.aidl.IImsRcsFeature $r4;
        java.lang.Integer $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        $r2 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r4 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r3);

        i0 = interfaceinvoke $r4.<android.telephony.ims.aidl.IImsRcsFeature: int getFeatureState()>();

     label2:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r5;

     label3:
        $r6 := @caughtexception;

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRcsFeatureListener(android.telephony.ims.aidl.IRcsFeatureListener) throws android.os.RemoteException
    {
        com.android.ims.RcsFeatureConnection r0;
        java.lang.Object r1;
        android.os.IBinder $r2;
        android.telephony.ims.aidl.IImsRcsFeature $r3;
        java.lang.Throwable $r4;
        android.telephony.ims.aidl.IRcsFeatureListener r5;

        r0 := @this: com.android.ims.RcsFeatureConnection;

        r5 := @parameter0: android.telephony.ims.aidl.IRcsFeatureListener;

        r1 = r0.<com.android.ims.RcsFeatureConnection: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.ims.RcsFeatureConnection: void checkServiceIsReady()>();

        $r2 = r0.<com.android.ims.RcsFeatureConnection: android.os.IBinder mBinder>;

        $r3 = virtualinvoke r0.<com.android.ims.RcsFeatureConnection: android.telephony.ims.aidl.IImsRcsFeature getServiceInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.telephony.ims.aidl.IImsRcsFeature: void setListener(android.telephony.ims.aidl.IRcsFeatureListener)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.ims.RcsFeatureConnection: java.lang.String TAG> = "RcsFeatureConnection";

        return;
    }
}
