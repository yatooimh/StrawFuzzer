class com.android.ims.internal.IImsCallSession$Stub$Proxy extends java.lang.Object implements com.android.ims.internal.IImsCallSession
{
    public static com.android.ims.internal.IImsCallSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void accept(int, android.telephony.ims.ImsStreamMediaProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.ImsStreamMediaProfile r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.ImsStreamMediaProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void accept(int,android.telephony.ims.ImsStreamMediaProfile)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        $r1 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void close()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void consultativeTransfer(com.android.ims.internal.IImsCallSession) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: com.android.ims.internal.IImsCallSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void consultativeTransfer(com.android.ims.internal.IImsCallSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void deflect(java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void deflect(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void extendToConference(java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void extendToConference(java.lang.String[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCallId() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: java.lang.String getCallId()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.ImsCallProfile getCallProfile() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.ims.internal.IImsCallSession $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ims.ImsCallProfile r9, r10;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.ims.internal.IImsCallSession: android.telephony.ims.ImsCallProfile getCallProfile()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.telephony.ims.ImsCallProfile: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.ims.ImsCallProfile) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        return "com.android.ims.internal.IImsCallSession";
    }

    public android.telephony.ims.ImsCallProfile getLocalCallProfile() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.ims.internal.IImsCallSession $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ims.ImsCallProfile r9, r10;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.ims.internal.IImsCallSession: android.telephony.ims.ImsCallProfile getLocalCallProfile()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.telephony.ims.ImsCallProfile: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.ims.ImsCallProfile) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getProperty(java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8, r9;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: java.lang.String getProperty(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.ImsCallProfile getRemoteCallProfile() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.ims.internal.IImsCallSession $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ims.ImsCallProfile r9, r10;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.ims.internal.IImsCallSession: android.telephony.ims.ImsCallProfile getRemoteCallProfile()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.telephony.ims.ImsCallProfile: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.ims.ImsCallProfile) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getState() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: int getState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsVideoCallProvider r8, r9;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <com.android.ims.internal.IImsVideoCallProvider$Stub: com.android.ims.internal.IImsVideoCallProvider asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void hold(android.telephony.ims.ImsStreamMediaProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.ImsStreamMediaProfile r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.ImsStreamMediaProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void hold(android.telephony.ims.ImsStreamMediaProfile)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void inviteParticipants(java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void inviteParticipants(java.lang.String[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isInCall() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.ims.internal.IImsCallSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        r6 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.ims.internal.IImsCallSession: boolean isInCall()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isMultiparty() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        com.android.ims.internal.IImsCallSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        r6 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.ims.internal.IImsCallSession: boolean isMultiparty()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void merge() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void merge()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void reject(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void reject(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeParticipants(java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void removeParticipants(java.lang.String[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void resume(android.telephony.ims.ImsStreamMediaProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.ImsStreamMediaProfile r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.ImsStreamMediaProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void resume(android.telephony.ims.ImsStreamMediaProfile)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void sendDtmf(char, android.os.Message) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        char c0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Message r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        c0 := @parameter0: char;

        r7 := @parameter1: android.os.Message;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(c0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Message: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void sendDtmf(char,android.os.Message)>(c0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void sendRttMessage(java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void sendRttMessage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendRttModifyRequest(android.telephony.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.ImsCallProfile r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.ImsCallProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void sendRttModifyRequest(android.telephony.ims.ImsCallProfile)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void sendRttModifyResponse(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void sendRttModifyResponse(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendUssd(java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void sendUssd(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setListener(android.telephony.ims.aidl.IImsCallSessionListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.aidl.IImsCallSessionListener r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: android.telephony.ims.aidl.IImsCallSessionListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.telephony.ims.aidl.IImsCallSessionListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void setListener(android.telephony.ims.aidl.IImsCallSessionListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setMute(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void setMute(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void start(java.lang.String, android.telephony.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.telephony.ims.ImsCallProfile r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: android.telephony.ims.ImsCallProfile;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void start(java.lang.String,android.telephony.ims.ImsCallProfile)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startConference(java.lang.String[], android.telephony.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.telephony.ims.ImsCallProfile r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r8 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.telephony.ims.ImsCallProfile;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void startConference(java.lang.String[],android.telephony.ims.ImsCallProfile)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startDtmf(char) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        char c0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        c0 := @parameter0: char;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(c0);

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void startDtmf(char)>(c0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopDtmf() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void stopDtmf()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void terminate(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsCallSession: void terminate(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void transfer(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void transfer(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void update(int, android.telephony.ims.ImsStreamMediaProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsCallSession $r4, $r5;
        java.lang.Throwable $r6;
        android.telephony.ims.ImsStreamMediaProfile r7;

        r0 := @this: com.android.ims.internal.IImsCallSession$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.telephony.ims.ImsStreamMediaProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.telephony.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsCallSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsCallSession: void update(int,android.telephony.ims.ImsStreamMediaProfile)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
