class com.android.ims.internal.IImsService$Stub$Proxy extends java.lang.Object implements com.android.ims.internal.IImsService
{
    public static com.android.ims.internal.IImsService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addRegistrationListener(int, int, com.android.ims.internal.IImsRegistrationListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.ims.internal.IImsService $r4, $r5;
        java.lang.Throwable $r6;
        com.android.ims.internal.IImsRegistrationListener r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: com.android.ims.internal.IImsRegistrationListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.ims.internal.IImsRegistrationListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsService: void addRegistrationListener(int,int,com.android.ims.internal.IImsRegistrationListener)>(i0, i1, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        $r1 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsService: void close(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.telephony.ims.ImsCallProfile createCallProfile(int, int, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0, i1, i2, $i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.ims.internal.IImsService $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ims.ImsCallProfile r9, r10;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.ims.internal.IImsService: android.telephony.ims.ImsCallProfile createCallProfile(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label5;

        $r4 = <android.telephony.ims.ImsCallProfile: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.telephony.ims.ImsCallProfile) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public com.android.ims.internal.IImsCallSession createCallSession(int, android.telephony.ims.ImsCallProfile, com.android.ims.internal.IImsCallSessionListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        com.android.ims.internal.IImsCallSessionListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5, r10;
        boolean $z0;
        com.android.ims.internal.IImsService $r6, $r7;
        java.lang.Throwable $r8;
        android.telephony.ims.ImsCallProfile r9;
        com.android.ims.internal.IImsCallSession r11, r12;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: android.telephony.ims.ImsCallProfile;

        r1 := @parameter2: com.android.ims.internal.IImsCallSessionListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.telephony.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r10 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSessionListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r10 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r4 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession createCallSession(int,android.telephony.ims.ImsCallProfile,com.android.ims.internal.IImsCallSessionListener)>(i0, r9, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession asInterface(android.os.IBinder)>($r5);

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public com.android.ims.internal.IImsConfig getConfigInterface(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsConfig r8, r9;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsConfig getConfigInterface(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <com.android.ims.internal.IImsConfig$Stub: com.android.ims.internal.IImsConfig asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.ims.internal.IImsEcbm getEcbmInterface(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsEcbm r8, r9;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsEcbm getEcbmInterface(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <com.android.ims.internal.IImsEcbm$Stub: com.android.ims.internal.IImsEcbm asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        return "com.android.ims.internal.IImsService";
    }

    public com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsMultiEndpoint r8, r9;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <com.android.ims.internal.IImsMultiEndpoint$Stub: com.android.ims.internal.IImsMultiEndpoint asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.ims.internal.IImsCallSession getPendingCallSession(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        com.android.ims.internal.IImsCallSession r9, r10;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession getPendingCallSession(int,java.lang.String)>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <com.android.ims.internal.IImsCallSession$Stub: com.android.ims.internal.IImsCallSession asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.ims.internal.IImsUt getUtInterface(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        com.android.ims.internal.IImsUt r8, r9;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsUt getUtInterface(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isConnected(int, int, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.ims.internal.IImsService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: boolean isConnected(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isOpened(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.ims.internal.IImsService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: boolean isOpened(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int open(int, int, android.app.PendingIntent, com.android.ims.internal.IImsRegistrationListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0, i1, i2, i3;
        com.android.ims.internal.IImsRegistrationListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;
        android.app.PendingIntent r8;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r8 := @parameter2: android.app.PendingIntent;

        r1 := @parameter3: com.android.ims.internal.IImsRegistrationListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<com.android.ims.internal.IImsRegistrationListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<com.android.ims.internal.IImsService: int open(int,int,android.app.PendingIntent,com.android.ims.internal.IImsRegistrationListener)>(i1, i0, r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void setRegistrationListener(int, com.android.ims.internal.IImsRegistrationListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.ims.internal.IImsService $r4, $r5;
        java.lang.Throwable $r6;
        com.android.ims.internal.IImsRegistrationListener r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: com.android.ims.internal.IImsRegistrationListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.ims.internal.IImsRegistrationListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsService: void setRegistrationListener(int,com.android.ims.internal.IImsRegistrationListener)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setUiTTYMode(int, int, android.os.Message) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsService $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Message r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: android.os.Message;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Message: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsService: void setUiTTYMode(int,int,android.os.Message)>(i0, i1, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void turnOffIms(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsService: void turnOffIms(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void turnOnIms(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsService: void turnOnIms(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
