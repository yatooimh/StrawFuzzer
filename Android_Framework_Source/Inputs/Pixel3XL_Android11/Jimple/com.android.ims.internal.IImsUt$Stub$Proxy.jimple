class com.android.ims.internal.IImsUt$Stub$Proxy extends java.lang.Object implements com.android.ims.internal.IImsUt
{
    public static com.android.ims.internal.IImsUt sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        $r1 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.ims.internal.IImsUt: void close()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        return "com.android.ims.internal.IImsUt";
    }

    public int queryCLIP() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCLIP()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCLIR() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCLIR()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCOLP() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCOLP()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCOLR() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCOLR()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCallBarring(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCallBarring(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCallBarringForServiceClass(int, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCallBarringForServiceClass(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCallForward(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        java.lang.String r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.ims.internal.IImsUt: int queryCallForward(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int queryCallWaiting() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int queryCallWaiting()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setListener(com.android.ims.internal.IImsUtListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        com.android.ims.internal.IImsUtListener r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r7 := @parameter0: com.android.ims.internal.IImsUtListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<com.android.ims.internal.IImsUtListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.ims.internal.IImsUt: void setListener(com.android.ims.internal.IImsUtListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int transact(android.os.Bundle) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Bundle r7;
        int i0, i1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r7 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.ims.internal.IImsUt: int transact(android.os.Bundle)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int updateCLIP(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1, i2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCLIP(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int updateCLIR(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCLIR(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCOLP(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1, i2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCOLP(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int updateCOLR(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCOLR(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCallBarring(int, int, java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<com.android.ims.internal.IImsUt: int updateCallBarring(int,int,java.lang.String[])>(i1, i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCallBarringForServiceClass(int, int, java.lang.String[], int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i3 = interfaceinvoke $r5.<com.android.ims.internal.IImsUt: int updateCallBarringForServiceClass(int,int,java.lang.String[],int)>(i2, i0, r7, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i4;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCallBarringWithPassword(int, int, java.lang.String[], int, java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r8 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i3 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCallBarringWithPassword(int,int,java.lang.String[],int,java.lang.String)>(i2, i0, r8, i1, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i4;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCallForward(int, int, java.lang.String, int, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.ims.internal.IImsUt $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i4 = interfaceinvoke $r5.<com.android.ims.internal.IImsUt: int updateCallForward(int,int,java.lang.String,int,int)>(i3, i0, r7, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i4;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i5 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i5;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int updateCallWaiting(boolean, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.ims.internal.IImsUt $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2, i3;
        byte b1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.ims.internal.IImsUt$Stub: com.android.ims.internal.IImsUt getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<com.android.ims.internal.IImsUt: int updateCallWaiting(boolean,int)>(z0, i0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
