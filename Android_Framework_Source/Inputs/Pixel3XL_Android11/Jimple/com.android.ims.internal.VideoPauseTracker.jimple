public class com.android.ims.internal.VideoPauseTracker extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    public static final int SOURCE_DATA_ENABLED;
    private static final java.lang.String SOURCE_DATA_ENABLED_STR;
    public static final int SOURCE_INCALL;
    private static final java.lang.String SOURCE_INCALL_STR;
    private java.util.Set mPauseRequests;
    private java.lang.Object mPauseRequestsLock;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.ims.internal.VideoPauseTracker: java.lang.String SOURCE_INCALL_STR> = "INCALL";

        <com.android.ims.internal.VideoPauseTracker: int SOURCE_INCALL> = 1;

        <com.android.ims.internal.VideoPauseTracker: java.lang.String SOURCE_DATA_ENABLED_STR> = "DATA_ENABLED";

        <com.android.ims.internal.VideoPauseTracker: int SOURCE_DATA_ENABLED> = 2;

        $r0 = class "Lcom/android/ims/internal/VideoPauseTracker;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.ims.internal.VideoPauseTracker r0;
        android.util.ArraySet $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>(int)>(2);

        r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock> = $r2;

        return;
    }

    private java.lang.String sourceToString(int)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        int i0;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return "unknown";

     label1:
        return "DATA_ENABLED";

     label2:
        return "INCALL";
    }

    private java.lang.String sourcesToString(java.util.Collection)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        java.lang.Object r1, $r5;
        com.android.ims.internal._$$Lambda$VideoPauseTracker$s27lPMyD4hPTfNQr9bbkfdTbLK8 r2;
        java.util.stream.Stream $r3, r8;
        java.util.stream.Collector $r4;
        java.lang.Throwable $r6;
        java.util.Collection r7;
        java.lang.String r9;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        r7 := @parameter0: java.util.Collection;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label1:
        r8 = interfaceinvoke r7.<java.util.Collection: java.util.stream.Stream stream()>();

        r2 = new com.android.ims.internal._$$Lambda$VideoPauseTracker$s27lPMyD4hPTfNQr9bbkfdTbLK8;

        specialinvoke r2.<com.android.ims.internal._$$Lambda$VideoPauseTracker$s27lPMyD4hPTfNQr9bbkfdTbLK8: void <init>(com.android.ims.internal.VideoPauseTracker)>(r0);

        $r3 = interfaceinvoke r8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r2);

        $r4 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r4);

        r9 = (java.lang.String) $r5;

        exitmonitor r1;

     label2:
        return r9;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearPauseRequests()
    {
        com.android.ims.internal.VideoPauseTracker r0;
        java.lang.Object r1;
        java.util.Set $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isPaused()
    {
        com.android.ims.internal.VideoPauseTracker r0;
        java.lang.Object r1;
        java.util.Set $r3;
        boolean $z0, z1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String lambda$sourcesToString$0$VideoPauseTracker(java.lang.Integer)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        java.lang.Integer r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        r1 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $r2 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>($i0);

        return $r2;
    }

    public boolean shouldPauseVideoFor(int)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        java.util.Set $r3, $r8, $r14;
        java.lang.Integer $r4;
        java.lang.Object[] $r5, $r11;
        java.lang.String $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16;
        java.lang.Throwable $r17;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        i0 := @parameter0: int;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label1:
        z0 = virtualinvoke r0.<com.android.ims.internal.VideoPauseTracker: boolean isPaused()>();

        $r3 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        if z0 != 0 goto label5;

     label3:
        $r12 = <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[2];

        $r13 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>(i0);

        $r11[0] = $r13;

        $r14 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r15 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourcesToString(java.util.Collection)>($r14);

        $r11[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("shouldPauseVideoFor: source=%s, pendingRequests=%s - should pause", $r11);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r12, $r16);

        exitmonitor r1;

     label4:
        return 1;

     label5:
        $r6 = <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>(i0);

        $r5[0] = $r7;

        $r8 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r9 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourcesToString(java.util.Collection)>($r8);

        $r5[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("shouldPauseVideoFor: source=%s, pendingRequests=%s - already paused", $r5);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r10);

        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r17 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean shouldResumeVideoFor(int)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        int i0;
        java.lang.Object r1;
        boolean z0, z1;
        java.util.Set $r3, $r8, $r14, $r20;
        java.lang.Integer $r4;
        java.lang.Object[] $r5, $r11, $r17;
        java.lang.String $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22;
        java.lang.Throwable $r23;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        i0 := @parameter0: int;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label01:
        z0 = virtualinvoke r0.<com.android.ims.internal.VideoPauseTracker: boolean isPaused()>();

        $r3 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r4);

        z1 = virtualinvoke r0.<com.android.ims.internal.VideoPauseTracker: boolean isPaused()>();

     label02:
        if z0 == 0 goto label05;

        if z1 != 0 goto label05;

     label03:
        $r18 = <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG>;

        $r17 = newarray (java.lang.Object)[2];

        $r19 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>(i0);

        $r17[0] = $r19;

        $r20 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r21 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourcesToString(java.util.Collection)>($r20);

        $r17[1] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("shouldResumeVideoFor: source=%s, pendingRequests=%s - should resume", $r17);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r18, $r22);

        exitmonitor r1;

     label04:
        return 1;

     label05:
        if z0 == 0 goto label08;

        if z1 == 0 goto label08;

     label06:
        $r12 = <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[2];

        $r13 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>(i0);

        $r11[0] = $r13;

        $r14 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r15 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourcesToString(java.util.Collection)>($r14);

        $r11[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("shouldResumeVideoFor: source=%s, pendingRequests=%s - stay paused", $r11);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r12, $r16);

        exitmonitor r1;

     label07:
        return 0;

     label08:
        $r6 = <com.android.ims.internal.VideoPauseTracker: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourceToString(int)>(i0);

        $r5[0] = $r7;

        $r8 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r9 = specialinvoke r0.<com.android.ims.internal.VideoPauseTracker: java.lang.String sourcesToString(java.util.Collection)>($r8);

        $r5[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("shouldResumeVideoFor: source=%s, pendingRequests=%s - not paused", $r5);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r10);

        exitmonitor r1;

     label09:
        return 1;

     label10:
        $r23 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean wasVideoPausedFromSource(int)
    {
        com.android.ims.internal.VideoPauseTracker r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        java.util.Set $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.ims.internal.VideoPauseTracker;

        i0 := @parameter0: int;

        r1 = r0.<com.android.ims.internal.VideoPauseTracker: java.lang.Object mPauseRequestsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.ims.internal.VideoPauseTracker: java.util.Set mPauseRequests>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
