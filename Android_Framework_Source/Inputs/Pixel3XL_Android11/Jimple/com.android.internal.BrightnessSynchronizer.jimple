public class com.android.internal.BrightnessSynchronizer extends java.lang.Object
{
    private static final android.net.Uri BRIGHTNESS_FLOAT_URI;
    private static final android.net.Uri BRIGHTNESS_URI;
    public static final float EPSILON;
    private static final int MSG_UPDATE_FLOAT;
    private static final int MSG_UPDATE_INT;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private float mPreferredSettingValue;
    private final java.util.Queue mWriteHistory;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <com.android.internal.BrightnessSynchronizer: java.lang.String TAG> = "BrightnessSynchronizer";

        <com.android.internal.BrightnessSynchronizer: int MSG_UPDATE_INT> = 2;

        <com.android.internal.BrightnessSynchronizer: int MSG_UPDATE_FLOAT> = 1;

        <com.android.internal.BrightnessSynchronizer: float EPSILON> = 0.001F;

        $r0 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("screen_brightness");

        <com.android.internal.BrightnessSynchronizer: android.net.Uri BRIGHTNESS_URI> = $r0;

        $r1 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("screen_brightness_float");

        <com.android.internal.BrightnessSynchronizer: android.net.Uri BRIGHTNESS_FLOAT_URI> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.BrightnessSynchronizer r0;
        android.content.Context r1;
        java.util.LinkedList $r3;
        com.android.internal.BrightnessSynchronizer$1 $r4;
        com.android.internal.BrightnessSynchronizer$BrightnessSyncObserver $r5;

        r0 := @this: com.android.internal.BrightnessSynchronizer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory> = $r3;

        $r4 = new com.android.internal.BrightnessSynchronizer$1;

        specialinvoke $r4.<com.android.internal.BrightnessSynchronizer$1: void <init>(com.android.internal.BrightnessSynchronizer)>(r0);

        r0.<com.android.internal.BrightnessSynchronizer: android.os.Handler mHandler> = $r4;

        r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext> = r1;

        $r5 = new com.android.internal.BrightnessSynchronizer$BrightnessSyncObserver;

        specialinvoke $r5.<com.android.internal.BrightnessSynchronizer$BrightnessSyncObserver: void <init>(com.android.internal.BrightnessSynchronizer,android.os.Handler)>(r0, $r4);

        virtualinvoke $r5.<com.android.internal.BrightnessSynchronizer$BrightnessSyncObserver: void startObserving()>();

        return;
    }

    static void access$000(com.android.internal.BrightnessSynchronizer, int)
    {
        com.android.internal.BrightnessSynchronizer r0;
        int i0;

        r0 := @parameter0: com.android.internal.BrightnessSynchronizer;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.BrightnessSynchronizer: void updateBrightnessFloatFromInt(int)>(i0);

        return;
    }

    static void access$100(com.android.internal.BrightnessSynchronizer, float)
    {
        com.android.internal.BrightnessSynchronizer r0;
        float f0;

        r0 := @parameter0: com.android.internal.BrightnessSynchronizer;

        f0 := @parameter1: float;

        specialinvoke r0.<com.android.internal.BrightnessSynchronizer: void updateBrightnessIntFromFloat(float)>(f0);

        return;
    }

    static android.net.Uri access$200()
    {
        android.net.Uri $r0;

        $r0 = <com.android.internal.BrightnessSynchronizer: android.net.Uri BRIGHTNESS_URI>;

        return $r0;
    }

    static android.content.Context access$300(com.android.internal.BrightnessSynchronizer)
    {
        com.android.internal.BrightnessSynchronizer r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.BrightnessSynchronizer;

        $r1 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        return $r1;
    }

    static int access$400(android.content.Context)
    {
        android.content.Context r0;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.android.internal.BrightnessSynchronizer: int getScreenBrightnessInt(android.content.Context)>(r0);

        return $i0;
    }

    static android.os.Handler access$500(com.android.internal.BrightnessSynchronizer)
    {
        com.android.internal.BrightnessSynchronizer r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.internal.BrightnessSynchronizer;

        $r1 = r0.<com.android.internal.BrightnessSynchronizer: android.os.Handler mHandler>;

        return $r1;
    }

    static android.net.Uri access$600()
    {
        android.net.Uri $r0;

        $r0 = <com.android.internal.BrightnessSynchronizer: android.net.Uri BRIGHTNESS_FLOAT_URI>;

        return $r0;
    }

    static float access$700(android.content.Context)
    {
        android.content.Context r0;
        float $f0;

        r0 := @parameter0: android.content.Context;

        $f0 = staticinvoke <com.android.internal.BrightnessSynchronizer: float getScreenBrightnessFloat(android.content.Context)>(r0);

        return $f0;
    }

    public static int brightnessFloatToInt(android.content.Context, float)
    {
        android.content.Context r0;
        float f0, $f1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        f0 := @parameter1: float;

        $f1 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(android.content.Context,float)>(r0, f0);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        return $i0;
    }

    private static float brightnessFloatToIntRange(float, float, float, float, float)
    {
        float f0, f1, f2, f3, f4, $f5;
        boolean $z0, $z1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        $z0 = staticinvoke <com.android.internal.BrightnessSynchronizer: boolean floatEquals(float,float)>(f0, -1.0F);

        if $z0 == 0 goto label1;

        return 0.0F;

     label1:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z1 == 0 goto label2;

        return -1.0F;

     label2:
        $f5 = staticinvoke <android.util.MathUtils: float constrainedMap(float,float,float,float,float)>(f3, f4, f1, f2, f0);

        return $f5;
    }

    public static float brightnessFloatToIntRange(android.content.Context, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;
        java.lang.Object $r0;
        android.content.Context r1;
        android.os.PowerManager r2;

        r1 := @parameter0: android.content.Context;

        f0 := @parameter1: float;

        $r0 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r2 = (android.os.PowerManager) $r0;

        f1 = virtualinvoke r2.<android.os.PowerManager: float getBrightnessConstraint(int)>(0);

        f2 = virtualinvoke r2.<android.os.PowerManager: float getBrightnessConstraint(int)>(1);

        $f3 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(float,float,float,float,float)>(f1, 0.0F, 1.0F, 1.0F, 255.0F);

        $f4 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(float,float,float,float,float)>(f2, 0.0F, 1.0F, 1.0F, 255.0F);

        $f5 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(float,float,float,float,float)>(f0, f1, f2, $f3, $f4);

        return $f5;
    }

    public static float brightnessIntToFloat(int, int, int, float, float)
    {
        int i0, i1, i2;
        float f0, f1, $f2, $f3, $f4, $f5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        if i0 != 0 goto label1;

        return -1.0F;

     label1:
        if i0 != -1 goto label2;

        return #NaNF;

     label2:
        $f4 = (float) i1;

        $f3 = (float) i2;

        $f2 = (float) i0;

        $f5 = staticinvoke <android.util.MathUtils: float constrainedMap(float,float,float,float,float)>(f0, f1, $f4, $f3, $f2);

        return $f5;
    }

    public static float brightnessIntToFloat(android.content.Context, int)
    {
        int i0, $i1, $i2;
        float f0, f1, $f2, $f3, $f4;
        java.lang.Object $r0;
        android.content.Context r1;
        android.os.PowerManager r2;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r0 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r2 = (android.os.PowerManager) $r0;

        f0 = virtualinvoke r2.<android.os.PowerManager: float getBrightnessConstraint(int)>(0);

        f1 = virtualinvoke r2.<android.os.PowerManager: float getBrightnessConstraint(int)>(1);

        $f2 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(float,float,float,float,float)>(f0, 0.0F, 1.0F, 1.0F, 255.0F);

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f3 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessFloatToIntRange(float,float,float,float,float)>(f1, 0.0F, 1.0F, 1.0F, 255.0F);

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $f4 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessIntToFloat(int,int,int,float,float)>(i0, $i1, $i2, f0, f1);

        return $f4;
    }

    public static boolean floatEquals(float, float)
    {
        float f0, f1, $f2, $f3;
        byte $b0, $b1;
        boolean $z0, $z1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 != 0 goto label1;

        return 1;

     label1:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $f2 = f0 - f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $b1 = $f3 cmpg 0.001F;

        if $b1 >= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private static float getScreenBrightnessFloat(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver $r1;
        float $f0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $f0 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>($r1, "screen_brightness_float", #NaNF, -2);

        return $f0;
    }

    private static int getScreenBrightnessInt(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r1, "screen_brightness", 0, -2);

        return $i0;
    }

    private void updateBrightnessFloatFromInt(int)
    {
        com.android.internal.BrightnessSynchronizer r0;
        int i0, $i1;
        java.lang.Object r1;
        float f0, $f1;
        java.util.Queue $r2, $r5, $r10;
        android.content.Context $r3, $r4, $r7;
        java.lang.Float $r6;
        android.content.ContentResolver $r8;
        java.lang.Integer $r9;
        boolean $z2;

        r0 := @this: com.android.internal.BrightnessSynchronizer;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        if r1 == null goto label1;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label1;

        $r10 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        interfaceinvoke $r10.<java.util.Queue: java.lang.Object poll()>();

        goto label3;

     label1:
        $r3 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        $f1 = r0.<com.android.internal.BrightnessSynchronizer: float mPreferredSettingValue>;

        $i1 = staticinvoke <com.android.internal.BrightnessSynchronizer: int brightnessFloatToInt(android.content.Context,float)>($r3, $f1);

        if $i1 != i0 goto label2;

        return;

     label2:
        $r4 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        f0 = staticinvoke <com.android.internal.BrightnessSynchronizer: float brightnessIntToFloat(android.content.Context,int)>($r4, i0);

        $r5 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r5.<java.util.Queue: boolean offer(java.lang.Object)>($r6);

        r0.<com.android.internal.BrightnessSynchronizer: float mPreferredSettingValue> = f0;

        $r7 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>($r8, "screen_brightness_float", f0, -2);

     label3:
        return;
    }

    private void updateBrightnessIntFromFloat(float)
    {
        com.android.internal.BrightnessSynchronizer r0;
        float f0;
        int i0;
        java.lang.Object r1;
        android.content.Context $r2, $r6;
        java.util.Queue $r3, $r4, $r9;
        java.lang.Integer $r5;
        android.content.ContentResolver $r7;
        java.lang.Float $r8;
        boolean $z2;

        r0 := @this: com.android.internal.BrightnessSynchronizer;

        f0 := @parameter0: float;

        $r2 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        i0 = staticinvoke <com.android.internal.BrightnessSynchronizer: int brightnessFloatToInt(android.content.Context,float)>($r2, f0);

        $r3 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        r1 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object peek()>();

        if r1 == null goto label1;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label1;

        $r9 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        interfaceinvoke $r9.<java.util.Queue: java.lang.Object poll()>();

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.BrightnessSynchronizer: java.util.Queue mWriteHistory>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r4.<java.util.Queue: boolean offer(java.lang.Object)>($r5);

        r0.<com.android.internal.BrightnessSynchronizer: float mPreferredSettingValue> = f0;

        $r6 = r0.<com.android.internal.BrightnessSynchronizer: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r7, "screen_brightness", i0, -2);

     label2:
        return;
    }
}
