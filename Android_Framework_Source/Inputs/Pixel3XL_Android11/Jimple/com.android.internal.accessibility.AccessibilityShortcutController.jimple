public class com.android.internal.accessibility.AccessibilityShortcutController extends java.lang.Object
{
    public static final android.content.ComponentName COLOR_INVERSION_COMPONENT_NAME;
    public static final android.content.ComponentName DALTONIZER_COMPONENT_NAME;
    public static final android.content.ComponentName MAGNIFICATION_COMPONENT_NAME;
    public static final java.lang.String MAGNIFICATION_CONTROLLER_NAME;
    private static final java.lang.String TAG;
    private static final android.media.AudioAttributes VIBRATION_ATTRIBUTES;
    private static java.util.Map sFrameworkShortcutFeaturesMap;
    private android.app.AlertDialog mAlertDialog;
    private final android.content.Context mContext;
    private boolean mEnabledOnLockScreen;
    public com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider;
    private final android.os.Handler mHandler;
    private boolean mIsShortcutEnabled;
    private int mUserId;

    static void <clinit>()
    {
        android.content.ComponentName $r0, $r1, $r2;
        android.media.AudioAttributes$Builder $r3, $r4, $r5;
        android.media.AudioAttributes $r6;

        <com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String TAG> = "AccessibilityShortcutController";

        <com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String MAGNIFICATION_CONTROLLER_NAME> = "com.android.server.accessibility.MagnificationController";

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.accessibility", "ColorInversion");

        <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName COLOR_INVERSION_COMPONENT_NAME> = $r0;

        $r1 = new android.content.ComponentName;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.accessibility", "Daltonizer");

        <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName DALTONIZER_COMPONENT_NAME> = $r1;

        $r2 = new android.content.ComponentName;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.accessibility", "Magnification");

        <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName MAGNIFICATION_COMPONENT_NAME> = $r2;

        $r3 = new android.media.AudioAttributes$Builder;

        specialinvoke $r3.<android.media.AudioAttributes$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(11);

        $r6 = virtualinvoke $r5.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <com.android.internal.accessibility.AccessibilityShortcutController: android.media.AudioAttributes VIBRATION_ATTRIBUTES> = $r6;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, int)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.os.Handler r1;
        int i0, $i1;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r2;
        com.android.internal.accessibility.AccessibilityShortcutController$1 $r3;
        android.content.Context $r4, $r7, $r10, r13;
        android.content.ContentResolver $r5, $r8, $r11;
        android.net.Uri $r6, $r9, $r12;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r13 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider;

        specialinvoke $r2.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: void <init>()>();

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider> = $r2;

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext> = r13;

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.os.Handler mHandler> = r1;

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId> = i0;

        $r3 = new com.android.internal.accessibility.AccessibilityShortcutController$1;

        specialinvoke $r3.<com.android.internal.accessibility.AccessibilityShortcutController$1: void <init>(com.android.internal.accessibility.AccessibilityShortcutController,android.os.Handler)>(r0, r1);

        $r4 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_shortcut_target_service");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r6, 0, $r3, -1);

        $r7 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_shortcut_on_lock_screen");

        virtualinvoke $r8.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r9, 0, $r3, -1);

        $r10 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("accessibility_shortcut_dialog_shown");

        virtualinvoke $r11.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r12, 0, $r3, -1);

        $i1 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId>;

        virtualinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void setCurrentUser(int)>($i1);

        return;
    }

    static int access$000(com.android.internal.accessibility.AccessibilityShortcutController)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int $i0;

        r0 := @parameter0: com.android.internal.accessibility.AccessibilityShortcutController;

        $i0 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId>;

        return $i0;
    }

    static android.content.Context access$100(com.android.internal.accessibility.AccessibilityShortcutController)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.accessibility.AccessibilityShortcutController;

        $r1 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        return $r1;
    }

    static android.os.Handler access$200(com.android.internal.accessibility.AccessibilityShortcutController)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.internal.accessibility.AccessibilityShortcutController;

        $r1 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$300(com.android.internal.accessibility.AccessibilityShortcutController)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;

        r0 := @parameter0: com.android.internal.accessibility.AccessibilityShortcutController;

        specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void playNotificationTone()>();

        return;
    }

    private android.app.AlertDialog createShortcutWarningDialog(int)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int i0, $i1;
        java.util.List r1;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider r2;
        android.content.Context $r3, $r4;
        android.app.AlertDialog$Builder $r5, $r7, $r9, $r10, $r11, $r13, $r15;
        java.lang.String $r6, $r8;
        com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$2NcDVJHkpsPbwr45v1_NfIM8row $r12;
        com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$T96D356_n5VObNOonEIYV8s83Fc $r14;
        android.app.AlertDialog $r16;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        r1 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getTargets(android.content.Context,int)>($r3, 1);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r4 = virtualinvoke r2.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.content.Context getSystemUiContext()>();

        $r5 = virtualinvoke r2.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.app.AlertDialog$Builder getAlertDialogBuilder(android.content.Context)>($r4);

        $r6 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String getShortcutWarningTitle(java.util.List)>(r1);

        $r7 = virtualinvoke $r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r6);

        $r8 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String getShortcutWarningMessage(java.util.List)>(r1);

        $r9 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r8);

        $r10 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        $r11 = virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(17039571, null);

        $r12 = new com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$2NcDVJHkpsPbwr45v1_NfIM8row;

        specialinvoke $r12.<com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$2NcDVJHkpsPbwr45v1_NfIM8row: void <init>(com.android.internal.accessibility.AccessibilityShortcutController,int)>(r0, i0);

        $r13 = virtualinvoke $r11.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039570, $r12);

        $r14 = new com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$T96D356_n5VObNOonEIYV8s83Fc;

        specialinvoke $r14.<com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$T96D356_n5VObNOonEIYV8s83Fc: void <init>(com.android.internal.accessibility.AccessibilityShortcutController,int)>(r0, i0);

        $r15 = virtualinvoke $r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r14);

        $r16 = virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r16;
    }

    public static java.util.Map getFrameworkShortcutFeaturesMap()
    {
        java.util.Map $r1, $r2, $r10;
        android.util.ArrayMap $r3;
        com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo $r4, $r7;
        android.content.ComponentName $r5, $r8;

        $r1 = <com.android.internal.accessibility.AccessibilityShortcutController: java.util.Map sFrameworkShortcutFeaturesMap>;

        if $r1 != null goto label1;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(2);

        $r5 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName COLOR_INVERSION_COMPONENT_NAME>;

        $r4 = new com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo;

        specialinvoke $r4.<com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("accessibility_display_inversion_enabled", "1", "0", 17039812);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $r8 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName DALTONIZER_COMPONENT_NAME>;

        $r7 = new com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo;

        specialinvoke $r7.<com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>("accessibility_display_daltonizer_enabled", "1", "0", 17039811);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        <com.android.internal.accessibility.AccessibilityShortcutController: java.util.Map sFrameworkShortcutFeaturesMap> = $r10;

     label1:
        $r2 = <com.android.internal.accessibility.AccessibilityShortcutController: java.util.Map sFrameworkShortcutFeaturesMap>;

        return $r2;
    }

    private android.accessibilityservice.AccessibilityServiceInfo getInfoForTargetService()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.content.ComponentName r1;
        android.content.Context $r2;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r3;
        android.view.accessibility.AccessibilityManager $r4;
        android.accessibilityservice.AccessibilityServiceInfo $r5;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r1 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName getShortcutTargetComponentName()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.view.accessibility.AccessibilityManager getAccessibilityManagerInstance(android.content.Context)>($r2);

        $r5 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: android.accessibilityservice.AccessibilityServiceInfo getInstalledServiceInfoWithComponentName(android.content.ComponentName)>(r1);

        return $r5;
    }

    private java.lang.String getShortcutFeatureDescription(boolean)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        boolean z0, $z1;
        android.accessibilityservice.AccessibilityServiceInfo r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.content.Context $r4, $r7, $r12;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r5;
        android.view.accessibility.AccessibilityManager $r6;
        android.content.pm.ResolveInfo $r8;
        java.lang.CharSequence $r9, r18;
        java.lang.Object[] $r10;
        java.lang.String $r11, $r13, r17;
        android.content.ComponentName r14;
        com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo r15;
        android.content.pm.PackageManager r16;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        z0 := @parameter0: boolean;

        r14 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName getShortcutTargetComponentName()>();

        if r14 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.android.internal.accessibility.AccessibilityShortcutController: java.util.Map getFrameworkShortcutFeaturesMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14);

        r15 = (com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo) $r3;

        if r15 == null goto label2;

        $r12 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r13 = virtualinvoke r15.<com.android.internal.accessibility.AccessibilityShortcutController$ToggleableFrameworkFeatureInfo: java.lang.String getLabel(android.content.Context)>($r12);

        return $r13;

     label2:
        $r5 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r4 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.view.accessibility.AccessibilityManager getAccessibilityManagerInstance(android.content.Context)>($r4);

        r1 = virtualinvoke $r6.<android.view.accessibility.AccessibilityManager: android.accessibilityservice.AccessibilityServiceInfo getInstalledServiceInfoWithComponentName(android.content.ComponentName)>(r14);

        if r1 != null goto label3;

        return null;

     label3:
        $r7 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        r16 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke r1.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r9 = virtualinvoke $r8.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r16);

        r17 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

        r18 = virtualinvoke r1.<android.accessibilityservice.AccessibilityServiceInfo: java.lang.CharSequence loadSummary(android.content.pm.PackageManager)>(r16);

        if z0 == 0 goto label5;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r18);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r17;

        $r10[1] = r18;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s\n%s", $r10);

        return $r11;

     label5:
        return r17;
    }

    private android.content.ComponentName getShortcutTargetComponentName()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        java.util.List r1;
        android.content.Context $r2;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r3;
        android.view.accessibility.AccessibilityManager $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r6;
        android.content.ComponentName $r7;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.view.accessibility.AccessibilityManager getAccessibilityManagerInstance(android.content.Context)>($r2);

        r1 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)>(1);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r6);

        return $r7;
    }

    private java.lang.String getShortcutWarningMessage(java.util.List)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        com.android.internal.accessibility.dialog.AccessibilityTarget r2, $r17;
        int $i0;
        java.lang.StringBuilder $r3;
        boolean $z0;
        java.lang.Object[] $r4, $r9, $r14;
        android.content.Context $r5, $r10, $r15;
        java.lang.String $r6, $r7, $r12, $r19;
        java.lang.Object $r8, $r16;
        java.lang.CharSequence $r11, $r18;
        java.util.List r20;
        java.util.Iterator r21;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r20 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r20.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r15 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r14 = newarray (java.lang.Object)[1];

        $r16 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.android.internal.accessibility.dialog.AccessibilityTarget) $r16;

        $r18 = virtualinvoke $r17.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.CharSequence getLabel()>();

        $r14[0] = $r18;

        $r19 = virtualinvoke $r15.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039572, $r14);

        return $r19;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r21 = interfaceinvoke r20.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.accessibility.dialog.AccessibilityTarget) $r8;

        $r10 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r9 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke r2.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.CharSequence getLabel()>();

        $r9[0] = $r11;

        $r12 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039567, $r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        goto label2;

     label3:
        $r5 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039568, $r4);

        return $r7;
    }

    private java.lang.String getShortcutWarningTitle(java.util.List)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        java.util.List r1;
        int $i0;
        android.content.Context $r2, $r5;
        java.lang.String $r3, $r9;
        java.lang.Object[] $r4;
        java.lang.Object $r6;
        com.android.internal.accessibility.dialog.AccessibilityTarget $r7;
        java.lang.CharSequence $r8;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (com.android.internal.accessibility.dialog.AccessibilityTarget) $r6;

        $r8 = virtualinvoke $r7.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.CharSequence getLabel()>();

        $r4[0] = $r8;

        $r9 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039573, $r4);

        return $r9;

     label1:
        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(17039569);

        return $r3;
    }

    private boolean hasFeatureLeanback()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        $r1 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback");

        return $z0;
    }

    private boolean hasShortcutTarget()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        java.lang.String r1, r5;
        android.content.Context $r2, $r4;
        android.content.ContentResolver $r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId>;

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r3, "accessibility_shortcut_target_service", $i0);

        r5 = r1;

        if r1 != null goto label1;

        $r4 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(17039854);

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private boolean isServiceEnabled(android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.accessibilityservice.AccessibilityServiceInfo r1;
        android.content.Context $r2;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r3;
        android.view.accessibility.AccessibilityManager $r4;
        java.util.List $r5;
        boolean $z0;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r1 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.view.accessibility.AccessibilityManager getAccessibilityManagerInstance(android.content.Context)>($r2);

        $r5 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>(-1);

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    static void lambda$performTtsPrompt$2(com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt, android.content.DialogInterface)
    {
        com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt r0;
        android.content.DialogInterface r1;

        r0 := @parameter0: com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt;

        r1 := @parameter1: android.content.DialogInterface;

        virtualinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt: void dismiss()>();

        return;
    }

    private boolean performTtsPrompt(android.app.AlertDialog)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.app.AlertDialog r1;
        java.lang.String r2;
        android.accessibilityservice.AccessibilityServiceInfo r3;
        boolean $z0;
        int $i0, $i1;
        com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$cQtLiNhDc4H3BvMBZy00zj21oKg $r4;
        com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt $r5;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r1 := @parameter0: android.app.AlertDialog;

        r2 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String getShortcutFeatureDescription(boolean)>(0);

        r3 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.accessibilityservice.AccessibilityServiceInfo getInfoForTargetService()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label3;

        if r3 != null goto label1;

        goto label3;

     label1:
        $i0 = r3.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i1 = $i0 & 1024;

        if $i1 != 0 goto label2;

        return 0;

     label2:
        $r4 = new com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$cQtLiNhDc4H3BvMBZy00zj21oKg;

        $r5 = new com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt;

        specialinvoke $r5.<com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt: void <init>(com.android.internal.accessibility.AccessibilityShortcutController,java.lang.String)>(r0, r2);

        specialinvoke $r4.<com.android.internal.accessibility._$$Lambda$AccessibilityShortcutController$cQtLiNhDc4H3BvMBZy00zj21oKg: void <init>(com.android.internal.accessibility.AccessibilityShortcutController$TtsPrompt)>($r5);

        virtualinvoke r1.<android.app.AlertDialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>($r4);

        return 1;

     label3:
        return 0;
    }

    private void playNotificationTone()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        android.media.Ringtone r1;
        boolean $z0;
        android.net.Uri $r2;
        android.content.Context $r3;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r4;
        android.media.AudioAttributes$Builder $r5, $r6;
        android.media.AudioAttributes $r7;
        byte b0;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        $z0 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean hasFeatureLeanback()>();

        if $z0 == 0 goto label1;

        b0 = 11;

        goto label2;

     label1:
        b0 = 10;

     label2:
        $r4 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        r1 = virtualinvoke $r4.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r3, $r2);

        if r1 == null goto label3;

        $r5 = new android.media.AudioAttributes$Builder;

        specialinvoke $r5.<android.media.AudioAttributes$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(b0);

        $r7 = virtualinvoke $r6.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke r1.<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>($r7);

        virtualinvoke r1.<android.media.Ringtone: void play()>();

     label3:
        return;
    }

    private void showToast()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        boolean z0, z1;
        int $i0, $i1, $i2, i3;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4, r10, r12;
        java.lang.Object[] $r5;
        android.content.Context $r6, r11;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r7;
        android.widget.Toast $r8;
        android.accessibilityservice.AccessibilityServiceInfo r9;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        r9 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.accessibilityservice.AccessibilityServiceInfo getInfoForTargetService()>();

        if r9 != null goto label1;

        return;

     label1:
        r10 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: java.lang.String getShortcutFeatureDescription(boolean)>(0);

        if r10 != null goto label2;

        return;

     label2:
        $i0 = r9.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        z0 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean isServiceEnabled(android.accessibilityservice.AccessibilityServiceInfo)>(r9);

        $r1 = virtualinvoke r9.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r3 = $r2.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 <= 29 goto label5;

        if z1 == 0 goto label5;

        if z0 == 0 goto label5;

        return;

     label5:
        r11 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        if z0 == 0 goto label6;

        i3 = 17039563;

        goto label7;

     label6:
        i3 = 17039564;

     label7:
        $r4 = virtualinvoke r11.<android.content.Context: java.lang.String getString(int)>(i3);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r10;

        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r7 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r6 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.widget.Toast makeToastFromText(android.content.Context,java.lang.CharSequence,int)>($r6, r12, 1);

        virtualinvoke $r8.<android.widget.Toast: void show()>();

        return;
    }

    public boolean isAccessibilityShortcutAvailable(boolean)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        boolean $z0, $z1, z2, z3;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        z2 := @parameter0: boolean;

        $z0 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean mIsShortcutEnabled>;

        if $z0 == 0 goto label2;

        if z2 == 0 goto label1;

        $z1 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean mEnabledOnLockScreen>;

        if $z1 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public void lambda$createShortcutWarningDialog$0$AccessibilityShortcutController(int, android.content.DialogInterface, int)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int i0, i1;
        android.content.DialogInterface r1;
        android.content.Context $r2, $r4;
        android.content.ContentResolver $r3, $r5;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.DialogInterface;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r3, "accessibility_shortcut_target_service", "", i0);

        $r4 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r5, "accessibility_shortcut_dialog_shown", 0, i0);

        return;
    }

    public void lambda$createShortcutWarningDialog$1$AccessibilityShortcutController(int, android.content.DialogInterface)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int i0;
        android.content.DialogInterface r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.DialogInterface;

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "accessibility_shortcut_dialog_shown", 0, i0);

        return;
    }

    public void onSettingsChanged()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        boolean z0, z1;
        android.content.ContentResolver r1;
        int i0, $i1, $i2, $i3;
        android.content.Context $r2;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        z0 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean hasShortcutTarget()>();

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId>;

        z1 = 0;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "accessibility_shortcut_dialog_shown", 0, i0);

        $i2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId>;

        $i3 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r1, "accessibility_shortcut_on_lock_screen", $i1, $i2);

        if $i3 != 1 goto label1;

        z1 = 1;

     label1:
        r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean mEnabledOnLockScreen> = z1;

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean mIsShortcutEnabled> = z0;

        return;
    }

    public void performAccessibilityShortcut()
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int i0, i1;
        android.view.Window r1;
        android.content.Context $r2, $r3, $r5, $r10;
        java.lang.Object $r4;
        com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider $r6;
        android.view.accessibility.AccessibilityManager $r7;
        boolean $z0, $z2;
        android.app.AlertDialog $r8, $r9, r17, r19;
        android.content.res.Resources $r11;
        int[] $r12;
        long[] $r13;
        android.media.AudioAttributes $r14;
        android.content.ContentResolver r15;
        android.os.Vibrator r16;
        android.view.WindowManager$LayoutParams r18;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AccessibilityShortcutController", "Accessibility shortcut activated");

        $r2 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        r15 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r15, "accessibility_shortcut_dialog_shown", 0, i0);

        $r3 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        r16 = (android.os.Vibrator) $r4;

        if r16 == null goto label1;

        $z2 = virtualinvoke r16.<android.os.Vibrator: boolean hasVibrator()>();

        if $z2 == 0 goto label1;

        $r10 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: int[] getIntArray(int)>(17236049);

        $r13 = staticinvoke <com.android.internal.util.ArrayUtils: long[] convertToLongArray(int[])>($r12);

        $r14 = <com.android.internal.accessibility.AccessibilityShortcutController: android.media.AudioAttributes VIBRATION_ATTRIBUTES>;

        virtualinvoke r16.<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>($r13, -1, $r14);

     label1:
        if i1 != 0 goto label4;

        r17 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog createShortcutWarningDialog(int)>(i0);

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog mAlertDialog> = r17;

        if r17 != null goto label2;

        return;

     label2:
        $z0 = specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: boolean performTtsPrompt(android.app.AlertDialog)>(r17);

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void playNotificationTone()>();

     label3:
        $r8 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog mAlertDialog>;

        r1 = virtualinvoke $r8.<android.app.AlertDialog: android.view.Window getWindow()>();

        r18 = virtualinvoke r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r18.<android.view.WindowManager$LayoutParams: int type> = 2009;

        virtualinvoke r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r18);

        $r9 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog mAlertDialog>;

        virtualinvoke $r9.<android.app.AlertDialog: void show()>();

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r15, "accessibility_shortcut_dialog_shown", 1, i0);

        goto label6;

     label4:
        specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void playNotificationTone()>();

        r19 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog mAlertDialog>;

        if r19 == null goto label5;

        virtualinvoke r19.<android.app.AlertDialog: void dismiss()>();

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.app.AlertDialog mAlertDialog> = null;

     label5:
        specialinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void showToast()>();

        $r6 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider mFrameworkObjectProvider>;

        $r5 = r0.<com.android.internal.accessibility.AccessibilityShortcutController: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<com.android.internal.accessibility.AccessibilityShortcutController$FrameworkObjectProvider: android.view.accessibility.AccessibilityManager getAccessibilityManagerInstance(android.content.Context)>($r5);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityManager: void performAccessibilityShortcut()>();

     label6:
        return;
    }

    public void setCurrentUser(int)
    {
        com.android.internal.accessibility.AccessibilityShortcutController r0;
        int i0;

        r0 := @this: com.android.internal.accessibility.AccessibilityShortcutController;

        i0 := @parameter0: int;

        r0.<com.android.internal.accessibility.AccessibilityShortcutController: int mUserId> = i0;

        virtualinvoke r0.<com.android.internal.accessibility.AccessibilityShortcutController: void onSettingsChanged()>();

        return;
    }
}
