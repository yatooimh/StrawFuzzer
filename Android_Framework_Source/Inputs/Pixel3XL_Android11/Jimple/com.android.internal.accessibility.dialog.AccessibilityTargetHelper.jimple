public final class com.android.internal.accessibility.dialog.AccessibilityTargetHelper extends java.lang.Object
{

    private void <init>()
    {
        com.android.internal.accessibility.dialog.AccessibilityTargetHelper r0;

        r0 := @this: com.android.internal.accessibility.dialog.AccessibilityTargetHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean arePackageNameAndLabelTheSame(com.android.internal.accessibility.dialog.AccessibilityTarget, com.android.internal.accessibility.dialog.AccessibilityTarget)
    {
        com.android.internal.accessibility.dialog.AccessibilityTarget r0, r1;
        android.content.ComponentName r2, $r5;
        boolean z0, z1, z2;
        java.lang.String $r3, $r4, $r6, $r7;
        java.lang.CharSequence $r8, $r9;

        r0 := @parameter0: com.android.internal.accessibility.dialog.AccessibilityTarget;

        r1 := @parameter1: com.android.internal.accessibility.dialog.AccessibilityTarget;

        $r3 = virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.String getId()>();

        r2 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.String getId()>();

        $r5 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r7 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        $r8 = virtualinvoke r1.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.CharSequence getLabel()>();

        $r9 = virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.CharSequence getLabel()>();

        z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if z1 == 0 goto label1;

        if z0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private static com.android.internal.accessibility.dialog.AccessibilityTarget createAccessibilityServiceTarget(android.content.Context, int, android.accessibilityservice.AccessibilityServiceInfo)
    {
        android.content.Context r0;
        int i0, i1;
        android.accessibilityservice.AccessibilityServiceInfo r1;
        com.android.internal.accessibility.dialog.VolumeShortcutToggleAccessibilityServiceTarget $r2;
        com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget $r3;
        java.lang.IllegalStateException $r4;
        com.android.internal.accessibility.dialog.ToggleAccessibilityServiceTarget $r5;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.accessibilityservice.AccessibilityServiceInfo;

        i1 = staticinvoke <com.android.internal.accessibility.util.AccessibilityUtils: int getAccessibilityServiceFragmentType(android.accessibilityservice.AccessibilityServiceInfo)>(r1);

        if i1 == 0 goto label3;

        if i1 == 1 goto label2;

        if i1 != 2 goto label1;

        $r5 = new com.android.internal.accessibility.dialog.ToggleAccessibilityServiceTarget;

        specialinvoke $r5.<com.android.internal.accessibility.dialog.ToggleAccessibilityServiceTarget: void <init>(android.content.Context,int,android.accessibilityservice.AccessibilityServiceInfo)>(r0, i0, r1);

        return $r5;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected fragment type");

        throw $r4;

     label2:
        $r3 = new com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget;

        specialinvoke $r3.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: void <init>(android.content.Context,int,android.accessibilityservice.AccessibilityServiceInfo)>(r0, i0, r1);

        return $r3;

     label3:
        $r2 = new com.android.internal.accessibility.dialog.VolumeShortcutToggleAccessibilityServiceTarget;

        specialinvoke $r2.<com.android.internal.accessibility.dialog.VolumeShortcutToggleAccessibilityServiceTarget: void <init>(android.content.Context,int,android.accessibilityservice.AccessibilityServiceInfo)>(r0, i0, r1);

        return $r2;
    }

    static android.view.View createEnableDialogContentView(android.content.Context, com.android.internal.accessibility.dialog.AccessibilityServiceTarget, android.view.View$OnClickListener, android.view.View$OnClickListener)
    {
        com.android.internal.accessibility.dialog.AccessibilityServiceTarget r0;
        android.view.View$OnClickListener r1, r2;
        android.view.View r3, $r6, $r7, $r10, $r16, $r17;
        java.lang.Object $r4;
        android.view.LayoutInflater $r5;
        boolean $z0;
        android.widget.ImageView $r8;
        android.graphics.drawable.Drawable $r9;
        java.lang.Object[] $r11, $r20;
        android.widget.TextView $r12, r25;
        java.lang.CharSequence $r13, $r14, $r21, $r22;
        java.lang.String $r15, $r23;
        com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$p07MIbd1XcAGmZDRfNaTs3RXoOc $r18;
        com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$QVEb0xJRKeodTO7fUpIUwWC51jE $r19;
        android.content.Context r24;
        android.widget.Button r26, r27;

        r24 := @parameter0: android.content.Context;

        r0 := @parameter1: com.android.internal.accessibility.dialog.AccessibilityServiceTarget;

        r1 := @parameter2: android.view.View$OnClickListener;

        r2 := @parameter3: android.view.View$OnClickListener;

        $r4 = virtualinvoke r24.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r5 = (android.view.LayoutInflater) $r4;

        r3 = virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367066, null);

        $r6 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16908678);

        r25 = (android.widget.TextView) $r6;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isNonDefaultBlockEncrypted()>();

        if $z0 == 0 goto label1;

        $r20 = newarray (java.lang.Object)[1];

        $r21 = virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: java.lang.CharSequence getLabel()>();

        $r22 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.lang.CharSequence getServiceName(android.content.Context,java.lang.CharSequence)>(r24, $r21);

        $r20[0] = $r22;

        $r23 = virtualinvoke r24.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039549, $r20);

        virtualinvoke r25.<android.widget.TextView: void setText(java.lang.CharSequence)>($r23);

        virtualinvoke r25.<android.widget.TextView: void setVisibility(int)>(0);

        goto label2;

     label1:
        virtualinvoke r25.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        $r7 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16908683);

        $r8 = (android.widget.ImageView) $r7;

        $r9 = virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r8.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r9);

        $r10 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16908684);

        $r12 = (android.widget.TextView) $r10;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: java.lang.CharSequence getLabel()>();

        $r14 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.lang.CharSequence getServiceName(android.content.Context,java.lang.CharSequence)>(r24, $r13);

        $r11[0] = $r14;

        $r15 = virtualinvoke r24.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17039550, $r11);

        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>($r15);

        $r16 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16908685);

        r26 = (android.widget.Button) $r16;

        $r17 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16908686);

        r27 = (android.widget.Button) $r17;

        $r18 = new com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$p07MIbd1XcAGmZDRfNaTs3RXoOc;

        specialinvoke $r18.<com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$p07MIbd1XcAGmZDRfNaTs3RXoOc: void <init>(com.android.internal.accessibility.dialog.AccessibilityServiceTarget,android.view.View$OnClickListener)>(r0, r1);

        virtualinvoke r26.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r18);

        $r19 = new com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$QVEb0xJRKeodTO7fUpIUwWC51jE;

        specialinvoke $r19.<com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$QVEb0xJRKeodTO7fUpIUwWC51jE: void <init>(com.android.internal.accessibility.dialog.AccessibilityServiceTarget,android.view.View$OnClickListener)>(r0, r2);

        virtualinvoke r27.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r19);

        return r3;
    }

    private static java.util.List getAccessibilityActivityTargets(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        java.lang.Object $r1, $r4;
        java.util.ArrayList $r2;
        boolean $z0;
        com.android.internal.accessibility.dialog.AccessibilityActivityTarget $r3;
        android.accessibilityservice.AccessibilityShortcutInfo $r5;
        java.util.List $r6, r8;
        android.view.accessibility.AccessibilityManager r7;
        java.util.Iterator r10;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r7 = (android.view.accessibility.AccessibilityManager) $r1;

        $i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        r8 = virtualinvoke r7.<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityShortcutListAsUser(android.content.Context,int)>(r0, $i1);

        if r8 != null goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        $r2 = new java.util.ArrayList;

        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i2);

        r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = new com.android.internal.accessibility.dialog.AccessibilityActivityTarget;

        $r4 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.accessibilityservice.AccessibilityShortcutInfo) $r4;

        specialinvoke $r3.<com.android.internal.accessibility.dialog.AccessibilityActivityTarget: void <init>(android.content.Context,int,android.accessibilityservice.AccessibilityShortcutInfo)>(r0, i0, $r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label2;

     label3:
        return $r2;
    }

    private static java.util.List getAccessibilityFilteredTargets(android.content.Context, int)
    {
        int i0;
        java.util.List r0, r6;
        boolean $z0;
        java.util.ArrayList $r1;
        com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$eIaGTmpp9XwiG92wEkzn8tORb6k $r2;
        java.lang.Object $r3;
        com.android.internal.accessibility.dialog.AccessibilityTarget $r4;
        android.content.Context r5;
        java.util.Iterator r7;

        r5 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getAccessibilityServiceTargets(android.content.Context,int)>(r5, i0);

        r6 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getAccessibilityActivityTargets(android.content.Context,int)>(r5, i0);

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = new com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$eIaGTmpp9XwiG92wEkzn8tORb6k;

        $r3 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.internal.accessibility.dialog.AccessibilityTarget) $r3;

        specialinvoke $r2.<com.android.internal.accessibility.dialog._$$Lambda$AccessibilityTargetHelper$eIaGTmpp9XwiG92wEkzn8tORb6k: void <init>(com.android.internal.accessibility.dialog.AccessibilityTarget)>($r4);

        interfaceinvoke r0.<java.util.List: boolean removeIf(java.util.function.Predicate)>($r2);

        goto label1;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>(r0);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>(r6);

        return $r1;
    }

    private static java.util.List getAccessibilityServiceTargets(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.Iterator r1;
        java.lang.Object $r2, $r4;
        java.util.ArrayList $r3;
        android.content.pm.ResolveInfo $r5;
        android.content.pm.ServiceInfo $r6;
        android.content.pm.ApplicationInfo $r7;
        java.util.List $r8, r10;
        android.view.accessibility.AccessibilityManager r9;
        boolean $z1, z2;
        android.accessibilityservice.AccessibilityServiceInfo r12;
        com.android.internal.accessibility.dialog.AccessibilityTarget $r13;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r9 = (android.view.accessibility.AccessibilityManager) $r2;

        r10 = virtualinvoke r9.<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>();

        if r10 != null goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r8;

     label1:
        $r3 = new java.util.ArrayList;

        $i2 = interfaceinvoke r10.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i2);

        r1 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.accessibilityservice.AccessibilityServiceInfo) $r4;

        $r5 = virtualinvoke r12.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r6.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i1 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i3 = r12.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i4 = $i3 & 256;

        if $i4 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if i1 > 29 goto label5;

        if z2 != 0 goto label5;

        if i0 != 0 goto label5;

        goto label2;

     label5:
        $r13 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: com.android.internal.accessibility.dialog.AccessibilityTarget createAccessibilityServiceTarget(android.content.Context,int,android.accessibilityservice.AccessibilityServiceInfo)>(r0, i0, r12);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label6:
        return $r3;
    }

    static java.util.List getInstalledTargets(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getAccessibilityFilteredTargets(android.content.Context,int)>(r0, i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getWhiteListingFeatureTargets(android.content.Context,int)>(r0, i0);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r2;
    }

    private static java.lang.CharSequence getServiceName(android.content.Context, java.lang.CharSequence)
    {
        android.content.Context r0;
        java.lang.CharSequence r1, $r7;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        android.os.LocaleList $r4;
        java.util.Locale $r5;
        android.text.BidiFormatter $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = virtualinvoke $r3.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r5 = virtualinvoke $r4.<android.os.LocaleList: java.util.Locale get(int)>(0);

        $r6 = staticinvoke <android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)>($r5);

        $r7 = virtualinvoke $r6.<android.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>(r1);

        return $r7;
    }

    public static java.util.List getTargets(android.content.Context, int)
    {
        int i0;
        java.util.List r0, r15;
        java.lang.String r1, $r10, $r11, $r12;
        java.util.Iterator r2, r17;
        com.android.internal.accessibility.dialog.AccessibilityTarget r3;
        android.content.ComponentName r4, $r13;
        java.lang.Object $r5, $r8, $r9;
        android.view.accessibility.AccessibilityManager $r6;
        java.util.ArrayList $r7;
        boolean $z0, $z1, $z2, $z4, $z6;
        android.content.Context r14;

        r14 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: java.util.List getInstalledTargets(android.content.Context,int)>(r14, i0);

        $r5 = virtualinvoke r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r6 = (android.view.accessibility.AccessibilityManager) $r5;

        r15 = virtualinvoke $r6.<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)>(i0);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r17 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r8;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.accessibility.dialog.AccessibilityTarget) $r9;

        $r10 = "com.android.server.accessibility.MagnificationController";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label3;

        r4 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        $r12 = virtualinvoke r3.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.String getId()>();

        $r13 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r12);

        $z4 = virtualinvoke r4.<android.content.ComponentName: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label3;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label2;

     label3:
        $r11 = virtualinvoke r3.<com.android.internal.accessibility.dialog.AccessibilityTarget: java.lang.String getId()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>($r11);

        if $z2 == 0 goto label4;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        return $r7;
    }

    private static java.util.List getWhiteListingFeatureTargets(android.content.Context, int)
    {
        int i0;
        java.util.ArrayList $r3;
        com.android.internal.accessibility.dialog.InvisibleToggleWhiteListingFeatureTarget $r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r9, $r11, $r12, $r16, $r18, $r19;
        android.graphics.drawable.Drawable $r6, $r13, $r20;
        com.android.internal.accessibility.dialog.ToggleWhiteListingFeatureTarget $r7, $r14;
        android.content.ComponentName $r8, $r10, $r15, $r17;
        android.content.Context r21;

        r21 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new com.android.internal.accessibility.dialog.InvisibleToggleWhiteListingFeatureTarget;

        $z0 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isShortcutContained(android.content.Context,int,java.lang.String)>(r21, i0, "com.android.server.accessibility.MagnificationController");

        $r5 = virtualinvoke r21.<android.content.Context: java.lang.String getString(int)>(17039556);

        $r6 = virtualinvoke r21.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302297);

        specialinvoke $r4.<com.android.internal.accessibility.dialog.InvisibleToggleWhiteListingFeatureTarget: void <init>(android.content.Context,int,boolean,java.lang.String,java.lang.CharSequence,android.graphics.drawable.Drawable,java.lang.String)>(r21, i0, $z0, "com.android.server.accessibility.MagnificationController", $r5, $r6, "accessibility_display_magnification_navbar_enabled");

        $r7 = new com.android.internal.accessibility.dialog.ToggleWhiteListingFeatureTarget;

        $r8 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName DALTONIZER_COMPONENT_NAME>;

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z1 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isShortcutContained(android.content.Context,int,java.lang.String)>(r21, i0, $r9);

        $r10 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName DALTONIZER_COMPONENT_NAME>;

        $r11 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r12 = virtualinvoke r21.<android.content.Context: java.lang.String getString(int)>(17039811);

        $r13 = virtualinvoke r21.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302295);

        specialinvoke $r7.<com.android.internal.accessibility.dialog.ToggleWhiteListingFeatureTarget: void <init>(android.content.Context,int,boolean,java.lang.String,java.lang.CharSequence,android.graphics.drawable.Drawable,java.lang.String)>(r21, i0, $z1, $r11, $r12, $r13, "accessibility_display_daltonizer_enabled");

        $r14 = new com.android.internal.accessibility.dialog.ToggleWhiteListingFeatureTarget;

        $r15 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName COLOR_INVERSION_COMPONENT_NAME>;

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z2 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isShortcutContained(android.content.Context,int,java.lang.String)>(r21, i0, $r16);

        $r17 = <com.android.internal.accessibility.AccessibilityShortcutController: android.content.ComponentName COLOR_INVERSION_COMPONENT_NAME>;

        $r18 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r19 = virtualinvoke r21.<android.content.Context: java.lang.String getString(int)>(17039812);

        $r20 = virtualinvoke r21.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302296);

        specialinvoke $r14.<com.android.internal.accessibility.dialog.ToggleWhiteListingFeatureTarget: void <init>(android.content.Context,int,boolean,java.lang.String,java.lang.CharSequence,android.graphics.drawable.Drawable,java.lang.String)>(r21, i0, $z2, $r18, $r19, $r20, "accessibility_display_inversion_enabled");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r14);

        return $r3;
    }

    static void lambda$createEnableDialogContentView$1(com.android.internal.accessibility.dialog.AccessibilityServiceTarget, android.view.View$OnClickListener, android.view.View)
    {
        com.android.internal.accessibility.dialog.AccessibilityServiceTarget r0;
        android.view.View$OnClickListener r1;
        android.view.View r2;

        r0 := @parameter0: com.android.internal.accessibility.dialog.AccessibilityServiceTarget;

        r1 := @parameter1: android.view.View$OnClickListener;

        r2 := @parameter2: android.view.View;

        virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: void onCheckedChanged(boolean)>(1);

        interfaceinvoke r1.<android.view.View$OnClickListener: void onClick(android.view.View)>(r2);

        return;
    }

    static void lambda$createEnableDialogContentView$2(com.android.internal.accessibility.dialog.AccessibilityServiceTarget, android.view.View$OnClickListener, android.view.View)
    {
        com.android.internal.accessibility.dialog.AccessibilityServiceTarget r0;
        android.view.View$OnClickListener r1;
        android.view.View r2;

        r0 := @parameter0: com.android.internal.accessibility.dialog.AccessibilityServiceTarget;

        r1 := @parameter1: android.view.View$OnClickListener;

        r2 := @parameter2: android.view.View;

        virtualinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: void onCheckedChanged(boolean)>(0);

        interfaceinvoke r1.<android.view.View$OnClickListener: void onClick(android.view.View)>(r2);

        return;
    }

    static boolean lambda$getAccessibilityFilteredTargets$0(com.android.internal.accessibility.dialog.AccessibilityTarget, com.android.internal.accessibility.dialog.AccessibilityTarget)
    {
        com.android.internal.accessibility.dialog.AccessibilityTarget r0, r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.accessibility.dialog.AccessibilityTarget;

        r1 := @parameter1: com.android.internal.accessibility.dialog.AccessibilityTarget;

        $z0 = staticinvoke <com.android.internal.accessibility.dialog.AccessibilityTargetHelper: boolean arePackageNameAndLabelTheSame(com.android.internal.accessibility.dialog.AccessibilityTarget,com.android.internal.accessibility.dialog.AccessibilityTarget)>(r1, r0);

        return $z0;
    }
}
