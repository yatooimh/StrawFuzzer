class com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget extends com.android.internal.accessibility.dialog.AccessibilityServiceTarget
{

    void <init>(android.content.Context, int, android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget r0;
        android.content.Context r1;
        int i0;
        android.accessibilityservice.AccessibilityServiceInfo r2;

        r0 := @this: com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.accessibilityservice.AccessibilityServiceInfo;

        specialinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: void <init>(android.content.Context,int,int,android.accessibilityservice.AccessibilityServiceInfo)>(r1, i0, 1, r2);

        return;
    }

    private boolean isComponentIdExistingInOtherShortcut()
    {
        com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget r0;
        int i0;
        android.content.Context $r1, $r4;
        java.lang.String $r2, $r5;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget;

        i0 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: int getShortcutType()>();

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: android.content.Context getContext()>();

        $r5 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: java.lang.String getId()>();

        $z1 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isComponentIdExistingInSettings(android.content.Context,int,java.lang.String)>($r4, 1, $r5);

        return $z1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected shortcut type");

        throw $r3;

     label2:
        $r1 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: android.content.Context getContext()>();

        $r2 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: java.lang.String getId()>();

        $z0 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isComponentIdExistingInSettings(android.content.Context,int,java.lang.String)>($r1, 2, $r2);

        return $z0;
    }

    public void onCheckedChanged(boolean)
    {
        com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget r0;
        boolean z0, $z1;
        android.content.ComponentName r1;
        java.lang.String $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget;

        z0 := @parameter0: boolean;

        $r2 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: java.lang.String getId()>();

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r2);

        $z1 = specialinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: boolean isComponentIdExistingInOtherShortcut()>();

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.accessibility.dialog.InvisibleToggleAccessibilityServiceTarget: android.content.Context getContext()>();

        staticinvoke <com.android.internal.accessibility.util.AccessibilityUtils: void setAccessibilityServiceState(android.content.Context,android.content.ComponentName,boolean)>($r3, r1, z0);

     label1:
        specialinvoke r0.<com.android.internal.accessibility.dialog.AccessibilityServiceTarget: void onCheckedChanged(boolean)>(z0);

        return;
    }
}
