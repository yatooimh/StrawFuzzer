public final class com.android.internal.accessibility.util.ShortcutUtils extends java.lang.Object
{
    private static final android.text.TextUtils$SimpleStringSplitter sStringColonSplitter;

    static void <clinit>()
    {
        android.text.TextUtils$SimpleStringSplitter $r0;

        $r0 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r0.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.accessibility.util.ShortcutUtils r0;

        r0 := @this: com.android.internal.accessibility.util.ShortcutUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String convertToKey(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 != 4 goto label1;

        return "accessibility_display_magnification_enabled";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported user shortcut type: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return "accessibility_shortcut_target_service";

     label3:
        return "accessibility_button_targets";
    }

    public static int convertToUserType(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        return 2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported shortcut type:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return 1;
    }

    public static boolean isComponentIdExistingInSettings(android.content.Context, int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1, $r6, r8;
        android.content.ContentResolver $r2;
        boolean $z0, $z1, $z2;
        android.text.TextUtils$SimpleStringSplitter $r3, $r4, $r5;
        android.content.Context r7;

        r7 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: java.lang.String convertToKey(int)>(i0);

        $r2 = virtualinvoke r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r8);

     label2:
        $r4 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        $z1 = virtualinvoke $r4.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        $r6 = virtualinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public static boolean isShortcutContained(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityManager $r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r3 = (android.view.accessibility.AccessibilityManager) $r2;

        $r4 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityShortcutTargets(int)>(i0);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public static void optInValueToSettings(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, r3, r4, $r6, $r10;
        java.util.StringJoiner $r5;
        android.content.ContentResolver $r7, $r9;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r5 = new java.util.StringJoiner;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(58);

        specialinvoke $r5.<java.util.StringJoiner: void <init>(java.lang.CharSequence)>($r6);

        r3 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: java.lang.String convertToKey(int)>(i0);

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r7, r3);

        $z0 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: boolean isComponentIdExistingInSettings(android.content.Context,int,java.lang.String)>(r0, i0, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label2;

        virtualinvoke $r5.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>(r4);

     label2:
        virtualinvoke $r5.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>(r1);

        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = virtualinvoke $r5.<java.util.StringJoiner: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r9, r3, $r10);

        return;
    }

    public static void optOutValueFromSettings(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, r3, $r5, $r9, r12, r14;
        java.util.StringJoiner $r4;
        android.content.ContentResolver $r6, $r8;
        boolean $z0, $z2, $z3, $z4;
        android.text.TextUtils$SimpleStringSplitter $r7, $r10, $r13;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r4 = new java.util.StringJoiner;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(58);

        specialinvoke $r4.<java.util.StringJoiner: void <init>(java.lang.CharSequence)>($r5);

        r3 = staticinvoke <com.android.internal.accessibility.util.ShortcutUtils: java.lang.String convertToKey(int)>(i0);

        $r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r6, r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        virtualinvoke $r7.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r12);

     label2:
        $r13 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        $z4 = virtualinvoke $r13.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r10 = <com.android.internal.accessibility.util.ShortcutUtils: android.text.TextUtils$SimpleStringSplitter sStringColonSplitter>;

        r14 = virtualinvoke $r10.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z3 == 0 goto label3;

        goto label2;

     label3:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>(r14);

        goto label2;

     label4:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke $r4.<java.util.StringJoiner: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r8, r3, $r9);

        return;
    }
}
