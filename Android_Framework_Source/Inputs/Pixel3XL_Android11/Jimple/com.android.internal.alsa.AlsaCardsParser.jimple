public class com.android.internal.alsa.AlsaCardsParser extends java.lang.Object
{
    protected static final boolean DEBUG;
    public static final int SCANSTATUS_EMPTY;
    public static final int SCANSTATUS_FAIL;
    public static final int SCANSTATUS_NOTSCANNED;
    public static final int SCANSTATUS_SUCCESS;
    private static final java.lang.String TAG;
    private static final java.lang.String kAlsaFolderPath;
    private static final java.lang.String kCardsFilePath;
    private static final java.lang.String kDeviceAddressPrefix;
    private static com.android.internal.alsa.LineTokenizer mTokenizer;
    private java.util.ArrayList mCardRecords;
    private int mScanStatus;

    static void <clinit>()
    {
        com.android.internal.alsa.LineTokenizer $r0;

        <com.android.internal.alsa.AlsaCardsParser: java.lang.String kDeviceAddressPrefix> = "/dev/bus/usb/";

        <com.android.internal.alsa.AlsaCardsParser: java.lang.String kCardsFilePath> = "/proc/asound/cards";

        <com.android.internal.alsa.AlsaCardsParser: java.lang.String kAlsaFolderPath> = "/proc/asound";

        <com.android.internal.alsa.AlsaCardsParser: java.lang.String TAG> = "AlsaCardsParser";

        <com.android.internal.alsa.AlsaCardsParser: int SCANSTATUS_SUCCESS> = 0;

        <com.android.internal.alsa.AlsaCardsParser: int SCANSTATUS_NOTSCANNED> = -1;

        <com.android.internal.alsa.AlsaCardsParser: int SCANSTATUS_FAIL> = 1;

        <com.android.internal.alsa.AlsaCardsParser: int SCANSTATUS_EMPTY> = 2;

        <com.android.internal.alsa.AlsaCardsParser: boolean DEBUG> = 0;

        $r0 = new com.android.internal.alsa.LineTokenizer;

        specialinvoke $r0.<com.android.internal.alsa.LineTokenizer: void <init>(java.lang.String)>(" :[]");

        <com.android.internal.alsa.AlsaCardsParser: com.android.internal.alsa.LineTokenizer mTokenizer> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.alsa.AlsaCardsParser r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.alsa.AlsaCardsParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.alsa.AlsaCardsParser: java.util.ArrayList mCardRecords> = $r1;

        r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus> = -1;

        return;
    }

    private void Log(java.lang.String)
    {
        com.android.internal.alsa.AlsaCardsParser r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.alsa.AlsaCardsParser;

        r1 := @parameter0: java.lang.String;

        return;
    }

    static com.android.internal.alsa.LineTokenizer access$000()
    {
        com.android.internal.alsa.LineTokenizer $r0;

        $r0 = <com.android.internal.alsa.AlsaCardsParser: com.android.internal.alsa.LineTokenizer mTokenizer>;

        return $r0;
    }

    public com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord findCardNumFor(java.lang.String)
    {
        com.android.internal.alsa.AlsaCardsParser r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.alsa.AlsaCardsParser;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.internal.alsa.AlsaCardsParser: java.util.ArrayList mCardRecords>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord) $r5;

        $z1 = virtualinvoke r3.<com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: boolean isUsb()>();

        if $z1 == 0 goto label2;

        $r6 = staticinvoke <com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: java.lang.String access$200(com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord)>(r3);

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public int getScanStatus()
    {
        com.android.internal.alsa.AlsaCardsParser r0;
        int $i0;

        r0 := @this: com.android.internal.alsa.AlsaCardsParser;

        $i0 = r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus>;

        return $i0;
    }

    public int scan()
    {
        com.android.internal.alsa.AlsaCardsParser r0;
        java.io.BufferedReader r1, r25;
        int i0, $i1, $i2;
        java.util.ArrayList $r2, $r4, $r28;
        java.io.File $r3, r22;
        java.lang.String $r9, $r12, r17, r19, r21, r26;
        boolean $z2;
        java.lang.Throwable $r13, $r14;
        java.io.FileReader r16, r24;
        com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord r18;
        java.lang.StringBuilder r20, r23, r27;

        r0 := @this: com.android.internal.alsa.AlsaCardsParser;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.alsa.AlsaCardsParser: java.util.ArrayList mCardRecords> = $r2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("/proc/asound/cards");

     label01:
        r16 = new java.io.FileReader;

        specialinvoke r16.<java.io.FileReader: void <init>(java.io.File)>($r3);

        r1 = new java.io.BufferedReader;

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader)>(r16);

     label02:
        r17 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r17 == null goto label12;

     label04:
        r18 = new com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord;

        specialinvoke r18.<com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: void <init>(com.android.internal.alsa.AlsaCardsParser)>(r0);

        staticinvoke <com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: boolean access$100(com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord,java.lang.String,int)>(r18, r17, 0);

        r19 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if r19 != null goto label06;

        goto label12;

     label06:
        staticinvoke <com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: boolean access$100(com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord,java.lang.String,int)>(r18, r19, 1);

        i0 = r18.<com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: int mCardNum>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/asound/card");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r21 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = new java.io.File;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/usbbus");

        $r9 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<java.io.File: void <init>(java.lang.String)>($r9);

        $z2 = virtualinvoke r22.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label10;

        r24 = new java.io.FileReader;

        specialinvoke r24.<java.io.FileReader: void <init>(java.io.File)>(r22);

        r25 = new java.io.BufferedReader;

        specialinvoke r25.<java.io.BufferedReader: void <init>(java.io.Reader)>(r24);

        r26 = virtualinvoke r25.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if r26 == null goto label09;

     label08:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/dev/bus/usb/");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r12 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord: void setDeviceAddress(java.lang.String)>($r12);

     label09:
        virtualinvoke r24.<java.io.FileReader: void close()>();

     label10:
        $r28 = r0.<com.android.internal.alsa.AlsaCardsParser: java.util.ArrayList mCardRecords>;

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label11:
        goto label02;

     label12:
        virtualinvoke r16.<java.io.FileReader: void close()>();

        $r4 = r0.<com.android.internal.alsa.AlsaCardsParser: java.util.ArrayList mCardRecords>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label14;

        r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus> = 0;

     label13:
        goto label18;

     label14:
        r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus> = 2;

     label15:
        goto label18;

     label16:
        $r13 := @caughtexception;

        r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus> = 1;

        goto label18;

     label17:
        $r14 := @caughtexception;

        r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus> = 1;

     label18:
        $i2 = r0.<com.android.internal.alsa.AlsaCardsParser: int mScanStatus>;

        return $i2;

        catch java.io.FileNotFoundException from label01 to label02 with label17;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.io.FileNotFoundException from label02 to label03 with label17;
        catch java.io.IOException from label02 to label03 with label16;
        catch java.io.FileNotFoundException from label04 to label05 with label17;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.FileNotFoundException from label06 to label07 with label17;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.io.FileNotFoundException from label08 to label09 with label17;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.io.FileNotFoundException from label09 to label10 with label17;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.io.FileNotFoundException from label10 to label11 with label17;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.FileNotFoundException from label12 to label13 with label17;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.io.FileNotFoundException from label14 to label15 with label17;
        catch java.io.IOException from label14 to label15 with label16;
    }
}
