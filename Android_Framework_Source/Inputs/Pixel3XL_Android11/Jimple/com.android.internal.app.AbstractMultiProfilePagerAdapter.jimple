public abstract class com.android.internal.app.AbstractMultiProfilePagerAdapter extends com.android.internal.widget.PagerAdapter
{
    static final int PROFILE_PERSONAL;
    static final int PROFILE_WORK;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private int mCurrentPage;
    private com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector;
    private boolean mIsWaitingToEnableWorkProfile;
    private java.util.Set mLoadedPages;
    private com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener mOnProfileSelectedListener;
    private com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener mOnSwitchOnWorkSelectedListener;
    private final android.os.UserHandle mPersonalProfileUserHandle;
    private final android.os.UserHandle mWorkProfileUserHandle;

    void <init>(android.content.Context, int, android.os.UserHandle, android.os.UserHandle)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.content.Context r1, $r5;
        int i0;
        android.os.UserHandle r2, r3;
        java.util.HashSet $r6;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$1 $r7;
        java.lang.Object $r8;
        android.os.UserManager $r9;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.UserHandle;

        r3 := @parameter3: android.os.UserHandle;

        specialinvoke r0.<com.android.internal.widget.PagerAdapter: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) r1;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.content.Context mContext> = $r5;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage> = i0;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.util.Set mLoadedPages> = $r6;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mPersonalProfileUserHandle> = r2;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle> = r3;

        $r7 = new com.android.internal.app.AbstractMultiProfilePagerAdapter$1;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r9 = (android.os.UserManager) $r8;

        specialinvoke $r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter$1: void <init>(com.android.internal.app.AbstractMultiProfilePagerAdapter,android.os.UserManager)>(r0, $r9);

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector> = $r7;

        return;
    }

    static boolean access$000(com.android.internal.app.AbstractMultiProfilePagerAdapter, java.util.List, int, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        java.util.List r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean hasCrossProfileIntents(java.util.List,int,int)>(r1, i0, i1);

        return $z0;
    }

    static boolean access$102(com.android.internal.app.AbstractMultiProfilePagerAdapter, boolean)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean mIsWaitingToEnableWorkProfile> = z0;

        return z0;
    }

    static int access$202(com.android.internal.app.AbstractMultiProfilePagerAdapter, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        int i0;

        r0 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        i0 := @parameter1: int;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage> = i0;

        return i0;
    }

    static java.util.Set access$300(com.android.internal.app.AbstractMultiProfilePagerAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $r1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.util.Set mLoadedPages>;

        return $r1;
    }

    static com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener access$400(com.android.internal.app.AbstractMultiProfilePagerAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener $r1;

        r0 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $r1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener mOnProfileSelectedListener>;

        return $r1;
    }

    private boolean hasAppsInOtherProfile(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.os.UserHandle $r1, $r2;
        int $i0, $i1;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.internal.app.ResolverActivity$ResolvedComponentInfo $r5;
        android.content.pm.ResolveInfo $r6;
        com.android.internal.app.ResolverListAdapter r7;
        java.util.Iterator r8;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r7 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        $r3 = virtualinvoke r7.<com.android.internal.app.ResolverListAdapter: java.util.List getResolversForUser(android.os.UserHandle)>($r2);

        r8 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.app.ResolverActivity$ResolvedComponentInfo) $r4;

        $r6 = virtualinvoke $r5.<com.android.internal.app.ResolverActivity$ResolvedComponentInfo: android.content.pm.ResolveInfo getResolveInfoAt(int)>(0);

        $i1 = $r6.<android.content.pm.ResolveInfo: int targetUserId>;

        if $i1 == -2 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    private boolean hasCrossProfileIntents(java.util.List, int, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        int i0, i1;
        android.content.pm.IPackageManager r1;
        android.content.ContentResolver r2;
        android.content.Context $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.content.Intent $r5, $r6;
        java.util.List r7;
        java.util.Iterator r8;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r7 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.content.Context mContext>;

        r2 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.Intent) $r4;

        $r6 = staticinvoke <com.android.internal.app.IntentForwarderActivity: android.content.Intent canForward(android.content.Intent,int,int,android.content.pm.IPackageManager,android.content.ContentResolver)>($r5, i0, i1, r1, r2);

        if $r6 == null goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean isSpinnerShowing(android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1, $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909352);

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void maybeShowNoAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        android.os.UserHandle r2, $r3, $r4, $r7, $r9;
        int $i0, $i1;
        java.lang.String[] $r5;
        java.lang.String $r6;
        android.app.admin.DevicePolicyEventLogger $r8, r10, r11;
        boolean $z0, z1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        if $r3 == null goto label5;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        if $i0 == $i1 goto label1;

        $z0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean hasAppsInOtherProfile(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z0 != 0 goto label5;

     label1:
        r10 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(160);

        z1 = 1;

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.lang.String getMetricsCategory()>();

        $r5[0] = $r6;

        r11 = virtualinvoke r10.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r5);

        $r7 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mPersonalProfileUserHandle>;

        if r2 != $r7 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        $r8 = virtualinvoke r11.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setBoolean(boolean)>(z1);

        virtualinvoke $r8.<android.app.admin.DevicePolicyEventLogger: void write()>();

        $r9 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mPersonalProfileUserHandle>;

        if r2 != $r9 goto label4;

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showNoPersonalAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        goto label6;

     label4:
        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showNoWorkAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        goto label6;

     label5:
        $r4 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        if $r4 != null goto label6;

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showConsumerUserNoAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

     label6:
        return;
    }

    private boolean maybeShowNoCrossProfileIntentsEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        boolean $z0, $z1;
        android.os.UserHandle $r2, $r3;
        android.app.admin.DevicePolicyEventLogger $r4, $r7, $r8, $r11;
        java.lang.String[] $r5, $r9;
        java.lang.String $r6, $r10;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $z0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean shouldShowNoCrossProfileIntentsEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mPersonalProfileUserHandle>;

        $z1 = virtualinvoke $r2.<android.os.UserHandle: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r8 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(158);

        $r9 = newarray (java.lang.String)[1];

        $r10 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.lang.String getMetricsCategory()>();

        $r9[0] = $r10;

        $r11 = virtualinvoke $r8.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r9);

        virtualinvoke $r11.<android.app.admin.DevicePolicyEventLogger: void write()>();

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showNoWorkToPersonalIntentsEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        goto label3;

     label2:
        $r4 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(159);

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.lang.String getMetricsCategory()>();

        $r5[0] = $r6;

        $r7 = virtualinvoke $r4.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r5);

        virtualinvoke $r7.<android.app.admin.DevicePolicyEventLogger: void write()>();

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showNoPersonalToWorkIntentsEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

     label3:
        return 1;
    }

    private boolean maybeShowWorkProfileOffEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        android.os.UserHandle $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector $r5;
        int $i0;
        android.app.admin.DevicePolicyEventLogger $r6, $r9;
        java.lang.String[] $r7;
        java.lang.String $r8;
        com.android.internal.app._$$Lambda$AbstractMultiProfilePagerAdapter$hQkaavOZ32b4_P9cXHNwBKZa760 $r10;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        $z0 = virtualinvoke $r2.<android.os.UserHandle: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector>;

        $r4 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        $z1 = interfaceinvoke $r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector: boolean isQuietModeEnabled(android.os.UserHandle)>($r4);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getCount()>();

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        $r6 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(157);

        $r7 = newarray (java.lang.String)[1];

        $r8 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.lang.String getMetricsCategory()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r7);

        virtualinvoke $r9.<android.app.admin.DevicePolicyEventLogger: void write()>();

        $r10 = new com.android.internal.app._$$Lambda$AbstractMultiProfilePagerAdapter$hQkaavOZ32b4_P9cXHNwBKZa760;

        specialinvoke $r10.<com.android.internal.app._$$Lambda$AbstractMultiProfilePagerAdapter$hQkaavOZ32b4_P9cXHNwBKZa760: void <init>(com.android.internal.app.AbstractMultiProfilePagerAdapter,com.android.internal.app.ResolverListAdapter)>(r0, r1);

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showWorkProfileOffEmptyState(com.android.internal.app.ResolverListAdapter,android.view.View$OnClickListener)>(r1, $r10);

        return 1;

     label2:
        return 0;
    }

    private boolean rebuildTab(com.android.internal.app.ResolverListAdapter, boolean)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean shouldShowNoCrossProfileIntentsEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z1 == 0 goto label1;

        virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: void postListReadyRunnable(boolean,boolean)>(z0, 1);

        return 0;

     label1:
        $z2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: boolean rebuildList(boolean)>(z0);

        return $z2;
    }

    private void resetViewVisibilitiesForConsumerUserEmptyState(android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909351);

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(8);

        $r3 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909354);

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909353);

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(8);

        $r5 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909349);

        virtualinvoke $r5.<android.view.View: void setVisibility(int)>(8);

        $r6 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909352);

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(8);

        $r7 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908292);

        virtualinvoke $r7.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    private void resetViewVisibilitiesForWorkProfileEmptyState(android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909351);

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909354);

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909353);

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(0);

        $r5 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909349);

        virtualinvoke $r5.<android.view.View: void setVisibility(int)>(4);

        $r6 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909352);

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(8);

        $r7 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908292);

        virtualinvoke $r7.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    private boolean shouldShowNoCrossProfileIntentsEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        android.os.UserHandle r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, z2;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector $r3;
        java.util.List $r4;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        if $i0 == $i1 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean allowShowNoCrossProfileIntentsEmptyState()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector>;

        $r4 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: java.util.List getIntents()>();

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i3 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $z1 = interfaceinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector: boolean hasCrossProfileIntents(java.util.List,int,int)>($r4, $i2, $i3);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private void showConsumerUserNoAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        android.os.UserHandle $r2;
        int $i0;
        android.view.ViewGroup $r3, r6;
        android.view.View $r4;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor r5;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $i0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int userHandleToPageIndex(android.os.UserHandle)>($r2);

        r5 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>($i0);

        $r3 = r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        $r4 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View findViewById(int)>(16909355);

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(8);

        r6 = virtualinvoke r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup getEmptyStateView()>();

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void resetViewVisibilitiesForConsumerUserEmptyState(android.view.View)>(r6);

        virtualinvoke r6.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: void markTabLoaded()>();

        return;
    }

    private void showSpinner(android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909351);

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(4);

        $r3 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909354);

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(4);

        $r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909349);

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(4);

        $r5 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909352);

        virtualinvoke $r5.<android.view.View: void setVisibility(int)>(0);

        $r6 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908292);

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    private void updateIconVisibility(android.widget.ImageView, android.view.ViewGroup)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.widget.ImageView r1;
        android.view.ViewGroup r2;
        boolean $z0, $z1;
        android.os.UserHandle $r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.widget.ImageView;

        r2 := @parameter1: android.view.ViewGroup;

        $z0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean isSpinnerShowing(android.view.View)>(r2);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.widget.ImageView: void setVisibility(int)>(4);

        goto label3;

     label1:
        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r5.<android.content.res.Resources: boolean getBoolean(int)>(17891610);

        if $z1 != 0 goto label2;

        virtualinvoke r1.<android.widget.ImageView: void setVisibility(int)>(0);

        goto label3;

     label2:
        virtualinvoke r1.<android.widget.ImageView: void setVisibility(int)>(8);

     label3:
        return;
    }

    private int userHandleToPageIndex(android.os.UserHandle)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.os.UserHandle r1, $r4;
        com.android.internal.app.ResolverListAdapter $r2;
        com.android.internal.app.ResolverListController $r3;
        boolean $z0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getPersonalListAdapter()>();

        $r3 = $r2.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.ResolverListController mResolverListController>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ResolverListController: android.os.UserHandle getUserHandle()>();

        $z0 = virtualinvoke r1.<android.os.UserHandle: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    boolean allowShowNoCrossProfileIntentsEmptyState()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        return 1;
    }

    void clearInactiveProfileCache()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        java.util.Set $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $r1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.util.Set mLoadedPages>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.util.Set mLoadedPages>;

        $i1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage>;

        $i2 = 1 - $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        return;
    }

    public void destroyItem(android.view.ViewGroup, int, java.lang.Object)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.ViewGroup r1;
        int i0;
        java.lang.Object r2;
        android.view.View $r3;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = (android.view.View) r2;

        virtualinvoke r1.<android.view.ViewGroup: void removeView(android.view.View)>($r3);

        return;
    }

    abstract android.view.ViewGroup getActiveAdapterView();

    public abstract com.android.internal.app.ResolverListAdapter getActiveListAdapter();

    public abstract java.lang.Object getAdapterForIndex(int);

    android.content.Context getContext()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.content.Context $r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $r1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.content.Context mContext>;

        return $r1;
    }

    public int getCount()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        int $i0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $i0 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int getItemCount()>();

        return $i0;
    }

    protected int getCurrentPage()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        int $i0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $i0 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage>;

        return $i0;
    }

    abstract java.lang.Object getCurrentRootAdapter();

    public android.os.UserHandle getCurrentUserHandle()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter $r1;
        com.android.internal.app.ResolverListController $r2;
        android.os.UserHandle $r3;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $r1 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r2 = $r1.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.ResolverListController mResolverListController>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.ResolverListController: android.os.UserHandle getUserHandle()>();

        return $r3;
    }

    abstract android.view.ViewGroup getInactiveAdapterView();

    public abstract com.android.internal.app.ResolverListAdapter getInactiveListAdapter();

    abstract com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int);

    abstract int getItemCount();

    abstract com.android.internal.app.ResolverListAdapter getListAdapterForUserHandle(android.os.UserHandle);

    abstract java.lang.String getMetricsCategory();

    public java.lang.CharSequence getPageTitle(int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        int i0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        i0 := @parameter0: int;

        return null;
    }

    public abstract com.android.internal.app.ResolverListAdapter getPersonalListAdapter();

    public abstract com.android.internal.app.ResolverListAdapter getWorkListAdapter();

    public android.view.ViewGroup instantiateItem(android.view.ViewGroup, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.ViewGroup r1, $r3, $r4;
        int i0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor r2;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>(i0);

        $r3 = r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        virtualinvoke r1.<android.view.ViewGroup: void addView(android.view.View)>($r3);

        $r4 = r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        return $r4;
    }

    public volatile java.lang.Object instantiateItem(android.view.ViewGroup, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.ViewGroup r1, $r2;
        int i0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.view.ViewGroup instantiateItem(android.view.ViewGroup,int)>(r1, i0);

        return $r2;
    }

    protected boolean isQuietModeEnabled(android.os.UserHandle)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.os.UserHandle r1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector>;

        $z0 = interfaceinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector: boolean isQuietModeEnabled(android.os.UserHandle)>(r1);

        return $z0;
    }

    public boolean isViewFromObject(android.view.View, java.lang.Object)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1;
        java.lang.Object r2;
        boolean z0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected boolean isWaitingToEnableWorkProfile()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        $z0 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean mIsWaitingToEnableWorkProfile>;

        return $z0;
    }

    public void lambda$maybeShowWorkProfileOffEmptyState$0$AbstractMultiProfilePagerAdapter(com.android.internal.app.ResolverListAdapter, android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1;
        android.os.UserHandle $r2, $r5;
        int $i0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor $r3;
        android.view.ViewGroup $r4;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector $r6;
        com.android.internal.app.ResolverListAdapter r7;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener r8;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r7 := @parameter0: com.android.internal.app.ResolverListAdapter;

        r1 := @parameter1: android.view.View;

        $r2 = virtualinvoke r7.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $i0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int userHandleToPageIndex(android.os.UserHandle)>($r2);

        $r3 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>($i0);

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup getEmptyStateView()>();

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showSpinner(android.view.View)>($r4);

        r8 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener mOnSwitchOnWorkSelectedListener>;

        if r8 == null goto label1;

        interfaceinvoke r8.<com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener: void onSwitchOnWorkSelected()>();

     label1:
        $r6 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector>;

        $r5 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        interfaceinvoke $r6.<com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector: void requestQuietModeEnabled(boolean,android.os.UserHandle)>(0, $r5);

        return;
    }

    protected void markWorkProfileEnabledBroadcastReceived()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean mIsWaitingToEnableWorkProfile> = 0;

        return;
    }

    boolean rebuildActiveTab(boolean)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        boolean z0, $z1;
        com.android.internal.app.ResolverListAdapter $r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z1 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean rebuildTab(com.android.internal.app.ResolverListAdapter,boolean)>($r1, z0);

        return $z1;
    }

    boolean rebuildInactiveTab(boolean)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        boolean z0, $z1;
        int $i0;
        com.android.internal.app.ResolverListAdapter $r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        z0 := @parameter0: boolean;

        $i0 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int getItemCount()>();

        if $i0 != 1 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $z1 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean rebuildTab(com.android.internal.app.ResolverListAdapter,boolean)>($r1, z0);

        return $z1;
    }

    public void setInjector(com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$Injector mInjector> = r1;

        return;
    }

    void setOnProfileSelectedListener(com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener mOnProfileSelectedListener> = r1;

        return;
    }

    void setOnSwitchOnWorkSelectedListener(com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener;

        r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener mOnSwitchOnWorkSelectedListener> = r1;

        return;
    }

    protected void setupContainerPadding(android.view.View)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.View r1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: android.view.View;

        return;
    }

    abstract void setupListAdapter(int);

    void setupViewPager(com.android.internal.widget.ViewPager)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.widget.ViewPager r1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$2 $r2;
        int $i0, $i1;
        java.util.Set $r3;
        java.lang.Integer $r4;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.widget.ViewPager;

        $r2 = new com.android.internal.app.AbstractMultiProfilePagerAdapter$2;

        specialinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter$2: void <init>(com.android.internal.app.AbstractMultiProfilePagerAdapter)>(r0);

        virtualinvoke r1.<com.android.internal.widget.ViewPager: void setOnPageChangeListener(com.android.internal.widget.ViewPager$OnPageChangeListener)>($r2);

        virtualinvoke r1.<com.android.internal.widget.ViewPager: void setAdapter(com.android.internal.widget.PagerAdapter)>(r0);

        $i0 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage>;

        virtualinvoke r1.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>($i0);

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: java.util.Set mLoadedPages>;

        $i1 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int mCurrentPage>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        return;
    }

    boolean shouldShowEmptyStateScreen(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        int $i0, $i1;
        android.os.UserHandle $r2, $r3, $r4;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $i0 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getPlaceholderCount()>();

        if $i1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r3 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        $z0 = virtualinvoke $r2.<android.os.UserHandle: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle mWorkProfileUserHandle>;

        $z1 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean isQuietModeEnabled(android.os.UserHandle)>($r4);

        if $z1 == 0 goto label3;

     label2:
        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    void showEmptyResolverListEmptyState(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $z0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean maybeShowNoCrossProfileIntentsEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean maybeShowWorkProfileOffEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z1 == 0 goto label2;

        return;

     label2:
        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void maybeShowNoAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        return;
    }

    protected void showEmptyState(com.android.internal.app.ResolverListAdapter, int, int, int)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        int i0, i1, i2;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showEmptyState(com.android.internal.app.ResolverListAdapter,int,int,int,android.view.View$OnClickListener)>(r1, i0, i1, i2, null);

        return;
    }

    protected void showEmptyState(com.android.internal.app.ResolverListAdapter, int, int, int, android.view.View$OnClickListener)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        com.android.internal.app.ResolverListAdapter r1;
        int i0, i1, $i3, i4;
        android.os.UserHandle $r2;
        android.view.ViewGroup $r3, r13;
        android.view.View $r4, $r5, $r7, $r8, $r9, r12;
        android.widget.TextView $r6, r14;
        android.view.View$OnClickListener r10;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor r11;
        android.widget.Button r15;
        byte b5;
        android.widget.ImageView r16;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        i1 := @parameter3: int;

        r10 := @parameter4: android.view.View$OnClickListener;

        $r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $i3 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int userHandleToPageIndex(android.os.UserHandle)>($r2);

        r11 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>($i3);

        $r3 = r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        r12 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View findViewById(int)>(16909355);

        virtualinvoke r12.<android.view.View: void setVisibility(int)>(8);

        r13 = virtualinvoke r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup getEmptyStateView()>();

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void resetViewVisibilitiesForWorkProfileEmptyState(android.view.View)>(r13);

        virtualinvoke r13.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r4 = virtualinvoke r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16909350);

        virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void setupContainerPadding(android.view.View)>($r4);

        $r5 = virtualinvoke r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16909354);

        $r6 = (android.widget.TextView) $r5;

        virtualinvoke $r6.<android.widget.TextView: void setText(int)>(i4);

        $r7 = virtualinvoke r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16909353);

        r14 = (android.widget.TextView) $r7;

        if i1 == 0 goto label1;

        virtualinvoke r14.<android.widget.TextView: void setVisibility(int)>(0);

        virtualinvoke r14.<android.widget.TextView: void setText(int)>(i1);

        goto label2;

     label1:
        virtualinvoke r14.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        $r8 = virtualinvoke r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16909349);

        r15 = (android.widget.Button) $r8;

        b5 = 8;

        if r10 == null goto label3;

        b5 = 0;

     label3:
        virtualinvoke r15.<android.widget.Button: void setVisibility(int)>(b5);

        virtualinvoke r15.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r10);

        $r9 = virtualinvoke r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16909351);

        r16 = (android.widget.ImageView) $r9;

        virtualinvoke r16.<android.widget.ImageView: void setImageResource(int)>(i0);

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void updateIconVisibility(android.widget.ImageView,android.view.ViewGroup)>(r16, r13);

        virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: void markTabLoaded()>();

        return;
    }

    protected void showListView(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.os.UserHandle $r1;
        int $i0;
        android.view.ViewGroup $r2, $r4;
        android.view.View $r3, $r5;
        com.android.internal.app.ResolverListAdapter r6;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor r7;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        r6 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r1 = virtualinvoke r6.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $i0 = specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int userHandleToPageIndex(android.os.UserHandle)>($r1);

        r7 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>($i0);

        $r2 = r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View findViewById(int)>(16909355);

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r4 = r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup rootView>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View findViewById(int)>(16909348);

        virtualinvoke $r5.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    protected abstract void showNoPersonalAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter);

    protected abstract void showNoPersonalToWorkIntentsEmptyState(com.android.internal.app.ResolverListAdapter);

    protected abstract void showNoWorkAppsAvailableEmptyState(com.android.internal.app.ResolverListAdapter);

    protected abstract void showNoWorkToPersonalIntentsEmptyState(com.android.internal.app.ResolverListAdapter);

    protected abstract void showWorkProfileOffEmptyState(com.android.internal.app.ResolverListAdapter, android.view.View$OnClickListener);

    void updateAfterConfigChange()
    {
        com.android.internal.app.AbstractMultiProfilePagerAdapter r0;
        android.view.ViewGroup r1;
        int $i0, i1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor $r2;
        android.view.View $r3;
        android.widget.ImageView $r4;

        r0 := @this: com.android.internal.app.AbstractMultiProfilePagerAdapter;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int getItemCount()>();

        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor getItem(int)>(i1);

        r1 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter$ProfileDescriptor: android.view.ViewGroup getEmptyStateView()>();

        $r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(16909351);

        $r4 = (android.widget.ImageView) $r3;

        specialinvoke r0.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void updateIconVisibility(android.widget.ImageView,android.view.ViewGroup)>($r4, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.AbstractMultiProfilePagerAdapter: java.lang.String TAG> = "AbstractMultiProfilePagerAdapter";

        <com.android.internal.app.AbstractMultiProfilePagerAdapter: int PROFILE_WORK> = 1;

        <com.android.internal.app.AbstractMultiProfilePagerAdapter: int PROFILE_PERSONAL> = 0;

        return;
    }
}
