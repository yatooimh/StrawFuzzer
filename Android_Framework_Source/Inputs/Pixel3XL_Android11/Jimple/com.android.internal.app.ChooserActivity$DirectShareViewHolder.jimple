class com.android.internal.app.ChooserActivity$DirectShareViewHolder extends com.android.internal.app.ChooserActivity$ItemGroupViewHolder
{
    private int mCellCountPerRow;
    private final boolean[] mCellVisibility;
    private int mDirectShareCurrHeight;
    private int mDirectShareMaxHeight;
    private int mDirectShareMinHeight;
    private boolean mHideDirectShareExpansion;
    private final android.view.ViewGroup mParent;
    private final java.util.List mRows;
    final com.android.internal.app.ChooserActivity this$0;

    void <init>(com.android.internal.app.ChooserActivity, android.view.ViewGroup, java.util.List, int, int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        com.android.internal.app.ChooserActivity r1;
        android.view.ViewGroup r2;
        java.util.List r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean[] $r4;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        r1 := @parameter0: com.android.internal.app.ChooserActivity;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: com.android.internal.app.ChooserActivity this$0> = r1;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        $i3 = $i2 * i0;

        specialinvoke r0.<com.android.internal.app.ChooserActivity$ItemGroupViewHolder: void <init>(com.android.internal.app.ChooserActivity,int,android.view.View,int)>(r1, $i3, r2, i1);

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean mHideDirectShareExpansion> = 0;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight> = 0;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight> = 0;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMaxHeight> = 0;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup mParent> = r2;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: java.util.List mRows> = r3;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mCellCountPerRow> = i0;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        $i5 = $i4 * i0;

        $r4 = newarray (boolean)[$i5];

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean[] mCellVisibility> = $r4;

        return;
    }

    private void updateDirectShareRowHeight(com.android.internal.widget.RecyclerView, int, int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        android.view.View r2;
        java.lang.Object $r3, $r4;
        boolean $z0, z1, z2;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label7;

        $i2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getChildCount()>();

        if $i2 == 0 goto label7;

        if i0 != 0 goto label1;

        goto label7;

     label1:
        z1 = 0;

        i14 = 0;

     label2:
        $i3 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: int getChildCount()>();

        if i14 >= $i3 goto label5;

        r2 = virtualinvoke r1.<com.android.internal.widget.RecyclerView: android.view.View getChildAt(int)>(i14);

        if z1 == 0 goto label3;

        virtualinvoke r2.<android.view.View: void offsetTopAndBottom(int)>(i0);

        z2 = z1;

        goto label4;

     label3:
        z2 = z1;

        $r3 = virtualinvoke r2.<android.view.View: java.lang.Object getTag()>();

        if $r3 == null goto label4;

        z2 = z1;

        $r4 = virtualinvoke r2.<android.view.View: java.lang.Object getTag()>();

        $z0 = $r4 instanceof com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        if $z0 == 0 goto label4;

        $i4 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i1, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>($i5, $i6);

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i7 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $r5.<android.view.ViewGroup$LayoutParams: int height> = $i7;

        $i8 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i9 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i10 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i11 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i12 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i13 = $i11 + $i12;

        virtualinvoke r2.<android.view.View: void layout(int,int,int,int)>($i8, $i9, $i10, $i13);

        z2 = 1;

     label4:
        i14 = i14 + 1;

        z1 = z2;

        goto label2;

     label5:
        if z1 == 0 goto label6;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight> = i1;

     label6:
        return;

     label7:
        return;
    }

    public android.view.ViewGroup addView(int, android.view.View)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int i0;
        android.view.View r1;
        android.view.ViewGroup r2;
        android.view.View[] $r3;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 = virtualinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup getRowByIndex(int)>(i0);

        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View)>(r1);

        $r3 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.View[] mCells>;

        $r3[i0] = r1;

        return r2;
    }

    void collapse(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight>;

        $i1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        $i2 = i0 - $i1;

        specialinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: void updateDirectShareRowHeight(com.android.internal.widget.RecyclerView,int,int)>(r1, $i2, i0);

        return;
    }

    void expand(com.android.internal.widget.RecyclerView)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i0 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMaxHeight>;

        $i1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        $i2 = i0 - $i1;

        specialinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: void updateDirectShareRowHeight(com.android.internal.widget.RecyclerView,int,int)>(r1, $i2, i0);

        return;
    }

    public int getMeasuredRowHeight()
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int $i0;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        $i0 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        return $i0;
    }

    public int getMinRowHeight()
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int $i0;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        $i0 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight>;

        return $i0;
    }

    public android.view.ViewGroup getRow(int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        android.view.ViewGroup $r3;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: java.util.List mRows>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (android.view.ViewGroup) $r2;

        return $r3;
    }

    public android.view.ViewGroup getRowByIndex(int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        android.view.ViewGroup $r3;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: java.util.List mRows>;

        $i1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mCellCountPerRow>;

        $i2 = i0 / $i1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (android.view.ViewGroup) $r2;

        return $r3;
    }

    public android.view.ViewGroup getViewGroup()
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        android.view.ViewGroup $r1;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        $r1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup mParent>;

        return $r1;
    }

    public void handleScroll(com.android.internal.widget.RecyclerView, int, int, int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        com.android.internal.widget.RecyclerView r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14;
        com.android.internal.app.ChooserListAdapter r2;
        float $f0, $f1;
        boolean $z0, $z1, z2;
        com.android.internal.app.ChooserActivity $r3, $r5;
        com.android.internal.app.ChooserMultiProfilePagerAdapter $r4;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        r1 := @parameter0: com.android.internal.widget.RecyclerView;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        i0 := @parameter3: int;

        $i2 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        $i1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight>;

        if $i2 != $i1 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label6;

        $z0 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean mHideDirectShareExpansion>;

        if $z0 == 0 goto label3;

        return;

     label3:
        $r3 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: com.android.internal.app.ChooserActivity this$0>;

        $r4 = $r3.<com.android.internal.app.ChooserActivity: com.android.internal.app.ChooserMultiProfilePagerAdapter mChooserMultiProfilePagerAdapter>;

        r2 = virtualinvoke $r4.<com.android.internal.app.ChooserMultiProfilePagerAdapter: com.android.internal.app.ChooserListAdapter getActiveListAdapter()>();

        $r5 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: com.android.internal.app.ChooserActivity this$0>;

        $z1 = staticinvoke <com.android.internal.app.ChooserActivity: boolean access$500(com.android.internal.app.ChooserActivity)>($r5);

        if $z1 == 0 goto label4;

        i11 = virtualinvoke r2.<com.android.internal.app.ChooserListAdapter: int getNumServiceTargetsForExpand()>();

        goto label5;

     label4:
        i11 = virtualinvoke r2.<com.android.internal.app.ChooserListAdapter: int getSelectableServiceTargetCount()>();

     label5:
        if i11 > i0 goto label6;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean mHideDirectShareExpansion> = 1;

        return;

     label6:
        $i3 = i10 - i9;

        $f0 = (float) $i3;

        $f1 = $f0 * 0.78F;

        i12 = (int) $f1;

        i13 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        $i5 = i13 + i12;

        $i4 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMaxHeight>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i7 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight>;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);

        $i8 = i14 - i13;

        specialinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: void updateDirectShareRowHeight(com.android.internal.widget.RecyclerView,int,int)>(r1, $i8, i14);

        return;
    }

    public void measure()
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int i0, $i1, $i2, i3, i4;
        android.view.ViewGroup $r1, $r2, $r3;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $r1 = virtualinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup getRow(int)>(0);

        virtualinvoke $r1.<android.view.ViewGroup: void measure(int,int)>(i3, i3);

        $r2 = virtualinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup getRow(int)>(1);

        virtualinvoke $r2.<android.view.ViewGroup: void measure(int,int)>(i3, i3);

        $r3 = virtualinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.ViewGroup getRow(int)>(0);

        i0 = virtualinvoke $r3.<android.view.ViewGroup: int getMeasuredHeight()>();

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight> = i0;

        i4 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight>;

        if i4 <= 0 goto label1;

        goto label2;

     label1:
        i4 = i0;

     label2:
        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareCurrHeight> = i4;

        $i1 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMinHeight>;

        $i2 = $i1 * 2;

        r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: int mDirectShareMaxHeight> = $i2;

        return;
    }

    public void setViewVisibility(int, int)
    {
        com.android.internal.app.ChooserActivity$DirectShareViewHolder r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0;
        float[] $r2;
        android.view.animation.AccelerateInterpolator $r4;
        com.android.internal.app.ChooserActivity$DirectShareViewHolder$1 $r5;
        boolean[] $r6, r7;
        android.animation.ObjectAnimator r8;

        r0 := @this: com.android.internal.app.ChooserActivity$DirectShareViewHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: android.view.View getView(int)>(i0);

        if i1 != 0 goto label1;

        $r6 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean[] mCellVisibility>;

        $r6[i0] = 1;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(i1);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        goto label2;

     label1:
        if i1 != 4 goto label2;

        r7 = r0.<com.android.internal.app.ChooserActivity$DirectShareViewHolder: boolean[] mCellVisibility>;

        $z0 = r7[i0];

        if $z0 == 0 goto label2;

        r7[i0] = 0;

        $r2 = newarray (float)[2];

        $r2[0] = 1.0F;

        $r2[1] = 0.0F;

        r8 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r1, "alpha", $r2);

        virtualinvoke r8.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(200L);

        $r4 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r4.<android.view.animation.AccelerateInterpolator: void <init>(float)>(1.0F);

        virtualinvoke r8.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = new com.android.internal.app.ChooserActivity$DirectShareViewHolder$1;

        specialinvoke $r5.<com.android.internal.app.ChooserActivity$DirectShareViewHolder$1: void <init>(com.android.internal.app.ChooserActivity$DirectShareViewHolder,android.view.View)>(r0, r1);

        virtualinvoke r8.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r5);

        virtualinvoke r8.<android.animation.ValueAnimator: void start()>();

     label2:
        return;
    }
}
