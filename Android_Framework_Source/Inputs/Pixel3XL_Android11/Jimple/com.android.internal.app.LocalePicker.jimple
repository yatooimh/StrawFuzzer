public class com.android.internal.app.LocalePicker extends android.app.ListFragment
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private static final java.lang.String[] pseudoLocales;
    com.android.internal.app.LocalePicker$LocaleSelectionListener mListener;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.app.LocalePicker: java.lang.String TAG> = "LocalePicker";

        <com.android.internal.app.LocalePicker: boolean DEBUG> = 0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "en-XA";

        $r0[1] = "ar-XB";

        <com.android.internal.app.LocalePicker: java.lang.String[] pseudoLocales> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.app.LocalePicker r0;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void <init>()>();

        return;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context)
    {
        android.content.Context r0;
        android.widget.ArrayAdapter $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int)>(r0, 17367192, 16909132);

        return $r1;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        com.android.internal.app.LocalePicker$1 $r1;
        java.lang.Object $r2;
        android.view.LayoutInflater $r3;
        android.content.ContentResolver r4;
        boolean z0;
        java.util.List r5;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r4, "development_settings_enabled", 0);

        if $i2 == 0 goto label1;

        z0 = 1;

     label1:
        r5 = staticinvoke <com.android.internal.app.LocalePicker: java.util.List getAllAssetLocales(android.content.Context,boolean)>(r0, z0);

        $r1 = new com.android.internal.app.LocalePicker$1;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r2;

        specialinvoke $r1.<com.android.internal.app.LocalePicker$1: void <init>(android.content.Context,int,int,java.util.List,android.view.LayoutInflater,int,int)>(r0, i0, i1, r5, $r3, i0, i1);

        return $r1;
    }

    public static java.util.List getAllAssetLocales(android.content.Context, boolean)
    {
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z8, $z11, $z12;
        java.util.Iterator r1;
        java.util.Locale r2, $r13, $r19, $r21;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r5, $r12;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r26, $r28, $r29;
        com.android.internal.app.LocalePicker$LocaleInfo $r16, $r24, $r27, r36;
        android.content.Context r30;
        android.content.res.Resources r31;
        java.lang.String[] r32, r34, r35;

        r30 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r31 = virtualinvoke r30.<android.content.Context: android.content.res.Resources getResources()>();

        r32 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String[] getSystemAssetLocales()>();

        $r3 = new java.util.ArrayList;

        $i0 = lengthof r32;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, r32);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        r34 = virtualinvoke r31.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236123);

        r35 = virtualinvoke r31.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236124);

        $r4 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z12 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label7;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        r2 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>($r7);

        if r2 == null goto label1;

        $r8 = "und";

        $r9 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label1;

        $r10 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label1;

        $r11 = virtualinvoke r2.<java.util.Locale: java.lang.String getCountry()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label2;

        goto label1;

     label2:
        if z0 != 0 goto label3;

        $z11 = staticinvoke <android.os.LocaleList: boolean isPseudoLocale(java.util.Locale)>(r2);

        if $z11 == 0 goto label3;

        goto label1;

     label3:
        $z5 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label4;

        $r27 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r28 = virtualinvoke r2.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r2);

        $r29 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r28);

        specialinvoke $r27.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r29, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        goto label6;

     label4:
        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        $r12 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        r36 = (com.android.internal.app.LocalePicker$LocaleInfo) $r12;

        $r13 = r36.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r14 = virtualinvoke $r13.<java.util.Locale: java.lang.String getLanguage()>();

        $r15 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z6 == 0 goto label5;

        $r19 = r36.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r20 = virtualinvoke $r19.<java.util.Locale: java.lang.String getLanguage()>();

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("zz");

        if $z8 != 0 goto label5;

        $r21 = r36.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r22 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>($r21, r34, r35);

        $r23 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r22);

        r36.<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String label> = $r23;

        $r24 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r25 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>(r2, r34, r35);

        $r26 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r25);

        specialinvoke $r24.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r26, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label6;

     label5:
        $r16 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r17 = virtualinvoke r2.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r2);

        $r18 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r17);

        specialinvoke $r16.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r18, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label6:
        goto label1;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        return $r4;
    }

    private static java.lang.String getDisplayName(java.util.Locale, java.lang.String[], java.lang.String[])
    {
        java.util.Locale r0;
        java.lang.String[] r1, r2;
        java.lang.String r3, $r4, $r5, $r6;
        int $i0, i1;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        $r5 = r1[i1];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r6 = r2[i1];

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>(r0);

        return $r4;
    }

    public static android.os.LocaleList getLocales()
    {
        android.app.IActivityManager $r0;
        android.content.res.Configuration $r1;
        android.os.RemoteException $r2;
        android.os.LocaleList $r3, r4;

     label1:
        $r0 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r1 = interfaceinvoke $r0.<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>();

        r4 = virtualinvoke $r1.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.os.LocaleList: android.os.LocaleList getDefault()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String[] getSupportedLocales(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        java.lang.String[] $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236125);

        return $r2;
    }

    public static java.lang.String[] getSystemAssetLocales()
    {
        android.content.res.Resources $r0;
        android.content.res.AssetManager $r1;
        java.lang.String[] $r2;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.lang.String[] getLocales()>();

        return $r2;
    }

    private static java.lang.String toTitleCase(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        int $i0;
        java.lang.StringBuilder $r2;
        char $c1, $c2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void updateLocale(java.util.Locale)
    {
        java.util.Locale r0;
        android.os.LocaleList $r1;
        java.util.Locale[] $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new android.os.LocaleList;

        $r2 = newarray (java.util.Locale)[1];

        $r2[0] = r0;

        specialinvoke $r1.<android.os.LocaleList: void <init>(java.util.Locale[])>($r2);

        staticinvoke <com.android.internal.app.LocalePicker: void updateLocales(android.os.LocaleList)>($r1);

        return;
    }

    public static void updateLocales(android.os.LocaleList)
    {
        android.app.IActivityManager r0;
        android.content.res.Configuration r1;
        android.os.RemoteException $r2;
        android.os.LocaleList r3;

        r3 := @parameter0: android.os.LocaleList;

     label1:
        r0 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r1 = interfaceinvoke r0.<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r1.<android.content.res.Configuration: void setLocales(android.os.LocaleList)>(r3);

        r1.<android.content.res.Configuration: boolean userSetLocale> = 1;

        interfaceinvoke r0.<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>(r1);

        staticinvoke <android.app.backup.BackupManager: void dataChanged(java.lang.String)>("com.android.providers.settings");

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        com.android.internal.app.LocalePicker r0;
        android.os.Bundle r1;
        android.app.Activity $r2;
        android.widget.ArrayAdapter $r3;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onActivityCreated(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.app.Activity getActivity()>();

        $r3 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context)>($r2);

        virtualinvoke r0.<com.android.internal.app.LocalePicker: void setListAdapter(android.widget.ListAdapter)>($r3);

        return;
    }

    public void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        com.android.internal.app.LocalePicker r0;
        android.view.View r1;
        int i0;
        long l1;
        com.android.internal.app.LocalePicker$LocaleSelectionListener $r2, $r6;
        android.widget.ListAdapter $r3;
        java.lang.Object $r4;
        com.android.internal.app.LocalePicker$LocaleInfo $r5;
        android.widget.ListView r7;
        java.util.Locale r8;

        r0 := @this: com.android.internal.app.LocalePicker;

        r7 := @parameter0: android.widget.ListView;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r2 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListAdapter getListAdapter()>();

        $r4 = interfaceinvoke $r3.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        $r5 = (com.android.internal.app.LocalePicker$LocaleInfo) $r4;

        r8 = $r5.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r6 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        interfaceinvoke $r6.<com.android.internal.app.LocalePicker$LocaleSelectionListener: void onLocaleSelected(java.util.Locale)>(r8);

     label1:
        return;
    }

    public void onResume()
    {
        com.android.internal.app.LocalePicker r0;
        android.widget.ListView $r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void onResume()>();

        $r1 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListView getListView()>();

        virtualinvoke $r1.<android.widget.ListView: boolean requestFocus()>();

        return;
    }

    public void setLocaleSelectionListener(com.android.internal.app.LocalePicker$LocaleSelectionListener)
    {
        com.android.internal.app.LocalePicker r0;
        com.android.internal.app.LocalePicker$LocaleSelectionListener r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: com.android.internal.app.LocalePicker$LocaleSelectionListener;

        r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener> = r1;

        return;
    }
}
