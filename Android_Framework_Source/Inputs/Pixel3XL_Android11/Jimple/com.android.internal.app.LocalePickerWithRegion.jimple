public class com.android.internal.app.LocalePickerWithRegion extends android.app.ListFragment implements android.widget.SearchView$OnQueryTextListener
{
    private static final java.lang.String PARENT_FRAGMENT_NAME;
    private com.android.internal.app.SuggestedLocaleAdapter mAdapter;
    private int mFirstVisiblePosition;
    private com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener mListener;
    private java.util.Set mLocaleList;
    private com.android.internal.app.LocaleStore$LocaleInfo mParentLocale;
    private java.lang.CharSequence mPreviousSearch;
    private boolean mPreviousSearchHadFocus;
    private android.widget.SearchView mSearchView;
    private int mTopDistance;
    private boolean mTranslatedOnly;

    public void <init>()
    {
        com.android.internal.app.LocalePickerWithRegion r0;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        specialinvoke r0.<android.app.ListFragment: void <init>()>();

        r0.<com.android.internal.app.LocalePickerWithRegion: boolean mTranslatedOnly> = 0;

        r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView> = null;

        r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence mPreviousSearch> = null;

        r0.<com.android.internal.app.LocalePickerWithRegion: boolean mPreviousSearchHadFocus> = 0;

        r0.<com.android.internal.app.LocalePickerWithRegion: int mFirstVisiblePosition> = 0;

        r0.<com.android.internal.app.LocalePickerWithRegion: int mTopDistance> = 0;

        return;
    }

    private static com.android.internal.app.LocalePickerWithRegion createCountryPicker(android.content.Context, com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener, com.android.internal.app.LocaleStore$LocaleInfo, boolean)
    {
        com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener r0;
        com.android.internal.app.LocaleStore$LocaleInfo r1;
        boolean z0, $z1;
        com.android.internal.app.LocalePickerWithRegion $r3, r5;
        android.content.Context r4;

        r4 := @parameter0: android.content.Context;

        r0 := @parameter1: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener;

        r1 := @parameter2: com.android.internal.app.LocaleStore$LocaleInfo;

        z0 := @parameter3: boolean;

        $r3 = new com.android.internal.app.LocalePickerWithRegion;

        specialinvoke $r3.<com.android.internal.app.LocalePickerWithRegion: void <init>()>();

        $z1 = specialinvoke $r3.<com.android.internal.app.LocalePickerWithRegion: boolean setListener(android.content.Context,com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>(r4, r0, r1, z0);

        if $z1 == 0 goto label1;

        r5 = $r3;

        goto label2;

     label1:
        r5 = null;

     label2:
        return r5;
    }

    public static com.android.internal.app.LocalePickerWithRegion createLanguagePicker(android.content.Context, com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener, boolean)
    {
        android.content.Context r0;
        com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener r1;
        boolean z0;
        com.android.internal.app.LocalePickerWithRegion $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener;

        z0 := @parameter2: boolean;

        $r3 = new com.android.internal.app.LocalePickerWithRegion;

        specialinvoke $r3.<com.android.internal.app.LocalePickerWithRegion: void <init>()>();

        specialinvoke $r3.<com.android.internal.app.LocalePickerWithRegion: boolean setListener(android.content.Context,com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>(r0, r1, null, z0);

        return $r3;
    }

    private void returnToParentFrame()
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        android.app.FragmentManager $r1;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        $r1 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r1.<android.app.FragmentManager: void popBackStack(java.lang.String,int)>("localeListEditor", 1);

        return;
    }

    private boolean setListener(android.content.Context, com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener, com.android.internal.app.LocaleStore$LocaleInfo, boolean)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener r1;
        com.android.internal.app.LocaleStore$LocaleInfo r2, $r10;
        boolean z0;
        java.util.HashSet $r4;
        java.util.Set $r5, $r6, $r7, r15;
        int $i0, $i1;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        android.os.LocaleList $r11;
        java.lang.String $r12;
        java.lang.String[] $r13;
        android.content.Context r14;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r14 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener;

        r2 := @parameter2: com.android.internal.app.LocaleStore$LocaleInfo;

        z0 := @parameter3: boolean;

        r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale> = r2;

        r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener mListener> = r1;

        r0.<com.android.internal.app.LocalePickerWithRegion: boolean mTranslatedOnly> = z0;

        virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void setRetainInstance(boolean)>(1);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        if z0 != 0 goto label1;

        $r11 = staticinvoke <com.android.internal.app.LocalePicker: android.os.LocaleList getLocales()>();

        $r12 = virtualinvoke $r11.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, $r13);

     label1:
        if r2 == null goto label3;

        r15 = staticinvoke <com.android.internal.app.LocaleStore: java.util.Set getLevelLocales(android.content.Context,java.util.Set,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>(r14, $r4, r2, z0);

        r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList> = r15;

        $i0 = interfaceinvoke r15.<java.util.Set: int size()>();

        if $i0 > 1 goto label4;

        if r1 == null goto label2;

        $r6 = r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList>;

        $i1 = interfaceinvoke $r6.<java.util.Set: int size()>();

        if $i1 != 1 goto label2;

        $r7 = r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList>;

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.android.internal.app.LocaleStore$LocaleInfo) $r9;

        interfaceinvoke r1.<com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener: void onLocaleSelected(com.android.internal.app.LocaleStore$LocaleInfo)>($r10);

     label2:
        return 0;

     label3:
        $r5 = staticinvoke <com.android.internal.app.LocaleStore: java.util.Set getLevelLocales(android.content.Context,java.util.Set,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>(r14, $r4, null, z0);

        r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList> = $r5;

     label4:
        return 1;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        java.util.Set $r1, $r4;
        com.android.internal.app.LocaleStore$LocaleInfo $r2, $r8;
        com.android.internal.app.SuggestedLocaleAdapter $r3, $r6, $r7;
        com.android.internal.app.LocaleHelper$LocaleInfoComparator $r5;
        android.os.Bundle r9;
        boolean z0;
        java.util.Locale r10;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r9 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onCreate(android.os.Bundle)>(r9);

        z0 = 1;

        virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void setHasOptionsMenu(boolean)>(1);

        $r1 = r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void returnToParentFrame()>();

        return;

     label1:
        $r2 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale>;

        if $r2 == null goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        if z0 == 0 goto label4;

        $r8 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale>;

        r10 = virtualinvoke $r8.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        goto label5;

     label4:
        r10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label5:
        $r3 = new com.android.internal.app.SuggestedLocaleAdapter;

        $r4 = r0.<com.android.internal.app.LocalePickerWithRegion: java.util.Set mLocaleList>;

        specialinvoke $r3.<com.android.internal.app.SuggestedLocaleAdapter: void <init>(java.util.Set,boolean)>($r4, z0);

        r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.SuggestedLocaleAdapter mAdapter> = $r3;

        $r5 = new com.android.internal.app.LocaleHelper$LocaleInfoComparator;

        specialinvoke $r5.<com.android.internal.app.LocaleHelper$LocaleInfoComparator: void <init>(java.util.Locale,boolean)>(r10, z0);

        $r6 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.SuggestedLocaleAdapter mAdapter>;

        virtualinvoke $r6.<com.android.internal.app.SuggestedLocaleAdapter: void sort(com.android.internal.app.LocaleHelper$LocaleInfoComparator)>($r5);

        $r7 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.SuggestedLocaleAdapter mAdapter>;

        virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void setListAdapter(android.widget.ListAdapter)>($r7);

        return;
    }

    public void onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        com.android.internal.app.LocaleStore$LocaleInfo $r1;
        android.view.View $r2;
        java.lang.CharSequence $r3, $r5, $r10;
        android.widget.SearchView $r4, $r6, $r8, $r9, $r11, $r12, r16;
        boolean $z0, $z2;
        android.widget.ListView $r7;
        int $i0, $i1;
        android.view.Menu r13;
        android.view.MenuInflater r14;
        android.view.MenuItem r15;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r13 := @parameter0: android.view.Menu;

        r14 := @parameter1: android.view.MenuInflater;

        $r1 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale>;

        if $r1 != null goto label4;

        virtualinvoke r14.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(18087936, r13);

        r15 = interfaceinvoke r13.<android.view.Menu: android.view.MenuItem findItem(int)>(16909133);

        $r2 = interfaceinvoke r15.<android.view.MenuItem: android.view.View getActionView()>();

        r16 = (android.widget.SearchView) $r2;

        r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView> = r16;

        $r3 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence getText(int)>(17041192);

        virtualinvoke r16.<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>($r3);

        $r4 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        virtualinvoke $r4.<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)>(r0);

        $r5 = r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence mPreviousSearch>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label2;

        interfaceinvoke r15.<android.view.MenuItem: boolean expandActionView()>();

        $r8 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        virtualinvoke $r8.<android.widget.SearchView: void setIconified(boolean)>(0);

        $r9 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        virtualinvoke $r9.<android.widget.SearchView: void setActivated(boolean)>(1);

        $z2 = r0.<com.android.internal.app.LocalePickerWithRegion: boolean mPreviousSearchHadFocus>;

        if $z2 == 0 goto label1;

        $r12 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        virtualinvoke $r12.<android.widget.SearchView: boolean requestFocus()>();

     label1:
        $r11 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        $r10 = r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence mPreviousSearch>;

        virtualinvoke $r11.<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>($r10, 1);

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        virtualinvoke $r6.<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>(null, 0);

     label3:
        $r7 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.ListView getListView()>();

        $i1 = r0.<com.android.internal.app.LocalePickerWithRegion: int mFirstVisiblePosition>;

        $i0 = r0.<com.android.internal.app.LocalePickerWithRegion: int mTopDistance>;

        virtualinvoke $r7.<android.widget.ListView: void setSelectionFromTop(int,int)>($i1, $i0);

     label4:
        return;
    }

    public void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        com.android.internal.app.LocalePickerWithRegion r0, r15;
        int i0, $i2;
        long l1;
        android.widget.ListAdapter $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;
        android.content.Context $r4;
        boolean $z0;
        com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener $r5, r14;
        android.app.FragmentManager $r6;
        android.app.FragmentTransaction $r7, $r8, $r9, $r10;
        android.widget.ListView r11;
        android.view.View r12;
        com.android.internal.app.LocaleStore$LocaleInfo r13;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r11 := @parameter0: android.widget.ListView;

        r12 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r1 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.ListAdapter getListAdapter()>();

        $r2 = interfaceinvoke $r1.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        r13 = (com.android.internal.app.LocaleStore$LocaleInfo) $r2;

        $r3 = virtualinvoke r13.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getParent()>();

        if $r3 == null goto label2;

        r14 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener mListener>;

        if r14 == null goto label1;

        interfaceinvoke r14.<com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener: void onLocaleSelected(com.android.internal.app.LocaleStore$LocaleInfo)>(r13);

     label1:
        specialinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void returnToParentFrame()>();

        goto label4;

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.content.Context getContext()>();

        $r5 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener mListener>;

        $z0 = r0.<com.android.internal.app.LocalePickerWithRegion: boolean mTranslatedOnly>;

        r15 = staticinvoke <com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocalePickerWithRegion createCountryPicker(android.content.Context,com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>($r4, $r5, r13, $z0);

        if r15 == null goto label3;

        $r6 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.app.FragmentManager getFragmentManager()>();

        $r7 = virtualinvoke $r6.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r8 = virtualinvoke $r7.<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>(4097);

        $i2 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: int getId()>();

        $r9 = virtualinvoke $r8.<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>($i2, r15);

        $r10 = virtualinvoke $r9.<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>(null);

        virtualinvoke $r10.<android.app.FragmentTransaction: int commit()>();

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.app.LocalePickerWithRegion: void returnToParentFrame()>();

     label4:
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        android.view.MenuItem r1;
        int $i0;
        android.app.FragmentManager $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        if $i0 == 16908332 goto label1;

        $z0 = specialinvoke r0.<android.app.ListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r2.<android.app.FragmentManager: void popBackStack()>();

        return 1;
    }

    public void onPause()
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        android.view.View r1;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        android.widget.SearchView $r2, r4;
        java.lang.CharSequence $r3;
        android.widget.ListView r5;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        specialinvoke r0.<android.app.ListFragment: void onPause()>();

        r4 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        i3 = 0;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<android.widget.SearchView: boolean hasFocus()>();

        r0.<com.android.internal.app.LocalePickerWithRegion: boolean mPreviousSearchHadFocus> = $z0;

        $r2 = r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.SearchView mSearchView>;

        $r3 = virtualinvoke $r2.<android.widget.SearchView: java.lang.CharSequence getQuery()>();

        r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence mPreviousSearch> = $r3;

        goto label2;

     label1:
        r0.<com.android.internal.app.LocalePickerWithRegion: boolean mPreviousSearchHadFocus> = 0;

        r0.<com.android.internal.app.LocalePickerWithRegion: java.lang.CharSequence mPreviousSearch> = null;

     label2:
        r5 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.ListView getListView()>();

        r1 = virtualinvoke r5.<android.widget.ListView: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke r5.<android.widget.ListView: int getFirstVisiblePosition()>();

        r0.<com.android.internal.app.LocalePickerWithRegion: int mFirstVisiblePosition> = $i0;

        if r1 != null goto label3;

        goto label4;

     label3:
        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke r5.<android.widget.ListView: int getPaddingTop()>();

        i3 = $i1 - $i2;

     label4:
        r0.<com.android.internal.app.LocalePickerWithRegion: int mTopDistance> = i3;

        return;
    }

    public boolean onQueryTextChange(java.lang.String)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        java.lang.String r1;
        com.android.internal.app.SuggestedLocaleAdapter r2;
        android.widget.Filter $r3;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.SuggestedLocaleAdapter mAdapter>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.internal.app.SuggestedLocaleAdapter: android.widget.Filter getFilter()>();

        virtualinvoke $r3.<android.widget.Filter: void filter(java.lang.CharSequence)>(r1);

     label1:
        return 0;
    }

    public boolean onQueryTextSubmit(java.lang.String)
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void onResume()
    {
        com.android.internal.app.LocalePickerWithRegion r0;
        com.android.internal.app.LocaleStore$LocaleInfo $r1, $r5;
        android.app.Activity $r2, $r4;
        android.widget.ListView $r3;
        java.lang.String $r6;

        r0 := @this: com.android.internal.app.LocalePickerWithRegion;

        specialinvoke r0.<android.app.ListFragment: void onResume()>();

        $r1 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale>;

        if $r1 == null goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.app.Activity getActivity()>();

        $r5 = r0.<com.android.internal.app.LocalePickerWithRegion: com.android.internal.app.LocaleStore$LocaleInfo mParentLocale>;

        $r6 = virtualinvoke $r5.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getFullNameNative()>();

        virtualinvoke $r4.<android.app.Activity: void setTitle(java.lang.CharSequence)>($r6);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.app.Activity getActivity()>();

        virtualinvoke $r2.<android.app.Activity: void setTitle(int)>(17040419);

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.app.LocalePickerWithRegion: android.widget.ListView getListView()>();

        virtualinvoke $r3.<android.widget.ListView: boolean requestFocus()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.LocalePickerWithRegion: java.lang.String PARENT_FRAGMENT_NAME> = "localeListEditor";

        return;
    }
}
