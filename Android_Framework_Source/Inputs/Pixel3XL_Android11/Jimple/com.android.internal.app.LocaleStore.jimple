public class com.android.internal.app.LocaleStore extends java.lang.Object
{
    private static boolean sFullyInitialized;
    private static final java.util.HashMap sLocaleCache;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache> = $r0;

        <com.android.internal.app.LocaleStore: boolean sFullyInitialized> = 0;

        return;
    }

    public void <init>()
    {
        com.android.internal.app.LocaleStore r0;

        r0 := @this: com.android.internal.app.LocaleStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void addSuggestedLocalesForRegion(java.util.Locale)
    {
        java.util.Iterator r0;
        com.android.internal.app.LocaleStore$LocaleInfo r1;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        java.lang.Object $r4;
        java.util.Locale $r5, r7;
        java.lang.String $r6, r8;

        r7 := @parameter0: java.util.Locale;

        if r7 != null goto label1;

        return;

     label1:
        r8 = virtualinvoke r7.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r0 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.app.LocaleStore$LocaleInfo) $r4;

        $r5 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        $r6 = virtualinvoke $r5.<java.util.Locale: java.lang.String getCountry()>();

        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: int access$076(com.android.internal.app.LocaleStore$LocaleInfo,int)>(r1, 1);

     label4:
        goto label3;

     label5:
        return;
    }

    public static void fillCache(android.content.Context)
    {
        int i1, $i2, i6, i7, i8;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, z12;
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r10, $r17, $r18, $r20, $r28, $r31, $r33;
        java.util.Collection $r3;
        java.util.Locale $r4, $r9, $r25, $r26, r41;
        java.lang.Object $r5, $r19, $r22;
        java.lang.String $r6, $r8, $r11, $r13, $r21, $r27, $r29, r39, r42, r46, r48, $r49;
        com.android.internal.app.LocaleStore$LocaleInfo $r7, $r24, $r32, r47, r51;
        java.lang.StringBuilder $r12;
        java.util.IllformedLocaleException $r23;
        android.content.Context r35;
        java.util.Set r36;
        android.content.ContentResolver r37;
        java.lang.String[] r38, r44;
        java.util.Iterator r50;

        r35 := @parameter0: android.content.Context;

        $z0 = <com.android.internal.app.LocaleStore: boolean sFullyInitialized>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r36 = staticinvoke <com.android.internal.app.LocaleStore: java.util.Set getSimCountries(android.content.Context)>(r35);

        r37 = virtualinvoke r35.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r37, "development_settings_enabled", 0);

        if $i2 == 0 goto label02;

        z12 = 1;

        goto label03;

     label02:
        z12 = 0;

     label03:
        r38 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String[] getSupportedLocales(android.content.Context)>(r35);

        i1 = lengthof r38;

        i6 = 0;

     label04:
        if i6 >= i1 goto label09;

        r39 = r38[i6];

        $z7 = virtualinvoke r39.<java.lang.String: boolean isEmpty()>();

        if $z7 != 0 goto label08;

        $r24 = new com.android.internal.app.LocaleStore$LocaleInfo;

        specialinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: void <init>(java.lang.String,com.android.internal.app.LocaleStore$1)>(r39, null);

        $r25 = virtualinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        $z8 = staticinvoke <android.os.LocaleList: boolean isPseudoLocale(java.util.Locale)>($r25);

        if $z8 == 0 goto label05;

        if z12 == 0 goto label07;

        virtualinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: void setTranslated(boolean)>(1);

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: boolean access$202(com.android.internal.app.LocaleStore$LocaleInfo,boolean)>($r24, 1);

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: int access$076(com.android.internal.app.LocaleStore$LocaleInfo,int)>($r24, 1);

     label05:
        $r26 = virtualinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        $r27 = virtualinvoke $r26.<java.util.Locale: java.lang.String getCountry()>();

        $z9 = interfaceinvoke r36.<java.util.Set: boolean contains(java.lang.Object)>($r27);

        if $z9 == 0 goto label06;

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: int access$076(com.android.internal.app.LocaleStore$LocaleInfo,int)>($r24, 1);

     label06:
        $r28 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r29 = virtualinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getId()>();

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r24);

        r41 = virtualinvoke $r24.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getParent()>();

        if r41 == null goto label07;

        r42 = virtualinvoke r41.<java.util.Locale: java.lang.String toLanguageTag()>();

        $r31 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $z10 = virtualinvoke $r31.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r42);

        if $z10 != 0 goto label07;

        $r33 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r32 = new com.android.internal.app.LocaleStore$LocaleInfo;

        specialinvoke $r32.<com.android.internal.app.LocaleStore$LocaleInfo: void <init>(java.util.Locale,com.android.internal.app.LocaleStore$1)>(r41, null);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r42, $r32);

     label07:
        i6 = i6 + 1;

        goto label04;

     label08:
        $r23 = new java.util.IllformedLocaleException;

        specialinvoke $r23.<java.util.IllformedLocaleException: void <init>(java.lang.String)>("Bad locale entry in locale_config.xml");

        throw $r23;

     label09:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r44 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String[] getSystemAssetLocales()>();

        i7 = lengthof r44;

        i8 = 0;

     label10:
        if i8 >= i7 goto label14;

        $r7 = new com.android.internal.app.LocaleStore$LocaleInfo;

        $r8 = r44[i8];

        specialinvoke $r7.<com.android.internal.app.LocaleStore$LocaleInfo: void <init>(java.lang.String,com.android.internal.app.LocaleStore$1)>($r8, null);

        $r9 = virtualinvoke $r7.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        r46 = virtualinvoke $r9.<java.util.Locale: java.lang.String getCountry()>();

        $z3 = virtualinvoke r46.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label13;

        r47 = null;

        $r10 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r11 = virtualinvoke $r7.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getId()>();

        $z5 = virtualinvoke $r10.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r11);

        if $z5 == 0 goto label11;

        $r20 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r21 = virtualinvoke $r7.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getId()>();

        $r22 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r21);

        r47 = (com.android.internal.app.LocaleStore$LocaleInfo) $r22;

        goto label12;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String access$400(com.android.internal.app.LocaleStore$LocaleInfo)>($r7);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        r48 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $z6 = virtualinvoke $r17.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r48);

        if $z6 == 0 goto label12;

        $r18 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r48);

        r47 = (com.android.internal.app.LocaleStore$LocaleInfo) $r19;

     label12:
        if r47 == null goto label13;

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: int access$076(com.android.internal.app.LocaleStore$LocaleInfo,int)>(r47, 2);

     label13:
        $r49 = staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String access$400(com.android.internal.app.LocaleStore$LocaleInfo)>($r7);

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r49);

        i8 = i8 + 1;

        goto label10;

     label14:
        $r2 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r50 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r5 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (com.android.internal.app.LocaleStore$LocaleInfo) $r5;

        $r6 = staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String access$400(com.android.internal.app.LocaleStore$LocaleInfo)>(r51);

        $z2 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r6);

        virtualinvoke r51.<com.android.internal.app.LocaleStore$LocaleInfo: void setTranslated(boolean)>($z2);

        goto label15;

     label16:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        staticinvoke <com.android.internal.app.LocaleStore: void addSuggestedLocalesForRegion(java.util.Locale)>($r4);

        <com.android.internal.app.LocaleStore: boolean sFullyInitialized> = 1;

        return;
    }

    private static int getLevel(java.util.Set, com.android.internal.app.LocaleStore$LocaleInfo, boolean)
    {
        java.util.Set r0;
        com.android.internal.app.LocaleStore$LocaleInfo r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r2;
        java.util.Locale $r3;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: com.android.internal.app.LocaleStore$LocaleInfo;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getId()>();

        $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $z2 = staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: boolean access$200(com.android.internal.app.LocaleStore$LocaleInfo)>(r1);

        if $z2 == 0 goto label2;

        return 2;

     label2:
        if z0 == 0 goto label3;

        $z3 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: boolean isTranslated()>();

        if $z3 != 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getParent()>();

        if $r3 == null goto label4;

        return 2;

     label4:
        return 0;
    }

    public static java.util.Set getLevelLocales(android.content.Context, java.util.Set, com.android.internal.app.LocaleStore$LocaleInfo, boolean)
    {
        java.util.Set r0;
        com.android.internal.app.LocaleStore$LocaleInfo r1, r4, $r10;
        boolean z0, $z1, $z4, $z6;
        java.util.Iterator r3;
        java.util.HashSet $r5;
        java.util.HashMap $r6;
        java.util.Collection $r7;
        java.lang.Object $r8;
        int $i0;
        java.util.Locale $r9, $r11;
        java.lang.String $r12, r14;
        android.content.Context r13;

        r13 := @parameter0: android.content.Context;

        r0 := @parameter1: java.util.Set;

        r1 := @parameter2: com.android.internal.app.LocaleStore$LocaleInfo;

        z0 := @parameter3: boolean;

        staticinvoke <com.android.internal.app.LocaleStore: void fillCache(android.content.Context)>(r13);

        if r1 != null goto label1;

        r14 = null;

        goto label2;

     label1:
        r14 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: java.lang.String getId()>();

     label2:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label7;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.app.LocaleStore$LocaleInfo) $r8;

        $i0 = staticinvoke <com.android.internal.app.LocaleStore: int getLevel(java.util.Set,com.android.internal.app.LocaleStore$LocaleInfo,boolean)>(r0, r4, z0);

        if $i0 != 2 goto label6;

        if r1 == null goto label4;

        $r11 = virtualinvoke r4.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getParent()>();

        $r12 = virtualinvoke $r11.<java.util.Locale: java.lang.String toLanguageTag()>();

        $z4 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label6;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        goto label6;

     label4:
        $z1 = staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: boolean access$500(com.android.internal.app.LocaleStore$LocaleInfo,int)>(r4, 1);

        if $z1 == 0 goto label5;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        goto label6;

     label5:
        $r9 = virtualinvoke r4.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getParent()>();

        $r10 = staticinvoke <com.android.internal.app.LocaleStore: com.android.internal.app.LocaleStore$LocaleInfo getLocaleInfo(java.util.Locale)>($r9);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r10);

     label6:
        goto label3;

     label7:
        return $r5;
    }

    public static com.android.internal.app.LocaleStore$LocaleInfo getLocaleInfo(java.util.Locale)
    {
        java.lang.String r0;
        java.util.HashMap $r1, $r2, $r5;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.app.LocaleStore$LocaleInfo $r4, r8;
        java.util.Locale r7;

        r7 := @parameter0: java.util.Locale;

        r0 = virtualinvoke r7.<java.util.Locale: java.lang.String toLanguageTag()>();

        $r1 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r4 = new com.android.internal.app.LocaleStore$LocaleInfo;

        specialinvoke $r4.<com.android.internal.app.LocaleStore$LocaleInfo: void <init>(java.util.Locale,com.android.internal.app.LocaleStore$1)>(r7, null);

        r8 = $r4;

        $r5 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

        goto label2;

     label1:
        $r2 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (com.android.internal.app.LocaleStore$LocaleInfo) $r3;

     label2:
        return r8;
    }

    private static java.util.Set getSimCountries(android.content.Context)
    {
        android.telephony.TelephonyManager r1;
        java.util.HashSet $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r6, r9, r10;
        java.util.Locale $r5, $r7;
        boolean $z0, $z1;
        android.content.Context r8;

        r8 := @parameter0: android.content.Context;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke r8.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        r1 = (android.telephony.TelephonyManager) $r3;

        if r1 == null goto label2;

        $r4 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        $r5 = <java.util.Locale: java.util.Locale US>;

        r9 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r9);

     label1:
        $r6 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        $r7 = <java.util.Locale: java.util.Locale US>;

        r10 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r7);

        $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r10);

     label2:
        return $r2;
    }

    public static void updateSimCountries(android.content.Context)
    {
        java.util.Iterator r0;
        com.android.internal.app.LocaleStore$LocaleInfo r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.Locale $r5;
        java.lang.String $r6;
        android.content.Context r7;
        java.util.Set r8;

        r7 := @parameter0: android.content.Context;

        r8 = staticinvoke <com.android.internal.app.LocaleStore: java.util.Set getSimCountries(android.content.Context)>(r7);

        $r2 = <com.android.internal.app.LocaleStore: java.util.HashMap sLocaleCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r0 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.app.LocaleStore$LocaleInfo) $r4;

        $r5 = virtualinvoke r1.<com.android.internal.app.LocaleStore$LocaleInfo: java.util.Locale getLocale()>();

        $r6 = virtualinvoke $r5.<java.util.Locale: java.lang.String getCountry()>();

        $z1 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        staticinvoke <com.android.internal.app.LocaleStore$LocaleInfo: int access$076(com.android.internal.app.LocaleStore$LocaleInfo,int)>(r1, 1);

     label2:
        goto label1;

     label3:
        return;
    }
}
