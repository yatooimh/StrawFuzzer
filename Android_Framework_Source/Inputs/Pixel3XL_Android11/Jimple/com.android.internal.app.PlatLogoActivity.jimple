public class com.android.internal.app.PlatLogoActivity extends android.app.Activity
{
    private static final java.lang.String R_EGG_UNLOCK_SETTING;
    static final java.lang.String TOUCH_STATS;
    private static final int UNLOCK_TRIES;
    private static final boolean WRITE_SETTINGS;
    com.android.internal.app.PlatLogoActivity$BigDialView mDialView;
    double mPressureMax;
    double mPressureMin;

    public void <init>()
    {
        com.android.internal.app.PlatLogoActivity r0;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin> = 0.0;

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax> = -1.0;

        return;
    }

    static void access$000(com.android.internal.app.PlatLogoActivity, boolean)
    {
        com.android.internal.app.PlatLogoActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.app.PlatLogoActivity;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.app.PlatLogoActivity: void launchNextStage(boolean)>(z0);

        return;
    }

    private void launchNextStage(boolean)
    {
        com.android.internal.app.PlatLogoActivity r0;
        boolean z0;
        android.content.Intent $r1, $r2, r7;
        android.content.ActivityNotFoundException $r3;
        java.lang.RuntimeException $r4;
        android.content.ContentResolver r5;
        long l2;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        z0 := @parameter0: boolean;

        r5 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label1;

        l2 = 0L;

        goto label2;

     label1:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        staticinvoke <android.provider.Settings$System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>(r5, "egg_mode_r", l2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("com.android.internal.app.PlatLogoActivity", "Can\'t write settings", $r4);

     label5:
        r7 = new android.content.Intent;

        specialinvoke r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r1 = virtualinvoke r7.<android.content.Intent: android.content.Intent setFlags(int)>(268468224);

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("com.android.internal.category.PLATLOGO");

        virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: void startActivity(android.content.Intent)>($r2);

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("com.android.internal.app.PlatLogoActivity", "No more eggs.");

     label8:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch android.content.ActivityNotFoundException from label5 to label6 with label7;
    }

    private void measureTouchPressure(android.view.MotionEvent)
    {
        com.android.internal.app.PlatLogoActivity r0;
        android.view.MotionEvent r1;
        float f0;
        int i0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b1, $b2, $b3;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        r1 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getPressure()>();

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 == 0 goto label3;

        if i0 == 2 goto label1;

        goto label4;

     label1:
        $d3 = (double) f0;

        $d2 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin>;

        $b2 = $d3 cmpg $d2;

        if $b2 >= 0 goto label2;

        $d7 = (double) f0;

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin> = $d7;

     label2:
        $d5 = (double) f0;

        $d4 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax>;

        $b3 = $d5 cmpl $d4;

        if $b3 <= 0 goto label4;

        $d6 = (double) f0;

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax> = $d6;

        goto label4;

     label3:
        $d1 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax>;

        $b1 = $d1 cmpg 0.0;

        if $b1 >= 0 goto label4;

        d0 = (double) f0;

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax> = d0;

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin> = d0;

     label4:
        return;
    }

    private void syncTouchPressure()
    {
        com.android.internal.app.PlatLogoActivity r0;
        org.json.JSONObject r1;
        android.content.ContentResolver $r2, $r5;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;
        java.lang.String $r6, r8;
        java.lang.Exception $r7;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.content.ContentResolver getContentResolver()>();

        r8 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "touch.stats");

        r1 = new org.json.JSONObject;

     label2:
        if r8 == null goto label3;

        goto label4;

     label3:
        r8 = "{}";

     label4:
        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>(r8);

        $z0 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("min");

        if $z0 == 0 goto label5;

        $d6 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin>;

        $d7 = virtualinvoke r1.<org.json.JSONObject: double getDouble(java.lang.String)>("min");

        $d8 = staticinvoke <java.lang.Math: double min(double,double)>($d6, $d7);

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin> = $d8;

     label5:
        $z1 = virtualinvoke r1.<org.json.JSONObject: boolean has(java.lang.String)>("max");

        if $z1 == 0 goto label6;

        $d3 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax>;

        $d4 = virtualinvoke r1.<org.json.JSONObject: double getDouble(java.lang.String)>("max");

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d4);

        r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax> = $d5;

     label6:
        $d0 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax>;

        $b0 = $d0 cmpl 0.0;

        if $b0 < 0 goto label7;

        $d1 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMin>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("min", $d1);

        $d2 = r0.<com.android.internal.app.PlatLogoActivity: double mPressureMax>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("max", $d2);

        $r5 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r5, "touch.stats", $r6);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("com.android.internal.app.PlatLogoActivity", "Can\'t write touch settings", $r7);

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.android.internal.app.PlatLogoActivity r0;
        float f0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        android.view.Window $r3, $r5, $r6;
        android.view.View $r4;
        com.android.internal.app.PlatLogoActivity$BigDialView $r7, $r9, $r11, $r12;
        android.content.ContentResolver $r8;
        long $l0;
        byte $b1;
        android.widget.FrameLayout $r10;
        android.os.Bundle r13;
        android.app.ActionBar r14;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        r13 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r13);

        $r1 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        $r3 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r4.<android.view.View: void setSystemUiVisibility(int)>(768);

        $r5 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.view.Window getWindow()>();

        virtualinvoke $r5.<android.view.Window: void setNavigationBarColor(int)>(0);

        $r6 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setStatusBarColor(int)>(0);

        r14 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.app.ActionBar getActionBar()>();

        if r14 == null goto label1;

        virtualinvoke r14.<android.app.ActionBar: void hide()>();

     label1:
        $r7 = new com.android.internal.app.PlatLogoActivity$BigDialView;

        specialinvoke $r7.<com.android.internal.app.PlatLogoActivity$BigDialView: void <init>(com.android.internal.app.PlatLogoActivity,android.content.Context,android.util.AttributeSet)>(r0, r0, null);

        r0.<com.android.internal.app.PlatLogoActivity: com.android.internal.app.PlatLogoActivity$BigDialView mDialView> = $r7;

        $r8 = virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: android.content.ContentResolver getContentResolver()>();

        $l0 = staticinvoke <android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>($r8, "egg_mode_r", 0L);

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $r12 = r0.<com.android.internal.app.PlatLogoActivity: com.android.internal.app.PlatLogoActivity$BigDialView mDialView>;

        virtualinvoke $r12.<com.android.internal.app.PlatLogoActivity$BigDialView: void setUnlockTries(int)>(3);

        goto label3;

     label2:
        $r9 = r0.<com.android.internal.app.PlatLogoActivity: com.android.internal.app.PlatLogoActivity$BigDialView mDialView>;

        virtualinvoke $r9.<com.android.internal.app.PlatLogoActivity$BigDialView: void setUnlockTries(int)>(0);

     label3:
        $r10 = new android.widget.FrameLayout;

        specialinvoke $r10.<android.widget.FrameLayout: void <init>(android.content.Context)>(r0);

        virtualinvoke $r10.<android.widget.FrameLayout: void setBackgroundColor(int)>(-65536);

        $r11 = r0.<com.android.internal.app.PlatLogoActivity: com.android.internal.app.PlatLogoActivity$BigDialView mDialView>;

        virtualinvoke $r10.<android.widget.FrameLayout: void addView(android.view.View,int,int)>($r11, -1, -1);

        virtualinvoke r0.<com.android.internal.app.PlatLogoActivity: void setContentView(android.view.View)>($r10);

        return;
    }

    protected void onPause()
    {
        com.android.internal.app.PlatLogoActivity r0;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        return;
    }

    public void onStart()
    {
        com.android.internal.app.PlatLogoActivity r0;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        specialinvoke r0.<com.android.internal.app.PlatLogoActivity: void syncTouchPressure()>();

        return;
    }

    public void onStop()
    {
        com.android.internal.app.PlatLogoActivity r0;

        r0 := @this: com.android.internal.app.PlatLogoActivity;

        specialinvoke r0.<com.android.internal.app.PlatLogoActivity: void syncTouchPressure()>();

        specialinvoke r0.<android.app.Activity: void onStop()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.PlatLogoActivity: boolean WRITE_SETTINGS> = 1;

        <com.android.internal.app.PlatLogoActivity: int UNLOCK_TRIES> = 3;

        <com.android.internal.app.PlatLogoActivity: java.lang.String TOUCH_STATS> = "touch.stats";

        <com.android.internal.app.PlatLogoActivity: java.lang.String R_EGG_UNLOCK_SETTING> = "egg_mode_r";

        return;
    }
}
