public class com.android.internal.app.ProcessMap extends java.lang.Object
{
    final android.util.ArrayMap mMap;

    public void <init>()
    {
        com.android.internal.app.ProcessMap r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.internal.app.ProcessMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap> = $r1;

        return;
    }

    public java.lang.Object get(java.lang.String, int)
    {
        com.android.internal.app.ProcessMap r0;
        int i0;
        android.util.ArrayMap $r1;
        java.lang.Object $r2, $r3;
        java.lang.String r4;
        android.util.SparseArray r5;

        r0 := @this: com.android.internal.app.ProcessMap;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.util.SparseArray) $r2;

        if r5 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        return $r3;
    }

    public android.util.ArrayMap getMap()
    {
        com.android.internal.app.ProcessMap r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.internal.app.ProcessMap;

        $r1 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        return $r1;
    }

    public java.lang.Object put(java.lang.String, int, java.lang.Object)
    {
        com.android.internal.app.ProcessMap r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2, $r5;
        android.util.SparseArray r3, $r6, r9;
        android.util.ArrayMap $r4, $r7;

        r0 := @this: com.android.internal.app.ProcessMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.SparseArray) $r5;

        r9 = r3;

        if r3 != null goto label1;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>(int)>(2);

        r9 = $r6;

        $r7 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label1:
        virtualinvoke r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        return r2;
    }

    public java.lang.Object remove(java.lang.String, int)
    {
        com.android.internal.app.ProcessMap r0;
        java.lang.String r1;
        int i0, $i1;
        android.util.SparseArray r2;
        java.lang.Object r3, $r5;
        android.util.ArrayMap $r4, $r6;

        r0 := @this: com.android.internal.app.ProcessMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.util.SparseArray) $r5;

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object removeReturnOld(int)>(i0);

        $i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label1;

        $r6 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return r3;

     label2:
        return null;
    }

    public int size()
    {
        com.android.internal.app.ProcessMap r0;
        android.util.ArrayMap $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ProcessMap;

        $r1 = r0.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        return $i0;
    }
}
