public class com.android.internal.app.ResolverActivity extends android.app.Activity implements com.android.internal.app.ResolverListAdapter$ResolverListCommunicator
{
    private static final boolean DEBUG;
    public static boolean ENABLE_TABBED_VIEW;
    static final java.lang.String EXTRA_CALLING_USER;
    private static final java.lang.String EXTRA_FRAGMENT_ARG_KEY;
    public static final java.lang.String EXTRA_IS_AUDIO_CAPTURE_DEVICE;
    static final java.lang.String EXTRA_SELECTED_PROFILE;
    private static final java.lang.String EXTRA_SHOW_FRAGMENT_ARGS;
    private static final java.lang.String LAST_SHOWN_TAB_KEY;
    protected static final java.lang.String METRICS_CATEGORY_CHOOSER;
    protected static final java.lang.String METRICS_CATEGORY_RESOLVER;
    private static final java.lang.String OPEN_LINKS_COMPONENT_KEY;
    static final int PROFILE_PERSONAL;
    static final int PROFILE_WORK;
    private static final java.lang.String TAB_TAG_PERSONAL;
    private static final java.lang.String TAB_TAG_WORK;
    private static final java.lang.String TAG;
    private android.widget.Button mAlwaysButton;
    private int mDefaultTitleResId;
    private android.widget.Space mFooterSpacer;
    private android.os.UserHandle mHeaderCreatorUser;
    protected final java.util.ArrayList mIntents;
    private int mLastSelected;
    protected int mLaunchedFromUid;
    private int mLayoutId;
    protected com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter;
    private android.widget.Button mOnceButton;
    private com.android.internal.content.PackageMonitor mPersonalPackageMonitor;
    private com.android.internal.app.ResolverActivity$PickTargetOptionRequest mPickOptionRequest;
    protected android.content.pm.PackageManager mPm;
    private int mProfileSwitchMessageId;
    protected android.view.View mProfileView;
    private java.lang.String mReferrerPackage;
    private boolean mRegistered;
    protected com.android.internal.widget.ResolverDrawerLayout mResolverDrawerLayout;
    private boolean mResolvingHome;
    private boolean mRetainInOnStop;
    private boolean mSafeForwardingMode;
    protected boolean mSupportsAlwaysUseOption;
    protected android.graphics.Insets mSystemWindowInsets;
    private java.lang.CharSequence mTitle;
    private com.android.internal.content.PackageMonitor mWorkPackageMonitor;
    private boolean mWorkProfileHasBeenEnabled;
    private android.content.BroadcastReceiver mWorkProfileStateReceiver;
    private android.os.UserHandle mWorkProfileUserHandle;

    static void <clinit>()
    {
        <com.android.internal.app.ResolverActivity: java.lang.String TAG> = "ResolverActivity";

        <com.android.internal.app.ResolverActivity: java.lang.String TAB_TAG_WORK> = "work";

        <com.android.internal.app.ResolverActivity: java.lang.String TAB_TAG_PERSONAL> = "personal";

        <com.android.internal.app.ResolverActivity: int PROFILE_WORK> = 1;

        <com.android.internal.app.ResolverActivity: int PROFILE_PERSONAL> = 0;

        <com.android.internal.app.ResolverActivity: java.lang.String OPEN_LINKS_COMPONENT_KEY> = "app_link_state";

        <com.android.internal.app.ResolverActivity: java.lang.String METRICS_CATEGORY_RESOLVER> = "intent_resolver";

        <com.android.internal.app.ResolverActivity: java.lang.String METRICS_CATEGORY_CHOOSER> = "intent_chooser";

        <com.android.internal.app.ResolverActivity: java.lang.String LAST_SHOWN_TAB_KEY> = "last_shown_tab_key";

        <com.android.internal.app.ResolverActivity: java.lang.String EXTRA_SHOW_FRAGMENT_ARGS> = ":settings:show_fragment_args";

        <com.android.internal.app.ResolverActivity: java.lang.String EXTRA_SELECTED_PROFILE> = "com.android.internal.app.ResolverActivity.EXTRA_SELECTED_PROFILE";

        <com.android.internal.app.ResolverActivity: java.lang.String EXTRA_IS_AUDIO_CAPTURE_DEVICE> = "is_audio_capture_device";

        <com.android.internal.app.ResolverActivity: java.lang.String EXTRA_FRAGMENT_ARG_KEY> = ":settings:fragment_args_key";

        <com.android.internal.app.ResolverActivity: java.lang.String EXTRA_CALLING_USER> = "com.android.internal.app.ResolverActivity.EXTRA_CALLING_USER";

        <com.android.internal.app.ResolverActivity: boolean DEBUG> = 0;

        <com.android.internal.app.ResolverActivity: boolean ENABLE_TABBED_VIEW> = 1;

        return;
    }

    public void <init>()
    {
        com.android.internal.app.ResolverActivity r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.internal.app.ResolverActivity: int mLastSelected> = -1;

        r0.<com.android.internal.app.ResolverActivity: boolean mResolvingHome> = 0;

        r0.<com.android.internal.app.ResolverActivity: int mProfileSwitchMessageId> = -1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents> = $r1;

        r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets> = null;

        r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer> = null;

        r0.<com.android.internal.app.ResolverActivity: boolean mWorkProfileHasBeenEnabled> = 0;

        return;
    }

    static void access$000(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void resetCheckedItem()>();

        return;
    }

    static boolean access$100(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isWorkProfileEnabled()>();

        return $z0;
    }

    static boolean access$200(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mWorkProfileHasBeenEnabled>;

        return $z0;
    }

    static boolean access$202(com.android.internal.app.ResolverActivity, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.app.ResolverActivity: boolean mWorkProfileHasBeenEnabled> = z0;

        return z0;
    }

    static int access$300(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;
        int $i0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        $i0 = r0.<com.android.internal.app.ResolverActivity: int mLastSelected>;

        return $i0;
    }

    static int access$302(com.android.internal.app.ResolverActivity, int)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        i0 := @parameter1: int;

        r0.<com.android.internal.app.ResolverActivity: int mLastSelected> = i0;

        return i0;
    }

    static android.widget.Button access$400(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.Button $r1;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mAlwaysButton>;

        return $r1;
    }

    static void access$500(com.android.internal.app.ResolverActivity, boolean, int, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, z1;
        int i0;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setAlwaysButtonEnabled(boolean,int,boolean)>(z0, i0, z1);

        return;
    }

    static android.widget.Button access$600(com.android.internal.app.ResolverActivity)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.Button $r1;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton>;

        return $r1;
    }

    static com.android.internal.app.ResolverActivity$PickTargetOptionRequest access$702(com.android.internal.app.ResolverActivity, com.android.internal.app.ResolverActivity$PickTargetOptionRequest)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverActivity$PickTargetOptionRequest r1;

        r0 := @parameter0: com.android.internal.app.ResolverActivity;

        r1 := @parameter1: com.android.internal.app.ResolverActivity$PickTargetOptionRequest;

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverActivity$PickTargetOptionRequest mPickOptionRequest> = r1;

        return r1;
    }

    private boolean canAppInteractCrossProfiles(java.lang.String)
    {
        com.android.internal.app.ResolverActivity r0;
        java.lang.String r1, $r8;
        int i0, $i1, $i2, $i3;
        android.content.pm.PackageManager $r2;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.StringBuilder $r4;
        android.content.pm.ApplicationInfo r9;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        r9 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

     label2:
        $z0 = r9.<android.content.pm.ApplicationInfo: boolean crossProfile>;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i0 = r9.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = specialinvoke r0.<com.android.internal.app.ResolverActivity: int isPermissionGranted(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0);

        if $i1 != 0 goto label4;

        return 1;

     label4:
        $i2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: int isPermissionGranted(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS", i0);

        if $i2 != 0 goto label5;

        return 1;

     label5:
        $i3 = staticinvoke <android.content.PermissionChecker: int checkPermissionForPreflight(android.content.Context,java.lang.String,int,int,java.lang.String)>(r0, "android.permission.INTERACT_ACROSS_PROFILES", -1, i0, r1);

        if $i3 != 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist on current user.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResolverActivity", $r8);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
    }

    private boolean configureContentView()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter r1, $r2, $r5, $r8, $r9, $r11;
        com.android.internal.app.ResolverListAdapter $r3, $r10, $r12;
        java.lang.IllegalStateException $r4;
        boolean $z1, $z2, $z3, $z4, $z5, z6, z7, $z8, z9, z10, $z11;
        int $i0, $i1;
        android.view.View $r6;
        com.android.internal.widget.ViewPager $r7;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        if $r3 == null goto label12;

        r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z1 = virtualinvoke r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean rebuildActiveTab(boolean)>(1);

        if $z1 != 0 goto label02;

        $r11 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r12 = virtualinvoke $r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z5 = virtualinvoke $r12.<com.android.internal.app.ResolverListAdapter: boolean isTabLoaded()>();

        if $z5 == 0 goto label01;

        goto label02;

     label01:
        z6 = 0;

        goto label03;

     label02:
        z6 = 1;

     label03:
        z7 = z6;

        $z8 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z8 == 0 goto label09;

        $r8 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z3 = virtualinvoke $r8.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean rebuildInactiveTab(boolean)>(0);

        if $z3 != 0 goto label05;

        $r9 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r10 = virtualinvoke $r9.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $z4 = virtualinvoke $r10.<com.android.internal.app.ResolverListAdapter: boolean isTabLoaded()>();

        if $z4 == 0 goto label04;

        goto label05;

     label04:
        z9 = 0;

        goto label06;

     label05:
        z9 = 1;

     label06:
        if z6 == 0 goto label07;

        if z9 == 0 goto label07;

        z10 = 1;

        goto label08;

     label07:
        z10 = 0;

     label08:
        z7 = z10;

     label09:
        $z11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z11 == 0 goto label10;

        r0.<com.android.internal.app.ResolverActivity: int mLayoutId> = 17367276;

        goto label11;

     label10:
        $i0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int getLayoutResource()>();

        r0.<com.android.internal.app.ResolverActivity: int mLayoutId> = $i0;

     label11:
        $i1 = r0.<com.android.internal.app.ResolverActivity: int mLayoutId>;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void setContentView(int)>($i1);

        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909319);

        $r7 = (com.android.internal.widget.ViewPager) $r6;

        virtualinvoke $r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void setupViewPager(com.android.internal.widget.ViewPager)>($r7);

        $z2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean postRebuildList(boolean)>(z7);

        return $z2;

     label12:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("mMultiProfilePagerAdapter.getCurrentListAdapter() cannot be null.");

        throw $r4;
    }

    private com.android.internal.app.ResolverMultiProfilePagerAdapter createResolverMultiProfilePagerAdapterForOneProfile(android.content.Intent[], java.util.List, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Intent[] r1;
        java.util.List r2;
        boolean z0;
        com.android.internal.app.ResolverMultiProfilePagerAdapter $r3;
        java.util.ArrayList $r4;
        int $i0;
        android.os.UserHandle $r5, $r7;
        com.android.internal.app.ResolverListAdapter $r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.Intent[];

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r3 = new com.android.internal.app.ResolverMultiProfilePagerAdapter;

        $r4 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverListAdapter createResolverListAdapter(android.content.Context,java.util.List,android.content.Intent[],java.util.List,boolean,android.os.UserHandle)>(r0, $r4, r1, r2, z0, $r5);

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        specialinvoke $r3.<com.android.internal.app.ResolverMultiProfilePagerAdapter: void <init>(android.content.Context,com.android.internal.app.ResolverListAdapter,android.os.UserHandle,android.os.UserHandle)>(r0, $r6, $r7, null);

        return $r3;
    }

    private com.android.internal.app.ResolverMultiProfilePagerAdapter createResolverMultiProfilePagerAdapterForTwoProfiles(android.content.Intent[], java.util.List, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.os.UserHandle r2, $r4, $r5, $r6, $r7, r11, $r14, $r19, $r20, $r21;
        android.content.Intent $r3, $r8;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, $z7;
        android.os.Parcelable $r9;
        android.content.Intent[] r10, r13;
        java.util.ArrayList r12, r16;
        com.android.internal.app.ResolverListAdapter r15, $r18;
        com.android.internal.app.ResolverMultiProfilePagerAdapter $r17;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r10 := @parameter0: android.content.Intent[];

        r1 := @parameter1: java.util.List;

        z4 := @parameter2: boolean;

        i5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int getCurrentProfile()>();

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("com.android.internal.app.ResolverActivity.EXTRA_CALLING_USER");

        if $z0 == 0 goto label01;

        $r8 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        $r9 = virtualinvoke $r8.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("com.android.internal.app.ResolverActivity.EXTRA_CALLING_USER");

        r11 = (android.os.UserHandle) $r9;

        goto label02;

     label01:
        r11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getUser()>();

     label02:
        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getUser()>();

        $z1 = virtualinvoke $r4.<android.os.UserHandle: boolean equals(java.lang.Object)>(r11);

        if $z1 != 0 goto label04;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        $z2 = virtualinvoke $r6.<android.os.UserHandle: boolean equals(java.lang.Object)>(r11);

        if $z2 == 0 goto label03;

        i5 = 0;

        goto label05;

     label03:
        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        $z3 = virtualinvoke $r7.<android.os.UserHandle: boolean equals(java.lang.Object)>(r11);

        if $z3 == 0 goto label05;

        i5 = 1;

        goto label05;

     label04:
        i0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int getSelectedProfileExtra()>();

        if i0 == -1 goto label05;

        i5 = i0;

        goto label05;

     label05:
        r12 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        if i5 != 0 goto label06;

        r13 = r10;

        goto label07;

     label06:
        r13 = null;

     label07:
        if z4 == 0 goto label08;

        $i3 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        $i4 = virtualinvoke $r5.<android.os.UserHandle: int getIdentifier()>();

        if $i3 != $i4 goto label08;

        z5 = 1;

        goto label09;

     label08:
        z5 = 0;

     label09:
        $r14 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        r15 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverListAdapter createResolverListAdapter(android.content.Context,java.util.List,android.content.Intent[],java.util.List,boolean,android.os.UserHandle)>(r0, r12, r13, r1, z5, $r14);

        r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        r16 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        if i5 != 1 goto label10;

        goto label11;

     label10:
        r10 = null;

     label11:
        if z4 == 0 goto label12;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i2 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        if $i1 != $i2 goto label12;

        z6 = 1;

        goto label13;

     label12:
        z6 = 0;

     label13:
        $r17 = new com.android.internal.app.ResolverMultiProfilePagerAdapter;

        $r18 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverListAdapter createResolverListAdapter(android.content.Context,java.util.List,android.content.Intent[],java.util.List,boolean,android.os.UserHandle)>(r0, r16, r10, r1, z6, r2);

        $r19 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        $r20 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        $r21 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getUser()>();

        $z7 = virtualinvoke $r21.<android.os.UserHandle: boolean equals(java.lang.Object)>(r11);

        specialinvoke $r17.<com.android.internal.app.ResolverMultiProfilePagerAdapter: void <init>(android.content.Context,com.android.internal.app.ResolverListAdapter,com.android.internal.app.ResolverListAdapter,int,android.os.UserHandle,android.os.UserHandle,boolean)>(r0, r15, $r18, i5, $r19, $r20, $z7);

        return $r17;
    }

    private android.content.BroadcastReceiver createWorkProfileStateReceiver()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverActivity$4 $r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = new com.android.internal.app.ResolverActivity$4;

        specialinvoke $r1.<com.android.internal.app.ResolverActivity$4: void <init>(com.android.internal.app.ResolverActivity)>(r0);

        return $r1;
    }

    private static int getAttrColor(android.content.Context, int)
    {
        int[] $r0;
        android.content.Context r1;
        int i0, i1;
        android.content.res.TypedArray r2;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r0 = newarray (int)[1];

        $r0[0] = i0;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r0);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return i1;
    }

    public static int getLabelRes(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.app.ResolverActivity$ActionTitle $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.internal.app.ResolverActivity$ActionTitle: com.android.internal.app.ResolverActivity$ActionTitle forAction(java.lang.String)>(r0);

        $i0 = $r1.<com.android.internal.app.ResolverActivity$ActionTitle: int labelRes>;

        return $i0;
    }

    private boolean hasManagedProfile()
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.pm.UserInfo r1;
        boolean z0, $z1;
        java.lang.Object $r2, $r4;
        int $i0;
        java.util.List $r3;
        java.lang.Throwable $r5;
        android.os.UserManager r6;
        java.util.Iterator r7;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.Object getSystemService(java.lang.String)>("user");

        r6 = (android.os.UserManager) $r2;

        if r6 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int getUserId()>();

        $r3 = virtualinvoke r6.<android.os.UserManager: java.util.List getProfiles(int)>($i0);

        r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.content.pm.UserInfo) $r4;

     label3:
        if r1 == null goto label6;

     label4:
        z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

     label5:
        if z0 == 0 goto label6;

        return 1;

     label6:
        goto label2;

     label7:
        return 0;

     label8:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label8;
        catch java.lang.SecurityException from label2 to label3 with label8;
        catch java.lang.SecurityException from label4 to label5 with label8;
    }

    private boolean hasWorkProfile()
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.UserHandle $r1;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean inactiveListAdapterHasItems()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, z1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1;
        com.android.internal.app.ResolverListAdapter $r2;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $i0 = virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: int getCount()>();

        if $i0 <= 0 goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    private boolean isAutolaunching()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mRegistered>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isFinishing()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isIntentPicker()
    {
        com.android.internal.app.ResolverActivity r0;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lcom/android/internal/app/ResolverActivity;");

        return $z0;
    }

    private boolean isLaunchingTargetInOtherProfile()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1;
        android.os.UserHandle $r2;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle getCurrentUserHandle()>();

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i0 == $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private int isPermissionGranted(java.lang.String, int)
    {
        com.android.internal.app.ResolverActivity r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>(r1, i0, -1, 1);

        return $i1;
    }

    static final boolean isSpecificUriMatch(int)
    {
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        i1 = i0 & 268369920;

        if i1 < 3145728 goto label1;

        if i1 > 5242880 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isWorkProfileEnabled()
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.UserHandle r1;
        android.os.UserManager r2;
        java.lang.Object $r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        r2 = (android.os.UserManager) $r3;

        $z0 = virtualinvoke r2.<android.os.UserManager: boolean isQuietModeEnabled(android.os.UserHandle)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    static void lambda$setupProfileTabs$1(android.widget.TabHost)
    {
        android.widget.TabWidget $r0;
        android.widget.TabHost r1;
        android.view.View r2;

        r1 := @parameter0: android.widget.TabHost;

        $r0 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabWidget getTabWidget()>();

        r2 = virtualinvoke $r0.<android.widget.TabWidget: android.view.View getChildAt(int)>(1);

        virtualinvoke r2.<android.view.View: void setFocusable(boolean)>(1);

        virtualinvoke r2.<android.view.View: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r2.<android.view.View: boolean requestFocus()>();

        return;
    }

    private android.content.Intent makeMyIntent()
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Intent $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = new android.content.Intent;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Intent)>($r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        $i0 = virtualinvoke $r2.<android.content.Intent: int getFlags()>();

        $i1 = $i0 & -8388609;

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setFlags(int)>($i1);

        return $r2;
    }

    private boolean maybeAutolaunchActivity()
    {
        com.android.internal.app.ResolverActivity r0;
        int i0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r2, $r4;
        com.android.internal.app.ResolverListAdapter $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        i0 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int getItemCount()>();

        if i0 != 1 goto label1;

        $z4 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean maybeAutolaunchIfSingleTarget()>();

        if $z4 == 0 goto label1;

        return 1;

     label1:
        if i0 != 2 goto label3;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z0 = virtualinvoke $r3.<com.android.internal.app.ResolverListAdapter: boolean isTabLoaded()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $z1 = virtualinvoke $r5.<com.android.internal.app.ResolverListAdapter: boolean isTabLoaded()>();

        if $z1 == 0 goto label3;

        $z2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean maybeAutolaunchIfNoAppsOnInactiveTab()>();

        if $z2 != 0 goto label2;

        $z3 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean maybeAutolaunchIfCrossProfileSupported()>();

        if $z3 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private boolean maybeAutolaunchIfCrossProfileSupported()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverListAdapter r1, r16;
        com.android.internal.app.chooser.TargetInfo r2, r17;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r3, $r4;
        int $i0, $i1;
        android.content.ComponentName $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r8, $r14;
        android.app.admin.DevicePolicyEventLogger $r9, $r12, $r15;
        android.os.UserHandle $r10, $r11;
        java.lang.String[] $r13;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r1 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $i0 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r16 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $i1 = virtualinvoke r16.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i1 == 1 goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo targetInfoForPosition(int,boolean)>(0, 0);

        r17 = virtualinvoke r16.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo targetInfoForPosition(int,boolean)>(0, 0);

        $r5 = interfaceinvoke r2.<com.android.internal.app.chooser.TargetInfo: android.content.ComponentName getResolvedComponentName()>();

        $r6 = interfaceinvoke r17.<com.android.internal.app.chooser.TargetInfo: android.content.ComponentName getResolvedComponentName()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldAutoLaunchSingleChoice(com.android.internal.app.chooser.TargetInfo)>(r2);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r7 = interfaceinvoke r2.<com.android.internal.app.chooser.TargetInfo: android.content.ComponentName getResolvedComponentName()>();

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean canAppInteractCrossProfiles(java.lang.String)>($r8);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r9 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(161);

        $r10 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        $z3 = virtualinvoke $r10.<android.os.UserHandle: boolean equals(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r9.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setBoolean(boolean)>($z3);

        $r13 = newarray (java.lang.String)[1];

        $r14 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getMetricsCategory()>();

        $r13[0] = $r14;

        $r15 = virtualinvoke $r12.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r13);

        virtualinvoke $r15.<android.app.admin.DevicePolicyEventLogger: void write()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void safelyStartActivity(com.android.internal.app.chooser.TargetInfo)>(r2);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

        return 1;
    }

    private boolean maybeAutolaunchIfNoAppsOnInactiveTab()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r3, $r5;
        com.android.internal.app.ResolverListAdapter $r2, $r4, $r6;
        int $i0, $i1;
        com.android.internal.app.chooser.TargetInfo $r7;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $i0 = virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        $i1 = virtualinvoke $r4.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i1 == 0 goto label2;

        return 0;

     label2:
        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r6 = virtualinvoke $r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r7 = virtualinvoke $r6.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo targetInfoForPosition(int,boolean)>(0, 0);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void safelyStartActivity(com.android.internal.app.chooser.TargetInfo)>($r7);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

        return 1;
    }

    private boolean maybeAutolaunchIfSingleTarget()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.TargetInfo r1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r4, $r7;
        com.android.internal.app.ResolverListAdapter $r3, $r5, $r8;
        int $i0;
        com.android.internal.app.chooser.DisplayResolveInfo $r6;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $i0 = virtualinvoke $r3.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r6 = virtualinvoke $r5.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        if $r6 == null goto label2;

        return 0;

     label2:
        $r7 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r1 = virtualinvoke $r8.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo targetInfoForPosition(int,boolean)>(0, 0);

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldAutoLaunchSingleChoice(com.android.internal.app.chooser.TargetInfo)>(r1);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void safelyStartActivity(com.android.internal.app.chooser.TargetInfo)>(r1);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

        return 1;

     label3:
        return 0;
    }

    private void maybeCreateHeader(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverListAdapter r1;
        android.widget.TextView r2, r10;
        android.os.UserHandle $r3, $r5, $r8, $r9;
        boolean $z0, $z1, $z2;
        android.content.Intent $r4;
        int $i0, $i1, $i2;
        android.view.View $r6, $r7, $r12;
        java.lang.CharSequence r11;
        android.widget.ImageView r13;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r3 = r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mHeaderCreatorUser>;

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r9 = r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mHeaderCreatorUser>;

        $z2 = virtualinvoke $r8.<android.os.UserHandle: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getCount()>();

        if $i1 != 0 goto label2;

        $i2 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getPlaceholderCount()>();

        if $i2 != 0 goto label2;

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908310);

        r10 = (android.widget.TextView) $r7;

        if r10 == null goto label2;

        virtualinvoke r10.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        r11 = r0.<com.android.internal.app.ResolverActivity: java.lang.CharSequence mTitle>;

        if r11 == null goto label3;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getTargetIntent()>();

        $i0 = r0.<com.android.internal.app.ResolverActivity: int mDefaultTitleResId>;

        r11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.CharSequence getTitleForAction(android.content.Intent,int)>($r4, $i0);

     label4:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z1 != 0 goto label6;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908310);

        r2 = (android.widget.TextView) $r6;

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r11);

     label5:
        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void setTitle(java.lang.CharSequence)>(r11);

     label6:
        $r12 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908294);

        r13 = (android.widget.ImageView) $r12;

        if r13 == null goto label7;

        virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: void loadFilteredItemIconTaskAsync(android.widget.ImageView)>(r13);

     label7:
        $r5 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mHeaderCreatorUser> = $r5;

        return;
    }

    private void maybeHideDivider()
    {
        com.android.internal.app.ResolverActivity r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isIntentPicker()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908933);

        if r1 != null goto label2;

        return;

     label2:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    private void maybeLogCrossProfileTargetLaunch(com.android.internal.app.chooser.TargetInfo, android.os.UserHandle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.app.admin.DevicePolicyEventLogger r1, $r3, $r6;
        boolean $z0, $z1, $z2, $z3;
        android.os.UserHandle $r2, $r4, r8;
        java.lang.String[] $r5;
        com.android.internal.app.chooser.TargetInfo r7;
        java.lang.String r9, r10;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r7 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        r8 := @parameter1: android.os.UserHandle;

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean hasWorkProfile()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getUser()>();

        $z1 = virtualinvoke r8.<android.os.UserHandle: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        goto label4;

     label1:
        $r3 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(155);

        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        $z2 = virtualinvoke r8.<android.os.UserHandle: boolean equals(java.lang.Object)>($r4);

        r1 = virtualinvoke $r3.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setBoolean(boolean)>($z2);

        r9 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getMetricsCategory()>();

        $z3 = r7 instanceof com.android.internal.app.chooser.ChooserTargetInfo;

        if $z3 == 0 goto label2;

        r10 = "direct_share";

        goto label3;

     label2:
        r10 = "other_target";

     label3:
        $r5 = newarray (java.lang.String)[2];

        $r5[0] = r9;

        $r5[1] = r10;

        $r6 = virtualinvoke r1.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r5);

        virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: void write()>();

        return;

     label4:
        return;
    }

    private void prepareIntentForCrossProfileLaunch(android.content.Intent)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Intent r1;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.Intent;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r1.<android.content.Intent: void fixUris(int)>($i0);

        return;
    }

    private void registerWorkProfileStateReceiver()
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.IntentFilter $r2;
        android.os.UserHandle $r3;
        android.content.BroadcastReceiver $r4;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_AVAILABLE");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MANAGED_PROFILE_UNAVAILABLE");

        $r4 = r0.<com.android.internal.app.ResolverActivity: android.content.BroadcastReceiver mWorkProfileStateReceiver>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, $r3, $r2, null, null);

        return;
    }

    private void resetAlwaysOrOnceButtonBar()
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, $i1, $i2;
        android.widget.ListView r1;
        android.widget.Button $r2, $r7, $r8, $r9;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r3, $r5;
        com.android.internal.app.ResolverListAdapter $r4;
        boolean $z0;
        android.view.ViewGroup $r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setAlwaysButtonEnabled(boolean,int,boolean)>(0, -1, 0);

        $r2 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton>;

        virtualinvoke $r2.<android.widget.Button: void setEnabled(boolean)>(0);

        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        i0 = virtualinvoke $r4.<com.android.internal.app.ResolverListAdapter: int getFilteredPosition()>();

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z0 == 0 goto label1;

        if i0 == -1 goto label1;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setAlwaysButtonEnabled(boolean,int,boolean)>(1, i0, 0);

        $r8 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton>;

        virtualinvoke $r8.<android.widget.Button: void setEnabled(boolean)>(1);

        $r9 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton>;

        virtualinvoke $r9.<android.widget.Button: boolean requestFocus()>();

        return;

     label1:
        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r6 = virtualinvoke $r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.view.ViewGroup getActiveAdapterView()>();

        r1 = (android.widget.ListView) $r6;

        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.widget.ListView: int getCheckedItemPosition()>();

        if $i1 == -1 goto label2;

        $i2 = virtualinvoke r1.<android.widget.ListView: int getCheckedItemPosition()>();

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setAlwaysButtonEnabled(boolean,int,boolean)>(1, $i2, 1);

        $r7 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton>;

        virtualinvoke $r7.<android.widget.Button: void setEnabled(boolean)>(1);

     label2:
        return;
    }

    private void resetCheckedItem()
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.ListView r1;
        boolean $z0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2;
        android.view.ViewGroup $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isIntentPicker()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.internal.app.ResolverActivity: int mLastSelected> = -1;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.view.ViewGroup getInactiveAdapterView()>();

        r1 = (android.widget.ListView) $r3;

        $i0 = virtualinvoke r1.<android.widget.ListView: int getCheckedItemCount()>();

        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke r1.<android.widget.ListView: int getCheckedItemPosition()>();

        virtualinvoke r1.<android.widget.ListView: void setItemChecked(int,boolean)>($i1, 0);

     label2:
        return;
    }

    private void resetTabsHeaderStyle(android.widget.TabWidget)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.TabWidget r1;
        java.lang.String r2, r3, $r9, $r11;
        android.view.View r4, $r6;
        android.widget.TextView r5;
        int $i0, $i1, i2;
        android.content.res.Resources $r7;
        float $f0;
        java.lang.CharSequence $r8, $r10;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.widget.TabWidget;

        r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041145);

        r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041141);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<android.widget.TabWidget: int getChildCount()>();

        if i2 >= $i0 goto label4;

        r4 = virtualinvoke r1.<android.widget.TabWidget: android.view.View getChildAt(int)>(i2);

        $r6 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(16908310);

        r5 = (android.widget.TextView) $r6;

        virtualinvoke r5.<android.widget.TextView: void setTextAppearance(int)>(16974264);

        $i1 = staticinvoke <com.android.internal.app.ResolverActivity: int getAttrColor(android.content.Context,int)>(r0, 16843282);

        virtualinvoke r5.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r7.<android.content.res.Resources: float getDimension(int)>(17105450);

        virtualinvoke r5.<android.widget.TextView: void setTextSize(int,float)>(0, $f0);

        $r8 = virtualinvoke r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r9 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041140);

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        virtualinvoke r4.<android.view.View: void setContentDescription(java.lang.CharSequence)>(r3);

        goto label3;

     label2:
        $r10 = virtualinvoke r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041144);

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        virtualinvoke r4.<android.view.View: void setContentDescription(java.lang.CharSequence)>(r2);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void safelyStartActivityInternal(com.android.internal.app.chooser.TargetInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2;
        java.lang.String $r3, $r14, $r16, r23;
        android.widget.Toast $r4;
        java.lang.RuntimeException $r5;
        android.app.IActivityTaskManager $r6;
        android.os.IBinder $r7;
        java.lang.StringBuilder $r8;
        android.os.RemoteException $r17;
        com.android.internal.app.chooser.TargetInfo r18;
        com.android.internal.content.PackageMonitor r19, r20;
        android.os.UserHandle r21;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r18 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        $z0 = interfaceinvoke r18.<com.android.internal.app.chooser.TargetInfo: boolean isSuspended()>();

        if $z0 != 0 goto label03;

        r19 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mPersonalPackageMonitor>;

        if r19 == null goto label01;

        virtualinvoke r19.<com.android.internal.content.PackageMonitor: void unregister()>();

     label01:
        r20 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor>;

        if r20 == null goto label02;

        virtualinvoke r20.<com.android.internal.content.PackageMonitor: void unregister()>();

     label02:
        r0.<com.android.internal.app.ResolverActivity: boolean mRegistered> = 0;

     label03:
        i0 = r0.<com.android.internal.app.ResolverActivity: int mProfileSwitchMessageId>;

        if i0 == -1 goto label04;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(i0);

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r3, 1);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

     label04:
        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r21 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle getCurrentUserHandle()>();

        $z1 = r0.<com.android.internal.app.ResolverActivity: boolean mSafeForwardingMode>;

        if $z1 != 0 goto label06;

        $z3 = interfaceinvoke r18.<com.android.internal.app.chooser.TargetInfo: boolean startAsUser(android.app.Activity,android.os.Bundle,android.os.UserHandle)>(r0, null, r21);

        if $z3 == 0 goto label05;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onActivityStarted(com.android.internal.app.chooser.TargetInfo)>(r18);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void maybeLogCrossProfileTargetLaunch(com.android.internal.app.chooser.TargetInfo,android.os.UserHandle)>(r18, r21);

     label05:
        return;

     label06:
        $i1 = virtualinvoke r21.<android.os.UserHandle: int getIdentifier()>();

        $z2 = interfaceinvoke r18.<com.android.internal.app.chooser.TargetInfo: boolean startAsCaller(com.android.internal.app.ResolverActivity,android.os.Bundle,int)>(r0, null, $i1);

        if $z2 == 0 goto label07;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onActivityStarted(com.android.internal.app.chooser.TargetInfo)>(r18);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void maybeLogCrossProfileTargetLaunch(com.android.internal.app.chooser.TargetInfo,android.os.UserHandle)>(r18, r21);

     label07:
        goto label13;

     label08:
        $r5 := @caughtexception;

     label09:
        $r6 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.IBinder getActivityToken()>();

        r23 = interfaceinvoke $r6.<android.app.IActivityTaskManager: java.lang.String getLaunchedFromPackage(android.os.IBinder)>($r7);

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;

        r23 = "??";

     label12:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch as uid ");

        $i2 = r0.<com.android.internal.app.ResolverActivity: int mLaunchedFromUid>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", while running in ");

        $r14 = staticinvoke <android.app.ActivityThread: java.lang.String currentProcessName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ResolverActivity", $r16, $r5);

     label13:
        return;

        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    private void setAlwaysButtonEnabled(boolean, int, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, $z1, $z2, z3, z4, z5, z6;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r7;
        android.os.UserHandle $r2, $r3;
        java.lang.String $r4, $r11;
        android.content.pm.PackageManager $r5;
        int $i0, $i1, i4;
        android.content.Intent $r6;
        com.android.internal.app.ResolverListAdapter $r8;
        android.widget.Button $r9, $r12, $r15;
        android.content.res.Resources $r10;
        android.content.pm.ResolveInfo r13;
        android.content.pm.ActivityInfo r14;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z3 := @parameter0: boolean;

        i4 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle getCurrentUserHandle()>();

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getUser()>();

        $z1 = virtualinvoke $r2.<android.os.UserHandle: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        $r12 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mAlwaysButton>;

        virtualinvoke $r12.<android.widget.Button: void setEnabled(boolean)>(0);

        return;

     label1:
        z4 = 0;

        r13 = null;

        if z3 == 0 goto label4;

        $r7 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r13 = virtualinvoke $r8.<com.android.internal.app.ResolverListAdapter: android.content.pm.ResolveInfo resolveInfoForPosition(int,boolean)>(i4, z0);

        if r13 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResolverActivity", "Invalid position supplied to setAlwaysButtonEnabled");

        return;

     label2:
        $i1 = r13.<android.content.pm.ResolveInfo: int targetUserId>;

        if $i1 == -2 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResolverActivity", "Attempted to set selection to resolve info for another user");

        return;

     label3:
        z4 = 1;

        $r9 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mAlwaysButton>;

        $r10 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(17039598);

        virtualinvoke $r9.<android.widget.Button: void setText(java.lang.CharSequence)>($r11);

     label4:
        z5 = z4;

        if r13 == null goto label7;

        r14 = r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r5 = r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager mPm>;

        $r4 = r14.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $i0 = virtualinvoke $r5.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.RECORD_AUDIO", $r4);

        if $i0 != 0 goto label5;

        z6 = 1;

        goto label6;

     label5:
        z6 = 0;

     label6:
        z5 = z4;

        if z6 != 0 goto label7;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        $z2 = virtualinvoke $r6.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("is_audio_capture_device", 0);

        z5 = $z2 ^ 1;

     label7:
        $r15 = r0.<com.android.internal.app.ResolverActivity: android.widget.Button mAlwaysButton>;

        virtualinvoke $r15.<android.widget.Button: void setEnabled(boolean)>(z5);

        return;
    }

    private void setButtonBarIgnoreOffset(boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0;
        android.view.View r1;
        com.android.internal.widget.ResolverDrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908812);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.ResolverDrawerLayout$LayoutParams) $r3;

        r2.<com.android.internal.widget.ResolverDrawerLayout$LayoutParams: boolean ignoreOffset> = z0;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

     label1:
        return;
    }

    private void setProfileSwitchMessageId(int)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, $i1;
        android.os.UserManager r1;
        android.content.pm.UserInfo r2;
        boolean z0, z1;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.app.ResolverActivity;

        i0 := @parameter0: int;

        if i0 == -2 goto label4;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if i0 == $i1 goto label4;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.Object getSystemService(java.lang.String)>("user");

        r1 = (android.os.UserManager) $r3;

        r2 = virtualinvoke r1.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r2 == null goto label1;

        z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        goto label2;

     label1:
        z1 = 0;

     label2:
        z0 = virtualinvoke r1.<android.os.UserManager: boolean isManagedProfile()>();

        if z1 == 0 goto label3;

        if z0 != 0 goto label3;

        r0.<com.android.internal.app.ResolverActivity: int mProfileSwitchMessageId> = 17040234;

        goto label4;

     label3:
        if z1 != 0 goto label4;

        if z0 == 0 goto label4;

        r0.<com.android.internal.app.ResolverActivity: int mProfileSwitchMessageId> = 17040235;

     label4:
        return;
    }

    private void setupAdapterListView(android.widget.ListView, com.android.internal.app.ResolverActivity$ItemClickListener)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.ListView r1;
        com.android.internal.app.ResolverActivity$ItemClickListener r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.widget.ListView;

        r2 := @parameter1: com.android.internal.app.ResolverActivity$ItemClickListener;

        virtualinvoke r1.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>(r2);

        virtualinvoke r1.<android.widget.ListView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>(r2);

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.widget.ListView: void setChoiceMode(int)>(1);

     label1:
        return;
    }

    private void setupProfileTabs()
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.TabHost r1;
        com.android.internal.widget.ViewPager r2;
        android.widget.TabWidget r3;
        android.view.View $r4, $r5, $r20;
        android.widget.TabHost$TabSpec $r6, $r7, $r9, $r10, $r11, $r13;
        java.lang.String $r8, $r12;
        com.android.internal.app._$$Lambda$ResolverActivity$Qd_qc3_dQh5Hf5xmWHC3HV3_87E $r14;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r15, $r17, $r19;
        int $i0;
        com.android.internal.app.ResolverActivity$3 $r16;
        com.android.internal.app._$$Lambda$ResolverActivity$eYX_xfnxStZuzWl7sU7dSWSkNY4 $r18;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void maybeHideDivider()>();

        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909320);

        r1 = (android.widget.TabHost) $r4;

        virtualinvoke r1.<android.widget.TabHost: void setup()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909319);

        r2 = (com.android.internal.widget.ViewPager) $r5;

        virtualinvoke r2.<com.android.internal.widget.ViewPager: void setSaveEnabled(boolean)>(0);

        $r6 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>("personal");

        $r7 = virtualinvoke $r6.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)>(16909319);

        $r8 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041140);

        $r9 = virtualinvoke $r7.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>($r8);

        virtualinvoke r1.<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>($r9);

        $r10 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>("work");

        $r11 = virtualinvoke $r10.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)>(16909319);

        $r12 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(17041144);

        $r13 = virtualinvoke $r11.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>($r12);

        virtualinvoke r1.<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>($r13);

        r3 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabWidget getTabWidget()>();

        virtualinvoke r3.<android.widget.TabWidget: void setVisibility(int)>(0);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void resetTabsHeaderStyle(android.widget.TabWidget)>(r3);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void updateActiveTabStyle(android.widget.TabHost)>(r1);

        $r14 = new com.android.internal.app._$$Lambda$ResolverActivity$Qd_qc3_dQh5Hf5xmWHC3HV3_87E;

        specialinvoke $r14.<com.android.internal.app._$$Lambda$ResolverActivity$Qd_qc3_dQh5Hf5xmWHC3HV3_87E: void <init>(com.android.internal.app.ResolverActivity,android.widget.TabWidget,android.widget.TabHost,com.android.internal.widget.ViewPager)>(r0, r3, r1, r2);

        virtualinvoke r1.<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>($r14);

        virtualinvoke r2.<com.android.internal.widget.ViewPager: void setVisibility(int)>(0);

        $r15 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $i0 = virtualinvoke $r15.<com.android.internal.app.AbstractMultiProfilePagerAdapter: int getCurrentPage()>();

        virtualinvoke r1.<android.widget.TabHost: void setCurrentTab(int)>($i0);

        $r17 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r16 = new com.android.internal.app.ResolverActivity$3;

        specialinvoke $r16.<com.android.internal.app.ResolverActivity$3: void <init>(com.android.internal.app.ResolverActivity,android.widget.TabHost)>(r0, r1);

        virtualinvoke $r17.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void setOnProfileSelectedListener(com.android.internal.app.AbstractMultiProfilePagerAdapter$OnProfileSelectedListener)>($r16);

        $r19 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r18 = new com.android.internal.app._$$Lambda$ResolverActivity$eYX_xfnxStZuzWl7sU7dSWSkNY4;

        specialinvoke $r18.<com.android.internal.app._$$Lambda$ResolverActivity$eYX_xfnxStZuzWl7sU7dSWSkNY4: void <init>(android.widget.TabHost)>(r1);

        virtualinvoke $r19.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void setOnSwitchOnWorkSelectedListener(com.android.internal.app.AbstractMultiProfilePagerAdapter$OnSwitchOnWorkSelectedListener)>($r18);

        $r20 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909356);

        virtualinvoke $r20.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    private void setupViewVisibilities()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverListAdapter r1;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r1 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z0 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean shouldShowEmptyStateScreen(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void addUseDifferentAppLabelIfNecessary(com.android.internal.app.ResolverListAdapter)>(r1);

     label1:
        return;
    }

    private boolean supportsManagedProfiles(android.content.pm.ResolveInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ActivityInfo $r2;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        android.content.pm.ResolveInfo r6;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r6 := @parameter0: android.content.pm.ResolveInfo;

        z0 = 0;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        $r2 = r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r3 = $r2.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r4 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 0);

        i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label2:
        if i0 < 21 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    private void updateActiveTabStyle(android.widget.TabHost)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.TabHost r1;
        android.widget.TabWidget $r2;
        int $i0, $i1;
        android.view.View $r3, $r4;
        android.widget.TextView $r5;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.widget.TabHost;

        $r2 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabWidget getTabWidget()>();

        $i0 = virtualinvoke r1.<android.widget.TabHost: int getCurrentTab()>();

        $r3 = virtualinvoke $r2.<android.widget.TabWidget: android.view.View getChildAt(int)>($i0);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.View findViewById(int)>(16908310);

        $r5 = (android.widget.TextView) $r4;

        $i1 = staticinvoke <com.android.internal.app.ResolverActivity: int getAttrColor(android.content.Context,int)>(r0, 16843829);

        virtualinvoke $r5.<android.widget.TextView: void setTextColor(int)>($i1);

        return;
    }

    private void updateIntentPickerPaddings()
    {
        com.android.internal.app.ResolverActivity r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.res.Resources $r1, $r2, $r3;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r4;
        android.view.View r5, r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909543);

        $i0 = virtualinvoke r5.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke r5.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke r5.<android.view.View: int getPaddingRight()>();

        $r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105451);

        virtualinvoke r5.<android.view.View: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908811);

        $i4 = virtualinvoke r6.<android.view.View: int getPaddingLeft()>();

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $i5 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105435);

        $i6 = virtualinvoke r6.<android.view.View: int getPaddingRight()>();

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $i7 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105435);

        virtualinvoke r6.<android.view.View: void setPadding(int,int,int,int)>($i4, $i5, $i6, $i7);

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void updateAfterConfigChange()>();

        return;
    }

    public void addUseDifferentAppLabelIfNecessary(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.TextView r1;
        boolean $z0, $z1;
        android.view.View $r2, $r4;
        android.view.LayoutInflater $r3;
        com.android.internal.app.ResolverListAdapter r5;
        android.widget.FrameLayout r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r5 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $z0 = virtualinvoke r5.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909480);

        r6 = (android.widget.FrameLayout) $r2;

        virtualinvoke r6.<android.widget.FrameLayout: void setVisibility(int)>(0);

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r0);

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(17367272, null, 0);

        r1 = (android.widget.TextView) $r4;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.widget.TextView: void setGravity(int)>(17);

     label1:
        virtualinvoke r6.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

     label2:
        return;
    }

    protected int appliedThemeResId()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return 16974836;
    }

    protected void applyFooterView(int)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, $i1;
        android.widget.Space $r1, $r5, $r8, $r12, $r13;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r9;
        com.android.internal.app.ResolverMultiProfilePagerAdapter $r3, $r10;
        android.widget.ListView $r4, $r11;
        android.widget.AbsListView$LayoutParams $r6;
        android.graphics.Insets $r7;
        android.content.Context $r14;

        r0 := @this: com.android.internal.app.ResolverActivity;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer>;

        if $r1 != null goto label1;

        $r13 = new android.widget.Space;

        $r14 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Context getApplicationContext()>();

        specialinvoke $r13.<android.widget.Space: void <init>(android.content.Context)>($r14);

        r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer> = $r13;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = (com.android.internal.app.ResolverMultiProfilePagerAdapter) $r2;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ResolverMultiProfilePagerAdapter: android.widget.ListView getActiveAdapterView()>();

        $r5 = r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer>;

        virtualinvoke $r4.<android.widget.ListView: boolean removeFooterView(android.view.View)>($r5);

     label2:
        $r8 = r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer>;

        $r6 = new android.widget.AbsListView$LayoutParams;

        $r7 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i1 = $r7.<android.graphics.Insets: int bottom>;

        specialinvoke $r6.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, $i1);

        virtualinvoke $r8.<android.widget.Space: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r9 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r10 = (com.android.internal.app.ResolverMultiProfilePagerAdapter) $r9;

        $r11 = virtualinvoke $r10.<com.android.internal.app.ResolverMultiProfilePagerAdapter: android.widget.ListView getActiveAdapterView()>();

        $r12 = r0.<com.android.internal.app.ResolverActivity: android.widget.Space mFooterSpacer>;

        virtualinvoke $r11.<android.widget.ListView: void addFooterView(android.view.View)>($r12);

        return;
    }

    protected com.android.internal.app.ResolverListController createListController(android.os.UserHandle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.UserHandle r1;
        com.android.internal.app.ResolverListController $r2;
        android.content.pm.PackageManager $r3;
        android.content.Intent $r4;
        java.lang.String $r5;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = new com.android.internal.app.ResolverListController;

        $r3 = r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager mPm>;

        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getTargetIntent()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getReferrerPackageName()>();

        $i0 = r0.<com.android.internal.app.ResolverActivity: int mLaunchedFromUid>;

        specialinvoke $r2.<com.android.internal.app.ResolverListController: void <init>(android.content.Context,android.content.pm.PackageManager,android.content.Intent,java.lang.String,int,android.os.UserHandle)>(r0, $r3, $r4, $r5, $i0, r1);

        return $r2;
    }

    protected com.android.internal.app.AbstractMultiProfilePagerAdapter createMultiProfilePagerAdapter(android.content.Intent[], java.util.List, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        java.util.List r1;
        boolean z0, $z1;
        android.content.Intent[] r2;
        com.android.internal.app.ResolverMultiProfilePagerAdapter r3;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r2 := @parameter0: android.content.Intent[];

        r1 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z1 == 0 goto label1;

        r3 = specialinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverMultiProfilePagerAdapter createResolverMultiProfilePagerAdapterForTwoProfiles(android.content.Intent[],java.util.List,boolean)>(r2, r1, z0);

        goto label2;

     label1:
        r3 = specialinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverMultiProfilePagerAdapter createResolverMultiProfilePagerAdapterForOneProfile(android.content.Intent[],java.util.List,boolean)>(r2, r1, z0);

     label2:
        return r3;
    }

    protected com.android.internal.content.PackageMonitor createPackageMonitor(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverListAdapter r1;
        com.android.internal.app.ResolverActivity$1 $r2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r2 = new com.android.internal.app.ResolverActivity$1;

        specialinvoke $r2.<com.android.internal.app.ResolverActivity$1: void <init>(com.android.internal.app.ResolverActivity,com.android.internal.app.ResolverListAdapter)>(r0, r1);

        return $r2;
    }

    protected com.android.internal.app.ResolverListAdapter createResolverListAdapter(android.content.Context, java.util.List, android.content.Intent[], java.util.List, boolean, android.os.UserHandle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Context r1;
        java.util.List r2, r4;
        android.content.Intent[] r3;
        boolean z0, z1;
        android.os.UserHandle r5;
        android.content.Intent r6;
        com.android.internal.app.ResolverListAdapter $r7;
        com.android.internal.app.ResolverListController $r8;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.content.Intent[];

        r4 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.os.UserHandle;

        r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        z1 = virtualinvoke r6.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("is_audio_capture_device", 0);

        $r7 = new com.android.internal.app.ResolverListAdapter;

        $r8 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverListController createListController(android.os.UserHandle)>(r5);

        specialinvoke $r7.<com.android.internal.app.ResolverListAdapter: void <init>(android.content.Context,java.util.List,android.content.Intent[],java.util.List,boolean,com.android.internal.app.ResolverListController,com.android.internal.app.ResolverListAdapter$ResolverListCommunicator,boolean)>(r1, r2, r3, r4, z0, $r8, r0, z1);

        return $r7;
    }

    void dismiss()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isFinishing()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

     label1:
        return;
    }

    protected android.os.UserHandle fetchWorkProfileUserProfile()
    {
        com.android.internal.app.ResolverActivity r0;
        java.util.Iterator r1;
        android.content.pm.UserInfo r2;
        java.lang.Object $r3, $r7;
        android.os.UserManager $r4;
        int $i0;
        java.util.List $r5;
        boolean $z0, $z1;
        android.os.UserHandle $r6, $r8;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mWorkProfileUserHandle> = null;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/UserManager;");

        $r4 = (android.os.UserManager) $r3;

        $i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r5 = virtualinvoke $r4.<android.os.UserManager: java.util.List getProfiles(int)>($i0);

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r7;

        $z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r2.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mWorkProfileUserHandle> = $r8;

     label2:
        goto label1;

     label3:
        $r6 = r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mWorkProfileUserHandle>;

        return $r6;
    }

    protected int getCurrentProfile()
    {
        com.android.internal.app.ResolverActivity r0;
        int $i0;
        byte b1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i0 != 0 goto label1;

        b1 = 0;

        goto label2;

     label1:
        b1 = 1;

     label2:
        return b1;
    }

    public int getLayoutResource()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return 17367274;
    }

    protected java.lang.String getMetricsCategory()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return "intent_resolver";
    }

    protected android.os.UserHandle getPersonalProfileUserHandle()
    {
        com.android.internal.app.ResolverActivity r0;
        int $i0;
        android.os.UserHandle $r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r1 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        return $r1;
    }

    protected java.lang.String getReferrerPackageName()
    {
        com.android.internal.app.ResolverActivity r0;
        android.net.Uri r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.net.Uri getReferrer()>();

        if r1 == null goto label1;

        $r2 = "android-app";

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getHost()>();

        return $r4;

     label1:
        return null;
    }

    public android.content.Intent getReplacementIntent(android.content.pm.ActivityInfo, android.content.Intent)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.pm.ActivityInfo r1;
        android.content.Intent r2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        r2 := @parameter1: android.content.Intent;

        return r2;
    }

    int getSelectedProfileExtra()
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, i1;
        android.content.Intent $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;

        r0 := @this: com.android.internal.app.ResolverActivity;

        i1 = -1;

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("com.android.internal.app.ResolverActivity.EXTRA_SELECTED_PROFILE");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        i0 = virtualinvoke $r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("com.android.internal.app.ResolverActivity.EXTRA_SELECTED_PROFILE", -1);

        i1 = i0;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        i1 = i0;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("com.android.internal.app.ResolverActivity.EXTRA_SELECTED_PROFILE has invalid value ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Must be either ResolverActivity.PROFILE_PERSONAL or ResolverActivity.PROFILE_WORK.");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        return i1;
    }

    public android.content.Intent getTargetIntent()
    {
        com.android.internal.app.ResolverActivity r0;
        java.util.ArrayList $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.content.Intent r4;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r4 = null;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r4 = (android.content.Intent) $r3;

     label2:
        return r4;
    }

    protected java.lang.CharSequence getTitleForAction(android.content.Intent, int)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, z1;
        java.lang.String $r1, $r10, r13;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r6;
        com.android.internal.app.ResolverListAdapter $r3, $r7;
        com.android.internal.app.ResolverActivity$ActionTitle $r4, r12;
        java.lang.Object[] $r5;
        com.android.internal.app.chooser.DisplayResolveInfo $r8;
        java.lang.CharSequence $r9;
        android.content.Intent r11;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r11 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mResolvingHome>;

        if $z0 == 0 goto label1;

        r12 = <com.android.internal.app.ResolverActivity$ActionTitle: com.android.internal.app.ResolverActivity$ActionTitle HOME>;

        goto label2;

     label1:
        $r1 = virtualinvoke r11.<android.content.Intent: java.lang.String getAction()>();

        r12 = staticinvoke <com.android.internal.app.ResolverActivity$ActionTitle: com.android.internal.app.ResolverActivity$ActionTitle forAction(java.lang.String)>($r1);

     label2:
        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $i1 = virtualinvoke $r3.<com.android.internal.app.ResolverListAdapter: int getFilteredPosition()>();

        if $i1 < 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $r4 = <com.android.internal.app.ResolverActivity$ActionTitle: com.android.internal.app.ResolverActivity$ActionTitle DEFAULT>;

        if r12 != $r4 goto label5;

        if i0 == 0 goto label5;

        $r10 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>(i0);

        return $r10;

     label5:
        if z1 == 0 goto label6;

        $i3 = r12.<com.android.internal.app.ResolverActivity$ActionTitle: int namedTitleRes>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r8 = virtualinvoke $r7.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getFilteredItem()>();

        $r9 = virtualinvoke $r8.<com.android.internal.app.chooser.DisplayResolveInfo: java.lang.CharSequence getDisplayLabel()>();

        $r5[0] = $r9;

        r13 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int,java.lang.Object[])>($i3, $r5);

        goto label7;

     label6:
        $i2 = r12.<com.android.internal.app.ResolverActivity$ActionTitle: int titleRes>;

        r13 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getString(int)>($i2);

     label7:
        return r13;
    }

    protected android.os.UserHandle getWorkProfileUserHandle()
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.UserHandle $r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mWorkProfileUserHandle>;

        return $r1;
    }

    public void lambda$setupProfileTabs$0$ResolverActivity(android.widget.TabWidget, android.widget.TabHost, com.android.internal.widget.ViewPager, java.lang.String)
    {
        com.android.internal.app.ResolverActivity r0;
        android.widget.TabWidget r1;
        android.widget.TabHost r2;
        com.android.internal.widget.ViewPager r3;
        java.lang.String r4, $r5, $r9;
        boolean $z0;
        android.app.admin.DevicePolicyEventLogger $r6, $r7, $r10;
        int $i0;
        java.lang.String[] $r8;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.widget.TabWidget;

        r2 := @parameter1: android.widget.TabHost;

        r3 := @parameter2: com.android.internal.widget.ViewPager;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void resetTabsHeaderStyle(android.widget.TabWidget)>(r1);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void updateActiveTabStyle(android.widget.TabHost)>(r2);

        $r5 = "personal";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>(0);

        goto label2;

     label1:
        virtualinvoke r3.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>(1);

     label2:
        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setupViewVisibilities()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void maybeLogProfileChange()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onProfileTabSelected()>();

        $r6 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(156);

        $i0 = virtualinvoke r3.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        $r7 = virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setInt(int)>($i0);

        $r8 = newarray (java.lang.String)[1];

        $r9 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getMetricsCategory()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke $r7.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r8);

        virtualinvoke $r10.<android.app.admin.DevicePolicyEventLogger: void write()>();

        return;
    }

    protected void maybeLogProfileChange()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return;
    }

    public void onActivityStarted(com.android.internal.app.chooser.TargetInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.TargetInfo r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        return;
    }

    protected android.view.WindowInsets onApplyWindowInsets(android.view.View, android.view.WindowInsets)
    {
        com.android.internal.app.ResolverActivity r0;
        android.view.WindowInsets r1, $r5;
        android.graphics.Insets $r2, $r3, $r6, r8;
        int $i0, $i1, $i2, $i3;
        com.android.internal.widget.ResolverDrawerLayout $r4;
        boolean $z0;
        android.view.View r7;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r7 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.WindowInsets;

        r8 = virtualinvoke r1.<android.view.WindowInsets: android.graphics.Insets getSystemWindowInsets()>();

        r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets> = r8;

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.widget.ResolverDrawerLayout mResolverDrawerLayout>;

        $i2 = r8.<android.graphics.Insets: int left>;

        $r2 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i1 = $r2.<android.graphics.Insets: int top>;

        $r3 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i0 = $r3.<android.graphics.Insets: int right>;

        virtualinvoke $r4.<com.android.internal.widget.ResolverDrawerLayout: void setPadding(int,int,int,int)>($i2, $i1, $i0, 0);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void resetButtonBar()>();

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldAddFooterView()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i3 = $r6.<android.graphics.Insets: int bottom>;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void applyFooterView(int)>($i3);

     label1:
        $r5 = virtualinvoke r1.<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>();

        return $r5;
    }

    public void onButtonClick(android.view.View)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0, i1;
        com.android.internal.app.ResolverListAdapter r1;
        boolean z0, $z1, $z2, z3;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r4;
        android.view.ViewGroup $r3;
        android.view.View r5;
        android.widget.ListView r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r5 := @parameter0: android.view.View;

        i0 = virtualinvoke r5.<android.view.View: int getId()>();

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.view.ViewGroup getActiveAdapterView()>();

        r6 = (android.widget.ListView) $r3;

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r1 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z1 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        if $z1 == 0 goto label1;

        i1 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: int getFilteredPosition()>();

        goto label2;

     label1:
        i1 = virtualinvoke r6.<android.widget.ListView: int getCheckedItemPosition()>();

     label2:
        z0 = virtualinvoke r1.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        z3 = 1;

        if i0 != 16908810 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        $z2 = z0 ^ 1;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void startSelected(int,boolean,boolean)>(i1, z3, $z2);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1;
        com.android.internal.app.ResolverListAdapter $r2;
        boolean $z0, $z1, $z2;
        android.graphics.Insets $r3, $r4, r7;
        int $i0, $i1, $i2;
        com.android.internal.widget.ResolverDrawerLayout $r5;
        android.content.res.Configuration r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r6 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r6);

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: void handlePackagesChanged()>();

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isIntentPicker()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z2 != 0 goto label1;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void updateIntentPickerPaddings()>();

     label1:
        r7 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        if r7 == null goto label2;

        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.widget.ResolverDrawerLayout mResolverDrawerLayout>;

        $i2 = r7.<android.graphics.Insets: int left>;

        $r3 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i1 = $r3.<android.graphics.Insets: int top>;

        $r4 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        $i0 = $r4.<android.graphics.Insets: int right>;

        virtualinvoke $r5.<com.android.internal.widget.ResolverDrawerLayout: void setPadding(int,int,int,int)>($i2, $i1, $i0, 0);

     label2:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.util.Set r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent makeMyIntent()>();

        r3 = virtualinvoke r2.<android.content.Intent: java.util.Set getCategories()>();

        $r4 = "android.intent.action.MAIN";

        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        if r3 == null goto label1;

        $i0 = interfaceinvoke r3.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("android.intent.category.HOME");

        if $z1 == 0 goto label1;

        r0.<com.android.internal.app.ResolverActivity: boolean mResolvingHome> = 1;

     label1:
        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void setSafeForwardingMode(boolean)>(1);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,int,android.content.Intent[],java.util.List,boolean)>(r1, r2, null, 0, null, null, 1);

        return;
    }

    protected void onCreate(android.os.Bundle, android.content.Intent, java.lang.CharSequence, int, android.content.Intent[], java.util.List, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Intent r1, $r8;
        android.content.Intent[] r2;
        java.util.List r3;
        int i0, $i1, $i2, $i3, i4;
        android.app.IActivityTaskManager $r4;
        android.os.IBinder $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, $z9, z10;
        android.content.pm.PackageManager $r6, $r30;
        java.lang.String $r7, $r19, $r22, $r26, r47;
        java.util.ArrayList $r9;
        android.os.UserHandle $r10, $r14, $r34;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r11, $r16, $r31, $r39;
        com.android.internal.app.ResolverListAdapter $r12, $r17, $r32;
        android.os.Looper $r13, $r33;
        android.view.View $r15, r44;
        java.lang.StringBuilder $r18;
        java.lang.Object[] $r27;
        com.android.internal.app._$$Lambda$fPZctSH683BQhFNSBKdl6Wz99qg $r28;
        com.android.internal.app.ResolverActivity$2 $r29;
        android.os.RemoteException $r35;
        android.os.Bundle r36;
        java.lang.CharSequence r37;
        com.android.internal.content.PackageMonitor r40, r41;
        com.android.internal.widget.ResolverDrawerLayout r42;
        com.android.internal.app._$$Lambda$yRChr_JGmMwuDQFg_BsC_mE_wmc $r43;
        java.util.Set r45;
        short s5;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r36 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.content.Intent;

        r37 := @parameter2: java.lang.CharSequence;

        i4 := @parameter3: int;

        r2 := @parameter4: android.content.Intent[];

        r3 := @parameter5: java.util.List;

        z7 := @parameter6: boolean;

        $i1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int appliedThemeResId()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void setTheme(int)>($i1);

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r36);

        $i2 = virtualinvoke r1.<android.content.Intent: int getContentUserHint()>();

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setProfileSwitchMessageId(int)>($i2);

     label01:
        $r4 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.IBinder getActivityToken()>();

        $i3 = interfaceinvoke $r4.<android.app.IActivityTaskManager: int getLaunchedFromUid(android.os.IBinder)>($r5);

        r0.<com.android.internal.app.ResolverActivity: int mLaunchedFromUid> = $i3;

     label02:
        goto label04;

     label03:
        $r35 := @caughtexception;

        r0.<com.android.internal.app.ResolverActivity: int mLaunchedFromUid> = -1;

     label04:
        i0 = r0.<com.android.internal.app.ResolverActivity: int mLaunchedFromUid>;

        if i0 < 0 goto label18;

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>(i0);

        if $z0 == 0 goto label05;

        goto label18;

     label05:
        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager mPm> = $r6;

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.String getReferrerPackageName()>();

        r0.<com.android.internal.app.ResolverActivity: java.lang.String mReferrerPackage> = $r7;

        $r9 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        virtualinvoke $r9.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r8);

        r0.<com.android.internal.app.ResolverActivity: java.lang.CharSequence mTitle> = r37;

        r0.<com.android.internal.app.ResolverActivity: int mDefaultTitleResId> = i4;

        r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption> = z7;

        $r10 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle fetchWorkProfileUserProfile()>();

        r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle mWorkProfileUserHandle> = $r10;

        $z1 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z1 == 0 goto label06;

        $z5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isVoiceInteraction()>();

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z6 != 0 goto label06;

        z8 = 1;

        goto label07;

     label06:
        z8 = 0;

     label07:
        $r39 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter createMultiProfilePagerAdapter(android.content.Intent[],java.util.List,boolean)>(r2, r3, z8);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter> = $r39;

        $z9 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean configureContentView()>();

        if $z9 == 0 goto label08;

        return;

     label08:
        $r11 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r12 = virtualinvoke $r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getPersonalListAdapter()>();

        r40 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor createPackageMonitor(com.android.internal.app.ResolverListAdapter)>($r12);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mPersonalPackageMonitor> = r40;

        $r13 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.Looper getMainLooper()>();

        $r14 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        virtualinvoke r40.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r0, $r13, $r14, 0);

        $z2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z2 == 0 goto label09;

        $r31 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r32 = virtualinvoke $r31.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getWorkListAdapter()>();

        r41 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor createPackageMonitor(com.android.internal.app.ResolverListAdapter)>($r32);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor> = r41;

        $r33 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.Looper getMainLooper()>();

        $r34 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        virtualinvoke r41.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r0, $r33, $r34, 0);

     label09:
        r0.<com.android.internal.app.ResolverActivity: boolean mRegistered> = 1;

        $r15 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908864);

        r42 = (com.android.internal.widget.ResolverDrawerLayout) $r15;

        if r42 == null goto label12;

        $r29 = new com.android.internal.app.ResolverActivity$2;

        specialinvoke $r29.<com.android.internal.app.ResolverActivity$2: void <init>(com.android.internal.app.ResolverActivity)>(r0);

        virtualinvoke r42.<com.android.internal.widget.ResolverDrawerLayout: void setOnDismissedListener(com.android.internal.widget.ResolverDrawerLayout$OnDismissedListener)>($r29);

        $r30 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        z10 = virtualinvoke $r30.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.touchscreen");

        $z4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isVoiceInteraction()>();

        if $z4 != 0 goto label10;

        if z10 != 0 goto label11;

     label10:
        virtualinvoke r42.<com.android.internal.widget.ResolverDrawerLayout: void setCollapsed(boolean)>(0);

     label11:
        virtualinvoke r42.<com.android.internal.widget.ResolverDrawerLayout: void setSystemUiVisibility(int)>(768);

        $r43 = new com.android.internal.app._$$Lambda$yRChr_JGmMwuDQFg_BsC_mE_wmc;

        specialinvoke $r43.<com.android.internal.app._$$Lambda$yRChr_JGmMwuDQFg_BsC_mE_wmc: void <init>(com.android.internal.app.ResolverActivity)>(r0);

        virtualinvoke r42.<com.android.internal.widget.ResolverDrawerLayout: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>($r43);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.widget.ResolverDrawerLayout mResolverDrawerLayout> = r42;

     label12:
        r44 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909318);

        r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView> = r44;

        if r44 == null goto label13;

        $r28 = new com.android.internal.app._$$Lambda$fPZctSH683BQhFNSBKdl6Wz99qg;

        specialinvoke $r28.<com.android.internal.app._$$Lambda$fPZctSH683BQhFNSBKdl6Wz99qg: void <init>(com.android.internal.app.ResolverActivity)>(r0);

        virtualinvoke r44.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r28);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void updateProfileViewButton()>();

     label13:
        r45 = virtualinvoke r1.<android.content.Intent: java.util.Set getCategories()>();

        $r16 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r17 = virtualinvoke $r16.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z3 = virtualinvoke $r17.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        if $z3 == 0 goto label14;

        s5 = 451;

        goto label15;

     label14:
        s5 = 453;

     label15:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r22 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        if r45 == null goto label16;

        $r27 = interfaceinvoke r45.<java.util.Set: java.lang.Object[] toArray()>();

        r47 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r27);

        goto label17;

     label16:
        r47 = "";

     label17:
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r26 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int,java.lang.String)>(r0, s5, $r26);

        return;

     label18:
        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    protected void onCreate(android.os.Bundle, android.content.Intent, java.lang.CharSequence, android.content.Intent[], java.util.List, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.lang.CharSequence r3;
        android.content.Intent[] r4;
        java.util.List r5;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: android.content.Intent[];

        r5 := @parameter4: java.util.List;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,int,android.content.Intent[],java.util.List,boolean)>(r1, r2, r3, 0, r4, r5, z0);

        return;
    }

    protected void onDestroy()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverActivity$PickTargetOptionRequest r1;
        boolean $z0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r4;
        com.android.internal.app.ResolverListAdapter $r3, $r5;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isChangingConfigurations()>();

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverActivity$PickTargetOptionRequest mPickOptionRequest>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.app.ResolverActivity$PickTargetOptionRequest: void cancel()>();

     label1:
        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        if $r5 == null goto label2;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        virtualinvoke $r3.<com.android.internal.app.ResolverListAdapter: void onDestroy()>();

     label2:
        return;
    }

    public void onHandlePackagesChanged(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r3, $r6, $r7, $r8;
        com.android.internal.app.ResolverListAdapter $r2, r9, r10;
        android.os.UserHandle $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r9 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        if r9 != $r2 goto label3;

        $r4 = virtualinvoke r9.<com.android.internal.app.ResolverListAdapter: android.os.UserHandle getUserHandle()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        $z0 = virtualinvoke $r4.<android.os.UserHandle: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z3 = virtualinvoke $r8.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean isWaitingToEnableWorkProfile()>();

        if $z3 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z1 = virtualinvoke $r6.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean rebuildActiveTab(boolean)>(1);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r10 = virtualinvoke $r7.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        virtualinvoke r10.<com.android.internal.app.ResolverListAdapter: void notifyDataSetChanged()>();

        $i0 = virtualinvoke r10.<com.android.internal.app.ResolverListAdapter: int getCount()>();

        if $i0 != 0 goto label2;

        $z2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean inactiveListAdapterHasItems()>();

        if $z2 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

     label2:
        goto label4;

     label3:
        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void clearInactiveProfileCache()>();

     label4:
        return;
    }

    void onHorizontalSwipeStateChanged(int)
    {
        com.android.internal.app.ResolverActivity r0;
        int i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        i0 := @parameter0: int;

        return;
    }

    protected void onListRebuilt(com.android.internal.app.ResolverListAdapter)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.widget.ResolverDrawerLayout r1;
        com.android.internal.app.ResolverActivity$ItemClickListener $r2;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r3;
        android.view.ViewGroup $r4;
        android.widget.ListView $r5;
        boolean $z0, $z1, $z2;
        android.view.View $r6;
        int $i0, i1;
        com.android.internal.app.ResolverListAdapter r7;
        android.content.res.Resources r9;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r7 := @parameter0: com.android.internal.app.ResolverListAdapter;

        $r2 = new com.android.internal.app.ResolverActivity$ItemClickListener;

        specialinvoke $r2.<com.android.internal.app.ResolverActivity$ItemClickListener: void <init>(com.android.internal.app.ResolverActivity)>(r0);

        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.view.ViewGroup getActiveAdapterView()>();

        $r5 = (android.widget.ListView) $r4;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setupAdapterListView(android.widget.ListView,com.android.internal.app.ResolverActivity$ItemClickListener)>($r5, $r2);

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z0 == 0 goto label3;

        $z1 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isIntentPicker()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908864);

        r1 = (com.android.internal.widget.ResolverDrawerLayout) $r6;

        if r1 == null goto label3;

        r9 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $z2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z2 == 0 goto label1;

        i1 = 17105446;

        goto label2;

     label1:
        i1 = 17105447;

     label2:
        $i0 = virtualinvoke r9.<android.content.res.Resources: int getDimensionPixelSize(int)>(i1);

        virtualinvoke r1.<com.android.internal.widget.ResolverDrawerLayout: void setMaxCollapsedHeight(int)>($i0);

     label3:
        return;
    }

    public final void onPostListReady(com.android.internal.app.ResolverListAdapter, boolean, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.ResolverListAdapter r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r2, $r3, $r4, $r5;
        com.android.internal.app.ResolverMultiProfilePagerAdapter $r6;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.ResolverListAdapter;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isAutolaunching()>();

        if $z2 == 0 goto label1;

        return;

     label1:
        $z3 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isIntentPicker()>();

        if $z3 == 0 goto label2;

        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r6 = (com.android.internal.app.ResolverMultiProfilePagerAdapter) $r5;

        $z6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        virtualinvoke $r6.<com.android.internal.app.ResolverMultiProfilePagerAdapter: void setUseLayoutWithDefault(boolean)>($z6);

     label2:
        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z4 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean shouldShowEmptyStateScreen(com.android.internal.app.ResolverListAdapter)>(r1);

        if $z4 == 0 goto label3;

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showEmptyResolverListEmptyState(com.android.internal.app.ResolverListAdapter)>(r1);

        goto label4;

     label3:
        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void showListView(com.android.internal.app.ResolverListAdapter)>(r1);

     label4:
        if z1 == 0 goto label5;

        $z5 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean maybeAutolaunchActivity()>();

        if $z5 == 0 goto label5;

        return;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void maybeCreateHeader(com.android.internal.app.ResolverListAdapter)>(r1);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void resetButtonBar()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void onListRebuilt(com.android.internal.app.ResolverListAdapter)>(r1);

     label6:
        return;
    }

    protected void onProfileClick(android.view.View)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1;
        com.android.internal.app.ResolverListAdapter $r2;
        android.view.View r3;
        com.android.internal.app.chooser.DisplayResolveInfo r4;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r3 := @parameter0: android.view.View;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r4 = virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        if r4 != null goto label1;

        return;

     label1:
        r0.<com.android.internal.app.ResolverActivity: int mProfileSwitchMessageId> = -1;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean onTargetSelected(com.android.internal.app.chooser.TargetInfo,boolean)>(r4, 0);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

        return;
    }

    protected void onProfileTabSelected()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return;
    }

    protected void onRestart()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r2, $r4, $r12, $r15;
        android.os.UserHandle $r3, $r7, $r11;
        com.android.internal.content.PackageMonitor $r5, $r8, $r9, $r14;
        android.os.Looper $r6, $r10;
        com.android.internal.app.ResolverListAdapter $r13, $r16;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<android.app.Activity: void onRestart()>();

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mRegistered>;

        if $z0 != 0 goto label3;

        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mPersonalPackageMonitor>;

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.Looper getMainLooper()>();

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getPersonalProfileUserHandle()>();

        virtualinvoke $r5.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r0, $r6, $r7, 0);

        $z3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z3 == 0 goto label2;

        $r8 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor>;

        if $r8 != null goto label1;

        $r12 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r13 = virtualinvoke $r12.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getWorkListAdapter()>();

        $r14 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor createPackageMonitor(com.android.internal.app.ResolverListAdapter)>($r13);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor> = $r14;

     label1:
        $r9 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor>;

        $r10 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.Looper getMainLooper()>();

        $r11 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        virtualinvoke $r9.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r0, $r10, $r11, 0);

     label2:
        r0.<com.android.internal.app.ResolverActivity: boolean mRegistered> = 1;

     label3:
        $z4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z4 == 0 goto label4;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z1 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean isWaitingToEnableWorkProfile()>();

        if $z1 == 0 goto label4;

        $r2 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.UserHandle getWorkProfileUserHandle()>();

        $z2 = virtualinvoke $r2.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean isQuietModeEnabled(android.os.UserHandle)>($r3);

        if $z2 == 0 goto label4;

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void markWorkProfileEnabledBroadcastReceived()>();

     label4:
        $r15 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r16 = virtualinvoke $r15.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        virtualinvoke $r16.<com.android.internal.app.ResolverListAdapter: void handlePackagesChanged()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void updateProfileViewButton()>();

        return;
    }

    protected void onRestoreInstanceState(android.os.Bundle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.Bundle r1;
        android.view.View $r2;
        com.android.internal.widget.ViewPager $r3;
        int $i0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r4;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>(r1);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void resetButtonBar()>();

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909319);

        $r3 = (com.android.internal.widget.ViewPager) $r2;

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("last_shown_tab_key");

        virtualinvoke $r3.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>($i0);

        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: void clearInactiveProfileCache()>();

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.Bundle r1;
        android.view.View $r2;
        com.android.internal.widget.ViewPager $r3;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909319);

        $r3 = (com.android.internal.widget.ViewPager) $r2;

        $i0 = virtualinvoke $r3.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("last_shown_tab_key", $i0);

        return;
    }

    protected void onStart()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0, $z1;
        android.content.BroadcastReceiver $r1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.internal.app.ResolverActivity: android.content.BroadcastReceiver createWorkProfileStateReceiver()>();

        r0.<com.android.internal.app.ResolverActivity: android.content.BroadcastReceiver mWorkProfileStateReceiver> = $r1;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void registerWorkProfileStateReceiver()>();

        $z1 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isWorkProfileEnabled()>();

        r0.<com.android.internal.app.ResolverActivity: boolean mWorkProfileHasBeenEnabled> = $z1;

     label1:
        return;
    }

    protected void onStop()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.content.PackageMonitor r1, $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.BroadcastReceiver $r2;
        android.content.Intent $r4;
        int $i0, $i1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        specialinvoke r0.<android.app.Activity: void onStop()>();

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mRegistered>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mPersonalPackageMonitor>;

        virtualinvoke $r3.<com.android.internal.content.PackageMonitor: void unregister()>();

        r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.content.PackageMonitor: void unregister()>();

     label1:
        r0.<com.android.internal.app.ResolverActivity: boolean mRegistered> = 0;

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.Intent getIntent()>();

        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isVoiceInteraction()>();

        if $z1 != 0 goto label3;

        $z2 = r0.<com.android.internal.app.ResolverActivity: boolean mResolvingHome>;

        if $z2 != 0 goto label3;

        $z3 = r0.<com.android.internal.app.ResolverActivity: boolean mRetainInOnStop>;

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isChangingConfigurations()>();

        if $z4 != 0 goto label3;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

     label3:
        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor>;

        if $r5 == null goto label4;

        $r2 = r0.<com.android.internal.app.ResolverActivity: android.content.BroadcastReceiver mWorkProfileStateReceiver>;

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.content.PackageMonitor mWorkPackageMonitor> = null;

     label4:
        return;
    }

    protected boolean onTargetSelected(com.android.internal.app.chooser.TargetInfo, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.TargetInfo r1;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20, z21, z22, z23, $z24;
        android.content.pm.ResolveInfo r2, $r32, r86;
        java.lang.String r3, $r22, $r24, $r41, $r42, $r43, $r44, $r47, $r50, $r51, $r52, $r53, $r54, $r56, $r64, r71, r74, r79, r80, r83, r88, r89;
        java.util.Set r4;
        android.net.Uri r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i9, i10, i11, i12, i13, i14, i15;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r6, $r11, $r14, $r17, $r25, $r29, $r33, $r57;
        com.android.internal.app.ResolverListAdapter $r7, $r12, $r15, $r18, $r26, $r30, $r34, $r58;
        java.util.List $r8, $r13, $r35;
        android.content.IntentFilter $r9, $r45, r70, $r76, $r81;
        android.content.Intent $r10, r65, r67;
        com.android.internal.app.chooser.DisplayResolveInfo $r16, $r27, $r31;
        com.android.internal.app.ResolverListController $r19;
        android.content.ComponentName $r20, $r21, $r28, $r38;
        android.content.pm.ActivityInfo $r23, $r39, $r40;
        java.lang.Object $r36, $r46, $r48, $r49, $r55;
        com.android.internal.app.ResolverActivity$ResolvedComponentInfo $r37;
        android.content.IntentFilter$MalformedMimeTypeException $r59;
        android.os.RemoteException $r60;
        java.lang.StringBuilder $r61;
        java.util.Iterator r68, r73, r77, r82;
        android.os.PatternMatcher r75, r84;
        android.content.IntentFilter$AuthorityEntry r78;
        android.content.ComponentName[] r85;
        android.content.pm.PackageManager r87;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        z0 := @parameter1: boolean;

        r2 = interfaceinvoke r1.<com.android.internal.app.chooser.TargetInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        if r1 == null goto label01;

        r65 = interfaceinvoke r1.<com.android.internal.app.chooser.TargetInfo: android.content.Intent getResolvedIntent()>();

        goto label02;

     label01:
        r65 = null;

     label02:
        if r65 == null goto label51;

        $z2 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z2 != 0 goto label04;

        $r57 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r58 = virtualinvoke $r57.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z19 = virtualinvoke $r58.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        if $z19 == 0 goto label03;

        goto label04;

     label03:
        goto label51;

     label04:
        $r6 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r8 = virtualinvoke $r7.<com.android.internal.app.ResolverListAdapter: java.util.List getUnfilteredResolveList()>();

        if $r8 == null goto label50;

        $r9 = new android.content.IntentFilter;

        specialinvoke $r9.<android.content.IntentFilter: void <init>()>();

        $r10 = virtualinvoke r65.<android.content.Intent: android.content.Intent getSelector()>();

        if $r10 == null goto label05;

        r67 = virtualinvoke r65.<android.content.Intent: android.content.Intent getSelector()>();

        goto label06;

     label05:
        r67 = r65;

     label06:
        r3 = virtualinvoke r67.<android.content.Intent: java.lang.String getAction()>();

        if r3 == null goto label07;

        virtualinvoke $r9.<android.content.IntentFilter: void addAction(java.lang.String)>(r3);

     label07:
        r4 = virtualinvoke r67.<android.content.Intent: java.util.Set getCategories()>();

        if r4 == null goto label09;

        r68 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z18 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label09;

        $r55 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        $r56 = (java.lang.String) $r55;

        virtualinvoke $r9.<android.content.IntentFilter: void addCategory(java.lang.String)>($r56);

        goto label08;

     label09:
        virtualinvoke $r9.<android.content.IntentFilter: void addCategory(java.lang.String)>("android.intent.category.DEFAULT");

        $i1 = r2.<android.content.pm.ResolveInfo: int match>;

        i9 = 268369920 & $i1;

        r5 = virtualinvoke r67.<android.content.Intent: android.net.Uri getData()>();

        r70 = $r9;

        if i9 != 6291456 goto label13;

        r71 = virtualinvoke r67.<android.content.Intent: java.lang.String resolveType(android.content.Context)>(r0);

        r70 = $r9;

        if r71 == null goto label13;

     label10:
        virtualinvoke $r9.<android.content.IntentFilter: void addDataType(java.lang.String)>(r71);

     label11:
        r70 = $r9;

        goto label13;

     label12:
        $r59 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ResolverActivity", $r59);

        r70 = null;

     label13:
        if r5 == null goto label25;

        $r43 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        if $r43 == null goto label25;

        if i9 != 6291456 goto label14;

        $r51 = "file";

        $r52 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        $z16 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z16 != 0 goto label25;

        $r53 = "content";

        $r54 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        $z17 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        if $z17 != 0 goto label25;

     label14:
        $r44 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        virtualinvoke r70.<android.content.IntentFilter: void addDataScheme(java.lang.String)>($r44);

        $r45 = r2.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        r73 = virtualinvoke $r45.<android.content.IntentFilter: java.util.Iterator schemeSpecificPartsIterator()>();

        if r73 == null goto label17;

        r74 = virtualinvoke r5.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

     label15:
        if r74 == null goto label17;

        $z14 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label17;

        $r49 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        r75 = (android.os.PatternMatcher) $r49;

        $z15 = virtualinvoke r75.<android.os.PatternMatcher: boolean match(java.lang.String)>(r74);

        if $z15 == 0 goto label16;

        $r50 = virtualinvoke r75.<android.os.PatternMatcher: java.lang.String getPath()>();

        $i6 = virtualinvoke r75.<android.os.PatternMatcher: int getType()>();

        virtualinvoke r70.<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>($r50, $i6);

        goto label17;

     label16:
        goto label15;

     label17:
        $r76 = r2.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        r77 = virtualinvoke $r76.<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>();

        if r77 == null goto label22;

     label18:
        $z13 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label22;

        $r48 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r78 = (android.content.IntentFilter$AuthorityEntry) $r48;

        $i5 = virtualinvoke r78.<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)>(r5);

        if $i5 < 0 goto label21;

        i10 = virtualinvoke r78.<android.content.IntentFilter$AuthorityEntry: int getPort()>();

        r79 = virtualinvoke r78.<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>();

        if i10 < 0 goto label19;

        r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i10);

        goto label20;

     label19:
        r80 = null;

     label20:
        virtualinvoke r70.<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>(r79, r80);

        goto label22;

     label21:
        goto label18;

     label22:
        $r81 = r2.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        r82 = virtualinvoke $r81.<android.content.IntentFilter: java.util.Iterator pathsIterator()>();

        if r82 == null goto label25;

        r83 = virtualinvoke r5.<android.net.Uri: java.lang.String getPath()>();

     label23:
        if r83 == null goto label25;

        $z11 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label25;

        $r46 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r84 = (android.os.PatternMatcher) $r46;

        $z12 = virtualinvoke r84.<android.os.PatternMatcher: boolean match(java.lang.String)>(r83);

        if $z12 == 0 goto label24;

        $r47 = virtualinvoke r84.<android.os.PatternMatcher: java.lang.String getPath()>();

        $i4 = virtualinvoke r84.<android.os.PatternMatcher: int getType()>();

        virtualinvoke r70.<android.content.IntentFilter: void addDataPath(java.lang.String,int)>($r47, $i4);

        goto label25;

     label24:
        goto label23;

     label25:
        if r70 == null goto label49;

        $r11 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r12 = virtualinvoke $r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r13 = virtualinvoke $r12.<com.android.internal.app.ResolverListAdapter: java.util.List getUnfilteredResolveList()>();

        i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        $r14 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r15 = virtualinvoke $r14.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r16 = virtualinvoke $r15.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        if $r16 == null goto label26;

        z20 = 1;

        goto label27;

     label26:
        z20 = 0;

     label27:
        if z20 != 0 goto label28;

        r85 = newarray (android.content.ComponentName)[i0];

        goto label29;

     label28:
        $i2 = i0 + 1;

        r85 = newarray (android.content.ComponentName)[$i2];

     label29:
        i11 = 0;

        i12 = 0;

     label30:
        if i12 >= i0 goto label32;

        $r33 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r34 = virtualinvoke $r33.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r35 = virtualinvoke $r34.<com.android.internal.app.ResolverListAdapter: java.util.List getUnfilteredResolveList()>();

        $r36 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>(i12);

        $r37 = (com.android.internal.app.ResolverActivity$ResolvedComponentInfo) $r36;

        r86 = virtualinvoke $r37.<com.android.internal.app.ResolverActivity$ResolvedComponentInfo: android.content.pm.ResolveInfo getResolveInfoAt(int)>(0);

        $r38 = new android.content.ComponentName;

        $r39 = r86.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r42 = $r39.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r40 = r86.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r41 = $r40.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r38.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r42, $r41);

        r85[i12] = $r38;

        i13 = i11;

        $i3 = r86.<android.content.pm.ResolveInfo: int match>;

        if $i3 <= i11 goto label31;

        i13 = r86.<android.content.pm.ResolveInfo: int match>;

     label31:
        i12 = i12 + 1;

        i11 = i13;

        goto label30;

     label32:
        if z20 == 0 goto label33;

        $r25 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r26 = virtualinvoke $r25.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r27 = virtualinvoke $r26.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        $r28 = virtualinvoke $r27.<com.android.internal.app.chooser.DisplayResolveInfo: android.content.ComponentName getResolvedComponentName()>();

        r85[i0] = $r28;

        $r29 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r30 = virtualinvoke $r29.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r31 = virtualinvoke $r30.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        $r32 = virtualinvoke $r31.<com.android.internal.app.chooser.DisplayResolveInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        i14 = $r32.<android.content.pm.ResolveInfo: int match>;

        if i14 <= i11 goto label33;

        i11 = i14;

        goto label33;

     label33:
        if z0 == 0 goto label46;

        i15 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: int getUserId()>();

        r87 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        $r20 = virtualinvoke r65.<android.content.Intent: android.content.ComponentName getComponent()>();

        virtualinvoke r87.<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>(r70, i11, r85, $r20);

        $z3 = r2.<android.content.pm.ResolveInfo: boolean handleAllWebDataURI>;

        if $z3 == 0 goto label35;

        $r22 = virtualinvoke r87.<android.content.pm.PackageManager: java.lang.String getDefaultBrowserPackageNameAsUser(int)>(i15);

        $z9 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        if $z9 == 0 goto label34;

        $r23 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r23.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r87.<android.content.pm.PackageManager: boolean setDefaultBrowserPackageNameAsUser(java.lang.String,int)>($r24, i15);

     label34:
        goto label45;

     label35:
        $r21 = virtualinvoke r65.<android.content.Intent: android.content.ComponentName getComponent()>();

        r88 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String getPackageName()>();

        if r5 == null goto label36;

        r89 = virtualinvoke r5.<android.net.Uri: java.lang.String getScheme()>();

        goto label37;

     label36:
        r89 = null;

     label37:
        if r89 == null goto label39;

        $z7 = virtualinvoke r89.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z7 != 0 goto label38;

        $z8 = virtualinvoke r89.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z8 == 0 goto label39;

     label38:
        z21 = 1;

        goto label40;

     label39:
        z21 = 0;

     label40:
        if r3 == null goto label41;

        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.VIEW");

        if $z6 == 0 goto label41;

        z22 = 1;

        goto label42;

     label41:
        z22 = 0;

     label42:
        if r4 == null goto label43;

        $z5 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>("android.intent.category.BROWSABLE");

        if $z5 == 0 goto label43;

        z23 = 1;

        goto label44;

     label43:
        z23 = 0;

     label44:
        if z21 == 0 goto label45;

        if z22 == 0 goto label45;

        if z23 == 0 goto label45;

        virtualinvoke r87.<android.content.pm.PackageManager: boolean updateIntentVerificationStatusAsUser(java.lang.String,int,int)>(r88, 2, i15);

        goto label45;

     label45:
        goto label51;

     label46:
        $r17 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r18 = virtualinvoke $r17.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $r19 = $r18.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.ResolverListController mResolverListController>;

        virtualinvoke $r19.<com.android.internal.app.ResolverListController: void setLastChosen(android.content.Intent,android.content.IntentFilter,int)>(r65, r70, i11);

     label47:
        goto label51;

     label48:
        $r60 := @caughtexception;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling setLastChosenActivity\n");

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ResolverActivity", $r64);

        goto label51;

     label49:
        goto label51;

     label50:
        goto label51;

     label51:
        if r1 == null goto label53;

        if r65 == null goto label52;

        $z1 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean isLaunchingTargetInOtherProfile()>();

        if $z1 == 0 goto label52;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void prepareIntentForCrossProfileLaunch(android.content.Intent)>(r65);

     label52:
        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void safelyStartActivity(com.android.internal.app.chooser.TargetInfo)>(r1);

        $z24 = interfaceinvoke r1.<com.android.internal.app.chooser.TargetInfo: boolean isSuspended()>();

        if $z24 == 0 goto label53;

        return 0;

     label53:
        return 1;

        catch android.content.IntentFilter$MalformedMimeTypeException from label10 to label11 with label12;
        catch android.os.RemoteException from label46 to label47 with label48;
    }

    android.app.VoiceInteractor$PickOptionRequest$Option optionForChooserTarget(com.android.internal.app.chooser.TargetInfo, int)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.TargetInfo r1;
        int i0;
        android.app.VoiceInteractor$PickOptionRequest$Option $r2;
        java.lang.CharSequence $r3;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        i0 := @parameter1: int;

        $r2 = new android.app.VoiceInteractor$PickOptionRequest$Option;

        $r3 = interfaceinvoke r1.<com.android.internal.app.chooser.TargetInfo: java.lang.CharSequence getDisplayLabel()>();

        specialinvoke $r2.<android.app.VoiceInteractor$PickOptionRequest$Option: void <init>(java.lang.CharSequence,int)>($r3, i0);

        return $r2;
    }

    protected boolean postRebuildList(boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean postRebuildListInternal(boolean)>(z0);

        return $z1;
    }

    final boolean postRebuildListInternal(boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, $z1, $z2;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1;
        com.android.internal.app.ResolverListAdapter $r2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: int getUnfilteredCount()>();

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean maybeAutolaunchActivity()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setupViewVisibilities()>();

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setupProfileTabs()>();

     label2:
        return 0;
    }

    protected void resetButtonBar()
    {
        com.android.internal.app.ResolverActivity r0;
        android.view.ViewGroup r1;
        com.android.internal.app.ResolverListAdapter r2;
        android.view.View r3, $r5, $r7, $r9;
        android.graphics.Insets r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r6, $r11;
        android.widget.Button $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, i6;
        android.content.res.Resources $r12;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908811);

        r1 = (android.view.ViewGroup) $r5;

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResolverActivity", "Layout unexpectedly does not have a button bar");

        return;

     label2:
        $r6 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        r2 = virtualinvoke $r6.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16909347);

        $z1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z1 != 0 goto label5;

        r4 = r0.<com.android.internal.app.ResolverActivity: android.graphics.Insets mSystemWindowInsets>;

        if r4 == null goto label3;

        i6 = r4.<android.graphics.Insets: int bottom>;

        goto label4;

     label3:
        i6 = 0;

     label4:
        $i0 = virtualinvoke r1.<android.view.ViewGroup: int getPaddingLeft()>();

        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getPaddingTop()>();

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getPaddingRight()>();

        $r12 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r12.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105435);

        $i4 = $i3 + i6;

        virtualinvoke r1.<android.view.ViewGroup: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i4);

     label5:
        $z4 = virtualinvoke r2.<com.android.internal.app.ResolverListAdapter: boolean isTabLoaded()>();

        if $z4 == 0 goto label7;

        $r11 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $z2 = virtualinvoke $r11.<com.android.internal.app.AbstractMultiProfilePagerAdapter: boolean shouldShowEmptyStateScreen(com.android.internal.app.ResolverListAdapter)>(r2);

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z3 != 0 goto label7;

        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(4);

        if r3 == null goto label6;

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(4);

     label6:
        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setButtonBarIgnoreOffset(boolean)>(0);

        return;

     label7:
        if r3 == null goto label8;

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(0);

     label8:
        virtualinvoke r1.<android.view.ViewGroup: void setVisibility(int)>(0);

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void setButtonBarIgnoreOffset(boolean)>(1);

        $r7 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(16908813);

        $r8 = (android.widget.Button) $r7;

        r0.<com.android.internal.app.ResolverActivity: android.widget.Button mOnceButton> = $r8;

        $r9 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(16908810);

        $r10 = (android.widget.Button) $r9;

        r0.<com.android.internal.app.ResolverActivity: android.widget.Button mAlwaysButton> = $r10;

        specialinvoke r0.<com.android.internal.app.ResolverActivity: void resetAlwaysOrOnceButtonBar()>();

        return;
    }

    public boolean resolveInfoMatch(android.content.pm.ResolveInfo, android.content.pm.ResolveInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.pm.ResolveInfo r1, r2;
        android.content.pm.ActivityInfo $r3, $r4, $r5, $r8, $r9, $r12;
        java.lang.String $r6, $r7, $r10, $r11;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: android.content.pm.ResolveInfo;

        z2 = 1;

        if r1 != null goto label2;

        if r2 != null goto label1;

        goto label6;

     label1:
        z2 = 0;

        goto label6;

     label2:
        $r3 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r3 != null goto label4;

        $r12 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r12 != null goto label3;

        goto label6;

     label3:
        z2 = 0;

        goto label6;

     label4:
        $r4 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r4.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r5 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r6 = $r5.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z0 == 0 goto label5;

        $r8 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r8.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r9 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        z2 = 0;

     label6:
        return z2;
    }

    public void safelyStartActivity(com.android.internal.app.chooser.TargetInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        java.lang.Throwable $r1;
        com.android.internal.app.chooser.TargetInfo r2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r2 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        staticinvoke <android.os.StrictMode: void disableDeathOnFileUriExposure()>();

     label1:
        specialinvoke r0.<com.android.internal.app.ResolverActivity: void safelyStartActivityInternal(com.android.internal.app.chooser.TargetInfo)>(r2);

     label2:
        staticinvoke <android.os.StrictMode: void enableDeathOnFileUriExposure()>();

        return;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.os.StrictMode: void enableDeathOnFileUriExposure()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void sendVoiceChoicesIfNeeded()
    {
        com.android.internal.app.ResolverActivity r0;
        android.app.VoiceInteractor$PickOptionRequest$Option[] r1;
        int i0, $i1, i2;
        com.android.internal.app.chooser.TargetInfo r2;
        boolean $z0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r3, $r10;
        com.android.internal.app.ResolverListAdapter $r4, $r11;
        com.android.internal.app.ResolverActivity$PickTargetOptionRequest $r5, $r9;
        android.app.VoiceInteractor$Prompt $r6;
        java.lang.CharSequence $r7;
        android.app.VoiceInteractor $r8;
        android.app.VoiceInteractor$PickOptionRequest$Option $r12;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isVoiceInteraction()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $i1 = virtualinvoke $r4.<com.android.internal.app.ResolverListAdapter: int getCount()>();

        r1 = newarray (android.app.VoiceInteractor$PickOptionRequest$Option)[$i1];

        i2 = 0;

        i0 = lengthof r1;

     label2:
        if i2 >= i0 goto label4;

        $r10 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r11 = virtualinvoke $r10.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r2 = virtualinvoke $r11.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo getItem(int)>(i2);

        if r2 != null goto label3;

        return;

     label3:
        $r12 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.app.VoiceInteractor$PickOptionRequest$Option optionForChooserTarget(com.android.internal.app.chooser.TargetInfo,int)>(r2, i2);

        r1[i2] = $r12;

        i2 = i2 + 1;

        goto label2;

     label4:
        $r5 = new com.android.internal.app.ResolverActivity$PickTargetOptionRequest;

        $r6 = new android.app.VoiceInteractor$Prompt;

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: java.lang.CharSequence getTitle()>();

        specialinvoke $r6.<android.app.VoiceInteractor$Prompt: void <init>(java.lang.CharSequence)>($r7);

        specialinvoke $r5.<com.android.internal.app.ResolverActivity$PickTargetOptionRequest: void <init>(android.app.VoiceInteractor$Prompt,android.app.VoiceInteractor$PickOptionRequest$Option[],android.os.Bundle)>($r6, r1, null);

        r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverActivity$PickTargetOptionRequest mPickOptionRequest> = $r5;

        $r8 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.app.VoiceInteractor getVoiceInteractor()>();

        $r9 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.ResolverActivity$PickTargetOptionRequest mPickOptionRequest>;

        virtualinvoke $r8.<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor$Request)>($r9);

        return;
    }

    protected final void setAdditionalTargets(android.content.Intent[])
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.Intent[] r1;
        int i0, i1;
        android.content.Intent r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.Intent[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r3 = r0.<com.android.internal.app.ResolverActivity: java.util.ArrayList mIntents>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void setRetainInOnStop(boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.ResolverActivity: boolean mRetainInOnStop> = z0;

        return;
    }

    public void setSafeForwardingMode(boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.ResolverActivity: boolean mSafeForwardingMode> = z0;

        return;
    }

    protected boolean shouldAddFooterView()
    {
        com.android.internal.app.ResolverActivity r0;
        android.view.View r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean useLayoutWithDefault()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.view.View findViewById(int)>(16908811);

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public boolean shouldAutoLaunchSingleChoice(com.android.internal.app.chooser.TargetInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.TargetInfo r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: com.android.internal.app.chooser.TargetInfo;

        $z0 = interfaceinvoke r1.<com.android.internal.app.chooser.TargetInfo: boolean isSuspended()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean shouldGetActivityMetadata()
    {
        com.android.internal.app.ResolverActivity r0;

        r0 := @this: com.android.internal.app.ResolverActivity;

        return 0;
    }

    protected boolean shouldShowTabs()
    {
        com.android.internal.app.ResolverActivity r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $z0 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean hasWorkProfile()>();

        if $z0 == 0 goto label1;

        $z1 = <com.android.internal.app.ResolverActivity: boolean ENABLE_TABBED_VIEW>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void showTargetDetails(android.content.pm.ResolveInfo)
    {
        com.android.internal.app.ResolverActivity r0;
        android.content.pm.ResolveInfo r1;
        android.content.Intent $r2, $r3, $r7, $r8;
        android.content.pm.ActivityInfo $r4;
        java.lang.String $r5;
        android.net.Uri $r6;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r9;
        android.os.UserHandle $r10;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.settings.APPLICATION_DETAILS_SETTINGS");

        $r4 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r5 = $r4.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", $r5, null);

        $r7 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Intent: android.content.Intent addFlags(int)>(524288);

        $r9 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r10 = virtualinvoke $r9.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle getCurrentUserHandle()>();

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>($r8, $r10);

        return;
    }

    public boolean startAsCallerImpl(android.content.Intent, android.os.Bundle, boolean, int)
    {
        com.android.internal.app.ResolverActivity r0;
        android.os.Bundle r1;
        boolean z0;
        int i0;
        android.os.IBinder r2, $r6;
        android.content.Intent r3, r20;
        android.content.ComponentName r4;
        android.app.IActivityTaskManager $r5;
        android.content.res.Resources $r7;
        java.lang.String $r8, $r9, $r10, $r19;
        android.os.RemoteException $r18;

        r0 := @this: com.android.internal.app.ResolverActivity;

        r20 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

     label1:
        $r5 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        $r6 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.os.IBinder getActivityToken()>();

        r2 = interfaceinvoke $r5.<android.app.IActivityTaskManager: android.os.IBinder requestStartActivityPermissionToken(android.os.IBinder)>($r6);

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>()>();

        $r7 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(17039839);

        r4 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r8);

        $r9 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r10 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r9, $r10);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("android.app.extra.PERMISSION_TOKEN", r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", r20);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("android.app.extra.OPTIONS", r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.app.extra.EXTRA_IGNORE_TARGET_SECURITY", z0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.USER_ID", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(50331648);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void startActivity(android.content.Intent)>(r3);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResolverActivity", $r19);

     label4:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startSelected(int, boolean, boolean)
    {
        com.android.internal.app.ResolverActivity r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r13, $r16;
        com.android.internal.app.ResolverListAdapter $r2, $r14, $r17;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.Object[] $r5;
        android.content.pm.ActivityInfo $r6;
        android.content.pm.PackageManager $r7;
        java.lang.CharSequence $r8;
        android.widget.Toast $r11;
        int i0;
        android.content.pm.ResolveInfo r12;
        com.android.internal.app.chooser.TargetInfo r15;
        short s1;

        r0 := @this: com.android.internal.app.ResolverActivity;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean isFinishing()>();

        if $z2 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r12 = virtualinvoke $r2.<com.android.internal.app.ResolverListAdapter: android.content.pm.ResolveInfo resolveInfoForPosition(int,boolean)>(i0, z1);

        $z3 = r0.<com.android.internal.app.ResolverActivity: boolean mResolvingHome>;

        if $z3 == 0 goto label2;

        $z7 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean hasManagedProfile()>();

        if $z7 == 0 goto label2;

        $z8 = specialinvoke r0.<com.android.internal.app.ResolverActivity: boolean supportsManagedProfiles(android.content.pm.ResolveInfo)>(r12);

        if $z8 != 0 goto label2;

        $r3 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039600);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r6.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r7);

        $r9 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        $r5[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r10, 1);

        virtualinvoke $r11.<android.widget.Toast: void show()>();

        return;

     label2:
        $r13 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r14 = virtualinvoke $r13.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r15 = virtualinvoke $r14.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.TargetInfo targetInfoForPosition(int,boolean)>(i0, z1);

        if r15 != null goto label3;

        return;

     label3:
        $z4 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean onTargetSelected(com.android.internal.app.chooser.TargetInfo,boolean)>(r15, z0);

        if $z4 == 0 goto label9;

        if z0 == 0 goto label4;

        $z6 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z6 == 0 goto label4;

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int)>(r0, 455);

        goto label6;

     label4:
        $z5 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z5 == 0 goto label5;

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int)>(r0, 456);

        goto label6;

     label5:
        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int)>(r0, 457);

     label6:
        $r16 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r17 = virtualinvoke $r16.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        $z9 = virtualinvoke $r17.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        if $z9 == 0 goto label7;

        s1 = 452;

        goto label8;

     label7:
        s1 = 454;

     label8:
        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int)>(r0, s1);

        virtualinvoke r0.<com.android.internal.app.ResolverActivity: void finish()>();

     label9:
        return;
    }

    public void updateProfileViewButton()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.chooser.DisplayResolveInfo r1;
        android.view.View r2, $r3, $r6, $r7, $r8, $r11, r12;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r4;
        com.android.internal.app.ResolverListAdapter $r5;
        boolean $z0, $z1;
        android.widget.TextView $r9;
        java.lang.CharSequence $r10;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r3 = r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        r1 = virtualinvoke $r5.<com.android.internal.app.ResolverListAdapter: com.android.internal.app.chooser.DisplayResolveInfo getOtherProfile()>();

        if r1 == null goto label3;

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverActivity: boolean shouldShowTabs()>();

        if $z0 != 0 goto label3;

        $r7 = r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView>;

        virtualinvoke $r7.<android.view.View: void setVisibility(int)>(0);

        $r8 = r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView>;

        r2 = virtualinvoke $r8.<android.view.View: android.view.View findViewById(int)>(16909318);

        r12 = r2;

        $z1 = r2 instanceof android.widget.TextView;

        if $z1 != 0 goto label2;

        $r11 = r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView>;

        r12 = virtualinvoke $r11.<android.view.View: android.view.View findViewById(int)>(16908308);

     label2:
        $r9 = (android.widget.TextView) r12;

        $r10 = virtualinvoke r1.<com.android.internal.app.chooser.DisplayResolveInfo: java.lang.CharSequence getDisplayLabel()>();

        virtualinvoke $r9.<android.widget.TextView: void setText(java.lang.CharSequence)>($r10);

        goto label4;

     label3:
        $r6 = r0.<com.android.internal.app.ResolverActivity: android.view.View mProfileView>;

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(8);

     label4:
        return;
    }

    public boolean useLayoutWithDefault()
    {
        com.android.internal.app.ResolverActivity r0;
        com.android.internal.app.AbstractMultiProfilePagerAdapter $r1, $r3, $r5;
        android.os.UserHandle $r2;
        int $i0, $i1;
        com.android.internal.app.ResolverListAdapter $r4, $r6;
        boolean $z0, z1, z2;

        r0 := @this: com.android.internal.app.ResolverActivity;

        $r1 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.AbstractMultiProfilePagerAdapter: android.os.UserHandle getCurrentUserHandle()>();

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        if $i0 != $i1 goto label1;

        $r5 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r6 = virtualinvoke $r5.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getActiveListAdapter()>();

        z1 = virtualinvoke $r6.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.app.ResolverActivity: com.android.internal.app.AbstractMultiProfilePagerAdapter mMultiProfilePagerAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.AbstractMultiProfilePagerAdapter: com.android.internal.app.ResolverListAdapter getInactiveListAdapter()>();

        z1 = virtualinvoke $r4.<com.android.internal.app.ResolverListAdapter: boolean hasFilteredItem()>();

     label2:
        $z0 = r0.<com.android.internal.app.ResolverActivity: boolean mSupportsAlwaysUseOption>;

        if $z0 == 0 goto label3;

        if z1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }
}
