public class com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter extends com.android.internal.app.ResolverListAdapter$TargetPresentationGetter
{
    private final android.content.pm.ActivityInfo mActivityInfo;

    public void <init>(android.content.Context, int, android.content.pm.ActivityInfo)
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        android.content.Context r1;
        int i0;
        android.content.pm.ActivityInfo r2;
        android.content.pm.ApplicationInfo $r3;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ActivityInfo;

        $r3 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: void <init>(android.content.Context,int,android.content.pm.ApplicationInfo)>(r1, i0, $r3);

        r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.ActivityInfo mActivityInfo> = r2;

        return;
    }

    java.lang.String getAppSubLabelInternal()
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ActivityInfo $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        $r2 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.ActivityInfo mActivityInfo>;

        $r1 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.PackageManager mPm>;

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public volatile android.graphics.drawable.Drawable getIcon(android.os.UserHandle)
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        android.os.UserHandle r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = specialinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.graphics.drawable.Drawable getIcon(android.os.UserHandle)>(r1);

        return $r2;
    }

    public volatile android.graphics.Bitmap getIconBitmap(android.os.UserHandle)
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        android.os.UserHandle r1;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = specialinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.graphics.Bitmap getIconBitmap(android.os.UserHandle)>(r1);

        return $r2;
    }

    android.graphics.drawable.Drawable getIconSubstituteInternal()
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        android.content.pm.ActivityInfo $r1, $r2, $r6;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r3;
        android.content.pm.PackageManager $r4;
        android.content.res.Resources $r5;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        android.graphics.drawable.Drawable r8;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        r8 = null;

     label1:
        $r1 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.ActivityInfo mActivityInfo>;

        $i0 = $r1.<android.content.pm.ActivityInfo: int icon>;

        if $i0 == 0 goto label2;

        $r4 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.PackageManager mPm>;

        $r2 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.ActivityInfo mActivityInfo>;

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        $r6 = r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.content.pm.ActivityInfo mActivityInfo>;

        $i1 = $r6.<android.content.pm.ActivityInfo: int icon>;

        r8 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter: android.graphics.drawable.Drawable loadIconFromResource(android.content.res.Resources,int)>($r5, $i1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResolverListAdapter", "SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON permission granted but couldn\'t find resources for package", $r7);

        r8 = null;

     label4:
        return r8;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public volatile java.lang.String getLabel()
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        $r1 = specialinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: java.lang.String getLabel()>();

        return $r1;
    }

    public volatile java.lang.String getSubLabel()
    {
        com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.app.ResolverListAdapter$ActivityInfoPresentationGetter;

        $r1 = specialinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: java.lang.String getSubLabel()>();

        return $r1;
    }
}
