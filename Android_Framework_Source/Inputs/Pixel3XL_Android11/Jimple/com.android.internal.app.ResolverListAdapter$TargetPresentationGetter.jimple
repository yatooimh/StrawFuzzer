abstract class com.android.internal.app.ResolverListAdapter$TargetPresentationGetter extends java.lang.Object
{
    private final android.content.pm.ApplicationInfo mAi;
    private android.content.Context mCtx;
    private final boolean mHasSubstitutePermission;
    private final int mIconDpi;
    protected android.content.pm.PackageManager mPm;

    void <init>(android.content.Context, int, android.content.pm.ApplicationInfo)
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        int i0, $i1;
        android.content.pm.ApplicationInfo r1;
        java.lang.String $r2;
        android.content.Context r3;
        android.content.pm.PackageManager r4;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r3 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.pm.ApplicationInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.Context mCtx> = r3;

        r4 = virtualinvoke r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.PackageManager mPm> = r4;

        r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi> = r1;

        r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: int mIconDpi> = i0;

        $r2 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i1 = virtualinvoke r4.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON", $r2);

        if $i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: boolean mHasSubstitutePermission> = z0;

        return;
    }

    abstract java.lang.String getAppSubLabelInternal();

    public android.graphics.drawable.Drawable getIcon(android.os.UserHandle)
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        android.os.UserHandle r1;
        android.graphics.drawable.BitmapDrawable $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r1 := @parameter0: android.os.UserHandle;

        $r2 = new android.graphics.drawable.BitmapDrawable;

        $r3 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.Context mCtx>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.graphics.Bitmap getIconBitmap(android.os.UserHandle)>(r1);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r4, $r5);

        return $r2;
    }

    public android.graphics.Bitmap getIconBitmap(android.os.UserHandle)
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2, $r6;
        android.content.pm.ApplicationInfo $r3, $r4, $r5, $r8;
        int $i0, $i1;
        android.content.res.Resources $r7;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        android.os.UserHandle r10;
        android.graphics.drawable.Drawable r11, r12, r14;
        com.android.internal.app.SimpleIconFactory r15;
        android.graphics.Bitmap r16;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r10 := @parameter0: android.os.UserHandle;

        r11 = null;

        $z0 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: boolean mHasSubstitutePermission>;

        if $z0 == 0 goto label1;

        r11 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.graphics.drawable.Drawable getIconSubstituteInternal()>();

     label1:
        r12 = r11;

        if r11 != null goto label5;

        r12 = r11;

     label2:
        $r4 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int icon>;

        if $i0 == 0 goto label3;

        $r6 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.PackageManager mPm>;

        $r5 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi>;

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r5);

        $r8 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int icon>;

        r12 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.graphics.drawable.Drawable loadIconFromResource(android.content.res.Resources,int)>($r7, $i1);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r12 = r11;

     label5:
        r14 = r12;

        if r12 != null goto label6;

        $r3 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi>;

        $r2 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.PackageManager mPm>;

        r14 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r2);

     label6:
        $r1 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.Context mCtx>;

        r15 = staticinvoke <com.android.internal.app.SimpleIconFactory: com.android.internal.app.SimpleIconFactory obtain(android.content.Context)>($r1);

        r16 = virtualinvoke r15.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createUserBadgedIconBitmap(android.graphics.drawable.Drawable,android.os.UserHandle)>(r14, r10);

        virtualinvoke r15.<com.android.internal.app.SimpleIconFactory: void recycle()>();

        return r16;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    abstract android.graphics.drawable.Drawable getIconSubstituteInternal();

    public java.lang.String getLabel()
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        boolean $z0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.CharSequence $r3;
        java.lang.String r4, r5;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r4 = null;

        $z0 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: boolean mHasSubstitutePermission>;

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: java.lang.String getAppSubLabelInternal()>();

     label1:
        r5 = r4;

        if r4 != null goto label2;

        $r2 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.ApplicationInfo mAi>;

        $r1 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: android.content.pm.PackageManager mPm>;

        $r3 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r1);

        r5 = (java.lang.String) $r3;

     label2:
        return r5;
    }

    public java.lang.String getSubLabel()
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        $z0 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: boolean mHasSubstitutePermission>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: java.lang.String getAppSubLabelInternal()>();

        return $r1;
    }

    protected android.graphics.drawable.Drawable loadIconFromResource(android.content.res.Resources, int)
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        android.content.res.Resources r1;
        int i0, $i1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.internal.app.ResolverListAdapter$TargetPresentationGetter: int mIconDpi>;

        $r2 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>(i0, $i1);

        return $r2;
    }

    protected java.lang.String loadLabelFromResource(android.content.res.Resources, int)
    {
        com.android.internal.app.ResolverListAdapter$TargetPresentationGetter r0;
        android.content.res.Resources r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.ResolverListAdapter$TargetPresentationGetter;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        return $r2;
    }
}
