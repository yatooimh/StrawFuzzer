public class com.android.internal.app.ResolverViewPager extends com.android.internal.widget.ViewPager
{
    private boolean mSwipingEnabled;

    public void <init>(android.content.Context)
    {
        com.android.internal.app.ResolverViewPager r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled> = 1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.app.ResolverViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled> = 1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.app.ResolverViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled> = 1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.app.ResolverViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled> = 1;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.app.ResolverViewPager r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.internal.app.ResolverViewPager: boolean isLayoutRtl()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled>;

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.app.ResolverViewPager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        android.view.View r1;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        i8 := @parameter0: int;

        i9 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void onMeasure(int,int)>(i8, i9);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i9);

        if $i2 == -2147483648 goto label1;

        return;

     label1:
        $i3 = virtualinvoke r0.<com.android.internal.app.ResolverViewPager: int getMeasuredWidth()>();

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        i1 = virtualinvoke r0.<com.android.internal.app.ResolverViewPager: int getMeasuredHeight()>();

        i10 = 0;

        i11 = 0;

     label2:
        $i4 = virtualinvoke r0.<com.android.internal.app.ResolverViewPager: int getChildCount()>();

        if i11 >= $i4 goto label4;

        r1 = virtualinvoke r0.<com.android.internal.app.ResolverViewPager: android.view.View getChildAt(int)>(i11);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i1, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, $i6);

        i12 = i10;

        $i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i10 >= $i7 goto label3;

        i12 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

     label3:
        i11 = i11 + 1;

        i10 = i12;

        goto label2;

     label4:
        i13 = i1;

        if i10 <= 0 goto label5;

        i13 = i10;

     label5:
        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i13, 1073741824);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void onMeasure(int,int)>(i0, $i5);

        return;
    }

    void setSwipingEnabled(boolean)
    {
        com.android.internal.app.ResolverViewPager r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ResolverViewPager;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.ResolverViewPager: boolean mSwipingEnabled> = z0;

        return;
    }
}
