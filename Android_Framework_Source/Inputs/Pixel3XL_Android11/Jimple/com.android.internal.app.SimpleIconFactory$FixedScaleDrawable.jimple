public class com.android.internal.app.SimpleIconFactory$FixedScaleDrawable extends android.graphics.drawable.DrawableWrapper
{
    private static final float LEGACY_ICON_SCALE;
    private float mScaleX;
    private float mScaleY;

    public void <init>()
    {
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this: com.android.internal.app.SimpleIconFactory$FixedScaleDrawable;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>()>();

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void <init>(android.graphics.drawable.Drawable)>($r1);

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleX> = 0.46669F;

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleY> = 0.46669F;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r0;
        android.graphics.Canvas r1;
        int i0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Rect $r2, $r3;

        r0 := @this: com.android.internal.app.SimpleIconFactory$FixedScaleDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f0 = r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleX>;

        $f1 = r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleY>;

        $r2 = virtualinvoke r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: android.graphics.Rect getBounds()>();

        $f2 = virtualinvoke $r2.<android.graphics.Rect: float exactCenterX()>();

        $r3 = virtualinvoke r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: android.graphics.Rect getBounds()>();

        $f3 = virtualinvoke $r3.<android.graphics.Rect: float exactCenterY()>();

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>($f0, $f1, $f2, $f3);

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)
    {
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;

        r0 := @this: com.android.internal.app.SimpleIconFactory$FixedScaleDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;

        r0 := @this: com.android.internal.app.SimpleIconFactory$FixedScaleDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        return;
    }

    public void setScale(float)
    {
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int $i0, $i1;
        byte $b2, $b3, $b4, $b5;

        r0 := @this: com.android.internal.app.SimpleIconFactory$FixedScaleDrawable;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: int getIntrinsicHeight()>();

        f1 = (float) $i0;

        $i1 = virtualinvoke r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: int getIntrinsicWidth()>();

        f2 = (float) $i1;

        f3 = f0 * 0.46669F;

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleX> = f3;

        $f4 = 0.46669F * f0;

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleY> = $f4;

        $b2 = f1 cmpl f2;

        if $b2 <= 0 goto label1;

        $b5 = f2 cmpl 0.0F;

        if $b5 <= 0 goto label1;

        $f8 = f2 / f1;

        $f9 = f3 * $f8;

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleX> = $f9;

        goto label2;

     label1:
        $b3 = f2 cmpl f1;

        if $b3 <= 0 goto label2;

        $b4 = f1 cmpl 0.0F;

        if $b4 <= 0 goto label2;

        $f6 = r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleY>;

        $f5 = f1 / f2;

        $f7 = $f6 * $f5;

        r0.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float mScaleY> = $f7;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: float LEGACY_ICON_SCALE> = 0.46669F;

        return;
    }
}
