public class com.android.internal.app.SimpleIconFactory extends java.lang.Object
{
    private static final int AMBIENT_SHADOW_ALPHA;
    private static final float BLUR_FACTOR;
    private static final float CIRCLE_AREA_BY_RECT;
    private static final int DEFAULT_WRAPPER_BACKGROUND;
    private static final int KEY_SHADOW_ALPHA;
    private static final float KEY_SHADOW_DISTANCE;
    private static final float LINEAR_SCALE_SLOPE;
    private static final float MAX_CIRCLE_AREA_FACTOR;
    private static final float MAX_SQUARE_AREA_FACTOR;
    private static final int MIN_VISIBLE_ALPHA;
    private static final float SCALE_NOT_INITIALIZED;
    private static final android.util.Pools$SynchronizedPool sPool;
    private final android.graphics.Rect mAdaptiveIconBounds;
    private float mAdaptiveIconScale;
    private int mBadgeBitmapSize;
    private final android.graphics.Bitmap mBitmap;
    private android.graphics.Paint mBlurPaint;
    private final android.graphics.Rect mBounds;
    private android.graphics.Canvas mCanvas;
    private android.content.Context mContext;
    private android.graphics.BlurMaskFilter mDefaultBlurMaskFilter;
    private android.graphics.Paint mDrawPaint;
    private int mFillResIconDpi;
    private int mIconBitmapSize;
    private final float[] mLeftBorder;
    private final int mMaxSize;
    private final android.graphics.Rect mOldBounds;
    private final byte[] mPixels;
    private android.content.pm.PackageManager mPm;
    private final float[] mRightBorder;
    private final android.graphics.Canvas mScaleCheckCanvas;
    private int mWrapperBackgroundColor;
    private android.graphics.drawable.Drawable mWrapperIcon;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;
        java.lang.Runtime $r1;
        int $i0;

        <com.android.internal.app.SimpleIconFactory: float SCALE_NOT_INITIALIZED> = 0.0F;

        <com.android.internal.app.SimpleIconFactory: int MIN_VISIBLE_ALPHA> = 40;

        <com.android.internal.app.SimpleIconFactory: float MAX_SQUARE_AREA_FACTOR> = 0.6510417F;

        <com.android.internal.app.SimpleIconFactory: float MAX_CIRCLE_AREA_FACTOR> = 0.6597222F;

        <com.android.internal.app.SimpleIconFactory: float LINEAR_SCALE_SLOPE> = 0.040449437F;

        <com.android.internal.app.SimpleIconFactory: float KEY_SHADOW_DISTANCE> = 0.020833334F;

        <com.android.internal.app.SimpleIconFactory: int KEY_SHADOW_ALPHA> = 61;

        <com.android.internal.app.SimpleIconFactory: int DEFAULT_WRAPPER_BACKGROUND> = -1;

        <com.android.internal.app.SimpleIconFactory: float CIRCLE_AREA_BY_RECT> = 0.7853982F;

        <com.android.internal.app.SimpleIconFactory: float BLUR_FACTOR> = 0.010416667F;

        <com.android.internal.app.SimpleIconFactory: int AMBIENT_SHADOW_ALPHA> = 30;

        $r0 = new android.util.Pools$SynchronizedPool;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r1.<java.lang.Runtime: int availableProcessors()>();

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>($i0);

        <com.android.internal.app.SimpleIconFactory: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }

    private void <init>(android.content.Context, int, int, int)
    {
        com.android.internal.app.SimpleIconFactory r0;
        int i0, i1, $i2, i3, i4, i5;
        android.graphics.Rect $r1, $r14, $r15;
        android.graphics.Paint $r2, $r3;
        android.content.pm.PackageManager $r4;
        android.graphics.Canvas $r5, $r9;
        android.graphics.PaintFlagsDrawFilter $r6;
        android.graphics.Bitmap$Config $r7;
        android.graphics.Bitmap $r8, $r10;
        byte[] $r11;
        float[] $r12, $r13;
        android.graphics.BlurMaskFilter $r16;
        float $f0, $f1;
        android.graphics.BlurMaskFilter$Blur $r17;
        android.content.Context r18, r19;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r18 := @parameter0: android.content.Context;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mOldBounds> = $r1;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(3);

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mBlurPaint> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(3);

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint> = $r3;

        r19 = virtualinvoke r18.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.content.Context mContext> = r19;

        $r4 = virtualinvoke r19.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.content.pm.PackageManager mPm> = $r4;

        r0.<com.android.internal.app.SimpleIconFactory: int mIconBitmapSize> = i0;

        r0.<com.android.internal.app.SimpleIconFactory: int mBadgeBitmapSize> = i1;

        r0.<com.android.internal.app.SimpleIconFactory: int mFillResIconDpi> = i3;

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas> = $r5;

        $r6 = new android.graphics.PaintFlagsDrawFilter;

        specialinvoke $r6.<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>(4, 2);

        virtualinvoke $r5.<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>($r6);

        i4 = i0 * 2;

        r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize> = i4;

        $r7 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ALPHA_8>;

        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i4, i4, $r7);

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap mBitmap> = $r8;

        $r9 = new android.graphics.Canvas;

        $r10 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap mBitmap>;

        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r10);

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mScaleCheckCanvas> = $r9;

        i5 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        $i2 = i5 * i5;

        $r11 = newarray (byte)[$i2];

        r0.<com.android.internal.app.SimpleIconFactory: byte[] mPixels> = $r11;

        $r12 = newarray (float)[i5];

        r0.<com.android.internal.app.SimpleIconFactory: float[] mLeftBorder> = $r12;

        $r13 = newarray (float)[i5];

        r0.<com.android.internal.app.SimpleIconFactory: float[] mRightBorder> = $r13;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds> = $r14;

        $r15 = new android.graphics.Rect;

        specialinvoke $r15.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mAdaptiveIconBounds> = $r15;

        r0.<com.android.internal.app.SimpleIconFactory: float mAdaptiveIconScale> = 0.0F;

        $r16 = new android.graphics.BlurMaskFilter;

        $f0 = (float) i0;

        $f1 = $f0 * 0.010416667F;

        $r17 = <android.graphics.BlurMaskFilter$Blur: android.graphics.BlurMaskFilter$Blur NORMAL>;

        specialinvoke $r16.<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter$Blur)>($f1, $r17);

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.BlurMaskFilter mDefaultBlurMaskFilter> = $r16;

        return;
    }

    private static void convertToConvexArray(float[], int, int, int)
    {
        float[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i7, $i9, $i10, i12, i13, i14, $i15, i16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, $f23, $f24, $f25, $f26;
        byte $b5, $b6, $b8, $b11;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        r1 = newarray (float)[$i4];

        i12 = -1;

        f22 = 3.4028235E38F;

        i13 = i1 + 1;

     label1:
        if i13 > i2 goto label9;

        $f0 = r0[i13];

        $b5 = $f0 cmpg -1.0F;

        if $b5 > 0 goto label2;

        goto label8;

     label2:
        $b6 = f22 cmpl 3.4028235E38F;

        if $b6 != 0 goto label3;

        i12 = i1;

        goto label5;

     label3:
        $f2 = r0[i13];

        $f1 = r0[i12];

        $f4 = $f2 - $f1;

        $i7 = i13 - i12;

        $f3 = (float) $i7;

        $f5 = $f4 / $f3;

        $f7 = $f5 - f22;

        $f6 = (float) i0;

        $f8 = $f7 * $f6;

        $b8 = $f8 cmpg 0.0F;

        if $b8 >= 0 goto label5;

        i14 = i12;

     label4:
        i12 = i14;

        if i14 <= i1 goto label5;

        i12 = i14 - 1;

        i14 = i12;

        $f14 = r0[i13];

        $f13 = r0[i12];

        $f16 = $f14 - $f13;

        $i10 = i13 - i12;

        $f15 = (float) $i10;

        $f18 = $f16 / $f15;

        $f17 = r1[i12];

        $f20 = $f18 - $f17;

        $f19 = (float) i0;

        $f21 = $f20 * $f19;

        $b11 = $f21 cmpl 0.0F;

        if $b11 < 0 goto label4;

        goto label5;

     label5:
        $f23 = r0[i13];

        $f24 = r0[i12];

        $f25 = $f23 - $f24;

        $i15 = i13 - i12;

        $f26 = (float) $i15;

        f22 = $f25 / $f26;

        i16 = i12;

     label6:
        if i16 >= i13 goto label7;

        r1[i16] = f22;

        $f11 = r0[i12];

        $i9 = i16 - i12;

        $f9 = (float) $i9;

        $f10 = $f9 * f22;

        $f12 = $f11 + $f10;

        r0[i16] = $f12;

        i16 = i16 + 1;

        goto label6;

     label7:
        i12 = i13;

     label8:
        i13 = i13 + 1;

        goto label1;

     label9:
        return;
    }

    private android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable, float)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.drawable.Drawable r1;
        float f0;
        int $i0;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f0 := @parameter1: float;

        $i0 = r0.<com.android.internal.app.SimpleIconFactory: int mIconBitmapSize>;

        $r2 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,float,int,boolean,boolean)>(r1, f0, $i0, 1, 0);

        return $r2;
    }

    private android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable, float, int, boolean, boolean)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.drawable.Drawable r1, $r13, $r16;
        boolean z0, z1, $z2, $z3;
        android.graphics.Bitmap r2, r23;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, i24, i25, $i26, i27, $i28, i29, $i30, $i31, $i32, $i33;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23, $f24, $f25;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Canvas $r4, $r11, $r24, $r25, $r26, $r27, $r29;
        android.graphics.Rect $r5, $r6, $r10, $r12, $r28;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        java.util.Optional $r14, $r17;
        com.android.internal.app._$$Lambda$SimpleIconFactory$fsx5rlUhrXI5RqytDEKaAnjCy8Q $r15;
        com.android.internal.app._$$Lambda$SimpleIconFactory$PQ2vsLf_JFTvrQBtBGoNtaRuPYY $r18;
        double $d0, $d1;
        android.graphics.drawable.AdaptiveIconDrawable r19;
        android.graphics.drawable.BitmapDrawable r22;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f22 := @parameter1: float;

        i15 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i15, i15, $r3);

        $r4 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r4.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r2);

        $r5 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mOldBounds>;

        $r6 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $z2 = r1 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z2 == 0 goto label4;

        r19 = (android.graphics.drawable.AdaptiveIconDrawable) r1;

        $f8 = (float) i15;

        $f7 = 1.0F - f22;

        $f9 = $f8 * $f7;

        $f10 = $f9 / 2.0F;

        i16 = staticinvoke <java.lang.Math: int round(float)>($f10);

        i17 = i16;

        if z0 == 0 goto label1;

        $f20 = (float) i15;

        $f21 = $f20 * 0.010416667F;

        $d0 = (double) $f21;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i14 = (int) $d1;

        i17 = staticinvoke <java.lang.Math: int max(int,int)>($i14, i16);

     label1:
        $r10 = new android.graphics.Rect;

        $i5 = i15 - i17;

        $i4 = i15 - i17;

        specialinvoke $r10.<android.graphics.Rect: void <init>(int,int,int,int)>(i17, i17, $i5, $i4);

        if z1 == 0 goto label2;

        $i6 = virtualinvoke $r10.<android.graphics.Rect: int width()>();

        i18 = $i6 / 2;

        $i7 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        i19 = $i7 / 2;

        $f11 = staticinvoke <android.graphics.drawable.AdaptiveIconDrawable: float getExtraInsetFraction()>();

        $f12 = $f11 * 2.0F;

        $f13 = $f12 + 1.0F;

        f23 = 1.0F / $f13;

        $i8 = virtualinvoke $r10.<android.graphics.Rect: int width()>();

        $f15 = (float) $i8;

        $f14 = f23 * 2.0F;

        $f16 = $f15 / $f14;

        i20 = (int) $f16;

        $i9 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        $f18 = (float) $i9;

        $f17 = 2.0F * f23;

        $f19 = $f18 / $f17;

        i21 = (int) $f19;

        $r12 = new android.graphics.Rect;

        $i13 = i18 - i20;

        $i12 = i19 - i21;

        $i11 = i18 + i20;

        $i10 = i19 + i21;

        specialinvoke $r12.<android.graphics.Rect: void <init>(int,int,int,int)>($i13, $i12, $i11, $i10);

        $r13 = virtualinvoke r19.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getBackground()>();

        $r14 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r13);

        $r15 = new com.android.internal.app._$$Lambda$SimpleIconFactory$fsx5rlUhrXI5RqytDEKaAnjCy8Q;

        specialinvoke $r15.<com.android.internal.app._$$Lambda$SimpleIconFactory$fsx5rlUhrXI5RqytDEKaAnjCy8Q: void <init>(com.android.internal.app.SimpleIconFactory,android.graphics.Rect)>(r0, $r12);

        virtualinvoke $r14.<java.util.Optional: void ifPresent(java.util.function.Consumer)>($r15);

        $r16 = virtualinvoke r19.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getForeground()>();

        $r17 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r16);

        $r18 = new com.android.internal.app._$$Lambda$SimpleIconFactory$PQ2vsLf_JFTvrQBtBGoNtaRuPYY;

        specialinvoke $r18.<com.android.internal.app._$$Lambda$SimpleIconFactory$PQ2vsLf_JFTvrQBtBGoNtaRuPYY: void <init>(com.android.internal.app.SimpleIconFactory,android.graphics.Rect)>(r0, $r12);

        virtualinvoke $r17.<java.util.Optional: void ifPresent(java.util.function.Consumer)>($r18);

        goto label3;

     label2:
        virtualinvoke r19.<android.graphics.drawable.AdaptiveIconDrawable: void setBounds(android.graphics.Rect)>($r10);

        $r11 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke r19.<android.graphics.drawable.AdaptiveIconDrawable: void draw(android.graphics.Canvas)>($r11);

     label3:
        goto label8;

     label4:
        $z3 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z3 == 0 goto label5;

        r22 = (android.graphics.drawable.BitmapDrawable) r1;

        r23 = virtualinvoke r22.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        if r2 == null goto label5;

        $i3 = virtualinvoke r23.<android.graphics.Bitmap: int getDensity()>();

        if $i3 != 0 goto label5;

        $r7 = r0.<com.android.internal.app.SimpleIconFactory: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        virtualinvoke r22.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>($r9);

     label5:
        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i24 = i15;

        i25 = i15;

        if i0 <= 0 goto label7;

        i24 = i15;

        i25 = i15;

        if i1 <= 0 goto label7;

        $f2 = (float) i0;

        $f1 = (float) i1;

        f0 = $f2 / $f1;

        if i0 <= i1 goto label6;

        $f5 = (float) i15;

        $f6 = $f5 / f0;

        i25 = (int) $f6;

        i24 = i15;

        goto label7;

     label6:
        i24 = i15;

        i25 = i15;

        if i1 <= i0 goto label7;

        $f3 = (float) i15;

        $f4 = $f3 * f0;

        i24 = (int) $f4;

        i25 = i15;

     label7:
        $i26 = i15 - i24;

        i27 = $i26 / 2;

        $i28 = i15 - i25;

        i29 = $i28 / 2;

        $i30 = i27 + i24;

        $i31 = i29 + i25;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i27, i29, $i30, $i31);

        $r24 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r24.<android.graphics.Canvas: int save()>();

        $r25 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        $i32 = i15 / 2;

        $f24 = (float) $i32;

        $i33 = i15 / 2;

        $f25 = (float) $i33;

        virtualinvoke $r25.<android.graphics.Canvas: void scale(float,float,float,float)>(f22, f22, $f24, $f25);

        $r26 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r26);

        $r27 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r27.<android.graphics.Canvas: void restore()>();

     label8:
        $r28 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mOldBounds>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r28);

        $r29 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r29.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r2;
    }

    private android.graphics.Bitmap createIconBitmapNoInsetOrMask(android.graphics.drawable.Drawable, float)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.drawable.Drawable r1;
        float f0;
        int $i0;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f0 := @parameter1: float;

        $i0 = r0.<com.android.internal.app.SimpleIconFactory: int mIconBitmapSize>;

        $r2 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,float,int,boolean,boolean)>(r1, f0, $i0, 0, 1);

        return $r2;
    }

    private static int getAttrDimFromContext(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        android.content.res.Resources r2;
        android.util.TypedValue $r4;
        android.content.res.Resources$Theme $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(i0, $r4, 1);

        if $z0 == 0 goto label1;

        $i1 = $r4.<android.util.TypedValue: int resourceId>;

        $i2 = virtualinvoke r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        return $i2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r6;
    }

    private static int getBadgeSizeFromContext(android.content.Context)
    {
        android.content.Context r0;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.android.internal.app.SimpleIconFactory: int getAttrDimFromContext(android.content.Context,int,java.lang.String)>(r0, 17956950, "Expected theme to define iconfactoryBadgeSize.");

        return $i0;
    }

    private static android.graphics.drawable.Drawable getFullResDefaultActivityIcon(int)
    {
        int i0;
        android.content.res.Resources $r0;
        android.graphics.drawable.Drawable $r1;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>(17629184, i0);

        return $r1;
    }

    private static int getIconSizeFromContext(android.content.Context)
    {
        android.content.Context r0;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.android.internal.app.SimpleIconFactory: int getAttrDimFromContext(android.content.Context,int,java.lang.String)>(r0, 17956951, "Expected theme to define iconfactoryIconSize.");

        return $i0;
    }

    private float getScale(android.graphics.drawable.Drawable, android.graphics.RectF)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.RectF r1;
        java.nio.ByteBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i11, $i12, $i13, $i14, $i16, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i28, i29, i30, i31, i32, i33, i34, i35, $i36, i37, i38, i39, i40, i41, i43, i44, i45, i46, i47, i49, i50, i51, i52;
        boolean $z0, $z1;
        float[] $r4, $r5, $r16, $r17, $r18, $r19, $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, f29, f30, f31, f32, f33;
        byte $b7, $b9, $b10, $b15, $b17, $b27;
        android.graphics.Rect $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r22;
        double $d0, $d1;
        byte[] $r21, $r27;
        short $s18;
        java.lang.Throwable $r23;
        android.graphics.drawable.Drawable r24;
        android.graphics.Bitmap $r25, $r28;
        android.graphics.Canvas $r26;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r24 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.graphics.RectF;

        entermonitor r0;

     label01:
        $z0 = r24 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z0 == 0 goto label06;

        $f27 = r0.<com.android.internal.app.SimpleIconFactory: float mAdaptiveIconScale>;

        $b27 = $f27 cmpl 0.0F;

        if $b27 == 0 goto label06;

     label02:
        if r1 == null goto label04;

     label03:
        $r22 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mAdaptiveIconBounds>;

        virtualinvoke r1.<android.graphics.RectF: void set(android.graphics.Rect)>($r22);

     label04:
        f28 = r0.<com.android.internal.app.SimpleIconFactory: float mAdaptiveIconScale>;

     label05:
        exitmonitor r0;

        return f28;

     label06:
        i28 = virtualinvoke r24.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i29 = virtualinvoke r24.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label07:
        if i28 <= 0 goto label13;

        if i29 > 0 goto label08;

        goto label13;

     label08:
        $i21 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        if i28 > $i21 goto label11;

     label09:
        i30 = i28;

        i31 = i29;

     label10:
        $i26 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        if i29 <= $i26 goto label24;

     label11:
        i32 = staticinvoke <java.lang.Math: int max(int,int)>(i28, i29);

        $i22 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        $i23 = $i22 * i28;

        i30 = $i23 / i32;

        $i24 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        $i25 = $i24 * i29;

        i31 = $i25 / i32;

     label12:
        goto label24;

     label13:
        if i28 <= 0 goto label17;

     label14:
        $i20 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        if i28 <= $i20 goto label16;

     label15:
        goto label17;

     label16:
        goto label18;

     label17:
        i28 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

     label18:
        i30 = i28;

        if i29 <= 0 goto label22;

     label19:
        $i19 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        if i29 <= $i19 goto label21;

     label20:
        goto label22;

     label21:
        i33 = i29;

        goto label23;

     label22:
        i33 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

     label23:
        i31 = i33;

     label24:
        $r25 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r25.<android.graphics.Bitmap: void eraseColor(int)>(0);

        virtualinvoke r24.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i30, i31);

        $r26 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mScaleCheckCanvas>;

        virtualinvoke r24.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r26);

        $r27 = r0.<com.android.internal.app.SimpleIconFactory: byte[] mPixels>;

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r27);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r28 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r28.<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>(r2);

     label25:
        i34 = -1;

        i35 = -1;

     label26:
        $i36 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

        i37 = $i36 + 1;

     label27:
        i38 = -1;

        i39 = 0;

     label28:
        i0 = r0.<com.android.internal.app.SimpleIconFactory: int mMaxSize>;

     label29:
        i40 = 0;

     label30:
        if i40 >= i31 goto label42;

        i41 = -1;

        i43 = 0;

        i44 = i39;

        i45 = -1;

     label31:
        if i43 >= i30 goto label36;

        i46 = i45;

     label32:
        $r21 = r0.<com.android.internal.app.SimpleIconFactory: byte[] mPixels>;

        $b17 = $r21[i44];

        $s18 = $b17 & 255;

        if $s18 <= 40 goto label35;

     label33:
        i47 = i45;

        if i45 != -1 goto label34;

        i47 = i43;

     label34:
        i46 = i47;

        i41 = i43;

     label35:
        i44 = i44 + 1;

        i43 = i43 + 1;

        i45 = i46;

        goto label31;

     label36:
        $i16 = i0 - i30;

        i1 = i44 + $i16;

     label37:
        $r19 = r0.<com.android.internal.app.SimpleIconFactory: float[] mLeftBorder>;

        $f25 = (float) i45;

        $r19[i40] = $f25;

        $r20 = r0.<com.android.internal.app.SimpleIconFactory: float[] mRightBorder>;

        $f26 = (float) i41;

        $r20[i40] = $f26;

     label38:
        i49 = i34;

        i50 = i37;

        i51 = i38;

        if i45 == -1 goto label41;

        i49 = i34;

        if i34 != -1 goto label39;

        i49 = i40;

     label39:
        i50 = staticinvoke <java.lang.Math: int min(int,int)>(i37, i45);

        i51 = staticinvoke <java.lang.Math: int max(int,int)>(i38, i41);

     label40:
        i35 = i40;

     label41:
        i40 = i40 + 1;

        i34 = i49;

        i37 = i50;

        i38 = i51;

        i39 = i1;

        goto label30;

     label42:
        if i34 == -1 goto label62;

        if i38 != -1 goto label43;

        goto label62;

     label43:
        $r4 = r0.<com.android.internal.app.SimpleIconFactory: float[] mLeftBorder>;

        staticinvoke <com.android.internal.app.SimpleIconFactory: void convertToConvexArray(float[],int,int,int)>($r4, 1, i34, i35);

        $r5 = r0.<com.android.internal.app.SimpleIconFactory: float[] mRightBorder>;

        staticinvoke <com.android.internal.app.SimpleIconFactory: void convertToConvexArray(float[],int,int,int)>($r5, -1, i34, i35);

     label44:
        f29 = 0.0F;

        i52 = 0;

     label45:
        if i52 >= i31 goto label50;

     label46:
        $r16 = r0.<com.android.internal.app.SimpleIconFactory: float[] mLeftBorder>;

        $f20 = $r16[i52];

        $b15 = $f20 cmpg -1.0F;

        if $b15 > 0 goto label48;

     label47:
        goto label49;

     label48:
        $r17 = r0.<com.android.internal.app.SimpleIconFactory: float[] mRightBorder>;

        $f22 = $r17[i52];

        $r18 = r0.<com.android.internal.app.SimpleIconFactory: float[] mLeftBorder>;

        $f21 = $r18[i52];

        $f23 = $f22 - $f21;

        $f24 = $f23 + 1.0F;

        f29 = f29 + $f24;

     label49:
        i52 = i52 + 1;

        goto label45;

     label50:
        $i2 = i35 + 1;

        $i5 = $i2 - i34;

        $i3 = i38 + 1;

        $i4 = $i3 - i37;

        $i6 = $i5 * $i4;

        $f0 = (float) $i6;

        f30 = f29 / $f0;

        $b7 = f30 cmpg 0.7853982F;

        if $b7 >= 0 goto label51;

        f31 = 0.6597222F;

        goto label52;

     label51:
        $f1 = 1.0F - f30;

        $f2 = $f1 * 0.040449437F;

        f31 = $f2 + 0.6510417F;

     label52:
        $r6 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $r6.<android.graphics.Rect: int left> = i37;

        $r7 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $r7.<android.graphics.Rect: int right> = i38;

        $r8 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $r8.<android.graphics.Rect: int top> = i34;

        $r9 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $r9.<android.graphics.Rect: int bottom> = i35;

     label53:
        if r1 == null goto label56;

     label54:
        $r12 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $i11 = $r12.<android.graphics.Rect: int left>;

        $f7 = (float) $i11;

        $f6 = (float) i30;

        $f19 = $f7 / $f6;

        $r13 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $i12 = $r13.<android.graphics.Rect: int top>;

        $f9 = (float) $i12;

        $f8 = (float) i31;

        $f18 = $f9 / $f8;

        $r14 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $i13 = $r14.<android.graphics.Rect: int right>;

        $f11 = (float) $i13;

        $f10 = (float) i30;

        $f12 = $f11 / $f10;

        $f17 = 1.0F - $f12;

        $r15 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        $i14 = $r15.<android.graphics.Rect: int bottom>;

        $f14 = (float) $i14;

        $f13 = (float) i31;

        $f15 = $f14 / $f13;

        $f16 = 1.0F - $f15;

        virtualinvoke r1.<android.graphics.RectF: void set(float,float,float,float)>($f19, $f18, $f17, $f16);

     label55:
        goto label56;

     label56:
        $i8 = i30 * i31;

        $f3 = (float) $i8;

        f32 = f29 / $f3;

        $b9 = f32 cmpl f31;

        if $b9 <= 0 goto label59;

     label57:
        $f5 = f31 / f32;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f33 = (float) $d1;

     label58:
        goto label60;

     label59:
        f33 = 1.0F;

     label60:
        $z1 = r24 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z1 == 0 goto label61;

        $f4 = r0.<com.android.internal.app.SimpleIconFactory: float mAdaptiveIconScale>;

        $b10 = $f4 cmpl 0.0F;

        if $b10 != 0 goto label61;

        r0.<com.android.internal.app.SimpleIconFactory: float mAdaptiveIconScale> = f33;

        $r11 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mAdaptiveIconBounds>;

        $r10 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Rect mBounds>;

        virtualinvoke $r11.<android.graphics.Rect: void set(android.graphics.Rect)>($r10);

     label61:
        exitmonitor r0;

        return f33;

     label62:
        exitmonitor r0;

        return 1.0F;

     label63:
        $r23 := @caughtexception;

        exitmonitor r0;

        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label63;
        catch java.lang.Throwable from label03 to label04 with label63;
        catch java.lang.Throwable from label04 to label05 with label63;
        catch java.lang.Throwable from label06 to label07 with label63;
        catch java.lang.Throwable from label08 to label09 with label63;
        catch java.lang.Throwable from label10 to label11 with label63;
        catch java.lang.Throwable from label11 to label12 with label63;
        catch java.lang.Throwable from label14 to label15 with label63;
        catch java.lang.Throwable from label17 to label18 with label63;
        catch java.lang.Throwable from label19 to label20 with label63;
        catch java.lang.Throwable from label22 to label23 with label63;
        catch java.lang.Throwable from label24 to label25 with label63;
        catch java.lang.Throwable from label26 to label27 with label63;
        catch java.lang.Throwable from label28 to label29 with label63;
        catch java.lang.Throwable from label32 to label33 with label63;
        catch java.lang.Throwable from label37 to label38 with label63;
        catch java.lang.Throwable from label39 to label40 with label63;
        catch java.lang.Throwable from label43 to label44 with label63;
        catch java.lang.Throwable from label46 to label47 with label63;
        catch java.lang.Throwable from label48 to label49 with label63;
        catch java.lang.Throwable from label52 to label53 with label63;
        catch java.lang.Throwable from label54 to label55 with label63;
        catch java.lang.Throwable from label57 to label58 with label63;
        catch java.lang.Throwable from label60 to label61 with label63;
    }

    private android.graphics.Bitmap maskBitmapToCircle(android.graphics.Bitmap)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.Bitmap r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Canvas $r7;
        android.graphics.Paint $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        double $d0, $d1;
        android.graphics.PorterDuffXfermode $r9;
        android.graphics.PorterDuff$Mode $r10;
        android.graphics.Rect $r12;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.Bitmap;

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i2, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>(int)>(7);

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i3;

        $f1 = $f0 * 0.010416667F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i4 = (int) $d1;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 1);

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-1);

        virtualinvoke $r7.<android.graphics.Canvas: void drawARGB(int,int,int,int)>(0, 0, 0, 0);

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i5;

        $f3 = $f2 / 2.0F;

        $i6 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f4 = (float) $i6;

        $f5 = $f4 / 2.0F;

        $i7 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f6 = (float) $i7;

        $f8 = $f6 / 2.0F;

        $f7 = (float) i0;

        $f9 = $f8 - $f7;

        virtualinvoke $r7.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f3, $f5, $f9, $r8);

        $r9 = new android.graphics.PorterDuffXfermode;

        $r10 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        specialinvoke $r9.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r10);

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r9);

        $r12 = new android.graphics.Rect;

        $i8 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i9 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        specialinvoke $r12.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i8, $i9);

        virtualinvoke $r7.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r1, $r12, $r12, $r8);

        return r2;
    }

    private android.graphics.drawable.Drawable normalizeAndWrapToAdaptiveIcon(android.graphics.drawable.Drawable, android.graphics.RectF, float[])
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.drawable.Drawable r1, $r5, $r6, $r7, $r8, $r11, $r12, r13;
        android.graphics.RectF r2;
        float[] r3;
        android.graphics.drawable.AdaptiveIconDrawable r4;
        float f0, f1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.ColorDrawable $r9;
        android.content.Context $r10;
        com.android.internal.app.SimpleIconFactory$FixedScaleDrawable r14;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: float[];

        $r5 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable mWrapperIcon>;

        if $r5 != null goto label1;

        $r10 = r0.<com.android.internal.app.SimpleIconFactory: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302879);

        $r12 = virtualinvoke $r11.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable mWrapperIcon> = $r12;

     label1:
        $r6 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable mWrapperIcon>;

        r4 = (android.graphics.drawable.AdaptiveIconDrawable) $r6;

        virtualinvoke r4.<android.graphics.drawable.AdaptiveIconDrawable: void setBounds(int,int,int,int)>(0, 0, 1, 1);

        f0 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: float getScale(android.graphics.drawable.Drawable,android.graphics.RectF)>(r1, r2);

        f1 = f0;

        r13 = r1;

        $z0 = r1 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r4.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getForeground()>();

        r14 = (com.android.internal.app.SimpleIconFactory$FixedScaleDrawable) $r7;

        virtualinvoke r14.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: void setDrawable(android.graphics.drawable.Drawable)>(r1);

        virtualinvoke r14.<com.android.internal.app.SimpleIconFactory$FixedScaleDrawable: void setScale(float)>(f0);

        r13 = r4;

        f1 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: float getScale(android.graphics.drawable.Drawable,android.graphics.RectF)>(r4, r2);

        $r8 = virtualinvoke r4.<android.graphics.drawable.AdaptiveIconDrawable: android.graphics.drawable.Drawable getBackground()>();

        $r9 = (android.graphics.drawable.ColorDrawable) $r8;

        $i0 = r0.<com.android.internal.app.SimpleIconFactory: int mWrapperBackgroundColor>;

        virtualinvoke $r9.<android.graphics.drawable.ColorDrawable: void setColor(int)>($i0);

     label2:
        r3[0] = f1;

        return r13;
    }

    public static com.android.internal.app.SimpleIconFactory obtain(android.content.Context)
    {
        android.content.Context r0;
        com.android.internal.app.SimpleIconFactory r1, $r5, r6;
        android.util.Pools$SynchronizedPool $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1, i2;
        android.app.ActivityManager r7;

        r0 := @parameter0: android.content.Context;

        $r2 = <com.android.internal.app.SimpleIconFactory: android.util.Pools$SynchronizedPool sPool>;

        $r3 = virtualinvoke $r2.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r1 = (com.android.internal.app.SimpleIconFactory) $r3;

        r6 = r1;

        if r1 != null goto label3;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r7 = (android.app.ActivityManager) $r4;

        if r7 != null goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = virtualinvoke r7.<android.app.ActivityManager: int getLauncherLargeIconDensity()>();

     label2:
        $r5 = new com.android.internal.app.SimpleIconFactory;

        $i0 = staticinvoke <com.android.internal.app.SimpleIconFactory: int getIconSizeFromContext(android.content.Context)>(r0);

        $i1 = staticinvoke <com.android.internal.app.SimpleIconFactory: int getBadgeSizeFromContext(android.content.Context)>(r0);

        specialinvoke $r5.<com.android.internal.app.SimpleIconFactory: void <init>(android.content.Context,int,int,int)>(r0, i2, $i0, $i1);

        r6 = $r5;

        virtualinvoke $r5.<com.android.internal.app.SimpleIconFactory: void setWrapperBackgroundColor(int)>(-1);

     label3:
        return r6;
    }

    private void recreateIcon(android.graphics.Bitmap, android.graphics.BlurMaskFilter, int, int, android.graphics.Canvas)
    {
        com.android.internal.app.SimpleIconFactory r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Canvas r1;
        int[] r2;
        android.graphics.Paint $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Throwable $r12;
        android.graphics.Bitmap r13, r15;
        android.graphics.BlurMaskFilter r14;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r13 := @parameter0: android.graphics.Bitmap;

        r14 := @parameter1: android.graphics.BlurMaskFilter;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: android.graphics.Canvas;

        entermonitor r0;

     label1:
        r2 = newarray (int)[2];

        $r3 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mBlurPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>(r14);

        $r5 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mBlurPaint>;

        r15 = virtualinvoke r13.<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>($r5, r2);

        $r6 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>(i0);

        $i2 = r2[0];

        $f1 = (float) $i2;

        $i3 = r2[1];

        $f0 = (float) $i3;

        $r7 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r15, $f1, $f0, $r7);

        $r8 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setAlpha(int)>(i1);

        $i4 = r2[0];

        $f6 = (float) $i4;

        $i5 = r2[1];

        $f4 = (float) $i5;

        $i6 = r0.<com.android.internal.app.SimpleIconFactory: int mIconBitmapSize>;

        $f2 = (float) $i6;

        $f3 = $f2 * 0.020833334F;

        $f5 = $f4 + $f3;

        $r9 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r15, $f6, $f5, $r9);

        $r10 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>(255);

        $r11 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Paint mDrawPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r13, 0.0F, 0.0F, $r11);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void recreateIcon(android.graphics.Bitmap, android.graphics.Canvas)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.Canvas r1;
        android.graphics.BlurMaskFilter $r2;
        java.lang.Throwable $r3;
        android.graphics.Bitmap r4;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r4 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: android.graphics.Canvas;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.BlurMaskFilter mDefaultBlurMaskFilter>;

        specialinvoke r0.<com.android.internal.app.SimpleIconFactory: void recreateIcon(android.graphics.Bitmap,android.graphics.BlurMaskFilter,int,int,android.graphics.Canvas)>(r4, $r2, 30, 61, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.graphics.Bitmap createAppBadgedIconBitmap(android.graphics.drawable.Drawable, android.graphics.Bitmap)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.Canvas $r1, $r12, $r14, r16;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7;
        float $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8;
        android.graphics.drawable.Drawable r2, r4;
        android.graphics.Bitmap r3, $r5, r6, r11, $r13, r15;
        android.graphics.drawable.BitmapDrawable $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r2 := @parameter0: android.graphics.drawable.Drawable;

        r3 := @parameter1: android.graphics.Bitmap;

        r4 = r2;

        if r2 != null goto label1;

        $i2 = r0.<com.android.internal.app.SimpleIconFactory: int mFillResIconDpi>;

        r4 = staticinvoke <com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable getFullResDefaultActivityIcon(int)>($i2);

     label1:
        i3 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i4 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i4 <= i3 goto label2;

        if i3 <= 0 goto label2;

        $f6 = (float) i4;

        $f5 = (float) i3;

        f7 = $f6 / $f5;

        goto label3;

     label2:
        f7 = 1.0F;

        if i3 <= i4 goto label3;

        f7 = 1.0F;

        if i4 <= 0 goto label3;

        $f4 = (float) i3;

        $f3 = (float) i4;

        f7 = $f4 / $f3;

     label3:
        $r5 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmapNoInsetOrMask(android.graphics.drawable.Drawable,float)>(r4, f7);

        r6 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap maskBitmapToCircle(android.graphics.Bitmap)>($r5);

        $r7 = new android.graphics.drawable.BitmapDrawable;

        $r8 = r0.<com.android.internal.app.SimpleIconFactory: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r7.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r9, r6);

        $f8 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: float getScale(android.graphics.drawable.Drawable,android.graphics.RectF)>($r7, null);

        r11 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,float)>($r7, $f8);

        $r12 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r12.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r11);

        $r13 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>(r11);

        $r14 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        specialinvoke r0.<com.android.internal.app.SimpleIconFactory: void recreateIcon(android.graphics.Bitmap,android.graphics.Canvas)>($r13, $r14);

        if r3 == null goto label4;

        i5 = r0.<com.android.internal.app.SimpleIconFactory: int mBadgeBitmapSize>;

        r15 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r3, i5, i5, 0);

        r16 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        i6 = r0.<com.android.internal.app.SimpleIconFactory: int mIconBitmapSize>;

        i7 = r0.<com.android.internal.app.SimpleIconFactory: int mBadgeBitmapSize>;

        $i0 = i6 - i7;

        $f2 = (float) $i0;

        $i1 = i6 - i7;

        $f1 = (float) $i1;

        virtualinvoke r16.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r15, $f2, $f1, null);

     label4:
        $r1 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r11;
    }

    android.graphics.Bitmap createUserBadgedIconBitmap(android.graphics.drawable.Drawable, android.os.UserHandle)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.os.UserHandle r1;
        float[] r2;
        float $f0;
        boolean $z0, $z1;
        com.android.internal.app.SimpleIconFactory$FixedSizeBitmapDrawable $r3;
        android.content.pm.PackageManager $r4;
        android.graphics.drawable.BitmapDrawable $r5;
        android.graphics.Canvas $r6, $r8, $r9;
        android.graphics.Bitmap $r7, r13;
        int $i0;
        android.graphics.drawable.Drawable r10, r11, r12, r15;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r10 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.os.UserHandle;

        r2 = newarray (float)[1];

        r11 = r10;

        if r10 != null goto label1;

        $i0 = r0.<com.android.internal.app.SimpleIconFactory: int mFillResIconDpi>;

        r11 = staticinvoke <com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable getFullResDefaultActivityIcon(int)>($i0);

     label1:
        r12 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.drawable.Drawable normalizeAndWrapToAdaptiveIcon(android.graphics.drawable.Drawable,android.graphics.RectF,float[])>(r11, null, r2);

        $f0 = r2[0];

        r13 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,float)>(r12, $f0);

        $z0 = r12 instanceof android.graphics.drawable.AdaptiveIconDrawable;

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r6.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r13);

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>(r13);

        $r8 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        specialinvoke r0.<com.android.internal.app.SimpleIconFactory: void recreateIcon(android.graphics.Bitmap,android.graphics.Canvas)>($r7, $r8);

        $r9 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke $r9.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

     label2:
        if r1 == null goto label5;

        $r3 = new com.android.internal.app.SimpleIconFactory$FixedSizeBitmapDrawable;

        specialinvoke $r3.<com.android.internal.app.SimpleIconFactory$FixedSizeBitmapDrawable: void <init>(android.graphics.Bitmap)>(r13);

        $r4 = r0.<com.android.internal.app.SimpleIconFactory: android.content.pm.PackageManager mPm>;

        r15 = virtualinvoke $r4.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>($r3, r1);

        $z1 = r15 instanceof android.graphics.drawable.BitmapDrawable;

        if $z1 == 0 goto label3;

        $r5 = (android.graphics.drawable.BitmapDrawable) r15;

        r13 = virtualinvoke $r5.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        goto label4;

     label3:
        r13 = specialinvoke r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,float)>(r15, 1.0F);

     label4:
        goto label5;

     label5:
        return r13;
    }

    public void lambda$createIconBitmap$0$SimpleIconFactory(android.graphics.Rect, android.graphics.drawable.Drawable)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.Canvas $r3;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        $r3 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r3);

        return;
    }

    public void lambda$createIconBitmap$1$SimpleIconFactory(android.graphics.Rect, android.graphics.drawable.Drawable)
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.Canvas $r3;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        $r3 = r0.<com.android.internal.app.SimpleIconFactory: android.graphics.Canvas mCanvas>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r3);

        return;
    }

    public void recycle()
    {
        com.android.internal.app.SimpleIconFactory r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        virtualinvoke r0.<com.android.internal.app.SimpleIconFactory: void setWrapperBackgroundColor(int)>(-1);

        $r1 = <com.android.internal.app.SimpleIconFactory: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    void setWrapperBackgroundColor(int)
    {
        com.android.internal.app.SimpleIconFactory r0;
        int $i0, i1;

        r0 := @this: com.android.internal.app.SimpleIconFactory;

        i1 := @parameter0: int;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        if $i0 >= 255 goto label1;

        i1 = -1;

        goto label1;

     label1:
        r0.<com.android.internal.app.SimpleIconFactory: int mWrapperBackgroundColor> = i1;

        return;
    }
}
