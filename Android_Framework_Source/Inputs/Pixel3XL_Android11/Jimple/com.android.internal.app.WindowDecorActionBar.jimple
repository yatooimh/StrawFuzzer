public class com.android.internal.app.WindowDecorActionBar extends android.app.ActionBar implements com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
{
    static final boolean $assertionsDisabled;
    private static final int CONTEXT_DISPLAY_NORMAL;
    private static final int CONTEXT_DISPLAY_SPLIT;
    private static final long FADE_IN_DURATION_MS;
    private static final long FADE_OUT_DURATION_MS;
    private static final int INVALID_POSITION;
    private static final java.lang.String TAG;
    android.view.ActionMode mActionMode;
    private android.app.Activity mActivity;
    private com.android.internal.widget.ActionBarContainer mContainerView;
    private boolean mContentAnimations;
    private android.view.View mContentView;
    private android.content.Context mContext;
    private int mContextDisplayMode;
    private com.android.internal.widget.ActionBarContextView mContextView;
    private int mCurWindowVisibility;
    private android.animation.Animator mCurrentShowAnim;
    private com.android.internal.widget.DecorToolbar mDecorToolbar;
    android.view.ActionMode mDeferredDestroyActionMode;
    android.view.ActionMode$Callback mDeferredModeDestroyCallback;
    private android.app.Dialog mDialog;
    private boolean mDisplayHomeAsUpSet;
    private boolean mHasEmbeddedTabs;
    private boolean mHiddenByApp;
    private boolean mHiddenBySystem;
    final android.animation.Animator$AnimatorListener mHideListener;
    boolean mHideOnContentScroll;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private boolean mNowShowing;
    private com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout;
    private int mSavedTabPosition;
    private com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab;
    private boolean mShowHideAnimationEnabled;
    final android.animation.Animator$AnimatorListener mShowListener;
    private boolean mShowingForMode;
    private com.android.internal.widget.ActionBarContainer mSplitView;
    private com.android.internal.widget.ScrollingTabContainerView mTabScrollView;
    private java.util.ArrayList mTabs;
    private android.content.Context mThemedContext;
    final android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener;

    static void <clinit>()
    {
        <com.android.internal.app.WindowDecorActionBar: java.lang.String TAG> = "WindowDecorActionBar";

        <com.android.internal.app.WindowDecorActionBar: int INVALID_POSITION> = -1;

        <com.android.internal.app.WindowDecorActionBar: long FADE_OUT_DURATION_MS> = 100L;

        <com.android.internal.app.WindowDecorActionBar: long FADE_IN_DURATION_MS> = 200L;

        <com.android.internal.app.WindowDecorActionBar: int CONTEXT_DISPLAY_SPLIT> = 1;

        <com.android.internal.app.WindowDecorActionBar: int CONTEXT_DISPLAY_NORMAL> = 0;

        <com.android.internal.app.WindowDecorActionBar: boolean $assertionsDisabled> = 0;

        return;
    }

    public void <init>(android.app.Activity)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        java.util.ArrayList $r1, $r2;
        com.android.internal.app.WindowDecorActionBar$1 $r3;
        com.android.internal.app.WindowDecorActionBar$2 $r4;
        com.android.internal.app.WindowDecorActionBar$3 $r5;
        android.view.Window $r6, $r8;
        android.app.Activity $r7, r10;
        android.view.View $r9, r11;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r10 := @parameter0: android.app.Activity;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r1;

        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new com.android.internal.app.WindowDecorActionBar$1;

        specialinvoke $r3.<com.android.internal.app.WindowDecorActionBar$1: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mHideListener> = $r3;

        $r4 = new com.android.internal.app.WindowDecorActionBar$2;

        specialinvoke $r4.<com.android.internal.app.WindowDecorActionBar$2: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mShowListener> = $r4;

        $r5 = new com.android.internal.app.WindowDecorActionBar$3;

        specialinvoke $r5.<com.android.internal.app.WindowDecorActionBar$3: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = $r5;

        r0.<com.android.internal.app.WindowDecorActionBar: android.app.Activity mActivity> = r10;

        $r6 = virtualinvoke r10.<android.app.Activity: android.view.Window getWindow()>();

        r11 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.view.Window getWindow()>();

        z0 = virtualinvoke $r8.<android.view.Window: boolean hasFeature(int)>(9);

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void init(android.view.View)>(r11);

        if z0 != 0 goto label1;

        $r9 = virtualinvoke r11.<android.view.View: android.view.View findViewById(int)>(16908290);

        r0.<com.android.internal.app.WindowDecorActionBar: android.view.View mContentView> = $r9;

     label1:
        return;
    }

    public void <init>(android.app.Dialog)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.Dialog r1;
        java.util.ArrayList $r2, $r3;
        com.android.internal.app.WindowDecorActionBar$1 $r4;
        com.android.internal.app.WindowDecorActionBar$2 $r5;
        com.android.internal.app.WindowDecorActionBar$3 $r6;
        android.view.Window $r7;
        android.view.View $r8;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.Dialog;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r3;

        r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r4 = new com.android.internal.app.WindowDecorActionBar$1;

        specialinvoke $r4.<com.android.internal.app.WindowDecorActionBar$1: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mHideListener> = $r4;

        $r5 = new com.android.internal.app.WindowDecorActionBar$2;

        specialinvoke $r5.<com.android.internal.app.WindowDecorActionBar$2: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mShowListener> = $r5;

        $r6 = new com.android.internal.app.WindowDecorActionBar$3;

        specialinvoke $r6.<com.android.internal.app.WindowDecorActionBar$3: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = $r6;

        r0.<com.android.internal.app.WindowDecorActionBar: android.app.Dialog mDialog> = r1;

        $r7 = virtualinvoke r1.<android.app.Dialog: android.view.Window getWindow()>();

        $r8 = virtualinvoke $r7.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void init(android.view.View)>($r8);

        return;
    }

    public void <init>(android.view.View)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.View r1;
        java.util.ArrayList $r2, $r3;
        com.android.internal.app.WindowDecorActionBar$1 $r4;
        com.android.internal.app.WindowDecorActionBar$2 $r5;
        com.android.internal.app.WindowDecorActionBar$3 $r6;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r3;

        r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r4 = new com.android.internal.app.WindowDecorActionBar$1;

        specialinvoke $r4.<com.android.internal.app.WindowDecorActionBar$1: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mHideListener> = $r4;

        $r5 = new com.android.internal.app.WindowDecorActionBar$2;

        specialinvoke $r5.<com.android.internal.app.WindowDecorActionBar$2: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mShowListener> = $r5;

        $r6 = new com.android.internal.app.WindowDecorActionBar$3;

        specialinvoke $r6.<com.android.internal.app.WindowDecorActionBar$3: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = $r6;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void init(android.view.View)>(r1);

        return;
    }

    static boolean access$000(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        return $z0;
    }

    static android.view.View access$100(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContextView access$1000(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContextView $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        return $r1;
    }

    static com.android.internal.widget.DecorToolbar access$1100(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        return $r1;
    }

    static android.content.Context access$1200(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        return $r1;
    }

    static com.android.internal.widget.ScrollingTabContainerView access$1300(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ScrollingTabContainerView $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$200(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$300(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        return $r1;
    }

    static int access$400(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int $i0;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $i0 = r0.<com.android.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        return $i0;
    }

    static android.animation.Animator access$502(com.android.internal.app.WindowDecorActionBar, android.animation.Animator)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.animation.Animator r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter1: android.animation.Animator;

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim> = r1;

        return r1;
    }

    static com.android.internal.widget.ActionBarOverlayLayout access$600(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout $r1;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        return $r1;
    }

    static boolean access$700(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        return $z0;
    }

    static boolean access$800(com.android.internal.app.WindowDecorActionBar)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        return $z0;
    }

    static boolean access$900(boolean, boolean, boolean)
    {
        boolean z0, z1, z2, $z3;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $z3 = staticinvoke <com.android.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>(z0, z1, z2);

        return $z3;
    }

    private static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean z0, z1, z2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z2 == 0 goto label1;

        return 1;

     label1:
        if z0 != 0 goto label3;

        if z1 == 0 goto label2;

        goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void cleanupTabs()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ScrollingTabContainerView r1;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>(null);

     label1:
        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.internal.widget.ScrollingTabContainerView: void removeAllTabs()>();

     label2:
        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        return;
    }

    private void configureTab(android.app.ActionBar$Tab, int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, i1, i2;
        android.app.ActionBar$TabListener $r1;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r7, r9;
        android.app.ActionBar$Tab r8;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r8 := @parameter0: android.app.ActionBar$Tab;

        i1 := @parameter1: int;

        r9 = (com.android.internal.app.WindowDecorActionBar$TabImpl) r8;

        $r1 = virtualinvoke r9.<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        if $r1 == null goto label3;

        virtualinvoke r9.<com.android.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(i1);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r9);

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = i1 + 1;

     label1:
        if i2 >= i0 goto label2;

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (com.android.internal.app.WindowDecorActionBar$TabImpl) $r6;

        virtualinvoke $r7.<com.android.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");

        throw $r2;
    }

    private void ensureTabsExist()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout r2;
        com.android.internal.widget.ScrollingTabContainerView $r3, $r4;
        android.content.Context $r5;
        boolean $z0;
        int $i0;
        com.android.internal.widget.DecorToolbar $r6;
        com.android.internal.widget.ActionBarContainer $r7;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = new com.android.internal.widget.ScrollingTabContainerView;

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r5);

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r6.<com.android.internal.widget.DecorToolbar: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>($r4);

        goto label5;

     label2:
        $i0 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        if $i0 != 2 goto label3;

        virtualinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r2 == null goto label4;

        virtualinvoke r2.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

        goto label4;

     label3:
        virtualinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label4:
        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>($r4);

     label5:
        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView> = $r4;

        return;
    }

    private com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.View r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        java.lang.IllegalStateException $r8;
        android.widget.Toolbar $r10;
        com.android.internal.widget.DecorToolbar $r11, $r12;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof com.android.internal.widget.DecorToolbar;

        if $z0 == 0 goto label1;

        $r12 = (com.android.internal.widget.DecorToolbar) r1;

        return $r12;

     label1:
        $z1 = r1 instanceof android.widget.Toolbar;

        if $z1 == 0 goto label2;

        $r10 = (android.widget.Toolbar) r1;

        $r11 = virtualinvoke $r10.<android.widget.Toolbar: com.android.internal.widget.DecorToolbar getWrapper()>();

        return $r11;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private void hideForActionMode()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 == 0 goto label2;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 0;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label1:
        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void init(android.view.View)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout r1;
        android.view.View $r2, $r3, $r5, $r7, $r9, r19;
        com.android.internal.widget.DecorToolbar $r4, $r16, $r17, r20;
        com.android.internal.widget.ActionBarContextView $r6, $r13;
        com.android.internal.widget.ActionBarContainer $r8, $r10, $r14;
        android.content.Context $r15, $r18, $r22;
        boolean $z0, $z1, z2, z3, $z4, $z5;
        int $i0, $i1, i3;
        float $f0;
        byte b2;
        com.android.internal.view.ActionBarPolicy r21;
        int[] $r23;
        android.content.res.TypedArray r24;
        java.lang.StringBuilder $r25;
        java.lang.Class $r27;
        java.lang.String $r28, $r30;
        java.lang.IllegalStateException $r29;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r19 := @parameter0: android.view.View;

        $r2 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(16908917);

        r1 = (com.android.internal.widget.ActionBarOverlayLayout) $r2;

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout> = r1;

        if r1 == null goto label01;

        virtualinvoke r1.<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)>(r0);

     label01:
        $r3 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(16908709);

        $r4 = specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View)>($r3);

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar> = $r4;

        $r5 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(16908714);

        $r6 = (com.android.internal.widget.ActionBarContextView) $r5;

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView> = $r6;

        $r7 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(16908710);

        $r8 = (com.android.internal.widget.ActionBarContainer) $r7;

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView> = $r8;

        $r9 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(16909463);

        $r10 = (com.android.internal.widget.ActionBarContainer) $r9;

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView> = $r10;

        r20 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if r20 == null goto label12;

        $r13 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        if $r13 == null goto label12;

        $r14 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        if $r14 == null goto label12;

        $r15 = interfaceinvoke r20.<com.android.internal.widget.DecorToolbar: android.content.Context getContext()>();

        r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext> = $r15;

        $r16 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r16.<com.android.internal.widget.DecorToolbar: boolean isSplit()>();

        if $z0 == 0 goto label02;

        b2 = 1;

        goto label03;

     label02:
        b2 = 0;

     label03:
        r0.<com.android.internal.app.WindowDecorActionBar: int mContextDisplayMode> = b2;

        $r17 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r17.<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        if z2 == 0 goto label06;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label06:
        $r18 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        r21 = staticinvoke <com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>($r18);

        $z1 = virtualinvoke r21.<com.android.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();

        if $z1 != 0 goto label08;

        if z2 == 0 goto label07;

        goto label08;

     label07:
        z3 = 0;

        goto label09;

     label08:
        z3 = 1;

     label09:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>(z3);

        $z4 = virtualinvoke r21.<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z4);

        $r22 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r23 = <com.android.internal.R$styleable: int[] ActionBar>;

        r24 = virtualinvoke $r22.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r23, 16843470, 0);

        $z5 = virtualinvoke r24.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(21, 0);

        if $z5 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1);

     label10:
        i3 = virtualinvoke r24.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(20, 0);

        if i3 == 0 goto label11;

        $f0 = (float) i3;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setElevation(float)>($f0);

     label11:
        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        return;

     label12:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used with a compatible window decor layout");

        $r29 = new java.lang.IllegalStateException;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r30);

        throw $r29;
    }

    private void setHasEmbeddedTabs(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1, $r6;
        com.android.internal.widget.ScrollingTabContainerView $r2, $r5, r7;
        com.android.internal.widget.DecorToolbar $r3, $r4, r9;
        boolean z1, z2, $z3, z4, $z5, z6;
        int i0;
        com.android.internal.widget.ActionBarOverlayLayout r8, r10;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z1 := @parameter0: boolean;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs> = z1;

        if z1 != 0 goto label01;

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r4.<com.android.internal.widget.DecorToolbar: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>(null);

        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>($r5);

        goto label02;

     label01:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>(null);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>($r2);

     label02:
        i0 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        if i0 != 2 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r7 == null goto label06;

        if z2 == 0 goto label05;

        virtualinvoke r7.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        r8 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r8 == null goto label06;

        virtualinvoke r8.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

        goto label06;

     label05:
        virtualinvoke r7.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label06:
        r9 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z3 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z3 != 0 goto label07;

        if z2 == 0 goto label07;

        z4 = 1;

        goto label08;

     label07:
        z4 = 0;

     label08:
        interfaceinvoke r9.<com.android.internal.widget.DecorToolbar: void setCollapsible(boolean)>(z4);

        r10 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z5 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z5 != 0 goto label09;

        if z2 == 0 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        virtualinvoke r10.<com.android.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>(z6);

        return;
    }

    private boolean shouldAnimateContextView()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: boolean isLaidOut()>();

        return $z0;
    }

    private void showForActionMode()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 != 0 goto label2;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 1;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label1:
        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void updateVisibility(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        $z3 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        $z2 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowingForMode>;

        $z4 = staticinvoke <com.android.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z3, $z2, $z1);

        if $z4 == 0 goto label1;

        $z6 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z6 != 0 goto label2;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void doShow(boolean)>(z0);

        goto label2;

     label1:
        $z5 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z5 == 0 goto label2;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing> = 0;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void doHide(boolean)>(z0);

     label2:
        return;
    }

    public void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$Tab r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar$Tab,boolean)>(r1, $z0);

        return;
    }

    public void addTab(android.app.ActionBar$Tab, int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$Tab r1;
        int i0;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar$Tab,int,boolean)>(r1, i0, $z0);

        return;
    }

    public void addTab(android.app.ActionBar$Tab, int, boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$Tab r1;
        int i0;
        boolean z0;
        com.android.internal.widget.ScrollingTabContainerView $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,int,boolean)>(r1, i0, z0);

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void configureTab(android.app.ActionBar$Tab,int)>(r1, i0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>(r1);

     label1:
        return;
    }

    public void addTab(android.app.ActionBar$Tab, boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$Tab r1;
        boolean z0;
        com.android.internal.widget.ScrollingTabContainerView $r2;
        java.util.ArrayList $r3;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,boolean)>(r1, z0);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void configureTab(android.app.ActionBar$Tab,int)>(r1, $i0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>(r1);

     label1:
        return;
    }

    void animateToMode(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1;
        com.android.internal.widget.DecorToolbar $r2, $r4, $r6, $r10;
        com.android.internal.widget.ActionBarContextView $r3, $r5, $r7, $r11;
        android.animation.AnimatorSet $r8;
        android.animation.Animator[] $r9;
        android.animation.Animator r12, r13;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void showForActionMode()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void hideForActionMode()>();

     label2:
        $z1 = specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: boolean shouldAnimateContextView()>();

        if $z1 == 0 goto label5;

        if z0 == 0 goto label3;

        $r10 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        r12 = interfaceinvoke $r10.<com.android.internal.widget.DecorToolbar: android.animation.Animator setupAnimatorToVisibility(int,long)>(8, 100L);

        $r11 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        r13 = virtualinvoke $r11.<com.android.internal.widget.ActionBarContextView: android.animation.Animator setupAnimatorToVisibility(int,long)>(0, 200L);

        goto label4;

     label3:
        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        r13 = interfaceinvoke $r6.<com.android.internal.widget.DecorToolbar: android.animation.Animator setupAnimatorToVisibility(int,long)>(0, 200L);

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        r12 = virtualinvoke $r7.<com.android.internal.widget.ActionBarContextView: android.animation.Animator setupAnimatorToVisibility(int,long)>(8, 100L);

     label4:
        $r8 = new android.animation.AnimatorSet;

        specialinvoke $r8.<android.animation.AnimatorSet: void <init>()>();

        $r9 = newarray (android.animation.Animator)[2];

        $r9[0] = r12;

        $r9[1] = r13;

        virtualinvoke $r8.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>($r9);

        virtualinvoke $r8.<android.animation.AnimatorSet: void start()>();

        goto label7;

     label5:
        if z0 == 0 goto label6;

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r4.<com.android.internal.widget.DecorToolbar: void setVisibility(int)>(8);

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r5.<com.android.internal.widget.ActionBarContextView: void setVisibility(int)>(0);

        goto label7;

     label6:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setVisibility(int)>(0);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarContextView: void setVisibility(int)>(8);

     label7:
        return;
    }

    public boolean collapseActionView()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<com.android.internal.widget.DecorToolbar: boolean hasExpandedActionView()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void collapseActionView()>();

        return 1;

     label1:
        return 0;
    }

    void completeDeferredDestroyActionMode()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.ActionMode$Callback r1;
        android.view.ActionMode $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode mDeferredDestroyActionMode>;

        interfaceinvoke r1.<android.view.ActionMode$Callback: void onDestroyActionMode(android.view.ActionMode)>($r2);

        r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode mDeferredDestroyActionMode> = null;

        r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label1:
        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.app.ActionBar$OnMenuVisibilityListener $r4;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<com.android.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility> = z0;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.app.ActionBar$OnMenuVisibilityListener) $r3;

        interfaceinvoke $r4.<android.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>(z0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void doHide(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1, $z2;
        float f0, $f1, $f2, f3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.animation.Animator$AnimatorListener $r1, $r32;
        com.android.internal.widget.ActionBarContainer $r2, $r3, $r5, $r8, $r11, $r13, $r14, $r22, r29;
        android.animation.AnimatorSet $r4;
        float[] $r6, $r12, $r18;
        android.util.Property $r7, $r15, $r19;
        android.animation.ValueAnimator$AnimatorUpdateListener $r9;
        android.animation.ObjectAnimator $r16, $r20, r26;
        android.animation.Animator r23;
        int[] r25;
        android.animation.AnimatorSet$Builder r27;
        android.view.View r28;
        android.content.Context $r30;
        android.view.animation.Interpolator $r31;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        r23 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim>;

        if r23 == null goto label1;

        virtualinvoke r23.<android.animation.Animator: void end()>();

     label1:
        $i0 = r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label6;

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label2;

        if z0 == 0 goto label6;

     label2:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(1);

        $r4 = new android.animation.AnimatorSet;

        specialinvoke $r4.<android.animation.AnimatorSet: void <init>()>();

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i1 = virtualinvoke $r5.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $i2 = neg $i1;

        f0 = (float) $i2;

        f3 = f0;

        if z0 == 0 goto label3;

        r25 = newarray (int)[2];

        r25[0] = 0;

        r25[1] = 0;

        $r22 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r22.<com.android.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r25);

        $i5 = r25[1];

        $f2 = (float) $i5;

        f3 = f0 - $f2;

     label3:
        $r8 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r7 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r6 = newarray (float)[1];

        $r6[0] = f3;

        r26 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r8, $r7, $r6);

        $r9 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        virtualinvoke r26.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r9);

        r27 = virtualinvoke $r4.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r26);

        $z2 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z2 == 0 goto label4;

        r28 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if r28 == null goto label4;

        $r19 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r18 = newarray (float)[2];

        $r18[0] = 0.0F;

        $r18[1] = f3;

        $r20 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r28, $r19, $r18);

        virtualinvoke r27.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r20);

     label4:
        r29 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r29 == null goto label5;

        $i3 = virtualinvoke r29.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i3 != 0 goto label5;

        $r11 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r11.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r14 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        $r15 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r12 = newarray (float)[1];

        $r13 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        $i4 = virtualinvoke $r13.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $f1 = (float) $i4;

        $r12[0] = $f1;

        $r16 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r14, $r15, $r12);

        virtualinvoke r27.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r16);

     label5:
        $r30 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r31 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r30, 17563650);

        virtualinvoke $r4.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r31);

        virtualinvoke $r4.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(250L);

        $r32 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mHideListener>;

        virtualinvoke $r4.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r32);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim> = $r4;

        virtualinvoke $r4.<android.animation.AnimatorSet: void start()>();

        goto label7;

     label6:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mHideListener>;

        interfaceinvoke $r1.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(null);

     label7:
        return;
    }

    public void doShow(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1, $z2, $z3;
        float f0, $f1, $f2, f3;
        com.android.internal.widget.ActionBarContainer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r12, $r15, $r18, $r25, r32, r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.animation.AnimatorSet $r9;
        float[] $r10, $r16, $r21;
        android.util.Property $r11, $r17, $r22;
        android.animation.ValueAnimator$AnimatorUpdateListener $r13;
        android.animation.ObjectAnimator $r19, $r23, r29;
        android.animation.Animator r26;
        int[] r27;
        android.animation.AnimatorSet$Builder r30;
        android.view.View r31, r36;
        android.content.Context $r33;
        android.view.animation.Interpolator $r34;
        android.animation.Animator$AnimatorListener $r35, $r38;
        com.android.internal.widget.ActionBarOverlayLayout r39;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        r26 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim>;

        if r26 == null goto label01;

        virtualinvoke r26.<android.animation.Animator: void end()>();

     label01:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $i0 = r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label06;

        $z2 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z2 != 0 goto label02;

        if z0 == 0 goto label06;

     label02:
        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i2 = virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $i3 = neg $i2;

        f0 = (float) $i3;

        f3 = f0;

        if z0 == 0 goto label03;

        r27 = newarray (int)[2];

        r27[0] = 0;

        r27[1] = 0;

        $r25 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r25.<com.android.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r27);

        $i6 = r27[1];

        $f2 = (float) $i6;

        f3 = f0 - $f2;

     label03:
        $r8 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r8.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(f3);

        $r9 = new android.animation.AnimatorSet;

        specialinvoke $r9.<android.animation.AnimatorSet: void <init>()>();

        $r12 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r11 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r10 = newarray (float)[1];

        $r10[0] = 0.0F;

        r29 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r12, $r11, $r10);

        $r13 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        virtualinvoke r29.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r13);

        r30 = virtualinvoke $r9.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r29);

        $z3 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z3 == 0 goto label04;

        r31 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if r31 == null goto label04;

        $r22 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r21 = newarray (float)[2];

        $r21[0] = f3;

        $r21[1] = 0.0F;

        $r23 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r31, $r22, $r21);

        virtualinvoke r30.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r23);

     label04:
        r32 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r32 == null goto label05;

        $i4 = r0.<com.android.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i4 != 1 goto label05;

        $i5 = virtualinvoke r32.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $f1 = (float) $i5;

        virtualinvoke r32.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>($f1);

        $r15 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r15.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $r18 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        $r17 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r16 = newarray (float)[1];

        $r16[0] = 0.0F;

        $r19 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r18, $r17, $r16);

        virtualinvoke r30.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r19);

     label05:
        $r33 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r34 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r33, 17563651);

        virtualinvoke $r9.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r34);

        virtualinvoke $r9.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(250L);

        $r35 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mShowListener>;

        virtualinvoke $r9.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r35);

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim> = $r9;

        virtualinvoke $r9.<android.animation.AnimatorSet: void start()>();

        goto label09;

     label06:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z1 == 0 goto label07;

        r36 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.View mContentView>;

        if r36 == null goto label07;

        virtualinvoke r36.<android.view.View: void setTranslationY(float)>(0.0F);

     label07:
        r37 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r37 == null goto label08;

        $i1 = r0.<com.android.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i1 != 1 goto label08;

        virtualinvoke r37.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r4.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r5.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

     label08:
        $r38 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator$AnimatorListener mShowListener>;

        interfaceinvoke $r38.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(null);

     label09:
        r39 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r39 == null goto label10;

        virtualinvoke r39.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

     label10:
        return;
    }

    public void enableContentAnimations(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mContentAnimations> = z0;

        return;
    }

    public android.view.View getCustomView()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: android.view.View getCustomView()>();

        return $r2;
    }

    public int getDisplayOptions()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>();

        return $i0;
    }

    public float getElevation()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1;
        float $f0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $f0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: float getElevation()>();

        return $f0;
    }

    public int getHeight()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarContainer $r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        return $i0;
    }

    public int getHideOffset()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout $r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        return $i0;
    }

    public int getNavigationItemCount()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1, $i2;
        com.android.internal.widget.DecorToolbar $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        return $i2;

     label2:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: int getDropdownItemCount()>();

        return $i1;
    }

    public int getNavigationMode()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        return $i0;
    }

    public int getSelectedNavigationIndex()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1, i2;
        com.android.internal.app.WindowDecorActionBar$TabImpl r1;
        com.android.internal.widget.DecorToolbar $r2, $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i0 = interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        if i0 == 1 goto label3;

        i2 = -1;

        if i0 == 2 goto label1;

        return -1;

     label1:
        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if r1 == null goto label2;

        i2 = virtualinvoke r1.<com.android.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>();

     label2:
        return i2;

     label3:
        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: int getDropdownSelectedPosition()>();

        return $i1;
    }

    public android.app.ActionBar$Tab getSelectedTab()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        return $r1;
    }

    public java.lang.CharSequence getSubtitle()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>();

        return $r2;
    }

    public android.app.ActionBar$Tab getTabAt(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.app.ActionBar$Tab $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.app.ActionBar$Tab) $r2;

        return $r3;
    }

    public int getTabCount()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public android.content.Context getThemedContext()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1;
        android.content.Context $r2, $r4, $r6, $r7, $r9, $r10;
        android.util.TypedValue $r3;
        android.content.res.Resources$Theme $r5;
        android.view.ContextThemeWrapper $r8;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        if $r2 != null goto label2;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843671, $r3, 1);

        i0 = $r3.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label1;

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $i1 = virtualinvoke $r7.<android.content.Context: int getThemeResId()>();

        if $i1 == i0 goto label1;

        $r8 = new android.view.ContextThemeWrapper;

        $r9 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $r8.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r9, i0);

        r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r8;

        goto label2;

     label1:
        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r6;

     label2:
        $r10 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        return $r10;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $r2;
    }

    public boolean hasIcon()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean hasIcon()>();

        return $z0;
    }

    public boolean hasLogo()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: boolean hasLogo()>();

        return $z0;
    }

    public void hide()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp> = 1;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void hideForSystem()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 1;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()>();

        return $z0;
    }

    public boolean isShowing()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getHeight()>();

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getHideOffset()>();

        if $i1 >= i0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean isTitleTruncated()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.DecorToolbar r1;
        boolean $z0, z1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<com.android.internal.widget.DecorToolbar: boolean isTitleTruncated()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public android.app.ActionBar$Tab newTab()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $r1 = new com.android.internal.app.WindowDecorActionBar$TabImpl;

        specialinvoke $r1.<com.android.internal.app.WindowDecorActionBar$TabImpl: void <init>(com.android.internal.app.WindowDecorActionBar)>(r0);

        return $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.content.res.Configuration r1;
        android.content.Context $r2;
        com.android.internal.view.ActionBarPolicy $r3;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);

        return;
    }

    public void onContentScrollStarted()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.animation.Animator r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.Animator: void cancel()>();

        r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim> = null;

     label1:
        return;
    }

    public void onContentScrollStopped()
    {
        com.android.internal.app.WindowDecorActionBar r0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        return;
    }

    public void onWindowVisibilityChanged(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        r0.<com.android.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = i0;

        return;
    }

    public void removeAllTabs()
    {
        com.android.internal.app.WindowDecorActionBar r0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void cleanupTabs()>();

        return;
    }

    public void removeOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.app.ActionBar$Tab r1;
        int $i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $i0 = virtualinvoke r1.<android.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void removeTabAt(int)>($i0);

        return;
    }

    public void removeTabAt(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, i1, $i2, $i3, i4, i5;
        com.android.internal.widget.ScrollingTabContainerView $r1, $r2;
        java.util.ArrayList $r3, $r5, $r6, $r7, $r9;
        java.lang.Object $r4, $r8, $r10;
        boolean $z0;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r11, r12, r13;
        android.app.ActionBar$Tab r14;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r1 != null goto label1;

        return;

     label1:
        r12 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if r12 == null goto label2;

        i4 = virtualinvoke r12.<com.android.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        goto label3;

     label2:
        i4 = r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition>;

     label3:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>(i0);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r13 = (com.android.internal.app.WindowDecorActionBar$TabImpl) $r4;

        if r13 == null goto label4;

        virtualinvoke r13.<com.android.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(-1);

     label4:
        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i5 = i0;

     label5:
        if i5 >= i1 goto label6;

        $r9 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r11 = (com.android.internal.app.WindowDecorActionBar$TabImpl) $r10;

        virtualinvoke $r11.<com.android.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(i5);

        i5 = i5 + 1;

        goto label5;

     label6:
        if i4 != i0 goto label9;

        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label7;

        r14 = null;

        goto label8;

     label7:
        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i2 = i0 - 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        r14 = (android.app.ActionBar$Tab) $r8;

     label8:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>(r14);

     label9:
        return;
    }

    public void selectTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i2, i3;
        com.android.internal.widget.DecorToolbar $r1;
        android.view.ViewGroup $r2;
        boolean $z0, $z1;
        android.app.Activity $r3;
        android.app.FragmentManager $r4;
        android.app.FragmentTransaction $r5, r14;
        android.app.ActionBar$TabListener $r6, $r8, $r10;
        com.android.internal.app.WindowDecorActionBar$TabImpl $r7, $r9, $r11, r15, r17, r18;
        com.android.internal.widget.ScrollingTabContainerView $r12, r16;
        android.app.ActionBar$Tab r13;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r13 := @parameter0: android.app.ActionBar$Tab;

        i0 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()>();

        i3 = -1;

        if i0 == 2 goto label2;

        if r13 == null goto label1;

        i3 = virtualinvoke r13.<android.app.ActionBar$Tab: int getPosition()>();

     label1:
        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = i3;

        return;

     label2:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 == 0 goto label3;

        r14 = null;

        goto label4;

     label3:
        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $r4 = virtualinvoke $r3.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r5 = virtualinvoke $r4.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        r14 = virtualinvoke $r5.<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>();

     label4:
        r15 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if r15 != r13 goto label5;

        if r15 == null goto label8;

        $r10 = virtualinvoke r15.<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r11 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r10.<android.app.ActionBar$TabListener: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r11, r14);

        $r12 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        $i2 = virtualinvoke r13.<android.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $r12.<com.android.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i2);

        goto label8;

     label5:
        r16 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r13 == null goto label6;

        i3 = virtualinvoke r13.<android.app.ActionBar$Tab: int getPosition()>();

     label6:
        virtualinvoke r16.<com.android.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>(i3);

        r17 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if r17 == null goto label7;

        $r8 = virtualinvoke r17.<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r9 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r8.<android.app.ActionBar$TabListener: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r9, r14);

     label7:
        r18 = (com.android.internal.app.WindowDecorActionBar$TabImpl) r13;

        r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab> = r18;

        if r18 == null goto label8;

        $r6 = virtualinvoke r18.<com.android.internal.app.WindowDecorActionBar$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r6.<android.app.ActionBar$TabListener: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r7, r14);

     label8:
        if r14 == null goto label9;

        $z1 = virtualinvoke r14.<android.app.FragmentTransaction: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        virtualinvoke r14.<android.app.FragmentTransaction: int commit()>();

     label9:
        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setCustomView(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        android.content.Context $r1;
        android.view.LayoutInflater $r2;
        com.android.internal.widget.DecorToolbar $r3;
        android.view.ViewGroup $r4;
        android.view.View $r5;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context getThemedContext()>();

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r4 = interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $r5 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, $r4, 0);

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setCustomView(android.view.View)>($r5);

        return;
    }

    public void setCustomView(android.view.View)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.View r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setCustomView(android.view.View)>(r1);

        return;
    }

    public void setCustomView(android.view.View, android.app.ActionBar$LayoutParams)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.view.View r1;
        android.app.ActionBar$LayoutParams r2;
        com.android.internal.widget.DecorToolbar $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.app.ActionBar$LayoutParams;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: void setCustomView(android.view.View)>(r1);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>(z0);

     label1:
        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 4;

        goto label2;

     label1:
        b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(b0, 4);

        return;
    }

    public void setDisplayOptions(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setDisplayOptions(int)>(i0);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.internal.widget.DecorToolbar $r1, $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>();

        $i3 = i1 & 4;

        if $i3 == 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i5 = i0 & i1;

        $i4 = i1 & i2;

        $i6 = $i5 | $i4;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setDisplayOptions(int)>($i6);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 16;

        goto label2;

     label1:
        b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(b0, 16);

        return;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(b0, 2);

        return;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 8;

        goto label2;

     label1:
        b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(b0, 8);

        return;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(i0, 1);

        return;
    }

    public void setElevation(float)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        float f0;
        com.android.internal.widget.ActionBarContainer r1, $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        f0 := @parameter0: float;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setElevation(float)>(f0);

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.widget.ActionBarContainer: void setElevation(float)>(f0);

     label1:
        return;
    }

    public void setHideOffset(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        com.android.internal.widget.ActionBarOverlayLayout $r1, $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to set a non-zero hide offset");

        throw $r3;

     label2:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>(i0);

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0, $z1;
        com.android.internal.widget.ActionBarOverlayLayout $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z1 = virtualinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");

        throw $r3;

     label2:
        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHideOnContentScroll> = z0;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(z0);

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(int)>(i0);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>(r1);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setNavigationIcon(int)>(i0);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>(z0);

        return;
    }

    public void setIcon(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setIcon(int)>(i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar$OnNavigationListener)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.widget.SpinnerAdapter r1;
        android.app.ActionBar$OnNavigationListener r2;
        com.android.internal.app.NavItemSelectedListener $r3;
        com.android.internal.widget.DecorToolbar $r4;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        r2 := @parameter1: android.app.ActionBar$OnNavigationListener;

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r3 = new com.android.internal.app.NavItemSelectedListener;

        specialinvoke $r3.<com.android.internal.app.NavItemSelectedListener: void <init>(android.app.ActionBar$OnNavigationListener)>(r2);

        interfaceinvoke $r4.<com.android.internal.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)>(r1, $r3);

        return;
    }

    public void setLogo(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setLogo(int)>(i0);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setNavigationMode(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, $i1, i2, i3;
        com.android.internal.widget.DecorToolbar $r1, $r5, r6;
        com.android.internal.widget.ScrollingTabContainerView $r2, $r3;
        boolean $z1, $z2, $z3, z4, z5;
        com.android.internal.widget.ActionBarOverlayLayout r4, r7;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        if i2 == 2 goto label1;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()>();

        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = $i1;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>(null);

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label2:
        if i2 == i0 goto label3;

        $z3 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z3 != 0 goto label3;

        r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r4 == null goto label3;

        virtualinvoke r4.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label3:
        $r5 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r5.<com.android.internal.widget.DecorToolbar: void setNavigationMode(int)>(i0);

        if i0 == 2 goto label4;

        goto label5;

     label4:
        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r3 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r3.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        i3 = r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition>;

        if i3 == -1 goto label5;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>(i3);

        r0.<com.android.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

     label5:
        r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if i0 != 2 goto label6;

        $z2 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label6;

        z4 = 1;

        goto label7;

     label6:
        z4 = 0;

     label7:
        interfaceinvoke r6.<com.android.internal.widget.DecorToolbar: void setCollapsible(boolean)>(z4);

        r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        z5 = 0;

        if i0 != 2 goto label8;

        z5 = 0;

        $z1 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label8;

        z5 = 1;

     label8:
        virtualinvoke r7.<com.android.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>(z5);

        return;
    }

    public void setSelectedNavigationItem(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0, i1;
        com.android.internal.widget.DecorToolbar $r1, $r2;
        java.lang.IllegalStateException $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        android.app.ActionBar$Tab $r6;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i1 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        if i1 == 1 goto label2;

        if i1 != 2 goto label1;

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (android.app.ActionBar$Tab) $r5;

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar$Tab)>($r6);

        goto label3;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r3;

     label2:
        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setDropdownSelectedPosition(int)>(i0);

     label3:
        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean z0;
        android.animation.Animator r1;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled> = z0;

        if z0 != 0 goto label1;

        r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.animation.Animator mCurrentShowAnim>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.Animator: void end()>();

     label1:
        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setSubtitle(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i0);

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setTitle(int)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        int i0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i0);

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void show()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenByApp> = 0;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void showForSystem()
    {
        com.android.internal.app.WindowDecorActionBar r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        $z0 = r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 0;

        specialinvoke r0.<com.android.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        com.android.internal.app.WindowDecorActionBar r0;
        com.android.internal.widget.ActionBarOverlayLayout $r1, r12;
        com.android.internal.widget.ActionBarContextView $r2, $r4, $r6, $r13;
        com.android.internal.app.WindowDecorActionBar$ActionModeImpl $r3;
        android.content.Context $r5;
        boolean $z0;
        int $i0, $i1;
        com.android.internal.widget.ActionBarContainer $r7, r11;
        android.view.ActionMode$Callback r8;
        android.view.ActionMode r9;

        r0 := @this: com.android.internal.app.WindowDecorActionBar;

        r8 := @parameter0: android.view.ActionMode$Callback;

        r9 = r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode mActionMode>;

        if r9 == null goto label1;

        virtualinvoke r9.<android.view.ActionMode: void finish()>();

     label1:
        $r1 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(0);

        $r2 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContextView: void killMode()>();

        $r3 = new com.android.internal.app.WindowDecorActionBar$ActionModeImpl;

        $r4 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        $r5 = virtualinvoke $r4.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        specialinvoke $r3.<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void <init>(com.android.internal.app.WindowDecorActionBar,android.content.Context,android.view.ActionMode$Callback)>(r0, $r5, r8);

        $z0 = virtualinvoke $r3.<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()>();

        if $z0 == 0 goto label3;

        r0.<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode mActionMode> = $r3;

        virtualinvoke $r3.<com.android.internal.app.WindowDecorActionBar$ActionModeImpl: void invalidate()>();

        $r6 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>($r3);

        virtualinvoke r0.<com.android.internal.app.WindowDecorActionBar: void animateToMode(boolean)>(1);

        r11 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        if r11 == null goto label2;

        $i0 = r0.<com.android.internal.app.WindowDecorActionBar: int mContextDisplayMode>;

        if $i0 != 1 goto label2;

        $i1 = virtualinvoke r11.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i1 == 0 goto label2;

        $r7 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        r12 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if r12 == null goto label2;

        virtualinvoke r12.<com.android.internal.widget.ActionBarOverlayLayout: void requestApplyInsets()>();

     label2:
        $r13 = r0.<com.android.internal.app.WindowDecorActionBar: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r13.<com.android.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        return $r3;

     label3:
        return null;
    }
}
