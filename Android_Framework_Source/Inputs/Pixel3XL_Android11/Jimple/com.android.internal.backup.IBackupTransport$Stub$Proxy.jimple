class com.android.internal.backup.IBackupTransport$Stub$Proxy extends java.lang.Object implements com.android.internal.backup.IBackupTransport
{
    public static com.android.internal.backup.IBackupTransport sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public int abortFullRestore() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int abortFullRestore()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        $r1 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void cancelFullBackup() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: void cancelFullBackup()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int checkFullBackupSize(long) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i1, i2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int checkFullBackupSize(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int clearBackupData(android.content.pm.PackageInfo) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.PackageInfo r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r7 := @parameter0: android.content.pm.PackageInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: int clearBackupData(android.content.pm.PackageInfo)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.content.Intent configurationIntent() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.backup.IBackupTransport $r6, $r7;
        java.lang.Throwable $r8;
        android.content.Intent r9, r10;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: android.content.Intent configurationIntent()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String currentDestinationString() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: java.lang.String currentDestinationString()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.Intent dataManagementIntent() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.backup.IBackupTransport $r6, $r7;
        java.lang.Throwable $r8;
        android.content.Intent r9, r10;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: android.content.Intent dataManagementIntent()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.Intent) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.CharSequence dataManagementIntentLabel() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.backup.IBackupTransport $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.CharSequence r9, r10;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: java.lang.CharSequence dataManagementIntentLabel()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (java.lang.CharSequence) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int finishBackup() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void finishRestore() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: void finishRestore()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.backup.RestoreSet[] getAvailableRestoreSets() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        com.android.internal.backup.IBackupTransport $r6, $r7;
        java.lang.Throwable $r8;
        android.app.backup.RestoreSet[] r9, r10;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.app.backup.RestoreSet: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.app.backup.RestoreSet[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getBackupQuota(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;
        long l1, l2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: long getBackupQuota(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public long getCurrentRestoreSet() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: long getCurrentRestoreSet()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        return "com.android.internal.backup.IBackupTransport";
    }

    public int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getRestoreData(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        android.os.ParcelFileDescriptor r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r7 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: int getRestoreData(android.os.ParcelFileDescriptor)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getTransportFlags() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int getTransportFlags()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int initializeDevice() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int initializeDevice()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isAppEligibleForBackup(android.content.pm.PackageInfo, boolean) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z1, z2, z3, z4;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.PackageInfo r7;
        byte b0;
        int i1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r7 := @parameter0: android.content.pm.PackageInfo;

        z2 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z2 == 0 goto label07;

        b0 = 1;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        z3 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: boolean isAppEligibleForBackup(android.content.pm.PackageInfo,boolean)>(r7, z2);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i1 == 0 goto label12;

        z4 = 1;

        goto label13;

     label12:
        z4 = 0;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    public java.lang.String name() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: java.lang.String name()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.backup.RestoreDescription nextRestorePackage() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        com.android.internal.backup.IBackupTransport $r6, $r7;
        java.lang.Throwable $r8;
        android.app.backup.RestoreDescription r9, r10;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: android.app.backup.RestoreDescription nextRestorePackage()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.app.backup.RestoreDescription: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.app.backup.RestoreDescription) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int performBackup(android.content.pm.PackageInfo, android.os.ParcelFileDescriptor, int) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.PackageInfo r8;
        int i0, i1, i2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r8 := @parameter0: android.content.pm.PackageInfo;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor,int)>(r8, r1, i0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public int performFullBackup(android.content.pm.PackageInfo, android.os.ParcelFileDescriptor, int) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        android.content.pm.PackageInfo r8;
        int i0, i1, i2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r8 := @parameter0: android.content.pm.PackageInfo;

        r1 := @parameter1: android.os.ParcelFileDescriptor;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor,int)>(r8, r1, i0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public long requestBackupTime() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: long requestBackupTime()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long requestFullBackupTime() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: long requestFullBackupTime()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int sendBackupData(int) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: int sendBackupData(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int startRestore(long, android.content.pm.PackageInfo[]) throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        android.content.pm.PackageInfo[] r7;
        int i1, i2;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        l0 := @parameter0: long;

        r7 := @parameter1: android.content.pm.PackageInfo[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: int startRestore(long,android.content.pm.PackageInfo[])>(l0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String transportDirName() throws android.os.RemoteException
    {
        com.android.internal.backup.IBackupTransport$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.backup.IBackupTransport $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: com.android.internal.backup.IBackupTransport$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.backup.IBackupTransport");

        $r3 = r0.<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.backup.IBackupTransport$Stub: com.android.internal.backup.IBackupTransport getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
