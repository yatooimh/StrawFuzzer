class com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors extends android.os.AsyncTask
{
    private android.app.WallpaperColors mLockColors;
    private android.app.WallpaperColors mSystemColors;
    final com.android.internal.colorextraction.ColorExtractor this$0;

    private void <init>(com.android.internal.colorextraction.ColorExtractor)
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        com.android.internal.colorextraction.ColorExtractor r1;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: com.android.internal.colorextraction.ColorExtractor;

        r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: com.android.internal.colorextraction.ColorExtractor this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    void <init>(com.android.internal.colorextraction.ColorExtractor, com.android.internal.colorextraction.ColorExtractor$1)
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        com.android.internal.colorextraction.ColorExtractor r1;
        com.android.internal.colorextraction.ColorExtractor$1 r2;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: com.android.internal.colorextraction.ColorExtractor;

        r2 := @parameter1: com.android.internal.colorextraction.ColorExtractor$1;

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: void <init>(com.android.internal.colorextraction.ColorExtractor)>(r1);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        java.lang.Object[] r1;
        android.app.WallpaperManager[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (android.app.WallpaperManager[]) r1;

        $r3 = virtualinvoke r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: java.lang.Void doInBackground(android.app.WallpaperManager[])>($r2);

        return $r3;
    }

    protected transient java.lang.Void doInBackground(android.app.WallpaperManager[])
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        android.app.WallpaperManager[] r1;
        android.app.WallpaperManager $r2, $r4;
        android.app.WallpaperColors $r3, $r5;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: android.app.WallpaperManager[];

        $r2 = r1[0];

        $r3 = virtualinvoke $r2.<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>(1);

        r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: android.app.WallpaperColors mSystemColors> = $r3;

        $r4 = r1[0];

        $r5 = virtualinvoke $r4.<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>(2);

        r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: android.app.WallpaperColors mLockColors> = $r5;

        return null;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: void onPostExecute(java.lang.Void)>($r2);

        return;
    }

    protected void onPostExecute(java.lang.Void)
    {
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors r0;
        java.lang.Void r1;
        android.app.WallpaperColors $r2, $r4;
        com.android.internal.colorextraction.ColorExtractor $r3, $r5, $r6, $r7;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        r1 := @parameter0: java.lang.Void;

        $r3 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: com.android.internal.colorextraction.ColorExtractor this$0>;

        $r2 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: android.app.WallpaperColors mSystemColors>;

        $r3.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mSystemColors> = $r2;

        $r5 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: com.android.internal.colorextraction.ColorExtractor this$0>;

        $r4 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: android.app.WallpaperColors mLockColors>;

        $r5.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mLockColors> = $r4;

        $r6 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: com.android.internal.colorextraction.ColorExtractor this$0>;

        virtualinvoke $r6.<com.android.internal.colorextraction.ColorExtractor: void extractWallpaperColors()>();

        $r7 = r0.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: com.android.internal.colorextraction.ColorExtractor this$0>;

        virtualinvoke $r7.<com.android.internal.colorextraction.ColorExtractor: void triggerColorsChanged(int)>(3);

        return;
    }
}
