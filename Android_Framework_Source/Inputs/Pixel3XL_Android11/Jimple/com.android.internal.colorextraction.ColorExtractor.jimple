public class com.android.internal.colorextraction.ColorExtractor extends java.lang.Object implements android.app.WallpaperManager$OnColorsChangedListener
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    public static final int TYPE_DARK;
    public static final int TYPE_EXTRA_DARK;
    public static final int TYPE_NORMAL;
    private static final int[] sGradientTypes;
    private final android.content.Context mContext;
    private final com.android.internal.colorextraction.types.ExtractionType mExtractionType;
    protected final android.util.SparseArray mGradientColors;
    protected android.app.WallpaperColors mLockColors;
    private final java.util.ArrayList mOnColorsChangedListeners;
    protected android.app.WallpaperColors mSystemColors;

    static void <clinit>()
    {
        int[] $r0;

        <com.android.internal.colorextraction.ColorExtractor: int TYPE_NORMAL> = 0;

        <com.android.internal.colorextraction.ColorExtractor: int TYPE_EXTRA_DARK> = 2;

        <com.android.internal.colorextraction.ColorExtractor: int TYPE_DARK> = 1;

        <com.android.internal.colorextraction.ColorExtractor: java.lang.String TAG> = "ColorExtractor";

        <com.android.internal.colorextraction.ColorExtractor: boolean DEBUG> = 0;

        $r0 = newarray (int)[3];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        <com.android.internal.colorextraction.ColorExtractor: int[] sGradientTypes> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        android.content.Context r1;
        com.android.internal.colorextraction.types.Tonal $r2;
        java.lang.Object $r3;
        android.app.WallpaperManager $r4;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.colorextraction.types.Tonal;

        specialinvoke $r2.<com.android.internal.colorextraction.types.Tonal: void <init>(android.content.Context)>(r1);

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/WallpaperManager;");

        $r4 = (android.app.WallpaperManager) $r3;

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void <init>(android.content.Context,com.android.internal.colorextraction.types.ExtractionType,boolean,android.app.WallpaperManager)>(r1, $r2, 1, $r4);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.colorextraction.types.ExtractionType, boolean, android.app.WallpaperManager)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        boolean z0, $z1;
        android.app.WallpaperManager r1;
        int i0, $i1, $i2, i3, i4, i5;
        android.util.SparseArray $r2, $r6;
        java.util.ArrayList $r3;
        int[] $r4, $r5, r11;
        com.android.internal.colorextraction.ColorExtractor$GradientColors $r7;
        android.content.Context r8;
        com.android.internal.colorextraction.types.ExtractionType r9;
        com.android.internal.colorextraction.ColorExtractor$GradientColors[] r10;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r8 := @parameter0: android.content.Context;

        r9 := @parameter1: com.android.internal.colorextraction.types.ExtractionType;

        z0 := @parameter2: boolean;

        r1 := @parameter3: android.app.WallpaperManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.colorextraction.ColorExtractor: android.content.Context mContext> = r8;

        r0.<com.android.internal.colorextraction.ColorExtractor: com.android.internal.colorextraction.types.ExtractionType mExtractionType> = r9;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors> = $r2;

        i3 = 0;

     label1:
        if i3 >= 2 goto label4;

        $r4 = newarray (int)[2];

        $r4[0] = 2;

        $r4[1] = 1;

        i4 = $r4[i3];

        $r5 = <com.android.internal.colorextraction.ColorExtractor: int[] sGradientTypes>;

        $i1 = lengthof $r5;

        r10 = newarray (com.android.internal.colorextraction.ColorExtractor$GradientColors)[$i1];

        $r6 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        virtualinvoke $r6.<android.util.SparseArray: void append(int,java.lang.Object)>(i4, r10);

        r11 = <com.android.internal.colorextraction.ColorExtractor: int[] sGradientTypes>;

        i0 = lengthof r11;

        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        $i2 = r11[i5];

        $r7 = new com.android.internal.colorextraction.ColorExtractor$GradientColors;

        specialinvoke $r7.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void <init>()>();

        r10[$i2] = $r7;

        i5 = i5 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners> = $r3;

        $z1 = virtualinvoke r1.<android.app.WallpaperManager: boolean isWallpaperSupported()>();

        if $z1 == 0 goto label5;

        virtualinvoke r1.<android.app.WallpaperManager: void addOnColorsChangedListener(android.app.WallpaperManager$OnColorsChangedListener,android.os.Handler)>(r0, null);

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void initExtractColors(android.app.WallpaperManager,boolean)>(r1, z0);

     label5:
        return;
    }

    private void extractInto(android.app.WallpaperColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        android.app.WallpaperColors r1;
        com.android.internal.colorextraction.ColorExtractor$GradientColors r2, r3, r4;
        com.android.internal.colorextraction.types.ExtractionType $r5;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: android.app.WallpaperColors;

        r2 := @parameter1: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r3 := @parameter2: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r4 := @parameter3: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        $r5 = r0.<com.android.internal.colorextraction.ColorExtractor: com.android.internal.colorextraction.types.ExtractionType mExtractionType>;

        interfaceinvoke $r5.<com.android.internal.colorextraction.types.ExtractionType: void extractInto(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r2, r3, r4);

        return;
    }

    private void initExtractColors(android.app.WallpaperManager, boolean)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        android.app.WallpaperManager r1;
        boolean z0;
        com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors $r2;
        android.app.WallpaperManager[] $r3;
        java.util.concurrent.Executor $r4;
        android.app.WallpaperColors $r6, $r7;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: android.app.WallpaperManager;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>(1);

        r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mSystemColors> = $r6;

        $r7 = virtualinvoke r1.<android.app.WallpaperManager: android.app.WallpaperColors getWallpaperColors(int)>(2);

        r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mLockColors> = $r7;

        virtualinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void extractWallpaperColors()>();

        goto label2;

     label1:
        $r2 = new com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors;

        specialinvoke $r2.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: void <init>(com.android.internal.colorextraction.ColorExtractor,com.android.internal.colorextraction.ColorExtractor$1)>(r0, null);

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = newarray (android.app.WallpaperManager)[1];

        $r3[0] = r1;

        virtualinvoke $r2.<com.android.internal.colorextraction.ColorExtractor$LoadWallpaperColors: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

     label2:
        return;
    }

    public void addOnColorsChangedListener(com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener r1;
        java.lang.ref.WeakReference $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener;

        $r3 = r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners>;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void destroy()
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        android.app.WallpaperManager r1;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        $r2 = r0.<com.android.internal.colorextraction.ColorExtractor: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/WallpaperManager;");

        r1 = (android.app.WallpaperManager) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.WallpaperManager: void removeOnColorsChangedListener(android.app.WallpaperManager$OnColorsChangedListener)>(r0);

     label1:
        return;
    }

    protected void extractWallpaperColors()
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        com.android.internal.colorextraction.ColorExtractor$GradientColors[] r1, r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4, $r6;
        com.android.internal.colorextraction.ColorExtractor$GradientColors $r7, $r8, $r9, $r11, $r12, $r13;
        android.app.WallpaperColors $r10, $r14;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        $r3 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(1);

        r1 = (com.android.internal.colorextraction.ColorExtractor$GradientColors[]) $r4;

        $r5 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(2);

        r2 = (com.android.internal.colorextraction.ColorExtractor$GradientColors[]) $r6;

        $r10 = r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mSystemColors>;

        $r9 = r1[0];

        $r8 = r1[1];

        $r7 = r1[2];

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void extractInto(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>($r10, $r9, $r8, $r7);

        $r14 = r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mLockColors>;

        $r13 = r2[0];

        $r12 = r2[1];

        $r11 = r2[2];

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void extractInto(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>($r14, $r13, $r12, $r11);

        return;
    }

    public com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        int i0;
        com.android.internal.colorextraction.ColorExtractor$GradientColors $r1;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.colorextraction.ColorExtractor: com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int,int)>(i0, 1);

        return $r1;
    }

    public com.android.internal.colorextraction.ColorExtractor$GradientColors getColors(int, int)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        int i0, i1;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.colorextraction.ColorExtractor$GradientColors[] $r3;
        com.android.internal.colorextraction.ColorExtractor$GradientColors $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 0 goto label2;

        if i1 == 1 goto label2;

        if i1 != 2 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type should be TYPE_NORMAL, TYPE_DARK or TYPE_EXTRA_DARK");

        throw $r6;

     label2:
        if i0 == 2 goto label4;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("which should be FLAG_SYSTEM or FLAG_NORMAL");

        throw $r5;

     label4:
        $r1 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (com.android.internal.colorextraction.ColorExtractor$GradientColors[]) $r2;

        $r4 = $r3[i1];

        return $r4;
    }

    public android.app.WallpaperColors getWallpaperColors(int)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.app.WallpaperColors $r7, $r8;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r8 = r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mLockColors>;

        return $r8;

     label1:
        if i0 != 1 goto label2;

        $r7 = r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mSystemColors>;

        return $r7;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for which: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void onColorsChanged(android.app.WallpaperColors, int)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        android.app.WallpaperColors r1;
        int i0, $i1, $i2;
        android.util.SparseArray $r2, $r7;
        java.lang.Object $r3, $r8;
        com.android.internal.colorextraction.ColorExtractor$GradientColors $r4, $r5, $r6, $r9, $r10, $r11;
        boolean z0;
        com.android.internal.colorextraction.ColorExtractor$GradientColors[] r12, r13;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: android.app.WallpaperColors;

        i0 := @parameter1: int;

        z0 = 0;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mLockColors> = r1;

        $r7 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(2);

        r12 = (com.android.internal.colorextraction.ColorExtractor$GradientColors[]) $r8;

        $r11 = r12[0];

        $r10 = r12[1];

        $r9 = r12[2];

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void extractInto(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, $r11, $r10, $r9);

        z0 = 1;

     label1:
        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        r0.<com.android.internal.colorextraction.ColorExtractor: android.app.WallpaperColors mSystemColors> = r1;

        $r2 = r0.<com.android.internal.colorextraction.ColorExtractor: android.util.SparseArray mGradientColors>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(1);

        r13 = (com.android.internal.colorextraction.ColorExtractor$GradientColors[]) $r3;

        $r6 = r13[0];

        $r5 = r13[1];

        $r4 = r13[2];

        specialinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void extractInto(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, $r6, $r5, $r4);

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.colorextraction.ColorExtractor: void triggerColorsChanged(int)>(i0);

     label3:
        return;
    }

    public void removeOnColorsChangedListener(com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener r1;
        int i0, i1;
        java.lang.ref.WeakReference r3;
        java.util.ArrayList $r4, $r5, $r8;
        java.lang.Object $r6, $r7;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        r1 := @parameter0: com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r7 != r1 goto label2;

        $r8 = r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected void triggerColorsChanged(int)
    {
        com.android.internal.colorextraction.ColorExtractor r0;
        int i0, i1, i2;
        java.lang.ref.WeakReference r2;
        com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener r3;
        java.util.ArrayList $r4, $r5, $r8;
        java.lang.Object $r6, $r7;

        r0 := @this: com.android.internal.colorextraction.ColorExtractor;

        i0 := @parameter0: int;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (java.lang.ref.WeakReference) $r6;

        $r7 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener) $r7;

        if r3 != null goto label2;

        $r8 = r0.<com.android.internal.colorextraction.ColorExtractor: java.util.ArrayList mOnColorsChangedListeners>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        goto label3;

     label2:
        interfaceinvoke r3.<com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener: void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int)>(r0, i0);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }
}
