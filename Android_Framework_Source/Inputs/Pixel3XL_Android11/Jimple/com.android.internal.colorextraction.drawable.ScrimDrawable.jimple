public class com.android.internal.colorextraction.drawable.ScrimDrawable extends android.graphics.drawable.Drawable
{
    private static final long COLOR_ANIMATION_DURATION;
    private static final java.lang.String TAG;
    private int mAlpha;
    private android.animation.ValueAnimator mColorAnimation;
    private int mMainColor;
    private int mMainColorTo;
    private final android.graphics.Paint mPaint;

    public void <init>()
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.graphics.Paint $r2;
        android.graphics.Paint$Style $r3;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mAlpha> = 255;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint> = $r2;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        return;
    }

    static android.animation.ValueAnimator access$000(com.android.internal.colorextraction.drawable.ScrimDrawable)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.animation.ValueAnimator $r1;

        r0 := @parameter0: com.android.internal.colorextraction.drawable.ScrimDrawable;

        $r1 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.animation.ValueAnimator mColorAnimation>;

        return $r1;
    }

    static android.animation.ValueAnimator access$002(com.android.internal.colorextraction.drawable.ScrimDrawable, android.animation.ValueAnimator)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.animation.ValueAnimator r1;

        r0 := @parameter0: com.android.internal.colorextraction.drawable.ScrimDrawable;

        r1 := @parameter1: android.animation.ValueAnimator;

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.animation.ValueAnimator mColorAnimation> = r1;

        return r1;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.graphics.Canvas r1;
        int $i0, $i1;
        android.graphics.Paint $r2, $r3, $r5;
        android.graphics.Rect $r4;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        $i0 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColor>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        $i1 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mAlpha>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>($i1);

        $r4 = virtualinvoke r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Rect getBounds()>();

        $r5 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r4, $r5);

        return;
    }

    public int getAlpha()
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        int $i0;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        $i0 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mAlpha>;

        return $i0;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.graphics.Paint $r1;
        android.graphics.ColorFilter $r2;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        $r1 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        $r2 = virtualinvoke $r1.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        return $r2;
    }

    public int getMainColor()
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        int $i0;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        $i0 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColor>;

        return $i0;
    }

    public int getOpacity()
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        return -3;
    }

    public void lambda$setColor$0$ScrimDrawable(int, int, android.animation.ValueAnimator)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        int i0, i1, $i2;
        android.animation.ValueAnimator r1;
        java.lang.Object $r2;
        java.lang.Float $r3;
        float $f0;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.animation.ValueAnimator;

        $r2 = virtualinvoke r1.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        $r3 = (java.lang.Float) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $i2 = staticinvoke <com.android.internal.graphics.ColorUtils: int blendARGB(int,int,float)>(i0, i1, $f0);

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColor> = $i2;

        virtualinvoke r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: void invalidateSelf()>();

        return;
    }

    public void setAlpha(int)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        int i0, $i1;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mAlpha>;

        if i0 == $i1 goto label1;

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mAlpha> = i0;

        virtualinvoke r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColor(int, boolean)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        int i0, i1, $i2;
        boolean z0, $z1;
        float[] $r1;
        com.android.internal.colorextraction.drawable._$$Lambda$ScrimDrawable$UWtyAZ9Ss5P5TukFNvAyvh0pNf0 $r3;
        com.android.internal.colorextraction.drawable.ScrimDrawable$1 $r4;
        android.view.animation.DecelerateInterpolator $r5;
        android.animation.ValueAnimator $r6, r7, r8;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColorTo>;

        if i0 != $i2 goto label1;

        return;

     label1:
        r7 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.animation.ValueAnimator mColorAnimation>;

        if r7 == null goto label2;

        $z1 = virtualinvoke r7.<android.animation.ValueAnimator: boolean isRunning()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.animation.ValueAnimator mColorAnimation>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void cancel()>();

     label2:
        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColorTo> = i0;

        if z0 == 0 goto label3;

        i1 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColor>;

        $r1 = newarray (float)[2];

        $r1[0] = 0.0F;

        $r1[1] = 1.0F;

        r8 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r1);

        virtualinvoke r8.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(2000L);

        $r3 = new com.android.internal.colorextraction.drawable._$$Lambda$ScrimDrawable$UWtyAZ9Ss5P5TukFNvAyvh0pNf0;

        specialinvoke $r3.<com.android.internal.colorextraction.drawable._$$Lambda$ScrimDrawable$UWtyAZ9Ss5P5TukFNvAyvh0pNf0: void <init>(com.android.internal.colorextraction.drawable.ScrimDrawable,int,int)>(r0, i1, i0);

        virtualinvoke r8.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r3);

        $r4 = new com.android.internal.colorextraction.drawable.ScrimDrawable$1;

        specialinvoke $r4.<com.android.internal.colorextraction.drawable.ScrimDrawable$1: void <init>(com.android.internal.colorextraction.drawable.ScrimDrawable)>(r0);

        virtualinvoke r8.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r4);

        $r5 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r5.<android.view.animation.DecelerateInterpolator: void <init>()>();

        virtualinvoke r8.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        virtualinvoke r8.<android.animation.ValueAnimator: void start()>();

        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.animation.ValueAnimator mColorAnimation> = r8;

        goto label4;

     label3:
        r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: int mMainColor> = i0;

        virtualinvoke r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: void invalidateSelf()>();

     label4:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setXfermode(android.graphics.Xfermode)
    {
        com.android.internal.colorextraction.drawable.ScrimDrawable r0;
        android.graphics.Xfermode r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.internal.colorextraction.drawable.ScrimDrawable;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(r1);

        virtualinvoke r0.<com.android.internal.colorextraction.drawable.ScrimDrawable: void invalidateSelf()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.colorextraction.drawable.ScrimDrawable: java.lang.String TAG> = "ScrimDrawable";

        <com.android.internal.colorextraction.drawable.ScrimDrawable: long COLOR_ANIMATION_DURATION> = 2000L;

        return;
    }
}
