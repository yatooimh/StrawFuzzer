public class com.android.internal.colorextraction.types.Tonal$ColorRange extends java.lang.Object
{
    private android.util.Range mHue;
    private android.util.Range mLightness;
    private android.util.Range mSaturation;

    public void <init>(android.util.Range, android.util.Range, android.util.Range)
    {
        com.android.internal.colorextraction.types.Tonal$ColorRange r0;
        android.util.Range r1, r2, r3;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ColorRange;

        r1 := @parameter0: android.util.Range;

        r2 := @parameter1: android.util.Range;

        r3 := @parameter2: android.util.Range;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue> = r1;

        r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation> = r2;

        r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness> = r3;

        return;
    }

    public boolean containsColor(float, float, float)
    {
        com.android.internal.colorextraction.types.Tonal$ColorRange r0;
        float f0, f1, f2;
        android.util.Range $r1, $r3, $r5;
        java.lang.Float $r2, $r4, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ColorRange;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r1 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $z0 = virtualinvoke $r1.<android.util.Range: boolean contains(java.lang.Comparable)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $z1 = virtualinvoke $r3.<android.util.Range: boolean contains(java.lang.Comparable)>($r4);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r5 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $z2 = virtualinvoke $r5.<android.util.Range: boolean contains(java.lang.Comparable)>($r6);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public float[] getCenter()
    {
        com.android.internal.colorextraction.types.Tonal$ColorRange r0;
        float[] $r1;
        android.util.Range $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26;
        java.lang.Comparable $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27;
        java.lang.Float $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ColorRange;

        $r1 = newarray (float)[3];

        $r2 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue>;

        $r3 = virtualinvoke $r2.<android.util.Range: java.lang.Comparable getLower()>();

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $r5 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue>;

        $r6 = virtualinvoke $r5.<android.util.Range: java.lang.Comparable getUpper()>();

        $r7 = (java.lang.Float) $r6;

        $f1 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        $r8 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue>;

        $r9 = virtualinvoke $r8.<android.util.Range: java.lang.Comparable getLower()>();

        $r10 = (java.lang.Float) $r9;

        $f2 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        $f3 = $f1 - $f2;

        $f4 = $f3 / 2.0F;

        $f5 = $f0 + $f4;

        $r1[0] = $f5;

        $r11 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation>;

        $r12 = virtualinvoke $r11.<android.util.Range: java.lang.Comparable getLower()>();

        $r13 = (java.lang.Float) $r12;

        $f6 = virtualinvoke $r13.<java.lang.Float: float floatValue()>();

        $r14 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation>;

        $r15 = virtualinvoke $r14.<android.util.Range: java.lang.Comparable getUpper()>();

        $r16 = (java.lang.Float) $r15;

        $f7 = virtualinvoke $r16.<java.lang.Float: float floatValue()>();

        $r17 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation>;

        $r18 = virtualinvoke $r17.<android.util.Range: java.lang.Comparable getLower()>();

        $r19 = (java.lang.Float) $r18;

        $f8 = virtualinvoke $r19.<java.lang.Float: float floatValue()>();

        $f9 = $f7 - $f8;

        $f10 = $f9 / 2.0F;

        $f11 = $f6 + $f10;

        $r1[1] = $f11;

        $r20 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness>;

        $r21 = virtualinvoke $r20.<android.util.Range: java.lang.Comparable getLower()>();

        $r22 = (java.lang.Float) $r21;

        $f12 = virtualinvoke $r22.<java.lang.Float: float floatValue()>();

        $r23 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness>;

        $r24 = virtualinvoke $r23.<android.util.Range: java.lang.Comparable getUpper()>();

        $r25 = (java.lang.Float) $r24;

        $f13 = virtualinvoke $r25.<java.lang.Float: float floatValue()>();

        $r26 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness>;

        $r27 = virtualinvoke $r26.<android.util.Range: java.lang.Comparable getLower()>();

        $r28 = (java.lang.Float) $r27;

        $f14 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $f15 = $f13 - $f14;

        $f16 = $f15 / 2.0F;

        $f17 = $f12 + $f16;

        $r1[2] = $f17;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.android.internal.colorextraction.types.Tonal$ColorRange r0;
        java.lang.Object[] $r1;
        android.util.Range $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ColorRange;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mHue>;

        $r1[0] = $r2;

        $r3 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mSaturation>;

        $r1[1] = $r3;

        $r4 = r0.<com.android.internal.colorextraction.types.Tonal$ColorRange: android.util.Range mLightness>;

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("H: %s, S: %s, L %s", $r1);

        return $r5;
    }
}
