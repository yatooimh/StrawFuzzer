public class com.android.internal.colorextraction.types.Tonal$ConfigParser extends java.lang.Object
{
    private final java.util.ArrayList mTonalPalettes;

    public void <init>(android.content.Context)
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        android.content.res.Resources $r4;
        java.lang.String $r8, $r10, $r11;
        boolean $z0;
        java.lang.Throwable $r12, r21;
        android.content.Context r14;
        android.content.res.XmlResourceParser r15;
        int i0;
        java.util.ArrayList r17;
        java.lang.StringBuilder r18;
        org.xmlpull.v1.XmlPullParserException r19;
        java.lang.RuntimeException r20;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        r14 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: java.util.ArrayList mTonalPalettes> = r17;

     label01:
        $r4 = virtualinvoke r14.<android.content.Context: android.content.res.Resources getResources()>();

        r15 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(18284549);

        i0 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if i0 == 1 goto label09;

        if i0 == 0 goto label07;

        if i0 != 3 goto label03;

        goto label07;

     label03:
        if i0 != 2 goto label06;

     label04:
        $r11 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("palettes");

        if $z0 == 0 goto label05;

        specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: void parsePalettes(org.xmlpull.v1.XmlPullParser)>(r15);

     label05:
        goto label07;

     label06:
        r19 = new org.xmlpull.v1.XmlPullParserException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid XML event ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r8 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r10, r15, null);

        r21 = (java.lang.Throwable) r19;

        throw r21;

     label07:
        i0 = interfaceinvoke r15.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        goto label02;

     label09:
        return;

     label10:
        $r12 := @caughtexception;

        r20 = new java.lang.RuntimeException;

        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw r20;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label10;
        catch java.io.IOException from label01 to label02 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    private void parsePalettes(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        java.lang.String r1, $r6;
        int $i0, $i2;
        boolean $z0;
        java.util.ArrayList $r7;
        com.android.internal.colorextraction.types.Tonal$TonalPalette $r8;
        org.xmlpull.v1.XmlPullParser r9;
        java.lang.StringBuilder r11;
        org.xmlpull.v1.XmlPullParserException r12;
        java.lang.Throwable r13;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        r9 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "palettes");

     label1:
        $i2 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 3 goto label4;

        $i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        r1 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("palette");

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: java.util.ArrayList mTonalPalettes>;

        $r8 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: com.android.internal.colorextraction.types.Tonal$TonalPalette readPalette(org.xmlpull.v1.XmlPullParser)>(r9);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label3:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid tag: ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r12 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label4:
        return;
    }

    private float[] readFloatArray(java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        float[] r1;
        java.lang.String $r2, $r3, $r4, r5;
        int $i0, $i1, i2;
        float $f0;
        java.lang.String[] r6;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        r5 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "");

        r6 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof r6;

        r1 = newarray (float)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r6;

        if i2 >= $i1 goto label2;

        $r4 = r6[i2];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        r1[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    private com.android.internal.colorextraction.types.Tonal$TonalPalette readPalette(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        float[] r2, r3, r4;
        java.lang.String $r5, $r6, $r7;
        com.android.internal.colorextraction.types.Tonal$TonalPalette r10;
        org.xmlpull.v1.XmlPullParserException r11;
        java.lang.Throwable r12;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "palette");

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "h");

        r2 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r5);

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "s");

        r3 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r6);

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "l");

        r4 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r7);

        if r2 == null goto label1;

        if r3 == null goto label1;

        if r4 == null goto label1;

        r10 = new com.android.internal.colorextraction.types.Tonal$TonalPalette;

        specialinvoke r10.<com.android.internal.colorextraction.types.Tonal$TonalPalette: void <init>(float[],float[],float[])>(r2, r3, r4);

        return r10;

     label1:
        r11 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Incomplete range tag.", r1, null);

        r12 = (java.lang.Throwable) r11;

        throw r12;
    }

    private com.android.internal.colorextraction.types.Tonal$ColorRange readRange(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        float[] r2, r3, r4;
        java.lang.String $r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Float $r10, $r11, $r13, $r14, $r16, $r17;
        android.util.Range r19, r20, r21;
        com.android.internal.colorextraction.types.Tonal$ColorRange r22;
        org.xmlpull.v1.XmlPullParserException r23;
        java.lang.Throwable r24;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, null, "range");

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "h");

        r2 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r5);

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "s");

        r3 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r6);

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "l");

        r4 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: float[] readFloatArray(java.lang.String)>($r7);

        if r2 == null goto label1;

        if r3 == null goto label1;

        if r4 == null goto label1;

        r22 = new com.android.internal.colorextraction.types.Tonal$ColorRange;

        r19 = new android.util.Range;

        $f0 = r2[0];

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f1 = r2[1];

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        specialinvoke r19.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r10, $r11);

        r20 = new android.util.Range;

        $f2 = r3[0];

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $f3 = r3[1];

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        specialinvoke r20.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r13, $r14);

        r21 = new android.util.Range;

        $f4 = r4[0];

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $f5 = r4[1];

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        specialinvoke r21.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r16, $r17);

        specialinvoke r22.<com.android.internal.colorextraction.types.Tonal$ColorRange: void <init>(android.util.Range,android.util.Range,android.util.Range)>(r19, r20, r21);

        return r22;

     label1:
        r23 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r23.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Incomplete range tag.", r1, null);

        r24 = (java.lang.Throwable) r23;

        throw r24;
    }

    public java.util.ArrayList getTonalPalettes()
    {
        com.android.internal.colorextraction.types.Tonal$ConfigParser r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$ConfigParser;

        $r1 = r0.<com.android.internal.colorextraction.types.Tonal$ConfigParser: java.util.ArrayList mTonalPalettes>;

        return $r1;
    }
}
