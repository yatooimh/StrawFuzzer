public class com.android.internal.colorextraction.types.Tonal$TonalPalette extends java.lang.Object
{
    public final float[] h;
    public final float[] l;
    public final float maxHue;
    public final float minHue;
    public final float[] s;

    void <init>(float[], float[], float[])
    {
        com.android.internal.colorextraction.types.Tonal$TonalPalette r0;
        float[] r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4, i5;
        float f0, f1, f2;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r10, $r13, $r16;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: com.android.internal.colorextraction.types.Tonal$TonalPalette;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label3;

        $i4 = lengthof r2;

        $i3 = lengthof r3;

        if $i4 != $i3 goto label3;

        r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] h> = r1;

        r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] s> = r2;

        r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] l> = r3;

        f1 = #InfinityF;

        f2 = #-InfinityF;

        i0 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        f0 = r1[i5];

        f1 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f2);

        i5 = i5 + 1;

        goto label1;

     label2:
        r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue> = f1;

        r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue> = f2;

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All arrays should have the same size. h: ");

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s: ");

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" l: ");

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;
    }
}
