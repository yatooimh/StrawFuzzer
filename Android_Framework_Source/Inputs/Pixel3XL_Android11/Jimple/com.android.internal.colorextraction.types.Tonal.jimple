public class com.android.internal.colorextraction.types.Tonal extends java.lang.Object implements com.android.internal.colorextraction.types.ExtractionType
{
    private static final boolean DEBUG;
    private static final float FIT_WEIGHT_H;
    private static final float FIT_WEIGHT_L;
    private static final float FIT_WEIGHT_S;
    public static final int MAIN_COLOR_DARK;
    public static final int MAIN_COLOR_LIGHT;
    public static final int MAIN_COLOR_REGULAR;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.internal.colorextraction.types.Tonal$TonalPalette mGreyPalette;
    private float[] mTmpHSL;
    private final java.util.ArrayList mTonalPalettes;

    public void <init>(android.content.Context)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        android.content.Context r1;
        java.util.ArrayList r2, $r7;
        float[] $r3;
        com.android.internal.colorextraction.types.Tonal$ConfigParser $r4;
        java.lang.Object $r5;
        com.android.internal.colorextraction.types.Tonal$TonalPalette $r6;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (float)[3];

        r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL> = $r3;

        $r4 = new com.android.internal.colorextraction.types.Tonal$ConfigParser;

        specialinvoke $r4.<com.android.internal.colorextraction.types.Tonal$ConfigParser: void <init>(android.content.Context)>(r1);

        r2 = virtualinvoke $r4.<com.android.internal.colorextraction.types.Tonal$ConfigParser: java.util.ArrayList getTonalPalettes()>();

        r0.<com.android.internal.colorextraction.types.Tonal: java.util.ArrayList mTonalPalettes> = r2;

        r0.<com.android.internal.colorextraction.types.Tonal: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.colorextraction.types.Tonal$TonalPalette) $r5;

        r0.<com.android.internal.colorextraction.types.Tonal: com.android.internal.colorextraction.types.Tonal$TonalPalette mGreyPalette> = $r6;

        $r7 = r0.<com.android.internal.colorextraction.types.Tonal: java.util.ArrayList mTonalPalettes>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        return;
    }

    private void applyFallback(android.app.WallpaperColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        android.app.WallpaperColors r1;
        com.android.internal.colorextraction.ColorExtractor$GradientColors r2, r3, r4;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r1 := @parameter0: android.app.WallpaperColors;

        r2 := @parameter1: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r3 := @parameter2: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r4 := @parameter3: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        virtualinvoke r0.<com.android.internal.colorextraction.types.Tonal: void applyFallback(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r2);

        virtualinvoke r0.<com.android.internal.colorextraction.types.Tonal: void applyFallback(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r3);

        virtualinvoke r0.<com.android.internal.colorextraction.types.Tonal: void applyFallback(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r4);

        return;
    }

    private static int bestFit(com.android.internal.colorextraction.types.Tonal$TonalPalette, float, float, float)
    {
        com.android.internal.colorextraction.types.Tonal$TonalPalette r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18;
        float[] $r1, $r2, $r3, $r4;
        int $i0, i2, i3;
        byte $b1;

        r0 := @parameter0: com.android.internal.colorextraction.types.Tonal$TonalPalette;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        i2 = -1;

        f17 = #InfinityF;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] h>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $r2 = r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] h>;

        $f4 = $r2[i3];

        $f5 = f0 - $f4;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f9 = $f6 * 1.0F;

        $r3 = r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] s>;

        $f7 = $r3[i3];

        $f8 = f1 - $f7;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $f11 = $f10 * 1.0F;

        $f14 = $f9 + $f11;

        $r4 = r0.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] l>;

        $f12 = $r4[i3];

        $f13 = f2 - $f12;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>($f13);

        $f16 = $f15 * 10.0F;

        f3 = $f14 + $f16;

        f18 = f17;

        $b1 = f3 cmpg f17;

        if $b1 >= 0 goto label2;

        f18 = f3;

        i2 = i3;

     label2:
        i3 = i3 + 1;

        f17 = f18;

        goto label1;

     label3:
        return i2;
    }

    private com.android.internal.colorextraction.types.Tonal$TonalPalette findTonalPalette(float, float)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, f30, f31, $f32, $f33, f34, $f35;
        int i0, i17;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b18, $b19, $b20;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.colorextraction.types.Tonal$TonalPalette $r4, r5, r6, r7;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        f0 := @parameter0: float;

        f30 := @parameter1: float;

        $b1 = f30 cmpg 0.05F;

        if $b1 >= 0 goto label01;

        $r4 = r0.<com.android.internal.colorextraction.types.Tonal: com.android.internal.colorextraction.types.Tonal$TonalPalette mGreyPalette>;

        return $r4;

     label01:
        r5 = null;

        f31 = #InfinityF;

        $r1 = r0.<com.android.internal.colorextraction.types.Tonal: java.util.ArrayList mTonalPalettes>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i17 = 0;

     label02:
        r6 = r5;

        if i17 >= i0 goto label10;

        $r2 = r0.<com.android.internal.colorextraction.types.Tonal: java.util.ArrayList mTonalPalettes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r6 = (com.android.internal.colorextraction.types.Tonal$TonalPalette) $r3;

        $f1 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $b2 = f0 cmpl $f1;

        if $b2 < 0 goto label03;

        $f29 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $b16 = f0 cmpg $f29;

        if $b16 > 0 goto label03;

        goto label10;

     label03:
        $f2 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $b3 = $f2 cmpl 1.0F;

        if $b3 <= 0 goto label04;

        $b14 = f0 cmpl 0.0F;

        if $b14 < 0 goto label04;

        $f27 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $f28 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f27);

        $b15 = f0 cmpg $f28;

        if $b15 > 0 goto label04;

        goto label10;

     label04:
        $f32 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $b18 = $f32 cmpg 0.0F;

        if $b18 >= 0 goto label05;

        $f25 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $f26 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f25);

        $b12 = f0 cmpl $f26;

        if $b12 < 0 goto label05;

        $b13 = f0 cmpg 1.0F;

        if $b13 > 0 goto label05;

        goto label10;

     label05:
        $f33 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $b19 = f0 cmpg $f33;

        if $b19 > 0 goto label06;

        $f22 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $f23 = $f22 - f0;

        $b11 = $f23 cmpg f31;

        if $b11 >= 0 goto label06;

        r7 = r6;

        $f24 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        f34 = $f24 - f0;

        goto label09;

     label06:
        $f3 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $b4 = f0 cmpl $f3;

        if $b4 < 0 goto label07;

        $f19 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $f20 = f0 - $f19;

        $b10 = $f20 cmpg f31;

        if $b10 >= 0 goto label07;

        r7 = r6;

        $f21 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        f34 = f0 - $f21;

        goto label09;

     label07:
        $f4 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $b5 = $f4 cmpl 1.0F;

        if $b5 <= 0 goto label08;

        $f12 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $f13 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f12);

        $b8 = f0 cmpl $f13;

        if $b8 < 0 goto label08;

        $f14 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $f15 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f14);

        $f16 = f0 - $f15;

        $b9 = $f16 cmpg f31;

        if $b9 >= 0 goto label08;

        r7 = r6;

        $f17 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float maxHue>;

        $f18 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f17);

        f34 = f0 - $f18;

        goto label09;

     label08:
        r7 = r5;

        f34 = f31;

        $f35 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $b20 = $f35 cmpg 0.0F;

        if $b20 >= 0 goto label09;

        r7 = r5;

        f34 = f31;

        $f5 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $f6 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f5);

        $b6 = f0 cmpg $f6;

        if $b6 > 0 goto label09;

        r7 = r5;

        f34 = f31;

        $f7 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $f8 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f7);

        $f9 = $f8 - f0;

        $b7 = $f9 cmpg f31;

        if $b7 >= 0 goto label09;

        r7 = r6;

        $f10 = r6.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float minHue>;

        $f11 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f10);

        f34 = $f11 - f0;

     label09:
        i17 = i17 + 1;

        r5 = r7;

        f31 = f34;

        goto label02;

     label10:
        return r6;
    }

    private static float[] fit(float[], float, int, float, float)
    {
        float[] r0, r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        i2 := @parameter2: int;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        $i0 = lengthof r0;

        r1 = newarray (float)[$i0];

        f3 = r0[i2];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $f5 = r0[i3];

        $f4 = f0 - f3;

        $f6 = $f5 + $f4;

        $f7 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>($f6, f1, f2);

        r1[i3] = $f7;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static float fract(float)
    {
        float f0, $f1, $f2;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f1 = (float) $d1;

        $f2 = f0 - $f1;

        return $f2;
    }

    private int getColorInt(int, float[], float[], float[])
    {
        com.android.internal.colorextraction.types.Tonal r0;
        int i0, $i1;
        float[] r1, r2, $r3, r4, r5;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        i0 := @parameter0: int;

        r4 := @parameter1: float[];

        r1 := @parameter2: float[];

        r2 := @parameter3: float[];

        $r3 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        $f0 = r4[i0];

        $f1 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float fract(float)>($f0);

        $f2 = $f1 * 360.0F;

        $r3[0] = $f2;

        r5 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        $f3 = r1[i0];

        r5[1] = $f3;

        $f4 = r2[i0];

        r5[2] = $f4;

        $i1 = staticinvoke <com.android.internal.graphics.ColorUtils: int HSLToColor(float[])>(r5);

        return $i1;
    }

    private int[] getColorPalette(com.android.internal.colorextraction.types.Tonal$TonalPalette)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        com.android.internal.colorextraction.types.Tonal$TonalPalette r1;
        float[] $r2, $r3, $r4;
        int[] $r5;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r1 := @parameter0: com.android.internal.colorextraction.types.Tonal$TonalPalette;

        $r4 = r1.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] h>;

        $r3 = r1.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] s>;

        $r2 = r1.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] l>;

        $r5 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int[] getColorPalette(float[],float[],float[])>($r4, $r3, $r2);

        return $r5;
    }

    private int[] getColorPalette(float[], float[], float[])
    {
        com.android.internal.colorextraction.types.Tonal r0;
        float[] r1, r2, r3;
        int[] r4;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        r3 := @parameter2: float[];

        $i0 = lengthof r1;

        r4 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r4;

        if i3 >= $i1 goto label2;

        $i2 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i3, r1, r2, r3);

        r4[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r4;
    }

    private boolean runTonalExtraction(android.app.WallpaperColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        com.android.internal.colorextraction.ColorExtractor$GradientColors r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, i19, i20, i21, i22, i23, i24, i25, i26;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.lang.Object $r4;
        android.graphics.Color $r5;
        float[] $r6, $r7, $r8, $r19, $r20, r32, r34, r35, r36, r40, r41;
        java.lang.StringBuilder $r9, $r16, $r42;
        java.lang.String $r13, $r17, $r18, $r27, $r44;
        byte $b9, $b10;
        android.app.WallpaperColors r30;
        java.util.List r31;
        boolean z0;
        com.android.internal.colorextraction.types.Tonal$TonalPalette r33;
        int[] r37;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r30 := @parameter0: android.app.WallpaperColors;

        r1 := @parameter1: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r2 := @parameter2: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r3 := @parameter3: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        if r30 != null goto label01;

        return 0;

     label01:
        r31 = virtualinvoke r30.<android.app.WallpaperColors: java.util.List getMainColors()>();

        i19 = interfaceinvoke r31.<java.util.List: int size()>();

        $i1 = virtualinvoke r30.<android.app.WallpaperColors: int getColorHints()>();

        $i2 = $i1 & 1;

        if $i2 == 0 goto label02;

        z0 = 1;

        goto label03;

     label02:
        z0 = 0;

     label03:
        if i19 != 0 goto label04;

        return 0;

     label04:
        $r4 = interfaceinvoke r31.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.graphics.Color) $r4;

        i20 = virtualinvoke $r5.<android.graphics.Color: int toArgb()>();

        r32 = newarray (float)[3];

        $i3 = staticinvoke <android.graphics.Color: int red(int)>(i20);

        $i4 = staticinvoke <android.graphics.Color: int green(int)>(i20);

        $i5 = staticinvoke <android.graphics.Color: int blue(int)>(i20);

        staticinvoke <com.android.internal.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i3, $i4, $i5, r32);

        $f1 = r32[0];

        $f2 = $f1 / 360.0F;

        r32[0] = $f2;

        $f4 = r32[0];

        $f3 = r32[1];

        r33 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: com.android.internal.colorextraction.types.Tonal$TonalPalette findTonalPalette(float,float)>($f4, $f3);

        if r33 != null goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Tonal", "Could not find a tonal palette!");

        return 0;

     label05:
        $f7 = r32[0];

        $f6 = r32[1];

        $f5 = r32[2];

        i0 = staticinvoke <com.android.internal.colorextraction.types.Tonal: int bestFit(com.android.internal.colorextraction.types.Tonal$TonalPalette,float,float,float)>(r33, $f7, $f6, $f5);

        if i0 != -1 goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Tonal", "Could not find best fit!");

        return 0;

     label06:
        $r6 = r33.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] h>;

        $f8 = r32[0];

        r34 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float[] fit(float[],float,int,float,float)>($r6, $f8, i0, #-InfinityF, #InfinityF);

        $r7 = r33.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] s>;

        $f9 = r32[1];

        r35 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float[] fit(float[],float,int,float,float)>($r7, $f9, i0, 0.0F, 1.0F);

        $r8 = r33.<com.android.internal.colorextraction.types.Tonal$TonalPalette: float[] l>;

        $f10 = r32[2];

        r36 = staticinvoke <com.android.internal.colorextraction.types.Tonal: float[] fit(float[],float,int,float,float)>($r8, $f10, i0, 0.0F, 1.0F);

        r37 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int[] getColorPalette(float[],float[],float[])>(r34, r35, r36);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tonal Palette - index: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Main color: ");

        $i6 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i0, r34, r35, r36);

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nColors: ");

        $r16 = new java.lang.StringBuilder;

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        i21 = 0;

     label07:
        $i7 = lengthof r34;

        if i21 >= $i7 goto label09;

        $i14 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i21, r34, r35, r36);

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $i15 = lengthof r34;

        $i16 = $i15 - 1;

        if i21 >= $i16 goto label08;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label08:
        i21 = i21 + 1;

        goto label07;

     label09:
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tonal", $r18);

        i22 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i0, r34, r35, r36);

        $r19 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        staticinvoke <com.android.internal.graphics.ColorUtils: void colorToHSL(int,float[])>(i22, $r19);

        r40 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        f0 = r40[2];

        staticinvoke <com.android.internal.graphics.ColorUtils: void colorToHSL(int,float[])>(-2433824, r40);

        r41 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        $f11 = r41[2];

        $b9 = f0 cmpl $f11;

        if $b9 <= 0 goto label10;

        return 0;

     label10:
        staticinvoke <com.android.internal.graphics.ColorUtils: void colorToHSL(int,float[])>(-14671580, r41);

        $r20 = r0.<com.android.internal.colorextraction.types.Tonal: float[] mTmpHSL>;

        $f12 = $r20[2];

        $b10 = f0 cmpg $f12;

        if $b10 >= 0 goto label11;

        return 0;

     label11:
        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setMainColor(int)>(i22);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSecondaryColor(int)>(i22);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setColorPalette(int[])>(r37);

        if z0 == 0 goto label12;

        $i13 = lengthof r34;

        i23 = $i13 - 1;

        goto label14;

     label12:
        if i0 >= 2 goto label13;

        i23 = 0;

        goto label14;

     label13:
        i23 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 3);

     label14:
        i24 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i23, r34, r35, r36);

        virtualinvoke r2.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setMainColor(int)>(i24);

        virtualinvoke r2.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSecondaryColor(int)>(i24);

        virtualinvoke r2.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setColorPalette(int[])>(r37);

        if z0 == 0 goto label15;

        $i12 = lengthof r34;

        i25 = $i12 - 1;

        goto label17;

     label15:
        if i0 >= 2 goto label16;

        i25 = 0;

        goto label17;

     label16:
        i25 = 2;

     label17:
        i26 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int getColorInt(int,float[],float[],float[])>(i25, r34, r35, r36);

        virtualinvoke r3.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setMainColor(int)>(i26);

        virtualinvoke r3.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSecondaryColor(int)>(i26);

        virtualinvoke r3.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setColorPalette(int[])>(r37);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSupportsDarkText(boolean)>(z0);

        virtualinvoke r2.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSupportsDarkText(boolean)>(z0);

        virtualinvoke r3.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSupportsDarkText(boolean)>(z0);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Gradients: \n\tNormal ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\tDark ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\tExtra dark: ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tonal", $r44);

        return 1;
    }

    public void applyFallback(android.app.WallpaperColors, com.android.internal.colorextraction.ColorExtractor$GradientColors)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        com.android.internal.colorextraction.ColorExtractor$GradientColors r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.app.WallpaperColors r2;
        boolean z0, z1, z2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        float[] r6;
        float $f0, $f1;
        com.android.internal.colorextraction.types.Tonal$TonalPalette $r7;
        int[] $r8;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r2 := @parameter0: android.app.WallpaperColors;

        r1 := @parameter1: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        if r2 == null goto label01;

        $i2 = virtualinvoke r2.<android.app.WallpaperColors: int getColorHints()>();

        $i3 = $i2 & 1;

        if $i3 == 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if r2 == null goto label03;

        $i0 = virtualinvoke r2.<android.app.WallpaperColors: int getColorHints()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        $r3 = r0.<com.android.internal.colorextraction.types.Tonal: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i4 = $r5.<android.content.res.Configuration: int uiMode>;

        $i5 = $i4 & 48;

        if $i5 != 32 goto label05;

        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        if z0 == 0 goto label07;

        i6 = -2433824;

        goto label10;

     label07:
        if z1 != 0 goto label09;

        if z2 == 0 goto label08;

        goto label09;

     label08:
        i6 = -16777216;

        goto label10;

     label09:
        i6 = -14671580;

     label10:
        r6 = newarray (float)[3];

        staticinvoke <com.android.internal.graphics.ColorUtils: void colorToHSL(int,float[])>(i6, r6);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setMainColor(int)>(i6);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSecondaryColor(int)>(i6);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setSupportsDarkText(boolean)>(z0);

        $f0 = r6[0];

        $f1 = r6[1];

        $r7 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: com.android.internal.colorextraction.types.Tonal$TonalPalette findTonalPalette(float,float)>($f0, $f1);

        $r8 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: int[] getColorPalette(com.android.internal.colorextraction.types.Tonal$TonalPalette)>($r7);

        virtualinvoke r1.<com.android.internal.colorextraction.ColorExtractor$GradientColors: void setColorPalette(int[])>($r8);

        return;
    }

    public void extractInto(android.app.WallpaperColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors, com.android.internal.colorextraction.ColorExtractor$GradientColors)
    {
        com.android.internal.colorextraction.types.Tonal r0;
        android.app.WallpaperColors r1;
        com.android.internal.colorextraction.ColorExtractor$GradientColors r2, r3, r4;
        boolean $z0;

        r0 := @this: com.android.internal.colorextraction.types.Tonal;

        r1 := @parameter0: android.app.WallpaperColors;

        r2 := @parameter1: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r3 := @parameter2: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        r4 := @parameter3: com.android.internal.colorextraction.ColorExtractor$GradientColors;

        $z0 = specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: boolean runTonalExtraction(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r2, r3, r4);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.colorextraction.types.Tonal: void applyFallback(android.app.WallpaperColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors,com.android.internal.colorextraction.ColorExtractor$GradientColors)>(r1, r2, r3, r4);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.colorextraction.types.Tonal: java.lang.String TAG> = "Tonal";

        <com.android.internal.colorextraction.types.Tonal: int MAIN_COLOR_REGULAR> = -16777216;

        <com.android.internal.colorextraction.types.Tonal: int MAIN_COLOR_LIGHT> = -2433824;

        <com.android.internal.colorextraction.types.Tonal: int MAIN_COLOR_DARK> = -14671580;

        <com.android.internal.colorextraction.types.Tonal: float FIT_WEIGHT_S> = 1.0F;

        <com.android.internal.colorextraction.types.Tonal: float FIT_WEIGHT_L> = 10.0F;

        <com.android.internal.colorextraction.types.Tonal: float FIT_WEIGHT_H> = 1.0F;

        <com.android.internal.colorextraction.types.Tonal: boolean DEBUG> = 1;

        return;
    }
}
