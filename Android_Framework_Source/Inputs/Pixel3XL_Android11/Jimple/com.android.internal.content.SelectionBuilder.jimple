public class com.android.internal.content.SelectionBuilder extends java.lang.Object
{
    private java.lang.StringBuilder mSelection;
    private java.util.ArrayList mSelectionArgs;

    public void <init>()
    {
        com.android.internal.content.SelectionBuilder r0;
        java.lang.StringBuilder $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.content.SelectionBuilder: java.util.ArrayList mSelectionArgs> = $r2;

        return;
    }

    public transient com.android.internal.content.SelectionBuilder append(java.lang.String, java.lang.Object[])
    {
        com.android.internal.content.SelectionBuilder r0;
        java.lang.Object[] r1;
        java.lang.StringBuilder r2, $r3, $r9;
        int i0, $i1, $i2, i3;
        boolean $z0;
        java.util.ArrayList $r7;
        java.lang.String $r8, r12;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object r13;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 == 0 goto label3;

        if r1 == null goto label2;

        $i2 = lengthof r1;

        if $i2 > 0 goto label1;

        goto label2;

     label1:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Valid selection required when including arguments");

        throw $r11;

     label2:
        return r0;

     label3:
        $r3 = r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection>;

        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label4;

        $r9 = r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

     label4:
        r2 = r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        if r1 == null goto label6;

        i0 = lengthof r1;

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        r13 = r1[i3];

        $r7 = r0.<com.android.internal.content.SelectionBuilder: java.util.ArrayList mSelectionArgs>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r13);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label5;

     label6:
        return r0;
    }

    public int delete(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        com.android.internal.content.SelectionBuilder r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r3;
        java.lang.String[] $r4;
        int $i0;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String getSelection()>();

        $r4 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String[] getSelectionArgs()>();

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r2, $r3, $r4);

        return $i0;
    }

    public java.lang.String getSelection()
    {
        com.android.internal.content.SelectionBuilder r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        $r1 = r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String[] getSelectionArgs()
    {
        com.android.internal.content.SelectionBuilder r0;
        java.util.ArrayList r1;
        int $i0;
        java.lang.String[] $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r1 = r0.<com.android.internal.content.SelectionBuilder: java.util.ArrayList mSelectionArgs>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public android.database.Cursor query(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.internal.content.SelectionBuilder r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;
        android.database.Cursor $r5;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, null, null, r4, null);

        return $r5;
    }

    public android.database.Cursor query(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.content.SelectionBuilder r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r4, r5, r6, r7, $r8;
        java.lang.String[] r3, $r9;
        android.database.Cursor $r10;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $r8 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String getSelection()>();

        $r9 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String[] getSelectionArgs()>();

        $r10 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, $r8, $r9, r4, r5, r6, r7);

        return $r10;
    }

    public com.android.internal.content.SelectionBuilder reset()
    {
        com.android.internal.content.SelectionBuilder r0;
        java.lang.StringBuilder $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        $r1 = r0.<com.android.internal.content.SelectionBuilder: java.lang.StringBuilder mSelection>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<com.android.internal.content.SelectionBuilder: java.util.ArrayList mSelectionArgs>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return r0;
    }

    public int update(android.database.sqlite.SQLiteDatabase, java.lang.String, android.content.ContentValues)
    {
        com.android.internal.content.SelectionBuilder r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r4;
        android.content.ContentValues r3;
        java.lang.String[] $r5;
        int $i0;

        r0 := @this: com.android.internal.content.SelectionBuilder;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String getSelection()>();

        $r5 = virtualinvoke r0.<com.android.internal.content.SelectionBuilder: java.lang.String[] getSelectionArgs()>();

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, $r4, $r5);

        return $i0;
    }
}
