class com.android.internal.content.om.OverlayConfigParser$OverlayPartition extends android.content.pm.PackagePartitions$SystemPartition
{
    static final java.lang.String POLICY_ODM;
    static final java.lang.String POLICY_OEM;
    static final java.lang.String POLICY_PRODUCT;
    static final java.lang.String POLICY_PUBLIC;
    static final java.lang.String POLICY_SYSTEM;
    static final java.lang.String POLICY_VENDOR;
    public final java.lang.String policy;

    void <init>(android.content.pm.PackagePartitions$SystemPartition)
    {
        com.android.internal.content.om.OverlayConfigParser$OverlayPartition r0;
        android.content.pm.PackagePartitions$SystemPartition r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.content.om.OverlayConfigParser$OverlayPartition;

        r1 := @parameter0: android.content.pm.PackagePartitions$SystemPartition;

        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(android.content.pm.PackagePartitions$SystemPartition)>(r1);

        $r2 = staticinvoke <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String policyForPartition(android.content.pm.PackagePartitions$SystemPartition)>(r1);

        r0.<com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String policy> = $r2;

        return;
    }

    void <init>(java.io.File, android.content.pm.PackagePartitions$SystemPartition)
    {
        com.android.internal.content.om.OverlayConfigParser$OverlayPartition r0;
        java.io.File r1;
        android.content.pm.PackagePartitions$SystemPartition r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.content.om.OverlayConfigParser$OverlayPartition;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.content.pm.PackagePartitions$SystemPartition;

        specialinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: void <init>(java.io.File,android.content.pm.PackagePartitions$SystemPartition)>(r1, r2);

        $r3 = staticinvoke <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String policyForPartition(android.content.pm.PackagePartitions$SystemPartition)>(r2);

        r0.<com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String policy> = $r3;

        return;
    }

    private static java.lang.String policyForPartition(android.content.pm.PackagePartitions$SystemPartition)
    {
        android.content.pm.PackagePartitions$SystemPartition r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.io.File $r4;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.pm.PackagePartitions$SystemPartition;

        i0 = r0.<android.content.pm.PackagePartitions$SystemPartition: int type>;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 != 5 goto label1;

        goto label6;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine policy for ");

        $r4 = virtualinvoke r0.<android.content.pm.PackagePartitions$SystemPartition: java.io.File getFolder()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return "product";

     label3:
        return "oem";

     label4:
        return "odm";

     label5:
        return "vendor";

     label6:
        return "system";
    }

    public static void <clinit>()
    {
        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_VENDOR> = "vendor";

        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_SYSTEM> = "system";

        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_PUBLIC> = "public";

        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_PRODUCT> = "product";

        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_OEM> = "oem";

        <com.android.internal.content.om.OverlayConfigParser$OverlayPartition: java.lang.String POLICY_ODM> = "odm";

        return;
    }
}
