public class com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration extends java.lang.Object
{
    public final boolean enabled;
    public final boolean mutable;
    public final java.lang.String packageName;
    public final com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo parsedInfo;
    public final java.lang.String policy;

    void <init>(java.lang.String, boolean, boolean, java.lang.String, com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo)
    {
        com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration r0;
        java.lang.String r1, r2;
        boolean z0, z1;
        com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo r3;

        r0 := @this: com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: java.lang.String packageName> = r1;

        r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: boolean enabled> = z0;

        r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: boolean mutable> = z1;

        r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: java.lang.String policy> = r2;

        r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo parsedInfo> = r3;

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r10, $r12, $r14;
        java.lang.Object[] $r6;
        boolean $z0, $z1;
        java.lang.Boolean $r8, $r9;
        com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo $r11;

        r0 := @this: com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = newarray (java.lang.Object)[5];

        $r7 = r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: java.lang.String packageName>;

        $r6[0] = $r7;

        $z0 = r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: boolean enabled>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6[1] = $r8;

        $z1 = r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: boolean mutable>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r6[2] = $r9;

        $r10 = r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: java.lang.String policy>;

        $r6[3] = $r10;

        $r11 = r0.<com.android.internal.content.om.OverlayConfigParser$ParsedConfiguration: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo parsedInfo>;

        $r6[4] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{packageName=%s, enabled=%s, mutable=%s, policy=%s, parsedInfo=%s}", $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
