public class com.android.internal.content.om.OverlayScanner extends java.lang.Object
{
    private final android.util.ArrayMap mParsedOverlayInfos;

    public void <init>()
    {
        com.android.internal.content.om.OverlayScanner r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.internal.content.om.OverlayScanner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.content.om.OverlayScanner: android.util.ArrayMap mParsedOverlayInfos> = $r1;

        return;
    }

    final java.util.Collection getAllParsedInfos()
    {
        com.android.internal.content.om.OverlayScanner r0;
        android.util.ArrayMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.android.internal.content.om.OverlayScanner;

        $r1 = r0.<com.android.internal.content.om.OverlayScanner: android.util.ArrayMap mParsedOverlayInfos>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Collection values()>();

        return $r2;
    }

    public final com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo getParsedInfo(java.lang.String)
    {
        com.android.internal.content.om.OverlayScanner r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo $r4;

        r0 := @this: com.android.internal.content.om.OverlayScanner;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.content.om.OverlayScanner: android.util.ArrayMap mParsedOverlayInfos>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo) $r3;

        return $r4;
    }

    public com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo parseOverlayManifest(java.io.File)
    {
        com.android.internal.content.om.OverlayScanner r0;
        java.lang.String r1, $r3, $r4, r10;
        int i0, i1;
        boolean z0;
        java.io.File r2, r7;
        com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo $r5, r9;
        android.content.pm.PackageParser$PackageParserException $r6;
        android.content.pm.PackageParser$ApkLite r8;

        r0 := @this: com.android.internal.content.om.OverlayScanner;

        r7 := @parameter0: java.io.File;

     label1:
        r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$ApkLite parseApkLite(java.io.File,int)>(r7, 0);

        $r3 = r8.<android.content.pm.PackageParser$ApkLite: java.lang.String targetPackageName>;

        if $r3 != null goto label3;

     label2:
        r9 = null;

        goto label4;

     label3:
        r10 = r8.<android.content.pm.PackageParser$ApkLite: java.lang.String packageName>;

        r1 = r8.<android.content.pm.PackageParser$ApkLite: java.lang.String targetPackageName>;

        i0 = r8.<android.content.pm.PackageParser$ApkLite: int targetSdkVersion>;

        z0 = r8.<android.content.pm.PackageParser$ApkLite: boolean overlayIsStatic>;

        i1 = r8.<android.content.pm.PackageParser$ApkLite: int overlayPriority>;

        r2 = new java.io.File;

        $r4 = r8.<android.content.pm.PackageParser$ApkLite: java.lang.String codePath>;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $r5 = new com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo;

        specialinvoke $r5.<com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo: void <init>(java.lang.String,java.lang.String,int,boolean,int,java.io.File)>(r10, r1, i0, z0, i1, r2);

        r9 = $r5;

     label4:
        return r9;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("OverlayConfig", "Got exception loading overlay.", $r6);

        return null;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label5;
        catch android.content.pm.PackageParser$PackageParserException from label3 to label4 with label5;
    }

    public void scanDir(java.io.File)
    {
        com.android.internal.content.om.OverlayScanner r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, i2;
        java.lang.String $r1, $r2, $r9;
        android.util.ArrayMap $r3;
        java.lang.StringBuilder $r5;
        java.io.File r10, r13;
        java.io.File[] r12;
        com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo r14;

        r0 := @this: com.android.internal.content.om.OverlayScanner;

        r10 := @parameter0: java.io.File;

        $z0 = virtualinvoke r10.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label10;

        $z1 = virtualinvoke r10.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label01;

        goto label10;

     label01:
        $z2 = virtualinvoke r10.<java.io.File: boolean canRead()>();

        if $z2 != 0 goto label02;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("OverlayConfig", $r9);

        return;

     label02:
        r12 = virtualinvoke r10.<java.io.File: java.io.File[] listFiles()>();

        if r12 != null goto label03;

        return;

     label03:
        i2 = 0;

     label04:
        $i0 = lengthof r12;

        if i2 >= $i0 goto label09;

        r13 = r12[i2];

        $z3 = virtualinvoke r13.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label05;

        virtualinvoke r0.<com.android.internal.content.om.OverlayScanner: void scanDir(java.io.File)>(r13);

     label05:
        $z4 = virtualinvoke r13.<java.io.File: boolean isFile()>();

        if $z4 == 0 goto label08;

        $r1 = virtualinvoke r13.<java.io.File: java.lang.String getPath()>();

        $z5 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z5 != 0 goto label06;

        goto label08;

     label06:
        r14 = virtualinvoke r0.<com.android.internal.content.om.OverlayScanner: com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo parseOverlayManifest(java.io.File)>(r13);

        if r14 != null goto label07;

        goto label08;

     label07:
        $r3 = r0.<com.android.internal.content.om.OverlayScanner: android.util.ArrayMap mParsedOverlayInfos>;

        $r2 = r14.<com.android.internal.content.om.OverlayScanner$ParsedOverlayInfo: java.lang.String packageName>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r14);

     label08:
        i2 = i2 + 1;

        goto label04;

     label09:
        return;

     label10:
        return;
    }
}
