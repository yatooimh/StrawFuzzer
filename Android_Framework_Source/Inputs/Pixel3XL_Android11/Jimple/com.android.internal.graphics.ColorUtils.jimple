public final class com.android.internal.graphics.ColorUtils extends java.lang.Object
{
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS;
    private static final int MIN_ALPHA_SEARCH_PRECISION;
    private static final java.lang.ThreadLocal TEMP_ARRAY;
    private static final double XYZ_EPSILON;
    private static final double XYZ_KAPPA;
    private static final double XYZ_WHITE_REFERENCE_X;
    private static final double XYZ_WHITE_REFERENCE_Y;
    private static final double XYZ_WHITE_REFERENCE_Z;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        <com.android.internal.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Z> = 108.883;

        <com.android.internal.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Y> = 100.0;

        <com.android.internal.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_X> = 95.047;

        <com.android.internal.graphics.ColorUtils: double XYZ_KAPPA> = 903.3;

        <com.android.internal.graphics.ColorUtils: double XYZ_EPSILON> = 0.008856;

        <com.android.internal.graphics.ColorUtils: int MIN_ALPHA_SEARCH_PRECISION> = 1;

        <com.android.internal.graphics.ColorUtils: int MIN_ALPHA_SEARCH_MAX_ITERATIONS> = 10;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <com.android.internal.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.internal.graphics.ColorUtils r0;

        r0 := @this: com.android.internal.graphics.ColorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int HSLToColor(float[])
    {
        float[] r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, f42, f43, f44, f45;
        int i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i8;

        r0 := @parameter0: float[];

        f0 = r0[0];

        f42 = r0[1];

        f43 = r0[2];

        $f2 = f43 * 2.0F;

        $f3 = $f2 - 1.0F;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $f5 = 1.0F - $f4;

        f44 = $f5 * f42;

        $f6 = 0.5F * f44;

        f45 = f43 - $f6;

        $f7 = f0 / 60.0F;

        $f8 = $f7 % 2.0F;

        $f9 = $f8 - 1.0F;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $f11 = 1.0F - $f10;

        f1 = $f11 * f44;

        $i1 = (int) f0;

        i0 = $i1 / 60;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        tableswitch(i0)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label8;

     label2:
        $f12 = f44 + f45;

        $f13 = $f12 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f13);

        $f14 = f45 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f14);

        $f15 = f1 + f45;

        $f16 = $f15 * 255.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f16);

        goto label8;

     label3:
        $f17 = f1 + f45;

        $f18 = $f17 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f18);

        $f19 = f45 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f19);

        $f20 = f44 + f45;

        $f21 = $f20 * 255.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f21);

        goto label8;

     label4:
        $f22 = f45 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f22);

        $f23 = f1 + f45;

        $f24 = $f23 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f24);

        $f25 = f44 + f45;

        $f26 = $f25 * 255.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f26);

        goto label8;

     label5:
        $f27 = f45 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f27);

        $f28 = f44 + f45;

        $f29 = $f28 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f29);

        $f30 = f1 + f45;

        $f31 = $f30 * 255.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f31);

        goto label8;

     label6:
        $f32 = f1 + f45;

        $f33 = $f32 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f33);

        $f34 = f44 + f45;

        $f35 = $f34 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f35);

        $f36 = 255.0F * f45;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f36);

        goto label8;

     label7:
        $f37 = f44 + f45;

        $f38 = $f37 * 255.0F;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f38);

        $f39 = f1 + f45;

        $f40 = $f39 * 255.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f40);

        $f41 = 255.0F * f45;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f41);

     label8:
        $i5 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>(i2, 0, 255);

        $i6 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>(i3, 0, 255);

        $i7 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>(i4, 0, 255);

        $i8 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i5, $i6, $i7);

        return $i8;
    }

    public static int LABToColor(double, double, double)
    {
        double d0, d1, d2, $d3, $d4, $d5;
        double[] r0;
        int $i0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r0 = staticinvoke <com.android.internal.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <com.android.internal.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])>(d0, d1, d2, r0);

        $d5 = r0[0];

        $d4 = r0[1];

        $d3 = r0[2];

        $i0 = staticinvoke <com.android.internal.graphics.ColorUtils: int XYZToColor(double,double,double)>($d5, $d4, $d3);

        return $i0;
    }

    public static void LABToXYZ(double, double, double, double[])
    {
        double[] r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16, d17, d18;
        byte $b0, $b1, $b2;

        d13 := @parameter0: double;

        d14 := @parameter1: double;

        d15 := @parameter2: double;

        r0 := @parameter3: double[];

        $d3 = d13 + 16.0;

        d0 = $d3 / 116.0;

        $d4 = d14 / 500.0;

        d1 = $d4 + d0;

        $d5 = d15 / 200.0;

        d2 = d0 - $d5;

        d16 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, 3.0);

        $b0 = d16 cmpl 0.008856;

        if $b0 <= 0 goto label1;

        goto label2;

     label1:
        $d6 = d1 * 116.0;

        $d7 = $d6 - 16.0;

        d16 = $d7 / 903.3;

     label2:
        $b1 = d13 cmpl 7.9996247999999985;

        if $b1 <= 0 goto label3;

        d17 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, 3.0);

        goto label4;

     label3:
        d17 = d13 / 903.3;

     label4:
        d18 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, 3.0);

        $b2 = d18 cmpl 0.008856;

        if $b2 <= 0 goto label5;

        goto label6;

     label5:
        $d8 = 116.0 * d2;

        $d9 = $d8 - 16.0;

        d18 = $d9 / 903.3;

     label6:
        $d10 = 95.047 * d16;

        r0[0] = $d10;

        $d11 = 100.0 * d17;

        r0[1] = $d11;

        $d12 = 108.883 * d18;

        r0[2] = $d12;

        return;
    }

    public static void RGBToHSL(int, int, int, float[])
    {
        int i0, i1, i2;
        float[] r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, f21, f22, f23, f24, $f25, $f26, $f27, $f28, f29, $f30, f31, f32;
        byte $b3, $b4, $b5, $b6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        $f4 = (float) i0;

        f0 = $f4 / 255.0F;

        $f5 = (float) i1;

        f1 = $f5 / 255.0F;

        $f6 = (float) i2;

        f19 = $f6 / 255.0F;

        $f7 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f19);

        f20 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f7);

        $f8 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f19);

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f8);

        f21 = f20 - f2;

        $f9 = f20 + f2;

        f3 = $f9 / 2.0F;

        $b3 = f20 cmpl f2;

        if $b3 != 0 goto label1;

        f22 = 0.0F;

        f23 = 0.0F;

        goto label5;

     label1:
        $b4 = f20 cmpl f0;

        if $b4 != 0 goto label2;

        $f17 = f1 - f19;

        $f18 = $f17 / f21;

        f24 = $f18 % 6.0F;

        goto label4;

     label2:
        $b5 = f20 cmpl f1;

        if $b5 != 0 goto label3;

        $f15 = f19 - f0;

        $f16 = $f15 / f21;

        f24 = $f16 + 2.0F;

        goto label4;

     label3:
        $f10 = f0 - f1;

        $f11 = $f10 / f21;

        f24 = $f11 + 4.0F;

     label4:
        $f25 = 2.0F * f3;

        $f26 = $f25 - 1.0F;

        $f27 = staticinvoke <java.lang.Math: float abs(float)>($f26);

        $f28 = 1.0F - $f27;

        f29 = f21 / $f28;

        f23 = f24;

        f22 = f29;

     label5:
        $f30 = 60.0F * f23;

        f31 = $f30 % 360.0F;

        f32 = f31;

        $b6 = f31 cmpg 0.0F;

        if $b6 >= 0 goto label6;

        f32 = f31 + 360.0F;

     label6:
        $f12 = staticinvoke <com.android.internal.graphics.ColorUtils: float constrain(float,float,float)>(f32, 0.0F, 360.0F);

        r0[0] = $f12;

        $f13 = staticinvoke <com.android.internal.graphics.ColorUtils: float constrain(float,float,float)>(f22, 0.0F, 1.0F);

        r0[1] = $f13;

        $f14 = staticinvoke <com.android.internal.graphics.ColorUtils: float constrain(float,float,float)>(f3, 0.0F, 1.0F);

        r0[2] = $f14;

        return;
    }

    public static void RGBToLAB(int, int, int, double[])
    {
        int i0, i1, i2;
        double[] r0;
        double $d0, $d1, $d2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: double[];

        staticinvoke <com.android.internal.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>(i0, i1, i2, r0);

        $d2 = r0[0];

        $d1 = r0[1];

        $d0 = r0[2];

        staticinvoke <com.android.internal.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])>($d2, $d1, $d0, r0);

        return;
    }

    public static void RGBToXYZ(int, int, int, double[])
    {
        int i0, i1, i2, $i3;
        double[] r0;
        java.lang.IllegalArgumentException $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, d29, d30, d31, d32;
        byte $b4, $b5, $b6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: double[];

        $i3 = lengthof r0;

        if $i3 != 3 goto label7;

        $d0 = (double) i0;

        d27 = $d0 / 255.0;

        $b4 = d27 cmpg 0.04045;

        if $b4 >= 0 goto label1;

        d28 = d27 / 12.92;

        goto label2;

     label1:
        $d1 = d27 + 0.055;

        $d2 = $d1 / 1.055;

        d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.4);

     label2:
        $d3 = (double) i1;

        d29 = $d3 / 255.0;

        $b5 = d29 cmpg 0.04045;

        if $b5 >= 0 goto label3;

        d30 = d29 / 12.92;

        goto label4;

     label3:
        $d4 = d29 + 0.055;

        $d5 = $d4 / 1.055;

        d30 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.4);

     label4:
        $d6 = (double) i2;

        d31 = $d6 / 255.0;

        $b6 = d31 cmpg 0.04045;

        if $b6 >= 0 goto label5;

        d32 = d31 / 12.92;

        goto label6;

     label5:
        $d7 = 0.055 + d31;

        $d8 = $d7 / 1.055;

        d32 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 2.4);

     label6:
        $d10 = 0.4124 * d28;

        $d9 = 0.3576 * d30;

        $d12 = $d10 + $d9;

        $d11 = 0.1805 * d32;

        $d13 = $d12 + $d11;

        $d14 = $d13 * 100.0;

        r0[0] = $d14;

        $d16 = 0.2126 * d28;

        $d15 = 0.7152 * d30;

        $d18 = $d16 + $d15;

        $d17 = 0.0722 * d32;

        $d19 = $d18 + $d17;

        $d20 = $d19 * 100.0;

        r0[1] = $d20;

        $d22 = 0.0193 * d28;

        $d21 = 0.1192 * d30;

        $d24 = $d22 + $d21;

        $d23 = 0.9505 * d32;

        $d25 = $d24 + $d23;

        $d26 = $d25 * 100.0;

        r0[2] = $d26;

        return;

     label7:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outXyz must have a length of 3.");

        throw $r1;
    }

    public static int XYZToColor(double, double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, d27, d28, d29, d30, d31, d32;
        byte $b0, $b1, $b2;
        long $l3, $l6, $l9;
        int $i4, $i5, $i7, $i8, $i10, $i11, $i12;

        d26 := @parameter0: double;

        d27 := @parameter1: double;

        d28 := @parameter2: double;

        $d3 = 3.2406 * d26;

        $d2 = -1.5372 * d27;

        $d5 = $d3 + $d2;

        $d4 = -0.4986 * d28;

        $d6 = $d5 + $d4;

        d0 = $d6 / 100.0;

        $d8 = -0.9689 * d26;

        $d7 = 1.8758 * d27;

        $d10 = $d8 + $d7;

        $d9 = 0.0415 * d28;

        $d11 = $d10 + $d9;

        d1 = $d11 / 100.0;

        $d13 = 0.0557 * d26;

        $d12 = -0.204 * d27;

        $d15 = $d13 + $d12;

        $d14 = 1.057 * d28;

        $d16 = $d15 + $d14;

        d29 = $d16 / 100.0;

        $b0 = d0 cmpl 0.0031308;

        if $b0 <= 0 goto label1;

        $d24 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, 0.4166666666666667);

        $d25 = $d24 * 1.055;

        d30 = $d25 - 0.055;

        goto label2;

     label1:
        d30 = d0 * 12.92;

     label2:
        $b1 = d1 cmpl 0.0031308;

        if $b1 <= 0 goto label3;

        $d22 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, 0.4166666666666667);

        $d23 = $d22 * 1.055;

        d31 = $d23 - 0.055;

        goto label4;

     label3:
        d31 = d1 * 12.92;

     label4:
        $b2 = d29 cmpl 0.0031308;

        if $b2 <= 0 goto label5;

        $d20 = staticinvoke <java.lang.Math: double pow(double,double)>(d29, 0.4166666666666667);

        $d21 = $d20 * 1.055;

        d32 = $d21 - 0.055;

        goto label6;

     label5:
        d32 = d29 * 12.92;

     label6:
        $d17 = d30 * 255.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d17);

        $i4 = (int) $l3;

        $i5 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>($i4, 0, 255);

        $d18 = d31 * 255.0;

        $l6 = staticinvoke <java.lang.Math: long round(double)>($d18);

        $i7 = (int) $l6;

        $i8 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>($i7, 0, 255);

        $d19 = 255.0 * d32;

        $l9 = staticinvoke <java.lang.Math: long round(double)>($d19);

        $i10 = (int) $l9;

        $i11 = staticinvoke <com.android.internal.graphics.ColorUtils: int constrain(int,int,int)>($i10, 0, 255);

        $i12 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i5, $i8, $i11);

        return $i12;
    }

    public static void XYZToLAB(double, double, double, double[])
    {
        double[] r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, d12, d13, d14, d15;

        d10 := @parameter0: double;

        d11 := @parameter1: double;

        d12 := @parameter2: double;

        r0 := @parameter3: double[];

        $i0 = lengthof r0;

        if $i0 != 3 goto label1;

        $d0 = d10 / 95.047;

        d13 = staticinvoke <com.android.internal.graphics.ColorUtils: double pivotXyzComponent(double)>($d0);

        $d1 = d11 / 100.0;

        d14 = staticinvoke <com.android.internal.graphics.ColorUtils: double pivotXyzComponent(double)>($d1);

        $d2 = d12 / 108.883;

        d15 = staticinvoke <com.android.internal.graphics.ColorUtils: double pivotXyzComponent(double)>($d2);

        $d3 = 116.0 * d14;

        $d4 = $d3 - 16.0;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        r0[0] = $d5;

        $d6 = d13 - d14;

        $d7 = $d6 * 500.0;

        r0[1] = $d7;

        $d8 = d14 - d15;

        $d9 = $d8 * 200.0;

        r0[2] = $d9;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outLab must have a length of 3.");

        throw $r1;
    }

    private static int binaryAlphaSearch(int, int, float, com.android.internal.graphics.ColorUtils$ContrastCalculator)
    {
        int i0, i1, i2, $i3, $i4, i6, i7, i8;
        float f0;
        com.android.internal.graphics.ColorUtils$ContrastCalculator r0;
        double $d0, $d1;
        byte $b5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r0 := @parameter3: com.android.internal.graphics.ColorUtils$ContrastCalculator;

        i6 = 0;

        i7 = 0;

        i8 = 255;

     label1:
        if i6 > 10 goto label4;

        $i3 = i8 - i7;

        if $i3 <= 1 goto label4;

        $i4 = i7 + i8;

        i2 = $i4 / 2;

        $d0 = interfaceinvoke r0.<com.android.internal.graphics.ColorUtils$ContrastCalculator: double calculateContrast(int,int,int)>(i0, i1, i2);

        $d1 = (double) f0;

        $b5 = $d0 cmpg $d1;

        if $b5 >= 0 goto label2;

        i7 = i2;

        goto label3;

     label2:
        i8 = i2;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return i8;
    }

    public static int blendARGB(int, int, float)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 = 1.0F - f0;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        f2 = (float) $i2;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        f3 = (float) $i3;

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        f4 = (float) $i4;

        $i5 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        f5 = (float) $i5;

        $i6 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        f6 = (float) $i6;

        $i7 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        f7 = (float) $i7;

        $i8 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        f8 = (float) $i8;

        $i9 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        f9 = (float) $i9;

        $f11 = f2 * f1;

        $f10 = f3 * f0;

        $f12 = $f11 + $f10;

        $i13 = (int) $f12;

        $f14 = f4 * f1;

        $f13 = f5 * f0;

        $f15 = $f14 + $f13;

        $i12 = (int) $f15;

        $f17 = f6 * f1;

        $f16 = f7 * f0;

        $f18 = $f17 + $f16;

        $i11 = (int) $f18;

        $f20 = f8 * f1;

        $f19 = f9 * f0;

        $f21 = $f20 + $f19;

        $i10 = (int) $f21;

        $i14 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i13, $i12, $i11, $i10);

        return $i14;
    }

    public static void blendHSL(float[], float[], float, float[])
    {
        float[] r0, r1, r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 := @parameter2: float;

        r2 := @parameter3: float[];

        $i0 = lengthof r2;

        if $i0 != 3 goto label1;

        f1 = 1.0F - f0;

        $f3 = r0[0];

        $f2 = r1[0];

        $f4 = staticinvoke <com.android.internal.graphics.ColorUtils: float circularInterpolate(float,float,float)>($f3, $f2, f0);

        r2[0] = $f4;

        $f5 = r0[1];

        $f8 = $f5 * f1;

        $f6 = r1[1];

        $f7 = $f6 * f0;

        $f9 = $f8 + $f7;

        r2[1] = $f9;

        $f10 = r0[2];

        $f13 = $f10 * f1;

        $f11 = r1[2];

        $f12 = $f11 * f0;

        $f14 = $f13 + $f12;

        r2[2] = $f14;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("result must have a length of 3.");

        throw $r3;
    }

    public static void blendLAB(double[], double[], double, double[])
    {
        double[] r0, r1, r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        d0 := @parameter2: double;

        r2 := @parameter3: double[];

        $i0 = lengthof r2;

        if $i0 != 3 goto label1;

        d1 = 1.0 - d0;

        $d2 = r0[0];

        $d5 = $d2 * d1;

        $d3 = r1[0];

        $d4 = $d3 * d0;

        $d6 = $d5 + $d4;

        r2[0] = $d6;

        $d7 = r0[1];

        $d10 = $d7 * d1;

        $d8 = r1[1];

        $d9 = $d8 * d0;

        $d11 = $d10 + $d9;

        r2[1] = $d11;

        $d12 = r0[2];

        $d15 = $d12 * d1;

        $d13 = r1[2];

        $d14 = $d13 * d0;

        $d16 = $d15 + $d14;

        r2[2] = $d16;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outResult must have a length of 3.");

        throw $r3;
    }

    public static double calculateContrast(int, int)
    {
        int i0, i1, $i2, $i3, i4;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6;
        java.lang.IllegalArgumentException $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        if $i2 != 255 goto label2;

        i4 = i0;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i3 >= 255 goto label1;

        i4 = staticinvoke <com.android.internal.graphics.ColorUtils: int compositeColors(int,int)>(i0, i1);

     label1:
        $d2 = staticinvoke <com.android.internal.graphics.ColorUtils: double calculateLuminance(int)>(i4);

        d0 = $d2 + 0.05;

        $d3 = staticinvoke <com.android.internal.graphics.ColorUtils: double calculateLuminance(int)>(i1);

        d1 = $d3 + 0.05;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        $d6 = $d4 / $d5;

        return $d6;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static double calculateLuminance(int)
    {
        int i0;
        double[] r0;
        double $d0, $d1;

        i0 := @parameter0: int;

        r0 = staticinvoke <com.android.internal.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <com.android.internal.graphics.ColorUtils: void colorToXYZ(int,double[])>(i0, r0);

        $d0 = r0[1];

        $d1 = $d0 / 100.0;

        return $d1;
    }

    public static int calculateMinimumAlpha(int, int, float)
    {
        int i0, i1, $i2, $i4, $i5;
        float f0;
        java.lang.String $r2, $r5;
        double $d0, $d1;
        byte $b3;
        com.android.internal.graphics.'-$$Lambda$ColorUtils$r4F1J7Y711kBAemoOw8QHbDba_8' r6;
        java.lang.StringBuilder r8;
        java.lang.IllegalArgumentException r9;
        com.android.internal.graphics.ColorUtils$ContrastCalculator r10, r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        if $i2 != 255 goto label2;

        r6 = <com.android.internal.graphics._$$Lambda$ColorUtils$r4F1J7Y711kBAemoOw8QHbDba_8: com.android.internal.graphics.'-$$Lambda$ColorUtils$r4F1J7Y711kBAemoOw8QHbDba_8' INSTANCE>;

        r10 = (com.android.internal.graphics.ColorUtils$ContrastCalculator) r6;

        $d0 = interfaceinvoke r10.<com.android.internal.graphics.ColorUtils$ContrastCalculator: double calculateContrast(int,int,int)>(i0, i1, 255);

        $d1 = (double) f0;

        $b3 = $d0 cmpg $d1;

        if $b3 >= 0 goto label1;

        return -1;

     label1:
        $i4 = staticinvoke <com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)>(i0, 255);

        r11 = (com.android.internal.graphics.ColorUtils$ContrastCalculator) r6;

        $i5 = staticinvoke <com.android.internal.graphics.ColorUtils: int binaryAlphaSearch(int,int,float,com.android.internal.graphics.ColorUtils$ContrastCalculator)>($i4, i1, f0, r11);

        return $i5;

     label2:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r9 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r9;
    }

    public static int calculateMinimumBackgroundAlpha(int, int, float)
    {
        int i0, i1, $i2, $i3, $i4;
        float f0;
        com.android.internal.graphics._$$Lambda$ColorUtils$zbDH_52c8D9XBeqmvTHi3Boxl14 $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $i2 = staticinvoke <com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)>(i1, 255);

        $r0 = new com.android.internal.graphics._$$Lambda$ColorUtils$zbDH_52c8D9XBeqmvTHi3Boxl14;

        $i3 = staticinvoke <com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)>(i0, 255);

        specialinvoke $r0.<com.android.internal.graphics._$$Lambda$ColorUtils$zbDH_52c8D9XBeqmvTHi3Boxl14: void <init>(int)>($i3);

        $i4 = staticinvoke <com.android.internal.graphics.ColorUtils: int binaryAlphaSearch(int,int,float,com.android.internal.graphics.ColorUtils$ContrastCalculator)>(i0, $i2, f0, $r0);

        return $i4;
    }

    static float circularInterpolate(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, f5, f6, $f7, $f8, $f9, $f10;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f5 = f0;

        f6 = f1;

        $f3 = f1 - f0;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $b0 = $f4 cmpl 180.0F;

        if $b0 <= 0 goto label2;

        $b1 = f1 cmpl f0;

        if $b1 <= 0 goto label1;

        f5 = f0 + 360.0F;

        f6 = f1;

        goto label2;

     label1:
        f6 = f1 + 360.0F;

        f5 = f0;

     label2:
        $f7 = f6 - f5;

        $f8 = $f7 * f2;

        $f9 = $f8 + f5;

        $f10 = $f9 % 360.0F;

        return $f10;
    }

    public static void colorToHSL(int, float[])
    {
        int i0, $i1, $i2, $i3;
        float[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <com.android.internal.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i1, $i2, $i3, r0);

        return;
    }

    public static void colorToLAB(int, double[])
    {
        int i0, $i1, $i2, $i3;
        double[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <com.android.internal.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])>($i1, $i2, $i3, r0);

        return;
    }

    public static void colorToXYZ(int, double[])
    {
        int i0, $i1, $i2, $i3;
        double[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <com.android.internal.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>($i1, $i2, $i3, r0);

        return;
    }

    private static int compositeAlpha(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = 255 - i1;

        $i2 = 255 - i0;

        $i4 = $i3 * $i2;

        $i5 = $i4 / 255;

        $i6 = 255 - $i5;

        return $i6;
    }

    public static int compositeColors(int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        i4 = staticinvoke <com.android.internal.graphics.ColorUtils: int compositeAlpha(int,int)>(i3, i2);

        $i5 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i6 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        $i7 = staticinvoke <com.android.internal.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i5, i3, $i6, i2, i4);

        $i8 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i9 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        $i10 = staticinvoke <com.android.internal.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i8, i3, $i9, i2, i4);

        $i11 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $i12 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        $i13 = staticinvoke <com.android.internal.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i11, i3, $i12, i2, i4);

        $i14 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i4, $i7, $i10, $i13);

        return $i14;
    }

    private static int compositeComponent(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        if i4 != 0 goto label1;

        return 0;

     label1:
        $i5 = i0 * 255;

        $i9 = $i5 * i1;

        $i7 = i2 * i3;

        $i6 = 255 - i1;

        $i8 = $i7 * $i6;

        $i11 = $i9 + $i8;

        $i10 = i4 * 255;

        $i12 = $i11 / $i10;

        return $i12;
    }

    private static float constrain(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1;

        f2 := @parameter0: float;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f2 cmpg f0;

        if $b0 >= 0 goto label1;

        f2 = f0;

        goto label2;

     label1:
        $b1 = f2 cmpl f1;

        if $b1 <= 0 goto label2;

        f2 = f1;

        goto label2;

     label2:
        return f2;
    }

    private static int constrain(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i2 >= i0 goto label1;

        i2 = i0;

        goto label2;

     label1:
        if i2 <= i1 goto label2;

        i2 = i1;

        goto label2;

     label2:
        return i2;
    }

    public static double distanceEuclidean(double[], double[])
    {
        double[] r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        $d1 = r0[0];

        $d0 = r1[0];

        $d2 = $d1 - $d0;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $d5 = r0[1];

        $d4 = r1[1];

        $d6 = $d5 - $d4;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, 2.0);

        $d11 = $d3 + $d7;

        $d9 = r0[2];

        $d8 = r1[2];

        $d10 = $d9 - $d8;

        $d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d10, 2.0);

        $d13 = $d11 + $d12;

        $d14 = staticinvoke <java.lang.Math: double sqrt(double)>($d13);

        return $d14;
    }

    private static double[] getTempDouble3Array()
    {
        double[] r0, r4;
        java.lang.ThreadLocal $r1, $r3;
        java.lang.Object $r2;

        $r1 = <com.android.internal.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r0 = (double[]) $r2;

        r4 = r0;

        if r0 != null goto label1;

        r4 = newarray (double)[3];

        $r3 = <com.android.internal.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>(r4);

     label1:
        return r4;
    }

    static double lambda$calculateMinimumAlpha$1(int, int, int)
    {
        int i0, i1, i2, $i3;
        double $d0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)>(i0, i2);

        $d0 = staticinvoke <com.android.internal.graphics.ColorUtils: double calculateContrast(int,int)>($i3, i1);

        return $d0;
    }

    static double lambda$calculateMinimumBackgroundAlpha$0(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;
        float $f0, $f1;
        double $d0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $f0 = (float) i3;

        $f1 = $f0 / 255.0F;

        $i4 = staticinvoke <com.android.internal.graphics.ColorUtils: int blendARGB(int,int,float)>(i0, i2, $f1);

        $i5 = staticinvoke <com.android.internal.graphics.ColorUtils: int setAlphaComponent(int,int)>($i4, 255);

        $d0 = staticinvoke <com.android.internal.graphics.ColorUtils: double calculateContrast(int,int)>(i1, $i5);

        return $d0;
    }

    private static double pivotXyzComponent(double)
    {
        byte $b0;
        double $d0, $d1, d2, d3;

        d2 := @parameter0: double;

        $b0 = d2 cmpl 0.008856;

        if $b0 <= 0 goto label1;

        d3 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, 0.3333333333333333);

        goto label2;

     label1:
        $d0 = 903.3 * d2;

        $d1 = $d0 + 16.0;

        d3 = $d1 / 116.0;

     label2:
        return d3;
    }

    public static int setAlphaComponent(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i1 > 255 goto label1;

        $i3 = 16777215 & i0;

        $i2 = i1 << 24;

        $i4 = $i3 | $i2;

        return $i4;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.");

        throw $r0;
    }
}
