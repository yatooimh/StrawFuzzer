public class com.android.internal.graphics.drawable.AnimationScaleListDrawable extends android.graphics.drawable.DrawableContainer implements android.graphics.drawable.Animatable
{
    private static final java.lang.String TAG;
    private com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState mAnimationScaleListState;
    private boolean mMutated;

    public void <init>()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        specialinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: void <init>(com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState, android.content.res.Resources)
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState r1, $r3;
        android.content.res.Resources r2;
        int[] $r4;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        $r3 = new com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState;

        specialinvoke $r3.<com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState: void <init>(com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState,com.android.internal.graphics.drawable.AnimationScaleListDrawable,android.content.res.Resources)>(r1, r0, r2);

        virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        $r4 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: int[] getState()>();

        virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean onStateChange(int[])>($r4);

        return;
    }

    void <init>(com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState, android.content.res.Resources, com.android.internal.graphics.drawable.AnimationScaleListDrawable$1)
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState r1;
        android.content.res.Resources r2;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$1 r3;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: com.android.internal.graphics.drawable.AnimationScaleListDrawable$1;

        specialinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: void <init>(com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState r4;
        int i0, i1, $i2, i4, i5;
        android.graphics.drawable.Drawable r5, r16;
        java.lang.String $r6, $r9, $r13;
        boolean $z0;
        int[] $r7;
        android.content.res.Resources r14;
        android.content.res.TypedArray r15;
        java.lang.StringBuilder r18;
        org.xmlpull.v1.XmlPullParserException r19;
        java.lang.Throwable r20;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r14 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState mAnimationScaleListState>;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i2 + 1;

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label9;

        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i4 >= i0 goto label2;

        if i1 == 3 goto label9;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        if i4 > i0 goto label1;

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label4;

        goto label1;

     label4:
        $r7 = <com.android.internal.R$styleable: int[] AnimationScaleListDrawableItem>;

        r15 = staticinvoke <com.android.internal.graphics.drawable.AnimationScaleListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r14, r3, r2, $r7);

        r5 = virtualinvoke r15.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        r16 = r5;

        if r5 != null goto label8;

     label5:
        i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i5 != 4 goto label6;

        goto label5;

     label6:
        if i5 != 2 goto label7;

        r16 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r14, r1, r2, r3);

        goto label8;

     label7:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r19 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        r20 = (java.lang.Throwable) r19;

        throw r20;

     label8:
        virtualinvoke r4.<com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState: int addDrawable(android.graphics.drawable.Drawable)>(r16);

        goto label1;

     label9:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.content.res.Resources$Theme r1;
        int[] $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: int[] getState()>();

        virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean onStateChange(int[])>($r2);

        return;
    }

    public void clearMutated()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void clearMutated()>();

        r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean mMutated> = 0;

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6, $r7;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] AnimationScaleListDrawable>;

        r5 = staticinvoke <com.android.internal.graphics.drawable.AnimationScaleListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: void updateDensity(android.content.res.Resources)>(r1);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r7 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: int[] getState()>();

        virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean onStateChange(int[])>($r7);

        return;
    }

    public boolean isRunning()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.graphics.drawable.Drawable r1;
        boolean $z1, z2;
        android.graphics.drawable.Animatable $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        z2 = 0;

        if r1 == null goto label1;

        z2 = 0;

        $z1 = r1 instanceof android.graphics.drawable.Animatable;

        if $z1 == 0 goto label1;

        $r2 = (android.graphics.drawable.Animatable) r1;

        z2 = interfaceinvoke $r2.<android.graphics.drawable.Animatable: boolean isRunning()>();

     label1:
        return z2;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        $z0 = r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState mAnimationScaleListState>;

        virtualinvoke $r2.<com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState: void mutate()>();

        r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        int[] r1;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState $r2;
        int $i0;
        boolean $z0, z1, z2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: int[];

        z1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>(r1);

        $r2 = r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState mAnimationScaleListState>;

        $i0 = virtualinvoke $r2.<com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState: int getCurrentDrawableIndexBasedOnScale()>();

        $z0 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: boolean selectDrawable(int)>($i0);

        if $z0 != 0 goto label2;

        if z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        $z0 = r1 instanceof com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState;

        if $z0 == 0 goto label1;

        $r2 = (com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState) r1;

        r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: com.android.internal.graphics.drawable.AnimationScaleListDrawable$AnimationScaleListState mAnimationScaleListState> = $r2;

     label1:
        return;
    }

    public void start()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        android.graphics.drawable.Animatable $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        if r1 == null goto label1;

        $z0 = r1 instanceof android.graphics.drawable.Animatable;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.Animatable) r1;

        interfaceinvoke $r2.<android.graphics.drawable.Animatable: void start()>();

     label1:
        return;
    }

    public void stop()
    {
        com.android.internal.graphics.drawable.AnimationScaleListDrawable r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        android.graphics.drawable.Animatable $r2;

        r0 := @this: com.android.internal.graphics.drawable.AnimationScaleListDrawable;

        r1 = virtualinvoke r0.<com.android.internal.graphics.drawable.AnimationScaleListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        if r1 == null goto label1;

        $z0 = r1 instanceof android.graphics.drawable.Animatable;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.Animatable) r1;

        interfaceinvoke $r2.<android.graphics.drawable.Animatable: void stop()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.graphics.drawable.AnimationScaleListDrawable: java.lang.String TAG> = "AnimationScaleListDrawable";

        return;
    }
}
