class com.android.internal.graphics.palette.Palette$1 extends java.lang.Object implements com.android.internal.graphics.palette.Palette$Filter
{
    private static final float BLACK_MAX_LIGHTNESS;
    private static final float WHITE_MIN_LIGHTNESS;

    void <init>()
    {
        com.android.internal.graphics.palette.Palette$1 r0;

        r0 := @this: com.android.internal.graphics.palette.Palette$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean isBlack(float[])
    {
        com.android.internal.graphics.palette.Palette$1 r0;
        float[] r1;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.internal.graphics.palette.Palette$1;

        r1 := @parameter0: float[];

        $f0 = r1[2];

        $b0 = $f0 cmpg 0.05F;

        if $b0 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isNearRedILine(float[])
    {
        com.android.internal.graphics.palette.Palette$1 r0;
        float[] r1;
        float $f0, $f1, $f2;
        byte $b0, $b1, $b2;
        boolean z1;

        r0 := @this: com.android.internal.graphics.palette.Palette$1;

        r1 := @parameter0: float[];

        z1 = 0;

        $f0 = r1[0];

        $b0 = $f0 cmpl 10.0F;

        if $b0 < 0 goto label1;

        z1 = 0;

        $f1 = r1[0];

        $b1 = $f1 cmpg 37.0F;

        if $b1 > 0 goto label1;

        z1 = 0;

        $f2 = r1[1];

        $b2 = $f2 cmpg 0.82F;

        if $b2 > 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    private boolean isWhite(float[])
    {
        com.android.internal.graphics.palette.Palette$1 r0;
        float[] r1;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.internal.graphics.palette.Palette$1;

        r1 := @parameter0: float[];

        $f0 = r1[2];

        $b0 = $f0 cmpl 0.95F;

        if $b0 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isAllowed(int, float[])
    {
        com.android.internal.graphics.palette.Palette$1 r0;
        int i0;
        float[] r1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.graphics.palette.Palette$1;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        $z0 = specialinvoke r0.<com.android.internal.graphics.palette.Palette$1: boolean isWhite(float[])>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.internal.graphics.palette.Palette$1: boolean isBlack(float[])>(r1);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.internal.graphics.palette.Palette$1: boolean isNearRedILine(float[])>(r1);

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public static void <clinit>()
    {
        <com.android.internal.graphics.palette.Palette$1: float WHITE_MIN_LIGHTNESS> = 0.95F;

        <com.android.internal.graphics.palette.Palette$1: float BLACK_MAX_LIGHTNESS> = 0.05F;

        return;
    }
}
