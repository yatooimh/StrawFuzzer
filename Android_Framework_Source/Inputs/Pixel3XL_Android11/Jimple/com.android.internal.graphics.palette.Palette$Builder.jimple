public final class com.android.internal.graphics.palette.Palette$Builder extends java.lang.Object
{
    private final android.graphics.Bitmap mBitmap;
    private final java.util.List mFilters;
    private int mMaxColors;
    private com.android.internal.graphics.palette.Quantizer mQuantizer;
    private android.graphics.Rect mRegion;
    private int mResizeArea;
    private int mResizeMaxDimension;
    private final java.util.List mSwatches;
    private final java.util.List mTargets;

    public void <init>(android.graphics.Bitmap)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        android.graphics.Bitmap r1;
        java.util.ArrayList $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        com.android.internal.graphics.palette.Palette$Filter $r5;
        java.util.List $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        com.android.internal.graphics.palette.Target $r7, $r9, $r11, $r13, $r15, $r17;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets> = $r2;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mMaxColors> = 16;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea> = 12544;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension> = -1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters> = $r3;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        $r5 = <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Filter DEFAULT_FILTER>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap> = r1;

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mSwatches> = null;

        $r8 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r7 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_VIBRANT>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r10 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r9 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target VIBRANT>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r12 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r11 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_VIBRANT>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r14 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r13 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_MUTED>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r16 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r15 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target MUTED>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r18 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $r17 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_MUTED>;

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r17);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap is not valid");

        throw $r4;
    }

    public void <init>(java.util.List)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        java.util.List r1, $r6;
        java.util.ArrayList $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        com.android.internal.graphics.palette.Palette$Filter $r5;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets> = $r2;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mMaxColors> = 16;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea> = 12544;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension> = -1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters> = $r3;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        $r5 = <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Filter DEFAULT_FILTER>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mSwatches> = r1;

        r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap> = null;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of Swatches is not valid");

        throw $r4;
    }

    private int[] getPixelsFromBitmap(android.graphics.Bitmap)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        int[] r1, r7;
        android.graphics.Rect $r2, $r3, $r4, r6;
        android.graphics.Bitmap r5;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r5 := @parameter0: android.graphics.Bitmap;

        i0 = virtualinvoke r5.<android.graphics.Bitmap: int getWidth()>();

        i11 = virtualinvoke r5.<android.graphics.Bitmap: int getHeight()>();

        $i3 = i0 * i11;

        r1 = newarray (int)[$i3];

        virtualinvoke r5.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r1, 0, i0, 0, 0, i0, i11);

        r6 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        if r6 != null goto label1;

        return r1;

     label1:
        i1 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        $r2 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        i2 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i4 = i1 * i2;

        r7 = newarray (int)[$i4];

        i12 = 0;

     label2:
        if i12 >= i2 goto label3;

        $r3 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        $i5 = $r3.<android.graphics.Rect: int top>;

        $i6 = $i5 + i12;

        $i8 = $i6 * i0;

        $r4 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        $i7 = $r4.<android.graphics.Rect: int left>;

        $i10 = $i8 + $i7;

        $i9 = i12 * i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i10, r7, $i9, i1);

        i12 = i12 + 1;

        goto label2;

     label3:
        return r7;
    }

    private android.graphics.Bitmap scaleBitmapDown(android.graphics.Bitmap)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        android.graphics.Bitmap r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        double $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12;
        byte $b14;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: android.graphics.Bitmap;

        $i0 = r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea>;

        if $i0 <= 0 goto label2;

        $i8 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i9 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        i10 = $i8 * $i9;

        i11 = r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea>;

        d12 = -1.0;

        if i10 <= i11 goto label1;

        $d10 = (double) i11;

        $d9 = (double) i10;

        $d11 = $d10 / $d9;

        d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d11);

     label1:
        goto label3;

     label2:
        d12 = -1.0;

        $i1 = r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension>;

        if $i1 <= 0 goto label1;

        $i6 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        i12 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);

        i13 = r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension>;

        d12 = -1.0;

        if i12 <= i13 goto label3;

        $d8 = (double) i13;

        $d7 = (double) i12;

        d12 = $d8 / $d7;

     label3:
        $b14 = d12 cmpg 0.0;

        if $b14 > 0 goto label4;

        return r1;

     label4:
        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $d1 = (double) $i2;

        $d2 = $d1 * d12;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i3 = (int) $d3;

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $d4 = (double) $i4;

        $d5 = $d4 * d12;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        $i5 = (int) $d6;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r1, $i3, $i5, 0);

        return $r2;
    }

    public com.android.internal.graphics.palette.Palette$Builder addFilter(com.android.internal.graphics.palette.Palette$Filter)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        com.android.internal.graphics.palette.Palette$Filter r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: com.android.internal.graphics.palette.Palette$Filter;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder addTarget(com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        com.android.internal.graphics.palette.Target r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: com.android.internal.graphics.palette.Target;

        $r2 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder clearFilters()
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        java.util.List $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        $r1 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder clearRegion()
    {
        com.android.internal.graphics.palette.Palette$Builder r0;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion> = null;

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder clearTargets()
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        java.util.List r1;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        if r1 == null goto label1;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label1:
        return r0;
    }

    public android.os.AsyncTask generate(com.android.internal.graphics.palette.Palette$PaletteAsyncListener)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        com.android.internal.graphics.palette.Palette$PaletteAsyncListener r1;
        java.lang.IllegalArgumentException $r2;
        com.android.internal.graphics.palette.Palette$Builder$1 $r3;
        android.graphics.Bitmap[] $r4;
        android.graphics.Bitmap $r5;
        java.util.concurrent.Executor $r6;
        android.os.AsyncTask $r7;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: com.android.internal.graphics.palette.Palette$PaletteAsyncListener;

        if r1 == null goto label1;

        $r3 = new com.android.internal.graphics.palette.Palette$Builder$1;

        specialinvoke $r3.<com.android.internal.graphics.palette.Palette$Builder$1: void <init>(com.android.internal.graphics.palette.Palette$Builder,com.android.internal.graphics.palette.Palette$PaletteAsyncListener)>(r0, r1);

        $r6 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r4 = newarray (android.graphics.Bitmap)[1];

        $r5 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        $r4[0] = $r5;

        $r7 = virtualinvoke $r3.<com.android.internal.graphics.palette.Palette$Builder$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r6, $r4);

        return $r7;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener can not be null");

        throw $r2;
    }

    public com.android.internal.graphics.palette.Palette generate()
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        android.graphics.Bitmap r1, $r7, $r11, $r15, r17;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        com.android.internal.graphics.palette.Quantizer r2, $r12, $r19;
        int[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        com.android.internal.graphics.palette.Palette $r4;
        java.util.List $r5, $r8, r21, r22;
        boolean $z0;
        com.android.internal.graphics.palette.Palette$Filter[] $r9, r20;
        java.lang.Object[] $r10;
        com.android.internal.graphics.palette.ColorCutQuantizer $r14;
        android.graphics.Rect r18;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r17 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        if r17 == null goto label08;

        r1 = specialinvoke r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap scaleBitmapDown(android.graphics.Bitmap)>(r17);

        goto label01;

     label01:
        r18 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        $r7 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        if r1 == $r7 goto label02;

        if r18 == null goto label02;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $d1 = (double) $i2;

        $r15 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        $i3 = virtualinvoke $r15.<android.graphics.Bitmap: int getWidth()>();

        $d2 = (double) $i3;

        d0 = $d1 / $d2;

        $i4 = r18.<android.graphics.Rect: int left>;

        $d3 = (double) $i4;

        $d4 = $d3 * d0;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        $i5 = (int) $d5;

        r18.<android.graphics.Rect: int left> = $i5;

        $i6 = r18.<android.graphics.Rect: int top>;

        $d6 = (double) $i6;

        $d7 = $d6 * d0;

        $d8 = staticinvoke <java.lang.Math: double floor(double)>($d7);

        $i7 = (int) $d8;

        r18.<android.graphics.Rect: int top> = $i7;

        $i8 = r18.<android.graphics.Rect: int right>;

        $d9 = (double) $i8;

        $d10 = $d9 * d0;

        $d11 = staticinvoke <java.lang.Math: double ceil(double)>($d10);

        $i9 = (int) $d11;

        $i10 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        r18.<android.graphics.Rect: int right> = $i11;

        $i12 = r18.<android.graphics.Rect: int bottom>;

        $d12 = (double) $i12;

        $d13 = $d12 * d0;

        $d14 = staticinvoke <java.lang.Math: double ceil(double)>($d13);

        $i13 = (int) $d14;

        $i14 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        r18.<android.graphics.Rect: int bottom> = $i15;

     label02:
        $r19 = r0.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Quantizer mQuantizer>;

        if $r19 != null goto label03;

        $r14 = new com.android.internal.graphics.palette.ColorCutQuantizer;

        specialinvoke $r14.<com.android.internal.graphics.palette.ColorCutQuantizer: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Quantizer mQuantizer> = $r14;

     label03:
        r2 = r0.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Quantizer mQuantizer>;

        r3 = specialinvoke r0.<com.android.internal.graphics.palette.Palette$Builder: int[] getPixelsFromBitmap(android.graphics.Bitmap)>(r1);

        i0 = r0.<com.android.internal.graphics.palette.Palette$Builder: int mMaxColors>;

        $r8 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label04;

        r20 = null;

        goto label05;

     label04:
        r21 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mFilters>;

        $i1 = interfaceinvoke r21.<java.util.List: int size()>();

        $r9 = newarray (com.android.internal.graphics.palette.Palette$Filter)[$i1];

        $r10 = interfaceinvoke r21.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        r20 = (com.android.internal.graphics.palette.Palette$Filter[]) $r10;

     label05:
        interfaceinvoke r2.<com.android.internal.graphics.palette.Quantizer: void quantize(int[],int,com.android.internal.graphics.palette.Palette$Filter[])>(r3, i0, r20);

        $r11 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        if r1 == $r11 goto label06;

        virtualinvoke r1.<android.graphics.Bitmap: void recycle()>();

     label06:
        $r12 = r0.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Quantizer mQuantizer>;

        r22 = interfaceinvoke $r12.<com.android.internal.graphics.palette.Quantizer: java.util.List getQuantizedColors()>();

        goto label07;

     label07:
        goto label09;

     label08:
        r22 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mSwatches>;

     label09:
        $r4 = new com.android.internal.graphics.palette.Palette;

        $r5 = r0.<com.android.internal.graphics.palette.Palette$Builder: java.util.List mTargets>;

        specialinvoke $r4.<com.android.internal.graphics.palette.Palette: void <init>(java.util.List,java.util.List)>(r22, $r5);

        virtualinvoke $r4.<com.android.internal.graphics.palette.Palette: void generate()>();

        goto label10;

     label10:
        return $r4;
    }

    public com.android.internal.graphics.palette.Palette$Builder maximumColorCount(int)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        int i0;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        i0 := @parameter0: int;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mMaxColors> = i0;

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder resizeBitmapArea(int)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        int i0;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        i0 := @parameter0: int;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea> = i0;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension> = -1;

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder resizeBitmapSize(int)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        int i0;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        i0 := @parameter0: int;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeMaxDimension> = i0;

        r0.<com.android.internal.graphics.palette.Palette$Builder: int mResizeArea> = -1;

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder setQuantizer(com.android.internal.graphics.palette.Quantizer)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        com.android.internal.graphics.palette.Quantizer r1;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        r1 := @parameter0: com.android.internal.graphics.palette.Quantizer;

        r0.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Quantizer mQuantizer> = r1;

        return r0;
    }

    public com.android.internal.graphics.palette.Palette$Builder setRegion(int, int, int, int)
    {
        com.android.internal.graphics.palette.Palette$Builder r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.graphics.Bitmap $r1, $r3, $r5;
        android.graphics.Rect $r2, $r4, $r6, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.internal.graphics.palette.Palette$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        if $r2 != null goto label1;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion> = $r8;

     label1:
        $r4 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        $r3 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        $i4 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        $r5 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Bitmap mBitmap>;

        $i5 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i4, $i5);

        $r6 = r0.<com.android.internal.graphics.palette.Palette$Builder: android.graphics.Rect mRegion>;

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean intersect(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The given region must intersect with the Bitmap\'s dimensions.");

        throw $r7;

     label3:
        return r0;
    }
}
