public final class com.android.internal.graphics.palette.Palette extends java.lang.Object
{
    static final int DEFAULT_CALCULATE_NUMBER_COLORS;
    static final com.android.internal.graphics.palette.Palette$Filter DEFAULT_FILTER;
    static final int DEFAULT_RESIZE_BITMAP_AREA;
    static final java.lang.String LOG_TAG;
    static final boolean LOG_TIMINGS;
    static final float MIN_CONTRAST_BODY_TEXT;
    static final float MIN_CONTRAST_TITLE_TEXT;
    private final com.android.internal.graphics.palette.Palette$Swatch mDominantSwatch;
    private final java.util.Map mSelectedSwatches;
    private final java.util.List mSwatches;
    private final java.util.List mTargets;
    private final android.util.SparseBooleanArray mUsedColors;

    static void <clinit>()
    {
        com.android.internal.graphics.palette.Palette$1 $r0;

        <com.android.internal.graphics.palette.Palette: float MIN_CONTRAST_TITLE_TEXT> = 3.0F;

        <com.android.internal.graphics.palette.Palette: float MIN_CONTRAST_BODY_TEXT> = 4.5F;

        <com.android.internal.graphics.palette.Palette: boolean LOG_TIMINGS> = 0;

        <com.android.internal.graphics.palette.Palette: java.lang.String LOG_TAG> = "Palette";

        <com.android.internal.graphics.palette.Palette: int DEFAULT_RESIZE_BITMAP_AREA> = 12544;

        <com.android.internal.graphics.palette.Palette: int DEFAULT_CALCULATE_NUMBER_COLORS> = 16;

        $r0 = new com.android.internal.graphics.palette.Palette$1;

        specialinvoke $r0.<com.android.internal.graphics.palette.Palette$1: void <init>()>();

        <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Filter DEFAULT_FILTER> = $r0;

        return;
    }

    void <init>(java.util.List, java.util.List)
    {
        com.android.internal.graphics.palette.Palette r0;
        java.util.List r1, r2;
        android.util.SparseBooleanArray $r3;
        android.util.ArrayMap $r4;
        com.android.internal.graphics.palette.Palette$Swatch $r5;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches> = r1;

        r0.<com.android.internal.graphics.palette.Palette: java.util.List mTargets> = r2;

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette: android.util.SparseBooleanArray mUsedColors> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.graphics.palette.Palette: java.util.Map mSelectedSwatches> = $r4;

        $r5 = specialinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch findDominantSwatch()>();

        r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch mDominantSwatch> = $r5;

        return;
    }

    private static float[] copyHslValues(com.android.internal.graphics.palette.Palette$Swatch)
    {
        com.android.internal.graphics.palette.Palette$Swatch r0;
        float[] r1, $r2;

        r0 := @parameter0: com.android.internal.graphics.palette.Palette$Swatch;

        r1 = newarray (float)[3];

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette$Swatch: float[] getHsl()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, 3);

        return r1;
    }

    private com.android.internal.graphics.palette.Palette$Swatch findDominantSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1, i2, i3, i4;
        com.android.internal.graphics.palette.Palette$Swatch r1, r5;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i2 = -2147483648;

        r5 = null;

        i3 = 0;

        $r2 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i3 >= i0 goto label3;

        $r3 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r1 = (com.android.internal.graphics.palette.Palette$Swatch) $r4;

        i4 = i2;

        $i1 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()>();

        if $i1 <= i2 goto label2;

        r5 = r1;

        i4 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()>();

     label2:
        i3 = i3 + 1;

        i2 = i4;

        goto label1;

     label3:
        return r5;
    }

    public static com.android.internal.graphics.palette.Palette$Builder 'from'(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        com.android.internal.graphics.palette.Palette$Builder $r1;

        r0 := @parameter0: android.graphics.Bitmap;

        $r1 = new com.android.internal.graphics.palette.Palette$Builder;

        specialinvoke $r1.<com.android.internal.graphics.palette.Palette$Builder: void <init>(android.graphics.Bitmap)>(r0);

        return $r1;
    }

    public static com.android.internal.graphics.palette.Palette 'from'(java.util.List)
    {
        java.util.List r0;
        com.android.internal.graphics.palette.Palette$Builder $r1;
        com.android.internal.graphics.palette.Palette $r2;

        r0 := @parameter0: java.util.List;

        $r1 = new com.android.internal.graphics.palette.Palette$Builder;

        specialinvoke $r1.<com.android.internal.graphics.palette.Palette$Builder: void <init>(java.util.List)>(r0);

        $r2 = virtualinvoke $r1.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Palette generate()>();

        return $r2;
    }

    public static com.android.internal.graphics.palette.Palette generate(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        com.android.internal.graphics.palette.Palette$Builder $r1;
        com.android.internal.graphics.palette.Palette $r2;

        r0 := @parameter0: android.graphics.Bitmap;

        $r1 = staticinvoke <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Builder 'from'(android.graphics.Bitmap)>(r0);

        $r2 = virtualinvoke $r1.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Palette generate()>();

        return $r2;
    }

    public static com.android.internal.graphics.palette.Palette generate(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap r0;
        int i0;
        com.android.internal.graphics.palette.Palette$Builder $r1, $r2;
        com.android.internal.graphics.palette.Palette $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Builder 'from'(android.graphics.Bitmap)>(r0);

        $r2 = virtualinvoke $r1.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Palette$Builder maximumColorCount(int)>(i0);

        $r3 = virtualinvoke $r2.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Palette generate()>();

        return $r3;
    }

    public static android.os.AsyncTask generateAsync(android.graphics.Bitmap, int, com.android.internal.graphics.palette.Palette$PaletteAsyncListener)
    {
        android.graphics.Bitmap r0;
        int i0;
        com.android.internal.graphics.palette.Palette$PaletteAsyncListener r1;
        com.android.internal.graphics.palette.Palette$Builder $r2, $r3;
        android.os.AsyncTask $r4;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.internal.graphics.palette.Palette$PaletteAsyncListener;

        $r2 = staticinvoke <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Builder 'from'(android.graphics.Bitmap)>(r0);

        $r3 = virtualinvoke $r2.<com.android.internal.graphics.palette.Palette$Builder: com.android.internal.graphics.palette.Palette$Builder maximumColorCount(int)>(i0);

        $r4 = virtualinvoke $r3.<com.android.internal.graphics.palette.Palette$Builder: android.os.AsyncTask generate(com.android.internal.graphics.palette.Palette$PaletteAsyncListener)>(r1);

        return $r4;
    }

    public static android.os.AsyncTask generateAsync(android.graphics.Bitmap, com.android.internal.graphics.palette.Palette$PaletteAsyncListener)
    {
        android.graphics.Bitmap r0;
        com.android.internal.graphics.palette.Palette$PaletteAsyncListener r1;
        com.android.internal.graphics.palette.Palette$Builder $r2;
        android.os.AsyncTask $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: com.android.internal.graphics.palette.Palette$PaletteAsyncListener;

        $r2 = staticinvoke <com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Builder 'from'(android.graphics.Bitmap)>(r0);

        $r3 = virtualinvoke $r2.<com.android.internal.graphics.palette.Palette$Builder: android.os.AsyncTask generate(com.android.internal.graphics.palette.Palette$PaletteAsyncListener)>(r1);

        return $r3;
    }

    private float generateScore(com.android.internal.graphics.palette.Palette$Swatch, com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Palette$Swatch r1, r4;
        com.android.internal.graphics.palette.Target r2;
        float[] r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, f21, f22, f23;
        byte $b0, $b1, $b2;
        int $i3, i4;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Palette$Swatch;

        r2 := @parameter1: com.android.internal.graphics.palette.Target;

        r3 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: float[] getHsl()>();

        f21 = 0.0F;

        f22 = 0.0F;

        f23 = 0.0F;

        r4 = r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch mDominantSwatch>;

        if r4 == null goto label1;

        i4 = virtualinvoke r4.<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()>();

        goto label2;

     label1:
        i4 = 1;

     label2:
        $f0 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getSaturationWeight()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        $f15 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getSaturationWeight()>();

        $f16 = r3[1];

        $f17 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getTargetSaturation()>();

        $f18 = $f16 - $f17;

        $f19 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        $f20 = 1.0F - $f19;

        f21 = $f15 * $f20;

     label3:
        $f1 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getLightnessWeight()>();

        $b1 = $f1 cmpl 0.0F;

        if $b1 <= 0 goto label4;

        $f9 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getLightnessWeight()>();

        $f10 = r3[2];

        $f11 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getTargetLightness()>();

        $f12 = $f10 - $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        $f14 = 1.0F - $f13;

        f22 = $f9 * $f14;

     label4:
        $f2 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getPopulationWeight()>();

        $b2 = $f2 cmpl 0.0F;

        if $b2 <= 0 goto label5;

        $f5 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getPopulationWeight()>();

        $i3 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: int getPopulation()>();

        $f7 = (float) $i3;

        $f6 = (float) i4;

        $f8 = $f7 / $f6;

        f23 = $f5 * $f8;

     label5:
        $f3 = f21 + f22;

        $f4 = $f3 + f23;

        return $f4;
    }

    private com.android.internal.graphics.palette.Palette$Swatch generateScoredTarget(com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target r1;
        com.android.internal.graphics.palette.Palette$Swatch r2;
        boolean $z0;
        android.util.SparseBooleanArray $r3;
        int $i0;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Target;

        r2 = specialinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getMaxScoredSwatchForTarget(com.android.internal.graphics.palette.Target)>(r1);

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.graphics.palette.Target: boolean isExclusive()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.graphics.palette.Palette: android.util.SparseBooleanArray mUsedColors>;

        $i0 = virtualinvoke r2.<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()>();

        virtualinvoke $r3.<android.util.SparseBooleanArray: void append(int,boolean)>($i0, 1);

     label1:
        return r2;
    }

    private com.android.internal.graphics.palette.Palette$Swatch getMaxScoredSwatchForTarget(com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target r1;
        int i0, i2;
        com.android.internal.graphics.palette.Palette$Swatch r2, r6, r7;
        float f0, f1, f2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;
        byte $b1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Target;

        f1 = 0.0F;

        r6 = null;

        i2 = 0;

        $r3 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label4;

        $r4 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (com.android.internal.graphics.palette.Palette$Swatch) $r5;

        f2 = f1;

        r7 = r6;

        $z0 = specialinvoke r0.<com.android.internal.graphics.palette.Palette: boolean shouldBeScoredForTarget(com.android.internal.graphics.palette.Palette$Swatch,com.android.internal.graphics.palette.Target)>(r2, r1);

        if $z0 == 0 goto label3;

        f0 = specialinvoke r0.<com.android.internal.graphics.palette.Palette: float generateScore(com.android.internal.graphics.palette.Palette$Swatch,com.android.internal.graphics.palette.Target)>(r2, r1);

        if r6 == null goto label2;

        f2 = f1;

        r7 = r6;

        $b1 = f0 cmpl f1;

        if $b1 <= 0 goto label3;

     label2:
        r7 = r2;

        f2 = f0;

     label3:
        i2 = i2 + 1;

        f1 = f2;

        r6 = r7;

        goto label1;

     label4:
        return r6;
    }

    private boolean shouldBeScoredForTarget(com.android.internal.graphics.palette.Palette$Swatch, com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Palette$Swatch r1;
        com.android.internal.graphics.palette.Target r2;
        float[] r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b0, $b1, $b2, $b3;
        android.util.SparseBooleanArray $r4;
        int $i4;
        boolean $z0, z1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Palette$Swatch;

        r2 := @parameter1: com.android.internal.graphics.palette.Target;

        r3 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: float[] getHsl()>();

        z1 = 1;

        $f0 = r3[1];

        $f1 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getMinimumSaturation()>();

        $b0 = $f0 cmpl $f1;

        if $b0 < 0 goto label1;

        $f2 = r3[1];

        $f3 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getMaximumSaturation()>();

        $b1 = $f2 cmpg $f3;

        if $b1 > 0 goto label1;

        $f4 = r3[2];

        $f5 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getMinimumLightness()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label1;

        $f6 = r3[2];

        $f7 = virtualinvoke r2.<com.android.internal.graphics.palette.Target: float getMaximumLightness()>();

        $b3 = $f6 cmpg $f7;

        if $b3 > 0 goto label1;

        $r4 = r0.<com.android.internal.graphics.palette.Palette: android.util.SparseBooleanArray mUsedColors>;

        $i4 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()>();

        $z0 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>($i4);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void generate()
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, i1;
        com.android.internal.graphics.palette.Target r1;
        java.util.List $r2, $r4;
        android.util.SparseBooleanArray $r3;
        java.lang.Object $r5;
        java.util.Map $r6;
        com.android.internal.graphics.palette.Palette$Swatch $r7;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i1 = 0;

        $r2 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mTargets>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mTargets>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (com.android.internal.graphics.palette.Target) $r5;

        virtualinvoke r1.<com.android.internal.graphics.palette.Target: void normalizeWeights()>();

        $r6 = r0.<com.android.internal.graphics.palette.Palette: java.util.Map mSelectedSwatches>;

        $r7 = specialinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch generateScoredTarget(com.android.internal.graphics.palette.Target)>(r1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.internal.graphics.palette.Palette: android.util.SparseBooleanArray mUsedColors>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void clear()>();

        return;
    }

    public int getColorForTarget(com.android.internal.graphics.palette.Target, int)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target r1;
        int i0;
        com.android.internal.graphics.palette.Palette$Swatch r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Target;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>(r1);

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()>();

        goto label1;

     label1:
        return i0;
    }

    public int getDarkMutedColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_MUTED>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getDarkMutedSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_MUTED>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }

    public int getDarkVibrantColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_VIBRANT>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getDarkVibrantSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target DARK_VIBRANT>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }

    public int getDominantColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Palette$Swatch r1;
        int i0;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch mDominantSwatch>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.internal.graphics.palette.Palette$Swatch: int getRgb()>();

        goto label1;

     label1:
        return i0;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getDominantSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Palette$Swatch $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch mDominantSwatch>;

        return $r1;
    }

    public int getLightMutedColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_MUTED>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getLightMutedSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_MUTED>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }

    public int getLightVibrantColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_VIBRANT>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getLightVibrantSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target LIGHT_VIBRANT>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }

    public int getMutedColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target MUTED>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getMutedSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target MUTED>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.android.internal.graphics.palette.Palette$Swatch $r4;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        r1 := @parameter0: com.android.internal.graphics.palette.Target;

        $r2 = r0.<com.android.internal.graphics.palette.Palette: java.util.Map mSelectedSwatches>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.internal.graphics.palette.Palette$Swatch) $r3;

        return $r4;
    }

    public java.util.List getSwatches()
    {
        com.android.internal.graphics.palette.Palette r0;
        java.util.List $r1, $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mSwatches>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getTargets()
    {
        com.android.internal.graphics.palette.Palette r0;
        java.util.List $r1, $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = r0.<com.android.internal.graphics.palette.Palette: java.util.List mTargets>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public int getVibrantColor(int)
    {
        com.android.internal.graphics.palette.Palette r0;
        int i0, $i1;
        com.android.internal.graphics.palette.Target $r1;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target VIBRANT>;

        $i1 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: int getColorForTarget(com.android.internal.graphics.palette.Target,int)>($r1, i0);

        return $i1;
    }

    public com.android.internal.graphics.palette.Palette$Swatch getVibrantSwatch()
    {
        com.android.internal.graphics.palette.Palette r0;
        com.android.internal.graphics.palette.Target $r1;
        com.android.internal.graphics.palette.Palette$Swatch $r2;

        r0 := @this: com.android.internal.graphics.palette.Palette;

        $r1 = <com.android.internal.graphics.palette.Target: com.android.internal.graphics.palette.Target VIBRANT>;

        $r2 = virtualinvoke r0.<com.android.internal.graphics.palette.Palette: com.android.internal.graphics.palette.Palette$Swatch getSwatchForTarget(com.android.internal.graphics.palette.Target)>($r1);

        return $r2;
    }
}
