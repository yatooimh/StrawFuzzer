public abstract class com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService extends com.android.internal.infra.AbstractRemoteService
{
    private final int mInitialCapacity;
    protected java.util.ArrayList mPendingRequests;

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, int, com.android.internal.infra.AbstractRemoteService$VultureCallback, android.os.Handler, int, boolean, int)
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int i0, i1, i2;
        com.android.internal.infra.AbstractRemoteService$VultureCallback r4;
        android.os.Handler r5;
        boolean z0;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.internal.infra.AbstractRemoteService$VultureCallback;

        r5 := @parameter5: android.os.Handler;

        i1 := @parameter6: int;

        z0 := @parameter7: boolean;

        i2 := @parameter8: int;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.internal.infra.AbstractRemoteService$VultureCallback,android.os.Handler,int,boolean)>(r1, r2, r3, i0, r4, r5, i1, z0);

        r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: int mInitialCapacity> = i2;

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        java.lang.String r1, $r6, $r10;
        java.io.PrintWriter r2, $r4, $r5, $r7, $r8, $r9, $r11;
        java.util.ArrayList r3;
        int $i0, i1;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void dump(java.lang.String,java.io.PrintWriter)>(r1, r2);

        $r4 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r5 = virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("initialCapacity=");

        $i0 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: int mInitialCapacity>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r7 = virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r6);

        virtualinvoke $r7.<java.io.PrintWriter: void println()>();

        r3 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        if r3 != null goto label1;

        i1 = 0;

        goto label2;

     label1:
        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label2:
        $r8 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r9 = virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("pendingRequests=");

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r11 = virtualinvoke $r9.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r10);

        virtualinvoke $r11.<java.io.PrintWriter: void println()>();

        return;
    }

    final void handleBindFailure()
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        int i0, i2;
        boolean $z0;
        java.util.ArrayList $r2, r9;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8, r10;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r11;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r9 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        if r9 == null goto label4;

        i0 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        $z0 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: boolean mVerbose>;

        if $z0 == 0 goto label1;

        r10 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.lang.String mTag>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending failure to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending requests");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r10, $r8);

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r2 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r11 = (com.android.internal.infra.AbstractRemoteService$BasePendingRequest) $r3;

        virtualinvoke r11.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void onFailed()>();

        virtualinvoke r11.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean finish()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests> = null;

     label4:
        return;
    }

    protected void handleOnDestroy()
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        int i0, i2;
        java.lang.String r1, $r9;
        boolean $z0;
        java.util.ArrayList $r2, r10;
        java.lang.Object $r3;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r10 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        if r10 == null goto label4;

        i0 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        $z0 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: boolean mVerbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending requests");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r9);

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r2 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.internal.infra.AbstractRemoteService$BasePendingRequest) $r3;

        virtualinvoke $r4.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean cancel()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests> = null;

     label4:
        return;
    }

    void handlePendingRequestWhileUnBound(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;
        java.lang.String r2, $r12;
        java.util.ArrayList $r4, $r5, $r8, $r13;
        boolean $z1;
        java.lang.StringBuilder $r6;
        int $i0, $i2;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $r4 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        if $r4 != null goto label1;

        $r13 = new java.util.ArrayList;

        $i2 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: int mInitialCapacity>;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests> = $r13;

     label1:
        $r5 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $z1 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: boolean mVerbose>;

        if $z1 == 0 goto label2;

        r2 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.lang.String mTag>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("queued ");

        $r8 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests; last=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r12);

     label2:
        return;
    }

    void handlePendingRequests()
    {
        com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService r0;
        int i0, i2;
        java.lang.String r1, $r9;
        boolean $z0;
        java.util.ArrayList $r2, r10;
        java.lang.Object $r3;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService;

        r10 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        if r10 == null goto label4;

        i0 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        $z0 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: boolean mVerbose>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending requests");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r9);

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r2 = r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.internal.infra.AbstractRemoteService$BasePendingRequest) $r3;

        virtualinvoke $r4.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void run()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: java.util.ArrayList mPendingRequests> = null;

     label4:
        return;
    }
}
