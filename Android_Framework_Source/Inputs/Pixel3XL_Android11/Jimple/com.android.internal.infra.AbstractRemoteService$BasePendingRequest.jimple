public abstract class com.android.internal.infra.AbstractRemoteService$BasePendingRequest extends java.lang.Object implements java.lang.Runnable
{
    boolean mCancelled;
    boolean mCompleted;
    protected final java.lang.Object mLock;
    protected final java.lang.String mTag;
    final java.lang.ref.WeakReference mWeakService;

    void <init>(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        com.android.internal.infra.AbstractRemoteService r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.String mTag> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.Object mLock> = $r4;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.ref.WeakReference mWeakService> = $r5;

        return;
    }

    public boolean cancel()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        r1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCancelled>;

        if $z0 != 0 goto label5;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCompleted>;

        if $z1 == 0 goto label3;

     label2:
        goto label5;

     label3:
        r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCancelled> = 1;

        exitmonitor r1;

     label4:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void onCancel()>();

        return 1;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected final boolean finish()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        java.lang.Object r1, $r3;
        boolean $z0, $z1;
        java.lang.ref.WeakReference $r2;
        java.lang.Throwable $r4;
        com.android.internal.infra.AbstractRemoteService r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        r1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCompleted>;

        if $z0 != 0 goto label06;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCancelled>;

        if $z1 == 0 goto label03;

     label02:
        goto label06;

     label03:
        r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCompleted> = 1;

        exitmonitor r1;

     label04:
        $r2 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.ref.WeakReference mWeakService>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (com.android.internal.infra.AbstractRemoteService) $r3;

        if r5 == null goto label05;

        virtualinvoke r5.<com.android.internal.infra.AbstractRemoteService: void finishRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)>(r0);

     label05:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void onFinished()>();

        return 1;

     label06:
        exitmonitor r1;

     label07:
        return 0;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected final com.android.internal.infra.AbstractRemoteService getService()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        com.android.internal.infra.AbstractRemoteService $r3;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.ref.WeakReference mWeakService>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (com.android.internal.infra.AbstractRemoteService) $r2;

        return $r3;
    }

    protected final boolean isCancelledLocked()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        boolean $z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCancelled>;

        return $z0;
    }

    protected boolean isFinal()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        return 0;
    }

    protected boolean isRequestCompleted()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        r1 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean mCompleted>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onCancel()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        return;
    }

    protected void onFailed()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        return;
    }

    void onFinished()
    {
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        return;
    }
}
