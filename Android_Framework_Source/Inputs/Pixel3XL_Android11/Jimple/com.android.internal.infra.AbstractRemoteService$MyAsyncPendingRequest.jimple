final class com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest extends com.android.internal.infra.AbstractRemoteService$BasePendingRequest
{
    private static final java.lang.String TAG;
    private final com.android.internal.infra.AbstractRemoteService$AsyncRequest mRequest;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/internal/infra/AbstractRemoteService$MyAsyncPendingRequest;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: java.lang.String TAG> = $r1;

        return;
    }

    protected void <init>(com.android.internal.infra.AbstractRemoteService, com.android.internal.infra.AbstractRemoteService$AsyncRequest)
    {
        com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest r0;
        com.android.internal.infra.AbstractRemoteService r1;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r2;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        r2 := @parameter1: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void <init>(com.android.internal.infra.AbstractRemoteService)>(r1);

        r0.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: com.android.internal.infra.AbstractRemoteService$AsyncRequest mRequest> = r2;

        return;
    }

    public void run()
    {
        com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest r0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder r2;
        android.os.IInterface $r3;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest $r4;
        android.os.RemoteException $r5;
        java.lang.Throwable $r11;
        com.android.internal.infra.AbstractRemoteService r12;

        r0 := @this: com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest;

        r12 = virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: com.android.internal.infra.AbstractRemoteService getService()>();

        if r12 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: com.android.internal.infra.AbstractRemoteService$AsyncRequest mRequest>;

        $r3 = r12.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        interfaceinvoke $r4.<com.android.internal.infra.AbstractRemoteService$AsyncRequest: void run(android.os.IInterface)>($r3);

     label2:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: boolean finish()>();

        goto label7;

     label3:
        $r11 := @caughtexception;

        goto label8;

     label4:
        $r5 := @caughtexception;

     label5:
        r1 = <com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: java.lang.String TAG>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception handling async request (");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r10);

     label6:
        goto label2;

     label7:
        return;

     label8:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: boolean finish()>();

        throw $r11;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
}
