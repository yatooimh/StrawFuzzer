public abstract class com.android.internal.infra.AbstractRemoteService extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    protected static final int LAST_PRIVATE_MSG;
    private static final int MSG_BIND;
    private static final int MSG_UNBIND;
    public static final long PERMANENT_BOUND_TIMEOUT_MS;
    private boolean mBinding;
    private final int mBindingFlags;
    private boolean mCompleted;
    protected final android.content.ComponentName mComponentName;
    private final android.content.Context mContext;
    private boolean mDestroyed;
    protected final android.os.Handler mHandler;
    private final android.content.Intent mIntent;
    private long mNextUnbind;
    protected android.os.IInterface mService;
    private final android.content.ServiceConnection mServiceConnection;
    private boolean mServiceDied;
    protected final java.lang.String mTag;
    private final java.util.ArrayList mUnfinishedRequests;
    private final int mUserId;
    public final boolean mVerbose;
    private final com.android.internal.infra.AbstractRemoteService$VultureCallback mVultureCallback;

    void <init>(android.content.Context, java.lang.String, android.content.ComponentName, int, com.android.internal.infra.AbstractRemoteService$VultureCallback, android.os.Handler, int, boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.content.Context r1;
        java.lang.String r2, $r7;
        android.content.ComponentName r3, $r11;
        int i0, i1;
        com.android.internal.infra.AbstractRemoteService$VultureCallback r4;
        android.os.Handler r5, $r13;
        boolean z0;
        java.lang.Class $r6;
        com.android.internal.infra.AbstractRemoteService$RemoteServiceConnection $r8;
        java.util.ArrayList $r9;
        android.content.Intent $r10, $r12;
        android.os.Looper $r14;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.internal.infra.AbstractRemoteService$VultureCallback;

        r5 := @parameter5: android.os.Handler;

        i1 := @parameter6: int;

        z0 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag> = $r7;

        $r8 = new com.android.internal.infra.AbstractRemoteService$RemoteServiceConnection;

        specialinvoke $r8.<com.android.internal.infra.AbstractRemoteService$RemoteServiceConnection: void <init>(com.android.internal.infra.AbstractRemoteService,com.android.internal.infra.AbstractRemoteService$1)>(r0, null);

        r0.<com.android.internal.infra.AbstractRemoteService: android.content.ServiceConnection mServiceConnection> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.infra.AbstractRemoteService: java.util.ArrayList mUnfinishedRequests> = $r9;

        r0.<com.android.internal.infra.AbstractRemoteService: android.content.Context mContext> = r1;

        r0.<com.android.internal.infra.AbstractRemoteService: com.android.internal.infra.AbstractRemoteService$VultureCallback mVultureCallback> = r4;

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose> = z0;

        r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName> = r3;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>(r2);

        $r11 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName>;

        $r12 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r11);

        r0.<com.android.internal.infra.AbstractRemoteService: android.content.Intent mIntent> = $r12;

        r0.<com.android.internal.infra.AbstractRemoteService: int mUserId> = i0;

        $r13 = new android.os.Handler;

        $r14 = virtualinvoke r5.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r13.<android.os.Handler: void <init>(android.os.Looper)>($r14);

        r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler> = $r13;

        r0.<com.android.internal.infra.AbstractRemoteService: int mBindingFlags> = i1;

        return;
    }

    static boolean access$100(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        return $z0;
    }

    static boolean access$200(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding>;

        return $z0;
    }

    static boolean access$202(com.android.internal.infra.AbstractRemoteService, boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding> = z0;

        return z0;
    }

    static void access$300(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleBinderDied()>();

        return;
    }

    static void access$400(com.android.internal.infra.AbstractRemoteService, boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleOnConnectedStateChangedInternal(boolean)>(z0);

        return;
    }

    static boolean access$502(com.android.internal.infra.AbstractRemoteService, boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mServiceDied> = z0;

        return z0;
    }

    static void access$600(com.android.internal.infra.AbstractRemoteService, boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void scheduleUnbind(boolean)>(z0);

        return;
    }

    private void cancelScheduledUnbind()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        return;
    }

    private boolean checkIfDestroyed()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        android.content.ComponentName $r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z1 == 0 goto label1;

        r1 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not handling operation as service for ");

        $r5 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already destroyed");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r8);

     label1:
        $z2 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        return $z2;
    }

    private void handleBinderDied()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.IInterface r1;
        boolean $z0;
        com.android.internal.infra.AbstractRemoteService$VultureCallback $r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean checkIfDestroyed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        if r1 == null goto label2;

        $r3 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService> = null;

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mServiceDied> = 1;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void cancelScheduledUnbind()>();

        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: com.android.internal.infra.AbstractRemoteService$VultureCallback mVultureCallback>;

        interfaceinvoke $r2.<com.android.internal.infra.AbstractRemoteService$VultureCallback: void onServiceDied(java.lang.Object)>(r0);

        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleBindFailure()>();

        return;
    }

    private void handleDestroy()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean $z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean checkIfDestroyed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleOnDestroy()>();

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleEnsureUnbound()>();

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed> = 1;

        return;
    }

    private void handleEnsureBound()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.os.UserHandle $r3;
        android.content.Context $r4;
        android.content.Intent $r5, $r10;
        android.content.ServiceConnection $r6;
        android.os.Handler $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean handleIsBound()>();

        if $z0 != 0 goto label4;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding>;

        if $z1 == 0 goto label1;

        goto label4;

     label1:
        $z2 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z2 == 0 goto label2;

        $r15 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r15, "ensureBound()");

     label2:
        r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding> = 1;

        $i1 = r0.<com.android.internal.infra.AbstractRemoteService: int mBindingFlags>;

        i0 = 67108865 | $i1;

        $r4 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.Context mContext>;

        $r5 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.Intent mIntent>;

        $r6 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ServiceConnection mServiceConnection>;

        $r7 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r3 = new android.os.UserHandle;

        $i2 = r0.<com.android.internal.infra.AbstractRemoteService: int mUserId>;

        specialinvoke $r3.<android.os.UserHandle: void <init>(int)>($i2);

        $z3 = virtualinvoke $r4.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)>($r5, $r6, i0, $r7, $r3);

        if $z3 != 0 goto label3;

        r1 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not bind to ");

        $r10 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.Intent mIntent>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using flags ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r14);

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding> = 0;

        $z4 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mServiceDied>;

        if $z4 != 0 goto label3;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleBinderDied()>();

     label3:
        return;

     label4:
        return;
    }

    private void handleEnsureUnbound()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.IInterface r1;
        boolean $z0, $z1, $z2, $z4;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.content.Context $r4;
        android.content.ServiceConnection $r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean handleIsBound()>();

        if $z0 != 0 goto label1;

        $z4 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding>;

        if $z4 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "ensureUnbound()");

     label2:
        r0.<com.android.internal.infra.AbstractRemoteService: boolean mBinding> = 0;

        $z2 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean handleIsBound()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleOnConnectedStateChangedInternal(boolean)>(0);

        r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        if r1 == null goto label3;

        $r2 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService> = null;

     label3:
        r0.<com.android.internal.infra.AbstractRemoteService: long mNextUnbind> = 0L;

        $r4 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.Context mContext>;

        $r5 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r5);

        return;
    }

    private void handleFinishRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;
        java.util.ArrayList $r2, $r3;
        boolean $z1;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: java.util.ArrayList mUnfinishedRequests>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: java.util.ArrayList mUnfinishedRequests>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void scheduleUnbind()>();

     label1:
        return;
    }

    private boolean handleIsBound()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.IInterface $r1;
        boolean z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void handleOnConnectedStateChangedInternal(boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleOnConnectedStateChanged(boolean)>(z0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handlePendingRequests()>();

     label1:
        return;
    }

    private void handleUnbind()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean $z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean checkIfDestroyed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleEnsureUnbound()>();

        return;
    }

    public static void lambda$6FcEKfZ-7TXLg6dcCU8EMuMNAy4(com.android.internal.infra.AbstractRemoteService, com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter1: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleFinishRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)>(r1);

        return;
    }

    public static void lambda$9IBVTCLLZgndvH7fu1P14PW1_1o(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleDestroy()>();

        return;
    }

    public static void lambda$MDW40b8CzodE5xRowI9wDEyXEnw(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleUnbind()>();

        return;
    }

    public static void lambda$YSUzqqi1Pbrg2dlwMGMtKWbGXck(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleEnsureBound()>();

        return;
    }

    public static void lambda$ocrHd68Md9x6FfAzVQ6w8MAjFqY(com.android.internal.infra.AbstractRemoteService)
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @parameter0: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleBinderDied()>();

        return;
    }

    private void scheduleUnbind(boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0, $z1, $z3;
        byte $b0;
        long $l1, $l2, $l3, l6;
        com.android.internal.infra.'-$$Lambda$AbstractRemoteService$MDW40b8CzodE5xRowI9wDEyXEnw' $r1;
        android.os.Handler $r2;
        android.os.Message $r3, $r4;
        java.lang.String $r10, $r14, r15, r17;
        java.lang.StringBuilder r19, r20;
        java.util.function.Consumer r21;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter0: boolean;

        l6 = virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: long getTimeoutIdleBindMillis()>();

        $b0 = l6 cmp 0L;

        if $b0 > 0 goto label2;

        $z3 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z3 == 0 goto label1;

        r15 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not scheduling unbind when value is ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r14 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r15, $r14);

     label1:
        return;

     label2:
        if z0 != 0 goto label3;

        l6 = 0L;

     label3:
        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void cancelScheduledUnbind()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 + l6;

        r0.<com.android.internal.infra.AbstractRemoteService: long mNextUnbind> = $l2;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z1 == 0 goto label4;

        r17 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbinding in ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms: ");

        $l3 = r0.<com.android.internal.infra.AbstractRemoteService: long mNextUnbind>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r17, $r10);

     label4:
        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r1 = <com.android.internal.infra._$$Lambda$AbstractRemoteService$MDW40b8CzodE5xRowI9wDEyXEnw: com.android.internal.infra.'-$$Lambda$AbstractRemoteService$MDW40b8CzodE5xRowI9wDEyXEnw' INSTANCE>;

        r21 = (java.util.function.Consumer) $r1;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r21, r0);

        $r4 = virtualinvoke $r3.<android.os.Message: android.os.Message setWhat(int)>(2);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r4, l6);

        return;
    }

    public void binderDied()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.'-$$Lambda$AbstractRemoteService$ocrHd68Md9x6FfAzVQ6w8MAjFqY' $r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.function.Consumer r4;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r1 = <com.android.internal.infra._$$Lambda$AbstractRemoteService$ocrHd68Md9x6FfAzVQ6w8MAjFqY: com.android.internal.infra.'-$$Lambda$AbstractRemoteService$ocrHd68Md9x6FfAzVQ6w8MAjFqY' INSTANCE>;

        r4 = (java.util.function.Consumer) $r1;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r4, r0);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public final void destroy()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.'-$$Lambda$AbstractRemoteService$9IBVTCLLZgndvH7fu1P14PW1_1o' $r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.function.Consumer r4;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r1 = <com.android.internal.infra._$$Lambda$AbstractRemoteService$9IBVTCLLZgndvH7fu1P14PW1_1o: com.android.internal.infra.'-$$Lambda$AbstractRemoteService$9IBVTCLLZgndvH7fu1P14PW1_1o' INSTANCE>;

        r4 = (java.util.function.Consumer) $r1;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r4, r0);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        java.io.PrintWriter r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r40, $r41, $r42, $r43, $r45, $r46, $r48;
        boolean z0, $z1;
        long l0, $l4, $l5, $l6, $l8, $l9, $l10;
        int $i1, $i2, $i7;
        java.lang.String $r7, $r13, $r18, $r24, $r29, r39, $r44, $r47;
        android.content.ComponentName $r12;
        java.util.ArrayList $r23;
        byte $b3;
        java.lang.Throwable $r37;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r39 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        $r2 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r3 = virtualinvoke $r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r3.<java.io.PrintWriter: void println()>();

        $r4 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r5 = virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r6 = virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("userId=");

        $i1 = r0.<com.android.internal.infra.AbstractRemoteService: int mUserId>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r8 = virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r7);

        virtualinvoke $r8.<java.io.PrintWriter: void println()>();

        $r9 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r10 = virtualinvoke $r9.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r11 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r12 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName>;

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r14 = virtualinvoke $r11.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r13);

        virtualinvoke $r14.<java.io.PrintWriter: void println()>();

        $r15 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r16 = virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r17 = virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("destroyed=");

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1);

        $r19 = virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r18);

        virtualinvoke $r19.<java.io.PrintWriter: void println()>();

        $r20 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r21 = virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r22 = virtualinvoke $r21.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("numUnfinishedRequests=");

        $r23 = r0.<com.android.internal.infra.AbstractRemoteService: java.util.ArrayList mUnfinishedRequests>;

        $i2 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r25 = virtualinvoke $r22.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r24);

        virtualinvoke $r25.<java.io.PrintWriter: void println()>();

        z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean handleIsBound()>();

        $r26 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r27 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r28 = virtualinvoke $r27.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("bound=");

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r29);

        l0 = virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: long getTimeoutIdleBindMillis()>();

        if z0 == 0 goto label2;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" (unbind in : ");

        $l4 = r0.<com.android.internal.infra.AbstractRemoteService: long mNextUnbind>;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l4 - $l5;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l6, r1);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(")");

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" (permanently bound)");

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r40 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r41 = virtualinvoke $r40.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("mBindingFlags=");

        $i7 = r0.<com.android.internal.infra.AbstractRemoteService: int mBindingFlags>;

        virtualinvoke $r41.<java.io.PrintWriter: void println(int)>($i7);

        $r42 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        $r43 = virtualinvoke $r42.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("idleTimeout=");

        $l8 = l0 / 1000L;

        $r44 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        $r45 = virtualinvoke $r43.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r44);

        virtualinvoke $r45.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("s\n");

        $r46 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r39);

        virtualinvoke $r46.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("requestTimeout=");

     label3:
        $l9 = virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: long getRemoteRequestMillis()>();

        $l10 = $l9 / 1000L;

        $r47 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l10);

        $r48 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r47);

        virtualinvoke $r48.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("s\n");

     label4:
        goto label6;

     label5:
        $r37 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("not supported\n");

     label6:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;

        catch java.lang.UnsupportedOperationException from label3 to label4 with label5;
    }

    protected void executeAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r1;
        com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest $r2;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        $r2 = new com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest;

        specialinvoke $r2.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: void <init>(com.android.internal.infra.AbstractRemoteService,com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r0, r1);

        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handlePendingRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)>($r2);

        return;
    }

    void finishRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;
        com.android.internal.infra.'-$$Lambda$AbstractRemoteService$6FcEKfZ-7TXLg6dcCU8EMuMNAy4' $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.util.function.BiConsumer r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r2 = <com.android.internal.infra._$$Lambda$AbstractRemoteService$6FcEKfZ_7TXLg6dcCU8EMuMNAy4: com.android.internal.infra.'-$$Lambda$AbstractRemoteService$6FcEKfZ-7TXLg6dcCU8EMuMNAy4' INSTANCE>;

        r5 = (java.util.function.BiConsumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r5, r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public final android.content.ComponentName getComponentName()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName>;

        return $r1;
    }

    protected long getRemoteRequestMillis()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.UnsupportedOperationException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not implemented by ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public final android.os.IInterface getServiceInterface()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.IInterface $r1;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        return $r1;
    }

    protected abstract android.os.IInterface getServiceInterface(android.os.IBinder);

    protected abstract long getTimeoutIdleBindMillis();

    abstract void handleBindFailure();

    protected void handleOnConnectedStateChanged(boolean)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        z0 := @parameter0: boolean;

        return;
    }

    protected abstract void handleOnDestroy();

    protected final void handlePendingRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;
        boolean $z0, $z1, $z2, $z3, $z5, $z6;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r10, r11, r13;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $z0 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean checkIfDestroyed()>();

        if $z0 != 0 goto label6;

        $z1 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mCompleted>;

        if $z1 == 0 goto label1;

        goto label6;

     label1:
        $z2 = specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: boolean handleIsBound()>();

        if $z2 != 0 goto label3;

        $z6 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z6 == 0 goto label2;

        r11 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePendingRequest(): queuing ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r11, $r10);

     label2:
        virtualinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handlePendingRequestWhileUnBound(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)>(r1);

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void handleEnsureBound()>();

        goto label5;

     label3:
        $z3 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z3 == 0 goto label4;

        r13 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePendingRequest(): ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r13, $r6);

     label4:
        $r2 = r0.<com.android.internal.infra.AbstractRemoteService: java.util.ArrayList mUnfinishedRequests>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void cancelScheduledUnbind()>();

        virtualinvoke r1.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: void run()>();

        $z5 = virtualinvoke r1.<com.android.internal.infra.AbstractRemoteService$BasePendingRequest: boolean isFinal()>();

        if $z5 == 0 goto label5;

        r0.<com.android.internal.infra.AbstractRemoteService: boolean mCompleted> = 1;

     label5:
        return;

     label6:
        return;
    }

    abstract void handlePendingRequestWhileUnBound(com.android.internal.infra.AbstractRemoteService$BasePendingRequest);

    abstract void handlePendingRequests();

    public final boolean isDestroyed()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        boolean $z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        return $z0;
    }

    protected void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.'-$$Lambda$EbzSql2RHkXox5Myj8A-7kLC4_A' $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r5;
        com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest r7;
        java.util.function.BiConsumer r8;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r5 := @parameter0: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        r7 = new com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest;

        specialinvoke r7.<com.android.internal.infra.AbstractRemoteService$MyAsyncPendingRequest: void <init>(com.android.internal.infra.AbstractRemoteService,com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r0, r5);

        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r2 = <com.android.internal.infra._$$Lambda$EbzSql2RHkXox5Myj8A_7kLC4_A: com.android.internal.infra.'-$$Lambda$EbzSql2RHkXox5Myj8A-7kLC4_A' INSTANCE>;

        r8 = (java.util.function.BiConsumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, r0, r7);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    protected void scheduleBind()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        android.os.Handler $r1, $r3;
        boolean $z0, $z2;
        com.android.internal.infra.'-$$Lambda$AbstractRemoteService$YSUzqqi1Pbrg2dlwMGMtKWbGXck' $r2;
        android.os.Message $r4, $r5;
        java.lang.String $r6;
        java.util.function.Consumer r7;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r1 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z0 == 0 goto label2;

        $z2 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mVerbose>;

        if $z2 == 0 goto label1;

        $r6 = r0.<com.android.internal.infra.AbstractRemoteService: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r6, "scheduleBind(): already scheduled");

     label1:
        return;

     label2:
        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r2 = <com.android.internal.infra._$$Lambda$AbstractRemoteService$YSUzqqi1Pbrg2dlwMGMtKWbGXck: com.android.internal.infra.'-$$Lambda$AbstractRemoteService$YSUzqqi1Pbrg2dlwMGMtKWbGXck' INSTANCE>;

        r7 = (java.util.function.Consumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r7, r0);

        $r5 = virtualinvoke $r4.<android.os.Message: android.os.Message setWhat(int)>(1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    protected void scheduleRequest(com.android.internal.infra.AbstractRemoteService$BasePendingRequest)
    {
        com.android.internal.infra.AbstractRemoteService r0;
        com.android.internal.infra.AbstractRemoteService$BasePendingRequest r1;
        com.android.internal.infra.'-$$Lambda$7-CJJfrUZBVuXZyYFEWBNh8Mky8' $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.util.function.BiConsumer r5;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$BasePendingRequest;

        $r3 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.Handler mHandler>;

        $r2 = <com.android.internal.infra._$$Lambda$7_CJJfrUZBVuXZyYFEWBNh8Mky8: com.android.internal.infra.'-$$Lambda$7-CJJfrUZBVuXZyYFEWBNh8Mky8' INSTANCE>;

        r5 = (java.util.function.BiConsumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r5, r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    protected void scheduleUnbind()
    {
        com.android.internal.infra.AbstractRemoteService r0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        specialinvoke r0.<com.android.internal.infra.AbstractRemoteService: void scheduleUnbind(boolean)>(1);

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.infra.AbstractRemoteService r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r15, r16, r17;
        android.content.ComponentName $r7;
        int $i0;
        android.os.IInterface $r11;
        boolean $z0;

        r0 := @this: com.android.internal.infra.AbstractRemoteService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = r0.<com.android.internal.infra.AbstractRemoteService: android.content.ComponentName mComponentName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = r0.<com.android.internal.infra.AbstractRemoteService: android.os.IInterface mService>;

        if $r11 == null goto label1;

        r16 = " (bound)";

        goto label2;

     label1:
        r16 = " (unbound)";

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $z0 = r0.<com.android.internal.infra.AbstractRemoteService: boolean mDestroyed>;

        if $z0 == 0 goto label3;

        r17 = " (destroyed)";

        goto label4;

     label3:
        r17 = "";

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public static void <clinit>()
    {
        <com.android.internal.infra.AbstractRemoteService: long PERMANENT_BOUND_TIMEOUT_MS> = 0L;

        <com.android.internal.infra.AbstractRemoteService: int MSG_UNBIND> = 2;

        <com.android.internal.infra.AbstractRemoteService: int MSG_BIND> = 1;

        <com.android.internal.infra.AbstractRemoteService: int LAST_PRIVATE_MSG> = 2;

        return;
    }
}
