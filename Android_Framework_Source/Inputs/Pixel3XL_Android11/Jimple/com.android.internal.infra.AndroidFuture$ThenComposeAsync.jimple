class com.android.internal.infra.AndroidFuture$ThenComposeAsync extends com.android.internal.infra.AndroidFuture implements java.util.function.BiConsumer, java.lang.Runnable
{
    private final java.util.concurrent.Executor mExecutor;
    private volatile java.util.function.Function mFn;
    private volatile java.lang.Object mSourceResult;

    void <init>(com.android.internal.infra.AndroidFuture, java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture$ThenComposeAsync r0;
        com.android.internal.infra.AndroidFuture r1;
        java.util.function.Function r2, $r5;
        java.util.concurrent.Executor r3, $r7;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.internal.infra.AndroidFuture$ThenComposeAsync;

        r1 := @parameter0: com.android.internal.infra.AndroidFuture;

        r2 := @parameter1: java.util.function.Function;

        r3 := @parameter2: java.util.concurrent.Executor;

        specialinvoke r0.<com.android.internal.infra.AndroidFuture: void <init>()>();

        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.lang.Object mSourceResult> = null;

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (java.util.function.Function) $r4;

        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn> = $r5;

        $r6 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r7 = (java.util.concurrent.Executor) $r6;

        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.concurrent.Executor mExecutor> = $r7;

        virtualinvoke r1.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>(r0);

        return;
    }

    public volatile void accept(java.lang.Object, java.lang.Object)
    {
        com.android.internal.infra.AndroidFuture$ThenComposeAsync r0;
        java.lang.Object r1, r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture$ThenComposeAsync;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Throwable) r2;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: void accept(java.lang.Object,java.lang.Throwable)>(r1, $r3);

        return;
    }

    public void accept(java.lang.Object, java.lang.Throwable)
    {
        com.android.internal.infra.AndroidFuture$ThenComposeAsync r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        java.util.function.Function $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.internal.infra.AndroidFuture$ThenComposeAsync;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: boolean completeExceptionally(java.lang.Throwable)>(r2);

        goto label3;

     label1:
        $r3 = r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn>;

        if $r3 == null goto label2;

        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.lang.Object mSourceResult> = r1;

        $r4 = r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.concurrent.Executor mExecutor>;

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r0);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: boolean complete(java.lang.Object)>(r1);

     label3:
        return;
    }

    public void run()
    {
        com.android.internal.infra.AndroidFuture$ThenComposeAsync r0;
        java.lang.Object $r1, $r3, $r5;
        java.util.function.Function $r2;
        java.util.concurrent.CompletionStage $r4, r9;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.internal.infra.AndroidFuture$ThenComposeAsync;

     label1:
        $r2 = r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn>;

        $r1 = r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.lang.Object mSourceResult>;

        $r3 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r1);

        $r4 = (java.util.concurrent.CompletionStage) $r3;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r9 = (java.util.concurrent.CompletionStage) $r5;

     label2:
        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn> = null;

        interfaceinvoke r9.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer)>(r0);

        return;

     label3:
        $r8 := @caughtexception;

     label4:
        virtualinvoke r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: boolean completeExceptionally(java.lang.Throwable)>($r8);

     label5:
        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn> = null;

        return;

     label6:
        $r7 := @caughtexception;

        r0.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: java.util.function.Function mFn> = null;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
