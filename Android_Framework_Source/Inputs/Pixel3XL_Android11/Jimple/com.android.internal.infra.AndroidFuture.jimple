public class com.android.internal.infra.AndroidFuture extends java.util.concurrent.CompletableFuture implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final java.lang.StackTraceElement[] EMPTY_STACK_TRACE;
    private static final java.lang.String LOG_TAG;
    private java.util.function.BiConsumer mListener;
    private java.util.concurrent.Executor mListenerExecutor;
    private final java.lang.Object mLock;
    private final com.android.internal.infra.IAndroidFuture mRemoteOrigin;
    private android.os.Handler mTimeoutHandler;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.StackTraceElement[] $r2;
        com.android.internal.infra.AndroidFuture$2 $r3;

        <com.android.internal.infra.AndroidFuture: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/internal/infra/AndroidFuture;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.internal.infra.AndroidFuture: java.lang.String LOG_TAG> = $r1;

        $r2 = newarray (java.lang.StackTraceElement)[0];

        <com.android.internal.infra.AndroidFuture: java.lang.StackTraceElement[] EMPTY_STACK_TRACE> = $r2;

        $r3 = new com.android.internal.infra.AndroidFuture$2;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture$2: void <init>()>();

        <com.android.internal.infra.AndroidFuture: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    public void <init>()
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Object $r1;
        java.util.concurrent.Executor $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        specialinvoke r0.<java.util.concurrent.CompletableFuture: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.infra.AndroidFuture: java.lang.Object mLock> = $r1;

        $r2 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor> = $r2;

        $r3 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        r0.<com.android.internal.infra.AndroidFuture: android.os.Handler mTimeoutHandler> = $r3;

        r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.IAndroidFuture mRemoteOrigin> = null;

        return;
    }

    void <init>(android.os.Parcel)
    {
        com.android.internal.infra.AndroidFuture r0;
        android.os.Parcel r1;
        java.lang.Object $r2, $r7;
        java.util.concurrent.Executor $r3;
        android.os.Handler $r4;
        boolean $z0, $z1;
        android.os.IBinder $r5;
        com.android.internal.infra.IAndroidFuture $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.util.concurrent.CompletableFuture: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.infra.AndroidFuture: java.lang.Object mLock> = $r2;

        $r3 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor> = $r3;

        $r4 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        r0.<com.android.internal.infra.AndroidFuture: android.os.Handler mTimeoutHandler> = $r4;

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        if $z1 == 0 goto label1;

        $r8 = staticinvoke <com.android.internal.infra.AndroidFuture: java.lang.Throwable unparcelException(android.os.Parcel)>(r1);

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean completeExceptionally(java.lang.Throwable)>($r8);

        goto label2;

     label1:
        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(null);

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean complete(java.lang.Object)>($r7);

     label2:
        r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.IAndroidFuture mRemoteOrigin> = null;

        goto label4;

     label3:
        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <com.android.internal.infra.IAndroidFuture$Stub: com.android.internal.infra.IAndroidFuture asInterface(android.os.IBinder)>($r5);

        r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.IAndroidFuture mRemoteOrigin> = $r6;

     label4:
        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.internal.infra.AndroidFuture: java.lang.String LOG_TAG>;

        return $r0;
    }

    static void callListener(java.util.function.BiConsumer, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Object r0;
        java.lang.Throwable $r1, $r6, $r7, r9;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r12;
        java.util.function.BiConsumer r8;

        r8 := @parameter0: java.util.function.BiConsumer;

        r0 := @parameter1: java.lang.Object;

        r9 := @parameter2: java.lang.Throwable;

     label1:
        interfaceinvoke r8.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(r0, r9);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        if r9 != null goto label6;

     label4:
        interfaceinvoke r8.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(null, $r6);

     label5:
        goto label8;

     label6:
        $r7 = staticinvoke <android.util.ExceptionUtils: java.lang.Throwable appendCause(java.lang.Throwable,java.lang.Throwable)>($r6, r9);

        throw $r7;

     label7:
        $r1 := @caughtexception;

        r12 = <com.android.internal.infra.AndroidFuture: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to call whenComplete listener. res = ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r12, $r5, $r1);

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    private void callListenerAsync(java.util.function.BiConsumer, java.lang.Object, java.lang.Throwable)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.util.function.BiConsumer r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        java.util.concurrent.Executor $r4, $r5, $r7;
        com.android.internal.infra.'-$$Lambda$qN_gooelzsUiBhYWznXKzb-8_wA' $r6;
        com.android.internal.util.function.pooled.PooledRunnable $r8, $r9;
        com.android.internal.util.function.TriConsumer r10;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor>;

        $r4 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        if $r5 != $r4 goto label1;

        staticinvoke <com.android.internal.infra.AndroidFuture: void callListener(java.util.function.BiConsumer,java.lang.Object,java.lang.Throwable)>(r1, r2, r3);

        goto label2;

     label1:
        $r7 = r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor>;

        $r6 = <com.android.internal.infra._$$Lambda$qN_gooelzsUiBhYWznXKzb_8_wA: com.android.internal.infra.'-$$Lambda$qN_gooelzsUiBhYWznXKzb-8_wA' INSTANCE>;

        r10 = (com.android.internal.util.function.TriConsumer) $r6;

        $r8 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r10, r1, r2, r3);

        $r9 = interfaceinvoke $r8.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r9);

     label2:
        return;
    }

    public static com.android.internal.infra.AndroidFuture completedFuture(java.lang.Object)
    {
        java.lang.Object r0;
        com.android.internal.infra.AndroidFuture $r2;

        r0 := @parameter0: java.lang.Object;

        $r2 = new com.android.internal.infra.AndroidFuture;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture: void <init>()>();

        virtualinvoke $r2.<com.android.internal.infra.AndroidFuture: boolean complete(java.lang.Object)>(r0);

        return $r2;
    }

    static java.lang.Object lambda$thenCombine$1(java.lang.Object, java.lang.Void)
    {
        java.lang.Object r0;
        java.lang.Void r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Void;

        return r0;
    }

    static void lambda$whenCompleteAsync$0(java.util.function.BiConsumer, java.util.function.BiConsumer, java.lang.Object, java.lang.Throwable)
    {
        java.util.function.BiConsumer r0, r1;
        java.lang.Object r2;
        java.lang.Throwable r3;

        r0 := @parameter0: java.util.function.BiConsumer;

        r1 := @parameter1: java.util.function.BiConsumer;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Throwable;

        staticinvoke <com.android.internal.infra.AndroidFuture: void callListener(java.util.function.BiConsumer,java.lang.Object,java.lang.Throwable)>(r0, r2, r3);

        staticinvoke <com.android.internal.infra.AndroidFuture: void callListener(java.util.function.BiConsumer,java.lang.Object,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    private static void parcelException(android.os.Parcel, java.lang.Throwable)
    {
        android.os.Parcel r0;
        java.lang.Throwable r1, $r5;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        boolean z0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.lang.Throwable;

        if r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeBoolean(boolean)>(z0);

        if r1 != null goto label3;

        return;

     label3:
        $i0 = staticinvoke <android.os.Parcel: int getExceptionCode(java.lang.Throwable)>(r1);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        virtualinvoke r0.<android.os.Parcel: void writeStackTrace(java.lang.Throwable)>(r1);

        $r5 = virtualinvoke r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        staticinvoke <com.android.internal.infra.AndroidFuture: void parcelException(android.os.Parcel,java.lang.Throwable)>(r0, $r5);

        return;
    }

    public static com.android.internal.infra.AndroidFuture supply(java.util.function.Supplier)
    {
        java.util.function.Supplier r0;
        java.util.concurrent.Executor $r1;
        com.android.internal.infra.AndroidFuture $r2;

        r0 := @parameter0: java.util.function.Supplier;

        $r1 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r2 = staticinvoke <com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture supplyAsync(java.util.function.Supplier,java.util.concurrent.Executor)>(r0, $r1);

        return $r2;
    }

    public static com.android.internal.infra.AndroidFuture supplyAsync(java.util.function.Supplier, java.util.concurrent.Executor)
    {
        java.util.function.Supplier r0;
        java.util.concurrent.Executor r1;
        com.android.internal.infra.AndroidFuture$SupplyAsync $r2;

        r0 := @parameter0: java.util.function.Supplier;

        r1 := @parameter1: java.util.concurrent.Executor;

        $r2 = new com.android.internal.infra.AndroidFuture$SupplyAsync;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture$SupplyAsync: void <init>(java.util.function.Supplier,java.util.concurrent.Executor)>(r0, r1);

        return $r2;
    }

    private static java.lang.Throwable unparcelException(android.os.Parcel)
    {
        android.os.Parcel r0;
        int i0, $i1;
        java.lang.String r1, $r14, r15, r16, r18;
        boolean $z0;
        java.lang.StringBuilder $r2, $r9;
        java.lang.StackTraceElement[] $r6;
        java.lang.Throwable $r7;
        java.lang.RuntimeException $r13;
        java.lang.Exception r19, r20;

        r0 := @parameter0: android.os.Parcel;

        $z0 = virtualinvoke r0.<android.os.Parcel: boolean readBoolean()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r15 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 <= 0 goto label2;

        r16 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        goto label3;

     label2:
        r16 = "\t<stack trace unavailable>";

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r18 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r19 = virtualinvoke r0.<android.os.Parcel: java.lang.Exception createExceptionOrNull(int,java.lang.String)>(i0, r18);

        r20 = r19;

        if r19 != null goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r13 = new java.lang.RuntimeException;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        r20 = $r13;

     label4:
        $r6 = <com.android.internal.infra.AndroidFuture: java.lang.StackTraceElement[] EMPTY_STACK_TRACE>;

        virtualinvoke r20.<java.lang.Exception: void setStackTrace(java.lang.StackTraceElement[])>($r6);

        $r7 = staticinvoke <com.android.internal.infra.AndroidFuture: java.lang.Throwable unparcelException(android.os.Parcel)>(r0);

        if $r7 == null goto label5;

        virtualinvoke r20.<java.lang.Exception: java.lang.Throwable initCause(java.lang.Throwable)>(r20);

     label5:
        return r20;
    }

    public boolean cancel(boolean)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Throwable $r2, $r4;
        java.lang.IllegalStateException $r3, r5;
        boolean z0, z1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<java.util.concurrent.CompletableFuture: boolean cancel(boolean)>(z0);

        if z1 != 0 goto label1;

        goto label4;

     label1:
        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: java.lang.Object get()>();

        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected CancellationException");

        throw r5;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Expected CancellationException", $r2);

        throw $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: void onCompleted(java.lang.Object,java.lang.Throwable)>(null, $r4);

     label4:
        return z1;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public com.android.internal.infra.AndroidFuture cancelTimeout()
    {
        com.android.internal.infra.AndroidFuture r0;
        android.os.Handler $r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        $r1 = r0.<com.android.internal.infra.AndroidFuture: android.os.Handler mTimeoutHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(r0);

        return r0;
    }

    public boolean complete(java.lang.Object)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.lang.Object;

        z0 = specialinvoke r0.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: void onCompleted(java.lang.Object,java.lang.Throwable)>(r1, null);

     label1:
        return z0;
    }

    public boolean completeExceptionally(java.lang.Throwable)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Throwable r1;
        boolean z0;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.lang.Throwable;

        z0 = specialinvoke r0.<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: void onCompleted(java.lang.Object,java.lang.Throwable)>(null, r1);

     label1:
        return z0;
    }

    public int describeContents()
    {
        com.android.internal.infra.AndroidFuture r0;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        return 0;
    }

    protected void onCompleted(java.lang.Object, java.lang.Throwable)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Throwable r1, $r7;
        java.lang.Object r2, r8;
        java.util.function.BiConsumer r3;
        android.os.RemoteException $r5;
        java.lang.String $r6;
        com.android.internal.infra.IAndroidFuture r9;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r8 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture cancelTimeout()>();

        r2 = r0.<com.android.internal.infra.AndroidFuture: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r3 = r0.<com.android.internal.infra.AndroidFuture: java.util.function.BiConsumer mListener>;

        r0.<com.android.internal.infra.AndroidFuture: java.util.function.BiConsumer mListener> = null;

        exitmonitor r2;

     label02:
        if r3 == null goto label03;

        specialinvoke r0.<com.android.internal.infra.AndroidFuture: void callListenerAsync(java.util.function.BiConsumer,java.lang.Object,java.lang.Throwable)>(r3, r8, r1);

     label03:
        r9 = r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.IAndroidFuture mRemoteOrigin>;

        if r9 == null goto label07;

     label04:
        interfaceinvoke r9.<com.android.internal.infra.IAndroidFuture: void complete(com.android.internal.infra.AndroidFuture)>(r0);

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

        $r6 = <com.android.internal.infra.AndroidFuture: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to propagate completion", $r5);

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.internal.infra.AndroidFuture orTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.android.internal.infra.AndroidFuture r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;
        android.os.Message r2;
        com.android.internal.infra.'-$$Lambda$rAXGjry3wPGKviARzTYfDiY7xrs' $r3;
        android.os.Handler $r4;
        java.util.function.Consumer r5;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r3 = <com.android.internal.infra._$$Lambda$rAXGjry3wPGKviARzTYfDiY7xrs: com.android.internal.infra.'-$$Lambda$rAXGjry3wPGKviARzTYfDiY7xrs' INSTANCE>;

        r5 = (java.util.function.Consumer) $r3;

        r2 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r5, r0);

        r2.<android.os.Message: java.lang.Object obj> = r0;

        $r4 = r0.<com.android.internal.infra.AndroidFuture: android.os.Handler mTimeoutHandler>;

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, $l1);

        return r0;
    }

    public com.android.internal.infra.AndroidFuture setTimeoutHandler(android.os.Handler)
    {
        com.android.internal.infra.AndroidFuture r0;
        android.os.Handler r1, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: android.os.Handler;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture cancelTimeout()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.os.Handler) $r3;

        r0.<com.android.internal.infra.AndroidFuture: android.os.Handler mTimeoutHandler> = $r4;

        return r0;
    }

    public com.android.internal.infra.AndroidFuture thenApply(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, $r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture thenApply(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.Function r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenApply(java.util.function.Function)>(r1);

        return $r2;
    }

    public volatile java.util.concurrent.CompletionStage thenApply(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.Function r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenApply(java.util.function.Function)>(r1);

        return $r2;
    }

    public com.android.internal.infra.AndroidFuture thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;
        com.android.internal.infra.AndroidFuture$ThenApplyAsync $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = new com.android.internal.infra.AndroidFuture$ThenApplyAsync;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture$ThenApplyAsync: void <init>(com.android.internal.infra.AndroidFuture,java.util.function.Function,java.util.concurrent.Executor)>(r0, r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    public com.android.internal.infra.AndroidFuture thenCombine(java.util.concurrent.CompletionStage)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.concurrent.CompletionStage r1;
        com.android.internal.infra.'-$$Lambda$AndroidFuture$TQp8DNhjahKV9AOYm36g8Er70s4' $r2;
        java.util.function.BiFunction r4;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.concurrent.CompletionStage;

        $r2 = <com.android.internal.infra._$$Lambda$AndroidFuture$TQp8DNhjahKV9AOYm36g8Er70s4: com.android.internal.infra.'-$$Lambda$AndroidFuture$TQp8DNhjahKV9AOYm36g8Er70s4' INSTANCE>;

        r4 = (java.util.function.BiFunction) $r2;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>(r1, r4);

        return $r3;
    }

    public com.android.internal.infra.AndroidFuture thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.util.concurrent.CompletionStage r1;
        java.util.function.BiFunction r2;
        com.android.internal.infra.AndroidFuture$ThenCombine $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.concurrent.CompletionStage;

        r2 := @parameter1: java.util.function.BiFunction;

        $r3 = new com.android.internal.infra.AndroidFuture$ThenCombine;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture$ThenCombine: void <init>(java.util.concurrent.CompletableFuture,java.util.concurrent.CompletionStage,java.util.function.BiFunction)>(r0, r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.concurrent.CompletionStage r1;
        java.util.function.BiFunction r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.concurrent.CompletionStage;

        r2 := @parameter1: java.util.function.BiFunction;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletionStage thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.concurrent.CompletionStage r1;
        java.util.function.BiFunction r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.concurrent.CompletionStage;

        r2 := @parameter1: java.util.function.BiFunction;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)>(r1, r2);

        return $r3;
    }

    public com.android.internal.infra.AndroidFuture thenCompose(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, $r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture thenCompose(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.Function r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenCompose(java.util.function.Function)>(r1);

        return $r2;
    }

    public volatile java.util.concurrent.CompletionStage thenCompose(java.util.function.Function)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.Function r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenCompose(java.util.function.Function)>(r1);

        return $r2;
    }

    public com.android.internal.infra.AndroidFuture thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;
        com.android.internal.infra.AndroidFuture$ThenComposeAsync $r3;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = new com.android.internal.infra.AndroidFuture$ThenComposeAsync;

        specialinvoke $r3.<com.android.internal.infra.AndroidFuture$ThenComposeAsync: void <init>(com.android.internal.infra.AndroidFuture,java.util.function.Function,java.util.concurrent.Executor)>(r0, r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.Function r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.Function;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    void triggerTimeout()
    {
        com.android.internal.infra.AndroidFuture r0;
        boolean $z0;
        java.util.concurrent.TimeoutException $r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture cancelTimeout()>();

        $z0 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean isDone()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.concurrent.TimeoutException;

        specialinvoke $r2.<java.util.concurrent.TimeoutException: void <init>()>();

        virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean completeExceptionally(java.lang.Throwable)>($r2);

     label1:
        return;
    }

    java.lang.Throwable unwrapExecutionException(java.lang.Throwable)
    {
        com.android.internal.infra.AndroidFuture r0;
        boolean $z0;
        java.lang.Throwable r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = r1 instanceof java.util.concurrent.ExecutionException;

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label1:
        return r1;
    }

    public com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.BiConsumer r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        $r2 = <com.android.internal.util.ConcurrentUtils: java.util.concurrent.Executor DIRECT_EXECUTOR>;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>(r1, $r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletableFuture whenComplete(java.util.function.BiConsumer)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.BiConsumer r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>(r1);

        return $r2;
    }

    public volatile java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer)
    {
        com.android.internal.infra.AndroidFuture r0, $r2;
        java.util.function.BiConsumer r1;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        $r2 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenComplete(java.util.function.BiConsumer)>(r1);

        return $r2;
    }

    public com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0;
        java.lang.Object r1, r7, r9, r11;
        boolean $z0;
        java.util.concurrent.Executor $r3, r8;
        java.lang.Throwable $r4, $r5, $r6, r12;
        java.util.function.BiConsumer r10, r16, r17, r18, r20;
        com.android.internal.infra._$$Lambda$AndroidFuture$dkSvpmqaFOFKPCZgb7C7XLP_QpE r15;
        java.util.concurrent.ExecutionException r19;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r7 := @parameter0: java.util.function.BiConsumer;

        r8 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        r9 = r0.<com.android.internal.infra.AndroidFuture: java.lang.Object mLock>;

        entermonitor r9;

     label01:
        $z0 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean isDone()>();

        if $z0 != 0 goto label10;

        r10 = r0.<com.android.internal.infra.AndroidFuture: java.util.function.BiConsumer mListener>;

     label02:
        if r10 == null goto label05;

     label03:
        $r3 = r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor>;

        if r8 == $r3 goto label05;

        r16 = (java.util.function.BiConsumer) r7;

        specialinvoke r0.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>(r16, r8);

        exitmonitor r9;

     label04:
        return r0;

     label05:
        r0.<com.android.internal.infra.AndroidFuture: java.util.concurrent.Executor mListenerExecutor> = r8;

     label06:
        if r10 != null goto label07;

        goto label08;

     label07:
        r15 = new com.android.internal.infra._$$Lambda$AndroidFuture$dkSvpmqaFOFKPCZgb7C7XLP_QpE;

        r17 = (java.util.function.BiConsumer) r7;

        specialinvoke r15.<com.android.internal.infra._$$Lambda$AndroidFuture$dkSvpmqaFOFKPCZgb7C7XLP_QpE: void <init>(java.util.function.BiConsumer,java.util.function.BiConsumer)>(r10, r17);

        r7 = r15;

     label08:
        r18 = (java.util.function.BiConsumer) r7;

        r0.<com.android.internal.infra.AndroidFuture: java.util.function.BiConsumer mListener> = r18;

        exitmonitor r9;

     label09:
        return r0;

     label10:
        exitmonitor r9;

     label11:
        r11 = null;

        r12 = null;

     label12:
        r1 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: java.lang.Object get()>();

     label13:
        r11 = r1;

     label14:
        goto label17;

     label15:
        $r6 := @caughtexception;

        r12 = $r6;

        r11 = null;

        goto label17;

     label16:
        $r4 := @caughtexception;

        r19 = (java.util.concurrent.ExecutionException) $r4;

        r12 = virtualinvoke r19.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        goto label14;

     label17:
        r20 = (java.util.function.BiConsumer) r7;

        specialinvoke r0.<com.android.internal.infra.AndroidFuture: void callListenerAsync(java.util.function.BiConsumer,java.lang.Object,java.lang.Throwable)>(r20, r11, r12);

        return r0;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor r9;

     label20:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.util.concurrent.ExecutionException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public volatile java.util.concurrent.CompletableFuture whenCompleteAsync(java.util.function.BiConsumer, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.BiConsumer r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer, java.util.concurrent.Executor)
    {
        com.android.internal.infra.AndroidFuture r0, $r3;
        java.util.function.BiConsumer r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: java.util.function.BiConsumer;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: com.android.internal.infra.AndroidFuture whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)>(r1, r2);

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.infra.AndroidFuture r0;
        android.os.Parcel r1;
        int i0;
        boolean z0;
        com.android.internal.infra.AndroidFuture$1 $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.Object r6;

        r0 := @this: com.android.internal.infra.AndroidFuture;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        z0 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: boolean isDone()>();

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>(z0);

        if z0 == 0 goto label4;

     label1:
        r6 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: java.lang.Object get()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeValue(java.lang.Object)>(r6);

        goto label5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>(1);

        $r5 = virtualinvoke r0.<com.android.internal.infra.AndroidFuture: java.lang.Throwable unwrapExecutionException(java.lang.Throwable)>($r4);

        staticinvoke <com.android.internal.infra.AndroidFuture: void parcelException(android.os.Parcel,java.lang.Throwable)>(r1, $r5);

        return;

     label4:
        $r2 = new com.android.internal.infra.AndroidFuture$1;

        specialinvoke $r2.<com.android.internal.infra.AndroidFuture$1: void <init>(com.android.internal.infra.AndroidFuture)>(r0);

        $r3 = virtualinvoke $r2.<com.android.internal.infra.AndroidFuture$1: android.os.IBinder asBinder()>();

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
