class com.android.internal.infra.RemoteStream$2 extends com.android.internal.infra.RemoteStream
{

    void <init>(com.android.internal.util.FunctionalUtils$ThrowingConsumer, com.android.internal.util.FunctionalUtils$ThrowingFunction, java.util.concurrent.Executor, boolean)
    {
        com.android.internal.infra.RemoteStream$2 r0;
        com.android.internal.util.FunctionalUtils$ThrowingConsumer r1;
        com.android.internal.util.FunctionalUtils$ThrowingFunction r2;
        java.util.concurrent.Executor r3;
        boolean z0;

        r0 := @this: com.android.internal.infra.RemoteStream$2;

        r1 := @parameter0: com.android.internal.util.FunctionalUtils$ThrowingConsumer;

        r2 := @parameter1: com.android.internal.util.FunctionalUtils$ThrowingFunction;

        r3 := @parameter2: java.util.concurrent.Executor;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.infra.RemoteStream: void <init>(com.android.internal.util.FunctionalUtils$ThrowingConsumer,com.android.internal.util.FunctionalUtils$ThrowingFunction,java.util.concurrent.Executor,boolean,com.android.internal.infra.RemoteStream$1)>(r1, r2, r3, z0, null);

        return;
    }

    protected volatile java.io.Closeable createStream(android.os.ParcelFileDescriptor)
    {
        com.android.internal.infra.RemoteStream$2 r0;
        android.os.ParcelFileDescriptor r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.internal.infra.RemoteStream$2;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r2 = virtualinvoke r0.<com.android.internal.infra.RemoteStream$2: java.io.OutputStream createStream(android.os.ParcelFileDescriptor)>(r1);

        return $r2;
    }

    protected java.io.OutputStream createStream(android.os.ParcelFileDescriptor)
    {
        com.android.internal.infra.RemoteStream$2 r0;
        android.os.ParcelFileDescriptor r1;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r2;

        r0 := @this: com.android.internal.infra.RemoteStream$2;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r2 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        specialinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r1);

        return $r2;
    }
}
