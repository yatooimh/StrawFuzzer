public class com.android.internal.infra.ServiceConnector$Impl extends java.util.ArrayDeque implements com.android.internal.infra.ServiceConnector, android.content.ServiceConnection, android.os.IBinder$DeathRecipient, java.lang.Runnable
{
    static final boolean DEBUG;
    private static final long DEFAULT_DISCONNECT_TIMEOUT_MS;
    private static final long DEFAULT_REQUEST_TIMEOUT_MS;
    static final java.lang.String LOG_TAG;
    private final java.util.function.Function mBinderAsInterface;
    private boolean mBinding;
    private final int mBindingFlags;
    protected final android.content.Context mContext;
    private final android.content.Intent mIntent;
    private final java.util.Queue mQueue;
    private volatile android.os.IInterface mService;
    private final android.content.ServiceConnection mServiceConnection;
    private com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache;
    private final java.lang.Runnable mTimeoutDisconnect;
    private boolean mUnbinding;
    private final java.util.List mUnfinishedJobs;
    private final int mUserId;

    public void <init>(android.content.Context, android.content.Intent, int, int, java.util.function.Function)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0, i1;
        java.util.function.Function r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.function.Function;

        specialinvoke r0.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue> = r0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs> = $r4;

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.ServiceConnection mServiceConnection> = r0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: java.lang.Runnable mTimeoutDisconnect> = r0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService> = null;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding> = 0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding> = 0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache> = null;

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Context mContext> = r1;

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Intent mIntent> = r2;

        r0.<com.android.internal.infra.ServiceConnector$Impl: int mBindingFlags> = i0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: int mUserId> = i1;

        r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.function.Function mBinderAsInterface> = r3;

        return;
    }

    static java.util.Queue access$000(com.android.internal.infra.ServiceConnector$Impl)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.util.Queue $r1;

        r0 := @parameter0: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        return $r1;
    }

    static java.util.List access$100(com.android.internal.infra.ServiceConnector$Impl)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        return $r1;
    }

    static void access$200(com.android.internal.infra.ServiceConnector$Impl)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @parameter0: com.android.internal.infra.ServiceConnector$Impl;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void maybeScheduleUnbindTimeout()>();

        return;
    }

    private void cancelTimeout()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.lang.Runnable mTimeoutDisconnect>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        return;
    }

    static java.lang.Object castOrNull(java.lang.Object, java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    private void enqueue(com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        android.os.Handler $r5;
        android.os.Looper $r6;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob;

        $z0 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: boolean enqueue(com.android.internal.infra.ServiceConnector$Job)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to post a job to handler. Likely ");

        $r5 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()>();

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is exiting");

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        virtualinvoke r1.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean completeExceptionally(java.lang.Throwable)>($r9);

     label1:
        return;
    }

    private boolean enqueue(com.android.internal.infra.ServiceConnector$Job)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1;
        android.os.Handler $r2;
        com.android.internal.infra.'-$$Lambda$T7zIZMFnvwrmtbuTMXLaZHHp-9s' $r3;
        android.os.Message $r4;
        boolean $z0;
        java.util.function.BiConsumer r5;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void cancelTimeout()>();

        $r2 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()>();

        $r3 = <com.android.internal.infra._$$Lambda$T7zIZMFnvwrmtbuTMXLaZHHp_9s: com.android.internal.infra.'-$$Lambda$T7zIZMFnvwrmtbuTMXLaZHHp-9s' INSTANCE>;

        r5 = (java.util.function.BiConsumer) $r3;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r5, r0, r1);

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return $z0;
    }

    private boolean isBound()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.IInterface $r1;
        boolean z0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static android.os.IInterface lambda$connect$0(android.os.IInterface) throws java.lang.Exception
    {
        android.os.IInterface r0;

        r0 := @parameter0: android.os.IInterface;

        return r0;
    }

    private void logTrace()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.lang.StringBuilder $r2;
        java.util.List $r3;
        java.lang.String $r4, $r9;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <android.util.DebugUtils: java.util.List callersWithin(java.lang.Class,int)>(class "Lcom/android/internal/infra/ServiceConnector;", 1);

        $r4 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" -> ", $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceConnector.Impl", $r9);

        return;
    }

    private void maybeScheduleUnbindTimeout()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.util.List $r1;
        boolean $z0, $z1;
        java.util.Queue $r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $z1 = interfaceinvoke $r2.<java.util.Queue: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void scheduleUnbindTimeout()>();

     label1:
        return;
    }

    private void onTimeout()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void unbind()>();

        return;
    }

    private void processQueue()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1;
        java.util.Queue $r2;
        java.lang.Object $r3, $r4, r11;
        boolean $z0;
        java.util.List $r5;
        java.util.concurrent.CompletionStage $r6;
        java.lang.Throwable $r8;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob r9;
        android.os.IInterface r10;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

     label01:
        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        r1 = (com.android.internal.infra.ServiceConnector$Job) $r3;

        if r1 == null goto label12;

        $r4 = staticinvoke <com.android.internal.infra.ServiceConnector$Impl: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>(r1, class "Lcom/android/internal/infra/ServiceConnector$Impl$CompletionAwareJob;");

        r9 = (com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob) $r4;

     label02:
        r10 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService>;

     label03:
        if r10 != null goto label04;

        return;

     label04:
        r11 = interfaceinvoke r1.<com.android.internal.infra.ServiceConnector$Job: java.lang.Object run(java.lang.Object)>(r10);

     label05:
        if r9 == null goto label09;

     label06:
        $z0 = r9.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean mAsync>;

        if $z0 == 0 goto label08;

        $r5 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r9);

        $r6 = (java.util.concurrent.CompletionStage) r11;

        interfaceinvoke $r6.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer)>(r9);

     label07:
        goto label09;

     label08:
        virtualinvoke r9.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean complete(java.lang.Object)>(r11);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void completeExceptionally(com.android.internal.infra.ServiceConnector$Job,java.lang.Throwable)>(r1, $r8);

     label11:
        goto label01;

     label12:
        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void maybeScheduleUnbindTimeout()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void scheduleUnbindTimeout()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        long l0;
        byte $b1;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        l0 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: long getAutoDisconnectTimeoutMs()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.lang.Runnable mTimeoutDisconnect>;

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, l0);

     label1:
        return;
    }

    private java.lang.String stateToString()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $z0 = r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding>;

        if $z0 == 0 goto label1;

        return "Binding...";

     label1:
        $z1 = r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding>;

        if $z1 == 0 goto label2;

        return "Unbinding...";

     label2:
        $z2 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: boolean isBound()>();

        if $z2 == 0 goto label3;

        return "Bound";

     label3:
        return "Unbound";
    }

    protected boolean bindService(android.content.ServiceConnection, android.os.Handler)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.content.ServiceConnection r1;
        android.os.Handler r2;
        int $i0, $i1, $i2;
        android.content.Context $r3;
        android.content.Intent $r4;
        android.os.UserHandle $r5;
        boolean $z0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.content.ServiceConnection;

        r2 := @parameter1: android.os.Handler;

        $r3 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Context mContext>;

        $r4 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Intent mIntent>;

        $i0 = r0.<com.android.internal.infra.ServiceConnector$Impl: int mBindingFlags>;

        $i2 = $i0 | 1;

        $i1 = r0.<com.android.internal.infra.ServiceConnector$Impl: int mUserId>;

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        $z0 = virtualinvoke $r3.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)>($r4, r1, $i2, r2, $r5);

        return $z0;
    }

    protected android.os.IInterface binderAsInterface(android.os.IBinder)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.IBinder r1;
        java.util.function.Function $r2;
        java.lang.Object $r3;
        android.os.IInterface $r4;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.function.Function mBinderAsInterface>;

        $r3 = interfaceinvoke $r2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r1);

        $r4 = (android.os.IInterface) $r3;

        return $r4;
    }

    public void binderDied()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService> = null;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void unbind()>();

        return;
    }

    protected void cancelPendingJobs()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.util.Queue $r1;
        java.lang.Object $r2, $r3;
        com.android.internal.infra.ServiceConnector$Job r4;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob r5;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

     label1:
        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        r4 = (com.android.internal.infra.ServiceConnector$Job) $r2;

        if r4 == null goto label3;

        $r3 = staticinvoke <com.android.internal.infra.ServiceConnector$Impl: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>(r4, class "Lcom/android/internal/infra/ServiceConnector$Impl$CompletionAwareJob;");

        r5 = (com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob) $r3;

        if r5 == null goto label2;

        virtualinvoke r5.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean cancel(boolean)>(0);

     label2:
        goto label1;

     label3:
        return;
    }

    void completeExceptionally(com.android.internal.infra.ServiceConnector$Job, java.lang.Throwable)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1;
        java.lang.Throwable r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob r8;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = staticinvoke <com.android.internal.infra.ServiceConnector$Impl: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>(r1, class "Lcom/android/internal/infra/ServiceConnector$Impl$CompletionAwareJob;");

        r8 = (com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob) $r3;

        if r8 == null goto label1;

        virtualinvoke r8.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean completeExceptionally(java.lang.Throwable)>(r2);

     label1:
        if r8 == null goto label2;

        goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job failed: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceConnector.Impl", $r7, r2);

     label3:
        return;
    }

    public com.android.internal.infra.AndroidFuture connect()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r1, $r3, $r4, r8, r10;
        com.android.internal.infra.'-$$Lambda$ServiceConnector$Impl$3vLWxkP1Z6JyExzdZboFFp1zM20' $r2;
        java.lang.Throwable $r5;
        android.os.IInterface r7;
        com.android.internal.infra.ServiceConnector$Job r11;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

        if $r1 != null goto label6;

        r10 = new com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob;

        specialinvoke r10.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: void <init>(com.android.internal.infra.ServiceConnector$Impl)>(r0);

        r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache> = r10;

        $r2 = <com.android.internal.infra._$$Lambda$ServiceConnector$Impl$3vLWxkP1Z6JyExzdZboFFp1zM20: com.android.internal.infra.'-$$Lambda$ServiceConnector$Impl$3vLWxkP1Z6JyExzdZboFFp1zM20' INSTANCE>;

        r11 = (com.android.internal.infra.ServiceConnector$Job) $r2;

        r10.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: com.android.internal.infra.ServiceConnector$Job mDelegate> = r11;

        r7 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService>;

     label2:
        if r7 == null goto label5;

     label3:
        $r4 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

        virtualinvoke $r4.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean complete(java.lang.Object)>(r7);

     label4:
        goto label6;

     label5:
        $r3 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void enqueue(com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob)>($r3);

     label6:
        r8 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

     label7:
        exitmonitor r0;

        return r8;

     label8:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.lang.String r1, $r8, $r13, $r18, $r24, $r30;
        java.io.PrintWriter r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r31;
        android.content.Intent $r7;
        int $i0, $i1, $i2;
        java.util.Queue $r23;
        java.util.List $r29;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        $r3 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r4 = virtualinvoke $r3.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("ServiceConnector:");

        virtualinvoke $r4.<java.io.PrintWriter: void println()>();

        $r5 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r6 = virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r7 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Intent mIntent>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r8);

        virtualinvoke $r9.<java.io.PrintWriter: void println()>();

        $r10 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r11 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r12 = virtualinvoke $r11.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("userId: ");

        $i0 = r0.<com.android.internal.infra.ServiceConnector$Impl: int mUserId>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r14 = virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r13);

        virtualinvoke $r14.<java.io.PrintWriter: void println()>();

        $r15 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r16 = virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r17 = virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("State: ");

        $r18 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: java.lang.String stateToString()>();

        $r19 = virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r18);

        virtualinvoke $r19.<java.io.PrintWriter: void println()>();

        $r20 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r21 = virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r22 = virtualinvoke $r21.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Pending jobs: ");

        $r23 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $i1 = interfaceinvoke $r23.<java.util.Queue: int size()>();

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r25 = virtualinvoke $r22.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r24);

        virtualinvoke $r25.<java.io.PrintWriter: void println()>();

        $r26 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        $r27 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r28 = virtualinvoke $r27.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Unfinished async jobs: ");

        $r29 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        $i2 = interfaceinvoke $r29.<java.util.List: int size()>();

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r31 = virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r30);

        virtualinvoke $r31.<java.io.PrintWriter: void println()>();

        return;
    }

    void enqueueJobThread(com.android.internal.infra.ServiceConnector$Job)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Queue $r2;
        android.content.ServiceConnection $r3;
        android.os.Handler $r4;
        java.lang.StringBuilder $r5, $r11, $r16;
        android.content.Intent $r7;
        java.lang.IllegalStateException $r9, $r14, $r19;
        java.lang.String $r10, $r15, $r20;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void cancelTimeout()>();

        $z0 = r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding>;

        if $z0 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service is unbinding. Ignoring ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void completeExceptionally(com.android.internal.infra.ServiceConnector$Job,java.lang.Throwable)>(r1, $r19);

        goto label5;

     label1:
        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $z1 = interfaceinvoke $r2.<java.util.Queue: boolean offer(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add to queue: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void completeExceptionally(com.android.internal.infra.ServiceConnector$Job,java.lang.Throwable)>(r1, $r14);

        goto label5;

     label2:
        $z2 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: boolean isBound()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void processQueue()>();

        goto label5;

     label3:
        $z3 = r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding>;

        if $z3 != 0 goto label5;

        $r3 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.ServiceConnection mServiceConnection>;

        $r4 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()>();

        $z4 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: boolean bindService(android.content.ServiceConnection,android.os.Handler)>($r3, $r4);

        if $z4 == 0 goto label4;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding> = 1;

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to bind to service ");

        $r7 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Intent mIntent>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void completeExceptionally(com.android.internal.infra.ServiceConnector$Job,java.lang.Throwable)>(r1, $r9);

     label5:
        return;
    }

    protected long getAutoDisconnectTimeoutMs()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        return 15000L;
    }

    protected android.os.Handler getJobHandler()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.Handler $r1;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        return $r1;
    }

    protected long getRequestTimeoutMs()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        return 30000L;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void binderDied()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.IInterface r1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r6, $r12;
        android.os.RemoteException $r7;
        android.content.ComponentName r13;
        android.os.IBinder r14;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r13 := @parameter0: android.content.ComponentName;

        r14 := @parameter1: android.os.IBinder;

        $z0 = r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring onServiceConnected due to ongoing unbinding: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceConnector.Impl", $r6);

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface binderAsInterface(android.os.IBinder)>(r14);

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService> = r1;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding> = 0;

     label2:
        interfaceinvoke r14.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServiceConnected ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceConnector.Impl", $r12, $r7);

     label5:
        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void onServiceConnectionStatusChanged(android.os.IInterface,boolean)>(r1, 1);

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void processQueue()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void onServiceConnectionStatusChanged(android.os.IInterface, boolean)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.IInterface r1;
        boolean z0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.os.IInterface;

        z0 := @parameter1: boolean;

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.content.ComponentName r1;
        android.os.IInterface r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: android.content.ComponentName;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding> = 1;

        r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService>;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void onServiceConnectionStatusChanged(android.os.IInterface,boolean)>(r2, 0);

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService> = null;

     label1:
        return;
    }

    protected void onServiceUnbound()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        return;
    }

    public com.android.internal.infra.AndroidFuture post(com.android.internal.infra.ServiceConnector$VoidJob)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$VoidJob r1;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$VoidJob;

        $r2 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob postForResult(com.android.internal.infra.ServiceConnector$Job)>(r1);

        return $r2;
    }

    public com.android.internal.infra.AndroidFuture postAsync(com.android.internal.infra.ServiceConnector$Job)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1, $r5;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r3;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        $r3 = new com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob;

        specialinvoke $r3.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: void <init>(com.android.internal.infra.ServiceConnector$Impl)>(r0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (com.android.internal.infra.ServiceConnector$Job) r1;

        $r3.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: com.android.internal.infra.ServiceConnector$Job mDelegate> = $r5;

        $r3.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean mAsync> = 1;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void enqueue(com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob)>($r3);

        return $r3;
    }

    public volatile com.android.internal.infra.AndroidFuture postForResult(com.android.internal.infra.ServiceConnector$Job)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        $r2 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob postForResult(com.android.internal.infra.ServiceConnector$Job)>(r1);

        return $r2;
    }

    public com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob postForResult(com.android.internal.infra.ServiceConnector$Job)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Job r1, $r5;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r3;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$Job;

        $r3 = new com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob;

        specialinvoke $r3.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: void <init>(com.android.internal.infra.ServiceConnector$Impl)>(r0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (com.android.internal.infra.ServiceConnector$Job) r1;

        $r3.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: com.android.internal.infra.ServiceConnector$Job mDelegate> = $r5;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void enqueue(com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob)>($r3);

        return $r3;
    }

    public void run()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void onTimeout()>();

        return;
    }

    public boolean run(com.android.internal.infra.ServiceConnector$VoidJob)
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$VoidJob r1;
        boolean $z0;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r1 := @parameter0: com.android.internal.infra.ServiceConnector$VoidJob;

        $z0 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: boolean enqueue(com.android.internal.infra.ServiceConnector$Job)>(r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        java.lang.StringBuilder $r1, r23;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Intent $r4;
        java.lang.String $r9, $r13;
        java.util.Queue $r10, $r19;
        boolean $z0, $z1;
        java.util.List $r11, $r15;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceConnector@");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $i1 = $i0 % 1000;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Intent mIntent>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", user: ");

        $i2 = r0.<com.android.internal.infra.ServiceConnector$Impl: int mUserId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")[");

        $r9 = specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: java.lang.String stateToString()>();

        r23 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $z0 = interfaceinvoke $r10.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r19 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.Queue mQueue>;

        $i4 = interfaceinvoke $r19.<java.util.Queue: int size()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending job(s)");

     label1:
        $r11 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        $z1 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r15 = r0.<com.android.internal.infra.ServiceConnector$Impl: java.util.List mUnfinishedJobs>;

        $i3 = interfaceinvoke $r15.<java.util.List: int size()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unfinished async job(s)");

     label2:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void unbind()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        android.os.Handler $r1;
        com.android.internal.infra.'-$$Lambda$XuWfs8-IsKaNygi8YjlVGjedkIw' $r2;
        android.os.Message $r3;
        java.util.function.Consumer r4;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding> = 1;

        $r1 = virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.Handler getJobHandler()>();

        $r2 = <com.android.internal.infra._$$Lambda$XuWfs8_IsKaNygi8YjlVGjedkIw: com.android.internal.infra.'-$$Lambda$XuWfs8-IsKaNygi8YjlVGjedkIw' INSTANCE>;

        r4 = (java.util.function.Consumer) $r2;

        $r3 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r4, r0);

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    void unbindJobThread()
    {
        com.android.internal.infra.ServiceConnector$Impl r0;
        com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob $r1, $r2;
        android.content.ServiceConnection $r3;
        android.content.Context $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;
        android.os.IInterface r7;
        boolean z2;

        r0 := @this: com.android.internal.infra.ServiceConnector$Impl;

        specialinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void cancelTimeout()>();

        r7 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService>;

        if r7 == null goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        if z2 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void onServiceConnectionStatusChanged(android.os.IInterface,boolean)>(r7, 0);

        $r4 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.Context mContext>;

        $r3 = r0.<com.android.internal.infra.ServiceConnector$Impl: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r3);

        $r5 = interfaceinvoke r7.<android.os.IInterface: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.internal.infra.ServiceConnector$Impl: android.os.IInterface mService> = null;

     label03:
        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mBinding> = 0;

        r0.<com.android.internal.infra.ServiceConnector$Impl: boolean mUnbinding> = 0;

        entermonitor r0;

     label04:
        $r1 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

        if $r1 == null goto label05;

        $r2 = r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache>;

        virtualinvoke $r2.<com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob: boolean cancel(boolean)>(1);

        r0.<com.android.internal.infra.ServiceConnector$Impl: com.android.internal.infra.ServiceConnector$Impl$CompletionAwareJob mServiceConnectionFutureCache> = null;

     label05:
        exitmonitor r0;

     label06:
        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void cancelPendingJobs()>();

        if z2 == 0 goto label07;

        virtualinvoke r0.<com.android.internal.infra.ServiceConnector$Impl: void onServiceUnbound()>();

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r6;

        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static void <clinit>()
    {
        <com.android.internal.infra.ServiceConnector$Impl: java.lang.String LOG_TAG> = "ServiceConnector.Impl";

        <com.android.internal.infra.ServiceConnector$Impl: long DEFAULT_REQUEST_TIMEOUT_MS> = 30000L;

        <com.android.internal.infra.ServiceConnector$Impl: long DEFAULT_DISCONNECT_TIMEOUT_MS> = 15000L;

        <com.android.internal.infra.ServiceConnector$Impl: boolean DEBUG> = 0;

        return;
    }
}
