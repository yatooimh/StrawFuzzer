public final class com.android.internal.inputmethod.CancellationGroup$Completable$Int extends com.android.internal.inputmethod.CancellationGroup$Completable$ValueBase
{
    private int mValue;

    private void <init>(com.android.internal.inputmethod.CancellationGroup)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        com.android.internal.inputmethod.CancellationGroup r1;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        r1 := @parameter0: com.android.internal.inputmethod.CancellationGroup;

        specialinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$ValueBase: void <init>(com.android.internal.inputmethod.CancellationGroup)>(r1);

        r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int mValue> = 0;

        return;
    }

    void <init>(com.android.internal.inputmethod.CancellationGroup, com.android.internal.inputmethod.CancellationGroup$1)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        com.android.internal.inputmethod.CancellationGroup r1;
        com.android.internal.inputmethod.CancellationGroup$1 r2;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        r1 := @parameter0: com.android.internal.inputmethod.CancellationGroup;

        r2 := @parameter1: com.android.internal.inputmethod.CancellationGroup$1;

        specialinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: void <init>(com.android.internal.inputmethod.CancellationGroup)>(r1);

        return;
    }

    public volatile boolean await(int, java.util.concurrent.TimeUnit)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        int i0;
        java.util.concurrent.TimeUnit r1;
        boolean $z0;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $z0 = specialinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$ValueBase: boolean await(int,java.util.concurrent.TimeUnit)>(i0, r1);

        return $z0;
    }

    public int getValue()
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.UnsupportedOperationException r3;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        r1 = r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: java.lang.Object mValueLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: boolean mHasValue>;

        if $z0 == 0 goto label3;

        i0 = r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int mValue>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        r3 = new java.lang.UnsupportedOperationException;

        specialinvoke r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getValue() is allowed only if hasValue() returns true");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public volatile boolean hasValue()
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        boolean $z0;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        $z0 = specialinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$ValueBase: boolean hasValue()>();

        return $z0;
    }

    void onComplete(int)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.UnsupportedOperationException r3;

        r0 := @this: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: java.lang.Object mValueLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: boolean mHasValue>;

        if $z0 != 0 goto label3;

        r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: int mValue> = i0;

        r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: boolean mHasValue> = 1;

        exitmonitor r1;

     label2:
        virtualinvoke r0.<com.android.internal.inputmethod.CancellationGroup$Completable$Int: void onComplete()>();

        return;

     label3:
        r3 = new java.lang.UnsupportedOperationException;

        specialinvoke r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("onComplete() cannot be called multiple times");

        throw r3;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
