class com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy extends java.lang.Object implements com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations
{
    public static com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void acceptClient(int, com.android.internal.view.IInputMethodSession, com.android.internal.inputmethod.IMultiClientInputMethodSession, android.view.InputChannel) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        int i0;
        com.android.internal.inputmethod.IMultiClientInputMethodSession r1;
        android.view.InputChannel r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10, r11;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r6, $r7;
        java.lang.Throwable $r8;
        com.android.internal.view.IInputMethodSession r9;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: com.android.internal.view.IInputMethodSession;

        r1 := @parameter2: com.android.internal.inputmethod.IMultiClientInputMethodSession;

        r2 := @parameter3: android.view.InputChannel;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<com.android.internal.view.IInputMethodSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        r11 = null;

        if r1 == null goto label09;

     label08:
        r11 = interfaceinvoke r1.<com.android.internal.inputmethod.IMultiClientInputMethodSession: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

     label10:
        if r2 == null goto label13;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        $r5 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        if $z0 != 0 goto label16;

        $r6 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r6 == null goto label16;

        $r7 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        interfaceinvoke $r7.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: void acceptClient(int,com.android.internal.view.IInputMethodSession,com.android.internal.inputmethod.IMultiClientInputMethodSession,android.view.InputChannel)>(i0, r9, r1, r2);

     label15:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label17:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        $r1 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.os.IBinder createInputMethodWindowToken(int) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7, r8;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: android.os.IBinder createInputMethodWindowToken(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void deleteInputMethodWindowToken(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: void deleteInputMethodWindowToken(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        return "com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations";
    }

    public boolean isUidAllowedOnDisplay(int, int) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: boolean isUidAllowedOnDisplay(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void reportImeWindowTarget(int, int, android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: void reportImeWindowTarget(int,int,android.os.IBinder)>(i0, i1, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setActive(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations$Stub: com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations: void setActive(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
