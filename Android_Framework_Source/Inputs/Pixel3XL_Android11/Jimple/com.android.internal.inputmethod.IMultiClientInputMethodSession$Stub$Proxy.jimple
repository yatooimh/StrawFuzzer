class com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy extends java.lang.Object implements com.android.internal.inputmethod.IMultiClientInputMethodSession
{
    public static com.android.internal.inputmethod.IMultiClientInputMethodSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        $r1 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        return "com.android.internal.inputmethod.IMultiClientInputMethodSession";
    }

    public void hideSoftInput(int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.ResultReceiver r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.os.ResultReceiver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void hideSoftInput(int,android.os.ResultReceiver)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void showSoftInput(int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r3, $r4;
        java.lang.Throwable $r5;
        android.os.ResultReceiver r6;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.os.ResultReceiver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r4.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void showSoftInput(int,android.os.ResultReceiver)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext, int, android.view.inputmethod.EditorInfo, int, int, int) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.view.inputmethod.EditorInfo r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r13;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, r14;
        com.android.internal.view.IInputContext r12;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        r12 := @parameter0: com.android.internal.view.IInputContext;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.inputmethod.EditorInfo;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

     label02:
        if r12 == null goto label05;

     label03:
        r13 = interfaceinvoke r12.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r13 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r13);

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label08:
        if r1 == null goto label11;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label10:
        goto label12;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label13:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label14:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

     label15:
        $r3 = r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label17;

        $r4 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        if $r4 == null goto label17;

        $r5 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.inputmethod.IMultiClientInputMethodSession: void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int,int)>(r12, i0, r1, i1, i2, i3);

     label16:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label24;

     label19:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label24;

     label20:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label24;

     label21:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label24;

     label22:
        $r6 := @caughtexception;

        r14 = $r6;

        goto label24;

     label23:
        $r8 := @caughtexception;

        r14 = $r8;

     label24:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label18;
    }
}
