public abstract class com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub extends android.os.Binder implements com.android.internal.inputmethod.IMultiClientInputMethodSession
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_hideSoftInput;
    static final int TRANSACTION_showSoftInput;
    static final int TRANSACTION_startInputOrWindowGainedFocus;

    public void <init>()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub r0;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "com.android.internal.inputmethod.IMultiClientInputMethodSession");

        return;
    }

    public static com.android.internal.inputmethod.IMultiClientInputMethodSession asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy $r2;
        boolean $z0;
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        if r1 == null goto label2;

        $z0 = r1 instanceof com.android.internal.inputmethod.IMultiClientInputMethodSession;

        if $z0 == 0 goto label2;

        $r3 = (com.android.internal.inputmethod.IMultiClientInputMethodSession) r1;

        return $r3;

     label2:
        $r2 = new com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy;

        specialinvoke $r2.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static com.android.internal.inputmethod.IMultiClientInputMethodSession getDefaultImpl()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession $r0;

        $r0 = <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: com.android.internal.inputmethod.IMultiClientInputMethodSession sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return null;

     label1:
        return "hideSoftInput";

     label2:
        return "showSoftInput";

     label3:
        return "startInputOrWindowGainedFocus";
    }

    public static boolean setDefaultImpl(com.android.internal.inputmethod.IMultiClientInputMethodSession)
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: com.android.internal.inputmethod.IMultiClientInputMethodSession;

        $r1 = <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: com.android.internal.inputmethod.IMultiClientInputMethodSession sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub$Proxy: com.android.internal.inputmethod.IMultiClientInputMethodSession sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub r0;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        com.android.internal.view.IInputContext r1;
        android.os.IBinder $r2;
        android.os.Parcelable$Creator $r3, $r5, $r7;
        java.lang.Object $r4, $r6, $r8;
        boolean $z0;
        android.os.Parcel r9, r10;
        android.os.ResultReceiver r11, r12;
        android.view.inputmethod.EditorInfo r13;

        r0 := @this: com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub;

        i7 := @parameter0: int;

        r9 := @parameter1: android.os.Parcel;

        r10 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i7 == 1 goto label08;

        if i7 == 2 goto label05;

        if i7 == 3 goto label02;

        if i7 == 1598968902 goto label01;

        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i7, r9, r10, i0);

        return $z0;

     label01:
        virtualinvoke r10.<android.os.Parcel: void writeString(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        return 1;

     label02:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        i8 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label03;

        $r7 = <android.os.ResultReceiver: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r9);

        r11 = (android.os.ResultReceiver) $r8;

        goto label04;

     label03:
        r11 = null;

     label04:
        virtualinvoke r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: void hideSoftInput(int,android.os.ResultReceiver)>(i8, r11);

        return 1;

     label05:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        i9 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label06;

        $r5 = <android.os.ResultReceiver: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r9);

        r12 = (android.os.ResultReceiver) $r6;

        goto label07;

     label06:
        r12 = null;

     label07:
        virtualinvoke r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: void showSoftInput(int,android.os.ResultReceiver)>(i9, r12);

        return 1;

     label08:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.inputmethod.IMultiClientInputMethodSession");

        $r2 = virtualinvoke r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r2);

        i10 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label09;

        $r3 = <android.view.inputmethod.EditorInfo: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r9);

        r13 = (android.view.inputmethod.EditorInfo) $r4;

        goto label10;

     label09:
        r13 = null;

     label10:
        $i2 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int,int)>(r1, i10, r13, $i2, $i3, $i4);

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: int TRANSACTION_startInputOrWindowGainedFocus> = 1;

        <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: int TRANSACTION_showSoftInput> = 2;

        <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: int TRANSACTION_hideSoftInput> = 3;

        <com.android.internal.inputmethod.IMultiClientInputMethodSession$Stub: java.lang.String DESCRIPTOR> = "com.android.internal.inputmethod.IMultiClientInputMethodSession";

        return;
    }
}
