public final class com.android.internal.inputmethod.InputMethodDebug extends java.lang.Object
{

    private void <init>()
    {
        com.android.internal.inputmethod.InputMethodDebug r0;

        r0 := @this: com.android.internal.inputmethod.InputMethodDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String objToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.StringBuilder $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "null";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static java.lang.String softInputDisplayReasonToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label20;
            case 1: goto label19;
            case 2: goto label18;
            case 3: goto label17;
            case 4: goto label16;
            case 5: goto label15;
            case 6: goto label14;
            case 7: goto label13;
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label10;
            case 11: goto label09;
            case 12: goto label08;
            case 13: goto label07;
            case 14: goto label06;
            case 15: goto label05;
            case 16: goto label04;
            case 17: goto label03;
            case 18: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label02:
        return "HIDE_RECENTS_ANIMATION";

     label03:
        return "HIDE_DOCKED_STACK_ATTACHED";

     label04:
        return "HIDE_POWER_BUTTON_GO_HOME";

     label05:
        return "HIDE_SETTINGS_ON_CHANGE";

     label06:
        return "HIDE_RESET_SHELL_COMMAND";

     label07:
        return "HIDE_ALWAYS_HIDDEN_STATE";

     label08:
        return "HIDE_STATE_HIDDEN_FORWARD_NAV";

     label09:
        return "HIDE_UNSPECIFIED_WINDOW";

     label10:
        return "HIDE_INVALID_USER";

     label11:
        return "HIDE_SWITCH_USER";

     label12:
        return "SHOW_SETTINGS_ON_CHANGE";

     label13:
        return "SHOW_STATE_ALWAYS_VISIBLE";

     label14:
        return "SHOW_STATE_VISIBLE_FORWARD_NAV";

     label15:
        return "SHOW_AUTO_EDITOR_FORWARD_NAV";

     label16:
        return "HIDE_MY_SOFT_INPUT";

     label17:
        return "HIDE_SOFT_INPUT";

     label18:
        return "SHOW_MY_SOFT_INPUT";

     label19:
        return "ATTACH_NEW_INPUT";

     label20:
        return "SHOW_SOFT_INPUT";
    }

    public static java.lang.String softInputModeToString(int)
    {
        int i0, i1, $i2, i3;
        java.util.StringJoiner $r1, $r4;
        java.lang.String $r5, $r14, $r25;
        java.lang.StringBuilder $r10, $r21;
        boolean z0;

        i3 := @parameter0: int;

        $r1 = new java.util.StringJoiner;

        specialinvoke $r1.<java.util.StringJoiner: void <init>(java.lang.CharSequence)>("|");

        i0 = i3 & 15;

        i1 = i3 & 240;

        $i2 = i3 & 256;

        if $i2 == 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        if i0 == 0 goto label08;

        if i0 == 1 goto label07;

        if i0 == 2 goto label06;

        if i0 == 3 goto label05;

        if i0 == 4 goto label04;

        if i0 == 5 goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STATE_UNKNOWN(");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r25);

        goto label09;

     label03:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_ALWAYS_VISIBLE");

        goto label09;

     label04:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_VISIBLE");

        goto label09;

     label05:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_ALWAYS_HIDDEN");

        goto label09;

     label06:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_HIDDEN");

        goto label09;

     label07:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_UNCHANGED");

        goto label09;

     label08:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("STATE_UNSPECIFIED");

     label09:
        if i1 == 0 goto label13;

        if i1 == 16 goto label12;

        if i1 == 32 goto label11;

        if i1 == 48 goto label10;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ADJUST_UNKNOWN(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r14);

        goto label14;

     label10:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("ADJUST_NOTHING");

        goto label14;

     label11:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("ADJUST_PAN");

        goto label14;

     label12:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("ADJUST_RESIZE");

        goto label14;

     label13:
        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("ADJUST_UNSPECIFIED");

     label14:
        if z0 == 0 goto label15;

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("IS_FORWARD_NAVIGATION");

     label15:
        $r4 = virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner setEmptyValue(java.lang.CharSequence)>("(none)");

        $r5 = virtualinvoke $r4.<java.util.StringJoiner: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String startInputFlagsToString(int)
    {
        int i0, $i1, $i2, $i3;
        java.util.StringJoiner $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r1 = new java.util.StringJoiner;

        specialinvoke $r1.<java.util.StringJoiner: void <init>(java.lang.CharSequence)>("|");

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("VIEW_HAS_FOCUS");

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("IS_TEXT_EDITOR");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("INITIAL_CONNECTION");

     label3:
        $r2 = virtualinvoke $r1.<java.util.StringJoiner: java.util.StringJoiner setEmptyValue(java.lang.CharSequence)>("(none)");

        $r3 = virtualinvoke $r2.<java.util.StringJoiner: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String startInputReasonToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label12;
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label05;
            case 8: goto label04;
            case 9: goto label03;
            case 10: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label02:
        return "SESSION_CREATED_BY_IME";

     label03:
        return "DEACTIVATED_BY_IMMS";

     label04:
        return "ACTIVATED_BY_IMMS";

     label05:
        return "UNBOUND_FROM_IMMS";

     label06:
        return "BOUND_TO_IMMS";

     label07:
        return "CHECK_FOCUS";

     label08:
        return "APP_CALLED_RESTART_INPUT_API";

     label09:
        return "WINDOW_FOCUS_GAIN_REPORT_WITHOUT_CONNECTION";

     label10:
        return "WINDOW_FOCUS_GAIN_REPORT_WITH_CONNECTION";

     label11:
        return "WINDOW_FOCUS_GAIN";

     label12:
        return "UNSPECIFIED";
    }

    public static java.lang.String unbindReasonToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label8;
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        return "SWITCH_USER";

     label3:
        return "SWITCH_IME_FAILED";

     label4:
        return "NO_IME";

     label5:
        return "DISCONNECT_IME";

     label6:
        return "SWITCH_IME";

     label7:
        return "SWITCH_CLIENT";

     label8:
        return "UNSPECIFIED";
    }
}
