final class com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder extends java.lang.Object
{
    private com.android.internal.inputmethod.IInputMethodPrivilegedOperations mPrivOps;

    private void <init>()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder r0;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.inputmethod.InputMethodPrivilegedOperations$1)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$1 r1;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder;

        r1 := @parameter0: com.android.internal.inputmethod.InputMethodPrivilegedOperations$1;

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: void <init>()>();

        return;
    }

    private static java.lang.String getCallerMethodName()
    {
        java.lang.StackTraceElement[] r0;
        java.lang.Thread $r1;
        int $i0;
        java.lang.StackTraceElement $r2;
        java.lang.String $r3;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof r0;

        if $i0 > 4 goto label1;

        return "<bottom of call stack>";

     label1:
        $r2 = r0[4];

        $r3 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        return $r3;
    }

    public com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder r0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations $r1, r8;
        java.lang.String $r2, $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations mPrivOps>;

        if $r1 != null goto label2;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: java.lang.String getCallerMethodName()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ignored. Call it within attachToken() and InputMethodService.onDestroy()");

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodPrivilegedOperations", $r5);

     label2:
        r8 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations mPrivOps>;

     label3:
        exitmonitor r0;

        return r8;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void set(com.android.internal.inputmethod.IInputMethodPrivilegedOperations)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder r0;
        java.lang.IllegalStateException r1;
        java.lang.StringBuilder r2;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations $r3, r8;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder;

        r8 := @parameter0: com.android.internal.inputmethod.IInputMethodPrivilegedOperations;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations mPrivOps>;

        if $r3 != null goto label3;

        r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations mPrivOps> = r8;

     label2:
        exitmonitor r0;

        return;

     label3:
        r1 = new java.lang.IllegalStateException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IInputMethodPrivilegedOperations must be set at most once. privOps=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw r1;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }
}
