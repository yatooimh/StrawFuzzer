public final class com.android.internal.inputmethod.InputMethodPrivilegedOperations extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps;

    public void <init>()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder;

        specialinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: void <init>(com.android.internal.inputmethod.InputMethodPrivilegedOperations$1)>(null);

        r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps> = $r1;

        return;
    }

    public void applyImeVisibility(android.os.IBinder, boolean)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        boolean z0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r1 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void applyImeVisibility(android.os.IBinder,boolean)>(r5, z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri, java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        java.lang.String r1;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r2;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r3;
        android.os.RemoteException $r4;
        android.net.Uri r5;
        com.android.internal.inputmethod.IInputContentUriToken r6;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r2 = virtualinvoke $r3.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r2 != null goto label1;

        return null;

     label1:
        r6 = interfaceinvoke r2.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)>(r5, r1);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void hideMySoftInput(int)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        int i0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return;

     label1:
        interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void hideMySoftInput(int)>(i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyUserAction()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return;

     label1:
        interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void notifyUserAction()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportFullscreenMode(boolean)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        boolean z0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return;

     label1:
        interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void reportFullscreenMode(boolean)>(z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportPreRendered(android.view.inputmethod.EditorInfo)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.view.inputmethod.EditorInfo r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r1 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void reportPreRendered(android.view.inputmethod.EditorInfo)>(r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportStartInput(android.os.IBinder)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r1 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void reportStartInput(android.os.IBinder)>(r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void set(com.android.internal.inputmethod.IInputMethodPrivilegedOperations)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r1 := @parameter0: com.android.internal.inputmethod.IInputMethodPrivilegedOperations;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: void set(com.android.internal.inputmethod.IInputMethodPrivilegedOperations)>(r1);

        return;
    }

    public void setImeWindowStatus(int, int)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        int i0, i1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return;

     label1:
        interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void setImeWindowStatus(int,int)>(i0, i1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInputMethod(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r1 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void setInputMethod(java.lang.String)>(r5);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInputMethodAndSubtype(java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r2;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.String r6;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        $r3 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r2 = virtualinvoke $r3.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r2 != null goto label1;

        return;

     label1:
        interfaceinvoke r2.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void setInputMethodAndSubtype(java.lang.String,android.view.inputmethod.InputMethodSubtype)>(r6, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean shouldOfferSwitchingToNextInputMethod()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        boolean z0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: boolean shouldOfferSwitchingToNextInputMethod()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showMySoftInput(int)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        int i0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return;

     label1:
        interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void showMySoftInput(int)>(i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean switchToNextInputMethod(boolean)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        boolean z0, z1;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return 0;

     label1:
        z1 = interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: boolean switchToNextInputMethod(boolean)>(z0);

     label2:
        return z1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean switchToPreviousInputMethod()
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        boolean z0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r4;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r4 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r4 != null goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r4.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: boolean switchToPreviousInputMethod()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateStatusIcon(java.lang.String, int)
    {
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r0;
        int i0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder mOps>;

        r1 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations$OpsHolder: com.android.internal.inputmethod.IInputMethodPrivilegedOperations getAndWarnIfNull()>();

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<com.android.internal.inputmethod.IInputMethodPrivilegedOperations: void updateStatusIcon(java.lang.String,int)>(r5, i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.inputmethod.InputMethodPrivilegedOperations: java.lang.String TAG> = "InputMethodPrivilegedOperations";

        return;
    }
}
