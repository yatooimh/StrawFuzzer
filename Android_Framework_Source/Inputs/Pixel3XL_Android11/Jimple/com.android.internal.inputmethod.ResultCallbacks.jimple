public final class com.android.internal.inputmethod.ResultCallbacks extends java.lang.Object
{

    private void <init>()
    {
        com.android.internal.inputmethod.ResultCallbacks r0;

        r0 := @this: com.android.internal.inputmethod.ResultCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object access$000(java.util.concurrent.atomic.AtomicReference)
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r1 = staticinvoke <com.android.internal.inputmethod.ResultCallbacks: java.lang.Object unwrap(java.util.concurrent.atomic.AtomicReference)>(r0);

        return $r1;
    }

    public static com.android.internal.inputmethod.ICharSequenceResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence r0;
        com.android.internal.inputmethod.ResultCallbacks$2 $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: com.android.internal.inputmethod.CancellationGroup$Completable$CharSequence;

        $r1 = new com.android.internal.inputmethod.ResultCallbacks$2;

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r3);

        specialinvoke $r1.<com.android.internal.inputmethod.ResultCallbacks$2: void <init>(java.util.concurrent.atomic.AtomicReference)>($r2);

        return $r1;
    }

    public static com.android.internal.inputmethod.IExtractedTextResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText r0;
        com.android.internal.inputmethod.ResultCallbacks$3 $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: com.android.internal.inputmethod.CancellationGroup$Completable$ExtractedText;

        $r1 = new com.android.internal.inputmethod.ResultCallbacks$3;

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r3);

        specialinvoke $r1.<com.android.internal.inputmethod.ResultCallbacks$3: void <init>(java.util.concurrent.atomic.AtomicReference)>($r2);

        return $r1;
    }

    public static com.android.internal.inputmethod.IIntResultCallback$Stub of(com.android.internal.inputmethod.CancellationGroup$Completable$Int)
    {
        com.android.internal.inputmethod.CancellationGroup$Completable$Int r0;
        com.android.internal.inputmethod.ResultCallbacks$1 $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @parameter0: com.android.internal.inputmethod.CancellationGroup$Completable$Int;

        $r1 = new com.android.internal.inputmethod.ResultCallbacks$1;

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r3);

        specialinvoke $r1.<com.android.internal.inputmethod.ResultCallbacks$1: void <init>(java.util.concurrent.atomic.AtomicReference)>($r2);

        return $r1;
    }

    private static java.lang.Object unwrap(java.util.concurrent.atomic.AtomicReference)
    {
        java.lang.Object r0, $r1;
        java.util.concurrent.atomic.AtomicReference r2;
        java.lang.ref.WeakReference r3;

        r2 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r1 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r3 = (java.lang.ref.WeakReference) $r1;

        if r3 != null goto label1;

        return null;

     label1:
        r0 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        virtualinvoke r3.<java.lang.ref.WeakReference: void clear()>();

        return r0;
    }
}
