class com.android.internal.location.ILocationProviderManager$Stub$Proxy extends java.lang.Object implements com.android.internal.location.ILocationProviderManager
{
    public static com.android.internal.location.ILocationProviderManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        $r1 = r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        return "com.android.internal.location.ILocationProviderManager";
    }

    public void onReportLocation(android.location.Location) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.location.ILocationProviderManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.Location r7;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        r7 := @parameter0: android.location.Location;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProviderManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.location.Location: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.location.ILocationProviderManager: void onReportLocation(android.location.Location)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onSetAdditionalProviderPackages(java.util.List) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.location.ILocationProviderManager $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        r7 := @parameter0: java.util.List;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProviderManager");

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r7);

        $r3 = r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.location.ILocationProviderManager: void onSetAdditionalProviderPackages(java.util.List)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onSetAllowed(boolean) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        com.android.internal.location.ILocationProviderManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProviderManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        interfaceinvoke $r6.<com.android.internal.location.ILocationProviderManager: void onSetAllowed(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void onSetProperties(com.android.internal.location.ProviderProperties) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProviderManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.location.ILocationProviderManager $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.location.ProviderProperties r7;

        r0 := @this: com.android.internal.location.ILocationProviderManager$Stub$Proxy;

        r7 := @parameter0: com.android.internal.location.ProviderProperties;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProviderManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<com.android.internal.location.ProviderProperties: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<com.android.internal.location.ILocationProviderManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <com.android.internal.location.ILocationProviderManager$Stub: com.android.internal.location.ILocationProviderManager getDefaultImpl()>();

        interfaceinvoke $r5.<com.android.internal.location.ILocationProviderManager: void onSetProperties(com.android.internal.location.ProviderProperties)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
