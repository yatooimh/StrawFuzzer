class com.android.internal.logging.AndroidHandler$1 extends java.util.logging.Formatter
{

    void <init>()
    {
        com.android.internal.logging.AndroidHandler$1 r0;

        r0 := @this: com.android.internal.logging.AndroidHandler$1;

        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        com.android.internal.logging.AndroidHandler$1 r0;
        java.util.logging.LogRecord r1;
        java.lang.Throwable r2;
        java.lang.String $r5, $r8, $r9;
        java.io.StringWriter $r6;
        com.android.internal.util.FastPrintWriter $r7;

        r0 := @this: com.android.internal.logging.AndroidHandler$1;

        r1 := @parameter0: java.util.logging.LogRecord;

        r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        if r2 == null goto label1;

        $r6 = new java.io.StringWriter;

        specialinvoke $r6.<java.io.StringWriter: void <init>()>();

        $r7 = new com.android.internal.util.FastPrintWriter;

        specialinvoke $r7.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r6, 0, 256);

        $r8 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.io.StringWriter: void write(java.lang.String)>($r8);

        virtualinvoke $r6.<java.io.StringWriter: void write(java.lang.String)>("\n");

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r7);

        virtualinvoke $r7.<java.io.PrintWriter: void flush()>();

        $r9 = virtualinvoke $r6.<java.io.StringWriter: java.lang.String toString()>();

        return $r9;

     label1:
        $r5 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        return $r5;
    }
}
