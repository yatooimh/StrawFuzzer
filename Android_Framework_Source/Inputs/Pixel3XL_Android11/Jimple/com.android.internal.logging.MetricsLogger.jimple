public class com.android.internal.logging.MetricsLogger extends java.lang.Object
{
    public static final int LOGTAG;
    public static final int VIEW_UNKNOWN;
    private static com.android.internal.logging.MetricsLogger sMetricsLogger;

    public void <init>()
    {
        com.android.internal.logging.MetricsLogger r0;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void action(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void action(int)>(i0);

        return;
    }

    public static void action(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void action(int,int)>(i0, i1);

        return;
    }

    public static void action(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1;
        com.android.internal.logging.MetricsLogger $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r2.<com.android.internal.logging.MetricsLogger: void action(int,java.lang.String)>(i0, r1);

        return;
    }

    public static void action(android.content.Context, int, boolean)
    {
        android.content.Context r0;
        int i0;
        boolean z0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void action(int,boolean)>(i0, z0);

        return;
    }

    public static void action(android.metrics.LogMaker)
    {
        android.metrics.LogMaker r0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.metrics.LogMaker;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>(r0);

        return;
    }

    public static void count(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        com.android.internal.logging.MetricsLogger $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r2.<com.android.internal.logging.MetricsLogger: void count(java.lang.String,int)>(r1, i0);

        return;
    }

    private static com.android.internal.logging.MetricsLogger getLogger()
    {
        com.android.internal.logging.MetricsLogger $r0, $r1, $r2;

        $r0 = <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger sMetricsLogger>;

        if $r0 != null goto label1;

        $r2 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r2.<com.android.internal.logging.MetricsLogger: void <init>()>();

        <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger sMetricsLogger> = $r2;

     label1:
        $r1 = <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger sMetricsLogger>;

        return $r1;
    }

    public static void hidden(android.content.Context, int) throws java.lang.IllegalArgumentException
    {
        android.content.Context r0;
        int i0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void hidden(int)>(i0);

        return;
    }

    public static void histogram(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        com.android.internal.logging.MetricsLogger $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r2.<com.android.internal.logging.MetricsLogger: void histogram(java.lang.String,int)>(r1, i0);

        return;
    }

    public static void visibility(android.content.Context, int, int) throws java.lang.IllegalArgumentException
    {
        android.content.Context r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.logging.MetricsLogger: void visibility(android.content.Context,int,boolean)>(r0, i0, z0);

        return;
    }

    public static void visibility(android.content.Context, int, boolean) throws java.lang.IllegalArgumentException
    {
        android.content.Context r0;
        int i0;
        boolean z0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void visibility(int,boolean)>(i0, z0);

        return;
    }

    public static void visible(android.content.Context, int) throws java.lang.IllegalArgumentException
    {
        android.content.Context r0;
        int i0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.internal.logging.MetricsLogger: com.android.internal.logging.MetricsLogger getLogger()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void visible(int)>(i0);

        return;
    }

    public void action(int)
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0;
        android.metrics.LogMaker $r1, $r2;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        $r1 = new android.metrics.LogMaker;

        specialinvoke $r1.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r2);

        return;
    }

    public void action(int, int)
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0, i1;
        android.metrics.LogMaker $r1, $r2, $r3;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.metrics.LogMaker;

        specialinvoke $r1.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i1);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r3);

        return;
    }

    public void action(int, java.lang.String)
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0;
        java.lang.String r1;
        boolean $z0;
        android.metrics.LogMaker $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must define metric category");

        throw $r5;

     label2:
        $r2 = new android.metrics.LogMaker;

        specialinvoke $r2.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setPackageName(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r4);

        return;
    }

    public void action(int, boolean)
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0, i1;
        boolean z0;
        android.metrics.LogMaker $r1, $r2, $r3;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new android.metrics.LogMaker;

        specialinvoke $r1.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        i1 = (int) z0;

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i1);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r3);

        return;
    }

    public void count(java.lang.String, int)
    {
        com.android.internal.logging.MetricsLogger r0;
        java.lang.String r1;
        int i0;
        android.metrics.LogMaker $r2, $r3, $r4;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.metrics.LogMaker;

        specialinvoke $r2.<android.metrics.LogMaker: void <init>(int)>(803);

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setCounterName(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setCounterValue(int)>(i0);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r4);

        return;
    }

    public void hidden(int) throws java.lang.IllegalArgumentException
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0;
        boolean $z0;
        android.metrics.LogMaker $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must define metric category");

        throw $r3;

     label2:
        $r1 = new android.metrics.LogMaker;

        specialinvoke $r1.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(2);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r2);

        return;
    }

    public void histogram(java.lang.String, int)
    {
        com.android.internal.logging.MetricsLogger r0;
        java.lang.String r1;
        int i0;
        android.metrics.LogMaker $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.metrics.LogMaker;

        specialinvoke $r2.<android.metrics.LogMaker: void <init>(int)>(804);

        $r3 = virtualinvoke $r2.<android.metrics.LogMaker: android.metrics.LogMaker setCounterName(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<android.metrics.LogMaker: android.metrics.LogMaker setCounterBucket(int)>(i0);

        $r5 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setCounterValue(int)>(1);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r5);

        return;
    }

    protected void saveLog(android.metrics.LogMaker)
    {
        com.android.internal.logging.MetricsLogger r0;
        android.metrics.LogMaker r1;
        java.lang.Object[] $r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        r1 := @parameter0: android.metrics.LogMaker;

        $r2 = virtualinvoke r1.<android.metrics.LogMaker: java.lang.Object[] serialize()>();

        staticinvoke <com.android.internal.logging.EventLogTags: void writeSysuiMultiAction(java.lang.Object[])>($r2);

        $r3 = virtualinvoke r1.<android.metrics.LogMaker: android.util.SparseArray getEntries()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,android.util.SparseArray)>(83, 0, $r3);

        return;
    }

    public void visibility(int, int) throws java.lang.IllegalArgumentException
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void visibility(int,boolean)>(i0, z0);

        return;
    }

    public void visibility(int, boolean) throws java.lang.IllegalArgumentException
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void visible(int)>(i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void hidden(int)>(i0);

     label2:
        return;
    }

    public void visible(int) throws java.lang.IllegalArgumentException
    {
        com.android.internal.logging.MetricsLogger r0;
        int i0;
        boolean $z0;
        android.metrics.LogMaker $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        i0 := @parameter0: int;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must define metric category");

        throw $r3;

     label2:
        $r1 = new android.metrics.LogMaker;

        specialinvoke $r1.<android.metrics.LogMaker: void <init>(int)>(i0);

        $r2 = virtualinvoke $r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(1);

        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>($r2);

        return;
    }

    public void write(android.metrics.LogMaker)
    {
        com.android.internal.logging.MetricsLogger r0;
        android.metrics.LogMaker r1;
        int $i0;

        r0 := @this: com.android.internal.logging.MetricsLogger;

        r1 := @parameter0: android.metrics.LogMaker;

        $i0 = virtualinvoke r1.<android.metrics.LogMaker: int getType()>();

        if $i0 != 0 goto label1;

        virtualinvoke r1.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

     label1:
        virtualinvoke r0.<com.android.internal.logging.MetricsLogger: void saveLog(android.metrics.LogMaker)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.logging.MetricsLogger: int VIEW_UNKNOWN> = 0;

        <com.android.internal.logging.MetricsLogger: int LOGTAG> = 524292;

        return;
    }
}
