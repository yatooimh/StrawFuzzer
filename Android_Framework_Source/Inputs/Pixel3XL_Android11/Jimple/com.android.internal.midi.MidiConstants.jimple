public final class com.android.internal.midi.MidiConstants extends java.lang.Object
{
    public static final int[] CHANNEL_BYTE_LENGTHS;
    public static final byte STATUS_ACTIVE_SENSING;
    public static final byte STATUS_CHANNEL_MASK;
    public static final byte STATUS_CHANNEL_PRESSURE;
    public static final byte STATUS_COMMAND_MASK;
    public static final byte STATUS_CONTINUE;
    public static final byte STATUS_CONTROL_CHANGE;
    public static final byte STATUS_END_SYSEX;
    public static final byte STATUS_MIDI_TIME_CODE;
    public static final byte STATUS_NOTE_OFF;
    public static final byte STATUS_NOTE_ON;
    public static final byte STATUS_PITCH_BEND;
    public static final byte STATUS_POLYPHONIC_AFTERTOUCH;
    public static final byte STATUS_PROGRAM_CHANGE;
    public static final byte STATUS_RESET;
    public static final byte STATUS_SONG_POSITION;
    public static final byte STATUS_SONG_SELECT;
    public static final byte STATUS_START;
    public static final byte STATUS_STOP;
    public static final byte STATUS_SYSTEM_EXCLUSIVE;
    public static final byte STATUS_TIMING_CLOCK;
    public static final byte STATUS_TUNE_REQUEST;
    public static final int[] SYSTEM_BYTE_LENGTHS;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <com.android.internal.midi.MidiConstants: byte STATUS_TUNE_REQUEST> = -10;

        <com.android.internal.midi.MidiConstants: byte STATUS_TIMING_CLOCK> = -8;

        <com.android.internal.midi.MidiConstants: byte STATUS_SYSTEM_EXCLUSIVE> = -16;

        <com.android.internal.midi.MidiConstants: byte STATUS_STOP> = -4;

        <com.android.internal.midi.MidiConstants: byte STATUS_START> = -6;

        <com.android.internal.midi.MidiConstants: byte STATUS_SONG_SELECT> = -13;

        <com.android.internal.midi.MidiConstants: byte STATUS_SONG_POSITION> = -14;

        <com.android.internal.midi.MidiConstants: byte STATUS_RESET> = -1;

        <com.android.internal.midi.MidiConstants: byte STATUS_PROGRAM_CHANGE> = -64;

        <com.android.internal.midi.MidiConstants: byte STATUS_POLYPHONIC_AFTERTOUCH> = -96;

        <com.android.internal.midi.MidiConstants: byte STATUS_PITCH_BEND> = -32;

        <com.android.internal.midi.MidiConstants: byte STATUS_NOTE_ON> = -112;

        <com.android.internal.midi.MidiConstants: byte STATUS_NOTE_OFF> = -128;

        <com.android.internal.midi.MidiConstants: byte STATUS_MIDI_TIME_CODE> = -15;

        <com.android.internal.midi.MidiConstants: byte STATUS_END_SYSEX> = -9;

        <com.android.internal.midi.MidiConstants: byte STATUS_CONTROL_CHANGE> = -80;

        <com.android.internal.midi.MidiConstants: byte STATUS_CONTINUE> = -5;

        <com.android.internal.midi.MidiConstants: byte STATUS_COMMAND_MASK> = -16;

        <com.android.internal.midi.MidiConstants: byte STATUS_CHANNEL_PRESSURE> = -48;

        <com.android.internal.midi.MidiConstants: byte STATUS_CHANNEL_MASK> = 15;

        <com.android.internal.midi.MidiConstants: byte STATUS_ACTIVE_SENSING> = -2;

        $r0 = newarray (int)[7];

        $r0[0] = 3;

        $r0[1] = 3;

        $r0[2] = 3;

        $r0[3] = 3;

        $r0[4] = 2;

        $r0[5] = 2;

        $r0[6] = 3;

        <com.android.internal.midi.MidiConstants: int[] CHANNEL_BYTE_LENGTHS> = $r0;

        $r1 = newarray (int)[16];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r1[6] = 1;

        $r1[7] = 1;

        $r1[8] = 1;

        $r1[9] = 1;

        $r1[10] = 1;

        $r1[11] = 1;

        $r1[12] = 1;

        $r1[13] = 1;

        $r1[14] = 1;

        $r1[15] = 1;

        <com.android.internal.midi.MidiConstants: int[] SYSTEM_BYTE_LENGTHS> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.internal.midi.MidiConstants r0;

        r0 := @this: com.android.internal.midi.MidiConstants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean allowRunningStatus(byte)
    {
        byte b0;
        boolean z0;

        b0 := @parameter0: byte;

        if b0 < -128 goto label1;

        if b0 >= -16 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean cancelsRunningStatus(byte)
    {
        byte b0;
        boolean z0;

        b0 := @parameter0: byte;

        if b0 < -16 goto label1;

        if b0 > -9 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static int getBytesPerMessage(byte)
    {
        short $s0, $s3, s6;
        int $i1, $i2, $i4;
        int[] $r0, $r1;
        byte b5;

        b5 := @parameter0: byte;

        s6 = b5 & 255;

        if s6 < 240 goto label1;

        $r1 = <com.android.internal.midi.MidiConstants: int[] SYSTEM_BYTE_LENGTHS>;

        $s3 = s6 & 15;

        $i4 = $r1[$s3];

        return $i4;

     label1:
        if s6 < 128 goto label2;

        $r0 = <com.android.internal.midi.MidiConstants: int[] CHANNEL_BYTE_LENGTHS>;

        $s0 = s6 >> 4;

        $i1 = $s0 - 8;

        $i2 = $r0[$i1];

        return $i2;

     label2:
        return 0;
    }

    public static boolean isAllActiveSensing(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, i4, i5, i6;
        byte $b3;
        boolean z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 = 0;

        i5 = 0;

     label1:
        if i5 >= i1 goto label3;

        i6 = i4;

        $i2 = i0 + i5;

        $b3 = r0[$i2];

        if $b3 == -2 goto label2;

        i6 = i4 + 1;

     label2:
        i5 = i5 + 1;

        i4 = i6;

        goto label1;

     label3:
        if i4 != 0 goto label4;

        z0 = 1;

        goto label5;

     label4:
        z0 = 0;

     label5:
        return z0;
    }
}
