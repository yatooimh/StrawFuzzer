public final class com.android.internal.net.VpnProfile extends java.lang.Object implements java.lang.Cloneable, android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String ENCODED_NULL_PROXY_INFO;
    static final java.lang.String LIST_DELIMITER;
    public static final int PROXY_MANUAL;
    public static final int PROXY_NONE;
    private static final java.lang.String TAG;
    public static final int TYPE_IKEV2_IPSEC_PSK;
    public static final int TYPE_IKEV2_IPSEC_RSA;
    public static final int TYPE_IKEV2_IPSEC_USER_PASS;
    public static final int TYPE_IPSEC_HYBRID_RSA;
    public static final int TYPE_IPSEC_XAUTH_PSK;
    public static final int TYPE_IPSEC_XAUTH_RSA;
    public static final int TYPE_L2TP_IPSEC_PSK;
    public static final int TYPE_L2TP_IPSEC_RSA;
    public static final int TYPE_MAX;
    public static final int TYPE_PPTP;
    static final java.lang.String VALUE_DELIMITER;
    public boolean areAuthParamsInline;
    public java.lang.String dnsServers;
    public java.lang.String ipsecCaCert;
    public java.lang.String ipsecIdentifier;
    public java.lang.String ipsecSecret;
    public java.lang.String ipsecServerCert;
    public java.lang.String ipsecUserCert;
    public boolean isBypassable;
    public boolean isMetered;
    public final boolean isRestrictedToTestNetworks;
    public final java.lang.String key;
    public java.lang.String l2tpSecret;
    private java.util.List mAllowedAlgorithms;
    public int maxMtu;
    public boolean mppe;
    public java.lang.String name;
    public java.lang.String password;
    public android.net.ProxyInfo proxy;
    public java.lang.String routes;
    public transient boolean saveLogin;
    public java.lang.String searchDomains;
    public java.lang.String server;
    public int type;
    public java.lang.String username;

    static void <clinit>()
    {
        com.android.internal.net.VpnProfile$1 $r0;

        <com.android.internal.net.VpnProfile: java.lang.String VALUE_DELIMITER> = "\u0000";

        <com.android.internal.net.VpnProfile: int TYPE_PPTP> = 0;

        <com.android.internal.net.VpnProfile: int TYPE_MAX> = 8;

        <com.android.internal.net.VpnProfile: int TYPE_L2TP_IPSEC_RSA> = 2;

        <com.android.internal.net.VpnProfile: int TYPE_L2TP_IPSEC_PSK> = 1;

        <com.android.internal.net.VpnProfile: int TYPE_IPSEC_XAUTH_RSA> = 4;

        <com.android.internal.net.VpnProfile: int TYPE_IPSEC_XAUTH_PSK> = 3;

        <com.android.internal.net.VpnProfile: int TYPE_IPSEC_HYBRID_RSA> = 5;

        <com.android.internal.net.VpnProfile: int TYPE_IKEV2_IPSEC_USER_PASS> = 6;

        <com.android.internal.net.VpnProfile: int TYPE_IKEV2_IPSEC_RSA> = 8;

        <com.android.internal.net.VpnProfile: int TYPE_IKEV2_IPSEC_PSK> = 7;

        <com.android.internal.net.VpnProfile: java.lang.String TAG> = "VpnProfile";

        <com.android.internal.net.VpnProfile: int PROXY_NONE> = 0;

        <com.android.internal.net.VpnProfile: int PROXY_MANUAL> = 1;

        <com.android.internal.net.VpnProfile: java.lang.String LIST_DELIMITER> = ",";

        <com.android.internal.net.VpnProfile: java.lang.String ENCODED_NULL_PROXY_INFO> = "\u0000\u0000\u0000\u0000";

        $r0 = new com.android.internal.net.VpnProfile$1;

        specialinvoke $r0.<com.android.internal.net.VpnProfile$1: void <init>()>();

        <com.android.internal.net.VpnProfile: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.net.VpnProfile r0;
        android.os.Parcel r1;
        java.util.ArrayList $r3, $r20;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3;
        android.os.Parcelable $r18;
        android.net.ProxyInfo $r19;
        boolean $z1, $z2, $z3, $z4, z5, z6;

        r0 := @this: com.android.internal.net.VpnProfile;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String name> = "";

        r0.<com.android.internal.net.VpnProfile: int type> = 0;

        r0.<com.android.internal.net.VpnProfile: java.lang.String server> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String username> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String password> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String routes> = "";

        r0.<com.android.internal.net.VpnProfile: boolean mppe> = 1;

        r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert> = "";

        r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms> = $r3;

        r0.<com.android.internal.net.VpnProfile: boolean isBypassable> = 0;

        r0.<com.android.internal.net.VpnProfile: boolean isMetered> = 0;

        r0.<com.android.internal.net.VpnProfile: int maxMtu> = 1360;

        r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline> = 0;

        r0.<com.android.internal.net.VpnProfile: boolean saveLogin> = 0;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String key> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String name> = $r5;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.net.VpnProfile: int type> = $i0;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String server> = $r6;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String username> = $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String password> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers> = $r9;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String routes> = $r11;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        r0.<com.android.internal.net.VpnProfile: boolean mppe> = z5;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier> = $r13;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret> = $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert> = $r15;

        $r16 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert> = $r16;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert> = $r17;

        z6 = 0;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        z6 = 1;

     label3:
        r0.<com.android.internal.net.VpnProfile: boolean saveLogin> = z6;

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r19 = (android.net.ProxyInfo) $r18;

        r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms> = $r20;

        virtualinvoke r1.<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>($r20, null);

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<com.android.internal.net.VpnProfile: boolean isBypassable> = $z1;

        $z2 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<com.android.internal.net.VpnProfile: boolean isMetered> = $z2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.net.VpnProfile: int maxMtu> = $i3;

        $z3 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline> = $z3;

        $z4 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks> = $z4;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.internal.net.VpnProfile r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.net.VpnProfile;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.net.VpnProfile: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        com.android.internal.net.VpnProfile r0;
        java.lang.String r1;
        boolean z0;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.net.VpnProfile;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.net.VpnProfile: java.lang.String name> = "";

        r0.<com.android.internal.net.VpnProfile: int type> = 0;

        r0.<com.android.internal.net.VpnProfile: java.lang.String server> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String username> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String password> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String routes> = "";

        r0.<com.android.internal.net.VpnProfile: boolean mppe> = 1;

        r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert> = "";

        r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert> = "";

        r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy> = null;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms> = $r2;

        r0.<com.android.internal.net.VpnProfile: boolean isBypassable> = 0;

        r0.<com.android.internal.net.VpnProfile: boolean isMetered> = 0;

        r0.<com.android.internal.net.VpnProfile: int maxMtu> = 1360;

        r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline> = 0;

        r0.<com.android.internal.net.VpnProfile: boolean saveLogin> = 0;

        r0.<com.android.internal.net.VpnProfile: java.lang.String key> = r1;

        r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks> = z0;

        return;
    }

    public static com.android.internal.net.VpnProfile decode(java.lang.String, byte[])
    {
        java.lang.String[] r0, $r20;
        com.android.internal.net.VpnProfile r1;
        java.nio.charset.Charset $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, $i14;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, r28, r30, r31, r32, r33, r34, r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, $z12;
        java.util.List $r21;
        java.lang.Exception $r27;
        byte[] r29;
        android.net.ProxyInfo r36, r37;

        r28 := @parameter0: java.lang.String;

        r29 := @parameter1: byte[];

        if r28 != null goto label01;

        return null;

     label01:
        r30 = new java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r30.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r29, $r2);

        r0 = virtualinvoke r30.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\u0000", -1);

        $i0 = lengthof r0;

        if $i0 < 14 goto label02;

        $i9 = lengthof r0;

        if $i9 <= 19 goto label04;

     label02:
        $i1 = lengthof r0;

        if $i1 == 24 goto label04;

        $i8 = lengthof r0;

        if $i8 == 25 goto label04;

     label03:
        return null;

     label04:
        $i10 = lengthof r0;

        if $i10 < 25 goto label06;

        $r26 = r0[24];

        z10 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r26);

     label05:
        goto label07;

     label06:
        z10 = 0;

     label07:
        r1 = new com.android.internal.net.VpnProfile;

        specialinvoke r1.<com.android.internal.net.VpnProfile: void <init>(java.lang.String,boolean)>(r28, z10);

     label08:
        z11 = 0;

     label09:
        $r3 = r0[0];

        r1.<com.android.internal.net.VpnProfile: java.lang.String name> = $r3;

        $r4 = r0[1];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r1.<com.android.internal.net.VpnProfile: int type> = i11;

     label10:
        if i11 < 0 goto label39;

        if i11 <= 8 goto label11;

        goto label39;

     label11:
        $r5 = r0[2];

        r1.<com.android.internal.net.VpnProfile: java.lang.String server> = $r5;

        $r6 = r0[3];

        r1.<com.android.internal.net.VpnProfile: java.lang.String username> = $r6;

        $r7 = r0[4];

        r1.<com.android.internal.net.VpnProfile: java.lang.String password> = $r7;

        $r8 = r0[5];

        r1.<com.android.internal.net.VpnProfile: java.lang.String dnsServers> = $r8;

        $r9 = r0[6];

        r1.<com.android.internal.net.VpnProfile: java.lang.String searchDomains> = $r9;

        $r10 = r0[7];

        r1.<com.android.internal.net.VpnProfile: java.lang.String routes> = $r10;

        $r11 = r0[8];

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11);

        r1.<com.android.internal.net.VpnProfile: boolean mppe> = $z0;

        $r12 = r0[9];

        r1.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret> = $r12;

        $r13 = r0[10];

        r1.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier> = $r13;

        $r14 = r0[11];

        r1.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret> = $r14;

        $r15 = r0[12];

        r1.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert> = $r15;

        $r16 = r0[13];

        r1.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert> = $r16;

        i12 = lengthof r0;

     label12:
        r31 = "";

        if i12 <= 14 goto label13;

        r32 = r0[14];

        goto label14;

     label13:
        r32 = "";

     label14:
        r1.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert> = r32;

        $i2 = lengthof r0;

        if $i2 <= 15 goto label33;

        $i4 = lengthof r0;

        if $i4 <= 15 goto label16;

     label15:
        r33 = r0[15];

        goto label17;

     label16:
        r33 = "";

     label17:
        $i5 = lengthof r0;

        if $i5 <= 16 goto label19;

     label18:
        r34 = r0[16];

        goto label20;

     label19:
        r34 = "";

     label20:
        $i6 = lengthof r0;

        if $i6 <= 17 goto label22;

     label21:
        r35 = r0[17];

        goto label23;

     label22:
        r35 = "";

     label23:
        $i7 = lengthof r0;

        if $i7 <= 18 goto label25;

     label24:
        r31 = r0[18];

     label25:
        $z6 = virtualinvoke r33.<java.lang.String: boolean isEmpty()>();

        if $z6 == 0 goto label29;

        $z7 = virtualinvoke r34.<java.lang.String: boolean isEmpty()>();

        if $z7 == 0 goto label29;

        $z8 = virtualinvoke r35.<java.lang.String: boolean isEmpty()>();

        if $z8 != 0 goto label27;

     label26:
        goto label29;

     label27:
        $z9 = virtualinvoke r31.<java.lang.String: boolean isEmpty()>();

        if $z9 != 0 goto label33;

        r36 = new android.net.ProxyInfo;

        specialinvoke r36.<android.net.ProxyInfo: void <init>(java.lang.String)>(r31);

        r1.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy> = r36;

     label28:
        goto label33;

     label29:
        r37 = new android.net.ProxyInfo;

        $z12 = virtualinvoke r34.<java.lang.String: boolean isEmpty()>();

        if $z12 == 0 goto label31;

     label30:
        i13 = 0;

        goto label32;

     label31:
        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r34);

     label32:
        specialinvoke r37.<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>(r33, i13, r35);

        r1.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy> = r37;

     label33:
        $i14 = lengthof r0;

        if $i14 < 24 goto label34;

        $r19 = r0[19];

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20);

        r1.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms> = $r21;

        $r22 = r0[20];

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r22);

        r1.<com.android.internal.net.VpnProfile: boolean isBypassable> = $z3;

        $r23 = r0[21];

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r23);

        r1.<com.android.internal.net.VpnProfile: boolean isMetered> = $z4;

        $r24 = r0[22];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        r1.<com.android.internal.net.VpnProfile: int maxMtu> = $i3;

        $r25 = r0[23];

        $z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r25);

        r1.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline> = $z5;

     label34:
        $r17 = r1.<com.android.internal.net.VpnProfile: java.lang.String username>;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label36;

     label35:
        $r18 = r1.<com.android.internal.net.VpnProfile: java.lang.String password>;

        $z2 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label37;

     label36:
        z11 = 1;

     label37:
        r1.<com.android.internal.net.VpnProfile: boolean saveLogin> = z11;

     label38:
        return r1;

     label39:
        return null;

     label40:
        $r27 := @caughtexception;

        return null;

        catch java.lang.Exception from label01 to label02 with label40;
        catch java.lang.Exception from label02 to label03 with label40;
        catch java.lang.Exception from label04 to label05 with label40;
        catch java.lang.Exception from label07 to label08 with label40;
        catch java.lang.Exception from label09 to label10 with label40;
        catch java.lang.Exception from label11 to label12 with label40;
        catch java.lang.Exception from label14 to label15 with label40;
        catch java.lang.Exception from label17 to label18 with label40;
        catch java.lang.Exception from label20 to label21 with label40;
        catch java.lang.Exception from label23 to label24 with label40;
        catch java.lang.Exception from label25 to label26 with label40;
        catch java.lang.Exception from label27 to label28 with label40;
        catch java.lang.Exception from label29 to label30 with label40;
        catch java.lang.Exception from label31 to label32 with label40;
        catch java.lang.Exception from label32 to label33 with label40;
        catch java.lang.Exception from label33 to label34 with label40;
        catch java.lang.Exception from label34 to label35 with label40;
        catch java.lang.Exception from label35 to label36 with label40;
        catch java.lang.Exception from label37 to label38 with label40;
    }

    public static boolean isLegacyType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 6 goto label1;

        if i0 == 7 goto label1;

        if i0 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isValidLockdownLegacyVpnProfile()
    {
        com.android.internal.net.VpnProfile r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: com.android.internal.net.VpnProfile;

        $i0 = r0.<com.android.internal.net.VpnProfile: int type>;

        $z0 = staticinvoke <com.android.internal.net.VpnProfile: boolean isLegacyType(int)>($i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.net.VpnProfile: boolean isServerAddressNumeric()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.android.internal.net.VpnProfile: boolean hasDns()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r0.<com.android.internal.net.VpnProfile: boolean areDnsAddressesNumeric()>();

        if $z3 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    private boolean isValidLockdownPlatformVpnProfile()
    {
        com.android.internal.net.VpnProfile r0;
        boolean $z0;

        r0 := @this: com.android.internal.net.VpnProfile;

        $z0 = staticinvoke <android.net.Ikev2VpnProfile: boolean isValidVpnProfile(com.android.internal.net.VpnProfile)>(r0);

        return $z0;
    }

    public static void validateAllowedAlgorithms(java.util.List)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.List r3;
        java.util.Iterator r4;

        r3 := @parameter0: java.util.List;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r0 = (java.lang.String) $r1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\u0000");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z2 != 0 goto label2;

        goto label1;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Algorithm contained illegal (\'\u0000\' or \',\') character");

        throw $r2;

     label3:
        return;
    }

    public boolean areDnsAddressesNumeric()
    {
        com.android.internal.net.VpnProfile r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        java.lang.Throwable $r4;
        java.lang.String[] r5;

        r0 := @this: com.android.internal.net.VpnProfile;

     label1:
        $r1 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" +");

        i0 = lengthof r5;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

     label4:
        $r2 = r5[i1];

        staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>($r2);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return 1;

     label7:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
    }

    public int describeContents()
    {
        com.android.internal.net.VpnProfile r0;

        r0 := @this: com.android.internal.net.VpnProfile;

        return 0;
    }

    public byte[] encode()
    {
        com.android.internal.net.VpnProfile r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r8, $r15, $r18, $r21, $r26, $r29, $r32, $r35, $r38, $r41, $r47, $r59, $r64, $r71, $r76, r80, r81, r82, r83;
        int $i0, $i1, $i2;
        android.net.ProxyInfo $r43, $r63, $r67, $r70, $r74, $r78, $r79;
        java.util.List $r46;
        java.nio.charset.Charset $r60;
        byte[] $r61;
        android.net.Uri $r75;

        r0 := @this: com.android.internal.net.VpnProfile;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<com.android.internal.net.VpnProfile: java.lang.String name>;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $i0 = r0.<com.android.internal.net.VpnProfile: int type>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r8 = r0.<com.android.internal.net.VpnProfile: java.lang.String server>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        z0 = r0.<com.android.internal.net.VpnProfile: boolean saveLogin>;

        if z0 == 0 goto label01;

        r80 = r0.<com.android.internal.net.VpnProfile: java.lang.String username>;

        goto label02;

     label01:
        r80 = "";

     label02:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z1 = r0.<com.android.internal.net.VpnProfile: boolean saveLogin>;

        if $z1 == 0 goto label03;

        r81 = r0.<com.android.internal.net.VpnProfile: java.lang.String password>;

        goto label04;

     label03:
        r81 = "";

     label04:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r81);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r15 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r18 = r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r21 = r0.<com.android.internal.net.VpnProfile: java.lang.String routes>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z2 = r0.<com.android.internal.net.VpnProfile: boolean mppe>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r26 = r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r29 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r32 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r35 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r38 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r41 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        if $r43 == null goto label09;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r63 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $r64 = virtualinvoke $r63.<android.net.ProxyInfo: java.lang.String getHost()>();

        if $r64 == null goto label05;

        $r79 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        r82 = virtualinvoke $r79.<android.net.ProxyInfo: java.lang.String getHost()>();

        goto label06;

     label05:
        r82 = "";

     label06:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r67 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $i2 = virtualinvoke $r67.<android.net.ProxyInfo: int getPort()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r70 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $r71 = virtualinvoke $r70.<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>();

        if $r71 == null goto label07;

        $r78 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        r83 = virtualinvoke $r78.<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>();

        goto label08;

     label07:
        r83 = "";

     label08:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r74 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $r75 = virtualinvoke $r74.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $r76 = virtualinvoke $r75.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        goto label10;

     label09:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000\u0000\u0000\u0000");

     label10:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r46 = r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        $r47 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z3 = r0.<com.android.internal.net.VpnProfile: boolean isBypassable>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z4 = r0.<com.android.internal.net.VpnProfile: boolean isMetered>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $i1 = r0.<com.android.internal.net.VpnProfile: int maxMtu>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z5 = r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $z6 = r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r59 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r61 = virtualinvoke $r59.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r60);

        return $r61;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.internal.net.VpnProfile r0, r34;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, z27;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        int $i0, $i1, $i2, $i3;
        android.net.ProxyInfo $r29, $r30;
        java.util.List $r31, $r32;
        java.lang.Object r33;

        r0 := @this: com.android.internal.net.VpnProfile;

        r33 := @parameter0: java.lang.Object;

        z0 = r33 instanceof com.android.internal.net.VpnProfile;

        z27 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r34 = (com.android.internal.net.VpnProfile) r33;

        $r2 = r0.<com.android.internal.net.VpnProfile: java.lang.String key>;

        $r1 = r34.<com.android.internal.net.VpnProfile: java.lang.String key>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.internal.net.VpnProfile: java.lang.String name>;

        $r3 = r34.<com.android.internal.net.VpnProfile: java.lang.String name>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label2;

        $i1 = r0.<com.android.internal.net.VpnProfile: int type>;

        $i0 = r34.<com.android.internal.net.VpnProfile: int type>;

        if $i1 != $i0 goto label2;

        $r6 = r0.<com.android.internal.net.VpnProfile: java.lang.String server>;

        $r5 = r34.<com.android.internal.net.VpnProfile: java.lang.String server>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 == 0 goto label2;

        $r8 = r0.<com.android.internal.net.VpnProfile: java.lang.String username>;

        $r7 = r34.<com.android.internal.net.VpnProfile: java.lang.String username>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z4 == 0 goto label2;

        $r10 = r0.<com.android.internal.net.VpnProfile: java.lang.String password>;

        $r9 = r34.<com.android.internal.net.VpnProfile: java.lang.String password>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z5 == 0 goto label2;

        $r12 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        $r11 = r34.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z6 == 0 goto label2;

        $r14 = r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains>;

        $r13 = r34.<com.android.internal.net.VpnProfile: java.lang.String searchDomains>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z7 == 0 goto label2;

        $r16 = r0.<com.android.internal.net.VpnProfile: java.lang.String routes>;

        $r15 = r34.<com.android.internal.net.VpnProfile: java.lang.String routes>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z8 == 0 goto label2;

        $z10 = r0.<com.android.internal.net.VpnProfile: boolean mppe>;

        $z9 = r34.<com.android.internal.net.VpnProfile: boolean mppe>;

        if $z10 != $z9 goto label2;

        $r18 = r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret>;

        $r17 = r34.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret>;

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r18, $r17);

        if $z11 == 0 goto label2;

        $r20 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier>;

        $r19 = r34.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier>;

        $z12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r20, $r19);

        if $z12 == 0 goto label2;

        $r22 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret>;

        $r21 = r34.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret>;

        $z13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z13 == 0 goto label2;

        $r24 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert>;

        $r23 = r34.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert>;

        $z14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r24, $r23);

        if $z14 == 0 goto label2;

        $r26 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert>;

        $r25 = r34.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert>;

        $z15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r26, $r25);

        if $z15 == 0 goto label2;

        $r28 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert>;

        $r27 = r34.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert>;

        $z16 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r28, $r27);

        if $z16 == 0 goto label2;

        $r30 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $r29 = r34.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $z17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r30, $r29);

        if $z17 == 0 goto label2;

        $r32 = r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        $r31 = r34.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        $z18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r32, $r31);

        if $z18 == 0 goto label2;

        $z20 = r0.<com.android.internal.net.VpnProfile: boolean isBypassable>;

        $z19 = r34.<com.android.internal.net.VpnProfile: boolean isBypassable>;

        if $z20 != $z19 goto label2;

        $z22 = r0.<com.android.internal.net.VpnProfile: boolean isMetered>;

        $z21 = r34.<com.android.internal.net.VpnProfile: boolean isMetered>;

        if $z22 != $z21 goto label2;

        $i3 = r0.<com.android.internal.net.VpnProfile: int maxMtu>;

        $i2 = r34.<com.android.internal.net.VpnProfile: int maxMtu>;

        if $i3 != $i2 goto label2;

        $z24 = r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline>;

        $z23 = r34.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline>;

        if $z24 != $z23 goto label2;

        $z26 = r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks>;

        $z25 = r34.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks>;

        if $z26 != $z25 goto label2;

        z27 = 1;

        goto label2;

     label2:
        return z27;
    }

    public java.util.List getAllowedAlgorithms()
    {
        com.android.internal.net.VpnProfile r0;
        java.util.List $r1, $r2;

        r0 := @this: com.android.internal.net.VpnProfile;

        $r1 = r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean hasDns()
    {
        com.android.internal.net.VpnProfile r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.net.VpnProfile;

        $r1 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public int hashCode()
    {
        com.android.internal.net.VpnProfile r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean $r10, $r19, $r20, $r22, $r23;
        android.net.ProxyInfo $r17;
        java.util.List $r18;

        r0 := @this: com.android.internal.net.VpnProfile;

        $r1 = newarray (java.lang.Object)[22];

        $r2 = r0.<com.android.internal.net.VpnProfile: java.lang.String key>;

        $r1[0] = $r2;

        $i0 = r0.<com.android.internal.net.VpnProfile: int type>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r4 = r0.<com.android.internal.net.VpnProfile: java.lang.String server>;

        $r1[2] = $r4;

        $r5 = r0.<com.android.internal.net.VpnProfile: java.lang.String username>;

        $r1[3] = $r5;

        $r6 = r0.<com.android.internal.net.VpnProfile: java.lang.String password>;

        $r1[4] = $r6;

        $r7 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        $r1[5] = $r7;

        $r8 = r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains>;

        $r1[6] = $r8;

        $r9 = r0.<com.android.internal.net.VpnProfile: java.lang.String routes>;

        $r1[7] = $r9;

        $z0 = r0.<com.android.internal.net.VpnProfile: boolean mppe>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[8] = $r10;

        $r11 = r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret>;

        $r1[9] = $r11;

        $r12 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier>;

        $r1[10] = $r12;

        $r13 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret>;

        $r1[11] = $r13;

        $r14 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert>;

        $r1[12] = $r14;

        $r15 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert>;

        $r1[13] = $r15;

        $r16 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert>;

        $r1[14] = $r16;

        $r17 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        $r1[15] = $r17;

        $r18 = r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        $r1[16] = $r18;

        $z1 = r0.<com.android.internal.net.VpnProfile: boolean isBypassable>;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[17] = $r19;

        $z2 = r0.<com.android.internal.net.VpnProfile: boolean isMetered>;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[18] = $r20;

        $i1 = r0.<com.android.internal.net.VpnProfile: int maxMtu>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[19] = $r21;

        $z3 = r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline>;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r1[20] = $r22;

        $z4 = r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks>;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r1[21] = $r23;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean isServerAddressNumeric()
    {
        com.android.internal.net.VpnProfile r0;
        java.lang.String $r2;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.net.VpnProfile;

     label1:
        $r2 = r0.<com.android.internal.net.VpnProfile: java.lang.String server>;

        staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>($r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean isTypeValidForLockdown()
    {
        com.android.internal.net.VpnProfile r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.net.VpnProfile;

        $i0 = r0.<com.android.internal.net.VpnProfile: int type>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isValidLockdownProfile()
    {
        com.android.internal.net.VpnProfile r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.internal.net.VpnProfile;

        $z0 = virtualinvoke r0.<com.android.internal.net.VpnProfile: boolean isTypeValidForLockdown()>();

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<com.android.internal.net.VpnProfile: boolean isValidLockdownLegacyVpnProfile()>();

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.internal.net.VpnProfile: boolean isValidLockdownPlatformVpnProfile()>();

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public void setAllowedAlgorithms(java.util.List)
    {
        com.android.internal.net.VpnProfile r0;
        java.util.List r1;

        r0 := @this: com.android.internal.net.VpnProfile;

        r1 := @parameter0: java.util.List;

        staticinvoke <com.android.internal.net.VpnProfile: void validateAllowedAlgorithms(java.util.List)>(r1);

        r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms> = r1;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.net.VpnProfile r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, i3, i4;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.net.ProxyInfo $r16;
        java.util.List $r17;

        r0 := @this: com.android.internal.net.VpnProfile;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.net.VpnProfile: java.lang.String key>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<com.android.internal.net.VpnProfile: java.lang.String name>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i1 = r0.<com.android.internal.net.VpnProfile: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = r0.<com.android.internal.net.VpnProfile: java.lang.String server>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.net.VpnProfile: java.lang.String username>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<com.android.internal.net.VpnProfile: java.lang.String password>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.net.VpnProfile: java.lang.String dnsServers>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.net.VpnProfile: java.lang.String searchDomains>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $r9 = r0.<com.android.internal.net.VpnProfile: java.lang.String routes>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $z0 = r0.<com.android.internal.net.VpnProfile: boolean mppe>;

        i3 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        $r10 = r0.<com.android.internal.net.VpnProfile: java.lang.String l2tpSecret>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecIdentifier>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        $r12 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecSecret>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r12);

        $r13 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecUserCert>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        $r14 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecCaCert>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r14);

        $r15 = r0.<com.android.internal.net.VpnProfile: java.lang.String ipsecServerCert>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        $z1 = r0.<com.android.internal.net.VpnProfile: boolean saveLogin>;

        i4 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        $r16 = r0.<com.android.internal.net.VpnProfile: android.net.ProxyInfo proxy>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r16, i0);

        $r17 = r0.<com.android.internal.net.VpnProfile: java.util.List mAllowedAlgorithms>;

        virtualinvoke r1.<android.os.Parcel: void writeList(java.util.List)>($r17);

        $z2 = r0.<com.android.internal.net.VpnProfile: boolean isBypassable>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $z3 = r0.<com.android.internal.net.VpnProfile: boolean isMetered>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $i2 = r0.<com.android.internal.net.VpnProfile: int maxMtu>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $z4 = r0.<com.android.internal.net.VpnProfile: boolean areAuthParamsInline>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        $z5 = r0.<com.android.internal.net.VpnProfile: boolean isRestrictedToTestNetworks>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z5);

        return;
    }
}
