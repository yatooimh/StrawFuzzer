public abstract class com.android.internal.os.BaseCommand extends java.lang.Object
{
    public static final java.lang.String FATAL_ERROR_CODE;
    public static final java.lang.String NO_CLASS_ERROR_CODE;
    public static final java.lang.String NO_SYSTEM_ERROR_CODE;
    protected final android.os.BasicShellCommandHandler mArgs;
    private java.lang.String[] mRawArgs;

    public void <init>()
    {
        com.android.internal.os.BaseCommand r0;
        com.android.internal.os.BaseCommand$1 $r1;

        r0 := @this: com.android.internal.os.BaseCommand;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.os.BaseCommand$1;

        specialinvoke $r1.<com.android.internal.os.BaseCommand$1: void <init>(com.android.internal.os.BaseCommand)>(r0);

        r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs> = $r1;

        return;
    }

    public java.lang.String[] getRawArgs()
    {
        com.android.internal.os.BaseCommand r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = r0.<com.android.internal.os.BaseCommand: java.lang.String[] mRawArgs>;

        return $r1;
    }

    public java.lang.String nextArg()
    {
        com.android.internal.os.BaseCommand r0;
        android.os.BasicShellCommandHandler $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs>;

        $r2 = virtualinvoke $r1.<android.os.BasicShellCommandHandler: java.lang.String getNextArg()>();

        return $r2;
    }

    public java.lang.String nextArgRequired()
    {
        com.android.internal.os.BaseCommand r0;
        android.os.BasicShellCommandHandler $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs>;

        $r2 = virtualinvoke $r1.<android.os.BasicShellCommandHandler: java.lang.String getNextArgRequired()>();

        return $r2;
    }

    public java.lang.String nextOption()
    {
        com.android.internal.os.BaseCommand r0;
        android.os.BasicShellCommandHandler $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs>;

        $r2 = virtualinvoke $r1.<android.os.BasicShellCommandHandler: java.lang.String getNextOption()>();

        return $r2;
    }

    public abstract void onRun() throws java.lang.Exception;

    public abstract void onShowUsage(java.io.PrintStream);

    public java.lang.String peekNextArg()
    {
        com.android.internal.os.BaseCommand r0;
        android.os.BasicShellCommandHandler $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs>;

        $r2 = virtualinvoke $r1.<android.os.BasicShellCommandHandler: java.lang.String peekNextArg()>();

        return $r2;
    }

    public void run(java.lang.String[])
    {
        com.android.internal.os.BaseCommand r0;
        java.io.PrintStream r2, $r4, $r6, $r8, $r9;
        int $i0;
        android.os.BasicShellCommandHandler $r3;
        java.lang.Exception $r5;
        java.lang.Throwable $r7;
        java.lang.String $r12, $r14;
        java.lang.String[] r15;
        java.lang.StringBuilder r18;
        java.lang.IllegalArgumentException r19;

        r0 := @this: com.android.internal.os.BaseCommand;

        r15 := @parameter0: java.lang.String[];

        $i0 = lengthof r15;

        if $i0 >= 1 goto label1;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r0.<com.android.internal.os.BaseCommand: void onShowUsage(java.io.PrintStream)>($r4);

        return;

     label1:
        r0.<com.android.internal.os.BaseCommand: java.lang.String[] mRawArgs> = r15;

        $r3 = r0.<com.android.internal.os.BaseCommand: android.os.BasicShellCommandHandler mArgs>;

        virtualinvoke $r3.<android.os.BasicShellCommandHandler: void init(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],int)>(null, null, null, null, r15, 0);

     label2:
        virtualinvoke r0.<com.android.internal.os.BaseCommand: void onRun()>();

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r6);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<com.android.internal.os.BaseCommand: void onShowUsage(java.io.PrintStream)>($r8);

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println()>();

        r2 = <java.lang.System: java.io.PrintStream err>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        r19 = (java.lang.IllegalArgumentException) $r7;

        $r12 = virtualinvoke r19.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r14);

        goto label3;

     label6:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void showError(java.lang.String)
    {
        com.android.internal.os.BaseCommand r0;
        java.lang.String r1;
        java.io.PrintStream $r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BaseCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<com.android.internal.os.BaseCommand: void onShowUsage(java.io.PrintStream)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println()>();

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }

    public void showUsage()
    {
        com.android.internal.os.BaseCommand r0;
        java.io.PrintStream $r1;

        r0 := @this: com.android.internal.os.BaseCommand;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<com.android.internal.os.BaseCommand: void onShowUsage(java.io.PrintStream)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.BaseCommand: java.lang.String NO_SYSTEM_ERROR_CODE> = "Error type 2";

        <com.android.internal.os.BaseCommand: java.lang.String NO_CLASS_ERROR_CODE> = "Error type 3";

        <com.android.internal.os.BaseCommand: java.lang.String FATAL_ERROR_CODE> = "Error type 1";

        return;
    }
}
