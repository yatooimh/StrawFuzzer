public final class com.android.internal.os.BatteryStatsImpl$Constants extends android.database.ContentObserver
{
    private static final int DEFAULT_BATTERY_CHARGED_DELAY_MS;
    private static final long DEFAULT_BATTERY_LEVEL_COLLECTION_DELAY_MS;
    private static final long DEFAULT_EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS;
    private static final long DEFAULT_KERNEL_UID_READERS_THROTTLE_TIME;
    private static final int DEFAULT_MAX_HISTORY_BUFFER_KB;
    private static final int DEFAULT_MAX_HISTORY_BUFFER_LOW_RAM_DEVICE_KB;
    private static final int DEFAULT_MAX_HISTORY_FILES;
    private static final int DEFAULT_MAX_HISTORY_FILES_LOW_RAM_DEVICE;
    private static final long DEFAULT_PROC_STATE_CPU_TIMES_READ_DELAY_MS;
    private static final boolean DEFAULT_TRACK_CPU_ACTIVE_CLUSTER_TIME;
    private static final boolean DEFAULT_TRACK_CPU_TIMES_BY_PROC_STATE;
    private static final long DEFAULT_UID_REMOVE_DELAY_MS;
    public static final java.lang.String KEY_BATTERY_CHARGED_DELAY_MS;
    public static final java.lang.String KEY_BATTERY_LEVEL_COLLECTION_DELAY_MS;
    public static final java.lang.String KEY_EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS;
    public static final java.lang.String KEY_KERNEL_UID_READERS_THROTTLE_TIME;
    public static final java.lang.String KEY_MAX_HISTORY_BUFFER_KB;
    public static final java.lang.String KEY_MAX_HISTORY_FILES;
    public static final java.lang.String KEY_PROC_STATE_CPU_TIMES_READ_DELAY_MS;
    public static final java.lang.String KEY_TRACK_CPU_ACTIVE_CLUSTER_TIME;
    public static final java.lang.String KEY_TRACK_CPU_TIMES_BY_PROC_STATE;
    public static final java.lang.String KEY_UID_REMOVE_DELAY_MS;
    public int BATTERY_CHARGED_DELAY_MS;
    public long BATTERY_LEVEL_COLLECTION_DELAY_MS;
    public long EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS;
    public long KERNEL_UID_READERS_THROTTLE_TIME;
    public int MAX_HISTORY_BUFFER;
    public int MAX_HISTORY_FILES;
    public long PROC_STATE_CPU_TIMES_READ_DELAY_MS;
    public boolean TRACK_CPU_ACTIVE_CLUSTER_TIME;
    public boolean TRACK_CPU_TIMES_BY_PROC_STATE;
    public long UID_REMOVE_DELAY_MS;
    private final android.util.KeyValueListParser mParser;
    private android.content.ContentResolver mResolver;
    final com.android.internal.os.BatteryStatsImpl this$0;

    public void <init>(com.android.internal.os.BatteryStatsImpl, android.os.Handler)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        com.android.internal.os.BatteryStatsImpl r1;
        android.os.Handler r2;
        android.util.KeyValueListParser $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_ACTIVE_CLUSTER_TIME> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long PROC_STATE_CPU_TIMES_READ_DELAY_MS> = 5000L;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long UID_REMOVE_DELAY_MS> = 300000L;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS> = 600000L;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long BATTERY_LEVEL_COLLECTION_DELAY_MS> = 300000L;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int BATTERY_CHARGED_DELAY_MS> = 900000;

        $r3 = new android.util.KeyValueListParser;

        specialinvoke $r3.<android.util.KeyValueListParser: void <init>(char)>(44);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser> = $r3;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_FILES> = 64;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER> = 65536;

        goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_FILES> = 32;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER> = 131072;

     label2:
        return;
    }

    private void updateBatteryChargedDelayMsLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        android.content.ContentResolver $r1;
        android.util.KeyValueListParser $r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.content.ContentResolver mResolver>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "battery_charging_state_update_delay", -1);

        if i0 < 0 goto label1;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        i0 = virtualinvoke $r2.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("battery_charged_delay_ms", 900000);

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int BATTERY_CHARGED_DELAY_MS> = i0;

        return;
    }

    private void updateConstants()
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        com.android.internal.os.BatteryStatsImpl r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.ContentResolver $r2;
        android.util.KeyValueListParser $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r16, r17;
        java.lang.String $r4;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7;
        int $i8, $i9, $i10;
        java.lang.Throwable $r12, $r13;
        byte b12;
        short s13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.content.ContentResolver mResolver>;

        $r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "battery_stats_constants");

        virtualinvoke $r3.<android.util.KeyValueListParser: void setString(java.lang.String)>($r4);

     label02:
        goto label06;

     label03:
        $r13 := @caughtexception;

        goto label14;

     label04:
        $r12 := @caughtexception;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Bad batterystats settings", $r12);

     label06:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $z2 = virtualinvoke $r5.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("track_cpu_times_by_proc_state", 0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateTrackCpuTimesByProcStateLocked(boolean,boolean)>($z1, $z2);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $z3 = virtualinvoke $r6.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("track_cpu_active_cluster_time", 1);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_ACTIVE_CLUSTER_TIME> = $z3;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long PROC_STATE_CPU_TIMES_READ_DELAY_MS>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $l2 = virtualinvoke $r7.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("proc_state_cpu_times_read_delay_ms", 5000L);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateProcStateCpuTimesReadDelayMs(long,long)>($l1, $l2);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $l4 = virtualinvoke $r8.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("kernel_uid_readers_throttle_time", 1000L);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateKernelUidReadersThrottleTime(long,long)>($l3, $l4);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $l5 = virtualinvoke $r9.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("uid_remove_delay_ms", 300000L);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateUidRemoveDelay(long)>($l5);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $l6 = virtualinvoke $r10.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("external_stats_collection_rate_limit_ms", 600000L);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS> = $l6;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $l7 = virtualinvoke $r11.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("battery_level_collection_delay_ms", 300000L);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long BATTERY_LEVEL_COLLECTION_DELAY_MS> = $l7;

        r16 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

     label07:
        if z0 == 0 goto label08;

        b12 = 64;

        goto label09;

     label08:
        b12 = 32;

     label09:
        $i8 = virtualinvoke r16.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("max_history_files", b12);

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_FILES> = $i8;

        r17 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.util.KeyValueListParser mParser>;

        $z4 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z4 == 0 goto label11;

     label10:
        s13 = 64;

        goto label12;

     label11:
        s13 = 128;

     label12:
        $i9 = virtualinvoke r17.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("max_history_buffer_kb", s13);

        $i10 = $i9 * 1024;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER> = $i10;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateBatteryChargedDelayMsLocked()>();

        exitmonitor r1;

     label13:
        return;

     label14:
        exitmonitor r1;

     label15:
        throw $r13;

        catch java.lang.IllegalArgumentException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
        catch java.lang.Throwable from label12 to label13 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
    }

    private void updateKernelUidReadersThrottleTime(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        long l0, l1, $l3, $l4, $l5, $l6;
        byte $b2;
        com.android.internal.os.BatteryStatsImpl $r1, $r3, $r5, $r7;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r2;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r4;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r6;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME> = l1;

        $b2 = l0 cmp l1;

        if $b2 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r2 = $r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader>;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        virtualinvoke $r2.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void setThrottle(long)>($l3);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        virtualinvoke $r4.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void setThrottle(long)>($l4);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r6 = $r5.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader>;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        virtualinvoke $r6.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void setThrottle(long)>($l5);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r8 = $r7.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader>;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        virtualinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void setThrottle(long)>($l6);

     label1:
        return;
    }

    private void updateProcStateCpuTimesReadDelayMs(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        long l0, l1, $l5;
        com.android.internal.os.BatteryStatsImpl r1, $r2, $r3;
        byte $b2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long PROC_STATE_CPU_TIMES_READ_DELAY_MS> = l1;

        $b2 = l0 cmp l1;

        if $b2 == 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$1702(com.android.internal.os.BatteryStatsImpl,long)>($r2, 0L);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$1802(com.android.internal.os.BatteryStatsImpl,long)>($r3, 0L);

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r4 = r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l5 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$2102(com.android.internal.os.BatteryStatsImpl,long)>(r1, $l5);

     label1:
        return;
    }

    private void updateTrackCpuTimesByProcStateLocked(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        boolean z0, z1;
        com.android.internal.os.BatteryStatsImpl r1, $r2, $r3, $r6, $r7;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r4;
        com.android.internal.os.BatteryStatsImpl$Clocks $r8;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE> = z1;

        if z1 == 0 goto label1;

        if z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean access$2002(com.android.internal.os.BatteryStatsImpl,boolean)>($r2, 1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r4 = staticinvoke <com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync access$1600(com.android.internal.os.BatteryStatsImpl)>($r3);

        interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleCpuSyncDueToSettingChange()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$1702(com.android.internal.os.BatteryStatsImpl,long)>($r6, 0L);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$1802(com.android.internal.os.BatteryStatsImpl,long)>($r7, 0L);

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        $r8 = r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        staticinvoke <com.android.internal.os.BatteryStatsImpl: long access$2102(com.android.internal.os.BatteryStatsImpl,long)>(r1, $l2);

     label1:
        return;
    }

    private void updateUidRemoveDelay(long)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        l0 := @parameter0: long;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: long UID_REMOVE_DELAY_MS> = l0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: void clearPendingRemovedUids()>();

        return;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        java.io.PrintWriter r1;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3;
        int $i4, $i5, $i6, $i7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("track_cpu_times_by_proc_state");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("track_cpu_active_cluster_time");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_ACTIVE_CLUSTER_TIME>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("proc_state_cpu_times_read_delay_ms");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long PROC_STATE_CPU_TIMES_READ_DELAY_MS>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("kernel_uid_readers_throttle_time");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long KERNEL_UID_READERS_THROTTLE_TIME>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("external_stats_collection_rate_limit_ms");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("battery_level_collection_delay_ms");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: long BATTERY_LEVEL_COLLECTION_DELAY_MS>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("max_history_files");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_FILES>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("max_history_buffer_kb");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        $i6 = $i5 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("battery_charged_delay_ms");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: int BATTERY_CHARGED_DELAY_MS>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i7);

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        boolean z0, $z1;
        android.net.Uri $r2, r4;
        java.lang.Throwable $r3;
        com.android.internal.os.BatteryStatsImpl r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        z0 := @parameter0: boolean;

        r4 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_charging_state_update_delay");

        $z1 = virtualinvoke r4.<android.net.Uri: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label6;

        r5 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: com.android.internal.os.BatteryStatsImpl this$0>;

        entermonitor r5;

     label1:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateBatteryChargedDelayMsLocked()>();

        exitmonitor r5;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r3;

     label6:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateConstants()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void startObserving(android.content.ContentResolver)
    {
        com.android.internal.os.BatteryStatsImpl$Constants r0;
        android.content.ContentResolver r1, $r3;
        android.net.Uri $r2, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Constants;

        r1 := @parameter0: android.content.ContentResolver;

        r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.content.ContentResolver mResolver> = r1;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_stats_constants");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r2, 0, r0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Constants: android.content.ContentResolver mResolver>;

        $r4 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("battery_charging_state_update_delay");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, r0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Constants: void updateConstants()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_UID_REMOVE_DELAY_MS> = "uid_remove_delay_ms";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_TRACK_CPU_TIMES_BY_PROC_STATE> = "track_cpu_times_by_proc_state";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_TRACK_CPU_ACTIVE_CLUSTER_TIME> = "track_cpu_active_cluster_time";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_PROC_STATE_CPU_TIMES_READ_DELAY_MS> = "proc_state_cpu_times_read_delay_ms";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_MAX_HISTORY_FILES> = "max_history_files";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_MAX_HISTORY_BUFFER_KB> = "max_history_buffer_kb";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_KERNEL_UID_READERS_THROTTLE_TIME> = "kernel_uid_readers_throttle_time";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS> = "external_stats_collection_rate_limit_ms";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_BATTERY_LEVEL_COLLECTION_DELAY_MS> = "battery_level_collection_delay_ms";

        <com.android.internal.os.BatteryStatsImpl$Constants: java.lang.String KEY_BATTERY_CHARGED_DELAY_MS> = "battery_charged_delay_ms";

        <com.android.internal.os.BatteryStatsImpl$Constants: long DEFAULT_UID_REMOVE_DELAY_MS> = 300000L;

        <com.android.internal.os.BatteryStatsImpl$Constants: boolean DEFAULT_TRACK_CPU_TIMES_BY_PROC_STATE> = 0;

        <com.android.internal.os.BatteryStatsImpl$Constants: boolean DEFAULT_TRACK_CPU_ACTIVE_CLUSTER_TIME> = 1;

        <com.android.internal.os.BatteryStatsImpl$Constants: long DEFAULT_PROC_STATE_CPU_TIMES_READ_DELAY_MS> = 5000L;

        <com.android.internal.os.BatteryStatsImpl$Constants: int DEFAULT_MAX_HISTORY_FILES_LOW_RAM_DEVICE> = 64;

        <com.android.internal.os.BatteryStatsImpl$Constants: int DEFAULT_MAX_HISTORY_FILES> = 32;

        <com.android.internal.os.BatteryStatsImpl$Constants: int DEFAULT_MAX_HISTORY_BUFFER_LOW_RAM_DEVICE_KB> = 64;

        <com.android.internal.os.BatteryStatsImpl$Constants: int DEFAULT_MAX_HISTORY_BUFFER_KB> = 128;

        <com.android.internal.os.BatteryStatsImpl$Constants: long DEFAULT_KERNEL_UID_READERS_THROTTLE_TIME> = 1000L;

        <com.android.internal.os.BatteryStatsImpl$Constants: long DEFAULT_EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS> = 600000L;

        <com.android.internal.os.BatteryStatsImpl$Constants: long DEFAULT_BATTERY_LEVEL_COLLECTION_DELAY_MS> = 300000L;

        <com.android.internal.os.BatteryStatsImpl$Constants: int DEFAULT_BATTERY_CHARGED_DELAY_MS> = 900000;

        return;
    }
}
