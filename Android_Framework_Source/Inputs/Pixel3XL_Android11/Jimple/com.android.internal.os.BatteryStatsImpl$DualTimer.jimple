public class com.android.internal.os.BatteryStatsImpl$DualTimer extends com.android.internal.os.BatteryStatsImpl$DurationTimer
{
    private final com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4, r5;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r5 := @parameter5: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1, r2, i0, r3, r4);

        $r6 = new com.android.internal.os.BatteryStatsImpl$DurationTimer;

        specialinvoke $r6.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1, r2, i0, null, r5);

        r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer> = $r6;

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4, r5;
        android.os.Parcel r6;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r5 := @parameter5: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r6 := @parameter6: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2, i0, r3, r4, r6);

        $r7 = new com.android.internal.os.BatteryStatsImpl$DurationTimer;

        specialinvoke $r7.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2, i0, null, r5, r6);

        r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer> = $r7;

        return;
    }

    public void detach()
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void detach()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void detach()>();

        return;
    }

    public volatile android.os.BatteryStats$Timer getSubTimer()
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer getSubTimer()>();

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$DurationTimer getSubTimer()
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        return $r1;
    }

    public void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        android.os.Parcel r1;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        $z1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DurationTimer: boolean reset(boolean)>(0);

        $z2 = $z1 ^ 1;

        $z3 = 0 | $z2;

        $z4 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: boolean reset(boolean)>(z0);

        $z5 = $z4 ^ 1;

        $z6 = $z3 | $z5;

        $z7 = $z6 ^ 1;

        return $z7;
    }

    public void startRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void startRunningLocked(long)>(l0);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void startRunningLocked(long)>(l0);

        return;
    }

    public void stopAllRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void stopAllRunningLocked(long)>(l0);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void stopAllRunningLocked(long)>(l0);

        return;
    }

    public void stopRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void stopRunningLocked(long)>(l0);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void stopRunningLocked(long)>(l0);

        return;
    }

    public void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        android.os.Parcel r1;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l0);

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$DualTimer r0;
        android.os.Parcel r1;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DualTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer mSubTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$DurationTimer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        return;
    }
}
