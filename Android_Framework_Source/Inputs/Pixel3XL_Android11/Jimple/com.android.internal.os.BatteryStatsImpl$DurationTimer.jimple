public class com.android.internal.os.BatteryStatsImpl$DurationTimer extends com.android.internal.os.BatteryStatsImpl$StopwatchTimer
{
    long mCurrentDurationMs;
    long mMaxDurationMs;
    long mStartTimeMs;
    long mTotalDurationMs;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1, r2, i0, r3, r4);

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4;
        android.os.Parcel r5;
        long $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r5 := @parameter5: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2, i0, r3, r4, r5);

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

        $l1 = virtualinvoke r5.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs> = $l1;

        $l2 = virtualinvoke r5.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs> = $l2;

        $l3 = virtualinvoke r5.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs> = $l3;

        return;
    }

    public long getCurrentDurationMsLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, l1, $l3, $l4, $l5, $l6, $l7, l8;
        int $i2;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs>;

        l8 = l1;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i2 <= 0 goto label1;

        l8 = l1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l3 = l0 * 1000L;

        $l4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l3);

        $l6 = $l4 / 1000L;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs>;

        $l7 = $l6 - $l5;

        l8 = l1 + $l7;

     label1:
        return l8;
    }

    public long getMaxDurationMsLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        int $i0;
        long $l1, $l2, l4, l5;
        byte $b3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l4 := @parameter0: long;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i0 <= 0 goto label1;

        l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)>(l4);

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs>;

        $b3 = l5 cmp $l2;

        if $b3 <= 0 goto label1;

        return l5;

     label1:
        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs>;

        return $l1;
    }

    public long getTotalDurationMsLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs>;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)>(l0);

        $l3 = $l1 + $l2;

        return $l3;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        android.util.Printer r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        return;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, l1, l2, $l4;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void onTimeStarted(long,long,long)>(l0, l1, l2);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i3 <= 0 goto label1;

        $l4 = l2 / 1000L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = $l4;

     label1:
        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, l1, l2, $l4, $l5, $l6, $l7, $l8;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void onTimeStopped(long,long,long)>(l0, l1, l2);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i3 <= 0 goto label1;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs>;

        $l5 = l2 / 1000L;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs>;

        $l6 = $l5 - $l4;

        $l8 = $l7 + $l6;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs> = $l8;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

        return;
    }

    public void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        android.os.Parcel r1;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs> = $l0;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs> = $l1;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs> = 0L;

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        long $l1, $l2, $l3, $l4;
        boolean z0, z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(z0);

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs> = 0L;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l2 = $l1 * 1000L;

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l2);

        $l4 = $l3 / 1000L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = $l4;

        goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

     label2:
        return z1;
    }

    public void startRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, $l2, $l3, $l4;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i1 != 1 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l2 = l0 * 1000L;

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l2);

        $l4 = $l3 / 1000L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = $l4;

     label1:
        return;
    }

    public void stopRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        long l0, l1, $l3, $l4, $l5;
        int $i2;
        byte $b6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        l0 := @parameter0: long;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: int mNesting>;

        if $i2 != 1 goto label2;

        l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)>(l0);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs>;

        $l4 = $l3 + l1;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs> = $l4;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs>;

        $b6 = l1 cmp $l5;

        if $b6 <= 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mMaxDurationMs> = l1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mStartTimeMs> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mCurrentDurationMs> = 0L;

     label2:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

        return;
    }

    public void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        android.os.Parcel r1;
        long l0, $l1, $l2, $l3, $l4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l0);

        $l1 = l0 / 1000L;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getMaxDurationMsLocked(long)>($l1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = l0 / 1000L;

        $l4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getTotalDurationMsLocked(long)>($l3);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$DurationTimer r0;
        android.os.Parcel r1;
        long l0, $l1, $l2, $l3, $l4, $l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$DurationTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $l1 = l0 / 1000L;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getMaxDurationMsLocked(long)>($l1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long mTotalDurationMs>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = l0 / 1000L;

        $l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$DurationTimer: long getCurrentDurationMsLocked(long)>($l4);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        return;
    }
}
