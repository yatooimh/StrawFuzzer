public class com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray extends android.os.BatteryStats$LongCounterArray implements com.android.internal.os.BatteryStatsImpl$TimeBaseObs
{
    public long[] mCounts;
    final com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase;

    public void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<android.os.BatteryStats$LongCounterArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase> = r1;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void add(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    private void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        android.os.Parcel r2;
        long[] $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats$LongCounterArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase> = r1;

        $r3 = virtualinvoke r2.<android.os.Parcel: long[] createLongArray()>();

        r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts> = $r3;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void add(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel, com.android.internal.os.BatteryStatsImpl$1)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        android.os.Parcel r2;
        com.android.internal.os.BatteryStatsImpl$1 r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: android.os.Parcel;

        r3 := @parameter2: com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2);

        return;
    }

    static void access$1400(com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeToParcel(android.os.Parcel)>(r1);

        return;
    }

    static void access$2300(com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    static void access$2600(com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    public static com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readFromParcel(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        android.os.Parcel r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r0);

        return $r2;

     label1:
        return null;
    }

    public static com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readSummaryFromParcelLocked(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        android.os.Parcel r0;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase r2;

        r0 := @parameter0: android.os.Parcel;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r1 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        specialinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>(r2);

        specialinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void readSummaryFromParcelLocked(android.os.Parcel)>(r0);

        return $r1;

     label1:
        return null;
    }

    private void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;
        long[] $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r1.<android.os.Parcel: long[] createLongArray()>();

        r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts> = $r2;

        return;
    }

    private void writeSummaryToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;
        long[] $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: android.os.Parcel;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r2);

        return;
    }

    public static void writeSummaryToParcelLocked(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)
    {
        android.os.Parcel r0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r1;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        specialinvoke r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel)>(r0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    private void writeToParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.os.Parcel r1;
        long[] $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: android.os.Parcel;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r2);

        return;
    }

    public static void writeToParcel(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)
    {
        android.os.Parcel r0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r1;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        specialinvoke r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeToParcel(android.os.Parcel)>(r0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    public void addCountLocked(long[])
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        long[] r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: long[];

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void addCountLocked(long[],boolean)>(r1, $z0);

        return;
    }

    public void addCountLocked(long[], boolean)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        long[] r1, r2, $r3, $r4;
        boolean z0;
        long $l0, $l1, $l2;
        int $i3, i4, $i5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: long[];

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return;

     label1:
        if z0 == 0 goto label4;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        if $r3 != null goto label2;

        $i3 = lengthof r1;

        $r4 = newarray (long)[$i3];

        r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts> = $r4;

     label2:
        i4 = 0;

     label3:
        $i5 = lengthof r1;

        if i4 >= $i5 goto label4;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        $l1 = r2[i4];

        $l0 = r1[i4];

        $l2 = $l1 + $l0;

        r2[i4] = $l2;

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public void detach()
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public long[] getCountsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        int i0, $i1;
        long[] r1, r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        $i1 = lengthof r1;

        r2 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>(r1, $i1);

     label2:
        return r2;
    }

    public int getSize()
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        long[] r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = lengthof r1;

     label2:
        return i0;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        android.util.Printer r1;
        java.lang.String r2, $r8, $r10;
        java.lang.StringBuilder $r4;
        long[] $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCounts=");

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r10);

        return;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray r0;
        boolean z0;
        long[] r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: long[] mCounts>;

        if r1 == null goto label1;

        staticinvoke <java.util.Arrays: void fill(long[],long)>(r1, 0L);

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void detach()>();

     label2:
        return 1;
    }
}
