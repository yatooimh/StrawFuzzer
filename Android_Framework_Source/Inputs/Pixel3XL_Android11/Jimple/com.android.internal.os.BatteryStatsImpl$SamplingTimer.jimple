public class com.android.internal.os.BatteryStatsImpl$SamplingTimer extends com.android.internal.os.BatteryStatsImpl$Timer
{
    int mCurrentReportedCount;
    long mCurrentReportedTotalTime;
    boolean mTimeBaseRunning;
    boolean mTrackingReportedValues;
    int mUnpluggedReportedCount;
    long mUnpluggedReportedTotalTime;
    int mUpdateVersion;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,int,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1, 0, r2);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 0;

        $z0 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = $z0;

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase r2;
        android.os.Parcel r3;
        int $i0, $i1, $i4;
        long $l2, $l3;
        boolean $z0, z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r3 := @parameter2: android.os.Parcel;

        z1 = 0;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,int,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, 0, r2, r3);

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = $i0;

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i1;

        $l2 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = $l2;

        $l3 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i4 != 1 goto label1;

        z1 = 1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = z1;

        $z0 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = $z0;

        return;
    }

    public void add(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l2, $l5;
        int i1, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $l5 = $l2 + l0;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $i4 = $i3 + i1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l5, $i4);

        return;
    }

    protected int computeCurrentCountLocked()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0, $i1, $i2, i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCount>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label1;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        i3 = $i2 - $i1;

        goto label2;

     label1:
        i3 = 0;

     label2:
        $i4 = i0 + i3;

        return $i4;
    }

    protected long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l1, $l2, l3, l4, $l5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l3 := @parameter0: long;

        l0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mTotalTime>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        l4 = $l2 - $l1;

        goto label2;

     label1:
        l4 = 0L;

     label2:
        $l5 = l0 + l4;

        return $l5;
    }

    public void endSample()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long $l0;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long computeRunTimeLocked(long)>(0L);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mTotalTime> = $l0;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int computeCurrentCountLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCount> = $i1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 0;

        return;
    }

    public int getUpdateVersion()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion>;

        return $i0;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.util.Printer r1;
        java.lang.String r2, $r14;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentReportedCount=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedCount=");

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentReportedTotalTime=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedTotalTime=");

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r14);

        return;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2, $l3;
        boolean $z0;
        int $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStarted(long,long,long)>(l0, l1, l2);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label1;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i4;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = 1;

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStopped(long,long,long)>(l0, l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = 0;

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(boolean)>(z0);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = 0;

        return 1;
    }

    public void setUpdateVersion(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion> = i0;

        return;
    }

    public void update(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l3;
        int i1, $i2;
        boolean $z0, $z1;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = i1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 1;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $b4 = l0 cmp $l3;

        if $b4 < 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        if i1 >= $i2 goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void endSample()>();

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = i1;

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long l0, $l3, $l4;
        int $i1, $i2, i5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        return;
    }
}
