public class com.android.internal.os.BatteryStatsImpl$StopwatchTimer extends com.android.internal.os.BatteryStatsImpl$Timer
{
    long mAcquireTime;
    public boolean mInList;
    int mNesting;
    long mTimeout;
    final java.util.ArrayList mTimerPool;
    final com.android.internal.os.BatteryStatsImpl$Uid mUid;
    long mUpdateTime;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,int,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1, i0, r4);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid> = r2;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool> = r3;

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;
        java.util.ArrayList r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase r4;
        android.os.Parcel r5;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r5 := @parameter5: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,int,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, i0, r4, r5);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid> = r2;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool> = r3;

        $l1 = virtualinvoke r5.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = $l1;

        return;
    }

    private static long refreshTimersLocked(long, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$StopwatchTimer)
    {
        long l0, l2, $l3, $l5, $l6, $l7, l8, l10, l11;
        java.util.ArrayList r0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1, r2;
        int i1, i9;
        java.lang.Object $r3;
        byte $b4;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.ArrayList;

        r1 := @parameter2: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l8 = 0L;

        i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i9 = i1 - 1;

     label1:
        if i9 < 0 goto label4;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r2 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r3;

        $l3 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        l2 = l0 - $l3;

        l10 = l8;

        $b4 = l2 cmp 0L;

        if $b4 <= 0 goto label3;

        $l5 = (long) i1;

        l11 = l2 / $l5;

        if r2 != r1 goto label2;

        l8 = l11;

     label2:
        $l6 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l7 = $l6 + l11;

        r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l7;

        l10 = l8;

     label3:
        r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l0;

        i9 = i9 + -1;

        l8 = l10;

        goto label1;

     label4:
        return l8;
    }

    protected int computeCurrentCountLocked()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        return $i0;
    }

    protected long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, $l3, $l4, $l5, $l6, l8, l9, l10, l11, l13, l15;
        java.util.ArrayList r1;
        byte $b2, $b7;
        int $i12, i14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l8 := @parameter0: long;

        l0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout>;

        l9 = l8;

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        l10 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        l9 = l8;

        $l6 = l10 + l0;

        $b7 = l8 cmp $l6;

        if $b7 <= 0 goto label1;

        l9 = l10 + l0;

     label1:
        l11 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i12 <= 0 goto label4;

        l13 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if r1 == null goto label2;

        i14 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        goto label3;

     label2:
        i14 = 1;

     label3:
        $l5 = l9 - l13;

        $l4 = (long) i14;

        l15 = $l5 / $l4;

        goto label5;

     label4:
        l15 = 0L;

     label5:
        $l3 = l11 + l15;

        return $l3;
    }

    public void detach()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        java.util.ArrayList r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void detach()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if r1 == null goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

     label1:
        return;
    }

    public boolean isRunningLocked()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.util.Printer r1;
        java.lang.String r2, $r12;
        java.lang.StringBuilder $r4;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNesting=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUpdateTime=");

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAcquireTime=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r12);

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, l1, l2;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i3 <= 0 goto label1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStopped(long,long,long)>(l0, l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l2;

     label1:
        return;
    }

    public void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 0;

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int i0, $i4;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        long $l1, $l2, $l3;
        boolean z2, z3, z4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        z2 := @parameter0: boolean;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if i0 > 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 == 0 goto label3;

        if z2 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(boolean)>(z4);

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i4 <= 0 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l2 = $l1 * 1000L;

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = $l3;

     label5:
        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = -1L;

        return z3;
    }

    public void setMark(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        java.util.ArrayList r1;
        long $l0, $l2, $l3, $l4, $l5, l7, l8, $l9;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l7 := @parameter0: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l0 = 1000L * l7;

        l8 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l0);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i1 <= 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if r1 == null goto label1;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l8, r1, r0);

        goto label2;

     label1:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        $l3 = l8 - $l2;

        $l5 = $l4 + $l3;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l5;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l8;

     label2:
        $l9 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeBeforeMark> = $l9;

        return;
    }

    public void setTimeout(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout> = l0;

        return;
    }

    public void startRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int i0, $i1, $i3, $i4;
        java.util.ArrayList r1, $r4;
        long $l2, $l5, l7, l8;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l7 := @parameter0: long;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        $i1 = i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = $i1;

        if i0 != 0 goto label3;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l2 = 1000L * l7;

        l8 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l8;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if r1 == null goto label1;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l8, r1, null);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount> = $i4;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = $l5;

        goto label3;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = -1L;

     label3:
        return;
    }

    public void stopAllRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i1 <= 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void stopRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        java.util.ArrayList r1, $r3;
        long $l0, $l1, $l2, $l4, $l5, l10, l13;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        byte $b3, $b6;
        int $i7, $i8, i11, i12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l10 := @parameter0: long;

        i11 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if i11 != 0 goto label1;

        return;

     label1:
        i12 = i11 + -1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = i12;

        if i12 != 0 goto label4;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l0 = 1000L * l10;

        l13 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l0);

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if r1 == null goto label2;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l13, r1, null);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        goto label3;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 1;

        $l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long computeRunTimeLocked(long)>(l13);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 0;

     label3:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label4;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime>;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label4;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        $i8 = $i7 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount> = $i8;

     label4:
        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.os.Parcel r1;
        long l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        return;
    }
}
