public abstract class com.android.internal.os.BatteryStatsImpl$Timer extends android.os.BatteryStats$Timer implements com.android.internal.os.BatteryStatsImpl$TimeBaseObs
{
    protected final com.android.internal.os.BatteryStatsImpl$Clocks mClocks;
    protected int mCount;
    protected final com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase;
    protected long mTimeBeforeMark;
    protected long mTotalTime;
    protected final int mType;

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, int, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<android.os.BatteryStats$Timer: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$Clocks mClocks> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mType> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase> = r2;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: void add(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, int, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase r2;
        android.os.Parcel r3;
        long $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r3 := @parameter3: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats$Timer: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$Clocks mClocks> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mType> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase> = r2;

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i1;

        $l2 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l2;

        $l3 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTimeBeforeMark> = $l3;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: void add(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public static void writeTimerToParcel(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$Timer, long)
    {
        android.os.Parcel r0;
        com.android.internal.os.BatteryStatsImpl$Timer r1;
        long l0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$Timer;

        l0 := @parameter2: long;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r0, l0);

        return;
    }

    protected abstract int computeCurrentCountLocked();

    protected abstract long computeRunTimeLocked(long);

    public void detach()
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public int getCountLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: int computeCurrentCountLocked()>();

        return $i1;
    }

    public long getTimeSinceMarkLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        long l0, $l1, $l2, $l3, $l4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l1);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTimeBeforeMark>;

        $l4 = $l2 - $l3;

        return $l4;
    }

    public long getTotalTimeLocked(long, int)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        long l0, $l2, $l3;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        $l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l2);

        return $l3;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        android.util.Printer r1;
        java.lang.String r2, $r7, $r12;
        java.lang.StringBuilder $r3, $r8;
        int $i0;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCount=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTotalTime=");

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r12);

        return;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        long l0, l1, l2, $l3;
        int $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>(l2);

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l3;

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: int computeCurrentCountLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i4;

        return;
    }

    public void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        android.os.Parcel r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: android.os.Parcel;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = $l0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = $i1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTimeBeforeMark> = $l2;

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTimeBeforeMark> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$Timer: int mCount> = 0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void detach()>();

     label1:
        return 1;
    }

    public void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        android.os.Parcel r1;
        long l0, $l1, $l2;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: int computeCurrentCountLocked()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Timer r0;
        android.os.Parcel r1;
        long l0, $l2, $l3, $l4;
        int $i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Timer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: int computeCurrentCountLocked()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        $l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: long computeRunTimeLocked(long)>($l2);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Timer: long mTimeBeforeMark>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        return;
    }
}
