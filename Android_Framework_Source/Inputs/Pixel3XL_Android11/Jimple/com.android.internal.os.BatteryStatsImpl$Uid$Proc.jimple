public class com.android.internal.os.BatteryStatsImpl$Uid$Proc extends android.os.BatteryStats$Uid$Proc implements com.android.internal.os.BatteryStatsImpl$TimeBaseObs
{
    boolean mActive;
    protected com.android.internal.os.BatteryStatsImpl mBsi;
    java.util.ArrayList mExcessivePower;
    long mForegroundTime;
    final java.lang.String mName;
    int mNumAnrs;
    int mNumCrashes;
    int mStarts;
    long mSystemTime;
    long mUserTime;

    public void <init>(com.android.internal.os.BatteryStatsImpl, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        com.android.internal.os.BatteryStatsImpl r1;
        java.lang.String r2;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.os.BatteryStats$Uid$Proc: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean mActive> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl mBsi> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.lang.String mName> = r2;

        $r3 = r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: void add(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public void addCpuTimeLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r2 = $r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int,boolean)>(i0, i1, $z0);

        return;
    }

    public void addCpuTimeLocked(int, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, i1;
        boolean z0;
        long $l2, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l2 = (long) i0;

        $l4 = $l3 + $l2;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l4;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l5 = (long) i1;

        $l7 = $l6 + $l5;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l7;

     label1:
        return;
    }

    public void addExcessiveCpu(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1;
        java.util.ArrayList $r2, $r4, $r5;
        android.os.BatteryStats$Uid$Proc$ExcessivePower $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = $r5;

     label1:
        $r3 = new android.os.BatteryStats$Uid$Proc$ExcessivePower;

        specialinvoke $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>();

        $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type> = 2;

        $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime> = l0;

        $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime> = l1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void addForegroundTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l2 = $l1 + l0;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l2;

        return;
    }

    public int countExcessivePowers()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        java.util.ArrayList r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public void detach()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean mActive> = 0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r2 = $r1.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    public android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Object $r2;
        android.os.BatteryStats$Uid$Proc$ExcessivePower $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.os.BatteryStats$Uid$Proc$ExcessivePower) $r2;

        return $r3;

     label1:
        return null;
    }

    public long getForegroundTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        return $l1;
    }

    public int getNumAnrs(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs>;

        return $i1;
    }

    public int getNumCrashes(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes>;

        return $i1;
    }

    public int getStarts(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        return $i1;
    }

    public long getSystemTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        return $l1;
    }

    public long getUserTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        return $l1;
    }

    public void incNumAnrsLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs> = $i1;

        return;
    }

    public void incNumCrashesLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes> = $i1;

        return;
    }

    public void incStartsLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i1;

        return;
    }

    public boolean isActive()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean mActive>;

        return $z0;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    void readExcessivePowerFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, $i1, i4;
        java.lang.StringBuilder $r2;
        android.os.ParcelFormatException $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7, $r9;
        android.os.BatteryStats$Uid$Proc$ExcessivePower $r8;
        long $l2, $l3;
        android.os.Parcel r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r10 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if i0 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = null;

        return;

     label1:
        if i0 > 10000 goto label4;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = $r7;

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $r8 = new android.os.BatteryStats$Uid$Proc$ExcessivePower;

        specialinvoke $r8.<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>();

        $i1 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        $r8.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type> = $i1;

        $l2 = virtualinvoke r10.<android.os.Parcel: long readLong()>();

        $r8.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime> = $l2;

        $l3 = virtualinvoke r10.<android.os.Parcel: long readLong()>();

        $r8.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime> = $l3;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many excessive power entries ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new android.os.ParcelFormatException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        long $l0, $l1, $l2;
        int $i3, $i4, $i5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l0;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l1;

        $l2 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void readExcessivePowerFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    public boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void detach()>();

     label1:
        return 1;
    }

    void writeExcessivePowerToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        int i0, $i1, i4;
        java.util.ArrayList $r2, r4;
        java.lang.Object $r3;
        long $l2, $l3;
        android.os.BatteryStats$Uid$Proc$ExcessivePower r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if r4 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        i4 = 0;

     label2:
        if i4 >= i0 goto label3;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (android.os.BatteryStats$Uid$Proc$ExcessivePower) $r3;

        $i1 = r5.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r5.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r5.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    void writeToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        long $l0, $l1, $l2;
        int $i3, $i4, $i5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l0);

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>(r1);

        return;
    }
}
