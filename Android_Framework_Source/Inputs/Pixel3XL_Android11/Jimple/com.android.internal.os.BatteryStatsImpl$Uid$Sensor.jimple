public class com.android.internal.os.BatteryStatsImpl$Uid$Sensor extends android.os.BatteryStats$Uid$Sensor
{
    protected com.android.internal.os.BatteryStatsImpl mBsi;
    final int mHandle;
    com.android.internal.os.BatteryStatsImpl$DualTimer mTimer;
    protected com.android.internal.os.BatteryStatsImpl$Uid mUid;

    public void <init>(com.android.internal.os.BatteryStatsImpl, com.android.internal.os.BatteryStatsImpl$Uid, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter2: int;

        specialinvoke r0.<android.os.BatteryStats$Uid$Sensor: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl mBsi> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Uid mUid> = r2;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int mHandle> = i0;

        return;
    }

    private com.android.internal.os.BatteryStatsImpl$DualTimer readTimersFromParcel(com.android.internal.os.BatteryStatsImpl$TimeBase, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1, r2;
        android.os.Parcel r3;
        java.util.ArrayList r4, $r12, r15;
        int $i0, $i1, $i2;
        com.android.internal.os.BatteryStatsImpl $r5, $r9, $r13;
        android.util.SparseArray $r6, $r14;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r8;
        com.android.internal.os.BatteryStatsImpl$Uid $r10;
        com.android.internal.os.BatteryStatsImpl$Clocks $r11;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r3 := @parameter2: android.os.Parcel;

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r6 = $r5.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int mHandle>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r4 = (java.util.ArrayList) $r7;

        r15 = r4;

        if r4 != null goto label2;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r15 = $r12;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r14 = $r13.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int mHandle>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r12);

     label2:
        $r8 = new com.android.internal.os.BatteryStatsImpl$DualTimer;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r11 = $r9.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        specialinvoke $r8.<com.android.internal.os.BatteryStatsImpl$DualTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r11, $r10, 0, r15, r1, r2, r3);

        return $r8;
    }

    public void detachFromTimeBase()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void access$600(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r1);

        return;
    }

    public int getHandle()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int mHandle>;

        return $i0;
    }

    public volatile android.os.BatteryStats$Timer getSensorBackgroundTime()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer getSensorBackgroundTime()>();

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getSensorBackgroundTime()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$DualTimer r1;
        com.android.internal.os.BatteryStatsImpl$DurationTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$DualTimer: com.android.internal.os.BatteryStatsImpl$DurationTimer getSubTimer()>();

        return $r2;
    }

    public volatile android.os.BatteryStats$Timer getSensorTime()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer getSensorTime()>();

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getSensorTime()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        return $r1;
    }

    void readFromParcelLocked(com.android.internal.os.BatteryStatsImpl$TimeBase, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1, r2;
        android.os.Parcel r3;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r3 := @parameter2: android.os.Parcel;

        $r4 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer readTimersFromParcel(com.android.internal.os.BatteryStatsImpl$TimeBase,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2, r3);

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer> = $r4;

        return;
    }

    boolean reset()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$DualTimer: boolean reset(boolean)>(1);

        if $z0 == 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer> = null;

        return 1;

     label1:
        return 0;
    }

    void writeToParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r0;
        android.os.Parcel r1;
        long l0;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Sensor;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>(r1, $r2, l0);

        return;
    }
}
