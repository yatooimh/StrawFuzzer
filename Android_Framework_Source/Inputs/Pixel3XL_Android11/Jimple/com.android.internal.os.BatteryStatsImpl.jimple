public class com.android.internal.os.BatteryStatsImpl extends android.os.BatteryStats
{
    static final int BATTERY_DELTA_LEVEL_FLAG;
    public static final int BATTERY_PLUGGED_NONE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    public static final boolean DEBUG_ENERGY;
    private static final boolean DEBUG_ENERGY_CPU;
    private static final boolean DEBUG_HISTORY;
    private static final boolean DEBUG_MEMORY;
    static final long DELAY_UPDATE_WAKELOCKS;
    static final int DELTA_BATTERY_CHARGE_FLAG;
    static final int DELTA_BATTERY_LEVEL_FLAG;
    static final int DELTA_EVENT_FLAG;
    static final int DELTA_STATE2_FLAG;
    static final int DELTA_STATE_FLAG;
    static final int DELTA_STATE_MASK;
    static final int DELTA_TIME_ABS;
    static final int DELTA_TIME_INT;
    static final int DELTA_TIME_LONG;
    static final int DELTA_TIME_MASK;
    static final int DELTA_WAKELOCK_FLAG;
    private static final int MAGIC;
    static final int MAX_DAILY_ITEMS;
    static final int MAX_LEVEL_STEPS;
    private static final int MAX_WAKELOCKS_PER_UID;
    private static final double MILLISECONDS_IN_HOUR;
    private static final long MILLISECONDS_IN_YEAR;
    static final int MSG_REPORT_CHARGING;
    static final int MSG_REPORT_CPU_UPDATE_NEEDED;
    static final int MSG_REPORT_POWER_CHANGE;
    static final int MSG_REPORT_RESET_STATS;
    private static final int NUM_BT_TX_LEVELS;
    private static final int NUM_WIFI_TX_LEVELS;
    private static final long RPM_STATS_UPDATE_FREQ_MS;
    static final int STATE_BATTERY_HEALTH_MASK;
    static final int STATE_BATTERY_HEALTH_SHIFT;
    static final int STATE_BATTERY_MASK;
    static final int STATE_BATTERY_PLUG_MASK;
    static final int STATE_BATTERY_PLUG_SHIFT;
    static final int STATE_BATTERY_STATUS_MASK;
    static final int STATE_BATTERY_STATUS_SHIFT;
    private static final java.lang.String TAG;
    private static final int USB_DATA_CONNECTED;
    private static final int USB_DATA_DISCONNECTED;
    private static final int USB_DATA_UNKNOWN;
    private static final boolean USE_OLD_HISTORY;
    static final int VERSION;
    public static final int WAKE_LOCK_WEIGHT;
    final android.os.BatteryStats$HistoryEventTracker mActiveEvents;
    int mActiveHistoryStates;
    int mActiveHistoryStates2;
    int mAudioOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer;
    final java.util.ArrayList mAudioTurnedOnTimers;
    final com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory;
    private long mBatteryTimeToFullSeconds;
    com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity;
    int mBluetoothScanNesting;
    final java.util.ArrayList mBluetoothScanOnTimers;
    protected com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer;
    private com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback;
    int mCameraOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer;
    final java.util.ArrayList mCameraTurnedOnTimers;
    int mChangedStates;
    int mChangedStates2;
    final android.os.BatteryStats$LevelStepTracker mChargeStepTracker;
    boolean mCharging;
    public final android.util.AtomicFile mCheckinFile;
    protected com.android.internal.os.BatteryStatsImpl$Clocks mClocks;
    final com.android.internal.os.BatteryStatsImpl$Constants mConstants;
    private long[] mCpuFreqs;
    private long mCpuTimeReadsTrackingStartTime;
    protected com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader;
    protected com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader;
    protected com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader;
    protected com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader;
    final android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails;
    long mCurStepCpuSystemTime;
    long mCurStepCpuUserTime;
    int mCurStepMode;
    long mCurStepStatIOWaitTime;
    long mCurStepStatIdleTime;
    long mCurStepStatIrqTime;
    long mCurStepStatSoftIrqTime;
    long mCurStepStatSystemTime;
    long mCurStepStatUserTime;
    int mCurrentBatteryLevel;
    final android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker;
    final android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker;
    public final android.util.AtomicFile mDailyFile;
    final java.util.ArrayList mDailyItems;
    java.util.ArrayList mDailyPackageChanges;
    long mDailyStartTime;
    private final java.lang.Runnable mDeferSetCharging;
    int mDeviceIdleMode;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer;
    boolean mDeviceIdling;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer;
    boolean mDeviceLightIdling;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer;
    int mDischargeAmountScreenDoze;
    int mDischargeAmountScreenDozeSinceCharge;
    int mDischargeAmountScreenOff;
    int mDischargeAmountScreenOffSinceCharge;
    int mDischargeAmountScreenOn;
    int mDischargeAmountScreenOnSinceCharge;
    private com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter;
    int mDischargeCurrentLevel;
    private com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter;
    private com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter;
    int mDischargePlugLevel;
    private com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter;
    int mDischargeScreenDozeUnplugLevel;
    private com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter;
    int mDischargeScreenOffUnplugLevel;
    int mDischargeScreenOnUnplugLevel;
    int mDischargeStartLevel;
    final android.os.BatteryStats$LevelStepTracker mDischargeStepTracker;
    int mDischargeUnplugLevel;
    boolean mDistributeWakelockCpu;
    final java.util.ArrayList mDrawTimers;
    java.lang.String mEndPlatformVersion;
    private int mEstimatedBatteryCapacity;
    private com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync;
    int mFlashlightOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer;
    final java.util.ArrayList mFlashlightTurnedOnTimers;
    final java.util.ArrayList mFullTimers;
    final java.util.ArrayList mFullWifiLockTimers;
    boolean mGlobalWifiRunning;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer;
    int mGpsNesting;
    int mGpsSignalQualityBin;
    protected final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer;
    public android.os.Handler mHandler;
    boolean mHasBluetoothReporting;
    boolean mHasModemReporting;
    boolean mHasWifiReporting;
    protected boolean mHaveBatteryLevel;
    int mHighDischargeAmountSinceCharge;
    android.os.BatteryStats$HistoryItem mHistory;
    final android.os.BatteryStats$HistoryItem mHistoryAddTmp;
    long mHistoryBaseTime;
    final android.os.Parcel mHistoryBuffer;
    int mHistoryBufferLastPos;
    android.os.BatteryStats$HistoryItem mHistoryCache;
    final android.os.BatteryStats$HistoryItem mHistoryCur;
    android.os.BatteryStats$HistoryItem mHistoryEnd;
    private android.os.BatteryStats$HistoryItem mHistoryIterator;
    android.os.BatteryStats$HistoryItem mHistoryLastEnd;
    final android.os.BatteryStats$HistoryItem mHistoryLastLastWritten;
    final android.os.BatteryStats$HistoryItem mHistoryLastWritten;
    final android.os.BatteryStats$HistoryItem mHistoryReadTmp;
    final java.util.HashMap mHistoryTagPool;
    int mInitStepMode;
    private java.lang.String mInitialAcquireWakeName;
    private int mInitialAcquireWakeUid;
    boolean mInteractive;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer;
    private boolean mIsPerProcessStateCpuDataStale;
    final android.util.SparseIntArray mIsolatedUids;
    private boolean mIteratingHistory;
    protected com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders;
    private final com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats;
    private final android.util.LongSparseArray mKernelMemoryStats;
    protected com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader;
    private final com.android.internal.os.KernelWakelockReader mKernelWakelockReader;
    private final java.util.HashMap mKernelWakelockStats;
    private final com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo;
    int mLastChargeStepLevel;
    int mLastChargingStateLevel;
    int mLastDischargeStepLevel;
    long mLastHistoryElapsedRealtime;
    android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails;
    byte mLastHistoryStepLevel;
    long mLastIdleTimeStart;
    private android.telephony.ModemActivityInfo mLastModemActivityInfo;
    private android.net.NetworkStats mLastModemNetworkStats;
    protected java.util.ArrayList mLastPartialTimers;
    private long mLastRpmStatsUpdateTimeMs;
    long mLastStepCpuSystemTime;
    long mLastStepCpuUserTime;
    long mLastStepStatIOWaitTime;
    long mLastStepStatIdleTime;
    long mLastStepStatIrqTime;
    long mLastStepStatSoftIrqTime;
    long mLastStepStatSystemTime;
    long mLastStepStatUserTime;
    java.lang.String mLastWakeupReason;
    long mLastWakeupUptimeMs;
    private android.net.NetworkStats mLastWifiNetworkStats;
    long mLastWriteTime;
    long mLongestFullIdleTime;
    long mLongestLightIdleTime;
    int mLowDischargeAmountSinceCharge;
    int mMaxChargeStepLevel;
    private int mMaxLearnedBatteryCapacity;
    int mMinDischargeStepLevel;
    private int mMinLearnedBatteryCapacity;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer;
    long mMobileRadioActiveStartTime;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime;
    int mMobileRadioPowerState;
    int mModStepMode;
    com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity;
    private java.lang.String[] mModemIfaces;
    private final java.lang.Object mModemNetworkLock;
    final com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters;
    final com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters;
    private final android.util.Pools$Pool mNetworkStatsPool;
    int mNextHistoryTagIdx;
    long mNextMaxDailyDeadline;
    long mNextMinDailyDeadline;
    boolean mNoAutoReset;
    private int mNumAllUidCpuTimeReads;
    private long mNumBatchedSingleUidCpuTimeReads;
    private int mNumConnectivityChange;
    int mNumHistoryItems;
    int mNumHistoryTagChars;
    private long mNumSingleUidCpuTimeReads;
    private int mNumUidsRemoved;
    boolean mOnBattery;
    protected boolean mOnBatteryInternal;
    protected final com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase;
    protected final com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase;
    protected java.util.ArrayList mPartialTimers;
    protected java.util.Queue mPendingRemovedUids;
    protected final android.util.SparseIntArray mPendingUids;
    public boolean mPerProcStateCpuTimesAvailable;
    int mPhoneDataConnectionType;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer;
    boolean mPhoneOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer;
    private int mPhoneServiceState;
    private int mPhoneServiceStateRaw;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer;
    int mPhoneSignalStrengthBin;
    int mPhoneSignalStrengthBinRaw;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer;
    private int mPhoneSimStateRaw;
    private final com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback;
    protected com.android.internal.os.PowerProfile mPowerProfile;
    boolean mPowerSaveModeEnabled;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer;
    boolean mPretendScreenOff;
    public final com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback;
    int mReadHistoryChars;
    final android.os.BatteryStats$HistoryStepDetails mReadHistoryStepDetails;
    java.lang.String[] mReadHistoryStrings;
    int[] mReadHistoryUids;
    private boolean mReadOverflow;
    long mRealtime;
    long mRealtimeStart;
    public boolean mRecordAllHistory;
    protected boolean mRecordingHistory;
    private final java.util.HashMap mRpmStats;
    int mScreenBrightnessBin;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer;
    protected com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer;
    private final java.util.HashMap mScreenOffRpmStats;
    protected com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer;
    protected int mScreenState;
    int mSensorNesting;
    final android.util.SparseArray mSensorTimers;
    boolean mShuttingDown;
    long mStartClockTime;
    int mStartCount;
    java.lang.String mStartPlatformVersion;
    private final android.util.AtomicFile mStatsFile;
    long mTempTotalCpuSystemTimeUs;
    long mTempTotalCpuUserTimeUs;
    final android.os.BatteryStats$HistoryStepDetails mTmpHistoryStepDetails;
    private final com.android.internal.os.RailStats mTmpRailStats;
    private final com.android.internal.os.RpmStats mTmpRpmStats;
    private final com.android.internal.os.KernelWakelockStats mTmpWakelockStats;
    long mTrackRunningHistoryElapsedRealtime;
    long mTrackRunningHistoryUptime;
    final android.util.SparseArray mUidStats;
    long mUptime;
    long mUptimeStart;
    int mUsbDataState;
    protected com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider;
    int mVideoOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer;
    final java.util.ArrayList mVideoTurnedOnTimers;
    long[][] mWakeLockAllocationsUs;
    boolean mWakeLockImportant;
    int mWakeLockNesting;
    private final java.util.HashMap mWakeupReasonStats;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer;
    com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity;
    final android.util.SparseArray mWifiBatchedScanTimers;
    int mWifiFullLockNesting;
    private java.lang.String[] mWifiIfaces;
    int mWifiMulticastNesting;
    final java.util.ArrayList mWifiMulticastTimers;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer;
    private final java.lang.Object mWifiNetworkLock;
    boolean mWifiOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer;
    int mWifiRadioPowerState;
    final java.util.ArrayList mWifiRunningTimers;
    int mWifiScanNesting;
    final java.util.ArrayList mWifiScanTimers;
    int mWifiSignalStrengthBin;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer;
    int mWifiState;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer;
    int mWifiSupplState;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer;
    final java.util.ArrayList mWindowTimers;
    final java.util.concurrent.locks.ReentrantLock mWriteLock;

    static void <clinit>()
    {
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$6 $r0;

        <com.android.internal.os.BatteryStatsImpl: int WAKE_LOCK_WEIGHT> = 50;

        <com.android.internal.os.BatteryStatsImpl: int VERSION> = 186;

        <com.android.internal.os.BatteryStatsImpl: boolean USE_OLD_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: int USB_DATA_UNKNOWN> = 0;

        <com.android.internal.os.BatteryStatsImpl: int USB_DATA_DISCONNECTED> = 1;

        <com.android.internal.os.BatteryStatsImpl: int USB_DATA_CONNECTED> = 2;

        <com.android.internal.os.BatteryStatsImpl: java.lang.String TAG> = "BatteryStatsImpl";

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_STATUS_SHIFT> = 29;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_STATUS_MASK> = 7;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_PLUG_SHIFT> = 24;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_PLUG_MASK> = 3;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_MASK> = -16777216;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_HEALTH_SHIFT> = 26;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_HEALTH_MASK> = 7;

        <com.android.internal.os.BatteryStatsImpl: long RPM_STATS_UPDATE_FREQ_MS> = 1000L;

        <com.android.internal.os.BatteryStatsImpl: int NUM_WIFI_TX_LEVELS> = 1;

        <com.android.internal.os.BatteryStatsImpl: int NUM_BT_TX_LEVELS> = 1;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_RESET_STATS> = 4;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_POWER_CHANGE> = 2;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_CPU_UPDATE_NEEDED> = 1;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_CHARGING> = 3;

        <com.android.internal.os.BatteryStatsImpl: long MILLISECONDS_IN_YEAR> = 31536000000L;

        <com.android.internal.os.BatteryStatsImpl: double MILLISECONDS_IN_HOUR> = 3600000.0;

        <com.android.internal.os.BatteryStatsImpl: int MAX_LEVEL_STEPS> = 200;

        <com.android.internal.os.BatteryStatsImpl: int MAX_DAILY_ITEMS> = 10;

        <com.android.internal.os.BatteryStatsImpl: int MAGIC> = -1166707595;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_WAKELOCK_FLAG> = 4194304;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_MASK> = 524287;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_LONG> = 524287;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_INT> = 524286;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_ABS> = 524285;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE_MASK> = -33554432;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE_FLAG> = 1048576;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE2_FLAG> = 2097152;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_EVENT_FLAG> = 8388608;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_BATTERY_LEVEL_FLAG> = 524288;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_BATTERY_CHARGE_FLAG> = 16777216;

        <com.android.internal.os.BatteryStatsImpl: long DELAY_UPDATE_WAKELOCKS> = 5000L;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_MEMORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_ENERGY_CPU> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_ENERGY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG> = 0;

        <com.android.internal.os.BatteryStatsImpl: int BATTERY_PLUGGED_NONE> = 0;

        <com.android.internal.os.BatteryStatsImpl: int BATTERY_DELTA_LEVEL_FLAG> = 1;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label1;

        <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID> = 40;

        goto label2;

     label1:
        <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID> = 200;

     label2:
        $r0 = new com.android.internal.os.BatteryStatsImpl$6;

        specialinvoke $r0.<com.android.internal.os.BatteryStatsImpl$6: void <init>()>();

        <com.android.internal.os.BatteryStatsImpl: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$SystemClocks $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = new com.android.internal.os.BatteryStatsImpl$SystemClocks;

        specialinvoke $r1.<com.android.internal.os.BatteryStatsImpl$SystemClocks: void <init>()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks)>($r1);

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        com.android.internal.os.BatteryStatsImpl$SystemClocks $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new com.android.internal.os.BatteryStatsImpl$SystemClocks;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$SystemClocks: void <init>()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,android.os.Parcel)>($r2, r1);

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        com.android.internal.os.KernelWakelockReader $r2;
        com.android.internal.os.KernelWakelockStats $r3;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r4;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r5;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r6;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r7;
        com.android.internal.os.KernelMemoryBandwidthStats $r8;
        android.util.LongSparseArray $r9;
        android.util.SparseIntArray $r10, $r15;
        long $l0;
        com.android.internal.os.RpmStats $r11;
        com.android.internal.os.RailStats $r12;
        java.util.LinkedList $r13;
        com.android.internal.os.BatteryStatsImpl$1 $r14;
        android.util.SparseArray $r16, $r21, $r26;
        java.util.ArrayList $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r59;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r33, $r34;
        android.os.BatteryStats$HistoryEventTracker $r35;
        android.os.Parcel $r36;
        android.os.BatteryStats$HistoryItem $r37, $r38, $r39, $r40, $r42;
        java.util.HashMap $r41, $r60, $r61, $r62, $r63;
        byte $b1;
        android.os.BatteryStats$HistoryStepDetails $r43, $r44, $r45;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r46, $r47, $r48, $r49, $r52, $r53, $r54;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r50, $r51;
        android.os.BatteryStats$LevelStepTracker $r55, $r56, $r57, $r58;
        android.util.Pools$SynchronizedPool $r64;
        java.lang.Object $r65, $r68;
        java.lang.String[] $r66, $r69;
        android.net.NetworkStats $r67, $r70;
        android.telephony.ModemActivityInfo $r71;
        int[] $r72;
        com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache $r73;
        java.util.concurrent.locks.ReentrantLock $r74;
        com.android.internal.os.BatteryStatsImpl$Constants $r75;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new com.android.internal.os.KernelWakelockReader;

        specialinvoke $r2.<com.android.internal.os.KernelWakelockReader: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockReader mKernelWakelockReader> = $r2;

        $r3 = new com.android.internal.os.KernelWakelockStats;

        specialinvoke $r3.<com.android.internal.os.KernelWakelockStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockStats mTmpWakelockStats> = $r3;

        $r4 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        specialinvoke $r4.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader> = $r4;

        $r5 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

        specialinvoke $r5.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader> = $r5;

        $r6 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        specialinvoke $r6.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader> = $r6;

        $r7 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        specialinvoke $r7.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader> = $r7;

        $r8 = new com.android.internal.os.KernelMemoryBandwidthStats;

        specialinvoke $r8.<com.android.internal.os.KernelMemoryBandwidthStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats> = $r8;

        $r9 = new android.util.LongSparseArray;

        specialinvoke $r9.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats> = $r9;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable> = 1;

        $r10 = new android.util.SparseIntArray;

        specialinvoke $r10.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids> = $r10;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mCpuTimeReadsTrackingStartTime> = $l0;

        $r11 = new com.android.internal.os.RpmStats;

        specialinvoke $r11.<com.android.internal.os.RpmStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats> = $r11;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRpmStatsUpdateTimeMs> = -1000L;

        $r12 = new com.android.internal.os.RailStats;

        specialinvoke $r12.<com.android.internal.os.RailStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats> = $r12;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids> = $r13;

        $r14 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r14.<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging> = $r14;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider> = null;

        $r15 = new android.util.SparseIntArray;

        specialinvoke $r15.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r15;

        $r16 = new android.util.SparseArray;

        specialinvoke $r16.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r16;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r18;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDrawTimers> = $r20;

        $r21 = new android.util.SparseArray;

        specialinvoke $r21.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r21;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r24;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r25;

        $r26 = new android.util.SparseArray;

        specialinvoke $r26.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r27;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFlashlightTurnedOnTimers> = $r29;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mCameraTurnedOnTimers> = $r30;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mBluetoothScanOnTimers> = $r31;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r32;

        $r33 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r33.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r33;

        $r34 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r34.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r34;

        $r35 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r35.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r35;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r36 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r36;

        $r37 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r37.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r37;

        $r38 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r38.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r38;

        $r39 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r39.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r39;

        $r40 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r40.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r40;

        $r41 = new java.util.HashMap;

        specialinvoke $r41.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r41;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r42 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r42.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r42;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = null;

        $b1 = (byte) 0;

        r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel> = $b1;

        $r43 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r43.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails> = $r43;

        $r44 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r44.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mReadHistoryStepDetails> = $r44;

        $r45 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r45.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mTmpHistoryStepDetails> = $r45;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r46 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r46;

        r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin> = -1;

        $r47 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer> = $r47;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $i2 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        $r48 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r48;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $i3 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        $r49 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i3];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r49;

        $r50 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r50;

        $r51 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r51;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r52 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r52;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r53 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r53;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r54 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r54;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r55 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r55.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker> = $r55;

        $r56 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r56.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker> = $r56;

        $r57 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r57.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker> = $r57;

        $r58 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r58.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker> = $r58;

        r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline> = 0L;

        $r59 = new java.util.ArrayList;

        specialinvoke $r59.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems> = $r59;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryTimeToFullSeconds> = -1L;

        $r60 = new java.util.HashMap;

        specialinvoke $r60.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats> = $r60;

        $r61 = new java.util.HashMap;

        specialinvoke $r61.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats> = $r61;

        $r62 = new java.util.HashMap;

        specialinvoke $r62.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r62;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r63 = new java.util.HashMap;

        specialinvoke $r63.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r63;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        $r64 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r64.<android.util.Pools$SynchronizedPool: void <init>(int)>(6);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool> = $r64;

        $r65 = new java.lang.Object;

        specialinvoke $r65.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock> = $r65;

        $r66 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r66;

        $r67 = new android.net.NetworkStats;

        specialinvoke $r67.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats> = $r67;

        $r68 = new java.lang.Object;

        specialinvoke $r68.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock> = $r68;

        $r69 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces> = $r69;

        $r70 = new android.net.NetworkStats;

        specialinvoke $r70.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats> = $r70;

        $r71 = new android.telephony.ModemActivityInfo;

        $r72 = newarray (int)[0];

        specialinvoke $r71.<android.telephony.ModemActivityInfo: void <init>(long,int,int,int[],int)>(0L, 0, 0, $r72, 0);

        r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo> = $r71;

        $r73 = new com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache;

        specialinvoke $r73.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: void <init>(com.android.internal.os.BatteryStatsImpl,com.android.internal.os.BatteryStatsImpl$1)>(r0, null);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo> = $r73;

        $r74 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r74.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r74;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void init(com.android.internal.os.BatteryStatsImpl$Clocks)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider> = null;

        $r75 = new com.android.internal.os.BatteryStatsImpl$Constants;

        specialinvoke $r75.<com.android.internal.os.BatteryStatsImpl$Constants: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Handler)>(r0, null);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants> = $r75;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    public void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;
        android.os.Parcel r2, $r37, $r78;
        com.android.internal.os.KernelWakelockReader $r3;
        com.android.internal.os.KernelWakelockStats $r4;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r5;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r6;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r7;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r8;
        com.android.internal.os.KernelMemoryBandwidthStats $r9;
        android.util.LongSparseArray $r10;
        android.util.SparseIntArray $r11, $r16;
        long $l0;
        com.android.internal.os.RpmStats $r12;
        com.android.internal.os.RailStats $r13;
        java.util.LinkedList $r14;
        com.android.internal.os.BatteryStatsImpl$1 $r15;
        android.util.SparseArray $r17, $r22, $r27;
        java.util.ArrayList $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r60;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r34, $r35;
        android.os.BatteryStats$HistoryEventTracker $r36;
        android.os.BatteryStats$HistoryItem $r38, $r39, $r40, $r41, $r43;
        java.util.HashMap $r42, $r61, $r62, $r63, $r64;
        byte $b1;
        android.os.BatteryStats$HistoryStepDetails $r44, $r45, $r46;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r47, $r48, $r49, $r50, $r53, $r54, $r55;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r51, $r52;
        android.os.BatteryStats$LevelStepTracker $r56, $r57, $r58, $r59;
        android.util.Pools$SynchronizedPool $r65;
        java.lang.Object $r66, $r69;
        java.lang.String[] $r67, $r70;
        android.net.NetworkStats $r68, $r71;
        android.telephony.ModemActivityInfo $r72;
        int[] $r73;
        com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache $r74;
        java.util.concurrent.locks.ReentrantLock $r75;
        com.android.internal.os.BatteryStatsImpl$Constants $r76;
        com.android.internal.os.BatteryStatsHistory $r77;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r2 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r3 = new com.android.internal.os.KernelWakelockReader;

        specialinvoke $r3.<com.android.internal.os.KernelWakelockReader: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockReader mKernelWakelockReader> = $r3;

        $r4 = new com.android.internal.os.KernelWakelockStats;

        specialinvoke $r4.<com.android.internal.os.KernelWakelockStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockStats mTmpWakelockStats> = $r4;

        $r5 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        specialinvoke $r5.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader> = $r5;

        $r6 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

        specialinvoke $r6.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader> = $r6;

        $r7 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        specialinvoke $r7.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader> = $r7;

        $r8 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        specialinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader> = $r8;

        $r9 = new com.android.internal.os.KernelMemoryBandwidthStats;

        specialinvoke $r9.<com.android.internal.os.KernelMemoryBandwidthStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats> = $r9;

        $r10 = new android.util.LongSparseArray;

        specialinvoke $r10.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats> = $r10;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable> = 1;

        $r11 = new android.util.SparseIntArray;

        specialinvoke $r11.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids> = $r11;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mCpuTimeReadsTrackingStartTime> = $l0;

        $r12 = new com.android.internal.os.RpmStats;

        specialinvoke $r12.<com.android.internal.os.RpmStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats> = $r12;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRpmStatsUpdateTimeMs> = -1000L;

        $r13 = new com.android.internal.os.RailStats;

        specialinvoke $r13.<com.android.internal.os.RailStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats> = $r13;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids> = $r14;

        $r15 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r15.<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging> = $r15;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider> = null;

        $r16 = new android.util.SparseIntArray;

        specialinvoke $r16.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r16;

        $r17 = new android.util.SparseArray;

        specialinvoke $r17.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r18;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r20;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDrawTimers> = $r21;

        $r22 = new android.util.SparseArray;

        specialinvoke $r22.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r24;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r26;

        $r27 = new android.util.SparseArray;

        specialinvoke $r27.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r27;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r29;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFlashlightTurnedOnTimers> = $r30;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mCameraTurnedOnTimers> = $r31;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mBluetoothScanOnTimers> = $r32;

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r33;

        $r34 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r34.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r34;

        $r35 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r35.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r35;

        $r36 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r36.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r36;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r37 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r37;

        $r38 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r38.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r38;

        $r39 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r39.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r39;

        $r40 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r40.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r40;

        $r41 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r41.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r41;

        $r42 = new java.util.HashMap;

        specialinvoke $r42.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r42;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r43 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r43.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r43;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = null;

        $b1 = (byte) 0;

        r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel> = $b1;

        $r44 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r44.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails> = $r44;

        $r45 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r45.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mReadHistoryStepDetails> = $r45;

        $r46 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r46.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mTmpHistoryStepDetails> = $r46;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r47 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r47;

        r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin> = -1;

        $r48 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer> = $r48;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $i2 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        $r49 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r49;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $i3 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        $r50 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i3];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r50;

        $r51 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r51;

        $r52 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r52;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r53 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r53;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r54 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r54;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r55 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r55;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r56 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r56.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker> = $r56;

        $r57 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r57.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker> = $r57;

        $r58 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r58.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker> = $r58;

        $r59 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r59.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker> = $r59;

        r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline> = 0L;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems> = $r60;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryTimeToFullSeconds> = -1L;

        $r61 = new java.util.HashMap;

        specialinvoke $r61.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats> = $r61;

        $r62 = new java.util.HashMap;

        specialinvoke $r62.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats> = $r62;

        $r63 = new java.util.HashMap;

        specialinvoke $r63.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r63;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r64 = new java.util.HashMap;

        specialinvoke $r64.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r64;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        $r65 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r65.<android.util.Pools$SynchronizedPool: void <init>(int)>(6);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool> = $r65;

        $r66 = new java.lang.Object;

        specialinvoke $r66.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock> = $r66;

        $r67 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r67;

        $r68 = new android.net.NetworkStats;

        specialinvoke $r68.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats> = $r68;

        $r69 = new java.lang.Object;

        specialinvoke $r69.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock> = $r69;

        $r70 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces> = $r70;

        $r71 = new android.net.NetworkStats;

        specialinvoke $r71.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats> = $r71;

        $r72 = new android.telephony.ModemActivityInfo;

        $r73 = newarray (int)[0];

        specialinvoke $r72.<android.telephony.ModemActivityInfo: void <init>(long,int,int,int[],int)>(0L, 0, 0, $r73, 0);

        r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo> = $r72;

        $r74 = new com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache;

        specialinvoke $r74.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: void <init>(com.android.internal.os.BatteryStatsImpl,com.android.internal.os.BatteryStatsImpl$1)>(r0, null);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo> = $r74;

        $r75 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r75.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r75;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void init(com.android.internal.os.BatteryStatsImpl$Clocks)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync> = null;

        $r76 = new com.android.internal.os.BatteryStatsImpl$Constants;

        specialinvoke $r76.<com.android.internal.os.BatteryStatsImpl$Constants: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Handler)>(r0, null);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants> = $r76;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        $r77 = new com.android.internal.os.BatteryStatsHistory;

        $r78 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        specialinvoke $r77.<com.android.internal.os.BatteryStatsHistory: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Parcel)>(r0, $r78);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory> = $r77;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>(r2);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback> = null;

        return;
    }

    private void <init>(com.android.internal.os.BatteryStatsImpl$Clocks, java.io.File, android.os.Handler, com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback, com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback, com.android.internal.os.BatteryStatsImpl$UserInfoProvider)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.File r1, $r80, $r84, $r86;
        android.os.Handler r2;
        com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback r3;
        com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback r4;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider r5;
        com.android.internal.os.KernelWakelockReader $r6;
        com.android.internal.os.KernelWakelockStats $r7;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r8;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r9;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r10;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r11;
        com.android.internal.os.KernelMemoryBandwidthStats $r12;
        android.util.LongSparseArray $r13;
        android.util.SparseIntArray $r14, $r19;
        long $l0, $l8, $l9, $l10, $l11;
        com.android.internal.os.RpmStats $r15;
        com.android.internal.os.RailStats $r16;
        java.util.LinkedList $r17;
        com.android.internal.os.BatteryStatsImpl$1 $r18;
        android.util.SparseArray $r20, $r25, $r30;
        java.util.ArrayList $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r63;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r37, $r38, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r123, $r125, $r127, $r130, $r133, $r135, $r137, $r139, $r142, $r145, $r148, $r151, $r154, $r157, $r160, $r163, $r166, $r168, $r170, $r172, $r174, $r178, $r182, $r186, $r190, $r194, $r197, $r200, $r204, $r208;
        android.os.BatteryStats$HistoryEventTracker $r39;
        android.os.Parcel $r40, $r82, $r212;
        android.os.BatteryStats$HistoryItem $r41, $r42, $r43, $r44, $r46;
        java.util.HashMap $r45, $r64, $r65, $r66, $r67;
        byte $b1;
        android.os.BatteryStats$HistoryStepDetails $r47, $r48, $r49;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r50, $r51, $r52, $r53, $r56, $r57, $r58, $r180, $r184, $r188, $r192, $r202, $r206, $r210;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r54, $r55, $r195, $r198;
        android.os.BatteryStats$LevelStepTracker $r59, $r60, $r61, $r62;
        android.util.Pools$SynchronizedPool $r68;
        java.lang.Object $r69, $r72;
        java.lang.String[] $r70, $r73;
        android.net.NetworkStats $r71, $r74;
        android.telephony.ModemActivityInfo $r75;
        int[] $r76;
        com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache $r77;
        java.util.concurrent.locks.ReentrantLock $r78;
        android.util.AtomicFile $r79, $r83, $r85;
        com.android.internal.os.BatteryStatsHistory $r81, $r211;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r87;
        android.os.Looper $r88;
        com.android.internal.os.BatteryStatsImpl$Constants $r89;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r126, $r129, $r138, $r141, $r144, $r147, $r150, $r153, $r156, $r159, $r162, $r177, $r181, $r185, $r189, $r199, $r203, $r207;
        com.android.internal.os.BatteryStatsImpl$Clocks $r92, $r95, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r128, $r131, $r140, $r143, $r146, $r149, $r152, $r155, $r158, $r161, $r164, $r175, $r176, $r179, $r183, $r187, $r191, $r201, $r205, $r209, r213;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r120, $r122, $r124;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r132, $r134, $r136, $r165, $r167, $r169, $r171, $r173, $r193, $r196;
        java.lang.String r215;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r213 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback;

        r4 := @parameter4: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback;

        r5 := @parameter5: com.android.internal.os.BatteryStatsImpl$UserInfoProvider;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r6 = new com.android.internal.os.KernelWakelockReader;

        specialinvoke $r6.<com.android.internal.os.KernelWakelockReader: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockReader mKernelWakelockReader> = $r6;

        $r7 = new com.android.internal.os.KernelWakelockStats;

        specialinvoke $r7.<com.android.internal.os.KernelWakelockStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockStats mTmpWakelockStats> = $r7;

        $r8 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        specialinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader> = $r8;

        $r9 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

        specialinvoke $r9.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader> = $r9;

        $r10 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        specialinvoke $r10.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader> = $r10;

        $r11 = new com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        specialinvoke $r11.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader> = $r11;

        $r12 = new com.android.internal.os.KernelMemoryBandwidthStats;

        specialinvoke $r12.<com.android.internal.os.KernelMemoryBandwidthStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats> = $r12;

        $r13 = new android.util.LongSparseArray;

        specialinvoke $r13.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats> = $r13;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable> = 1;

        $r14 = new android.util.SparseIntArray;

        specialinvoke $r14.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids> = $r14;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mCpuTimeReadsTrackingStartTime> = $l0;

        $r15 = new com.android.internal.os.RpmStats;

        specialinvoke $r15.<com.android.internal.os.RpmStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats> = $r15;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRpmStatsUpdateTimeMs> = -1000L;

        $r16 = new com.android.internal.os.RailStats;

        specialinvoke $r16.<com.android.internal.os.RailStats: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats> = $r16;

        $r17 = new java.util.LinkedList;

        specialinvoke $r17.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids> = $r17;

        $r18 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r18.<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider> = null;

        $r19 = new android.util.SparseIntArray;

        specialinvoke $r19.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r19;

        $r20 = new android.util.SparseArray;

        specialinvoke $r20.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r20;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r21;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r22;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDrawTimers> = $r24;

        $r25 = new android.util.SparseArray;

        specialinvoke $r25.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r27;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r29;

        $r30 = new android.util.SparseArray;

        specialinvoke $r30.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r30;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r31;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r32;

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFlashlightTurnedOnTimers> = $r33;

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mCameraTurnedOnTimers> = $r34;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mBluetoothScanOnTimers> = $r35;

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r36;

        $r37 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r37.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r37;

        $r38 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r38.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>(boolean)>(1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r38;

        $r39 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r39.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r39;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r40 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r40;

        $r41 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r41.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r41;

        $r42 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r42.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r42;

        $r43 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r43.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r43;

        $r44 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r44.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r44;

        $r45 = new java.util.HashMap;

        specialinvoke $r45.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r45;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r46 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r46.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r46;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = null;

        $b1 = (byte) 0;

        r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel> = $b1;

        $r47 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r47.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails> = $r47;

        $r48 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r48.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mReadHistoryStepDetails> = $r48;

        $r49 = new android.os.BatteryStats$HistoryStepDetails;

        specialinvoke $r49.<android.os.BatteryStats$HistoryStepDetails: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mTmpHistoryStepDetails> = $r49;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r50 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r50;

        r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin> = -1;

        $r51 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer> = $r51;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $i2 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        $r52 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i2];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r52;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $i3 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        $r53 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[$i3];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r53;

        $r54 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r54;

        $r55 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[10];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r55;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r56 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r56;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r57 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r57;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r58 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r58;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r59 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r59.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker> = $r59;

        $r60 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r60.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker> = $r60;

        $r61 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r61.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(200);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker> = $r61;

        $r62 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r62.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(400);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker> = $r62;

        r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline> = 0L;

        $r63 = new java.util.ArrayList;

        specialinvoke $r63.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems> = $r63;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryTimeToFullSeconds> = -1L;

        $r64 = new java.util.HashMap;

        specialinvoke $r64.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats> = $r64;

        $r65 = new java.util.HashMap;

        specialinvoke $r65.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats> = $r65;

        $r66 = new java.util.HashMap;

        specialinvoke $r66.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r66;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r67 = new java.util.HashMap;

        specialinvoke $r67.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r67;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        $r68 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r68.<android.util.Pools$SynchronizedPool: void <init>(int)>(6);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool> = $r68;

        $r69 = new java.lang.Object;

        specialinvoke $r69.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock> = $r69;

        $r70 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r70;

        $r71 = new android.net.NetworkStats;

        specialinvoke $r71.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats> = $r71;

        $r72 = new java.lang.Object;

        specialinvoke $r72.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock> = $r72;

        $r73 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces> = $r73;

        $r74 = new android.net.NetworkStats;

        specialinvoke $r74.<android.net.NetworkStats: void <init>(long,int)>(0L, -1);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats> = $r74;

        $r75 = new android.telephony.ModemActivityInfo;

        $r76 = newarray (int)[0];

        specialinvoke $r75.<android.telephony.ModemActivityInfo: void <init>(long,int,int,int[],int)>(0L, 0, 0, $r76, 0);

        r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo> = $r75;

        $r77 = new com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache;

        specialinvoke $r77.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: void <init>(com.android.internal.os.BatteryStatsImpl,com.android.internal.os.BatteryStatsImpl$1)>(r0, null);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo> = $r77;

        $r78 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r78.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r78;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void init(com.android.internal.os.BatteryStatsImpl$Clocks)>(r213);

        if r1 != null goto label01;

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile> = null;

        $r211 = new com.android.internal.os.BatteryStatsHistory;

        $r212 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        specialinvoke $r211.<com.android.internal.os.BatteryStatsHistory: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Parcel)>(r0, $r212);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory> = $r211;

        goto label02;

     label01:
        $r79 = new android.util.AtomicFile;

        $r80 = new java.io.File;

        specialinvoke $r80.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats.bin");

        specialinvoke $r79.<android.util.AtomicFile: void <init>(java.io.File)>($r80);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile> = $r79;

        $r81 = new com.android.internal.os.BatteryStatsHistory;

        $r82 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        specialinvoke $r81.<com.android.internal.os.BatteryStatsHistory: void <init>(com.android.internal.os.BatteryStatsImpl,java.io.File,android.os.Parcel)>(r0, r1, $r82);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory> = $r81;

     label02:
        $r83 = new android.util.AtomicFile;

        $r84 = new java.io.File;

        specialinvoke $r84.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats-checkin.bin");

        specialinvoke $r83.<android.util.AtomicFile: void <init>(java.io.File)>($r84);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile> = $r83;

        $r85 = new android.util.AtomicFile;

        $r86 = new java.io.File;

        specialinvoke $r86.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats-daily.xml");

        specialinvoke $r85.<android.util.AtomicFile: void <init>(java.io.File)>($r86);

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile> = $r85;

        $r87 = new com.android.internal.os.BatteryStatsImpl$MyHandler;

        $r88 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r87.<com.android.internal.os.BatteryStatsImpl$MyHandler: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Looper)>(r0, $r88);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler> = $r87;

        $r89 = new com.android.internal.os.BatteryStatsImpl$Constants;

        specialinvoke $r89.<com.android.internal.os.BatteryStatsImpl$Constants: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Handler)>(r0, $r87);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants> = $r89;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i5;

        $r90 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r92 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r91 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r90.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r92, null, -1, null, $r91);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = $r90;

        $r93 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r95 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r94 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r95, null, -1, null, $r94);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer> = $r93;

        i19 = 0;

     label03:
        if i19 >= 5 goto label04;

        $r210 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r207 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r209 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i18 = -100 - i19;

        $r208 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r207.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r209, null, $i18, null, $r208);

        $r210[i19] = $r207;

        i19 = i19 + 1;

        goto label03;

     label04:
        $r96 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r98 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r97 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r96.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r98, null, -10, null, $r97);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer> = $r96;

        $r99 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r101 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r100 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r99.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r101, null, -2, null, $r100);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer> = $r99;

        $r102 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r104 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r103 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r102.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r104, null, -11, null, $r103);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer> = $r102;

        $r105 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r107 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r106 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r105.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r107, null, -14, null, $r106);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer> = $r105;

        $r108 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r110 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r109 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r108.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r110, null, -15, null, $r109);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer> = $r108;

        $r111 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r113 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r112 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r111.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r113, null, -12, null, $r112);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer> = $r111;

        $r114 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r116 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r115 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r114.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r116, null, -3, null, $r115);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = $r114;

        i20 = 0;

     label05:
        $i6 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i20 >= $i6 goto label06;

        $r206 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r203 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r205 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i17 = -200 - i20;

        $r204 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r203.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r205, null, $i17, null, $r204);

        $r206[i20] = $r203;

        i20 = i20 + 1;

        goto label05;

     label06:
        $r117 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r119 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r118 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r117.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r119, null, -199, null, $r118);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = $r117;

        i21 = 0;

     label07:
        $i7 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i21 >= $i7 goto label08;

        $r202 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r199 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r201 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i16 = -300 - i21;

        $r200 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r199.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r201, null, $i16, null, $r200);

        $r202[i21] = $r199;

        i21 = i21 + 1;

        goto label07;

     label08:
        i22 = 0;

     label09:
        if i22 >= 10 goto label10;

        $r195 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r193 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r194 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r193.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r194);

        $r195[i22] = $r193;

        $r198 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r196 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r197 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r196.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r197);

        $r198[i22] = $r196;

        i22 = i22 + 1;

        goto label09;

     label10:
        $r120 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r121 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r120.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int)>($r121, 1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity> = $r120;

        $r122 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r123 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r122.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int)>($r123, 1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity> = $r122;

        $r124 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r125 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r124.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int)>($r125, 5);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity> = $r124;

        $r126 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r128 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r127 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r126.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r128, null, -400, null, $r127);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer> = $r126;

        $r129 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r131 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r130 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r129.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r131, null, -401, null, $r130);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer> = $r129;

        $r132 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r133 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r132.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r133);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime> = $r132;

        $r134 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r135 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r134.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r135);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime> = $r134;

        $r136 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r137 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r136.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r137);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount> = $r136;

        $r138 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r140 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r139 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r138.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r140, null, 23, null, $r139);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer> = $r138;

        $r141 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r143 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r142 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r141.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r143, null, -4, null, $r142);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = $r141;

        $r144 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r146 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r145 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r144.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r146, null, -5, null, $r145);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = $r144;

        i23 = 0;

     label11:
        if i23 >= 8 goto label12;

        $r192 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r189 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r191 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i15 = -600 - i23;

        $r190 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r189.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r191, null, $i15, null, $r190);

        $r192[i23] = $r189;

        i23 = i23 + 1;

        goto label11;

     label12:
        i24 = 0;

     label13:
        if i24 >= 13 goto label14;

        $r188 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r185 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r187 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i14 = -700 - i24;

        $r186 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r185.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r187, null, $i14, null, $r186);

        $r188[i24] = $r185;

        i24 = i24 + 1;

        goto label13;

     label14:
        i25 = 0;

     label15:
        if i25 >= 5 goto label16;

        $r184 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r181 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r183 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i13 = -800 - i25;

        $r182 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r181.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r183, null, $i13, null, $r182);

        $r184[i25] = $r181;

        i25 = i25 + 1;

        goto label15;

     label16:
        $r147 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r149 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r148 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r147.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r149, null, -900, null, $r148);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer> = $r147;

        i26 = 0;

     label17:
        if i26 >= 2 goto label18;

        $r180 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r177 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r179 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i12 = -1000 - i26;

        $r178 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r177.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r179, null, $i12, null, $r178);

        $r180[i26] = $r177;

        i26 = i26 + 1;

        goto label17;

     label18:
        $r150 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r152 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r151 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r150.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r152, null, -7, null, $r151);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer> = $r150;

        $r153 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r155 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r154 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r153.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r155, null, -8, null, $r154);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer> = $r153;

        $r156 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r158 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r157 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r156.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r158, null, -9, null, $r157);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer> = $r156;

        $r159 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r161 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r160 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r159.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r161, null, -13, null, $r160);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer> = $r159;

        $r162 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r164 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r163 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r162.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r164, null, -14, null, $r163);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer> = $r162;

        $r165 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r166 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r165.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r166);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter> = $r165;

        $r167 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r168 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r167.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r168);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter> = $r167;

        $r169 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r170 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r169.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r170);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter> = $r169;

        $r171 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r172 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r171.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r172);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter> = $r171;

        $r173 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r174 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r173.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r174);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter> = $r173;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 0;

        $r175 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l8 = interfaceinvoke $r175.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l9 = $l8 * 1000L;

        $r176 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l10 = interfaceinvoke $r176.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l11 = $l10 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes(long,long)>($l9, $l11);

        r215 = <android.os.Build: java.lang.String ID>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = r215;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = r215;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDailyDeadlineLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback> = r3;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback> = r4;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider> = r5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode> = 0;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(21, 0);

        return;
    }

    public void <init>(java.io.File, android.os.Handler, com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback, com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback, com.android.internal.os.BatteryStatsImpl$UserInfoProvider)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.File r1;
        android.os.Handler r2;
        com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback r3;
        com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback r4;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider r5;
        com.android.internal.os.BatteryStatsImpl$SystemClocks $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback;

        r4 := @parameter3: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback;

        r5 := @parameter4: com.android.internal.os.BatteryStatsImpl$UserInfoProvider;

        $r6 = new com.android.internal.os.BatteryStatsImpl$SystemClocks;

        specialinvoke $r6.<com.android.internal.os.BatteryStatsImpl$SystemClocks: void <init>()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,java.io.File,android.os.Handler,com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback,com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback,com.android.internal.os.BatteryStatsImpl$UserInfoProvider)>($r6, r1, r2, r3, r4, r5);

        return;
    }

    static int access$008(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumUidsRemoved>;

        $i1 = i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumUidsRemoved> = $i1;

        return i0;
    }

    static com.android.internal.os.BatteryStatsImpl$BatteryCallback access$100(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback>;

        return $r1;
    }

    static boolean access$1000(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl,boolean)>(r0, z0);

        return $z1;
    }

    static boolean access$1100(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][], boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][] r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][];

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][],boolean)>(r0, z0);

        return $z1;
    }

    static void access$1200(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl)
    {
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl)>(r0);

        return;
    }

    static void access$1300(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][] r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])>(r0);

        return;
    }

    static com.android.internal.os.BatteryStatsImpl$ExternalStatsSync access$1600(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        return $r1;
    }

    static long access$1702(com.android.internal.os.BatteryStatsImpl, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter1: long;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNumSingleUidCpuTimeReads> = l0;

        return l0;
    }

    static long access$1708(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mNumSingleUidCpuTimeReads>;

        $l1 = 1L + l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNumSingleUidCpuTimeReads> = $l1;

        return l0;
    }

    static long access$1802(com.android.internal.os.BatteryStatsImpl, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter1: long;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNumBatchedSingleUidCpuTimeReads> = l0;

        return l0;
    }

    static long access$1808(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mNumBatchedSingleUidCpuTimeReads>;

        $l1 = 1L + l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mNumBatchedSingleUidCpuTimeReads> = $l1;

        return l0;
    }

    static boolean access$2002(com.android.internal.os.BatteryStatsImpl, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIsPerProcessStateCpuDataStale> = z0;

        return z0;
    }

    static long access$2102(com.android.internal.os.BatteryStatsImpl, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter1: long;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCpuTimeReadsTrackingStartTime> = l0;

        return l0;
    }

    static void access$2200(com.android.internal.os.BatteryStatsImpl, android.os.Parcel, android.util.AtomicFile)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.util.AtomicFile r2;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.util.AtomicFile;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk(android.os.Parcel,android.util.AtomicFile)>(r1, r2);

        return;
    }

    static int access$400()
    {
        int $i0;

        $i0 = <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID>;

        return $i0;
    }

    static void access$500(com.android.internal.os.BatteryStatsImpl, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteUsbConnectionStateLocked(boolean)>(z0);

        return;
    }

    static void access$600(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r0);

        return;
    }

    static void access$700(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>(r0);

        return;
    }

    static boolean access$800(com.android.internal.os.BatteryStatsImpl$TimeBaseObs, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs,boolean)>(r0, z0);

        return $z1;
    }

    static boolean access$900(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[], boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[];

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[],boolean)>(r0, z0);

        return $z1;
    }

    private void addHistoryBufferLocked(long, byte, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l3, $l4;
        byte b1;
        android.os.BatteryStats$HistoryItem r1, $r4, $r5, $r6, $r7, $r8, r10, r11;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.os.Parcel $r3, $r9;
        int $i2, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        b1 := @parameter1: byte;

        r1 := @parameter2: android.os.BatteryStats$HistoryItem;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i2 = virtualinvoke $r3.<android.os.Parcel: int dataPosition()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = $i2;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r5.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r4);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l4 = $l3 + l0;

        virtualinvoke $r6.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l4, b1, r1);

        r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i6 = r10.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates>;

        $i7 = $i6 & $i5;

        r10.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i9 = r11.<android.os.BatteryStats$HistoryItem: int states2>;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2>;

        $i10 = $i9 & $i8;

        r11.<android.os.BatteryStats$HistoryItem: int states2> = $i10;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem,android.os.BatteryStats$HistoryItem)>($r9, $r8, $r7);

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = l0;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

        r1.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = null;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t do this while iterating history!");

        throw $r2;
    }

    private void addModemTxPowerToHistory(android.telephony.ModemActivityInfo)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        java.lang.Object $r3, $r5;
        android.telephony.ModemActivityInfo$TransmitPower $r4, $r6;
        java.lang.Throwable $r7;
        android.telephony.ModemActivityInfo r8;
        java.util.List r9;
        android.os.BatteryStats$HistoryItem r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r8 := @parameter0: android.telephony.ModemActivityInfo;

        entermonitor r0;

        if r8 != null goto label01;

        exitmonitor r0;

        return;

     label01:
        r9 = virtualinvoke r8.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

     label02:
        if r9 == null goto label15;

     label03:
        $i2 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i2 == 5 goto label05;

     label04:
        goto label15;

     label05:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

     label06:
        i8 = 0;

        i9 = 1;

     label07:
        $i3 = interfaceinvoke r9.<java.util.List: int size()>();

        if i9 >= $i3 goto label12;

     label08:
        i10 = i8;

     label09:
        $r3 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i9);

        $r4 = (android.telephony.ModemActivityInfo$TransmitPower) $r3;

        $i6 = virtualinvoke $r4.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        $r5 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r6 = (android.telephony.ModemActivityInfo$TransmitPower) $r5;

        $i7 = virtualinvoke $r6.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        if $i6 <= $i7 goto label11;

     label10:
        i10 = i9;

     label11:
        i9 = i9 + 1;

        i8 = i10;

        goto label07;

     label12:
        if i8 != 4 goto label14;

     label13:
        r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r10.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 | 524288;

        r10.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

     label14:
        exitmonitor r0;

        return;

     label15:
        exitmonitor r0;

        return;

     label16:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    private void addPackageChange(android.os.BatteryStats$PackageChange)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$PackageChange r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$PackageChange;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges> = $r4;

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    private int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        byte $b0;
        int $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        short $s2;
        char $c6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $b0 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $i1 = $b0 << 25;

        $i5 = $i1 & -33554432;

        $s2 = r1.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i3 = $s2 << 15;

        $i4 = $i3 & 33521664;

        $i9 = $i5 | $i4;

        $c6 = r1.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i7 = $c6 << 1;

        $i8 = $i7 & 32766;

        $i10 = $i9 | $i8;

        return $i10;
    }

    private int buildStateInt(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        byte $b0, $b1, $b2, $b3, $b4, $b5, b6, $b7, $b8, $b10, $b11, $b14;
        int $i9, $i12, $i13, $i15, $i16, $i17, $i18, $i19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        b6 = 0;

        $b0 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b1 = $b0 & 1;

        if $b1 == 0 goto label1;

        b6 = 1;

        goto label3;

     label1:
        $b2 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b3 = $b2 & 2;

        if $b3 == 0 goto label2;

        b6 = 2;

        goto label3;

     label2:
        $b4 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b5 = $b4 & 4;

        if $b5 == 0 goto label3;

        b6 = 3;

     label3:
        $b7 = r1.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $b8 = $b7 & 7;

        $i9 = $b8 << 29;

        $b10 = r1.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        $b11 = $b10 & 7;

        $i12 = $b11 << 26;

        $i13 = $i9 | $i12;

        $b14 = b6 & 3;

        $i15 = $b14 << 24;

        $i16 = $i13 | $i15;

        $i17 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i18 = $i17 & 16777215;

        $i19 = $i16 | $i18;

        return $i19;
    }

    private void commitPendingDataToDisk(android.os.Parcel, android.util.AtomicFile)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        long l0, $l1, $l2;
        java.util.concurrent.locks.ReentrantLock $r2, $r4, $r7;
        byte[] $r3;
        java.lang.Throwable $r5, $r6;
        android.util.AtomicFile r8;
        java.io.FileOutputStream r9, r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r8 := @parameter1: android.util.AtomicFile;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r9 = null;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label02:
        r9 = null;

     label03:
        r10 = virtualinvoke r8.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label04:
        r9 = r10;

     label05:
        $r3 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r10.<java.io.FileOutputStream: void write(byte[])>($r3);

     label06:
        r9 = r10;

     label07:
        virtualinvoke r10.<java.io.FileOutputStream: void flush()>();

     label08:
        r9 = r10;

     label09:
        virtualinvoke r8.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r10);

     label10:
        r9 = r10;

     label11:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 - l0;

        staticinvoke <com.android.internal.logging.EventLogTags: void writeCommitSysConfigFile(java.lang.String,long)>("batterystats", $l2);

     label12:
        goto label16;

     label13:
        $r6 := @caughtexception;

        goto label17;

     label14:
        $r5 := @caughtexception;

     label15:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Error writing battery statistics", $r5);

        virtualinvoke r8.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r9);

     label16:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label17:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    private void computeHistoryStepDetails(android.os.BatteryStats$HistoryStepDetails, android.os.BatteryStats$HistoryStepDetails)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i6, $i10, $i14, $i18, $i22, $i26, $i30, $i34, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i79, i80, i81, i82;
        long $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l21, $l23, $l24, $l25, $l27, $l28, $l29, $l31, $l32, $l33, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l69, $l70, $l71, $l72, $l73, $l74, $l75, $l76, $l77, $l78;
        android.util.SparseArray $r1, $r2, $r4, $r5;
        java.lang.Object $r3, $r6;
        android.os.BatteryStats$HistoryStepDetails r7, r8, r9;
        com.android.internal.os.BatteryStatsImpl$Uid r10, r11;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r7 := @parameter0: android.os.BatteryStats$HistoryStepDetails;

        r8 := @parameter1: android.os.BatteryStats$HistoryStepDetails;

        if r8 == null goto label01;

        r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mTmpHistoryStepDetails>;

        goto label02;

     label01:
        r9 = r7;

     label02:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestImmediateCpuUpdate()>();

        if r8 != null goto label05;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i79 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i80 = 0;

     label03:
        if i80 >= i79 goto label04;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i80);

        r10 = (com.android.internal.os.BatteryStatsImpl$Uid) $r6;

        $l77 = r10.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepUserTime>;

        r10.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepUserTime> = $l77;

        $l78 = r10.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepSystemTime>;

        r10.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepSystemTime> = $l78;

        i80 = i80 + 1;

        goto label03;

     label04:
        $l69 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuUserTime> = $l69;

        $l70 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuSystemTime> = $l70;

        $l71 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatUserTime> = $l71;

        $l72 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSystemTime> = $l72;

        $l73 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIOWaitTime> = $l73;

        $l74 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIrqTime> = $l74;

        $l75 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSoftIrqTime> = $l75;

        $l76 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIdleTime> = $l76;

        virtualinvoke r9.<android.os.BatteryStats$HistoryStepDetails: void clear()>();

        return;

     label05:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime>;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuUserTime>;

        $l5 = $l4 - $l3;

        $i6 = (int) $l5;

        r7.<android.os.BatteryStats$HistoryStepDetails: int userTime> = $i6;

        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime>;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuSystemTime>;

        $l9 = $l8 - $l7;

        $i10 = (int) $l9;

        r7.<android.os.BatteryStats$HistoryStepDetails: int systemTime> = $i10;

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime>;

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatUserTime>;

        $l13 = $l12 - $l11;

        $i14 = (int) $l13;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statUserTime> = $i14;

        $l16 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime>;

        $l15 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSystemTime>;

        $l17 = $l16 - $l15;

        $i18 = (int) $l17;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statSystemTime> = $i18;

        $l20 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime>;

        $l19 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIOWaitTime>;

        $l21 = $l20 - $l19;

        $i22 = (int) $l21;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statIOWaitTime> = $i22;

        $l24 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime>;

        $l23 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIrqTime>;

        $l25 = $l24 - $l23;

        $i26 = (int) $l25;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statIrqTime> = $i26;

        $l28 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime>;

        $l27 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSoftIrqTime>;

        $l29 = $l28 - $l27;

        $i30 = (int) $l29;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statSoftIrqTime> = $i30;

        $l32 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime>;

        $l31 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIdleTime>;

        $l33 = $l32 - $l31;

        $i34 = (int) $l33;

        r7.<android.os.BatteryStats$HistoryStepDetails: int statIdlTime> = $i34;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid3> = -1;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid2> = -1;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid1> = -1;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime3> = 0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime2> = 0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime1> = 0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime3> = 0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime2> = 0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime1> = 0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i81 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i82 = 0;

     label06:
        if i82 >= i81 goto label11;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i82);

        r11 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        $l44 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepUserTime>;

        $l43 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepUserTime>;

        $l45 = $l44 - $l43;

        i0 = (int) $l45;

        $l47 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepSystemTime>;

        $l46 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepSystemTime>;

        $l48 = $l47 - $l46;

        i1 = (int) $l48;

        i2 = i0 + i1;

        $l49 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepUserTime>;

        r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepUserTime> = $l49;

        $l50 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mCurStepSystemTime>;

        r11.<com.android.internal.os.BatteryStatsImpl$Uid: long mLastStepSystemTime> = $l50;

        $i52 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime3>;

        $i51 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime3>;

        $i53 = $i52 + $i51;

        if i2 > $i53 goto label07;

        goto label10;

     label07:
        $i55 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime2>;

        $i54 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime2>;

        $i56 = $i55 + $i54;

        if i2 > $i56 goto label08;

        $i68 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid3> = $i68;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime3> = i0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime3> = i1;

        goto label10;

     label08:
        $i57 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid2>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid3> = $i57;

        $i58 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime2>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime3> = $i58;

        $i59 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime2>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime3> = $i59;

        $i61 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime1>;

        $i60 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime1>;

        $i62 = $i61 + $i60;

        if i2 > $i62 goto label09;

        $i67 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid2> = $i67;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime2> = i0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime2> = i1;

        goto label10;

     label09:
        $i63 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid1>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid2> = $i63;

        $i64 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime1>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime2> = $i64;

        $i65 = r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime1>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime2> = $i65;

        $i66 = r11.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUid1> = $i66;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuUTime1> = i0;

        r7.<android.os.BatteryStats$HistoryStepDetails: int appCpuSTime1> = i1;

     label10:
        i82 = i82 + 1;

        goto label06;

     label11:
        $l35 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuUserTime> = $l35;

        $l36 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuSystemTime> = $l36;

        $l37 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatUserTime> = $l37;

        $l38 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSystemTime> = $l38;

        $l39 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIOWaitTime> = $l39;

        $l40 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIrqTime> = $l40;

        $l41 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSoftIrqTime> = $l41;

        $l42 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIdleTime> = $l42;

        return;
    }

    private long computeTimePerLevel(long[], int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] r1;
        int i0, i6;
        long $l1, $l2, $l3, $l4, l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: long[];

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        return -1L;

     label1:
        l5 = 0L;

        i6 = 0;

     label2:
        if i6 >= i0 goto label3;

        $l3 = r1[i6];

        $l4 = $l3 & 1099511627775L;

        l5 = l5 + $l4;

        i6 = i6 + 1;

        goto label2;

     label3:
        $l1 = (long) i0;

        $l2 = l5 / $l1;

        return $l2;
    }

    private static void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl)
    {
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        if r0 == null goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void detach()>();

     label1:
        return;
    }

    private static void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs r0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs;

        if r0 == null goto label1;

        interfaceinvoke r0.<com.android.internal.os.BatteryStatsImpl$TimeBaseObs: void detach()>();

     label1:
        return;
    }

    private static void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] r0;
        int $i0, i1;
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][] r0;
        int $i0, i1;
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static java.lang.String[] excludeFromStringArray(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>(r0, r1);

        if i0 < 0 goto label3;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        r2 = newarray (java.lang.String)[$i2];

        if i0 <= 0 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, i0);

     label1:
        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        if i0 >= $i4 goto label2;

        $i8 = i0 + 1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i8, r2, i0, $i7);

     label2:
        return r2;

     label3:
        return r0;
    }

    private int fixPhoneServiceState(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = i0;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        if $i2 != 1 goto label1;

        i3 = i0;

        if i0 != 1 goto label1;

        i3 = i0;

        if i1 <= 0 goto label1;

        i3 = 0;

     label1:
        return i3;
    }

    private int getAttributionUid(int, android.os.WorkSource$WorkChain)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3;
        android.os.WorkSource$WorkChain r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.WorkSource$WorkChain;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i2);

        return $i3;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        return $i1;
    }

    private android.telephony.ModemActivityInfo getDeltaModemActivityInfo(android.telephony.ModemActivityInfo)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.telephony.ModemActivityInfo r1, $r2, $r3, $r4, $r5, $r9;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.util.List $r6, $r10;
        java.lang.Object $r7, $r11;
        android.telephony.ModemActivityInfo$TransmitPower $r8, $r12;
        int[] r13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.telephony.ModemActivityInfo;

        if r1 != null goto label1;

        return null;

     label1:
        r13 = newarray (int)[5];

        i13 = 0;

     label2:
        if i13 >= 5 goto label3;

        $r6 = virtualinvoke r1.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i13);

        $r8 = (android.telephony.ModemActivityInfo$TransmitPower) $r7;

        $i10 = virtualinvoke $r8.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo>;

        $r10 = virtualinvoke $r9.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i13);

        $r12 = (android.telephony.ModemActivityInfo$TransmitPower) $r11;

        $i11 = virtualinvoke $r12.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        $i12 = $i10 - $i11;

        r13[i13] = $i12;

        i13 = i13 + 1;

        goto label2;

     label3:
        $r2 = new android.telephony.ModemActivityInfo;

        $l0 = virtualinvoke r1.<android.telephony.ModemActivityInfo: long getTimestamp()>();

        $i1 = virtualinvoke r1.<android.telephony.ModemActivityInfo: int getSleepTimeMillis()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo>;

        $i2 = virtualinvoke $r3.<android.telephony.ModemActivityInfo: int getSleepTimeMillis()>();

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke r1.<android.telephony.ModemActivityInfo: int getIdleTimeMillis()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo>;

        $i5 = virtualinvoke $r4.<android.telephony.ModemActivityInfo: int getIdleTimeMillis()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r1.<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo>;

        $i8 = virtualinvoke $r5.<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>();

        $i9 = $i7 - $i8;

        specialinvoke $r2.<android.telephony.ModemActivityInfo: void <init>(long,int,int,int[],int)>($l0, $i3, $i6, r13, $i9);

        r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo mLastModemActivityInfo> = r1;

        return $r2;
    }

    private int getPowerManagerWakeLockLevel(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 18 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal wakelock type in batterystats: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r5);

        return -1;

     label1:
        return 128;

     label2:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Illegal window wakelock type observed in batterystats.");

        return -1;

     label3:
        return 26;

     label4:
        return 1;
    }

    private static java.lang.String[] includeInStringArray(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $i0 < 0 goto label1;

        return r0;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 + 1;

        r2 = newarray (java.lang.String)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, $i3);

        $i4 = lengthof r0;

        r2[$i4] = r1;

        return r2;
    }

    private void init(com.android.internal.os.BatteryStatsImpl$Clocks)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Clocks;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks> = r1;

        return;
    }

    private void initActiveHistoryEventsLocked(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        java.util.Map$Entry r1;
        android.util.SparseIntArray r2;
        boolean $z0, $z1;
        android.os.BatteryStats$HistoryEventTracker $r3;
        java.util.Set $r4;
        java.lang.Object $r5, $r6, $r7;
        int $i2, $i3, i4, i5;
        java.lang.String $r8;
        java.util.HashMap r9;
        java.util.Iterator r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i4 = 0;

     label1:
        if i4 >= 22 goto label8;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z0 != 0 goto label2;

        if i4 != 1 goto label2;

        goto label7;

     label2:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r9 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(i4);

        if r9 != null goto label3;

        goto label7;

     label3:
        $r4 = virtualinvoke r9.<java.util.HashMap: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        r2 = (android.util.SparseIntArray) $r6;

        i5 = 0;

     label5:
        $i2 = virtualinvoke r2.<android.util.SparseIntArray: int size()>();

        if i5 >= $i2 goto label6;

        $r7 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $i3 = virtualinvoke r2.<android.util.SparseIntArray: int keyAt(int)>(i5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, i4, $r8, $i3);

        i5 = i5 + 1;

        goto label5;

     label6:
        goto label4;

     label7:
        i4 = i4 + 1;

        goto label1;

     label8:
        return;
    }

    private boolean initKernelSingleUidTimeReaderLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r1, $r5, $r8;
        boolean $z0, $z1, $z2, z3;
        com.android.internal.os.KernelSingleUidTimeReader $r2, $r6, r10;
        long[] $r3, $r4, $r7, $r9;
        int $i0;
        com.android.internal.os.PowerProfile r11;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        z3 = 0;

        if r10 != null goto label4;

        r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        if r11 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs>;

        if $r3 != null goto label2;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $r9 = virtualinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: long[] readFreqs(com.android.internal.os.PowerProfile)>(r11);

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs> = $r9;

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs>;

        if $r4 == null goto label3;

        $r6 = new com.android.internal.os.KernelSingleUidTimeReader;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs>;

        $i0 = lengthof $r7;

        specialinvoke $r6.<com.android.internal.os.KernelSingleUidTimeReader: void <init>(int)>($i0);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader> = $r6;

        goto label4;

     label3:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $z2 = virtualinvoke $r5.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: boolean allUidTimesAvailable()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable> = $z2;

        return 0;

     label4:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: boolean allUidTimesAvailable()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        $z1 = virtualinvoke $r2.<com.android.internal.os.KernelSingleUidTimeReader: boolean singleUidCpuTimesAvailable()>();

        if $z1 == 0 goto label5;

        z3 = 1;

        goto label5;

     label5:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable> = z3;

        return 1;
    }

    public static boolean isOnBattery(int, int)
    {
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        if i0 != 0 goto label1;

        if i1 == 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void noteAlarmStartOrFinishLocked(int, java.lang.String, android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, i7, i9, i11, i12, i13, i14;
        java.lang.String r1;
        long l1, l2;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        android.os.BatteryStats$HistoryEventTracker $r4, $r7, $r8;
        java.lang.Object $r5;
        android.os.WorkSource$WorkChain $r6;
        android.os.WorkSource r9;
        java.util.List r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r9 := @parameter2: android.os.WorkSource;

        i7 := @parameter3: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        if r9 == null goto label09;

        i9 = 0;

     label02:
        $i3 = virtualinvoke r9.<android.os.WorkSource: int size()>();

        if i9 >= $i3 goto label04;

        $i6 = virtualinvoke r9.<android.os.WorkSource: int getUid(int)>(i9);

        i11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i6);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z3 = virtualinvoke $r8.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(i0, r1, i11, 0);

        if $z3 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, i0, r1, i11);

        goto label03;

     label03:
        i9 = i9 + 1;

        goto label02;

     label04:
        r10 = virtualinvoke r9.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r10 == null goto label08;

        i12 = 0;

     label05:
        $i4 = interfaceinvoke r10.<java.util.List: int size()>();

        if i12 >= $i4 goto label07;

        $r5 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i12);

        $r6 = (android.os.WorkSource$WorkChain) $r5;

        $i5 = virtualinvoke $r6.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        i13 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i5);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z2 = virtualinvoke $r7.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(i0, r1, i13, 0);

        if $z2 == 0 goto label06;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, i0, r1, i13);

        goto label06;

     label06:
        i12 = i12 + 1;

        goto label05;

     label07:
        goto label08;

     label08:
        goto label10;

     label09:
        i14 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z1 = virtualinvoke $r4.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(i0, r1, i14, 0);

        if $z1 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, i0, r1, i14);

        goto label10;

     label10:
        return;
    }

    private void noteBluetoothScanStartedLocked(android.os.WorkSource$WorkChain, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        int $i2, $i3, $i4, $i5, $i6, i7, i8;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.os.WorkSource$WorkChain r5;
        android.os.BatteryStats$HistoryItem r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r5 := @parameter0: android.os.WorkSource$WorkChain;

        i7 := @parameter1: int;

        z0 := @parameter2: boolean;

        i8 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getAttributionUid(int,android.os.WorkSource$WorkChain)>(i7, r5);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting>;

        if $i2 != 0 goto label1;

        r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r6.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 | 1048576;

        r6.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting> = $i4;

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteBluetoothScanStartedLocked(long,boolean)>(l0, z0);

        return;
    }

    private void noteBluetoothScanStoppedLocked(android.os.WorkSource$WorkChain, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        long l0, l1;
        int i2, $i3, $i4, $i5, i6, i7;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.os.WorkSource$WorkChain r5;
        android.os.BatteryStats$HistoryItem r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r5 := @parameter0: android.os.WorkSource$WorkChain;

        i6 := @parameter1: int;

        z0 := @parameter2: boolean;

        i7 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getAttributionUid(int,android.os.WorkSource$WorkChain)>(i6, r5);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting>;

        i2 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting> = i2;

        if i2 != 0 goto label1;

        r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r6.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 & -1048577;

        r6.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i7);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteBluetoothScanStoppedLocked(long,boolean)>(l0, z0);

        return;
    }

    private void noteLongPartialWakeLockFinishInternal(java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r5;
        int i0;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        android.os.BatteryStats$HistoryEventTracker $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        if r1 != null goto label1;

        goto label2;

     label1:
        r5 = r1;

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r4.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16404, r5, i0, 0);

        if $z0 != 0 goto label3;

        return;

     label3:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 16404, r5, i0);

        return;
    }

    private void noteLongPartialWakeLockStartInternal(java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r5;
        int i0;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        android.os.BatteryStats$HistoryEventTracker $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        if r1 != null goto label1;

        goto label2;

     label1:
        r5 = r1;

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r4.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32788, r5, i0, 0);

        if $z0 != 0 goto label3;

        return;

     label3:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 32788, r5, i0);

        return;
    }

    private void noteMobileRadioApWakeupLocked(long, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 19, "", i3);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteMobileRadioApWakeupLocked()>();

        return;
    }

    private void noteStartGpsLocked(int, android.os.WorkSource$WorkChain)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource$WorkChain r1;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        int $i2, $i3, $i4, $i5, $i6, i7, i8;
        int[] $r5;
        java.lang.String[] $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        r1 := @parameter1: android.os.WorkSource$WorkChain;

        i8 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getAttributionUid(int,android.os.WorkSource$WorkChain)>(i7, r1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i2 != 0 goto label1;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 | 536870912;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = $i4;

        if r1 != null goto label2;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(6, i8, null, 1);

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int[] getUids()>();

        $r6 = virtualinvoke r1.<android.os.WorkSource$WorkChain: java.lang.String[] getTags()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int)>(6, $r5, $r6, 1);

     label3:
        $r7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartGps(long)>(l0);

        return;
    }

    private void noteStopGpsLocked(int, android.os.WorkSource$WorkChain)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource$WorkChain r1;
        long l0, l1;
        int i2, $i3, $i4, $i5, i6, i7;
        android.os.BatteryStats$HistoryItem r2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        int[] $r5;
        java.lang.String[] $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i6 := @parameter0: int;

        r1 := @parameter1: android.os.WorkSource$WorkChain;

        i7 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getAttributionUid(int,android.os.WorkSource$WorkChain)>(i6, r1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        i2 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = i2;

        if i2 != 0 goto label1;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = $i4 & -536870913;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllGpsSignalQualityTimersLocked(int)>(-1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin> = -1;

     label1:
        if r1 != null goto label2;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(6, i7, null, 0);

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int[] getUids()>();

        $r6 = virtualinvoke r1.<android.os.WorkSource$WorkChain: java.lang.String[] getTags()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int)>(6, $r5, $r6, 0);

     label3:
        $r7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i7);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopGps(long)>(l0);

        return;
    }

    private void noteUsbConnectionStateLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int $i0, $i1, $i2, $i5, $i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        long $l3, $l4;
        byte b7;
        android.os.BatteryStats$HistoryItem r3, r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b7 = 2;

        goto label2;

     label1:
        b7 = 1;

     label2:
        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState>;

        if $i0 == b7 goto label5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState> = b7;

        if z0 == 0 goto label3;

        r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r3.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 | 262144;

        r3.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        goto label4;

     label3:
        r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i1 = r4.<android.os.BatteryStats$HistoryItem: int states2>;

        $i2 = $i1 & -262145;

        r4.<android.os.BatteryStats$HistoryItem: int states2> = $i2;

     label4:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l3 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l4 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>($l3, $l4);

     label5:
        return;
    }

    private void noteWifiRadioApWakeupLocked(long, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 19, "", i3);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRadioApWakeupLocked()>();

        return;
    }

    private void readBatteryLevelInt(int, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i5, $i6, $i9, $i10;
        android.os.BatteryStats$HistoryItem r1;
        byte $b3, $b4;
        short $s7, $s8;
        char $c11, $c12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.BatteryStats$HistoryItem;

        $i1 = -33554432 & i0;

        $i2 = $i1 >>> 25;

        $b3 = (byte) $i2;

        $b4 = (byte) $b3;

        r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b4;

        $i5 = 33521664 & i0;

        $i6 = $i5 >>> 15;

        $s7 = (short) $i6;

        $s8 = (short) $s7;

        r1.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s8;

        $i9 = i0 & 32766;

        $i10 = $i9 >>> 1;

        $c11 = (char) $i10;

        $c12 = (char) $c11;

        r1.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c12;

        return;
    }

    private void readDailyItemsLocked(org.xmlpull.v1.XmlPullParser)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2, i9, i10;
        java.lang.String $r1, $r3, $r5, $r10, $r15, $r20, $r25, $r30, $r35;
        boolean $z0;
        java.lang.Throwable $r6, $r21, $r26, $r31;
        java.lang.StringBuilder $r7, $r12, $r17, $r22, $r27, $r32, r37;
        java.lang.IndexOutOfBoundsException $r11;
        java.lang.NullPointerException $r16;
        org.xmlpull.v1.XmlPullParser r36;
        java.lang.IllegalStateException r38;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r36 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label01:
        i9 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: int next()>();

     label02:
        if i9 == 2 goto label03;

        if i9 == 1 goto label03;

        goto label01;

     label03:
        if i9 != 2 goto label13;

     label04:
        i0 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label05:
        i10 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        if i10 == 1 goto label20;

        if i10 != 3 goto label08;

     label07:
        $i2 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label20;

     label08:
        if i10 == 3 goto label05;

        if i10 != 4 goto label09;

        goto label05;

     label09:
        $r1 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label11;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readDailyItemTagLocked(org.xmlpull.v1.XmlPullParser)>(r36);

     label10:
        goto label12;

     label11:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <daily-items>: ");

        $r3 = interfaceinvoke r36.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r5);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r36);

     label12:
        goto label05;

     label13:
        r38 = new java.lang.IllegalStateException;

        specialinvoke r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

        throw r38;

     label14:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r15);

        goto label20;

     label15:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

        goto label20;

     label16:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r25);

        goto label20;

     label17:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r35);

        goto label20;

     label18:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r20);

        goto label20;

     label19:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing daily ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r30);

     label20:
        return;

        catch java.lang.IllegalStateException from label01 to label02 with label19;
        catch java.lang.NullPointerException from label01 to label02 with label18;
        catch java.lang.NumberFormatException from label01 to label02 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label16;
        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label14;
        catch java.lang.IllegalStateException from label04 to label05 with label19;
        catch java.lang.NullPointerException from label04 to label05 with label18;
        catch java.lang.NumberFormatException from label04 to label05 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label16;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label14;
        catch java.lang.IllegalStateException from label05 to label06 with label19;
        catch java.lang.NullPointerException from label05 to label06 with label18;
        catch java.lang.NumberFormatException from label05 to label06 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label16;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label14;
        catch java.lang.IllegalStateException from label07 to label08 with label19;
        catch java.lang.NullPointerException from label07 to label08 with label18;
        catch java.lang.NumberFormatException from label07 to label08 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label16;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label14;
        catch java.lang.IllegalStateException from label09 to label10 with label19;
        catch java.lang.NullPointerException from label09 to label10 with label18;
        catch java.lang.NumberFormatException from label09 to label10 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label16;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label14;
        catch java.lang.IllegalStateException from label11 to label12 with label19;
        catch java.lang.NullPointerException from label11 to label12 with label18;
        catch java.lang.NumberFormatException from label11 to label12 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label16;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label14;
        catch java.lang.IllegalStateException from label13 to label14 with label19;
        catch java.lang.NullPointerException from label13 to label14 with label18;
        catch java.lang.NumberFormatException from label13 to label14 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label16;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label14;
    }

    private void readHistoryTag(int, android.os.BatteryStats$HistoryTag)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2;
        android.os.BatteryStats$HistoryTag r1;
        java.lang.String[] r2;
        java.lang.String $r3;
        int[] $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.BatteryStats$HistoryTag;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $i1 = lengthof r2;

        if i0 >= $i1 goto label1;

        $r3 = r2[i0];

        r1.<android.os.BatteryStats$HistoryTag: java.lang.String string> = $r3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i2 = $r4[i0];

        r1.<android.os.BatteryStats$HistoryTag: int uid> = $i2;

        goto label2;

     label1:
        r1.<android.os.BatteryStats$HistoryTag: java.lang.String string> = null;

        r1.<android.os.BatteryStats$HistoryTag: int uid> = 0;

     label2:
        r1.<android.os.BatteryStats$HistoryTag: int poolIdx> = i0;

        return;
    }

    private android.net.NetworkStats readNetworkStatsLocked(java.lang.String[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String[] r1;
        boolean $z0;
        android.os.IBinder $r3;
        android.net.NetworkStats $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r11;
        android.net.INetworkStatsService r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String[];

     label1:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("netstats");

        r12 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)>($r3);

     label2:
        if r12 == null goto label4;

     label3:
        $r4 = interfaceinvoke r12.<android.net.INetworkStatsService: android.net.NetworkStats getDetailedUidStats(java.lang.String[])>(r1);

        return $r4;

     label4:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Failed to get networkStatsService ");

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to read network stats for ifaces: ");

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r11);

     label7:
        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void recordCurrentTimeChangeLocked(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1.<android.os.BatteryStats$HistoryItem: long currentTime> = l0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l1, 5, $r2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3.<android.os.BatteryStats$HistoryItem: long currentTime> = 0L;

     label1:
        return;
    }

    private void recordShutdownLocked(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l0, 8, $r2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3.<android.os.BatteryStats$HistoryItem: long currentTime> = 0L;

     label1:
        return;
    }

    private void registerUsbStateReceiver(android.content.Context)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.content.IntentFilter $r2;
        com.android.internal.os.BatteryStatsImpl$2 $r3;
        int $i0;
        boolean $z1, z2;
        java.lang.Throwable $r5;
        android.content.Context r6;
        android.content.Intent r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r6 := @parameter0: android.content.Context;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.hardware.usb.action.USB_STATE");

        $r3 = new com.android.internal.os.BatteryStatsImpl$2;

        specialinvoke $r3.<com.android.internal.os.BatteryStatsImpl$2: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        virtualinvoke r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        entermonitor r0;

     label01:
        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mUsbDataState>;

        if $i0 != 0 goto label06;

        r7 = virtualinvoke r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(null, $r2);

     label02:
        z2 = 0;

        if r7 == null goto label05;

        z2 = 0;

     label03:
        $z1 = virtualinvoke r7.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("connected", 0);

        if $z1 == 0 goto label05;

     label04:
        z2 = 1;

     label05:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteUsbConnectionStateLocked(boolean)>(z2);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void reportChangesToStatsLog(android.os.BatteryStats$HistoryItem, int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        int i0, i1, i2;
        byte $b3, $b4, $b5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r1 == null goto label1;

        $b5 = r1.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b5 == i0 goto label2;

     label1:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(31, i0);

     label2:
        if r1 == null goto label3;

        $b4 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b4 == i1 goto label4;

     label3:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(32, i1);

     label4:
        if r1 == null goto label5;

        $b3 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b3 == i2 goto label6;

     label5:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(30, i2);

     label6:
        return;
    }

    private void requestImmediateCpuUpdate()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleCpuSyncDueToWakelockChange(long)>(0L);

        return;
    }

    private void requestWakelockCpuUpdate()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleCpuSyncDueToWakelockChange(long)>(5000L);

        return;
    }

    private void resetAllStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3, $l12, $l13;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r72, $r74, $r76, $r78, $r84, $r86, $r88;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16, i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r20, $r21, $r22, $r80, $r82;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r27, $r28, $r29;
        android.util.SparseArray $r30, $r65, $r68, r90;
        java.util.HashMap $r31, $r32, $r33, $r35, $r39, $r41, $r50, $r52, $r55, $r57, $r60, $r62;
        android.util.LongSparseArray $r34, $r44, $r45, $r46;
        com.android.internal.os.RailStats $r36;
        com.android.internal.os.BatteryStatsHistory $r37;
        android.os.Handler $r38;
        java.util.Collection $r40, $r51, $r56, $r61;
        boolean $z25, $z26, $z27, $z28, $z29;
        java.lang.Object $r42, $r48, $r53, $r58, $r63, $r66, $r69;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r43, $r47, $r54, $r59, $r64;
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs $r49;
        com.android.internal.os.BatteryStatsImpl$Uid $r67, $r70;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r71, $r73, $r75, $r77, $r83, $r85, $r87;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r79, $r81;
        double $d0;
        com.android.internal.os.PowerProfile r89;
        java.util.Iterator r91, r93, r95, r97;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r92, r94, r96, r98;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = 0;

        $l3 = l0 * 1000L;

        $l2 = l1 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes(long,long)>($l3, $l2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i16 = 0;

     label01:
        if i16 >= 5 goto label02;

        $r87 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r88 = $r87[i16];

        virtualinvoke $r88.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i16 = i16 + 1;

        goto label01;

     label02:
        r89 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        if r89 == null goto label03;

        $d0 = virtualinvoke r89.<com.android.internal.os.PowerProfile: double getBatteryCapacity()>();

        $i15 = (int) $d0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = $i15;

        goto label04;

     label03:
        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = -1;

     label04:
        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = -1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastIdleTimeStart> = l1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime> = 0L;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i17 = 0;

     label05:
        $i18 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i17 >= $i18 goto label06;

        $r85 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r86 = $r85[i17];

        virtualinvoke $r86.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i17 = i17 + 1;

        goto label05;

     label06:
        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i19 = 0;

     label07:
        $i4 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i19 >= $i4 goto label08;

        $r83 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r84 = $r83[i19];

        virtualinvoke $r84.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i19 = i19 + 1;

        goto label07;

     label08:
        i20 = 0;

     label09:
        if i20 >= 10 goto label10;

        $r79 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r80 = $r79[i20];

        virtualinvoke $r80.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r81 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r82 = $r81[i20];

        virtualinvoke $r82.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        i20 = i20 + 1;

        goto label09;

     label10:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i21 = 0;

     label11:
        if i21 >= 8 goto label12;

        $r77 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r78 = $r77[i21];

        virtualinvoke $r78.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i21 = i21 + 1;

        goto label11;

     label12:
        i22 = 0;

     label13:
        if i22 >= 13 goto label14;

        $r75 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r76 = $r75[i22];

        virtualinvoke $r76.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i22 = i22 + 1;

        goto label13;

     label14:
        i23 = 0;

     label15:
        if i23 >= 5 goto label16;

        $r73 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r74 = $r73[i23];

        virtualinvoke $r74.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i23 = i23 + 1;

        goto label15;

     label16:
        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void reset(boolean)>(0);

        i24 = 0;

     label17:
        if i24 >= 2 goto label18;

        $r71 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r72 = $r71[i24];

        virtualinvoke $r72.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i24 = i24 + 1;

        goto label17;

     label18:
        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void reset(boolean)>(0);

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void reset(boolean)>(0);

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange> = 0;

        i25 = 0;

     label19:
        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r30.<android.util.SparseArray: int size()>();

        if i25 >= $i5 goto label21;

        i26 = i25;

        $r65 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r66 = virtualinvoke $r65.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        $r67 = (com.android.internal.os.BatteryStatsImpl$Uid) $r66;

        $l13 = l0 * 1000L;

        $l12 = l1 * 1000L;

        $z29 = virtualinvoke $r67.<com.android.internal.os.BatteryStatsImpl$Uid: boolean reset(long,long)>($l13, $l12);

        if $z29 == 0 goto label20;

        $r68 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r69 = virtualinvoke $r68.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        $r70 = (com.android.internal.os.BatteryStatsImpl$Uid) $r69;

        virtualinvoke $r70.<com.android.internal.os.BatteryStatsImpl$Uid: void detachFromTimeBase()>();

        r90 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i14 = virtualinvoke r90.<android.util.SparseArray: int keyAt(int)>(i25);

        virtualinvoke r90.<android.util.SparseArray: void remove(int)>($i14);

        i26 = i25 - 1;

     label20:
        i25 = i26 + 1;

        goto label19;

     label21:
        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $i6 = virtualinvoke $r31.<java.util.HashMap: int size()>();

        if $i6 <= 0 goto label24;

        $r60 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $r61 = virtualinvoke $r60.<java.util.HashMap: java.util.Collection values()>();

        r91 = interfaceinvoke $r61.<java.util.Collection: java.util.Iterator iterator()>();

     label22:
        $z28 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label23;

        $r63 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        r92 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r63;

        $r64 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r64.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r92);

        goto label22;

     label23:
        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        virtualinvoke $r62.<java.util.HashMap: void clear()>();

     label24:
        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $i7 = virtualinvoke $r32.<java.util.HashMap: int size()>();

        if $i7 <= 0 goto label27;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $r56 = virtualinvoke $r55.<java.util.HashMap: java.util.Collection values()>();

        r93 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();

     label25:
        $z27 = interfaceinvoke r93.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label26;

        $r58 = interfaceinvoke r93.<java.util.Iterator: java.lang.Object next()>();

        r94 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r58;

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r59.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r94);

        goto label25;

     label26:
        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        virtualinvoke $r57.<java.util.HashMap: void clear()>();

     label27:
        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i8 = virtualinvoke $r33.<java.util.HashMap: int size()>();

        if $i8 <= 0 goto label30;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r51 = virtualinvoke $r50.<java.util.HashMap: java.util.Collection values()>();

        r95 = interfaceinvoke $r51.<java.util.Collection: java.util.Iterator iterator()>();

     label28:
        $z26 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label29;

        $r53 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r53;

        $r54 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r54.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r96);

        goto label28;

     label29:
        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r52.<java.util.HashMap: void clear()>();

     label30:
        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i9 = virtualinvoke $r34.<android.util.LongSparseArray: int size()>();

        if $i9 <= 0 goto label33;

        i27 = 0;

     label31:
        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i11 = virtualinvoke $r44.<android.util.LongSparseArray: int size()>();

        if i27 >= $i11 goto label32;

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r48 = virtualinvoke $r46.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i27);

        $r49 = (com.android.internal.os.BatteryStatsImpl$TimeBaseObs) $r48;

        virtualinvoke $r47.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r49);

        i27 = i27 + 1;

        goto label31;

     label32:
        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        virtualinvoke $r45.<android.util.LongSparseArray: void clear()>();

     label33:
        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i10 = virtualinvoke $r35.<java.util.HashMap: int size()>();

        if $i10 <= 0 goto label36;

        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r40 = virtualinvoke $r39.<java.util.HashMap: java.util.Collection values()>();

        r97 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();

     label34:
        $z25 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label35;

        $r42 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        r98 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r42;

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r43.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r98);

        goto label34;

     label35:
        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r41.<java.util.HashMap: void clear()>();

     label36:
        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        virtualinvoke $r36.<com.android.internal.os.RailStats: void reset()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepCpuSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIOWaitTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIrqTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatSoftIrqTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastStepStatIdleTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumUidsRemoved> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsHistory: void resetAllFiles()>();

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        virtualinvoke $r38.<android.os.Handler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    private static boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void reset(boolean)>(z0);

     label1:
        return 1;
    }

    private static boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs r0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs;

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<com.android.internal.os.BatteryStatsImpl$TimeBaseObs: boolean reset(boolean)>(z0);

        return $z1;

     label1:
        return 1;
    }

    private static boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[], boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] r0;
        boolean z0, $z1, z2;
        int $i0, i1;
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[];

        z0 := @parameter1: boolean;

        if r0 == null goto label3;

        z2 = 1;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs,boolean)>($r1, z0);

        z2 = z2 & $z1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z2;

     label3:
        return 1;
    }

    private static boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][], boolean)
    {
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][] r0;
        boolean z0, $z1, z2;
        int $i0, i1;
        com.android.internal.os.BatteryStatsImpl$TimeBaseObs[] $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][];

        z0 := @parameter1: boolean;

        if r0 == null goto label3;

        z2 = 1;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean resetIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[],boolean)>($r1, z0);

        z2 = z2 & $z1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z2;

     label3:
        return 1;
    }

    private void scheduleSyncExternalStatsLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        if r2 == null goto label1;

        interfaceinvoke r2.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleSync(java.lang.String,int)>(r1, i0);

     label1:
        return;
    }

    private void startRecordingHistory(long, long, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2;
        boolean z0;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3;
        byte b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l2;

        if z0 == 0 goto label1;

        b4 = 7;

        goto label2;

     label1:
        b4 = 5;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l0, b4, $r2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3.<android.os.BatteryStats$HistoryItem: long currentTime> = 0L;

        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initActiveHistoryEventsLocked(long,long)>(l0, l1);

     label3:
        return;
    }

    private void updateAllPhoneStateLocked(int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3, $r5, $r7;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r6, $r8, $r9, $r10, $r11, $r12;
        boolean $z1, $z2, $z3, z4, z6, z7, z8, z9;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, $i19, i20;
        android.os.BatteryStats$HistoryItem r13, r14, r15, r16;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        i17 := @parameter2: int;

        z4 = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = i15;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = i16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = i17;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i18 = i15;

        if i16 != 1 goto label01;

        i18 = i15;

        if i15 != 1 goto label01;

        i18 = i15;

        if i17 <= 0 goto label01;

        i18 = 0;

     label01:
        if i18 != 3 goto label02;

        i17 = -1;

        z6 = 0;

        goto label04;

     label02:
        if i18 != 0 goto label03;

        z6 = 0;

        goto label04;

     label03:
        z6 = 0;

        if i18 != 1 goto label04;

        z4 = 1;

        z6 = 0;

        i17 = 0;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $z3 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z3 != 0 goto label04;

        r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i13 = r13.<android.os.BatteryStats$HistoryItem: int states>;

        $i14 = $i13 | 2097152;

        r13.<android.os.BatteryStats$HistoryItem: int states> = $i14;

        z6 = 1;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int)>(94, i18, i16, 0);

        i17 = 0;

        z4 = 1;

     label04:
        z7 = z6;

        if z4 != 0 goto label05;

        z7 = z6;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $z2 = virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z2 == 0 goto label05;

        r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i11 = r14.<android.os.BatteryStats$HistoryItem: int states>;

        $i12 = $i11 & -2097153;

        r14.<android.os.BatteryStats$HistoryItem: int states> = $i12;

        z7 = 1;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int)>(94, i18, i16, i17);

     label05:
        z8 = z7;

        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState>;

        if $i19 == i18 goto label06;

        r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = r15.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = $i7 & -449;

        $i8 = i18 << 6;

        $i10 = $i9 | $i8;

        r15.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        z8 = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = i18;

     label06:
        i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        z9 = z8;

        if i20 == i17 goto label11;

        if i20 < 0 goto label07;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r8 = $r7[i20];

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label07:
        if i17 < 0 goto label09;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r4 = $r3[i17];

        $z1 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z1 != 0 goto label08;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r6 = $r5[i17];

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label08:
        r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r16.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = $i3 & -57;

        $i4 = i17 << 3;

        $i6 = $i5 | $i4;

        r16.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        z8 = 1;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(40, i17);

        goto label10;

     label09:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllPhoneSignalStrengthTimersLocked(int)>(-1);

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = i17;

        z9 = z8;

     label11:
        if z9 == 0 goto label12;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

     label12:
        return;
    }

    private void updateBatteryPropertiesLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        android.os.IBatteryPropertiesRegistrar r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batteryproperties");

        r3 = staticinvoke <android.os.IBatteryPropertiesRegistrar$Stub: android.os.IBatteryPropertiesRegistrar asInterface(android.os.IBinder)>($r1);

     label2:
        if r3 == null goto label4;

     label3:
        interfaceinvoke r3.<android.os.IBatteryPropertiesRegistrar: void scheduleUpdate()>();

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void updateNewDischargeScreenLevelLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i0);

        if $z0 == 0 goto label1;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = $i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i0);

        if $z1 == 0 goto label2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label3;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOff(int)>(i0);

        if $z2 == 0 goto label3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = $i1;

     label3:
        return;
    }

    private void updateOldDischargeScreenLevelLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i18 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i18);

        if $z0 == 0 goto label2;

        $i13 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i19 = $i13 - $i12;

        if i19 <= 0 goto label1;

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        $i15 = $i14 + i19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i15;

        $i16 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        $i17 = $i16 + i19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i17;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i18);

        if $z1 == 0 goto label3;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel>;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i20 = $i7 - $i6;

        if i20 <= 0 goto label4;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze>;

        $i9 = $i8 + i20;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze> = $i9;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge>;

        $i11 = $i10 + i20;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge> = $i11;

        goto label4;

     label3:
        $z2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOff(int)>(i18);

        if $z2 == 0 goto label4;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i21 = $i1 - $i0;

        if i21 <= 0 goto label4;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        $i3 = $i2 + i21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        $i5 = $i4 + i21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i5;

        goto label4;

     label4:
        return;
    }

    private void writeDailyItemsLocked(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.internal.os.BatteryStatsImpl r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.os.BatteryStats$DailyItem r3;
        android.os.BatteryStats$PackageChange r4;
        java.lang.StringBuilder $r5;
        java.lang.Boolean $r6;
        java.util.ArrayList $r8, $r10, $r19, $r21, $r22;
        int $i0, $i3, i5, i6;
        java.lang.Object $r11, $r23;
        long $l1, $l2, $l4;
        java.lang.String $r13, $r15, $r25, $r29, $r31;
        android.os.BatteryStats$LevelStepTracker $r17, $r18;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(64);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "daily-items");

        i5 = 0;

     label1:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i5 >= $i0 goto label6;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (android.os.BatteryStats$DailyItem) $r11;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $l1 = r3.<android.os.BatteryStats$DailyItem: long mStartTime>;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "start", $r13);

        $l2 = r3.<android.os.BatteryStats$DailyItem: long mEndTime>;

        $r15 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "end", $r15);

        $r17 = r3.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mDischargeSteps>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeDailyLevelSteps(org.xmlpull.v1.XmlSerializer,java.lang.String,android.os.BatteryStats$LevelStepTracker,java.lang.StringBuilder)>(r1, "dis", $r17, $r5);

        $r18 = r3.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mChargeSteps>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeDailyLevelSteps(org.xmlpull.v1.XmlSerializer,java.lang.String,android.os.BatteryStats$LevelStepTracker,java.lang.StringBuilder)>(r1, "chg", $r18, $r5);

        $r19 = r3.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        if $r19 == null goto label5;

        i6 = 0;

     label2:
        $r21 = r3.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        $i3 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if i6 >= $i3 goto label5;

        $r22 = r3.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r4 = (android.os.BatteryStats$PackageChange) $r23;

        $z0 = r4.<android.os.BatteryStats$PackageChange: boolean mUpdate>;

        if $z0 == 0 goto label3;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "upd");

        $r29 = r4.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pkg", $r29);

        $l4 = r4.<android.os.BatteryStats$PackageChange: long mVersionCode>;

        $r31 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "ver", $r31);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "upd");

        goto label4;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "rem");

        $r25 = r4.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pkg", $r25);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "rem");

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i5 = i5 + 1;

        goto label1;

     label6:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "daily-items");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeDailyLevelSteps(org.xmlpull.v1.XmlSerializer, java.lang.String, android.os.BatteryStats$LevelStepTracker, java.lang.StringBuilder) throws java.io.IOException
    {
        com.android.internal.os.BatteryStatsImpl r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String r2, $r6, $r10;
        android.os.BatteryStats$LevelStepTracker r3;
        java.lang.StringBuilder r4;
        int $i0, $i1, i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.BatteryStats$LevelStepTracker;

        r4 := @parameter3: java.lang.StringBuilder;

        if r3 == null goto label3;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r2);

        $i0 = r3.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r6);

        i2 = 0;

     label1:
        $i1 = r3.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        if i2 >= $i1 goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "s");

        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<android.os.BatteryStats$LevelStepTracker: void encodeEntryAt(int,java.lang.StringBuilder)>(i2, r4);

        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "v", $r10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "s");

        i2 = i2 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r2);

     label3:
        return;
    }

    private int writeHistoryTag(android.os.BatteryStats$HistoryTag)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryTag r1, $r4;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        java.lang.Integer $r6, r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryTag;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.lang.Integer) $r3;

        if r9 == null goto label1;

        i6 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        $r4 = new android.os.BatteryStats$HistoryTag;

        specialinvoke $r4.<android.os.BatteryStats$HistoryTag: void <init>()>();

        virtualinvoke $r4.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>(r1);

        r1.<android.os.BatteryStats$HistoryTag: int poolIdx> = i6;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = $i1;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars>;

        $r8 = $r4.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i4 = $i3 + 1;

        $i5 = $i2 + $i4;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = $i5;

     label2:
        return i6;
    }

    public long[] addCpuTimes(long[], long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] r1, r2;
        int $i0, i4;
        long $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r2 := @parameter0: long[];

        r1 := @parameter1: long[];

        if r2 == null goto label3;

        if r1 == null goto label3;

        $i0 = lengthof r2;

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $l2 = r2[i4];

        $l1 = r1[i4];

        $l3 = $l2 + $l1;

        r2[i4] = $l3;

        i4 = i4 + -1;

        goto label1;

     label2:
        return r2;

     label3:
        if r2 != null goto label5;

        if r1 != null goto label4;

        r2 = null;

        goto label5;

     label4:
        r2 = r1;

        goto label5;

     label5:
        return r2;
    }

    void addHistoryBufferLocked(long, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r37, $r39, $r40, $r41, $r42, $r44, $r48, $r52;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i12, $i13, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i39, $i40, $i41, $i42, $i43, i47, i50, $i51;
        boolean $z0, $z1;
        long $l10, $l15, $l16, l44, l45, l46, l48, l49, l52, l53;
        com.android.internal.os.BatteryStatsHistory $r10;
        android.os.Parcel $r11, $r12, $r14, $r32, $r33, $r57;
        com.android.internal.os.BatteryStatsImpl$Constants $r13, $r58;
        com.android.internal.os.BatteryStatsImpl$Clocks $r15, $r16;
        byte $b14, $b17, $b27, $b28, $b29, $b30, $b31, $b32, $b33, $b34;
        android.os.BatteryStats$HistoryTag $r20, $r22, $r36, $r38, $r43, $r45, $r46, $r47, $r49, $r50, $r51, $r53, $r54, $r55, $r56;
        android.os.BatteryStats$HistoryStepDetails $r24;
        short $s35, $s36;
        char $c37, $c38;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l44 := @parameter0: long;

        r1 := @parameter1: android.os.BatteryStats$HistoryItem;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z0 == 0 goto label11;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z1 != 0 goto label01;

        goto label11;

     label01:
        l45 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        l46 = $r3.<android.os.BatteryStats$HistoryItem: long time>;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        i0 = $r4.<android.os.BatteryStats$HistoryItem: int states>;

        i1 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        i3 = $r5.<android.os.BatteryStats$HistoryItem: int states2>;

        i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        i6 = $r6.<android.os.BatteryStats$HistoryItem: int states>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        i7 = $r7.<android.os.BatteryStats$HistoryItem: int states>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        i8 = $r8.<android.os.BatteryStats$HistoryItem: int states2>;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        i47 = $r9.<android.os.BatteryStats$HistoryItem: int states2>;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        if $i9 < 0 goto label08;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b14 = $r18.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b14 != 0 goto label08;

        $l15 = l45 + l44;

        $l16 = $l15 - l46;

        $b17 = $l16 cmp 1000L;

        if $b17 >= 0 goto label08;

        $i18 = i1 & i2;

        $i20 = i0 ^ $i18;

        $i19 = i6 ^ i7;

        $i21 = $i20 & $i19;

        if $i21 != 0 goto label08;

        $i22 = i4 & i5;

        $i24 = i3 ^ $i22;

        $i23 = i8 ^ i47;

        $i25 = $i24 & $i23;

        if $i25 != 0 goto label08;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r20 = $r19.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r20 == null goto label02;

        $r56 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r56 != null goto label08;

     label02:
        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r22 = $r21.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r22 == null goto label03;

        $r55 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r55 != null goto label08;

     label03:
        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r24 = $r23.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails>;

        if $r24 != null goto label08;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i26 = $r25.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i26 == 0 goto label04;

        $i43 = r1.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i43 != 0 goto label08;

     label04:
        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b28 = $r26.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $b27 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b28 != $b27 goto label08;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b30 = $r27.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $b29 = r1.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b30 != $b29 goto label08;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b32 = $r28.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        $b31 = r1.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        if $b32 != $b31 goto label08;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b34 = $r29.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b33 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b34 != $b33 goto label08;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $s36 = $r30.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $s35 = r1.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        if $s36 != $s35 goto label08;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $c38 = $r31.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $c37 = r1.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        if $c38 != $c37 goto label08;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i39 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r32.<android.os.Parcel: void setDataSize(int)>($i39);

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i40 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r33.<android.os.Parcel: void setDataPosition(int)>($i40);

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        l48 = $r34.<android.os.BatteryStats$HistoryItem: long time>;

        l49 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r36 = $r35.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r36 == null goto label05;

        $r51 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r51;

        $r54 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r53 = $r52.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        virtualinvoke $r54.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r53);

     label05:
        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r38 = $r37.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r38 == null goto label06;

        $r47 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r47;

        $r50 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r49 = $r48.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        virtualinvoke $r50.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r49);

     label06:
        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i41 = $r39.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i41 == 0 goto label07;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i42 = $r42.<android.os.BatteryStats$HistoryItem: int eventCode>;

        r1.<android.os.BatteryStats$HistoryItem: int eventCode> = $i42;

        $r43 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r43;

        $r46 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r45 = $r44.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        virtualinvoke $r46.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r45);

     label07:
        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r41.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r40);

        l44 = l48 - l49;

        goto label08;

     label08:
        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i50 = virtualinvoke $r57.<android.os.Parcel: int dataSize()>();

        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i51 = $r58.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        if i50 < $i51 goto label09;

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryLocked(boolean)>(1);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsHistory: void startNextFile()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r11.<android.os.Parcel: void setDataSize(int)>(0);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r12.<android.os.Parcel: void setDataPosition(int)>(0);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i12 = $r13.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        $i13 = $i12 / 2;

        virtualinvoke $r14.<android.os.Parcel: void setDataCapacity(int)>($i13);

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l52 = interfaceinvoke $r15.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l53 = interfaceinvoke $r16.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r17 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r17.<android.os.BatteryStats$HistoryItem: void <init>()>();

        virtualinvoke $r17.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>(r1);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l52, l53, 0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l44, 0, $r17);

        return;

     label09:
        if i50 != 0 goto label10;

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l10;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l44, 7, r1);

     label10:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l44, 0, r1);

        return;

     label11:
        return;
    }

    public void addHistoryEventLocked(long, long, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, i3;
        java.lang.String r1;
        android.os.BatteryStats$HistoryItem r2, $r3, $r5, $r7;
        android.os.BatteryStats$HistoryTag $r4, $r6, $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3.<android.os.BatteryStats$HistoryItem: int eventCode> = i2;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r6 = $r5.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r6.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r1;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r8 = $r7.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r8.<android.os.BatteryStats$HistoryTag: int uid> = i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        return;
    }

    void addHistoryRecordInnerLocked(long, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        android.os.BatteryStats$HistoryItem r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.BatteryStats$HistoryItem;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,android.os.BatteryStats$HistoryItem)>(l0, r1);

        return;
    }

    void addHistoryRecordLocked(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, $l4, $l5, $l9, $l10, l11, l12;
        byte $b3, $b6;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3, $r4, $r5, $r6, r7, r8, $r9;
        int $i7, $i8, $i13, $i14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime>;

        $b3 = l11 cmp 0L;

        if $b3 == 0 goto label1;

        l2 = l0 - l11;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime>;

        l12 = l1 - $l4;

        $l5 = l2 - 20L;

        $b6 = l12 cmp $l5;

        if $b6 >= 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r2.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r3.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r4.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r5.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

        r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $i7 = r7.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = $i7 & 2147483647;

        r7.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        $l9 = l2 - l12;

        $l10 = l0 - $l9;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordInnerLocked(long,android.os.BatteryStats$HistoryItem)>($l10, $r6);

     label1:
        r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i13 = r8.<android.os.BatteryStats$HistoryItem: int states>;

        $i14 = $i13 | -2147483648;

        r8.<android.os.BatteryStats$HistoryItem: int states> = $i14;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = l1;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordInnerLocked(long,android.os.BatteryStats$HistoryItem)>(l0, $r9);

        return;
    }

    void addHistoryRecordLocked(long, long, byte, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l3, $l4;
        byte b2;
        android.os.BatteryStats$HistoryItem r1, $r2, $r3, r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        b2 := @parameter2: byte;

        r1 := @parameter3: android.os.BatteryStats$HistoryItem;

        r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache>;

        if r4 == null goto label1;

        $r3 = r4.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache> = $r3;

        goto label2;

     label1:
        $r2 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r2.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r4 = $r2;

     label2:
        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l4 = $l3 + l0;

        virtualinvoke r4.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l4, b2, r1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)>(r4);

        return;
    }

    void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems> = $i1;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = null;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastEnd> = r2;

        if r2 == null goto label1;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory> = r1;

     label2:
        return;
    }

    public void addIsolatedUidLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        android.util.SparseIntArray $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        virtualinvoke $r1.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void addIsolatedUid(int)>(i0);

        return;
    }

    void aggregateLastWakeupUptimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, $r3;
        long $l0, $l1, $l2, l3, l4;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l3 := @parameter0: long;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason>;

        if r1 == null goto label1;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs>;

        l4 = l3 - $l0;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>(r1);

        $l1 = l4 * 1000L;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void add(long,int)>($l1, 1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason>;

        $l2 = 1000L * l4;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,java.lang.String,long)>(36, $r3, $l2);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

     label1:
        return;
    }

    void clearHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$Constants $r3;
        int $i0, $i1;
        android.os.BatteryStats$HistoryItem $r5, $r6;
        java.util.HashMap $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r1.<android.os.Parcel: void setDataSize(int)>(0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i0 = $r3.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        $i1 = $i0 / 2;

        virtualinvoke $r4.<android.os.Parcel: void setDataCapacity(int)>($i1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r5.<android.os.BatteryStats$HistoryItem: void clear()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r6.<android.os.BatteryStats$HistoryItem: void clear()>();

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mActiveHistoryStates2> = -1;

        return;
    }

    public void clearPendingRemovedUids()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$Constants $r2;
        java.util.Queue $r3, $r4, $r7;
        boolean $z0;
        java.lang.Object $r5, $r8;
        com.android.internal.os.BatteryStatsImpl$UidToRemove $r6, $r9;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        l1 = $r2.<com.android.internal.os.BatteryStatsImpl$Constants: long UID_REMOVE_DELAY_MS>;

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.lang.Object peek()>();

        $r6 = (com.android.internal.os.BatteryStatsImpl$UidToRemove) $r5;

        $l3 = $r6.<com.android.internal.os.BatteryStatsImpl$UidToRemove: long timeAddedInQueue>;

        $l2 = l0 - l1;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label2;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $r8 = interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();

        $r9 = (com.android.internal.os.BatteryStatsImpl$UidToRemove) $r8;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$UidToRemove: void remove()>();

        goto label1;

     label2:
        return;
    }

    public void commitCurrentHistoryBatchLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        byte $b0;
        android.os.BatteryStats$HistoryItem $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b0 = (byte) -1;

        $r1.<android.os.BatteryStats$HistoryItem: byte cmd> = $b0;

        return;
    }

    public long computeBatteryRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeRealtime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryScreenOffRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeRealtime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryScreenOffUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeUptime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryTimeRemaining(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;
        android.os.BatteryStats$LevelStepTracker $r1, $r2;
        int $i0, $i2;
        byte $b1;
        long $l3, $l4, $l5, l6, l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l6 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        $i0 = $r1.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        if $i0 >= 1 goto label2;

        return -1L;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        l7 = virtualinvoke $r2.<android.os.BatteryStats$LevelStepTracker: long computeTimePerLevel()>();

        $b1 = l7 cmp 0L;

        if $b1 > 0 goto label3;

        return -1L;

     label3:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        $l3 = (long) $i2;

        $l4 = $l3 * l7;

        $l5 = $l4 * 1000L;

        return $l5;
    }

    public long computeBatteryUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeUptime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeChargeTimeRemaining(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;
        byte $b0, $b2;
        android.os.BatteryStats$LevelStepTracker $r1, $r2;
        int $i1, $i3, $i4;
        long $l5, $l6, $l7, $l8, l9, l10, l11;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l9 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        l10 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryTimeToFullSeconds>;

        $b0 = l10 cmp 0L;

        if $b0 < 0 goto label2;

        $l8 = l10 * 1000000L;

        return $l8;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        $i1 = $r1.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        if $i1 >= 1 goto label3;

        return -1L;

     label3:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        l11 = virtualinvoke $r2.<android.os.BatteryStats$LevelStepTracker: long computeTimePerLevel()>();

        $b2 = l11 cmp 0L;

        if $b2 > 0 goto label4;

        return -1L;

     label4:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        $i4 = 100 - $i3;

        $l5 = (long) $i4;

        $l6 = $l5 * l11;

        $l7 = $l6 * 1000L;

        return $l7;
    }

    public long computeRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l3 = l0 - $l2;

        $l5 = $l4 + $l3;

        return $l5;
    }

    public long computeUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l3 = l0 - $l2;

        $l5 = $l4 + $l3;

        return $l5;
    }

    public void copyFromAllUidsCpuTimes()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2, $r3;
        boolean $z0, $z1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z1 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void copyFromAllUidsCpuTimes(boolean,boolean)>($z0, $z1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void copyFromAllUidsCpuTimes(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, $z2, $z3, $z4;
        android.util.SparseArray r1;
        int i0, $i1, $i2, i3, i4, i5;
        com.android.internal.os.BatteryStatsImpl$Constants $r2;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r3;
        java.lang.Object $r4, $r6;
        com.android.internal.os.KernelSingleUidTimeReader $r5, $r11;
        long[] $r7, r15, r16;
        android.util.SparseIntArray $r8, $r9, $r10, $r12;
        java.lang.Throwable $r13;
        com.android.internal.os.BatteryStatsImpl$Uid r14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $z2 = $r2.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE>;

        if $z2 != 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        $z3 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean initKernelSingleUidTimeReaderLocked()>();

        if $z3 != 0 goto label05;

        exitmonitor r0;

     label04:
        return;

     label05:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        r1 = virtualinvoke $r3.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: android.util.SparseArray getAllUidCpuFreqTimeMs()>();

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIsPerProcessStateCpuDataStale>;

        if $z4 == 0 goto label07;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        virtualinvoke $r11.<com.android.internal.os.KernelSingleUidTimeReader: void setAllUidsCpuTimesMs(android.util.SparseArray)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIsPerProcessStateCpuDataStale> = 0;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        virtualinvoke $r12.<android.util.SparseIntArray: void clear()>();

        exitmonitor r0;

     label06:
        return;

     label07:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i3 = $i1 - 1;

     label08:
        if i3 < 0 goto label23;

     label09:
        i4 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i3);

        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i4);

        r14 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getAvailableUidStatsLocked(int)>($i2);

     label10:
        if r14 != null goto label11;

        goto label22;

     label11:
        $r4 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r15 = (long[]) $r4;

     label12:
        if r15 != null goto label13;

        goto label22;

     label13:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        $r6 = virtualinvoke r15.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (long[]) $r6;

        r16 = virtualinvoke $r5.<com.android.internal.os.KernelSingleUidTimeReader: long[] computeDelta(int,long[])>(i4, $r7);

     label14:
        if z0 == 0 goto label22;

        if r16 == null goto label22;

     label15:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        i0 = virtualinvoke $r8.<android.util.SparseIntArray: int indexOfKey(int)>(i4);

     label16:
        if i0 < 0 goto label19;

     label17:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        i5 = virtualinvoke $r9.<android.util.SparseIntArray: int valueAt(int)>(i0);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        virtualinvoke $r10.<android.util.SparseIntArray: void removeAt(int)>(i0);

     label18:
        goto label20;

     label19:
        i5 = r14.<com.android.internal.os.BatteryStatsImpl$Uid: int mProcessState>;

     label20:
        if i5 < 0 goto label22;

        if i5 >= 7 goto label22;

     label21:
        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: void access$200(com.android.internal.os.BatteryStatsImpl$Uid,int,long[],boolean)>(r14, i5, r16, z0);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: void access$300(com.android.internal.os.BatteryStatsImpl$Uid,int,long[],boolean)>(r14, i5, r16, z1);

     label22:
        i3 = i3 + -1;

        goto label08;

     label23:
        exitmonitor r0;

     label24:
        return;

     label25:
        $r13 := @caughtexception;

     label26:
        exitmonitor r0;

     label27:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public void createFakeHistoryEvents(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l2;
        byte $b1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l2 = 0L;

     label1:
        $b1 = l2 cmp l0;

        if $b1 >= 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>("name1", "historyName1", 1000);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>("name1", "historyName1", 1000);

        l2 = l2 + 1L;

        goto label1;

     label2:
        return;
    }

    public int describeContents()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 0;
    }

    public void dumpConstantsLocked(java.io.PrintWriter)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.PrintWriter r1;
        com.android.internal.os.BatteryStatsImpl$Constants $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Constants: void dumpLocked(java.io.PrintWriter)>(r1);

        return;
    }

    public void dumpCpuStatsLocked(java.io.PrintWriter)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.PrintWriter r1;
        int i0, i8, i9, i10, i11, i12, i13, i14, i15;
        android.util.SparseArray $r2, $r3, $r4, $r8, $r9, $r13, $r14, $r16, $r17;
        java.lang.Object $r5, $r10, $r15, $r18;
        com.android.internal.os.BatteryStatsImpl$Uid $r6, $r11, r19, r20;
        java.lang.String $r7, $r12;
        long $l1, $l3, $l4, $l5, $l6, $l7;
        byte $b2;
        long[] r21, r22;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per UID CPU user & system time in ms:");

        i8 = 0;

     label01:
        if i8 >= i0 goto label02;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i9 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>(i8);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i9);

        r19 = (com.android.internal.os.BatteryStatsImpl$Uid) $r18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $l4 = virtualinvoke r19.<com.android.internal.os.BatteryStatsImpl$Uid: long getUserCpuTimeUs(int)>(0);

        $l5 = $l4 / 1000L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l6 = virtualinvoke r19.<com.android.internal.os.BatteryStatsImpl$Uid: long getSystemCpuTimeUs(int)>(0);

        $l7 = $l6 / 1000L;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l7);

        i8 = i8 + 1;

        goto label01;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per UID CPU active time in ms:");

        i10 = 0;

     label03:
        if i10 >= i0 goto label05;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i11 = virtualinvoke $r13.<android.util.SparseArray: int keyAt(int)>(i10);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>(i11);

        r20 = (com.android.internal.os.BatteryStatsImpl$Uid) $r15;

        $l1 = virtualinvoke r20.<com.android.internal.os.BatteryStatsImpl$Uid: long getCpuActiveTime()>();

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $l3 = virtualinvoke r20.<com.android.internal.os.BatteryStatsImpl$Uid: long getCpuActiveTime()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l3);

     label04:
        i10 = i10 + 1;

        goto label03;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per UID CPU cluster time in ms:");

        i12 = 0;

     label06:
        if i12 >= i0 goto label08;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i13 = virtualinvoke $r8.<android.util.SparseArray: int keyAt(int)>(i12);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i13);

        $r11 = (com.android.internal.os.BatteryStatsImpl$Uid) $r10;

        r21 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuClusterTimes()>();

        if r21 == null goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>(r21);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

     label07:
        i12 = i12 + 1;

        goto label06;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per UID CPU frequency time in ms:");

        i14 = 0;

     label09:
        if i14 >= i0 goto label11;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i15 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i14);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i15);

        $r6 = (com.android.internal.os.BatteryStatsImpl$Uid) $r5;

        r22 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: long[] getCpuFreqTimes(int)>(0);

        if r22 == null goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>(r22);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label10:
        i14 = i14 + 1;

        goto label09;

     label11:
        return;
    }

    public void dumpLocked(android.content.Context, java.io.PrintWriter, int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.content.Context r1;
        java.io.PrintWriter r2;
        int i0, i1, $i9, $i10;
        long l2, $l3, $l4, $l5, $l6, $l7, $l8;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.io.PrintWriter;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        specialinvoke r0.<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>(r1, r2, i0, i1, l2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Total cpu time reads: ");

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mNumSingleUidCpuTimeReads>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Batched cpu time reads: ");

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mNumBatchedSingleUidCpuTimeReads>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Batching Duration (min): ");

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l5 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mCpuTimeReadsTrackingStartTime>;

        $l7 = $l5 - $l6;

        $l8 = $l7 / 60000L;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("All UID cpu time reads since the later of device start or stats reset: ");

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("UIDs removed since the later of device start or stats reset: ");

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumUidsRemoved>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i10);

        return;
    }

    public void finishAddingCpuLocked(int, int, int, int, int, int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        long $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime>;

        $l8 = (long) i0;

        $l10 = $l9 + $l8;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuUserTime> = $l10;

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime>;

        $l11 = (long) i1;

        $l13 = $l12 + $l11;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepCpuSystemTime> = $l13;

        $l15 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime>;

        $l14 = (long) i2;

        $l16 = $l15 + $l14;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatUserTime> = $l16;

        $l18 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime>;

        $l17 = (long) i3;

        $l19 = $l18 + $l17;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSystemTime> = $l19;

        $l21 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime>;

        $l20 = (long) i4;

        $l22 = $l21 + $l20;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIOWaitTime> = $l22;

        $l24 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime>;

        $l23 = (long) i5;

        $l25 = $l24 + $l23;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIrqTime> = $l25;

        $l27 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime>;

        $l26 = (long) i6;

        $l28 = $l27 + $l26;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatSoftIrqTime> = $l28;

        $l30 = r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime>;

        $l29 = (long) i7;

        $l31 = $l30 + $l29;

        r0.<com.android.internal.os.BatteryStatsImpl: long mCurStepStatIdleTime> = $l31;

        return;
    }

    public void finishIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsHistory $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsHistory: void finishIteratingHistory()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids> = null;

        return;
    }

    public void finishIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke r1.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>($i0);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = null;

        return;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid getAvailableUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        return $r3;
    }

    public long getAwakeTimeBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>();

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l1 = $l0 * 1000L;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        $l3 = $l1 - $l2;

        return $l3;
    }

    public long getBatteryRealtime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        return $l1;
    }

    public long getBatteryUptime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>(l0);

        return $l1;
    }

    protected long getBatteryUptimeLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l1 = $l0 * 1000L;

        $l2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>($l1);

        return $l2;
    }

    public android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        return $r1;
    }

    public long getBluetoothScanTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getCameraOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public android.os.connectivity.CellularBatteryStats getCellularBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3, l4, l5, $l6, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27;
        android.os.BatteryStats$ControllerActivityCounter r1;
        long[] r2, r3, r4;
        android.os.BatteryStats$LongCounter $r5, $r6, $r7, $r8, $r9, $r14;
        int $i7, $i8, $i9, $i10, $i11, $i12, $i13, i28, i29, i30;
        android.os.BatteryStats$LongCounter[] $r10, $r13;
        android.os.connectivity.CellularBatteryStats $r11;
        java.lang.Long $r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l6 * 1000L;

        r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()>();

        $r5 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getSleepTimeCounter()>();

        l1 = virtualinvoke $r5.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r6 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        l2 = virtualinvoke $r6.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r7 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        l3 = virtualinvoke $r7.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r8 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        l4 = virtualinvoke $r8.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r9 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getMonitoredRailChargeConsumedMaMs()>();

        l5 = virtualinvoke $r9.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $i7 = <android.os.BatteryStats: int NUM_DATA_CONNECTION_TYPES>;

        r2 = newarray (long)[$i7];

        i28 = 0;

     label1:
        $i8 = lengthof r2;

        if i28 >= $i8 goto label2;

        $l26 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)>(i28, l0, 0);

        $l27 = $l26 / 1000L;

        r2[i28] = $l27;

        i28 = i28 + 1;

        goto label1;

     label2:
        $i9 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        r3 = newarray (long)[$i9];

        i29 = 0;

     label3:
        $i10 = lengthof r3;

        if i29 >= $i10 goto label4;

        $l24 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)>(i29, l0, 0);

        $l25 = $l24 / 1000L;

        r3[i29] = $l25;

        i29 = i29 + 1;

        goto label3;

     label4:
        $r10 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        $i11 = lengthof $r10;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i11);

        r4 = newarray (long)[$i12];

        i30 = 0;

     label5:
        $i13 = lengthof r4;

        if i30 >= $i13 goto label6;

        $r13 = virtualinvoke r1.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        $r14 = $r13[i30];

        $l22 = virtualinvoke $r14.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        r4[i30] = $l22;

        $l23 = r4[i30];

        i30 = i30 + 1;

        goto label5;

     label6:
        $r11 = new android.os.connectivity.CellularBatteryStats;

        $l14 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>(l0, 0);

        $l15 = $l14 / 1000L;

        $l16 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveTime(long,int)>(l0, 0);

        $l17 = $l16 / 1000L;

        $l18 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>(1, 0);

        $l19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>(1, 0);

        $l20 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>(0, 0);

        $l21 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>(0, 0);

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        specialinvoke $r11.<android.os.connectivity.CellularBatteryStats: void <init>(long,long,long,long,long,long,long,long,long,java.lang.Long,long[],long[],long[],long)>($l15, $l17, $l18, $l19, $l20, $l21, l1, l2, l3, $r12, r2, r3, r4, l5);

        return $r11;
    }

    public android.os.BatteryStats$LevelStepTracker getChargeLevelStepTracker()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$LevelStepTracker $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        return $r1;
    }

    public long[] getCpuFreqs()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs>;

        return $r1;
    }

    public long getCurrentDailyStartTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime>;

        return $l0;
    }

    public android.os.BatteryStats$LevelStepTracker getDailyChargeLevelStepTracker()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$LevelStepTracker $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        return $r1;
    }

    public android.os.BatteryStats$LevelStepTracker getDailyDischargeLevelStepTracker()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$LevelStepTracker $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        return $r1;
    }

    public android.os.BatteryStats$DailyItem getDailyItemLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3;
        android.os.BatteryStats$DailyItem r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i2 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        i3 = $i1 - i2;

        if i3 < 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (android.os.BatteryStats$DailyItem) $r3;

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    public java.util.ArrayList getDailyPackageChanges()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        return $r1;
    }

    public int getDeviceIdleModeCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        $i3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i3;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        $i2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getDeviceIdleModeTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3, $l4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0L;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        $l4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l4;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        $l3 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getDeviceIdlingCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        $i3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i3;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        $i2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getDeviceIdlingTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3, $l4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0L;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        $l4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l4;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        $l3 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getDischargeAmount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0, $i1, i2, i3, i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i2 := @parameter0: int;

        if i2 != 0 goto label1;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>();

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>();

        i3 = $i0 - $i1;

     label2:
        i4 = i3;

        if i3 >= 0 goto label3;

        i4 = 0;

     label3:
        return i4;
    }

    public int getDischargeAmountScreenDoze()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze>;

     label02:
        i7 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i0;

     label05:
        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>($i1);

        if $z1 == 0 goto label08;

     label06:
        i7 = i0;

     label07:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel>;

        if $i3 >= $i2 goto label08;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i7 = i0 + $i6;

     label08:
        exitmonitor r0;

     label09:
        return i7;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeAmountScreenDozeSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge>;

     label02:
        i7 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i0;

     label05:
        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>($i1);

        if $z1 == 0 goto label08;

     label06:
        i7 = i0;

     label07:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel>;

        if $i3 >= $i2 goto label08;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i7 = i0 + $i6;

     label08:
        exitmonitor r0;

     label09:
        return i7;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeAmountScreenOff()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

     label02:
        i7 = i6;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i6;

     label05:
        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOff(int)>($i0);

        if $z1 == 0 goto label08;

     label06:
        i7 = i6;

     label07:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i2 >= $i1 goto label08;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i7 = i6 + $i5;

     label08:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDoze()>();

        exitmonitor r0;

     label09:
        $i9 = i8 + i7;

        return $i9;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeAmountScreenOffSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

     label02:
        i7 = i6;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i6;

     label05:
        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOff(int)>($i0);

        if $z1 == 0 goto label08;

     label06:
        i7 = i6;

     label07:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i2 >= $i1 goto label08;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i7 = i6 + $i5;

     label08:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDozeSinceCharge()>();

        exitmonitor r0;

     label09:
        $i9 = i8 + i7;

        return $i9;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeAmountScreenOn()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

     label02:
        i7 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i0;

     label05:
        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>($i1);

        if $z1 == 0 goto label08;

     label06:
        i7 = i0;

     label07:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i3 >= $i2 goto label08;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i7 = i0 + $i6;

     label08:
        exitmonitor r0;

     label09:
        return i7;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeAmountScreenOnSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

     label02:
        i7 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label08;

     label04:
        i7 = i0;

     label05:
        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>($i1);

        if $z1 == 0 goto label08;

     label06:
        i7 = i0;

     label07:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i3 >= $i2 goto label08;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i7 = i0 + $i6;

     label08:
        exitmonitor r0;

     label09:
        return i7;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getDischargeCurrentLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>();

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDischargeCurrentLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        return $i0;
    }

    public android.os.BatteryStats$LevelStepTracker getDischargeLevelStepTracker()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$LevelStepTracker $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        return $r1;
    }

    public int getDischargeStartLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>();

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDischargeStartLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        return $i0;
    }

    public java.lang.String getEndPlatformVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        return $r1;
    }

    public int getEstimatedBatteryCapacity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity>;

        return $i0;
    }

    public long getExternalStatsCollectionRateLimitMs()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$Constants $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        l0 = $r2.<com.android.internal.os.BatteryStatsImpl$Constants: long EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS>;

        exitmonitor r0;

     label2:
        return l0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getFlashlightOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public long getFlashlightOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getGlobalWifiRunningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getGpsBatteryDrainMaMs()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5;
        com.android.internal.os.PowerProfile $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, d5;
        byte $b1;
        int i6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d0 = virtualinvoke $r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("gps.voltage");

        $d1 = $d0 / 1000.0;

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return 0L;

     label1:
        d5 = 0.0;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i6 = 0;

     label2:
        if i6 >= 2 goto label3;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d2 = virtualinvoke $r2.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>("gps.signalqualitybased", i6);

        $l3 = l0 * 1000L;

        $l4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getGpsSignalQualityTime(int,long,int)>(i6, $l3, 0);

        $l5 = $l4 / 1000L;

        $d3 = (double) $l5;

        $d4 = $d2 * $d3;

        d5 = d5 + $d4;

        i6 = i6 + 1;

        goto label2;

     label3:
        $l2 = (long) d5;

        return $l2;
    }

    public android.os.connectivity.GpsBatteryStats getGpsBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1, $l2, $l3, $l4, $l6, $l7;
        long[] r2;
        android.os.connectivity.GpsBatteryStats $r3;
        int $i5, i8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r3 = new android.os.connectivity.GpsBatteryStats;

        specialinvoke $r3.<android.os.connectivity.GpsBatteryStats: void <init>()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l1 * 1000L;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>(l0, 0);

        $l3 = $l2 / 1000L;

        virtualinvoke $r3.<android.os.connectivity.GpsBatteryStats: void setLoggingDurationMs(long)>($l3);

        $l4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getGpsBatteryDrainMaMs()>();

        virtualinvoke $r3.<android.os.connectivity.GpsBatteryStats: void setEnergyConsumedMaMs(long)>($l4);

        r2 = newarray (long)[2];

        i8 = 0;

     label1:
        $i5 = lengthof r2;

        if i8 >= $i5 goto label2;

        $l6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getGpsSignalQualityTime(int,long,int)>(i8, l0, 0);

        $l7 = $l6 / 1000L;

        r2[i8] = $l7;

        i8 = i8 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<android.os.connectivity.GpsBatteryStats: void setTimeInGpsSignalQualityLevel(long[])>(r2);

        return $r3;
    }

    public long getGpsSignalQualityTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        if i0 < 0 goto label2;

        if i0 < 2 goto label1;

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;

     label2:
        return 0L;
    }

    public int getHighDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

     label02:
        i6 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label06;

     label04:
        i6 = i0;

     label05:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label06;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i6 = i0 + $i5;

     label06:
        exitmonitor r0;

     label07:
        return i6;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public long getHistoryBaseTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        return $l0;
    }

    public int getHistoryStringPoolBytes()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $i0 = lengthof $r1;

        $i3 = $i0 * 12;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars>;

        $i2 = $i1 * 2;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getHistoryStringPoolSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String[] $r1;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.String getHistoryTagPoolString(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getHistoryTagPoolUid(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getHistoryTotalSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Constants $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i1 = $r1.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i0 = $r2.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_FILES>;

        $i2 = $i1 * $i0;

        return $i2;
    }

    public int getHistoryUsedSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsHistory $r1;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        $i0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsHistory: int getHistoryUsedSize()>();

        return $i0;
    }

    public long getInteractiveTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public boolean getIsOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public android.util.LongSparseArray getKernelMemoryStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.LongSparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelMemoryTimerLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r1, $r4, r8;
        android.util.LongSparseArray $r2, $r7;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r5;
        com.android.internal.os.BatteryStatsImpl$Clocks $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r3;

        r8 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r6, $r5);

        r8 = $r4;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        virtualinvoke $r7.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l0, $r4);

     label1:
        return r8;
    }

    public java.util.Map getKernelWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5, r10;
        java.util.HashMap $r3, $r8;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        r10 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r7, $r6);

        r10 = $r5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r10;
    }

    public long getLongestDeviceIdleModeTime(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        return 0L;

     label1:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime>;

        return $l2;

     label2:
        $l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime>;

        return $l1;
    }

    public int getLowDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

     label02:
        i7 = i0;

     label03:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label06;

     label04:
        i7 = i0;

     label05:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label06;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        $i6 = $i5 - 1;

        i7 = i0 + $i6;

     label06:
        exitmonitor r0;

     label07:
        return i7;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public int getMaxLearnedBatteryCapacity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity>;

        return $i0;
    }

    public int getMinLearnedBatteryCapacity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity>;

        return $i0;
    }

    public java.lang.String[] getMobileIfaces()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String[] r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getMobileRadioActiveAdjustedTime(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public int getMobileRadioActiveCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getMobileRadioActiveTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getMobileRadioActiveUnknownCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        $i2 = (int) $l1;

        return $i2;
    }

    public long getMobileRadioActiveUnknownTime(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        return $r1;
    }

    public long getNetworkActivityBytes(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] r1;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r2;
        long $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $i2 = lengthof r1;

        if i0 >= $i2 goto label1;

        $r2 = r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i1);

        return $l3;

     label1:
        return 0L;
    }

    public long getNetworkActivityPackets(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] r1;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r2;
        long $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $i2 = lengthof r1;

        if i0 >= $i2 goto label1;

        $r2 = r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i1);

        return $l3;

     label1:
        return 0L;
    }

    public boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        android.os.Parcel r2;
        long l0, l1, $l5, $l6, $l7;
        com.android.internal.os.BatteryStatsHistory $r3;
        byte $b2, $b3, $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        r2 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsHistory: android.os.Parcel getNextParcel(android.os.BatteryStats$HistoryItem)>(r1);

        if r2 != null goto label1;

        return 0;

     label1:
        l0 = r1.<android.os.BatteryStats$HistoryItem: long time>;

        l1 = r1.<android.os.BatteryStats$HistoryItem: long currentTime>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>(r2, r1);

        $b2 = r1.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b2 == 5 goto label2;

        $b3 = r1.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b3 == 7 goto label2;

        $b4 = l1 cmp 0L;

        if $b4 == 0 goto label2;

        $l5 = r1.<android.os.BatteryStats$HistoryItem: long time>;

        $l6 = $l5 - l0;

        $l7 = $l6 + l1;

        r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l7;

     label2:
        return 1;
    }

    public long getNextMaxDailyDeadline()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline>;

        return $l0;
    }

    public long getNextMinDailyDeadline()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline>;

        return $l0;
    }

    public boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r4, $r5, $r10, $r11, $r13, r14;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        android.os.Parcel $r2, $r3, $r12;
        int $i0, $i1;
        com.android.internal.util.FastPrintWriter $r6;
        android.util.LogWriter $r7;
        android.os.BatteryStats$HistoryPrinter $r8, $r9;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int dataPosition()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        if $i0 < $i1 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        if z5 != 0 goto label5;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>($r12, $r11);

        z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $b4 = $r13.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b4 != 6 goto label3;

        z6 = 1;

        goto label4;

     label3:
        z6 = 0;

     label4:
        $z4 = z0 | z6;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = $z4;

     label5:
        r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator>;

        if r14 != null goto label7;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z3 != 0 goto label6;

        if z5 != 0 goto label6;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Old history ends before new history!");

     label6:
        return 0;

     label7:
        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>(r14);

        $r4 = r14.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = $r4;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z1 != 0 goto label9;

        if z5 == 0 goto label8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "New history ends before old history!");

        goto label9;

     label8:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $z2 = virtualinvoke r1.<android.os.BatteryStats$HistoryItem: boolean same(android.os.BatteryStats$HistoryItem)>($r5);

        if $z2 != 0 goto label9;

        $r6 = new com.android.internal.util.FastPrintWriter;

        $r7 = new android.util.LogWriter;

        specialinvoke $r7.<android.util.LogWriter: void <init>(int,java.lang.String)>(5, "BatteryStatsImpl");

        specialinvoke $r6.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>($r7);

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Histories differ!");

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Old history:");

        $r8 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke $r8.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        virtualinvoke $r8.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long,boolean,boolean)>($r6, r1, 0L, 0, 1);

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("New history:");

        $r9 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke $r9.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke $r9.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long,boolean,boolean)>($r6, $r10, 0L, 0, 1);

        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

     label9:
        return 1;
    }

    public int getNumConnectivityChange(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange>;

        return $i1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public int getParcelVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 186;
    }

    public int getPhoneDataConnectionCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getPhoneDataConnectionTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getPhoneDataConnectionTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getPhoneDataConnectionTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getPhoneDataConnectionTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getPhoneOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getPhoneOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getPhoneSignalScanningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public volatile android.os.BatteryStats$Timer getPhoneSignalScanningTimer()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getPhoneSignalScanningTimer()>();

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getPhoneSignalScanningTimer()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        return $r1;
    }

    public int getPhoneSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getPhoneSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getPhoneSignalStrengthTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getPhoneSignalStrengthTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getPhoneSignalStrengthTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getPowerSaveModeEnabledCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getPowerSaveModeEnabledTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public long getProcessWakeTime(int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, i6, i7;
        long l1, l2, $l4, $l5, l8;
        android.util.SparseArray $r1, $r3;
        java.lang.Object $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$Uid r5;
        android.os.BatteryStats$Uid$Pid r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i6);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i7);

        r5 = (com.android.internal.os.BatteryStatsImpl$Uid) $r2;

        l8 = 0L;

        if r5 == null goto label2;

        $r3 = r5.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (android.os.BatteryStats$Uid$Pid) $r4;

        if r6 == null goto label2;

        l2 = r6.<android.os.BatteryStats$Uid$Pid: long mWakeSumMs>;

        $i3 = r6.<android.os.BatteryStats$Uid$Pid: int mWakeNesting>;

        if $i3 <= 0 goto label1;

        $l5 = r6.<android.os.BatteryStats$Uid$Pid: long mWakeStartMs>;

        l8 = l1 - $l5;

     label1:
        $l4 = l2 + l8;

        return $l4;

     label2:
        return 0L;
    }

    public java.util.Map getRpmStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5, r10;
        java.util.HashMap $r3, $r8;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        r10 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r7, $r6);

        r10 = $r5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r10;
    }

    public long getScreenBrightnessTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getScreenBrightnessTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getScreenBrightnessTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getScreenBrightnessTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getScreenDozeCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getScreenDozeTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public java.util.Map getScreenOffRpmStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getScreenOffRpmTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5, r10;
        java.util.HashMap $r3, $r8;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        r10 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r7, $r6);

        r10 = $r5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r10;
    }

    public int getScreenOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getScreenOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        java.lang.String r1, r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        $r4 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public long getStartClockTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        byte $b2, $b3, $b13;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = l0 cmp 31536000000L;

        if $b2 <= 0 goto label1;

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        $l11 = l0 - 31536000000L;

        $b13 = $l12 cmp $l11;

        if $b13 < 0 goto label2;

     label1:
        l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        $b3 = l1 cmp l0;

        if $b3 <= 0 goto label3;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l4 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l5 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordCurrentTimeChangeLocked(long,long,long)>(l0, $l4, $l5);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l6 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l8 = $l7 / 1000L;

        $l9 = $l6 - $l8;

        $l10 = l0 - $l9;

        return $l10;

     label3:
        return l1;
    }

    public int getStartCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        return $i0;
    }

    public java.lang.String getStartPlatformVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        return $r1;
    }

    public long getUahDischarge(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public long getUahDischargeDeepDoze(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public long getUahDischargeLightDoze(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public long getUahDischargeScreenDoze(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public long getUahDischargeScreenOff(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public android.util.SparseArray getUidStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i0);

        r6 = $r4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    public java.util.Map getWakeupReasonStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5, r10;
        java.util.HashMap $r3, $r8;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        r10 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r7, $r6);

        r10 = $r5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r10;
    }

    public long getWifiActiveTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public android.os.connectivity.WifiBatteryStats getWifiBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l31, l33;
        long[] r1, r2, r17;
        android.os.BatteryStats$LongCounter $r3, $r4, $r5, $r7, $r8, $r9;
        android.os.BatteryStats$LongCounter[] $r6;
        android.util.SparseArray $r10, $r12;
        int $i12, $i30, i32, i34, i35, i36;
        android.os.connectivity.WifiBatteryStats $r11;
        java.lang.Object $r13;
        com.android.internal.os.BatteryStatsImpl$Uid $r14;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r15;
        android.os.BatteryStats$ControllerActivityCounter r16;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l8 * 1000L;

        r16 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()>();

        $r3 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        l1 = virtualinvoke $r3.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r4 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getScanTimeCounter()>();

        l2 = virtualinvoke $r4.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r5 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        l3 = virtualinvoke $r5.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r6 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        $r7 = $r6[0];

        l4 = virtualinvoke $r7.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l10 = $l9 * 1000L;

        $l11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>($l10, 0);

        l5 = $l11 / 1000L;

        $r8 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        l6 = virtualinvoke $r8.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        $r9 = virtualinvoke r16.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getMonitoredRailChargeConsumedMaMs()>();

        l7 = virtualinvoke $r9.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        i32 = 0;

        l33 = 0L;

     label1:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i12 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i32 >= $i12 goto label2;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i32);

        $r14 = (com.android.internal.os.BatteryStatsImpl$Uid) $r13;

        $r15 = $r14.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        $i30 = virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$DualTimer: int getCountLocked(int)>(0);

        $l31 = (long) $i30;

        l33 = l33 + $l31;

        i32 = i32 + 1;

        goto label1;

     label2:
        r17 = newarray (long)[8];

        i34 = 0;

     label3:
        if i34 >= 8 goto label4;

        $l28 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getWifiStateTime(int,long,int)>(i34, l0, 0);

        $l29 = $l28 / 1000L;

        r17[i34] = $l29;

        i34 = i34 + 1;

        goto label3;

     label4:
        r1 = newarray (long)[13];

        i35 = 0;

     label5:
        if i35 >= 13 goto label6;

        $l26 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getWifiSupplStateTime(int,long,int)>(i35, l0, 0);

        $l27 = $l26 / 1000L;

        r1[i35] = $l27;

        i35 = i35 + 1;

        goto label5;

     label6:
        r2 = newarray (long)[5];

        i36 = 0;

     label7:
        if i36 >= 5 goto label8;

        $l24 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getWifiSignalStrengthTime(int,long,int)>(i36, l0, 0);

        $l25 = $l24 / 1000L;

        r2[i36] = $l25;

        i36 = i36 + 1;

        goto label7;

     label8:
        $r11 = new android.os.connectivity.WifiBatteryStats;

        $l13 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>(l0, 0);

        $l14 = $l13 / 1000L;

        $l15 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getWifiActiveTime(long,int)>(l0, 0);

        $l16 = $l15 / 1000L;

        $l17 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>(3, 0);

        $l18 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>(3, 0);

        $l19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>(2, 0);

        $l20 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>(2, 0);

        $l21 = l1 + l3;

        $l22 = $l21 + l4;

        $l23 = l5 - $l22;

        specialinvoke $r11.<android.os.connectivity.WifiBatteryStats: void <init>(long,long,long,long,long,long,long,long,long,long,long,long,long,long[],long[],long[],long)>($l14, $l16, $l17, $l18, $l19, $l20, $l23, l2, l1, l3, l4, l6, l33, r17, r2, r1, l7);

        return $r11;
    }

    public android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        return $r1;
    }

    public java.lang.String[] getWifiIfaces()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String[] r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getWifiMulticastWakelockCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getWifiMulticastWakelockTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getWifiOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getWifiSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getWifiSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getWifiSignalStrengthTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getWifiSignalStrengthTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getWifiSignalStrengthTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getWifiStateCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getWifiStateTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getWifiStateTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getWifiStateTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getWifiStateTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getWifiSupplStateCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getWifiSupplStateTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public volatile android.os.BatteryStats$Timer getWifiSupplStateTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Timer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Timer getWifiSupplStateTimer(int)>(i0);

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Timer getWifiSupplStateTimer(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        return $r2;
    }

    public boolean hasBluetoothActivityReporting()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting>;

        return $z0;
    }

    public boolean hasModemActivityReporting()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting>;

        return $z0;
    }

    public boolean hasWifiActivityReporting()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting>;

        return $z0;
    }

    void initDischarge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$LevelStepTracker $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge> = 0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r1.<android.os.BatteryStats$LevelStepTracker: void init()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r2.<android.os.BatteryStats$LevelStepTracker: void init()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: boolean reset(boolean)>(0);

        return;
    }

    void initTimes(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l2;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void init(long,long)>(l0, l1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: void init(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = l1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = l0;

        return;
    }

    public boolean isCharging()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging>;

        return $z0;
    }

    public boolean isOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public boolean isOnBatteryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        return $z0;
    }

    public boolean isOnBatteryScreenOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        return $z0;
    }

    public boolean isScreenDoze(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        if i0 == 3 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isScreenOff(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isScreenOn(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        if i0 == 2 goto label2;

        if i0 == 5 goto label2;

        if i0 != 6 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public void lambda$readKernelUidCpuActiveTimesLocked$2$BatteryStatsImpl(boolean, int, java.lang.Long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1, $z2;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r1;
        int $i0, i4, i5;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r3;
        long $l1;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7, $r13;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r8, $r9;
        java.lang.Long r14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        i4 := @parameter1: int;

        r14 := @parameter2: java.lang.Long;

        i5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i4);

        $z1 = staticinvoke <android.os.Process: boolean isIsolated(int)>(i5);

        if $z1 == 0 goto label1;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader>;

        virtualinvoke $r9.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void removeUid(int)>(i5);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got active times for an isolated uid with no mapping: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r13);

        return;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider>;

        $i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i5);

        $z2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$UserInfoProvider: boolean exists(int)>($i0);

        if $z2 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got active times for an invalid user\'s uid ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r7);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader>;

        virtualinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void removeUid(int)>(i5);

        return;

     label2:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i5);

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mCpuActiveTimeMs>;

        $l1 = virtualinvoke r14.<java.lang.Long: long longValue()>();

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>($l1, z0);

        return;
    }

    public void lambda$readKernelUidCpuClusterTimesLocked$3$BatteryStatsImpl(boolean, int, long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1, $z2;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r1;
        int $i0, i3, i4;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r3;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7, $r13;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r8, $r9;
        long[] r14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        i3 := @parameter1: int;

        r14 := @parameter2: long[];

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i3);

        $z1 = staticinvoke <android.os.Process: boolean isIsolated(int)>(i4);

        if $z1 == 0 goto label1;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader>;

        virtualinvoke $r9.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void removeUid(int)>(i4);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got cluster times for an isolated uid with no mapping: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r13);

        return;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider>;

        $i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i4);

        $z2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$UserInfoProvider: boolean exists(int)>($i0);

        if $z2 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got cluster times for an invalid user\'s uid ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r7);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader>;

        virtualinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void removeUid(int)>(i4);

        return;

     label2:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i4);

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuClusterTimesMs>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void addCountLocked(long[],boolean)>(r14, z0);

        return;
    }

    public void lambda$readKernelUidCpuFreqTimesLocked$1$BatteryStatsImpl(boolean, boolean, boolean, int, int, int, long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, z2, $z3, $z4;
        int i0, i1, i2, $i3, $i13, $i14, $i15, $i16, $i17, $i18, i21, i22, i23, i24, i25;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r3, $r4, $r5, $r7, $r8, $r31, $r32, $r46, $r47, $r48;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6, $r9, $r23;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] $r10, $r11, $r12, $r14, $r16, $r19, $r26, $r30, $r50;
        com.android.internal.os.PowerProfile $r13;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r15, $r17, $r18, $r27, r51;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r20, $r21, $r22;
        long $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, l26;
        long[] $r24, $r25, r43, r53;
        long[][] $r28, $r29, r49, r52;
        java.lang.StringBuilder $r33, $r39;
        java.lang.String $r36, $r42;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r37, $r38;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i21 := @parameter5: int;

        r43 := @parameter6: long[];

        i22 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i21);

        $z3 = staticinvoke <android.os.Process: boolean isIsolated(int)>(i22);

        if $z3 == 0 goto label01;

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        virtualinvoke $r38.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void removeUid(int)>(i22);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got freq readings for an isolated uid with no mapping: ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r42);

        return;

     label01:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i22);

        $z4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$UserInfoProvider: boolean exists(int)>($i3);

        if $z4 != 0 goto label02;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got freq readings for an invalid user\'s uid ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r36);

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        virtualinvoke $r37.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void removeUid(int)>(i22);

        return;

     label02:
        r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i22);

        $r3 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        if $r3 == null goto label03;

        $r32 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        $i17 = virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: int getSize()>();

        $i18 = lengthof r43;

        if $i17 == $i18 goto label04;

     label03:
        $r4 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r4);

        $r5 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r6);

        r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs> = $r5;

     label04:
        $r46 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        virtualinvoke $r46.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void addCountLocked(long[],boolean)>(r43, z0);

        $r47 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        if $r47 == null goto label05;

        $r31 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        $i15 = virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: int getSize()>();

        $i16 = lengthof r43;

        if $i15 == $i16 goto label06;

     label05:
        $r7 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r7);

        $r8 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r8.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r9);

        r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs> = $r8;

     label06:
        $r48 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        virtualinvoke $r48.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void addCountLocked(long[],boolean)>(r43, z1);

        if z2 == 0 goto label19;

        $r10 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        if $r10 == null goto label07;

        $r30 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $i14 = lengthof $r30;

        if $i14 == i0 goto label08;

     label07:
        $r11 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])>($r11);

        $r12 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[])[i0];

        r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs> = $r12;

     label08:
        if i1 <= 0 goto label09;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        if $r28 != null goto label09;

        $r29 = newarray (long[])[i0];

        r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs> = $r29;

     label09:
        i23 = 0;

        i24 = 0;

     label10:
        if i24 >= i0 goto label19;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        i2 = virtualinvoke $r13.<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)>(i24);

        $r14 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r15 = $r14[i24];

        if $r15 == null goto label11;

        $r26 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r27 = $r26[i24];

        $i13 = lengthof $r27;

        if $i13 == i2 goto label12;

     label11:
        $r16 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r17 = $r16[i24];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r17);

        $r19 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r18 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[i2];

        $r19[i24] = $r18;

     label12:
        if i1 <= 0 goto label13;

        r49 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        $r24 = r49[i24];

        if $r24 != null goto label13;

        $r25 = newarray (long)[i2];

        r49[i24] = $r25;

     label13:
        $r50 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        r51 = $r50[i24];

        i25 = 0;

     label14:
        if i25 >= i2 goto label18;

        $r20 = r51[i25];

        if $r20 != null goto label15;

        $r22 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r22.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r23);

        r51[i25] = $r22;

     label15:
        r52 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        if r52 == null goto label16;

        $l5 = r43[i23];

        $l6 = $l5 * 1000L;

        $l7 = $l6 * 50L;

        l26 = $l7 / 100L;

        r53 = r52[i24];

        $l11 = r53[i25];

        $l8 = r43[i23];

        $l9 = $l8 * 1000L;

        $l10 = $l9 - l26;

        $l12 = $l11 + $l10;

        r53[i25] = $l12;

        goto label17;

     label16:
        $l4 = r43[i23];

        l26 = $l4 * 1000L;

     label17:
        $r21 = r51[i25];

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>(l26, z0);

        i23 = i23 + 1;

        i25 = i25 + 1;

        goto label14;

     label18:
        i24 = i24 + 1;

        goto label10;

     label19:
        return;
    }

    public void lambda$readKernelUidCpuTimesLocked$0$BatteryStatsImpl(int, boolean, android.util.SparseLongArray, int, long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i8, i14, i15;
        boolean z0, $z1, $z2;
        long l1, l2, $l4, $l5, $l6, $l7, $l9, $l10, $l11, l16, l17;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r1;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r2, $r3;
        java.lang.StringBuilder $r5, $r11;
        java.lang.String $r8, $r14;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r9, $r10;
        android.util.SparseLongArray r15;
        long[] r16;
        com.android.internal.os.BatteryStatsImpl$Uid r19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r15 := @parameter2: android.util.SparseLongArray;

        i14 := @parameter3: int;

        r16 := @parameter4: long[];

        l1 = r16[0];

        l2 = r16[1];

        i15 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i14);

        $z1 = staticinvoke <android.os.Process: boolean isIsolated(int)>(i15);

        if $z1 == 0 goto label1;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader>;

        virtualinvoke $r10.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void removeUid(int)>(i15);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got readings for an isolated uid with no mapping: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r14);

        return;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i15);

        $z2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$UserInfoProvider: boolean exists(int)>($i3);

        if $z2 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got readings for an invalid user\'s uid ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r8);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader>;

        virtualinvoke $r9.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void removeUid(int)>(i15);

        return;

     label2:
        r19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i15);

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs>;

        $l5 = $l4 + l1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs> = $l5;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs>;

        $l7 = $l6 + l2;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs> = $l7;

        l16 = l1;

        l17 = l2;

        if i0 <= 0 goto label3;

        $l10 = l1 * 50L;

        l16 = $l10 / 100L;

        $l11 = 50L * l2;

        l17 = $l11 / 100L;

     label3:
        goto label4;

     label4:
        $r2 = r19.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mUserCpuTime>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>(l16, z0);

        $r3 = r19.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mSystemCpuTime>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>(l17, z0);

        if r15 == null goto label5;

        $i8 = virtualinvoke r19.<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>();

        $l9 = l16 + l17;

        virtualinvoke r15.<android.util.SparseLongArray: void put(int,long)>($i8, $l9);

     label5:
        return;
    }

    public int mapUid(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i1 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        i0 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i1, -1);

        if i0 <= 0 goto label1;

        i1 = i0;

        goto label1;

     label1:
        return i1;
    }

    public void markPartialTimersAsEligible()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, i3, i4, i5;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1, $r12, $r16;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r13, $r14;
        boolean $z0;
        java.lang.Object $r8, $r11, $r15;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean referenceEquals(java.util.ArrayList,java.util.ArrayList)>($r3, $r2);

        if $z0 == 0 goto label3;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $i2 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r16 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r15;

        $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        i3 = i3 + -1;

        goto label1;

     label2:
        goto label7;

     label3:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i4 = $i1 - 1;

     label4:
        if i4 < 0 goto label5;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r12 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r11;

        $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 0;

        i4 = i4 + -1;

        goto label4;

     label5:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i5 = 0;

     label6:
        if i5 >= i0 goto label7;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r1 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r8;

        r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        i5 = i5 + 1;

        goto label6;

     label7:
        return;
    }

    public void noteActivityPausedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityPausedLocked(long)>($l2);

        return;
    }

    public void noteActivityResumedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityResumedLocked(long)>($l2);

        return;
    }

    public void noteAlarmFinishLocked(java.lang.String, android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        android.os.WorkSource r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.WorkSource;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteAlarmStartOrFinishLocked(int,java.lang.String,android.os.WorkSource,int)>(16397, r1, r2, i0);

        return;
    }

    public void noteAlarmStartLocked(java.lang.String, android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        android.os.WorkSource r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.WorkSource;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteAlarmStartOrFinishLocked(int,java.lang.String,android.os.WorkSource,int)>(32781, r1, r2, i0);

        return;
    }

    public void noteAudioOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6, i7, i8;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        i2 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = i2;

        if i2 != 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 & -4194305;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOffLocked(long)>(l0);

        return;
    }

    public void noteAudioOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3, $i4, $i5, $i6, i7, i8;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i2 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 | 4194304;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = $i4;

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOnLocked(long)>(l0);

        return;
    }

    public void noteBluetoothScanResultsFromSourceLocked(android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3, $r4;
        android.os.WorkSource r5;
        java.util.List r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r5 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        i1 = virtualinvoke r5.<android.os.WorkSource: int size()>();

        i7 = 0;

     label1:
        if i7 >= i1 goto label2;

        $i5 = virtualinvoke r5.<android.os.WorkSource: int getUid(int)>(i7);

        $i6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i5);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteBluetoothScanResultsLocked(int)>(i0);

        i7 = i7 + 1;

        goto label1;

     label2:
        r6 = virtualinvoke r5.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r6 == null goto label4;

        i8 = 0;

     label3:
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        if i8 >= $i2 goto label4;

        $r1 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i8);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i3 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i3);

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i4);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteBluetoothScanResultsLocked(int)>(i0);

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteBluetoothScanStartedFromSourceLocked(android.os.WorkSource, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i3);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStartedLocked(android.os.WorkSource$WorkChain,int,boolean)>(null, $i2, z0);

        i3 = i3 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i4 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i4 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStartedLocked(android.os.WorkSource$WorkChain,int,boolean)>($r2, -1, z0);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteBluetoothScanStoppedFromSourceLocked(android.os.WorkSource, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i3);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStoppedLocked(android.os.WorkSource$WorkChain,int,boolean)>(null, $i2, z0);

        i3 = i3 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i4 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i4 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStoppedLocked(android.os.WorkSource$WorkChain,int,boolean)>($r2, -1, z0);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteCameraOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6, i7, i8;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting>;

        i2 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting> = i2;

        if i2 != 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 & -2097153;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteCameraTurnedOffLocked(long)>(l0);

        return;
    }

    public void noteCameraOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, i6, i7;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i6 := @parameter0: int;

        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i6);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting>;

        $i3 = i7 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting> = $i3;

        if i7 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 | 2097152;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteCameraTurnedOnLocked(long)>(l1);

        return;
    }

    public void noteChangeWakelockFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int, android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17;
        java.lang.String r1, r2, r3, r4;
        boolean z0;
        long l2, l3;
        java.util.ArrayList[] r5;
        android.os.WorkSource$WorkChain r6, r15;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7, $r8;
        java.lang.Object $r9, $r10;
        android.os.WorkSource r11, r12;
        java.util.ArrayList r13, r14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r11 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r12 := @parameter5: android.os.WorkSource;

        i11 := @parameter6: int;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: java.lang.String;

        i12 := @parameter9: int;

        z0 := @parameter10: boolean;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r5 = staticinvoke <android.os.WorkSource: java.util.ArrayList[] diffChains(android.os.WorkSource,android.os.WorkSource)>(r11, r12);

        i4 = virtualinvoke r12.<android.os.WorkSource: int size()>();

        i13 = 0;

     label01:
        if i13 >= i4 goto label02;

        $i10 = virtualinvoke r12.<android.os.WorkSource: int getUid(int)>(i13);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>($i10, i11, null, r3, r4, i12, z0, l2, l3);

        i13 = i13 + 1;

        goto label01;

     label02:
        if r5 == null goto label05;

        r13 = r5[0];

        if r13 == null goto label05;

        i14 = 0;

     label03:
        $i8 = interfaceinvoke r13.<java.util.List: int size()>();

        if i14 >= $i8 goto label04;

        $r10 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i14);

        r6 = (android.os.WorkSource$WorkChain) $r10;

        $i9 = virtualinvoke r6.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>($i9, i11, r6, r3, r4, i12, z0, l2, l3);

        i14 = i14 + 1;

        goto label03;

     label04:
        goto label05;

     label05:
        i15 = virtualinvoke r11.<android.os.WorkSource: int size()>();

        i16 = 0;

     label06:
        if i16 >= i15 goto label07;

        $i7 = virtualinvoke r11.<android.os.WorkSource: int getUid(int)>(i16);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>($i7, i0, null, r1, r2, i1, l2, l3);

        i16 = i16 + 1;

        goto label06;

     label07:
        if r5 == null goto label10;

        r14 = r5[1];

        if r14 == null goto label10;

        i17 = 0;

     label08:
        $i5 = interfaceinvoke r14.<java.util.List: int size()>();

        if i17 >= $i5 goto label09;

        $r9 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i17);

        r15 = (android.os.WorkSource$WorkChain) $r9;

        $i6 = virtualinvoke r15.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>($i6, i0, r15, r1, r2, i1, l2, l3);

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label10;

     label10:
        return;
    }

    public void noteConnectivityChangedLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l1, $l2, 9, r1, i0);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange> = $i4;

        return;
    }

    public void noteCurrentTimeChangedLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1, $l2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordCurrentTimeChangeLocked(long,long,long)>($l0, $l1, $l2);

        return;
    }

    public void noteDeviceIdleModeLocked(int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i13, $i14, $i15, $i16, $i17, i18, $i22, i24;
        long l1, $l8, $l9, $l11, l19, l23;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, $z7, $z8, $z9;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b10, $b12, b20, b21;
        java.lang.String r11;
        android.os.BatteryStats$HistoryItem r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        i18 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l19 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        if i0 != 2 goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceIdling>;

        if $z0 == 0 goto label03;

        if z5 != 0 goto label03;

        if r11 != null goto label03;

        z5 = 1;

        goto label03;

     label03:
        if i0 != 1 goto label04;

        z6 = 1;

        goto label05;

     label04:
        z6 = 0;

     label05:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceLightIdling>;

        if $z1 == 0 goto label06;

        if z6 != 0 goto label06;

        if z5 != 0 goto label06;

        if r11 != null goto label06;

        z6 = 1;

        goto label06;

     label06:
        if r11 == null goto label09;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceIdling>;

        if $z3 != 0 goto label08;

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceLightIdling>;

        if $z4 == 0 goto label07;

        goto label08;

     label07:
        goto label09;

     label08:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l19, 10, r11, i18);

        goto label09;

     label09:
        $z7 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceIdling>;

        if $z7 != z5 goto label10;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceLightIdling>;

        if $z2 == z6 goto label14;

     label10:
        if z5 == 0 goto label11;

        b20 = 2;

        goto label13;

     label11:
        if z6 == 0 goto label12;

        b20 = 1;

        goto label13;

     label12:
        b20 = 0;

     label13:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(22, b20);

     label14:
        $z8 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceIdling>;

        if $z8 == z5 goto label18;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceIdling> = z5;

        if z5 == 0 goto label15;

        b21 = 8;

        goto label16;

     label15:
        b21 = 0;

     label16:
        i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i13 = i3 & 8;

        $i14 = $i13 ^ b21;

        $i15 = i2 | $i14;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = $i15;

        $i16 = i3 & -9;

        $i17 = $i16 | b21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = $i17;

        if z5 == 0 goto label17;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        goto label18;

     label17:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label18:
        $z9 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceLightIdling>;

        if $z9 == z6 goto label20;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mDeviceLightIdling> = z6;

        if z6 == 0 goto label19;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        goto label20;

     label19:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label20:
        $i22 = r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode>;

        if $i22 == i0 goto label27;

        r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r12.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i4 & -100663297;

        $i5 = i0 << 25;

        $i7 = $i6 | $i5;

        r12.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l19);

        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastIdleTimeStart>;

        l23 = l1 - $l8;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastIdleTimeStart> = l1;

        i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode>;

        if i24 != 1 goto label22;

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime>;

        $b12 = l23 cmp $l11;

        if $b12 <= 0 goto label21;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime> = l23;

     label21:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label24;

     label22:
        if i24 != 2 goto label24;

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime>;

        $b10 = l23 cmp $l9;

        if $b10 <= 0 goto label23;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime> = l23;

     label23:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label24:
        if i0 != 1 goto label25;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        goto label26;

     label25:
        if i0 != 2 goto label26;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label26:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode> = i0;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(21, i0);

     label27:
        return;
    }

    public void noteEventLocked(int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, i4;
        java.lang.String r1;
        android.os.BatteryStats$HistoryEventTracker $r2;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i3 := @parameter2: int;

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i3);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r2.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(i0, r1, i4, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l1, $l2, i0, r1, i4);

        return;
    }

    public void noteFlashlightOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, i7, i8;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting>;

        i8 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting> = i8;

        if i8 != 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 & -134217729;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFlashlightTurnedOffLocked(long)>(l1);

        return;
    }

    public void noteFlashlightOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, i6, i7;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i6 := @parameter0: int;

        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i6);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting>;

        $i3 = i7 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting> = $i3;

        if i7 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 | 134217728;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFlashlightTurnedOnLocked(long)>(l1);

        return;
    }

    public void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i4 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i6);

        $i5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i4);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i7 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i7 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i7);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i2 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>($i3);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteFullWifiLockAcquiredLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 268435456;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = $i5;

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockAcquiredLocked(long)>(l1);

        return;
    }

    public void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i4 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i6);

        $i5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i4);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i7 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i7 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i7);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i2 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>($i3);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteFullWifiLockReleasedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, $i4, $i5, $i6;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        i3 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = i3;

        if i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 & -268435457;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockReleasedLocked(long)>(l1);

        return;
    }

    public void noteGpsChangedLocked(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        java.util.ArrayList $r1, $r2, r10, r11;
        java.lang.Object $r3, $r5;
        android.os.WorkSource$WorkChain $r4, $r6;
        android.os.WorkSource r7, r8;
        java.util.ArrayList[] r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r7 := @parameter0: android.os.WorkSource;

        r8 := @parameter1: android.os.WorkSource;

        i6 = 0;

     label1:
        $i0 = virtualinvoke r8.<android.os.WorkSource: int size()>();

        if i6 >= $i0 goto label2;

        $i5 = virtualinvoke r8.<android.os.WorkSource: int getUid(int)>(i6);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int,android.os.WorkSource$WorkChain)>($i5, null);

        i6 = i6 + 1;

        goto label1;

     label2:
        i7 = 0;

     label3:
        $i1 = virtualinvoke r7.<android.os.WorkSource: int size()>();

        if i7 >= $i1 goto label4;

        $i4 = virtualinvoke r7.<android.os.WorkSource: int getUid(int)>(i7);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int,android.os.WorkSource$WorkChain)>($i4, null);

        i7 = i7 + 1;

        goto label3;

     label4:
        r9 = staticinvoke <android.os.WorkSource: java.util.ArrayList[] diffChains(android.os.WorkSource,android.os.WorkSource)>(r7, r8);

        if r9 == null goto label8;

        $r1 = r9[0];

        if $r1 == null goto label6;

        r10 = r9[0];

        i8 = 0;

     label5:
        $i3 = interfaceinvoke r10.<java.util.List: int size()>();

        if i8 >= $i3 goto label6;

        $r5 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i8);

        $r6 = (android.os.WorkSource$WorkChain) $r5;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int,android.os.WorkSource$WorkChain)>(-1, $r6);

        i8 = i8 + 1;

        goto label5;

     label6:
        $r2 = r9[1];

        if $r2 == null goto label8;

        r11 = r9[1];

        i9 = 0;

     label7:
        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        if i9 >= $i2 goto label8;

        $r3 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i9);

        $r4 = (android.os.WorkSource$WorkChain) $r3;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int,android.os.WorkSource$WorkChain)>(-1, $r4);

        i9 = i9 + 1;

        goto label7;

     label8:
        return;
    }

    public void noteGpsSignalQualityLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, $i4, $i5, $i6, $i7, $i8;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r6, $r8;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r7, $r9;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i4 != 0 goto label1;

        return;

     label1:
        if i0 < 0 goto label6;

        if i0 < 2 goto label2;

        goto label6;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin>;

        if i3 == i0 goto label5;

        if i3 < 0 goto label3;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r9 = $r8[i3];

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label3:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r5 = $r4[i0];

        $z0 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 != 0 goto label4;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r7 = $r6[i0];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label4:
        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i5 & -129;

        $i6 = i0 << 7;

        $i8 = $i7 | $i6;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsSignalQualityBin> = i0;

     label5:
        return;

     label6:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllGpsSignalQualityTimersLocked(int)>(-1);

        return;
    }

    public void noteInteractiveLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        long l0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive>;

        if $z1 == z0 goto label2;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = z0;

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label2:
        return;
    }

    public void noteJobFinishLocked(java.lang.String, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3, i4;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        android.os.BatteryStats$HistoryEventTracker $r5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i3);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i4);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopJobLocked(java.lang.String,long,int)>(r1, l1, i0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16390, r1, i4, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 16390, r1, i4);

        return;
    }

    public void noteJobStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        android.os.BatteryStats$HistoryEventTracker $r5;
        boolean $z0;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartJobLocked(java.lang.String,long)>(r1, l0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32774, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 32774, r1, i3);

        return;
    }

    public void noteJobsDeferredLocked(int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i3;
        long l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i3);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteJobsDeferredLocked(int,long)>(i1, l2);

        return;
    }

    public void noteLongPartialWakelockFinish(java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockFinishInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i1);

        return;
    }

    public void noteLongPartialWakelockFinishFromSource(java.lang.String, java.lang.String, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r3;
        android.os.WorkSource$WorkChain $r4;
        android.os.WorkSource r5;
        java.util.List r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: android.os.WorkSource;

        i0 = virtualinvoke r5.<android.os.WorkSource: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i3 = virtualinvoke r5.<android.os.WorkSource: int getUid(int)>(i5);

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i3);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockFinishInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i4);

        i5 = i5 + 1;

        goto label1;

     label2:
        r6 = virtualinvoke r5.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r6 == null goto label4;

        i6 = 0;

     label3:
        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if i6 >= $i1 goto label4;

        $r3 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i6);

        $r4 = (android.os.WorkSource$WorkChain) $r3;

        $i2 = virtualinvoke $r4.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockFinishInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i2);

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteLongPartialWakelockStart(java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockStartInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i1);

        return;
    }

    public void noteLongPartialWakelockStartFromSource(java.lang.String, java.lang.String, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r3;
        android.os.WorkSource$WorkChain $r4;
        android.os.WorkSource r5;
        java.util.List r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: android.os.WorkSource;

        i0 = virtualinvoke r5.<android.os.WorkSource: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i3 = virtualinvoke r5.<android.os.WorkSource: int getUid(int)>(i5);

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i3);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockStartInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i4);

        i5 = i5 + 1;

        goto label1;

     label2:
        r6 = virtualinvoke r5.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r6 == null goto label4;

        i6 = 0;

     label3:
        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if i6 >= $i1 goto label4;

        $r3 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i6);

        $r4 = (android.os.WorkSource$WorkChain) $r3;

        $i2 = virtualinvoke $r4.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakeLockStartInternal(java.lang.String,java.lang.String,int)>(r1, r2, $i2);

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean noteMobileRadioPowerStateLocked(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i9, $i10, $i16, $i17;
        long l2, l3, $l7, l11, l12, l13, l14, l15;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        byte $b5, $b6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4, $r5, $r6;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r13;
        boolean z0;
        android.os.BatteryStats$HistoryItem r14, r16;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l11 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState>;

        if $i4 == i0 goto label10;

        if i0 == 2 goto label02;

        if i0 != 3 goto label01;

        goto label02;

     label01:
        z0 = 0;

        goto label03;

     label02:
        z0 = 1;

     label03:
        if z0 == 0 goto label05;

        if i1 <= 0 goto label04;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteMobileRadioApWakeupLocked(long,long,int)>(l2, l3, i1);

     label04:
        l12 = l11 / 1000000L;

        l13 = l12;

        r0.<com.android.internal.os.BatteryStatsImpl: long mMobileRadioActiveStartTime> = l12;

        r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i9 = r14.<android.os.BatteryStats$HistoryItem: int states>;

        $i10 = $i9 | 33554432;

        r14.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        goto label08;

     label05:
        l14 = l11 / 1000000L;

        l15 = r0.<com.android.internal.os.BatteryStatsImpl: long mMobileRadioActiveStartTime>;

        $b5 = l14 cmp l15;

        if $b5 >= 0 goto label06;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data connection inactive timestamp ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is before start time ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r13);

        l13 = l2;

        goto label07;

     label06:
        l13 = l14;

        $b6 = l14 cmp l2;

        if $b6 >= 0 goto label07;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        $l7 = l2 - l14;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l7);

        l13 = l14;

     label07:
        r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i16 = r16.<android.os.BatteryStats$HistoryItem: int states>;

        $i17 = $i16 & -33554433;

        r16.<android.os.BatteryStats$HistoryItem: int states> = $i17;

     label08:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = i0;

        if z0 == 0 goto label09;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        goto label10;

     label09:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l13);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l13);

        return 1;

     label10:
        return 0;
    }

    public void noteNetworkInterfaceType(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.Throwable $r9, $r10;
        java.lang.String r11;
        java.lang.Object r12, r13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 == 0 goto label01;

        return;

     label01:
        r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock>;

        entermonitor r12;

     label02:
        $z1 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>(i0);

        if $z1 == 0 goto label04;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces>;

        $r8 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] includeInStringArray(java.lang.String[],java.lang.String)>($r7, r11);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces> = $r8;

     label03:
        goto label05;

     label04:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces>;

        $r2 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] excludeFromStringArray(java.lang.String[],java.lang.String)>($r1, r11);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces> = $r2;

     label05:
        exitmonitor r12;

     label06:
        r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock>;

        entermonitor r13;

     label07:
        $z2 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeWifi(int)>(i0);

        if $z2 == 0 goto label09;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $r6 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] includeInStringArray(java.lang.String[],java.lang.String)>($r5, r11);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r6;

     label08:
        goto label10;

     label09:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $r4 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] excludeFromStringArray(java.lang.String[],java.lang.String)>($r3, r11);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r4;

     label10:
        exitmonitor r13;

     label11:
        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r13;

     label14:
        throw $r10;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r12;

     label17:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void notePackageInstalledLocked(java.lang.String, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, $l1, $l2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        int $i3;
        android.os.BatteryStats$PackageChange $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = (int) l0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l1, $l2, 11, r1, $i3);

        $r5 = new android.os.BatteryStats$PackageChange;

        specialinvoke $r5.<android.os.BatteryStats$PackageChange: void <init>()>();

        $r5.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName> = r1;

        $r5.<android.os.BatteryStats$PackageChange: boolean mUpdate> = 1;

        $r5.<android.os.BatteryStats$PackageChange: long mVersionCode> = l0;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addPackageChange(android.os.BatteryStats$PackageChange)>($r5);

        return;
    }

    public void notePackageUninstalledLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        long $l0, $l1;
        android.os.BatteryStats$PackageChange $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l0, $l1, 12, r1, 0);

        $r5 = new android.os.BatteryStats$PackageChange;

        specialinvoke $r5.<android.os.BatteryStats$PackageChange: void <init>()>();

        $r5.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName> = r1;

        $r5.<android.os.BatteryStats$PackageChange: boolean mUpdate> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addPackageChange(android.os.BatteryStats$PackageChange)>($r5);

        return;
    }

    public void notePhoneDataConnectionStateLocked(int, boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, i11;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r7;
        int[] $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i8 := @parameter0: int;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i9 = 0;

        if z0 == 0 goto label4;

        if i8 <= 0 goto label1;

        $r8 = staticinvoke <android.telephony.TelephonyManager: int[] getAllNetworkTypes()>();

        $i7 = lengthof $r8;

        if i8 > $i7 goto label1;

        i9 = i8;

        goto label4;

     label1:
        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        i9 = <com.android.internal.os.BatteryStatsImpl: int DATA_CONNECTION_OTHER>;

        goto label4;

     label2:
        i9 = <com.android.internal.os.BatteryStatsImpl: int DATA_CONNECTION_EMERGENCY_SERVICE>;

        goto label4;

     label3:
        i9 = 0;

     label4:
        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i10 == i9 goto label6;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = $i3 & -15873;

        $i4 = i9 << 9;

        $i6 = $i5 | $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if i11 < 0 goto label5;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r7 = $r6[i11];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label5:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = i9;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r5 = $r4[i9];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label6:
        return;
    }

    public void notePhoneOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 & -8388609;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void notePhoneOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 | 8388608;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.telephony.SignalStrength r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.telephony.SignalStrength;

        i0 = virtualinvoke r1.<android.telephony.SignalStrength: int getLevel()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>($i2, $i1, i0);

        return;
    }

    public void notePhoneStateLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>(i0, i1, $i2);

        return;
    }

    public void notePowerSaveModeLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        int i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long l3, l4;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4;
        byte b14, b15;
        android.os.BatteryStats$HistoryItem r5, r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPowerSaveModeEnabled>;

        if $z1 == z0 goto label7;

        if z0 == 0 goto label1;

        b14 = 4;

        goto label2;

     label1:
        b14 = 0;

     label2:
        i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i5 = i2 & 4;

        $i6 = $i5 ^ b14;

        $i7 = i1 | $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = $i7;

        $i8 = i2 & -5;

        $i9 = $i8 | b14;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = $i9;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l4 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPowerSaveModeEnabled> = z0;

        if z0 == 0 goto label3;

        r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i12 = r5.<android.os.BatteryStats$HistoryItem: int states2>;

        $i13 = $i12 | -2147483648;

        r5.<android.os.BatteryStats$HistoryItem: int states2> = $i13;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l3);

        goto label4;

     label3:
        r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i10 = r6.<android.os.BatteryStats$HistoryItem: int states2>;

        $i11 = $i10 & 2147483647;

        r6.<android.os.BatteryStats$HistoryItem: int states2> = $i11;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l3);

     label4:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

        if z0 == 0 goto label5;

        b15 = 1;

        goto label6;

     label5:
        b15 = 0;

     label6:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(20, b15);

     label7:
        return;
    }

    public void noteProcessAnrLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;
        int i0, i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incNumAnrsLocked()>();

     label1:
        return;
    }

    public void noteProcessCrashLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;
        int i0, i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incNumCrashesLocked()>();

     label1:
        return;
    }

    public void noteProcessDiedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 == null goto label1;

        $r4 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public void noteProcessFinishLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        android.os.BatteryStats$HistoryEventTracker $r2;
        boolean $z0, $z1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        long $l0, $l1;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r2.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16385, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z1 != 0 goto label2;

        return;

     label2:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l0, $l1, 16385, r1, i3);

        return;
    }

    public void noteProcessStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        android.os.BatteryStats$HistoryEventTracker $r2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        long $l0, $l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r6;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        $r6 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incStartsLocked()>();

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z1 = virtualinvoke $r2.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32769, r1, i3, 0);

        if $z1 != 0 goto label2;

        return;

     label2:
        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z2 != 0 goto label3;

        return;

     label3:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l0, $l1, 32769, r1, i3);

        return;
    }

    public void noteResetAudioLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int $i2, $i3, $i4, $i5, i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$Uid $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i4 = $i3 & -4194305;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i6 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid) $r7;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetAudioLocked(long)>(l0);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteResetBluetoothScanLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int $i2, $i3, $i4, $i5, i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$Uid $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i4 = $i3 & -1048577;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i6 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid) $r7;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetBluetoothScanLocked(long)>(l0);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteResetCameraLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int $i2, $i3, $i4, $i5, i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$Uid $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i4 = $i3 & -2097153;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i6 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid) $r7;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetCameraLocked(long)>(l0);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteResetFlashlightLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int $i2, $i3, $i4, $i5, i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$Uid $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i4 = $i3 & -134217729;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i6 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid) $r7;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetFlashlightLocked(long)>(l0);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteResetVideoLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int $i2, $i3, $i4, $i5, i6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        android.util.SparseArray $r5, $r6;
        java.lang.Object $r7;
        com.android.internal.os.BatteryStatsImpl$Uid $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i4 = $i3 & -1073741825;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i6 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r8 = (com.android.internal.os.BatteryStatsImpl$Uid) $r7;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetVideoLocked(long)>(l0);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteScreenBrightnessLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3, $i4, $i5, $i6, i7, i8, i9, $i10, i11;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        i8 = i7 / 51;

        if i8 >= 0 goto label1;

        i9 = 0;

        goto label2;

     label1:
        i9 = i8;

        if i8 < 5 goto label2;

        i9 = 4;

     label2:
        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i10 == i9 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i4 = $i2 & -8;

        $i3 = i9 << 0;

        $i5 = $i4 | $i3;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i6 != 2 goto label4;

        i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if i11 < 0 goto label3;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r7 = $r6[i11];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label3:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r5 = $r4[i9];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = i9;

     label5:
        return;
    }

    public void noteScreenStateLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, i26, i27, $i28, i29, i30, i31, i32;
        long l2, l3, $l4, $l5, $l6, $l7, $l8, $l9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, z13, $z14, $z15;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r3, $r5, $r7;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r6, $r8, $r27, $r28;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r9, $r11, $r12, $r14, $r15, $r16;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r10, $r13;
        java.lang.StringBuilder $r17, $r21;
        java.lang.String $r20, $r24;
        android.os.BatteryStats$HistoryItem r29, r30, r31, r32;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i26 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPretendScreenOff>;

        if $z0 == 0 goto label01;

        i26 = 1;

        goto label01;

     label01:
        if i26 <= 4 goto label03;

        if i26 == 5 goto label02;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown screen state (not mapped): ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r24);

        goto label03;

     label02:
        i27 = 2;

        goto label04;

     label03:
        i27 = i26;

     label04:
        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i28 == i27 goto label16;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsIfNeededLocked(boolean)>(1);

        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = i27;

        if i27 == 0 goto label06;

        i29 = i27 - 1;

        $i18 = i29 & 3;

        if $i18 != i29 goto label05;

        i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        i30 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i20 = i30 & 3;

        $i21 = $i20 ^ i29;

        $i22 = i1 | $i21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = $i22;

        $i23 = i30 & -4;

        $i24 = $i23 | i29;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = $i24;

        goto label06;

     label05:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected screen state: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r20);

     label06:
        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r27.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r28.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $z12 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i27);

        if $z12 == 0 goto label07;

        $z10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i0);

        if $z10 != 0 goto label07;

        r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i16 = r29.<android.os.BatteryStats$HistoryItem: int states>;

        $i17 = $i16 | 262144;

        r29.<android.os.BatteryStats$HistoryItem: int states> = $i17;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        z13 = 1;

        goto label08;

     label07:
        z13 = 0;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i0);

        if $z1 == 0 goto label08;

        z13 = 0;

        $z9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i27);

        if $z9 != 0 goto label08;

        r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i14 = r30.<android.os.BatteryStats$HistoryItem: int states>;

        $i15 = $i14 & -262145;

        r30.<android.os.BatteryStats$HistoryItem: int states> = $i15;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

        z13 = 1;

     label08:
        $z14 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i27);

        if $z14 == 0 goto label10;

        r31 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i12 = r31.<android.os.BatteryStats$HistoryItem: int states>;

        $i13 = $i12 | 1048576;

        r31.<android.os.BatteryStats$HistoryItem: int states> = $i13;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if i31 < 0 goto label09;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r14 = $r13[i31];

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

     label09:
        z13 = 1;

        goto label12;

     label10:
        $z2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i0);

        if $z2 == 0 goto label12;

        r32 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i10 = r32.<android.os.BatteryStats$HistoryItem: int states>;

        $i11 = $i10 & -1048577;

        r32.<android.os.BatteryStats$HistoryItem: int states> = $i11;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

        i32 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if i32 < 0 goto label11;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r11 = $r10[i32];

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

     label11:
        z13 = 1;

        goto label12;

     label12:
        if z13 == 0 goto label13;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

     label13:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z3 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z4 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleCpuSyncDueToScreenStateChange(boolean,boolean)>($z3, $z4);

        $z5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i27);

        if $z5 == 0 goto label14;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l7 = interfaceinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l9 = $l7 * 1000L;

        $l8 = l2 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,int,long,long)>($z8, i27, $l9, $l8);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>(-1, -1, null, "screen", null, 0, 0, l2, l3);

        goto label15;

     label14:
        $z6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i0);

        if $z6 == 0 goto label15;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>(-1, -1, null, "screen", "screen", 0, l2, l3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z7 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l4 = interfaceinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $l6 = $l4 * 1000L;

        $l5 = l2 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,int,long,long)>($z7, i27, $l6, $l5);

     label15:
        $z15 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z15 == 0 goto label16;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(int,int)>(i0, i27);

     label16:
        return;
    }

    public void noteStartSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8, i9;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i8);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 8388608;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = $i5;

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i9);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSensor(int,long)>(i0, l1);

        return;
    }

    public void noteStartWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, i7, i8, i9;
        java.lang.String r1, r2;
        boolean z0;
        long l2, l3;
        android.os.WorkSource$WorkChain r3;
        com.android.internal.os.BatteryStatsImpl$Clocks $r4, $r5;
        java.lang.Object $r6;
        android.os.WorkSource r7;
        java.util.List r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r7 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i7 = virtualinvoke r7.<android.os.WorkSource: int size()>();

        i8 = 0;

     label1:
        if i8 >= i7 goto label2;

        $i6 = virtualinvoke r7.<android.os.WorkSource: int getUid(int)>(i8);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>($i6, i0, null, r1, r2, i1, z0, l2, l3);

        i8 = i8 + 1;

        goto label1;

     label2:
        r8 = virtualinvoke r7.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r8 == null goto label5;

        i9 = 0;

     label3:
        $i4 = interfaceinvoke r8.<java.util.List: int size()>();

        if i9 >= $i4 goto label4;

        $r6 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i9);

        r3 = (android.os.WorkSource$WorkChain) $r6;

        $i5 = virtualinvoke r3.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>($i5, i0, r3, r1, r2, i1, z0, l2, l3);

        i9 = i9 + 1;

        goto label3;

     label4:
        goto label5;

     label5:
        return;
    }

    public void noteStartWakeLocked(int, int, android.os.WorkSource$WorkChain, java.lang.String, java.lang.String, int, boolean, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i7, $i8, i9, i10, $i11, $i12, $i13;
        android.os.WorkSource$WorkChain r1;
        java.lang.String r2, r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        long l2, l3;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        int[] $r5;
        java.lang.String[] $r6;
        android.os.BatteryStats$HistoryItem $r7, $r8, $r10, $r12, $r13, $r15, $r16, r19, r20, r23;
        byte $b6;
        android.os.BatteryStats$HistoryTag $r9, $r11, $r14, r21, r22, r24, r25;
        android.os.BatteryStats$HistoryEventTracker $r17;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.WorkSource$WorkChain;

        r2 := @parameter3: java.lang.String;

        r18 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        l2 := @parameter7: long;

        l3 := @parameter8: long;

        i10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i9);

        if i1 != 0 goto label6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void aggregateLastWakeupUptimeLocked(long)>(l3);

        if r18 != null goto label1;

        r18 = r2;

        goto label1;

     label1:
        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z2 == 0 goto label2;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z5 = virtualinvoke $r17.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32773, r18, i10, 0);

        if $z5 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l2, l3, 32773, r18, i10);

     label2:
        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i11 != 0 goto label3;

        r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = r19.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = $i7 | 1073741824;

        r19.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r14 = r20.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r20.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r14;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        r21 = $r15.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = r18;

        r21.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r18;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        r22 = $r16.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = i10;

        r22.<android.os.BatteryStats$HistoryTag: int uid> = i10;

        $z4 = z0 ^ 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant> = $z4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        goto label5;

     label3:
        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant>;

        if $z3 != 0 goto label5;

        if z0 != 0 goto label5;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b6 = $r7.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b6 != 0 goto label5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r9 = $r8.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r9 == null goto label4;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r10.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r11 = r23.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r23.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r11;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        r24 = $r12.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = r18;

        r24.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r18;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        r25 = $r13.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = i10;

        r25.<android.os.BatteryStats$HistoryTag: int uid> = i10;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant> = 1;

     label5:
        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i13 = $i12 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i13;

        goto label6;

     label6:
        if i10 < 0 goto label9;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z1 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z1 == 0 goto label7;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestWakelockCpuUpdate()>();

     label7:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i10);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartWakeLocked(int,java.lang.String,int,long)>(i0, r2, i1, l2);

        if r1 == null goto label8;

        $r5 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int[] getUids()>();

        $r6 = virtualinvoke r1.<android.os.WorkSource$WorkChain: java.lang.String[] getTags()>();

        $i5 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getPowerManagerWakeLockLevel(int)>(i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,java.lang.String,int)>(10, $r5, $r6, $i5, r2, 1);

        goto label9;

     label8:
        $i4 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getPowerManagerWakeLockLevel(int)>(i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int,java.lang.String,int)>(10, i10, null, $i4, r2, 1);

     label9:
        return;
    }

    public void noteStopSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, $i4, $i5, $i6, i7, i8;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        i3 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = i3;

        if i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 & -8388609;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSensor(int,long)>(i0, l1);

        return;
    }

    public void noteStopWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i4, $i5, $i6, $i7, i8, i9;
        java.lang.String r1, r2;
        long l2, l3;
        android.os.WorkSource$WorkChain r3;
        com.android.internal.os.BatteryStatsImpl$Clocks $r4, $r5;
        java.lang.Object $r6;
        android.os.WorkSource r7;
        java.util.List r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r7 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i4 = virtualinvoke r7.<android.os.WorkSource: int size()>();

        i8 = 0;

     label1:
        if i8 >= i4 goto label2;

        $i7 = virtualinvoke r7.<android.os.WorkSource: int getUid(int)>(i8);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>($i7, i0, null, r1, r2, i1, l2, l3);

        i8 = i8 + 1;

        goto label1;

     label2:
        r8 = virtualinvoke r7.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r8 == null goto label5;

        i9 = 0;

     label3:
        $i5 = interfaceinvoke r8.<java.util.List: int size()>();

        if i9 >= $i5 goto label4;

        $r6 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i9);

        r3 = (android.os.WorkSource$WorkChain) $r6;

        $i6 = virtualinvoke r3.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>($i6, i0, r3, r1, r2, i1, l2, l3);

        i9 = i9 + 1;

        goto label3;

     label4:
        goto label5;

     label5:
        return;
    }

    public void noteStopWakeLocked(int, int, android.os.WorkSource$WorkChain, java.lang.String, java.lang.String, int, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12;
        android.os.WorkSource$WorkChain r1;
        java.lang.String r2, r8;
        long l2, l3;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r3;
        boolean $z0, $z1, $z2;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        int[] $r5;
        java.lang.String[] $r6;
        android.os.BatteryStats$HistoryEventTracker $r7;
        android.os.BatteryStats$HistoryItem r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i10 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.WorkSource$WorkChain;

        r2 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        l2 := @parameter6: long;

        l3 := @parameter7: long;

        i11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i10);

        if i1 != 0 goto label4;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i7 = $i6 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i7;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z1 == 0 goto label2;

        if r8 != null goto label1;

        r8 = r2;

        goto label1;

     label1:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z2 = virtualinvoke $r7.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16389, r8, i11, 0);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l2, l3, 16389, r8, i11);

        goto label2;

     label2:
        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i12 != 0 goto label3;

        r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i8 = r9.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = $i8 & -1073741825;

        r9.<android.os.BatteryStats$HistoryItem: int states> = $i9;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        goto label4;

     label3:
        goto label4;

     label4:
        if i11 < 0 goto label7;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestWakelockCpuUpdate()>();

     label5:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i11);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopWakeLocked(int,java.lang.String,int,long)>(i0, r2, i1, l2);

        if r1 == null goto label6;

        $r5 = virtualinvoke r1.<android.os.WorkSource$WorkChain: int[] getUids()>();

        $r6 = virtualinvoke r1.<android.os.WorkSource$WorkChain: java.lang.String[] getTags()>();

        $i5 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getPowerManagerWakeLockLevel(int)>(i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int[],java.lang.String[],int,java.lang.String,int)>(10, $r5, $r6, $i5, r2, 0);

        goto label7;

     label6:
        $i4 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getPowerManagerWakeLockLevel(int)>(i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int,java.lang.String,int)>(10, i11, null, $i4, r2, 0);

     label7:
        return;
    }

    public void noteSyncFinishLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        android.os.BatteryStats$HistoryEventTracker $r5;
        boolean $z0;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSyncLocked(java.lang.String,long)>(r1, l0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16388, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 16388, r1, i3);

        return;
    }

    public void noteSyncStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        android.os.BatteryStats$HistoryEventTracker $r5;
        boolean $z0;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSyncLocked(java.lang.String,long)>(r1, l0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32772, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 32772, r1, i3);

        return;
    }

    public void noteUidProcessStateLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        if i0 == $i2 goto label1;

        return;

     label1:
        $i3 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>(i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(27, i0, $i3);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void updateUidProcessStateLocked(int)>(i1);

        return;
    }

    public void noteUserActivityLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i2);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteUserActivityLocked(int)>(i1);

     label1:
        return;
    }

    public void noteVibratorOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOffLocked()>();

        return;
    }

    public void noteVibratorOnLocked(int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i2);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOnLocked(long)>(l1);

        return;
    }

    public void noteVideoOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6, i7, i8;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        i2 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = i2;

        if i2 != 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 & -1073741825;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label2:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOffLocked(long)>(l0);

        return;
    }

    public void noteVideoOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3, $i4, $i5, $i6, i7, i8;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i7 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i7);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i2 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i5 | 1073741824;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        $i4 = $i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = $i4;

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOnLocked(long)>(l0);

        return;
    }

    public void noteWakeUpLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>($l1, $l2, 18, r1, i0);

        return;
    }

    public void noteWakeupReasonLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r2, $r6, $r8;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3, $r4;
        android.os.BatteryStats$HistoryTag $r5, $r7, $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void aggregateLastWakeupUptimeLocked(long)>(l1);

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r5 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r5;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r7 = $r6.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r7.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r9 = $r8.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r9.<android.os.BatteryStats$HistoryTag: int uid> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = l1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        return;
    }

    public void noteWakupAlarmLocked(java.lang.String, int, android.os.WorkSource, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, r2, r9;
        boolean $z0, $z1, $z2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3, $r6, $r7;
        int $i0, $i1, i2, i3, i4, i5, i6;
        java.lang.Object $r4;
        android.os.WorkSource$WorkChain $r5;
        android.os.WorkSource r8;
        java.util.List r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r8 := @parameter2: android.os.WorkSource;

        r2 := @parameter3: java.lang.String;

        if r8 == null goto label09;

        i3 = 0;

     label01:
        $i0 = virtualinvoke r8.<android.os.WorkSource: int size()>();

        if i3 >= $i0 goto label05;

        i4 = virtualinvoke r8.<android.os.WorkSource: int getUid(int)>(i3);

        r9 = virtualinvoke r8.<android.os.WorkSource: java.lang.String getPackageName(int)>(i3);

        $z2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z2 == 0 goto label04;

        if r9 == null goto label02;

        goto label03;

     label02:
        r9 = r1;

     label03:
        $r7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>(i4, r9);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void noteWakeupAlarmLocked(java.lang.String)>(r2);

     label04:
        i3 = i3 + 1;

        goto label01;

     label05:
        r10 = virtualinvoke r8.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r10 == null goto label08;

        i5 = 0;

     label06:
        $i1 = interfaceinvoke r10.<java.util.List: int size()>();

        if i5 >= $i1 goto label08;

        $r4 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i5);

        $r5 = (android.os.WorkSource$WorkChain) $r4;

        i6 = virtualinvoke $r5.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z1 == 0 goto label07;

        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>(i6, r1);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void noteWakeupAlarmLocked(java.lang.String)>(r2);

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        goto label10;

     label09:
        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label10;

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>(i2, r1);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void noteWakeupAlarmLocked(java.lang.String)>(r2);

     label10:
        return;
    }

    public void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        i1 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        $i4 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedLocked(int,int)>($i4, i0);

        i5 = i5 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i6 = 0;

     label3:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if i6 >= $i2 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i6);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i3 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedLocked(int,int)>($i3, i0);

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteWifiBatchedScanStartedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, i3;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStartedLocked(int,long)>(i0, l1);

        return;
    }

    public void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i3 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i4);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedLocked(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i5 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i5 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i5);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i2 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedLocked(int)>($i2);

        i5 = i5 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteWifiBatchedScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        int i1, i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i1 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i1);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStoppedLocked(long)>(l0);

        return;
    }

    public void noteWifiMulticastDisabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, i6, i7;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r5;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i6 := @parameter0: int;

        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i6);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        i7 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = i7;

        if i7 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = $i4 & -65537;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        $z0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastDisabledLocked(long)>(l1);

        return;
    }

    public void noteWifiMulticastEnabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3, $i4, i5, i6, $i7, $i8;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r5;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i5 := @parameter0: int;

        i6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i5);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        if $i2 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i4 = $i3 | 65536;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        $z0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        $i8 = $i7 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = $i8;

        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i6);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastEnabledLocked(long)>(l0);

        return;
    }

    public void noteWifiOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        boolean $z0;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 & -268435457;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void scheduleSyncExternalStatsLocked(java.lang.String,int)>("wifi-on", 2);

     label1:
        return;
    }

    public void noteWifiOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 | 268435456;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void scheduleSyncExternalStatsLocked(java.lang.String,int)>("wifi-off", 2);

     label1:
        return;
    }

    public void noteWifiRadioPowerState(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, $i5, $i6, $i7, $i9, $i10;
        long l1, l3, l4, $l8;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4;
        boolean z0;
        android.os.BatteryStats$HistoryItem r5, r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l4 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState>;

        if $i5 == i0 goto label7;

        if i0 == 2 goto label2;

        if i0 != 3 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        if z0 == 0 goto label5;

        if i2 <= 0 goto label4;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiRadioApWakeupLocked(long,long,int)>(l3, l4, i2);

     label4:
        r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i9 = r5.<android.os.BatteryStats$HistoryItem: int states>;

        $i10 = $i9 | 67108864;

        r5.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l3);

        goto label6;

     label5:
        r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = r6.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -67108865;

        r6.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        $l8 = l1 / 1000000L;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>($l8);

     label6:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = i0;

     label7:
        return;
    }

    public void noteWifiRssiChangedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8, i9;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r6, $r8;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r7, $r9;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i8 := @parameter0: int;

        i0 = staticinvoke <android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>(i8, 5);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin>;

        if $i3 == i0 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin>;

        if i9 < 0 goto label1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r9 = $r8[i9];

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r5 = $r4[i0];

        $z0 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r7 = $r6[i0];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label2:
        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i6 = $i4 & -113;

        $i5 = i0 << 4;

        $i7 = $i6 | $i5;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllWifiSignalStrengthTimersLocked(int)>(-1);

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = i0;

     label5:
        return;
    }

    public void noteWifiRunningChangedLocked(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1, r11;
        long l0;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17;
        java.lang.Object $r3, $r7;
        android.os.WorkSource$WorkChain $r4, $r8;
        com.android.internal.os.BatteryStatsImpl$Uid $r5, $r6, $r9, $r10;
        java.util.List r12, r13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r11 := @parameter0: android.os.WorkSource;

        r1 := @parameter1: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label09;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        i12 = virtualinvoke r11.<android.os.WorkSource: int size()>();

        i13 = 0;

     label01:
        if i13 >= i12 goto label02;

        $i10 = virtualinvoke r11.<android.os.WorkSource: int getUid(int)>(i13);

        $i11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i10);

        $r10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i11);

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i13 = i13 + 1;

        goto label01;

     label02:
        r12 = virtualinvoke r11.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r12 == null goto label04;

        i14 = 0;

     label03:
        $i7 = interfaceinvoke r12.<java.util.List: int size()>();

        if i14 >= $i7 goto label04;

        $r7 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i14);

        $r8 = (android.os.WorkSource$WorkChain) $r7;

        $i8 = virtualinvoke $r8.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i8);

        $r9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i9);

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i14 = i14 + 1;

        goto label03;

     label04:
        i15 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i16 = 0;

     label05:
        if i16 >= i15 goto label06;

        $i5 = virtualinvoke r1.<android.os.WorkSource: int getUid(int)>(i16);

        $i6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i5);

        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i16 = i16 + 1;

        goto label05;

     label06:
        r13 = virtualinvoke r1.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r13 == null goto label08;

        i17 = 0;

     label07:
        $i2 = interfaceinvoke r13.<java.util.List: int size()>();

        if i17 >= $i2 goto label08;

        $r3 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i17);

        $r4 = (android.os.WorkSource$WorkChain) $r3;

        $i3 = virtualinvoke $r4.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i3);

        $r5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i4);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i17 = i17 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningChangedLocked -- called while WIFI not running");

     label10:
        return;
    }

    public void noteWifiRunningLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        java.lang.Object $r5;
        android.os.WorkSource$WorkChain $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7, $r8;
        android.os.WorkSource r9;
        java.util.List r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r9 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 != 0 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 | 536870912;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        i2 = virtualinvoke r9.<android.os.WorkSource: int size()>();

        i11 = 0;

     label1:
        if i11 >= i2 goto label2;

        $i9 = virtualinvoke r9.<android.os.WorkSource: int getUid(int)>(i11);

        $i10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i9);

        $r8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i10);

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i11 = i11 + 1;

        goto label1;

     label2:
        r10 = virtualinvoke r9.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r10 == null goto label4;

        i12 = 0;

     label3:
        $i6 = interfaceinvoke r10.<java.util.List: int size()>();

        if i12 >= $i6 goto label4;

        $r5 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i12);

        $r6 = (android.os.WorkSource$WorkChain) $r5;

        $i7 = virtualinvoke $r6.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i7);

        $r7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i8);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i12 = i12 + 1;

        goto label3;

     label4:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void scheduleSyncExternalStatsLocked(java.lang.String,int)>("wifi-running", 2);

        goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningLocked -- called while WIFI running");

     label6:
        return;
    }

    public void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i4 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i6);

        $i5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i4);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i7 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i7 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i7);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i2 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>($i3);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteWifiScanStartedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 134217728;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = $i5;

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStartedLocked(long)>(l1);

        return;
    }

    public void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Object $r1;
        android.os.WorkSource$WorkChain $r2;
        android.os.WorkSource r3;
        java.util.List r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r3 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i4 = virtualinvoke r3.<android.os.WorkSource: int getUid(int)>(i6);

        $i5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i4);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        r4 = virtualinvoke r3.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r4 == null goto label4;

        i7 = 0;

     label3:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i7 >= $i1 goto label4;

        $r1 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i7);

        $r2 = (android.os.WorkSource$WorkChain) $r1;

        $i2 = virtualinvoke $r2.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>($i3);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteWifiScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, $i4, $i5, $i6;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        i3 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = i3;

        if i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 & -134217729;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStoppedLocked(long)>(l1);

        return;
    }

    public void noteWifiStateLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, $i3;
        java.lang.String r1;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3, $r5;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState>;

        if $i3 == i0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState>;

        if i2 < 0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r6 = $r5[i2];

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = i0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r4 = $r3[i0];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void scheduleSyncExternalStatsLocked(java.lang.String,int)>("wifi-state", 2);

     label2:
        return;
    }

    public void noteWifiStoppedLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;
        int i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4;
        java.lang.Object $r5;
        android.os.WorkSource$WorkChain $r6;
        com.android.internal.os.BatteryStatsImpl$Uid $r7, $r8;
        android.os.WorkSource r9;
        java.util.List r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r9 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 & -536870913;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

        i2 = virtualinvoke r9.<android.os.WorkSource: int size()>();

        i11 = 0;

     label1:
        if i11 >= i2 goto label2;

        $i9 = virtualinvoke r9.<android.os.WorkSource: int getUid(int)>(i11);

        $i10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i9);

        $r8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i10);

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i11 = i11 + 1;

        goto label1;

     label2:
        r10 = virtualinvoke r9.<android.os.WorkSource: java.util.List getWorkChains()>();

        if r10 == null goto label4;

        i12 = 0;

     label3:
        $i6 = interfaceinvoke r10.<java.util.List: int size()>();

        if i12 >= $i6 goto label4;

        $r5 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i12);

        $r6 = (android.os.WorkSource$WorkChain) $r5;

        $i7 = virtualinvoke $r6.<android.os.WorkSource$WorkChain: int getAttributionUid()>();

        $i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i7);

        $r7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i8);

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i12 = i12 + 1;

        goto label3;

     label4:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void scheduleSyncExternalStatsLocked(java.lang.String,int)>("wifi-stopped", 2);

        goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiStoppedLocked -- called while WIFI not running");

     label6:
        return;
    }

    public void noteWifiSupplicantStateChangedLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        long l1, l2;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState>;

        if $i4 == i0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState>;

        if i3 < 0 goto label1;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r7 = $r6[i3];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = i0;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r5 = $r4[i0];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i5 & -16;

        $i6 = i0 << 0;

        $i8 = $i7 | $i6;

        r1.<android.os.BatteryStats$HistoryItem: int states2> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label2:
        return;
    }

    public void onCleanupUserLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, i3;
        com.android.internal.os.BatteryStatsImpl$UidToRemove $r1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        java.util.Queue $r3;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i2 := @parameter0: int;

        i0 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, 0);

        i3 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, 99999);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $r1 = new com.android.internal.os.BatteryStatsImpl$UidToRemove;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        specialinvoke $r1.<com.android.internal.os.BatteryStatsImpl$UidToRemove: void <init>(com.android.internal.os.BatteryStatsImpl,int,int,long)>(r0, i0, i3, $l1);

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void onUserRemovedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, i3, i4, i5, i6, i7;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.util.SparseArray $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i3 := @parameter0: int;

        i4 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i3, 0);

        i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i3, 99999);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, null);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i5, null);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i6 = virtualinvoke $r4.<android.util.SparseArray: int indexOfKey(int)>(i4);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(i5);

        i7 = i6;

     label1:
        if i7 > i0 goto label3;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r8;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void detachFromTimeBase()>();

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i1 = i0 - i6;

        $i2 = $i1 + 1;

        virtualinvoke $r6.<android.util.SparseArray: void removeAtRange(int,int)>(i6, $i2);

        return;
    }

    public void postBatteryNeedsCpuUpdateMsg()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Handler $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    public void prepareForDumpLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        return;
    }

    public void pullPendingStateUpdatesLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(int,int)>(i0, i0);

     label1:
        return;
    }

    void readDailyItemTagDetailsLocked(org.xmlpull.v1.XmlPullParser, android.os.BatteryStats$DailyItem, boolean, java.lang.String) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.os.BatteryStatsImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0, $z1;
        java.lang.String r2, $r4, $r5, $r10, $r12, $r15, $r17, r19, r22;
        int i0, i1, $i3, i5, i6, i7;
        android.os.BatteryStats$LevelStepTracker $r3;
        java.lang.StringBuilder $r6, $r13;
        android.os.BatteryStats$DailyItem r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r18 := @parameter1: android.os.BatteryStats$DailyItem;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        if r19 != null goto label01;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing \'n\' attribute at ");

        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r17);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return;

     label01:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r19);

        $r3 = new android.os.BatteryStats$LevelStepTracker;

        specialinvoke $r3.<android.os.BatteryStats$LevelStepTracker: void <init>(int)>(i0);

        if z0 == 0 goto label02;

        r18.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mChargeSteps> = $r3;

        goto label03;

     label02:
        r18.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mDischargeSteps> = $r3;

     label03:
        i5 = 0;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label04:
        i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i6 == 1 goto label10;

        if i6 != 3 goto label05;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label10;

     label05:
        if i6 == 3 goto label04;

        if i6 != 4 goto label06;

        goto label04;

     label06:
        $r4 = "s";

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label08;

        i7 = i5;

        if i5 >= i0 goto label09;

        r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "v");

        i7 = i5;

        if r22 == null goto label07;

        virtualinvoke $r3.<android.os.BatteryStats$LevelStepTracker: void decodeEntryAt(int,java.lang.String)>(i5, r22);

        i7 = i5 + 1;

     label07:
        goto label09;

     label08:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        i7 = i5;

     label09:
        i5 = i7;

        goto label04;

     label10:
        $r3.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations> = i5;

        return;
    }

    void readDailyItemTagLocked(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.internal.os.BatteryStatsImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i3;
        java.lang.String r3, $r8, $r10, $r13, $r18, r21, r22, r23;
        android.os.BatteryStats$DailyItem $r4;
        java.util.ArrayList $r5, $r11, $r14, $r15, $r16, $r19, $r20;
        boolean $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6;
        android.os.BatteryStats$PackageChange $r12, $r17;
        long $l4, $l5, l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r4 = new android.os.BatteryStats$DailyItem;

        specialinvoke $r4.<android.os.BatteryStats$DailyItem: void <init>()>();

        r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "start");

        if r21 == null goto label01;

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r21);

        $r4.<android.os.BatteryStats$DailyItem: long mStartTime> = $l5;

     label01:
        r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "end");

        if r22 == null goto label02;

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r22);

        $r4.<android.os.BatteryStats$DailyItem: long mEndTime> = $l4;

     label02:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label03:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label15;

        if i1 != 3 goto label04;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label15;

     label04:
        if i1 == 3 goto label03;

        if i1 != 4 goto label05;

        goto label03;

     label05:
        r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("dis");

        if $z1 == 0 goto label06;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readDailyItemTagDetailsLocked(org.xmlpull.v1.XmlPullParser,android.os.BatteryStats$DailyItem,boolean,java.lang.String)>(r1, $r4, 0, "dis");

        goto label14;

     label06:
        $z2 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("chg");

        if $z2 == 0 goto label07;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readDailyItemTagDetailsLocked(org.xmlpull.v1.XmlPullParser,android.os.BatteryStats$DailyItem,boolean,java.lang.String)>(r1, $r4, 1, "chg");

        goto label14;

     label07:
        $z3 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("upd");

        if $z3 == 0 goto label11;

        $r16 = $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        if $r16 != null goto label08;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges> = $r20;

     label08:
        $r17 = new android.os.BatteryStats$PackageChange;

        specialinvoke $r17.<android.os.BatteryStats$PackageChange: void <init>()>();

        $r17.<android.os.BatteryStats$PackageChange: boolean mUpdate> = 1;

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pkg");

        $r17.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName> = $r18;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "ver");

        if r3 == null goto label09;

        l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        goto label10;

     label09:
        l6 = 0L;

     label10:
        $r17.<android.os.BatteryStats$PackageChange: long mVersionCode> = l6;

        $r19 = $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label14;

     label11:
        $z4 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("rem");

        if $z4 == 0 goto label13;

        $r11 = $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        if $r11 != null goto label12;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges> = $r15;

     label12:
        $r12 = new android.os.BatteryStats$PackageChange;

        specialinvoke $r12.<android.os.BatteryStats$PackageChange: void <init>()>();

        $r12.<android.os.BatteryStats$PackageChange: boolean mUpdate> = 0;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pkg");

        $r12.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName> = $r13;

        $r14 = $r4.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label14;

     label13:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <item>: ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label14:
        goto label03;

     label15:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void readDailyStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.StringBuilder $r1;
        android.util.AtomicFile $r3, $r8;
        java.io.File $r4;
        java.lang.String $r6, $r10;
        java.util.ArrayList $r7;
        java.nio.charset.Charset $r9;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15;
        java.io.FileInputStream r17;
        org.xmlpull.v1.XmlPullParser r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading daily items from ");

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile>;

        $r4 = virtualinvoke $r3.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r6);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

     label01:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile>;

        r17 = virtualinvoke $r8.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        r18 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r10 = virtualinvoke $r9.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r18.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r17, $r10);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readDailyItemsLocked(org.xmlpull.v1.XmlPullParser)>(r18);

     label03:
        virtualinvoke r17.<java.io.FileInputStream: void close()>();

     label04:
        goto label12;

     label05:
        $r14 := @caughtexception;

     label06:
        virtualinvoke r17.<java.io.FileInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r11 := @caughtexception;

     label09:
        throw $r14;

     label10:
        $r13 := @caughtexception;

     label11:
        virtualinvoke r17.<java.io.FileInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r12 := @caughtexception;

     label14:
        return;

     label15:
        $r15 := @caughtexception;

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l3, $l4, $l5, $l6, $l7, $l11, $l12, $l31, $l33;
        int i1, $i2, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6, $r8, $r9, r181, r183, r185, r187;
        android.os.ParcelFormatException $r5;
        com.android.internal.os.BatteryStatsHistory $r7;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r10, $r11, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r51, $r53, $r55, $r58, $r61, $r64, $r67, $r69, $r71, $r73, $r76, $r79, $r82, $r85, $r90, $r92, $r94, $r96, $r98, $r118, $r119, $r122, $r127, $r132, $r137, $r142, $r147, $r151, $r155, $r159, $r163, $r166, $r169, $r173, $r177;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r54, $r57, $r60, $r63, $r72, $r75, $r78, $r81, $r84, $r146, $r150, $r154, $r158, $r168, $r172, $r176;
        com.android.internal.os.BatteryStatsImpl$Clocks $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r56, $r59, $r62, $r65, $r74, $r77, $r80, $r83, $r86, $r123, $r128, $r133, $r138, $r143, $r148, $r152, $r156, $r160, $r170, $r174, $r178;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r48, $r50, $r52, $r89, $r91, $r93, $r95, $r97, $r162, $r165;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r66, $r68, $r70;
        android.os.BatteryStats$LevelStepTracker $r87, $r88;
        java.util.HashMap $r99, $r100, $r101, $r102, $r129, $r134, $r139, $r144;
        android.util.LongSparseArray $r103, $r124;
        java.util.ArrayList $r104, $r105, $r106, $r107, $r108, $r109, $r111, $r112, $r113, $r114, $r115;
        android.util.SparseArray $r110, $r116, $r120;
        com.android.internal.os.BatteryStatsImpl$Uid $r117;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r121, $r126, $r131, $r136, $r141;
        java.lang.Long $r125;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r149, $r153, $r157, $r161, $r171, $r175, $r179;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r164, $r167;
        android.os.Parcel r180;
        boolean z1, z2, z3, z4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r180 := @parameter0: android.os.Parcel;

        i45 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if i45 != -1166707595 goto label42;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryBuffer(android.os.Parcel,boolean)>(r180, 0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsHistory: void readFromParcel(android.os.Parcel)>(r180);

        $i2 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i2;

        $l3 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l3;

        $r8 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = $r8;

        $r9 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r9;

        $l4 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l4;

        $l5 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = $l5;

        $l6 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l6;

        $l7 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = $l7;

        i46 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if i46 == 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = z1;

        $i8 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = $i8;

        $i9 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = $i9;

        $i10 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = $i10;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readFromParcel(android.os.Parcel)>(r180);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readFromParcel(android.os.Parcel)>(r180);

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        $r12 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r14, null, -1, null, $r13, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = $r12;

        $r15 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r17, null, -1, null, $r16, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer> = $r15;

        i47 = 0;

     label03:
        if i47 >= 5 goto label04;

        $r179 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r176 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r178 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i44 = -100 - i47;

        $r177 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r176.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r178, null, $i44, null, $r177, r180);

        $r179[i47] = $r176;

        i47 = i47 + 1;

        goto label03;

     label04:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = 0;

        $r18 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r20, null, -10, null, $r19, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r21 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r21.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r23, null, -2, null, $r22, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer> = $r21;

        $l11 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime> = $l11;

        $l12 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime> = $l12;

        $r24 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r26, null, -14, null, $r25, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer> = $r24;

        $r27 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r29, null, -11, null, $r28, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer> = $r27;

        $r30 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r30.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r32, null, -15, null, $r31, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer> = $r30;

        $r33 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r33.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r35, null, -12, null, $r34, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer> = $r33;

        $r36 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r36.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r38, null, -3, null, $r37, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = $r36;

        i48 = 0;

     label05:
        $i13 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i48 >= $i13 goto label06;

        $r175 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r172 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r174 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i43 = -200 - i48;

        $r173 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r172.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r174, null, $i43, null, $r173, r180);

        $r175[i48] = $r172;

        i48 = i48 + 1;

        goto label05;

     label06:
        $r39 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r39.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r41, null, -199, null, $r40, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = $r39;

        i49 = 0;

     label07:
        $i14 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i49 >= $i14 goto label08;

        $r171 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r168 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r170 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i42 = -300 - i49;

        $r169 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r168.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r170, null, $i42, null, $r169, r180);

        $r171[i49] = $r168;

        i49 = i49 + 1;

        goto label07;

     label08:
        i50 = 0;

     label09:
        if i50 >= 10 goto label10;

        $r164 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r162 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r163 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r162.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r163, r180);

        $r164[i50] = $r162;

        $r167 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r165 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r166 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r165.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r166, r180);

        $r167[i50] = $r165;

        i50 = i50 + 1;

        goto label09;

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = 1;

        $r42 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r42.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r44, null, -400, null, $r43, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer> = $r42;

        $r45 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r45.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r47, null, -401, null, $r46, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer> = $r45;

        $r48 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r48.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r49, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime> = $r48;

        $r50 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r51 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r50.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r51, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime> = $r50;

        $r52 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r52.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r53, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount> = $r52;

        $r54 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r56 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r54.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r56, null, -4, null, $r55, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer> = $r54;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r57 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r57.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r59, null, -4, null, $r58, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = $r57;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r60 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r60.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r62, null, -5, null, $r61, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = $r60;

        i51 = 0;

     label11:
        if i51 >= 8 goto label12;

        $r161 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r158 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r160 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i41 = -600 - i51;

        $r159 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r158.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r160, null, $i41, null, $r159, r180);

        $r161[i51] = $r158;

        i51 = i51 + 1;

        goto label11;

     label12:
        i52 = 0;

     label13:
        if i52 >= 13 goto label14;

        $r157 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r154 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r156 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i40 = -700 - i52;

        $r155 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r154.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r156, null, $i40, null, $r155, r180);

        $r157[i52] = $r154;

        i52 = i52 + 1;

        goto label13;

     label14:
        i53 = 0;

     label15:
        if i53 >= 5 goto label16;

        $r153 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r150 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r152 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i39 = -800 - i53;

        $r151 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r150.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r152, null, $i39, null, $r151, r180);

        $r153[i53] = $r150;

        i53 = i53 + 1;

        goto label15;

     label16:
        $r63 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r65 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r64 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r63.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r65, null, -900, null, $r64, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer> = $r63;

        $r66 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r67 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r66.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int,android.os.Parcel)>($r67, 1, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity> = $r66;

        i54 = 0;

     label17:
        if i54 >= 2 goto label18;

        $r149 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r146 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r148 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $i38 = -1000 - i54;

        $r147 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r146.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r148, null, $i38, null, $r147, r180);

        $r149[i54] = $r146;

        i54 = i54 + 1;

        goto label17;

     label18:
        $r68 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r69 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r68.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int,android.os.Parcel)>($r69, 1, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity> = $r68;

        $r70 = new com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl;

        $r71 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r70.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,int,android.os.Parcel)>($r71, 5, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity> = $r70;

        $i15 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label19;

        z2 = 1;

        goto label20;

     label19:
        z2 = 0;

     label20:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = z2;

        $i16 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i16 == 0 goto label21;

        z3 = 1;

        goto label22;

     label21:
        z3 = 0;

     label22:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = z3;

        $i17 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label23;

        z4 = 1;

        goto label24;

     label23:
        z4 = 0;

     label24:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = z4;

        $i18 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange> = $i18;

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        $r72 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r74 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r73 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r72.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r74, null, -7, null, $r73);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer> = $r72;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = 0;

        $r75 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r77 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r76 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r75.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r77, null, -8, null, $r76);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer> = $r75;

        r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting> = 0;

        $r78 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r80 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r79 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r78.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r80, null, -9, null, $r79, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer> = $r78;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting> = 0;

        $r81 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r83 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r82 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r81.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r83, null, -13, null, $r82, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer> = $r81;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting> = 0;

        $r84 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r86 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r85 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r84.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r86, null, -14, null, $r85, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer> = $r84;

        $i19 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i19;

        $i20 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = $i20;

        $i21 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i21;

        $i22 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = $i22;

        $i23 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i23;

        $i24 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i24;

        $i25 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i25;

        $i26 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i26;

        $i27 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i27;

        $i28 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i28;

        $i29 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze> = $i29;

        $i30 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge> = $i30;

        $r87 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r87.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r180);

        $r88 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r88.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r180);

        $r89 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r90 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r89.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r90, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter> = $r89;

        $r91 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r92 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r91.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r92, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter> = $r91;

        $r93 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r94 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r93.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r94, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter> = $r93;

        $r95 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r96 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r95.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r96, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter> = $r95;

        $r97 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r98 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r97.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r98, r180);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter> = $r97;

        $l31 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l31;

        $r99 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        virtualinvoke $r99.<java.util.HashMap: void clear()>();

        i55 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        i56 = 0;

     label25:
        if i56 >= i55 goto label27;

        $i37 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label26;

        r181 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        $r141 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r143 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r142 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r141.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r143, $r142, r180);

        $r144 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        virtualinvoke $r144.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r181, $r141);

     label26:
        i56 = i56 + 1;

        goto label25;

     label27:
        $r100 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        virtualinvoke $r100.<java.util.HashMap: void clear()>();

        i57 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        i58 = 0;

     label28:
        if i58 >= i57 goto label30;

        $i36 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label29;

        r183 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        $r136 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r138 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r137 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r136.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r138, $r137, r180);

        $r139 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        virtualinvoke $r139.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r183, $r136);

     label29:
        i58 = i58 + 1;

        goto label28;

     label30:
        $r101 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r101.<java.util.HashMap: void clear()>();

        i59 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        i60 = 0;

     label31:
        if i60 >= i59 goto label33;

        $i35 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label32;

        r185 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        $r131 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r133 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r132 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r131.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r133, $r132, r180);

        $r134 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r134.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r185, $r131);

     label32:
        i60 = i60 + 1;

        goto label31;

     label33:
        $r102 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r102.<java.util.HashMap: void clear()>();

        i61 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        i62 = 0;

     label34:
        if i62 >= i61 goto label36;

        $i34 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label35;

        r187 = virtualinvoke r180.<android.os.Parcel: java.lang.String readString()>();

        $r126 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r128 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r127 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r126.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r128, $r127, r180);

        $r129 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r129.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r187, $r126);

     label35:
        i62 = i62 + 1;

        goto label34;

     label36:
        $r103 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        virtualinvoke $r103.<android.util.LongSparseArray: void clear()>();

        i63 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        i64 = 0;

     label37:
        if i64 >= i63 goto label39;

        $i32 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label38;

        l0 = virtualinvoke r180.<android.os.Parcel: long readLong()>();

        $r121 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r123 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r122 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r121.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r123, $r122, r180);

        $r124 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r125 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $l33 = virtualinvoke $r125.<java.lang.Long: long longValue()>();

        virtualinvoke $r124.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l33, $r121);

     label38:
        i64 = i64 + 1;

        goto label37;

     label39:
        $r104 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        virtualinvoke $r104.<java.util.ArrayList: void clear()>();

        $r105 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        virtualinvoke $r105.<java.util.ArrayList: void clear()>();

        $r106 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        virtualinvoke $r106.<java.util.ArrayList: void clear()>();

        $r107 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers>;

        virtualinvoke $r107.<java.util.ArrayList: void clear()>();

        $r108 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers>;

        virtualinvoke $r108.<java.util.ArrayList: void clear()>();

        $r109 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers>;

        virtualinvoke $r109.<java.util.ArrayList: void clear()>();

        $r110 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers>;

        virtualinvoke $r110.<android.util.SparseArray: void clear()>();

        $r111 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers>;

        virtualinvoke $r111.<java.util.ArrayList: void clear()>();

        $r112 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers>;

        virtualinvoke $r112.<java.util.ArrayList: void clear()>();

        $r113 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers>;

        virtualinvoke $r113.<java.util.ArrayList: void clear()>();

        $r114 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFlashlightTurnedOnTimers>;

        virtualinvoke $r114.<java.util.ArrayList: void clear()>();

        $r115 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mCameraTurnedOnTimers>;

        virtualinvoke $r115.<java.util.ArrayList: void clear()>();

        i65 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        $r116 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r116.<android.util.SparseArray: void clear()>();

        i66 = 0;

     label40:
        if i66 >= i65 goto label41;

        i1 = virtualinvoke r180.<android.os.Parcel: int readInt()>();

        $r117 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r117.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i1);

        $r119 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r118 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r117.<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(com.android.internal.os.BatteryStatsImpl$TimeBase,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r119, $r118, r180);

        $r120 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r120.<android.util.SparseArray: void append(int,java.lang.Object)>(i1, $r117);

        i66 = i66 + 1;

        goto label40;

     label41:
        return;

     label42:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad magic number: #");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i45);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = new android.os.ParcelFormatException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    void readHistoryBuffer(android.os.Parcel, boolean) throws android.os.ParcelFormatException
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, i10, i12;
        android.os.Parcel $r1, $r2, $r14, r23;
        com.android.internal.os.BatteryStatsImpl$Constants $r3;
        java.lang.StringBuilder $r4, $r9, $r16;
        android.os.ParcelFormatException $r7, $r12;
        java.lang.String $r8, $r13, $r22;
        byte $b5;
        com.android.internal.os.BatteryStatsImpl$Clocks $r15;
        long $l6, $l7, $l8, l11, l13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r23 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        i10 = virtualinvoke r23.<android.os.Parcel: int readInt()>();

        if i10 == 186 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readHistoryBuffer: version got ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(186);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; erasing old stats");

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", $r22);

        return;

     label1:
        l11 = virtualinvoke r23.<android.os.Parcel: long readLong()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r1.<android.os.Parcel: void setDataSize(int)>(0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        i0 = virtualinvoke r23.<android.os.Parcel: int readInt()>();

        i12 = virtualinvoke r23.<android.os.Parcel: int dataPosition()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i1 = $r3.<com.android.internal.os.BatteryStatsImpl$Constants: int MAX_HISTORY_BUFFER>;

        $i2 = $i1 * 100;

        if i0 >= $i2 goto label5;

        $i3 = i0 & -4;

        if $i3 != i0 goto label4;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r14.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r23, i12, i0);

        $i4 = i12 + i0;

        virtualinvoke r23.<android.os.Parcel: void setDataPosition(int)>($i4);

        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readOldHistory(android.os.Parcel)>(r23);

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = l11;

        $b5 = l11 cmp 0L;

        if $b5 <= 0 goto label3;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l13 = interfaceinvoke $r15.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l7 = $l6 - l13;

        $l8 = $l7 + 1L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = $l8;

     label3:
        return;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer not aligned ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = new android.os.ParcelFormatException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer too large ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new android.os.ParcelFormatException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void readHistoryDelta(android.os.Parcel, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.os.BatteryStats$HistoryItem r2;
        int i0, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i34, $i35, $i38, $i39, $i45, $i46, $i50, $i51, i55, i56, $i57, i58, i59, $i61, $i62, i63, i64, i65, i66;
        long l1, $l3, $l4, $l47, $l48, $l49, $l52, $l53, $l54;
        byte $b2, $b32, $b33, $b36, $b37, $b40, $b41, $b42, $b43, $b44, b60;
        double $d0, $d1;
        android.os.BatteryStats$HistoryStepDetails $r3, $r4;
        android.os.BatteryStats$HistoryTag $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.BatteryStats$HistoryItem;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i55 = 524287 & i0;

        $b2 = (byte) 0;

        r2.<android.os.BatteryStats$HistoryItem: byte cmd> = $b2;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = 1;

        if i55 >= 524285 goto label01;

        $l53 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l52 = (long) i55;

        $l54 = $l53 + $l52;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l54;

        goto label04;

     label01:
        if i55 != 524285 goto label02;

        virtualinvoke r2.<android.os.BatteryStats$HistoryItem: void readFromParcel(android.os.Parcel)>(r1);

        return;

     label02:
        if i55 != 524286 goto label03;

        i56 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l48 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l47 = (long) i56;

        $l49 = $l48 + $l47;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l49;

        $i50 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i51 = $i50 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i51;

        goto label04;

     label03:
        l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $l3 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l4 = $l3 + l1;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l4;

        $i5 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i6 = $i5 + 2;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i6;

     label04:
        $i57 = 524288 & i0;

        if $i57 == 0 goto label05;

        i58 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readBatteryLevelInt(int,android.os.BatteryStats$HistoryItem)>(i58, r2);

        $i45 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i46 = $i45 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i46;

        goto label06;

     label05:
        i58 = 0;

     label06:
        $i7 = 1048576 & i0;

        if $i7 == 0 goto label11;

        i59 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i28 = 16777215 & i59;

        $i27 = -33554432 & i0;

        $i29 = $i28 | $i27;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i29;

        $i30 = i59 >> 29;

        $i31 = $i30 & 7;

        $b32 = (byte) $i31;

        $b33 = (byte) $b32;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b33;

        $i34 = i59 >> 26;

        $i35 = $i34 & 7;

        $b36 = (byte) $i35;

        $b37 = (byte) $b36;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b37;

        $i38 = i59 >> 24;

        $i39 = $i38 & 3;

        $b40 = (byte) $i39;

        $b41 = (byte) $b40;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b41;

        b60 = r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if b60 == 1 goto label09;

        if b60 == 2 goto label08;

        if b60 == 3 goto label07;

        goto label10;

     label07:
        $b44 = (byte) 4;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b44;

        goto label10;

     label08:
        $b43 = (byte) 2;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b43;

        goto label10;

     label09:
        $b42 = (byte) 1;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b42;

     label10:
        $i61 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i62 = $i61 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i62;

        goto label12;

     label11:
        $i10 = i0 & -33554432;

        $i8 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = $i8 & 16777215;

        $i11 = $i10 | $i9;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i11;

     label12:
        $i12 = 2097152 & i0;

        if $i12 == 0 goto label13;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<android.os.BatteryStats$HistoryItem: int states2> = $i26;

     label13:
        $i13 = 4194304 & i0;

        if $i13 == 0 goto label18;

        i63 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i64 = i63 & 65535;

        $i23 = i63 >> 16;

        i65 = $i23 & 65535;

        if i64 == 65535 goto label14;

        $r9 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r9;

        $r10 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>(i64, $r10);

        goto label15;

     label14:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

     label15:
        if i65 == 65535 goto label16;

        $r7 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r7;

        $r8 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>(i65, $r8);

        goto label17;

     label16:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

     label17:
        $i24 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i25 = $i24 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i25;

        goto label19;

     label18:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

     label19:
        $i14 = 8388608 & i0;

        if $i14 == 0 goto label20;

        $r5 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r5;

        i66 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i18 = i66 & 65535;

        r2.<android.os.BatteryStats$HistoryItem: int eventCode> = $i18;

        $i19 = i66 >> 16;

        $i20 = $i19 & 65535;

        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>($i20, $r6);

        $i21 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i22 = $i21 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i22;

        goto label21;

     label20:
        r2.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

     label21:
        $i15 = i58 & 1;

        if $i15 == 0 goto label22;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mReadHistoryStepDetails>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails> = $r3;

        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails>;

        virtualinvoke $r4.<android.os.BatteryStats$HistoryStepDetails: void readFromParcel(android.os.Parcel)>(r1);

        goto label23;

     label22:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails> = null;

     label23:
        $i16 = 16777216 & i0;

        if $i16 == 0 goto label24;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh> = $i17;

     label24:
        $d0 = virtualinvoke r1.<android.os.Parcel: double readDouble()>();

        r2.<android.os.BatteryStats$HistoryItem: double modemRailChargeMah> = $d0;

        $d1 = virtualinvoke r1.<android.os.Parcel: double readDouble()>();

        r2.<android.os.BatteryStats$HistoryItem: double wifiRailChargeMah> = $d1;

        return;
    }

    public void readKernelUidCpuActiveTimesLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r5;
        com.android.internal.os._$$Lambda$BatteryStatsImpl$_l2oiaRDRhjCXI_PwXPsAhrgegI $r3;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r4;
        long $l0, l3, l4;
        byte $b1;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader>;

        $r3 = new com.android.internal.os._$$Lambda$BatteryStatsImpl$_l2oiaRDRhjCXI_PwXPsAhrgegI;

        specialinvoke $r3.<com.android.internal.os._$$Lambda$BatteryStatsImpl$_l2oiaRDRhjCXI_PwXPsAhrgegI: void <init>(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, z0);

        virtualinvoke $r4.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>($r3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l4 = $l0 - l3;

        $b1 = l4 cmp 100L;

        if $b1 < 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading cpu active times took ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

     label1:
        return;
    }

    public void readKernelUidCpuClusterTimesLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r5;
        com.android.internal.os._$$Lambda$BatteryStatsImpl$Xvt9xdVPtevMWGIjcbxXf0_mr_c $r3;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r4;
        long $l0, l3, l4;
        byte $b1;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l3 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader>;

        $r3 = new com.android.internal.os._$$Lambda$BatteryStatsImpl$Xvt9xdVPtevMWGIjcbxXf0_mr_c;

        specialinvoke $r3.<com.android.internal.os._$$Lambda$BatteryStatsImpl$Xvt9xdVPtevMWGIjcbxXf0_mr_c: void <init>(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, z0);

        virtualinvoke $r4.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>($r3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l4 = $l0 - l3;

        $b1 = l4 cmp 100L;

        if $b1 < 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading cpu cluster times took ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

     label1:
        return;
    }

    public void readKernelUidCpuFreqTimesLocked(java.util.ArrayList, boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2;
        int i0, i1, $i5, $i10, $i11, i13, i16, i17, i18;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] r2, $r18, $r20, $r21, $r31;
        long l2, $l3, $l6, $l7, $l8, $l9, l14, l15;
        long[] r3, $r25;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r4, $r8;
        com.android.internal.os.PowerProfile $r5, $r16;
        com.android.internal.os.BatteryStatsImpl$Clocks $r6, $r9;
        com.android.internal.os._$$Lambda$BatteryStatsImpl$B_TmZhQb712ePnuJTxvMe7P_YwQ $r7;
        byte $b4;
        long[][] $r10, $r24, $r27;
        java.lang.Object $r11;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r12;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] $r13, $r14, $r15, $r17, $r19, $r22, $r30, $r32, $r40;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r23, $r26, $r28;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r29;
        java.lang.StringBuilder $r33;
        java.lang.String $r37;
        com.android.internal.os.BatteryStatsImpl$Uid r39;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        z1 = virtualinvoke $r4.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: boolean perClusterTimesAvailable()>();

        if r1 != null goto label01;

        i13 = 0;

        goto label02;

     label01:
        i13 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label02:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        i0 = virtualinvoke $r5.<com.android.internal.os.PowerProfile: int getNumCpuClusters()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs> = null;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l14 = interfaceinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $r7 = new com.android.internal.os._$$Lambda$BatteryStatsImpl$B_TmZhQb712ePnuJTxvMe7P_YwQ;

        specialinvoke $r7.<com.android.internal.os._$$Lambda$BatteryStatsImpl$B_TmZhQb712ePnuJTxvMe7P_YwQ: void <init>(com.android.internal.os.BatteryStatsImpl,boolean,boolean,boolean,int,int)>(r0, z0, z2, z1, i0, i13);

        virtualinvoke $r8.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>($r7);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l3 = interfaceinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l15 = $l3 - l14;

        $b4 = l15 cmp 100L;

        if $b4 < 0 goto label03;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading cpu freq times took ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r37);

     label03:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        if $r10 == null goto label15;

        i16 = 0;

     label04:
        if i16 >= i13 goto label14;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r12 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r11;

        r39 = $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        $r13 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        if $r13 == null goto label05;

        $r32 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $i11 = lengthof $r32;

        if $i11 == i0 goto label06;

     label05:
        $r14 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])>($r14);

        $r15 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[])[i0];

        r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs> = $r15;

     label06:
        i17 = 0;

     label07:
        if i17 >= i0 goto label13;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        i1 = virtualinvoke $r16.<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)>(i17);

        $r17 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r18 = $r17[i17];

        if $r18 == null goto label08;

        $r30 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r31 = $r30[i17];

        $i10 = lengthof $r31;

        if $i10 == i1 goto label09;

     label08:
        $r19 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r20 = $r19[i17];

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r20);

        $r22 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r21 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[i1];

        $r22[i17] = $r21;

     label09:
        $r40 = r39.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        r2 = $r40[i17];

        i18 = 0;

     label10:
        if i18 >= i1 goto label12;

        $r23 = r2[i18];

        if $r23 != null goto label11;

        $r28 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r28.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r29);

        r2[i18] = $r28;

        goto label11;

     label11:
        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        $r25 = $r24[i17];

        $l7 = $r25[i18];

        $i5 = i13 - i16;

        $l6 = (long) $i5;

        l2 = $l7 / $l6;

        $r26 = r2[i18];

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>(l2, z0);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: long[][] mWakeLockAllocationsUs>;

        r3 = $r27[i17];

        $l8 = r3[i18];

        $l9 = $l8 - l2;

        r3[i18] = $l9;

        i18 = i18 + 1;

        goto label10;

     label12:
        i17 = i17 + 1;

        goto label07;

     label13:
        i16 = i16 + 1;

        goto label04;

     label14:
        goto label15;

     label15:
        return;
    }

    public void readKernelUidCpuTimesLocked(java.util.ArrayList, android.util.SparseLongArray, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.ArrayList r1;
        android.util.SparseLongArray r2;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r3;
        int i0, i1, i2, $i11, $i15, $i21, $i22, i35, i38;
        com.android.internal.os.BatteryStatsImpl$Clocks $r4, $r7;
        com.android.internal.os._$$Lambda$BatteryStatsImpl$7bfIWpn8X2h_hSzLD6dcuK4Ljuw $r5;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r6;
        long $l3, $l5, $l6, $l7, $l8, $l9, $l10, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, l36, l37;
        byte $b4;
        java.lang.Object $r8;
        com.android.internal.os.BatteryStatsImpl$Uid $r9, $r11, $r13, $r15;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r10, $r12;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r14;
        java.lang.StringBuilder $r16;
        java.lang.String $r20;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: android.util.SparseLongArray;

        z0 := @parameter2: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs> = 0L;

        if r1 != null goto label1;

        i35 = 0;

        goto label2;

     label1:
        i35 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l36 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader>;

        $r5 = new com.android.internal.os._$$Lambda$BatteryStatsImpl$7bfIWpn8X2h_hSzLD6dcuK4Ljuw;

        specialinvoke $r5.<com.android.internal.os._$$Lambda$BatteryStatsImpl$7bfIWpn8X2h_hSzLD6dcuK4Ljuw: void <init>(com.android.internal.os.BatteryStatsImpl,int,boolean,android.util.SparseLongArray)>(r0, i35, z0, r2);

        virtualinvoke $r6.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>($r5);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l3 = interfaceinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l37 = $l3 - l36;

        $b4 = l37 cmp 100L;

        if $b4 < 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading cpu stats took ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l37);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r20);

     label3:
        if i35 <= 0 goto label7;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs>;

        $l6 = $l5 * 50L;

        $l7 = $l6 / 100L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs> = $l7;

        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs>;

        $l9 = $l8 * 50L;

        $l10 = $l9 / 100L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs> = $l10;

        i38 = 0;

     label4:
        if i38 >= i35 goto label6;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i38);

        r3 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r8;

        $l13 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs>;

        $i11 = i35 - i38;

        $l12 = (long) $i11;

        $l14 = $l13 / $l12;

        i0 = (int) $l14;

        $l17 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs>;

        $i15 = i35 - i38;

        $l16 = (long) $i15;

        $l18 = $l17 / $l16;

        i1 = (int) $l18;

        $r9 = r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        $r10 = $r9.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mUserCpuTime>;

        $l19 = (long) i0;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>($l19, z0);

        $r11 = r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        $r12 = $r11.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mSystemCpuTime>;

        $l20 = (long) i1;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>($l20, z0);

        if r2 == null goto label5;

        $r15 = r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        i2 = virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>();

        $l29 = virtualinvoke r2.<android.util.SparseLongArray: long get(int,long)>(i2, 0L);

        $l30 = (long) i0;

        $l32 = $l29 + $l30;

        $l31 = (long) i1;

        $l33 = $l32 + $l31;

        virtualinvoke r2.<android.util.SparseLongArray: void put(int,long)>(i2, $l33);

     label5:
        $r13 = r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        $r14 = virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*wakelock*");

        $i22 = i0 / 1000;

        $i21 = i1 / 1000;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int,boolean)>($i22, $i21, z0);

        $l24 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs>;

        $l23 = (long) i0;

        $l25 = $l24 - $l23;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuUserTimeUs> = $l25;

        $l27 = r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs>;

        $l26 = (long) i1;

        $l28 = $l27 - $l26;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTempTotalCpuSystemTimeUs> = $l28;

        i38 = i38 + 1;

        goto label4;

     label6:
        goto label7;

     label7:
        return;
    }

    public void readLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.util.AtomicFile $r1, $r2, $r5, $r13, r19;
        com.android.internal.os.BatteryStatsHistory $r3, $r11, $r16;
        android.util.SparseArray $r4;
        boolean $z0, $z1;
        java.lang.String $r6;
        android.os.Parcel $r7, r20, r24;
        int $i4, $i5, $i6, $i7, $i8;
        com.android.internal.os.BatteryStatsImpl$Clocks $r8, $r9;
        android.os.BatteryStats$HistoryItem $r10;
        java.util.List $r12;
        java.lang.Throwable $r14, $r18;
        java.lang.Exception $r15, $r17;
        byte[] r21, r25;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mDailyFile>;

        if $r1 == null goto label01;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readDailyStatsLocked()>();

     label01:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        if $r2 != null goto label02;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "readLocked: no file associated with this instance");

        return;

     label02:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        r19 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()>();

        if r19 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "readLocked: no history file associated with this instance");

        return;

     label03:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r4.<android.util.SparseArray: void clear()>();

        r20 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label04:
        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        $z0 = virtualinvoke $r5.<android.util.AtomicFile: boolean exists()>();

        if $z0 == 0 goto label05;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        r21 = virtualinvoke $r13.<android.util.AtomicFile: byte[] readFully()>();

        $i8 = lengthof r21;

        virtualinvoke r20.<android.os.Parcel: void unmarshall(byte[],int,int)>(r21, 0, $i8);

        virtualinvoke r20.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r20);

     label05:
        virtualinvoke r20.<android.os.Parcel: void recycle()>();

        goto label10;

     label06:
        $r14 := @caughtexception;

        goto label21;

     label07:
        $r17 := @caughtexception;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Error reading battery statistics", $r17);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

     label09:
        goto label05;

     label10:
        r24 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label11:
        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z1 = virtualinvoke r19.<android.util.AtomicFile: boolean exists()>();

        if $z1 == 0 goto label12;

        r25 = virtualinvoke r19.<android.util.AtomicFile: byte[] readFully()>();

        $i6 = lengthof r25;

        if $i6 <= 0 goto label12;

        $i7 = lengthof r25;

        virtualinvoke r24.<android.os.Parcel: void unmarshall(byte[],int,int)>(r25, 0, $i7);

        virtualinvoke r24.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryBuffer(android.os.Parcel,boolean)>(r24, 1);

     label12:
        virtualinvoke r24.<android.os.Parcel: void recycle()>();

        goto label17;

     label13:
        $r18 := @caughtexception;

        goto label20;

     label14:
        $r15 := @caughtexception;

     label15:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Error reading battery history", $r15);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsHistory: void resetAllFiles()>();

     label16:
        goto label12;

     label17:
        $r6 = <android.os.Build: java.lang.String ID>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r6;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i4 = virtualinvoke $r7.<android.os.Parcel: int dataPosition()>();

        if $i4 > 0 goto label18;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        $r12 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsHistory: java.util.List getFilesNumbers()>();

        $i5 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i5 <= 1 goto label19;

     label18:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte,android.os.BatteryStats$HistoryItem)>(l0, 4, $r10);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l0, l1, 0);

     label19:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsIfNeededLocked(boolean)>(0);

        return;

     label20:
        virtualinvoke r24.<android.os.Parcel: void recycle()>();

        throw $r18;

     label21:
        virtualinvoke r20.<android.os.Parcel: void recycle()>();

        throw $r14;

        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Exception from label11 to label12 with label14;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
    }

    void readOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    public void readSummaryFromParcel(android.os.Parcel) throws android.os.ParcelFormatException
    {
        com.android.internal.os.BatteryStatsImpl r0, $r144;
        int i0, i1, i2, i3, i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i81, $i82, $i83, $i84, $i85, $i87, $i88, $i89, $i90, $i91, $i92, i94, i95, i96, i97, i98, i99, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i119, i120, i121, i122, $i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i141, i142, i144, i145, i146, i147, i148, i150, i151, i152, i153;
        boolean z0, z2, z3, z4, z5;
        java.util.HashMap $r2, $r253;
        long $l6, $l7, $l8, $l21, $l22, $l23, $l26, $l27, $l62, $l65, $l66, $l67, $l80, $l86;
        java.lang.String $r3, $r4, $r45, $r50, $r55, $r60, $r65, $r91, $r96, $r101, $r111, $r116, $r121, $r129, $r135, $r136, $r141, $r149, $r150, $r151, $r188, $r221, $r223, $r225, $r227, $r249, $r256, $r264, r269, r279, r281;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r5, $r6, $r68, $r69, $r74, $r77, $r138, $r145, $r154, $r159, $r164, $r169, $r179;
        android.os.BatteryStats$LevelStepTracker $r7, $r8, $r9, $r10;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r11, $r12, $r13, $r14, $r15, $r28, $r29, $r30, $r70, $r71, $r79, $r83, $r85, $r104, $r152, $r153, $r156, $r157, $r158, $r161, $r178, $r183, $r191, $r192, $r194, $r196, $r238, $r240;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r202, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r216, $r218, $r219, $r230, $r232, $r234, $r236, $r242, $r244, $r246;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r35, $r36, $r37;
        java.lang.StringBuilder $r41, $r46, $r51, $r56, $r61, $r87, $r92, $r97, $r107, $r112, $r117, $r125, $r131, $r184, $r258;
        android.os.ParcelFormatException $r44, $r49, $r54, $r59, $r64, $r90, $r95, $r100, $r110, $r115, $r120, $r128, $r134, $r187, $r189, $r251;
        com.android.internal.os.BatteryStatsImpl$Uid $r66;
        android.util.SparseArray $r67;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] $r72, $r172, $r173, $r174, $r176, $r177, $r181;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r73, $r75, $r76, $r78, $r80, $r166, $r171;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] $r81, $r82, $r162, $r163, $r165, $r167, $r168, $r170;
        com.android.internal.os.BatteryStatsImpl$Counter $r102, $r103, $r137, $r143, $r148, $r199, $r203, $r204;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r105, $r146, $r147, $r197, $r198;
        long[] $r106;
        android.util.ArrayMap $r122, $r130, $r139;
        java.lang.Object $r123;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r124, r280;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r142, $r205, $r206, $r207, $r217;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r175, $r180, $r182, $r190, $r193, $r195, $r237, $r239;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r200;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r201, $r215, $r229, $r231, $r233, $r235, $r241, $r243, $r245;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r220, $r222, $r224, $r226, $r228;
        java.util.ArrayList $r247, $r250;
        android.os.BatteryStats$PackageChange $r248;
        android.os.BatteryStats$HistoryTag $r252;
        java.lang.Integer $r254;
        com.android.internal.os.BatteryStatsHistory $r257;
        android.os.Parcel r265;
        com.android.internal.os.PowerProfile r275, r276;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r278;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r282;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r265 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i0 == 186 goto label001;

        $r258 = new java.lang.StringBuilder;

        specialinvoke $r258.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readFromParcel: version got ");

        virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(186);

        virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; erasing old stats");

        $r264 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", $r264);

        return;

     label001:
        z0 = virtualinvoke r265.<android.os.Parcel: boolean readBoolean()>();

        if z0 == 0 goto label002;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryBuffer(android.os.Parcel,boolean)>(r265, 1);

        $r257 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r257.<com.android.internal.os.BatteryStatsHistory: void readFromParcel(android.os.Parcel)>(r265);

     label002:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        i94 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        i95 = 0;

     label003:
        if i95 >= i94 goto label006;

        i96 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r269 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        if r269 == null goto label005;

        i97 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $r252 = new android.os.BatteryStats$HistoryTag;

        specialinvoke $r252.<android.os.BatteryStats$HistoryTag: void <init>()>();

        $r252.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r269;

        $r252.<android.os.BatteryStats$HistoryTag: int uid> = i97;

        $r252.<android.os.BatteryStats$HistoryTag: int poolIdx> = i96;

        $r253 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r254 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i96);

        virtualinvoke $r253.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r252, $r254);

        $i87 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        if i96 < $i87 goto label004;

        $i92 = i96 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = $i92;

     label004:
        $i88 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars>;

        $r256 = $r252.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i89 = virtualinvoke $r256.<java.lang.String: int length()>();

        $i90 = $i89 + 1;

        $i91 = $i88 + $i90;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = $i91;

        i95 = i95 + 1;

        goto label003;

     label005:
        $r251 = new android.os.ParcelFormatException;

        specialinvoke $r251.<android.os.ParcelFormatException: void <init>(java.lang.String)>("null history tag string");

        throw $r251;

     label006:
        $i5 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i5;

        $l6 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l6;

        $l7 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l7;

        $l8 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l8;

        $r3 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = $r3;

        $r4 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $i9 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i9;

        $i10 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = $i10;

        $i11 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i11;

        $i12 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = $i12;

        $i13 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = $i13;

        $i14 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = $i14;

        $i15 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = $i15;

        $i16 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i16;

        $i17 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i17;

        $i18 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i18;

        $i19 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i19;

        $i20 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge> = $i20;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r7.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r265);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r8.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r265);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        virtualinvoke $r9.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r265);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        virtualinvoke $r10.<android.os.BatteryStats$LevelStepTracker: void readFromParcel(android.os.Parcel)>(r265);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i98 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i98 <= 0 goto label010;

        $r247 = new java.util.ArrayList;

        specialinvoke $r247.<java.util.ArrayList: void <init>(int)>(i98);

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges> = $r247;

        i99 = i98;

     label007:
        if i99 <= 0 goto label011;

        i99 = i99 + -1;

        $r248 = new android.os.BatteryStats$PackageChange;

        specialinvoke $r248.<android.os.BatteryStats$PackageChange: void <init>()>();

        $r249 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r248.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName> = $r249;

        $i85 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i85 == 0 goto label008;

        z2 = 1;

        goto label009;

     label008:
        z2 = 0;

     label009:
        $r248.<android.os.BatteryStats$PackageChange: boolean mUpdate> = z2;

        $l86 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        $r248.<android.os.BatteryStats$PackageChange: long mVersionCode> = $l86;

        $r250 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        virtualinvoke $r250.<java.util.ArrayList: boolean add(java.lang.Object)>($r248);

        goto label007;

     label010:
        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges> = null;

     label011:
        $l21 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime> = $l21;

        $l22 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline> = $l22;

        $l23 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline> = $l23;

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i25 = $i24 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i25;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i101 = 0;

     label012:
        if i101 >= 5 goto label013;

        $r245 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r246 = $r245[i101];

        virtualinvoke $r246.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i101 = i101 + 1;

        goto label012;

     label013:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = 0;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $l26 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime> = $l26;

        $l27 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime> = $l27;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i102 = 0;

     label014:
        $i28 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i102 >= $i28 goto label015;

        $r243 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r244 = $r243[i102];

        virtualinvoke $r244.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i102 = i102 + 1;

        goto label014;

     label015:
        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i103 = 0;

     label016:
        $i29 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i103 >= $i29 goto label017;

        $r241 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r242 = $r241[i103];

        virtualinvoke $r242.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i103 = i103 + 1;

        goto label016;

     label017:
        i104 = 0;

     label018:
        if i104 >= 10 goto label019;

        $r237 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r238 = $r237[i104];

        virtualinvoke $r238.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r239 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r240 = $r239[i104];

        virtualinvoke $r240.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i104 = i104 + 1;

        goto label018;

     label019:
        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = 1;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiRadioPowerState> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i105 = 0;

     label020:
        if i105 >= 8 goto label021;

        $r235 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r236 = $r235[i105];

        virtualinvoke $r236.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i105 = i105 + 1;

        goto label020;

     label021:
        i106 = 0;

     label022:
        if i106 >= 13 goto label023;

        $r233 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r234 = $r233[i106];

        virtualinvoke $r234.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i106 = i106 + 1;

        goto label022;

     label023:
        i107 = 0;

     label024:
        if i107 >= 5 goto label025;

        $r231 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r232 = $r231[i107];

        virtualinvoke $r232.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i107 = i107 + 1;

        goto label024;

     label025:
        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void readSummaryFromParcel(android.os.Parcel)>(r265);

        i108 = 0;

     label026:
        if i108 >= 2 goto label027;

        $r229 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r230 = $r229[i108];

        virtualinvoke $r230.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i108 = i108 + 1;

        goto label026;

     label027:
        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        virtualinvoke $r36.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $i30 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label028;

        z3 = 1;

        goto label029;

     label028:
        z3 = 0;

     label029:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = z3;

        $i31 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label030;

        z4 = 1;

        goto label031;

     label030:
        z4 = 0;

     label031:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = z4;

        $i32 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label032;

        z5 = 1;

        goto label033;

     label032:
        z5 = 0;

     label033:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = z5;

        $i33 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange> = $i33;

        r0.<com.android.internal.os.BatteryStatsImpl: int mFlashlightOnNesting> = 0;

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r38.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        r0.<com.android.internal.os.BatteryStatsImpl: int mCameraOnNesting> = 0;

        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothScanNesting> = 0;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r40.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i1 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i1 > 10000 goto label137;

        i109 = 0;

     label034:
        if i109 >= i1 goto label036;

        $i84 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i84 == 0 goto label035;

        $r227 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r228 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)>($r227);

        virtualinvoke $r228.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label035:
        i109 = i109 + 1;

        goto label034;

     label036:
        i2 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i2 > 10000 goto label136;

        i110 = 0;

     label037:
        if i110 >= i2 goto label039;

        $i83 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i83 == 0 goto label038;

        $r225 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r226 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getScreenOffRpmTimerLocked(java.lang.String)>($r225);

        virtualinvoke $r226.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label038:
        i110 = i110 + 1;

        goto label037;

     label039:
        i111 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i111 > 10000 goto label135;

        i112 = 0;

     label040:
        if i112 >= i111 goto label042;

        $i82 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i82 == 0 goto label041;

        $r223 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r224 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>($r223);

        virtualinvoke $r224.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label041:
        i112 = i112 + 1;

        goto label040;

     label042:
        i113 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i113 > 10000 goto label134;

        i114 = 0;

     label043:
        if i114 >= i113 goto label045;

        $i81 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i81 == 0 goto label044;

        $r221 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r222 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>($r221);

        virtualinvoke $r222.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label044:
        i114 = i114 + 1;

        goto label043;

     label045:
        i3 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        i115 = 0;

     label046:
        if i115 >= i3 goto label048;

        $i79 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i79 == 0 goto label047;

        $l80 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        $r220 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelMemoryTimerLocked(long)>($l80);

        virtualinvoke $r220.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label047;

     label047:
        i115 = i115 + 1;

        goto label046;

     label048:
        i4 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i4 > 10000 goto label133;

        i116 = 0;

     label049:
        if i116 >= i4 goto label132;

        i119 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $r66 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i119);

        $r67 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r67.<android.util.SparseArray: void put(int,java.lang.Object)>(i119, $r66);

        $r68 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryBackgroundTimeBase>;

        virtualinvoke $r68.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $r69 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffBackgroundTimeBase>;

        virtualinvoke $r69.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r265);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiRunning> = 0;

        $i34 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label050;

        $r219 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r219.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label050:
        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $i35 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label051;

        $r218 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r218.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label051:
        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiScanStarted> = 0;

        $i36 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label052;

        $r217 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        virtualinvoke $r217.<com.android.internal.os.BatteryStatsImpl$DualTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label052:
        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: int mWifiBatchedScanBinStarted> = -1;

        i120 = 0;

     label053:
        if i120 >= 5 goto label055;

        $i78 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i78 == 0 goto label054;

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void makeWifiBatchedScanBin(int,android.os.Parcel)>(i120, null);

        $r215 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r216 = $r215[i120];

        virtualinvoke $r216.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label054:
        i120 = i120 + 1;

        goto label053;

     label055:
        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: int mWifiMulticastWakelockCount> = 0;

        $i37 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label056;

        $r214 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r214.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label056:
        $i38 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i38 == 0 goto label057;

        $r213 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createAudioTurnedOnTimerLocked()>();

        virtualinvoke $r213.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label057:
        $i39 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label058;

        $r212 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createVideoTurnedOnTimerLocked()>();

        virtualinvoke $r212.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label058:
        $i40 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i40 == 0 goto label059;

        $r211 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createFlashlightTurnedOnTimerLocked()>();

        virtualinvoke $r211.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label059:
        $i41 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i41 == 0 goto label060;

        $r210 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createCameraTurnedOnTimerLocked()>();

        virtualinvoke $r210.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label060:
        $i42 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i42 == 0 goto label061;

        $r209 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createForegroundActivityTimerLocked()>();

        virtualinvoke $r209.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label061:
        $i43 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i43 == 0 goto label062;

        $r208 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createForegroundServiceTimerLocked()>();

        virtualinvoke $r208.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label062:
        $i44 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i44 == 0 goto label063;

        $r207 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer createAggregatedPartialWakelockTimerLocked()>();

        virtualinvoke $r207.<com.android.internal.os.BatteryStatsImpl$DualTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label063:
        $i45 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i45 == 0 goto label064;

        $r206 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer createBluetoothScanTimerLocked()>();

        virtualinvoke $r206.<com.android.internal.os.BatteryStatsImpl$DualTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label064:
        $i46 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i46 == 0 goto label065;

        $r205 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer createBluetoothUnoptimizedScanTimerLocked()>();

        virtualinvoke $r205.<com.android.internal.os.BatteryStatsImpl$DualTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label065:
        $i47 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label066;

        $r204 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter createBluetoothScanResultCounterLocked()>();

        virtualinvoke $r204.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label066:
        $i48 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i48 == 0 goto label067;

        $r203 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter createBluetoothScanResultBgCounterLocked()>();

        virtualinvoke $r203.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label067:
        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: int mProcessState> = 20;

        i121 = 0;

     label068:
        if i121 >= 7 goto label070;

        $i77 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i77 == 0 goto label069;

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void makeProcessState(int,android.os.Parcel)>(i121, null);

        $r201 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r202 = $r201[i121];

        virtualinvoke $r202.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label069:
        i121 = i121 + 1;

        goto label068;

     label070:
        $i49 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i49 == 0 goto label071;

        $r200 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer createVibratorOnTimerLocked()>();

        virtualinvoke $r200.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label071:
        $i50 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i50 == 0 goto label074;

        $r197 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r197 != null goto label072;

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>();

     label072:
        i122 = 0;

     label073:
        $i123 = <com.android.internal.os.BatteryStatsImpl$Uid: int NUM_USER_ACTIVITY_TYPES>;

        if i122 >= $i123 goto label074;

        $r198 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r199 = $r198[i122];

        virtualinvoke $r199.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i122 = i122 + 1;

        goto label073;

     label074:
        $i51 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label078;

        $r190 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        if $r190 != null goto label075;

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void initNetworkActivityLocked()>();

     label075:
        i124 = 0;

     label076:
        if i124 >= 10 goto label077;

        $r193 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r194 = $r193[i124];

        virtualinvoke $r194.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r195 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r196 = $r195[i124];

        virtualinvoke $r196.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        i124 = i124 + 1;

        goto label076;

     label077:
        $r191 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveTime>;

        virtualinvoke $r191.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r192 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveCount>;

        virtualinvoke $r192.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

     label078:
        $r70 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mUserCpuTime>;

        virtualinvoke $r70.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r71 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mSystemCpuTime>;

        virtualinvoke $r71.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $i52 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label090;

        i125 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r275 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        if r275 == null goto label080;

        $i76 = virtualinvoke r275.<com.android.internal.os.PowerProfile: int getNumCpuClusters()>();

        if $i76 != i125 goto label079;

        goto label080;

     label079:
        $r189 = new android.os.ParcelFormatException;

        specialinvoke $r189.<android.os.ParcelFormatException: void <init>(java.lang.String)>("Incompatible cpu cluster arrangement");

        throw $r189;

     label080:
        $r172 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])>($r172);

        $r173 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[])[i125];

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs> = $r173;

        i126 = 0;

     label081:
        if i126 >= i125 goto label089;

        $i73 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i73 == 0 goto label087;

        i127 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r276 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        if r276 == null goto label083;

        $i75 = virtualinvoke r276.<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)>(i126);

        if $i75 != i127 goto label082;

        goto label083;

     label082:
        $r184 = new java.lang.StringBuilder;

        specialinvoke $r184.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many speed bins ");

        virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i127);

        $r187 = new android.os.ParcelFormatException;

        $r188 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r187.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r188);

        throw $r187;

     label083:
        $r176 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r175 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[i127];

        $r176[i126] = $r175;

        i128 = 0;

     label084:
        if i128 >= i127 goto label086;

        $i74 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i74 == 0 goto label085;

        $r177 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r180 = $r177[i126];

        $r178 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r179 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r178.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r179);

        $r180[i128] = $r178;

        $r181 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r182 = $r181[i126];

        $r183 = $r182[i128];

        virtualinvoke $r183.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label085;

     label085:
        i128 = i128 + 1;

        goto label084;

     label086:
        goto label088;

     label087:
        $r174 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r174[i126] = null;

     label088:
        i126 = i126 + 1;

        goto label081;

     label089:
        goto label091;

     label090:
        $r72 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[][])>($r72);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs> = null;

     label091:
        $r73 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r73);

        $r74 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r75 = staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readSummaryFromParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r265, $r74);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs> = $r75;

        $r76 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r76);

        $r77 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $r78 = staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readSummaryFromParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r265, $r77);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs> = $r78;

        $r79 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mCpuActiveTimeMs>;

        virtualinvoke $r79.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r80 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuClusterTimesMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void access$2300(com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray,android.os.Parcel)>($r80, r265);

        i129 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i129 != 7 goto label094;

        $r167 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r167);

        $r168 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)[i129];

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs> = $r168;

        i130 = 0;

     label092:
        if i130 >= i129 goto label093;

        $r170 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        $r169 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r171 = staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readSummaryFromParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r265, $r169);

        $r170[i130] = $r171;

        i130 = i130 + 1;

        goto label092;

     label093:
        goto label095;

     label094:
        $r81 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r81);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs> = null;

     label095:
        i131 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i131 != 7 goto label098;

        $r162 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r162);

        $r163 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)[i131];

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs> = $r163;

        i132 = 0;

     label096:
        if i132 >= i131 goto label097;

        $r165 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        $r164 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $r166 = staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray readSummaryFromParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$TimeBase)>(r265, $r164);

        $r165[i132] = $r166;

        i132 = i132 + 1;

        goto label096;

     label097:
        goto label099;

     label098:
        $r82 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r82);

        $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs> = null;

     label099:
        $i53 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label100;

        $r157 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2400(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r157);

        $r158 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r159 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r158.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r159);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2402(com.android.internal.os.BatteryStatsImpl$Uid,com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)>($r66, $r158);

        $r161 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2400(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        virtualinvoke $r161.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label101;

     label100:
        $r83 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2400(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r83);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2402(com.android.internal.os.BatteryStatsImpl$Uid,com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)>($r66, null);

     label101:
        $i54 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label102;

        $r152 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2500(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r152);

        $r153 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r154 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r153.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r154);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2502(com.android.internal.os.BatteryStatsImpl$Uid,com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)>($r66, $r153);

        $r156 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2500(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        virtualinvoke $r156.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label103;

     label102:
        $r85 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2500(com.android.internal.os.BatteryStatsImpl$Uid)>($r66);

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r85);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2502(com.android.internal.os.BatteryStatsImpl$Uid,com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)>($r66, null);

     label103:
        i133 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $i55 = <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID>;

        $i56 = $i55 + 1;

        if i133 > $i56 goto label131;

        i134 = 0;

     label104:
        if i134 >= i133 goto label105;

        $r151 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void readWakeSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>($r151, r265);

        i134 = i134 + 1;

        goto label104;

     label105:
        i135 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $i57 = <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID>;

        $i58 = $i57 + 1;

        if i135 > $i58 goto label130;

        i136 = 0;

     label106:
        if i136 >= i135 goto label107;

        $r150 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void readSyncSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>($r150, r265);

        i136 = i136 + 1;

        goto label106;

     label107:
        i137 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $i59 = <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID>;

        $i60 = $i59 + 1;

        if i137 > $i60 goto label129;

        i138 = 0;

     label108:
        if i138 >= i137 goto label109;

        $r149 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void readJobSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>($r149, r265);

        i138 = i138 + 1;

        goto label108;

     label109:
        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: void readJobCompletionsFromParcelLocked(android.os.Parcel)>(r265);

        $r102 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mJobsDeferredEventCount>;

        virtualinvoke $r102.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r103 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mJobsDeferredCount>;

        virtualinvoke $r103.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r104 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mJobsFreshnessTimeMs>;

        virtualinvoke $r104.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r105 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mJobsFreshnessBuckets>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs[])>($r105);

        i139 = 0;

     label110:
        $r106 = <com.android.internal.os.BatteryStatsImpl: long[] JOB_FRESHNESS_BUCKETS>;

        $i61 = lengthof $r106;

        if i139 >= $i61 goto label112;

        $i72 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i72 == 0 goto label111;

        $r146 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mJobsFreshnessBuckets>;

        $r143 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r144 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl mBsi>;

        $r145 = $r144.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r143.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r145);

        $r146[i139] = $r143;

        $r147 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mJobsFreshnessBuckets>;

        $r148 = $r147[i139];

        virtualinvoke $r148.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label111;

     label111:
        i139 = i139 + 1;

        goto label110;

     label112:
        i141 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i141 > 1000 goto label128;

        i142 = 0;

     label113:
        if i142 >= i141 goto label115;

        i144 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        $i71 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if $i71 == 0 goto label114;

        $r142 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer getSensorTimerLocked(int,boolean)>(i144, 1);

        virtualinvoke $r142.<com.android.internal.os.BatteryStatsImpl$DualTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        goto label114;

     label114:
        i142 = i142 + 1;

        goto label113;

     label115:
        i145 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i145 > 1000 goto label127;

        i146 = 0;

     label116:
        if i146 >= i145 goto label117;

        $r141 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        r278 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>($r141);

        $l65 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l65;

        $l66 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l66;

        $l67 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l67;

        $i68 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i68;

        $i69 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes> = $i69;

        $i70 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs> = $i70;

        virtualinvoke r278.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void readExcessivePowerFromParcelLocked(android.os.Parcel)>(r265);

        i146 = i146 + 1;

        goto label116;

     label117:
        i147 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i147 > 10000 goto label126;

        i148 = 0;

     label118:
        if i148 >= i147 goto label125;

        r279 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r122 = $r66.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mPackageStats>;

        $r123 = virtualinvoke $r122.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r279);

        $r124 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r123;

        staticinvoke <com.android.internal.os.BatteryStatsImpl: void detachIfNotNull(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>($r124);

        r280 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r279);

        i150 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i150 > 10000 goto label124;

        $r130 = r280.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mWakeupAlarms>;

        virtualinvoke $r130.<android.util.ArrayMap: void clear()>();

        i151 = 0;

     label119:
        if i151 >= i150 goto label120;

        r281 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        $r137 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r138 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r137.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r138);

        virtualinvoke $r137.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r265);

        $r139 = r280.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mWakeupAlarms>;

        virtualinvoke $r139.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r281, $r137);

        i151 = i151 + 1;

        goto label119;

     label120:
        i152 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        if i152 > 10000 goto label123;

        i153 = 0;

     label121:
        if i153 >= i152 goto label122;

        $r136 = virtualinvoke r265.<android.os.Parcel: java.lang.String readString()>();

        r282 = virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r279, $r136);

        $l62 = virtualinvoke r265.<android.os.Parcel: long readLong()>();

        r282.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mStartTime> = $l62;

        $i63 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r282.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts> = $i63;

        $i64 = virtualinvoke r265.<android.os.Parcel: int readInt()>();

        r282.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches> = $i64;

        i153 = i153 + 1;

        goto label121;

     label122:
        i148 = i148 + 1;

        goto label118;

     label123:
        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many services ");

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i152);

        $r134 = new android.os.ParcelFormatException;

        $r135 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r134.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r135);

        throw $r134;

     label124:
        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wakeup alarms ");

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i150);

        $r128 = new android.os.ParcelFormatException;

        $r129 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r128.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r129);

        throw $r128;

     label125:
        i116 = i116 + 1;

        goto label049;

     label126:
        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many packages ");

        virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i147);

        $r120 = new android.os.ParcelFormatException;

        $r121 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r120.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r121);

        throw $r120;

     label127:
        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many processes ");

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i145);

        $r115 = new android.os.ParcelFormatException;

        $r116 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r115.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r116);

        throw $r115;

     label128:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many sensors ");

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i141);

        $r110 = new android.os.ParcelFormatException;

        $r111 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r110.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r111);

        throw $r110;

     label129:
        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many job timers ");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i137);

        $r100 = new android.os.ParcelFormatException;

        $r101 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r100.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r101);

        throw $r100;

     label130:
        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many syncs ");

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i135);

        $r95 = new android.os.ParcelFormatException;

        $r96 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r95.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r96);

        throw $r95;

     label131:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wake locks ");

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i133);

        $r90 = new android.os.ParcelFormatException;

        $r91 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r91);

        throw $r90;

     label132:
        return;

     label133:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many uids ");

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r64 = new android.os.ParcelFormatException;

        $r65 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r65);

        throw $r64;

     label134:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wakeup reasons ");

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i113);

        $r59 = new android.os.ParcelFormatException;

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r60);

        throw $r59;

     label135:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many kernel wake locks ");

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i111);

        $r54 = new android.os.ParcelFormatException;

        $r55 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r55);

        throw $r54;

     label136:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many screen-off rpm stats ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r49 = new android.os.ParcelFormatException;

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r50);

        throw $r49;

     label137:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many rpm stats ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r44 = new android.os.ParcelFormatException;

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r45);

        throw $r44;
    }

    public void recordDailyStatsIfNeededLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        long l0, $l1, $l3, $l4, $l6;
        byte $b2, $b5, $b7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline>;

        $b2 = l0 cmp $l1;

        if $b2 < 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsLocked()>();

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline>;

        $b7 = l0 cmp $l6;

        if $b7 < 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsLocked()>();

        goto label3;

     label2:
        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime>;

        $l4 = $l3 - 86400000L;

        $b5 = l0 cmp $l4;

        if $b5 >= 0 goto label3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsLocked()>();

     label3:
        return;
    }

    public void recordDailyStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3, $l7;
        com.android.internal.os.BatteryStatsImpl$3 r1;
        android.os.BatteryStats$DailyItem $r2;
        android.os.BatteryStats$LevelStepTracker $r3, $r4, $r5, $r6, $r14, $r15, $r16, $r18, $r19, $r20;
        int $i4, $i5, $i6, $i8, $i9;
        java.util.ArrayList $r7, $r8, $r12, r24;
        java.io.ByteArrayOutputStream $r9;
        java.nio.charset.Charset $r10;
        java.lang.String $r11;
        long[] $r17, $r21;
        java.lang.Throwable $r22;
        boolean z2;
        com.android.internal.util.FastXmlSerializer r26;
        android.os.Handler r27;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = new android.os.BatteryStats$DailyItem;

        specialinvoke $r2.<android.os.BatteryStats$DailyItem: void <init>()>();

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime>;

        $r2.<android.os.BatteryStats$DailyItem: long mStartTime> = $l2;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2.<android.os.BatteryStats$DailyItem: long mEndTime> = $l3;

        z2 = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        $i4 = $r3.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        if $i4 <= 0 goto label1;

        z2 = 1;

        $r18 = new android.os.BatteryStats$LevelStepTracker;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        $i9 = $r19.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        $r21 = $r20.<android.os.BatteryStats$LevelStepTracker: long[] mStepDurations>;

        specialinvoke $r18.<android.os.BatteryStats$LevelStepTracker: void <init>(int,long[])>($i9, $r21);

        $r2.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mDischargeSteps> = $r18;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        $i5 = $r4.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        if $i5 <= 0 goto label2;

        z2 = 1;

        $r14 = new android.os.BatteryStats$LevelStepTracker;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        $i8 = $r15.<android.os.BatteryStats$LevelStepTracker: int mNumStepDurations>;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        $r17 = $r16.<android.os.BatteryStats$LevelStepTracker: long[] mStepDurations>;

        specialinvoke $r14.<android.os.BatteryStats$LevelStepTracker: void <init>(int,long[])>($i8, $r17);

        $r2.<android.os.BatteryStats$DailyItem: android.os.BatteryStats$LevelStepTracker mChargeSteps> = $r14;

     label2:
        r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        if r24 == null goto label3;

        z2 = 1;

        $r2.<android.os.BatteryStats$DailyItem: java.util.ArrayList mPackageChanges> = r24;

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges> = null;

     label3:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        virtualinvoke $r5.<android.os.BatteryStats$LevelStepTracker: void init()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        virtualinvoke $r6.<android.os.BatteryStats$LevelStepTracker: void init()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDailyDeadlineLocked()>();

        if z2 == 0 goto label9;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label4:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        $i6 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i6 <= 10 goto label5;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyItems>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        goto label4;

     label5:
        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label6:
        r26 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r26.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r11 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r26.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r9, $r11);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeDailyItemsLocked(org.xmlpull.v1.XmlSerializer)>(r26);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r27 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        r1 = new com.android.internal.os.BatteryStatsImpl$3;

        $l7 = l1 - l0;

        specialinvoke r1.<com.android.internal.os.BatteryStatsImpl$3: void <init>(com.android.internal.os.BatteryStatsImpl,java.io.ByteArrayOutputStream,long)>(r0, $r9, $l7);

        virtualinvoke r27.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

     label7:
        goto label9;

     label8:
        $r22 := @caughtexception;

     label9:
        return;

        catch java.io.IOException from label6 to label7 with label8;
    }

    public void removeIsolatedUidLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i3;
        android.util.SparseIntArray $r1, $r5, $r7;
        com.android.internal.os.BatteryStatsImpl$UidToRemove $r2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3;
        java.util.Queue $r4;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        i1 = virtualinvoke $r1.<android.util.SparseIntArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        $i3 = virtualinvoke $r5.<android.util.SparseIntArray: int valueAt(int)>(i1);

        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i3);

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: void removeIsolatedUid(int)>(i0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        virtualinvoke $r7.<android.util.SparseIntArray: void removeAt(int)>(i1);

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $r2 = new com.android.internal.os.BatteryStatsImpl$UidToRemove;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l2 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$UidToRemove: void <init>(com.android.internal.os.BatteryStatsImpl,int,long)>(r0, i0, $l2);

        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void removeUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$UidToRemove $r5;
        com.android.internal.os.BatteryStatsImpl$Clocks $r6;
        java.util.Queue $r7;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void detachFromTimeBase()>();

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Queue mPendingRemovedUids>;

        $r5 = new com.android.internal.os.BatteryStatsImpl$UidToRemove;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$UidToRemove: void <init>(com.android.internal.os.BatteryStatsImpl,int,long)>(r0, i0, $l1);

        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void reportExcessiveCpuLocked(int, java.lang.String, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        int i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveCpuLocked(java.lang.String,long,long)>(r1, l0, l1);

     label1:
        return;
    }

    public void resetAllStatsCmdLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3;
        byte b4, $b5, $b10, $b11, $b12;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        android.os.BatteryStats$HistoryItem $r3, $r4, $r7, $r8, $r9, $r10;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r5, $r6;
        int $i6, $i7, $i8, $i9;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l1 = l0 * 1000L;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l2 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        l3 = 1000L * l2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b5 = $r3.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = $b5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        b4 = $r4.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = b4;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = b4;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = b4;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = b4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: void reset(long,long)>(l1, l3);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$TimeBase: void reset(long,long)>(l1, l3);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r7.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & 524288;

        if $i7 != 0 goto label4;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>($i8);

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b12 = $r10.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = $b12;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label3;

     label1:
        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>($i9);

        if $z1 == 0 goto label2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b11 = $r9.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = $b11;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label3;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b10 = $r8.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = $b10;

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze> = 0;

     label4:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initActiveHistoryEventsLocked(long,long)>(l2, l0);

        return;
    }

    public void scheduleRemoveIsolatedUidLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync r1;
        android.util.SparseIntArray $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        $i2 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if $i2 != i1 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleCpuSyncDueToRemovedUid(int)>(i0);

     label1:
        return;
    }

    public void setBatteryStateLocked(int, int, int, int, int, int, int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i5, $i8, $i14, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i44, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, i74, i75, i76, i77, $i78, $i79, $i85, i87, $i89, $i90, $i91, i93, $i94, $i97, $i101, i105, i106, i107, i108;
        long l4, l6, l7, $l30, $l53, l86, l92, $l95, $l96, $l98, $l99, $l100, $l102, $l103, l104;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, z17, z18, z19;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        android.os.BatteryStats$HistoryItem $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r22, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, r51, r52, r53, r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62;
        byte $b9, $b10, $b11, $b12, $b45, $b46, $b47, $b48, $b49, $b50, $b51, $b52, $b54, $b55, $b56, $b57, $b58, $b59, $b60, $b61, $b80, $b81, $b82, $b83, b84;
        short $s13, $s15, $s16, $s43, $s62, $s63;
        char $c17, $c18, $c41, $c64, $c65, $c88;
        android.os.BatteryStats$LevelStepTracker $r11, $r12, $r20, $r21;
        java.lang.Runnable $r13, $r15, $r18;
        android.os.Handler $r14, $r16, $r19;
        com.android.internal.os.BatteryStatsImpl$Constants $r17, $r35;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r23, $r24, $r25, $r26, $r27, $r46, $r47, $r48, $r49, $r50;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r36;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i74 := @parameter0: int;

        i75 := @parameter1: int;

        i76 := @parameter2: int;

        i0 := @parameter3: int;

        i77 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        l4 := @parameter8: long;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, i77);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z1 == 0 goto label01;

        r51 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        goto label02;

     label01:
        r51 = null;

     label02:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void reportChangesToStatsLog(android.os.BatteryStats$HistoryItem,int,int,int)>(r51, i74, i76, i0);

        z0 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean isOnBattery(int,int)>(i76, i74);

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l6 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l7 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z2 != 0 goto label05;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 1;

        $z15 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 != $z15 goto label04;

        if z0 == 0 goto label03;

        r52 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i72 = r52.<android.os.BatteryStats$HistoryItem: int states>;

        $i73 = $i72 & -524289;

        r52.<android.os.BatteryStats$HistoryItem: int states> = $i73;

        goto label04;

     label03:
        r53 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i70 = r53.<android.os.BatteryStats$HistoryItem: int states>;

        $i71 = $i70 | 524288;

        r53.<android.os.BatteryStats$HistoryItem: int states> = $i71;

     label04:
        r54 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i78 = r54.<android.os.BatteryStats$HistoryItem: int states2>;

        $i79 = $i78 | 16777216;

        r54.<android.os.BatteryStats$HistoryItem: int states2> = $i79;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b80 = (byte) i74;

        $b81 = (byte) $b80;

        $r55.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b81;

        $r56 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b82 = (byte) i0;

        $b83 = (byte) $b82;

        $r56.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b83;

        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r57.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh> = i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargingStateLevel> = i0;

        goto label09;

     label05:
        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        if $i8 != i0 goto label06;

        $z14 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z14 == z0 goto label09;

     label06:
        if i0 < 100 goto label07;

        if z0 == 0 goto label07;

        z16 = 1;

        goto label08;

     label07:
        z16 = 0;

     label08:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsIfNeededLocked(boolean)>(z16);

     label09:
        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        b84 = $r58.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if z0 == 0 goto label11;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i0;

        $z13 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z13 != 0 goto label10;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l7, l6, 1);

        goto label12;

     label10:
        goto label12;

     label11:
        if i0 >= 96 goto label12;

        if i74 == 1 goto label12;

        $z12 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z12 != 0 goto label12;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l7, l6, 1);

     label12:
        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = i0;

        $i85 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        if $i85 >= 0 goto label13;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = i0;

     label13:
        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 == $z3 goto label17;

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b54 = (byte) i0;

        $b55 = (byte) $b54;

        $r38.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b55;

        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b56 = (byte) i74;

        $b57 = (byte) $b56;

        $r39.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b57;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b58 = (byte) i75;

        $b59 = (byte) $b58;

        $r40.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b59;

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b60 = (byte) i76;

        $b61 = (byte) $b60;

        $r41.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b61;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s62 = (short) i5;

        $s63 = (short) $s62;

        $r42.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s63;

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c64 = (char) i1;

        $c65 = (char) $c64;

        $r43.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c65;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i66 = $r44.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        if i2 >= $i66 goto label16;

        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i67 = $r45.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        $i68 = $i67 - i2;

        l86 = (long) $i68;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r46.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l86);

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r47.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l86);

        $i69 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>($i69);

        if $z11 == 0 goto label14;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r50.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l86);

     label14:
        i87 = r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode>;

        if i87 != 1 goto label15;

        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r49.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l86);

        goto label16;

     label15:
        if i87 != 2 goto label16;

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r48.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l86);

     label16:
        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r59.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh> = i2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(long,long,boolean,int,int,int)>(l7, l6, z0, b84, i0, i2);

        goto label41;

     label17:
        z17 = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b9 = $r3.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b9 == i0 goto label18;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b51 = (byte) i0;

        $b52 = (byte) $b51;

        $r34.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b52;

        z17 = 1;

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $l53 = $r35.<com.android.internal.os.BatteryStatsImpl$Constants: long BATTERY_LEVEL_COLLECTION_DELAY_MS>;

        interfaceinvoke $r36.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: java.util.concurrent.Future scheduleSyncDueToBatteryLevelChange(long)>($l53);

     label18:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b10 = $r4.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b10 == i74 goto label19;

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b49 = (byte) i74;

        $b50 = (byte) $b49;

        $r33.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b50;

        z17 = 1;

     label19:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b11 = $r5.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        if $b11 == i75 goto label20;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b47 = (byte) i75;

        $b48 = (byte) $b47;

        $r32.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b48;

        z17 = 1;

     label20:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b12 = $r6.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b12 == i76 goto label21;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b45 = (byte) i76;

        $b46 = (byte) $b45;

        $r31.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b46;

        z17 = 1;

     label21:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s13 = $r7.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i14 = $s13 + 10;

        if i5 >= $i14 goto label22;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s43 = $r30.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i44 = $s43 - 10;

        if i5 > $i44 goto label23;

     label22:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s15 = (short) i5;

        $s16 = (short) $s15;

        $r8.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s16;

        z17 = 1;

     label23:
        $r60 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c88 = $r60.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i89 = $c88 + 20;

        if i1 > $i89 goto label24;

        z18 = z17;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c41 = $r29.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i42 = $c41 - 20;

        if i1 >= $i42 goto label25;

     label24:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c17 = (char) i1;

        $c18 = (char) $c17;

        $r9.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c18;

        z18 = 1;

     label25:
        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i90 = $r61.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        $i91 = $i90 + 10;

        if i2 >= $i91 goto label27;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i39 = $r28.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        $i40 = $i39 - 10;

        if i2 > $i40 goto label26;

        goto label27;

     label26:
        goto label31;

     label27:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i19 = $r10.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        if i2 >= $i19 goto label30;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i36 = $r22.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        $i37 = $i36 - i2;

        l92 = (long) $i37;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l92);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l92);

        $i38 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        $z10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>($i38);

        if $z10 == 0 goto label28;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l92);

     label28:
        i93 = r0.<com.android.internal.os.BatteryStatsImpl: int mDeviceIdleMode>;

        if i93 != 1 goto label29;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l92);

        goto label30;

     label29:
        if i93 != 2 goto label30;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l92);

        goto label30;

     label30:
        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r62.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh> = i2;

        z18 = 1;

     label31:
        $i94 = r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode>;

        $l95 = (long) $i94;

        $l96 = $l95 << 48;

        $i97 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        $l98 = (long) $i97;

        $l99 = $l98 << 56;

        $l100 = $l96 | $l99;

        $i101 = i0 & 255;

        $l102 = (long) $i101;

        $l103 = $l102 << 40;

        l104 = $l100 | $l103;

        if z0 == 0 goto label33;

        $z9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean setChargingLocked(boolean)>(0);

        z19 = z18 | $z9;

        i105 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel>;

        if i105 == i0 goto label32;

        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel>;

        if $i31 <= i0 goto label32;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        $i32 = i105 - i0;

        virtualinvoke $r20.<android.os.BatteryStats$LevelStepTracker: void addLevelSteps(int,long,long)>($i32, l104, l7);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        $i33 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel>;

        $i34 = $i33 - i0;

        virtualinvoke $r21.<android.os.BatteryStats$LevelStepTracker: void addLevelSteps(int,long,long)>($i34, l104, l7);

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel> = i0;

        $i35 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i35;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

     label32:
        goto label40;

     label33:
        if i0 < 90 goto label34;

        $z8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean setChargingLocked(boolean)>(1);

        z19 = z18 | $z8;

        goto label38;

     label34:
        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging>;

        if $z4 != 0 goto label37;

        i106 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        if i106 >= i0 goto label36;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging>;

        $z6 = virtualinvoke $r16.<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>($r15);

        if $z6 != 0 goto label35;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging>;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $i29 = $r17.<com.android.internal.os.BatteryStatsImpl$Constants: int BATTERY_CHARGED_DELAY_MS>;

        $l30 = (long) $i29;

        virtualinvoke $r19.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r18, $l30);

        z19 = z18;

        goto label38;

     label35:
        z19 = z18;

        goto label38;

     label36:
        z19 = z18;

        if i106 <= i0 goto label38;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging>;

        virtualinvoke $r14.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r13);

        z19 = z18;

        goto label38;

     label37:
        z19 = z18;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        if $i20 <= i0 goto label38;

        $z5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean setChargingLocked(boolean)>(0);

        z19 = z18 | $z5;

     label38:
        i107 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        if i107 == i0 goto label39;

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel>;

        if $i24 >= i0 goto label39;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        $i25 = i0 - i107;

        virtualinvoke $r11.<android.os.BatteryStats$LevelStepTracker: void addLevelSteps(int,long,long)>($i25, l104, l7);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        $i26 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        $i27 = i0 - $i26;

        virtualinvoke $r12.<android.os.BatteryStats$LevelStepTracker: void addLevelSteps(int,long,long)>($i27, l104, l7);

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel> = i0;

        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i28;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

     label39:
        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel> = i0;

     label40:
        if z19 == 0 goto label41;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l7, l6);

        goto label41;

     label41:
        if z0 != 0 goto label43;

        if i74 == 5 goto label42;

        if i74 != 1 goto label43;

     label42:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

     label43:
        i108 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity>;

        if i108 != -1 goto label44;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = i3;

        goto label45;

     label44:
        $i21 = staticinvoke <java.lang.Math: int min(int,int)>(i108, i3);

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity> = $i21;

     label45:
        $i22 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity>;

        $i23 = staticinvoke <java.lang.Math: int max(int,int)>($i22, i3);

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity> = $i23;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryTimeToFullSeconds> = l4;

        return;
    }

    public void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$BatteryCallback;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback> = r1;

        return;
    }

    boolean setChargingLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        java.lang.Runnable $r1;
        android.os.Handler $r2, $r3;
        int $i0, $i1, $i2, $i3;
        android.os.BatteryStats$HistoryItem r4, r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Runnable mDeferSetCharging>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging>;

        if $z1 == z0 goto label3;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging> = z0;

        if z0 == 0 goto label1;

        r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r4.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 | 16777216;

        r4.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        goto label2;

     label1:
        r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r5.<android.os.BatteryStats$HistoryItem: int states2>;

        $i1 = $i0 & -16777217;

        r5.<android.os.BatteryStats$HistoryItem: int states2> = $i1;

     label2:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

        return 1;

     label3:
        return 0;
    }

    public void setExternalStatsSyncLocked(com.android.internal.os.BatteryStatsImpl$ExternalStatsSync)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync> = r1;

        return;
    }

    public void setNoAutoReset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mNoAutoReset> = z0;

        return;
    }

    protected void setOnBatteryLocked(long, long, boolean, int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l5, l6, l8, l9, $l15, $l16, $l33;
        int i2, i3, i4, i7, $i12, $i13, $i14, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i31, $i32, $i34, $i35, $i36, $i37, $i38, i39, i40;
        android.os.Handler $r1, $r2, $r21;
        byte $b10, $b11, $b17, $b26, $b27;
        android.os.BatteryStats$HistoryItem $r3, $r10, r29, r30;
        android.os.BatteryStats$LevelStepTracker $r4, $r8, $r9, $r28;
        android.util.AtomicFile $r5, $r7;
        com.android.internal.os.BatteryStatsHistory $r6;
        boolean $z3, $z4, $z5, z8, z9, z10, $z11;
        double $d0, $d1, $d2, $d3;
        com.android.internal.os.BatteryStatsImpl$4 $r22;
        android.os.Message r23;
        java.lang.StringBuilder $r24;
        java.lang.String $r26;
        android.os.Parcel r27;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z8 := @parameter2: boolean;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        r23 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        i40 = (int) z8;

        r23.<android.os.Message: int arg1> = i40;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r23);

        l5 = l1 * 1000L;

        l6 = l0 * 1000L;

        i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if z8 == 0 goto label12;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mNoAutoReset>;

        if $z3 != 0 goto label05;

        if i2 == 5 goto label02;

        if i3 >= 90 goto label02;

        $i34 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        if $i34 >= 20 goto label01;

        if i3 < 80 goto label01;

        goto label02;

     label01:
        z9 = 0;

        z10 = 0;

        goto label06;

     label02:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resetting battery stats: level=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dischargeLevel=");

        $i35 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowAmount=");

        $i36 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" highAmount=");

        $i37 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r26);

        $i38 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        if $i38 < 20 goto label03;

        l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r27 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel,boolean)>(r27, 1);

        l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r21 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r22 = new com.android.internal.os.BatteryStatsImpl$4;

        $l33 = l9 - l8;

        specialinvoke $r22.<com.android.internal.os.BatteryStatsImpl$4: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Parcel,long)>(r0, r27, $l33);

        virtualinvoke $r21.<android.os.Handler: boolean post(java.lang.Runnable)>($r22);

        goto label03;

     label03:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        if i4 <= 0 goto label04;

        if i3 <= 0 goto label04;

        $i31 = i4 / 1000;

        $d2 = (double) $i31;

        $d0 = (double) i3;

        $d1 = $d0 / 100.0;

        $d3 = $d2 / $d1;

        $i32 = (int) $d3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = $i32;

     label04:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = i3;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r28.<android.os.BatteryStats$LevelStepTracker: void init()>();

        z10 = 1;

        z9 = 1;

        goto label06;

     label05:
        z9 = 0;

        z10 = 0;

     label06:
        $z11 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mCharging>;

        if $z11 == 0 goto label07;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean setChargingLocked(boolean)>(0);

     label07:
        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargingStateLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel> = i3;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r8.<android.os.BatteryStats$LevelStepTracker: void clearTime()>();

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        virtualinvoke $r9.<android.os.BatteryStats$LevelStepTracker: void clearTime()>();

        $i25 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i25;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b26 = (byte) i3;

        $b27 = (byte) $b26;

        $r10.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b27;

        r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i28 = r29.<android.os.BatteryStats$HistoryItem: int states>;

        $i29 = $i28 & -524289;

        r29.<android.os.BatteryStats$HistoryItem: int states> = $i29;

        if z9 == 0 goto label08;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l0, l1, z9);

        goto label08;

     label08:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        $z4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i7);

        if $z4 == 0 goto label09;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label11;

     label09:
        $z5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenDoze(int)>(i7);

        if $z5 == 0 goto label10;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label11;

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenDozeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = i3;

     label11:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,int,long,long)>(1, i7, l5, l6);

        goto label14;

     label12:
        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargingStateLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b10 = (byte) i3;

        $b11 = (byte) $b10;

        $r3.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b11;

        r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i12 = r30.<android.os.BatteryStats$HistoryItem: int states>;

        $i13 = $i12 | 524288;

        r30.<android.os.BatteryStats$HistoryItem: int states> = $i13;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        i39 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if i3 >= i39 goto label13;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        $i18 = i39 - i3;

        $i19 = $i18 - 1;

        $i21 = $i20 + $i19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i21;

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        $i22 = i39 - i3;

        $i24 = $i23 + $i22;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i24;

     label13:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(int,int)>(i7, i7);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,int,long,long)>(0, i7, l5, l6);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r4.<android.os.BatteryStats$LevelStepTracker: void init()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel> = i3;

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i14;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        z10 = 0;

     label14:
        if z10 != 0 goto label15;

        $l15 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        $l16 = $l15 + 60000L;

        $b17 = $l16 cmp l0;

        if $b17 >= 0 goto label16;

     label15:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        if $r5 == null goto label16;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        $r7 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()>();

        if $r7 == null goto label16;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label16:
        return;
    }

    public void setPowerProfileLocked(com.android.internal.os.PowerProfile)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.PowerProfile r1, $r3, $r4, $r7;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.internal.os.KernelCpuSpeedReader[] $r2, $r6;
        double $d0;
        com.android.internal.os.KernelCpuSpeedReader $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.PowerProfile;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile> = r1;

        i0 = virtualinvoke r1.<com.android.internal.os.PowerProfile: int getNumCpuClusters()>();

        $r2 = newarray (com.android.internal.os.KernelCpuSpeedReader)[i0];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders> = $r2;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        i1 = virtualinvoke $r4.<com.android.internal.os.PowerProfile: int getNumSpeedStepsInCpuCluster(int)>(i6);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders>;

        $r5 = new com.android.internal.os.KernelCpuSpeedReader;

        specialinvoke $r5.<com.android.internal.os.KernelCpuSpeedReader: void <init>(int,int)>(i5, i1);

        $r6[i6] = $r5;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $i4 = virtualinvoke $r7.<com.android.internal.os.PowerProfile: int getNumCoresInCpuCluster(int)>(i6);

        i5 = i5 + $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity>;

        if $i2 != -1 goto label3;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d0 = virtualinvoke $r3.<com.android.internal.os.PowerProfile: double getBatteryCapacity()>();

        $i3 = (int) $d0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity> = $i3;

     label3:
        return;
    }

    public void setPretendScreenOff(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPretendScreenOff>;

        if $z1 == z0 goto label3;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPretendScreenOff> = z0;

        if z0 == 0 goto label1;

        b0 = 1;

        goto label2;

     label1:
        b0 = 2;

     label2:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteScreenStateLocked(int)>(b0);

     label3:
        return;
    }

    public void setRadioScanningTimeoutLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setTimeout(long)>(l0);

     label1:
        return;
    }

    public void setRecordAllHistoryLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1, $z2;
        android.os.BatteryStats$HistoryEventTracker $r1, $r9, $r10, $r11;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3, $r12, $r13;
        java.util.Set $r4, $r14;
        java.lang.Object $r5, $r6, $r7, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, i6, i9;
        java.lang.String $r8, $r18;
        java.util.HashMap r19, r23;
        long l4, l5, l7, l8;
        java.util.Iterator r20, r24;
        java.util.Map$Entry r21, r25;
        android.util.SparseIntArray r22, r26;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory> = z0;

        if z0 != 0 goto label5;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        virtualinvoke $r9.<android.os.BatteryStats$HistoryEventTracker: void removeEvents(int)>(5);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        virtualinvoke $r10.<android.os.BatteryStats$HistoryEventTracker: void removeEvents(int)>(13);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r19 = virtualinvoke $r11.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(1);

        if r19 == null goto label4;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l4 = interfaceinvoke $r12.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l5 = interfaceinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r14 = virtualinvoke r19.<java.util.HashMap: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r15 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (android.util.SparseIntArray) $r16;

        i6 = 0;

     label2:
        $i2 = virtualinvoke r22.<android.util.SparseIntArray: int size()>();

        if i6 >= $i2 goto label3;

        $r17 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        $i3 = virtualinvoke r22.<android.util.SparseIntArray: int keyAt(int)>(i6);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l4, l5, 16385, $r18, $i3);

        i6 = i6 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        goto label9;

     label5:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r23 = virtualinvoke $r1.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(1);

        if r23 == null goto label9;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l7 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l8 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        $r4 = virtualinvoke r23.<java.util.HashMap: java.util.Set entrySet()>();

        r24 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r5 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        r26 = (android.util.SparseIntArray) $r6;

        i9 = 0;

     label7:
        $i0 = virtualinvoke r26.<android.util.SparseIntArray: int size()>();

        if i9 >= $i0 goto label8;

        $r7 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $i1 = virtualinvoke r26.<android.util.SparseIntArray: int keyAt(int)>(i9);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l7, l8, 32769, $r8, $i1);

        i9 = i9 + 1;

        goto label7;

     label8:
        goto label6;

     label9:
        return;
    }

    public void shutdownLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1, $r2;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l0 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordShutdownLocked(long,long)>($l0, $l1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown> = 1;

        return;
    }

    public boolean startAddingCpuLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$ExternalStatsSync $r1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ExternalStatsSync mExternalSync>;

        interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$ExternalStatsSync: void cancelCpuSyncDueToWakelockChange()>();

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        return $z0;
    }

    public boolean startIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        android.os.BatteryStats$HistoryTag r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.os.BatteryStatsHistory $r4;
        java.util.HashMap $r5, $r7, $r9;
        java.lang.String[] $r6, $r16;
        int[] $r8, $r17;
        java.util.Set $r10;
        boolean $z1;
        java.lang.Object $r11, $r12, $r13;
        java.lang.Integer $r14;
        java.lang.String $r15, $r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsHistory: boolean startIteratingHistory()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i1 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        $r6 = newarray (java.lang.String)[$i1];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings> = $r6;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i2 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        $r8 = newarray (int)[$i2];

        r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids> = $r8;

        r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars> = 0;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (android.os.BatteryStats$HistoryTag) $r12;

        $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $r15 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $r16[i0] = $r15;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i3 = r3.<android.os.BatteryStats$HistoryTag: int uid>;

        $r17[i0] = $i3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars>;

        $r18 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i5 = virtualinvoke $r18.<java.lang.String: int length()>();

        $i6 = $i5 + 1;

        $i7 = $i4 + $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars> = $i7;

        goto label1;

     label2:
        return 1;
    }

    public boolean startIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r3;
        android.os.Parcel $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = r1;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke $r3.<android.os.BatteryStats$HistoryItem: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        return 1;
    }

    void stopAllGpsSignalQualityTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        i2 = 0;

     label1:
        if i2 >= 2 goto label4;

        if i2 != i0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r3 = $r2[i2];

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r5 = $r4[i2];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    void stopAllPhoneSignalStrengthTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2, i3;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        i3 = 0;

     label1:
        $i2 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i3 >= $i2 goto label4;

        if i3 != i0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r3 = $r2[i3];

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r5 = $r4[i3];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    void stopAllWifiSignalStrengthTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Clocks $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l1 = interfaceinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        i2 = 0;

     label1:
        if i2 >= 5 goto label4;

        if i2 != i0 goto label2;

        goto label3;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r3 = $r2[i2];

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r5 = $r4[i2];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void systemServicesReady(android.content.Context)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.content.Context r1;
        com.android.internal.os.BatteryStatsImpl$Constants $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Constants: void startObserving(android.content.ContentResolver)>($r3);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void registerUsbStateReceiver(android.content.Context)>(r1);

        return;
    }

    public boolean trackPerProcStateCpuTimes()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Constants $r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $z0 = $r1.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPerProcStateCpuTimesAvailable>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void updateBluetoothStateLocked(android.bluetooth.BluetoothActivityEnergyInfo)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.bluetooth.BluetoothActivityEnergyInfo r1;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l25, $l27, $l30, $l32, $l33, $l35, $l38, $l39, $l41, $l42, $l43, $l44, $l45, l46, l47, l50, l51, l53, l55, l56, l61, l62, l63, l66, l67, l68, l70;
        double d0, $d1, $d2, $d3;
        boolean $z0, z1, z2;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2;
        com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache $r3, $r4, $r5, $r15, $r18, $r19, $r21, $r26, $r28;
        android.util.SparseArray $r6, $r34, $r42;
        byte $b9, $b10, $b11, $b12, $b13, $b23, $b24, $b26, $b28, $b29, $b40, $b69;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r7, $r9, $r12, $r16, r48, r54;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r8, $r11, $r13, $r17, $r24, $r25, $r31, $r33, $r39, $r41;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r10, $r23, $r30, $r32, $r40;
        com.android.internal.os.PowerProfile $r14;
        android.util.SparseLongArray $r20, $r22, $r27, $r29;
        int $i22, $i31, $i34, $i36, $i37, i48, i49, i52, i58, i59, i64, i65;
        java.lang.Object $r35, $r43;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r36, $r37, $r38, $r44, $r45;
        com.android.internal.os.BatteryStatsImpl$Uid r46, r47, r51, r53;
        android.bluetooth.UidTraffic[] r49;
        android.bluetooth.UidTraffic r50, r52;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.bluetooth.BluetoothActivityEnergyInfo;

        if r1 == null goto label28;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 != 0 goto label01;

        goto label28;

     label01:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l46 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $l3 = virtualinvoke r1.<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerRxTimeMillis()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $l4 = $r3.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: long rxTimeMs>;

        l0 = $l3 - $l4;

        $l5 = virtualinvoke r1.<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerTxTimeMillis()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $l6 = $r4.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: long txTimeMs>;

        l1 = $l5 - $l6;

        $l7 = virtualinvoke r1.<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerIdleTimeMillis()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $l8 = $r5.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: long idleTimeMs>;

        l2 = $l7 - $l8;

        l47 = 0L;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i48 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i49 = 0;

     label02:
        if i49 >= i48 goto label05;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r43 = virtualinvoke $r42.<android.util.SparseArray: java.lang.Object valueAt(int)>(i49);

        r46 = (com.android.internal.os.BatteryStatsImpl$Uid) $r43;

        $r44 = r46.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        if $r44 != null goto label03;

        goto label04;

     label03:
        $r45 = r46.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        $l43 = l46 * 1000L;

        $l44 = virtualinvoke $r45.<com.android.internal.os.BatteryStatsImpl$DualTimer: long getTimeSinceMarkLocked(long)>($l43);

        $l45 = $l44 / 1000L;

        l47 = l47 + $l45;

     label04:
        i49 = i49 + 1;

        goto label02;

     label05:
        $b9 = l47 cmp l0;

        if $b9 <= 0 goto label06;

        z1 = 1;

        goto label07;

     label06:
        z1 = 0;

     label07:
        $b10 = l47 cmp l1;

        if $b10 <= 0 goto label08;

        z2 = 1;

        goto label09;

     label08:
        z2 = 0;

     label09:
        l50 = l0;

        l51 = l1;

        i52 = 0;

     label10:
        if i52 >= i48 goto label15;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r35 = virtualinvoke $r34.<android.util.SparseArray: java.lang.Object valueAt(int)>(i52);

        r47 = (com.android.internal.os.BatteryStatsImpl$Uid) $r35;

        $r36 = r47.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        if $r36 != null goto label11;

        goto label14;

     label11:
        $r37 = r47.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        $l38 = l46 * 1000L;

        $l39 = virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$DualTimer: long getTimeSinceMarkLocked(long)>($l38);

        l53 = $l39 / 1000L;

        $b40 = l53 cmp 0L;

        if $b40 <= 0 goto label14;

        $r38 = r47.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        virtualinvoke $r38.<com.android.internal.os.BatteryStatsImpl$DualTimer: void setMark(long)>(l46);

        l55 = l53;

        if z1 == 0 goto label12;

        $l42 = l0 * l53;

        l55 = $l42 / l47;

     label12:
        if z2 == 0 goto label13;

        $l41 = l1 * l53;

        l53 = $l41 / l47;

        goto label13;

     label13:
        r48 = virtualinvoke r47.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateBluetoothControllerActivityLocked()>();

        $r39 = virtualinvoke r48.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l55);

        $r40 = virtualinvoke r48.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r41 = $r40[0];

        virtualinvoke $r41.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l53);

        l50 = l50 - l55;

        l51 = l51 - l53;

        goto label14;

     label14:
        i52 = i52 + 1;

        goto label10;

     label15:
        l56 = 0L;

        r49 = virtualinvoke r1.<android.bluetooth.BluetoothActivityEnergyInfo: android.bluetooth.UidTraffic[] getUidTraffic()>();

        if r49 == null goto label16;

        i58 = lengthof r49;

        goto label17;

     label16:
        i58 = 0;

     label17:
        i59 = 0;

        l61 = 0L;

     label18:
        if i59 >= i58 goto label19;

        r50 = r49[i59];

        $l30 = virtualinvoke r50.<android.bluetooth.UidTraffic: long getRxBytes()>();

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $r27 = $r26.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: android.util.SparseLongArray uidRxBytes>;

        $i31 = virtualinvoke r50.<android.bluetooth.UidTraffic: int getUid()>();

        $l32 = virtualinvoke $r27.<android.util.SparseLongArray: long get(int)>($i31);

        l62 = $l30 - $l32;

        $l33 = virtualinvoke r50.<android.bluetooth.UidTraffic: long getTxBytes()>();

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $r29 = $r28.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: android.util.SparseLongArray uidTxBytes>;

        $i34 = virtualinvoke r50.<android.bluetooth.UidTraffic: int getUid()>();

        $l35 = virtualinvoke $r29.<android.util.SparseLongArray: long get(int)>($i34);

        l63 = $l33 - $l35;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r31 = $r30[4];

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l62);

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r33 = $r32[5];

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l63);

        $i36 = virtualinvoke r50.<android.bluetooth.UidTraffic: int getUid()>();

        $i37 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i36);

        r51 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i37);

        virtualinvoke r51.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(4, l62, 0L);

        virtualinvoke r51.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(5, l63, 0L);

        l61 = l61 + l62;

        l56 = l56 + l63;

        i59 = i59 + 1;

        goto label18;

     label19:
        $b11 = l56 cmp 0L;

        if $b11 != 0 goto label21;

        $b29 = l61 cmp 0L;

        if $b29 == 0 goto label20;

        goto label21;

     label20:
        goto label26;

     label21:
        $b12 = l50 cmp 0L;

        if $b12 != 0 goto label22;

        $b28 = l51 cmp 0L;

        if $b28 == 0 goto label20;

     label22:
        i64 = 0;

     label23:
        if i64 >= i58 goto label26;

        r52 = r49[i64];

        i65 = virtualinvoke r52.<android.bluetooth.UidTraffic: int getUid()>();

        $l18 = virtualinvoke r52.<android.bluetooth.UidTraffic: long getRxBytes()>();

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $r20 = $r19.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: android.util.SparseLongArray uidRxBytes>;

        $l19 = virtualinvoke $r20.<android.util.SparseLongArray: long get(int)>(i65);

        l66 = $l18 - $l19;

        $l20 = virtualinvoke r52.<android.bluetooth.UidTraffic: long getTxBytes()>();

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $r22 = $r21.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: android.util.SparseLongArray uidTxBytes>;

        $l21 = virtualinvoke $r22.<android.util.SparseLongArray: long get(int)>(i65);

        l67 = $l20 - $l21;

        $i22 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i65);

        r53 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i22);

        r54 = virtualinvoke r53.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateBluetoothControllerActivityLocked()>();

        $b23 = l61 cmp 0L;

        if $b23 <= 0 goto label24;

        $b26 = l66 cmp 0L;

        if $b26 <= 0 goto label24;

        $l27 = l50 * l66;

        l68 = $l27 / l61;

        $r25 = virtualinvoke r54.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l68);

        goto label24;

     label24:
        $b69 = l56 cmp 0L;

        if $b69 <= 0 goto label25;

        $b24 = l67 cmp 0L;

        if $b24 <= 0 goto label25;

        $l25 = l51 * l67;

        l70 = $l25 / l56;

        $r23 = virtualinvoke r54.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r24 = $r23[0];

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l70);

     label25:
        i64 = i64 + 1;

        goto label23;

     label26:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l0);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        $r10 = virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r11 = $r10[0];

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l1);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        $r13 = virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getIdleTimeCounter()>();

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l2);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d1 = virtualinvoke $r14.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("bluetooth.controller.voltage");

        d0 = $d1 / 1000.0;

        $b13 = d0 cmpl 0.0;

        if $b13 == 0 goto label27;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        $r17 = virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getPowerCounter()>();

        $l14 = virtualinvoke r1.<android.bluetooth.BluetoothActivityEnergyInfo: long getControllerEnergyUsed()>();

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        $l15 = $r18.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: long energy>;

        $l16 = $l14 - $l15;

        $d2 = (double) $l16;

        $d3 = $d2 / d0;

        $l17 = (long) $d3;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l17);

        goto label27;

     label27:
        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache mLastBluetoothActivityInfo>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$BluetoothActivityInfoCache: void set(android.bluetooth.BluetoothActivityEnergyInfo)>(r1);

        return;

     label28:
        return;
    }

    public void updateClusterSpeedTimes(android.util.SparseLongArray, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseLongArray r1;
        boolean z0;
        long[][] r2;
        int i0, i1, $i2, $i3, $i5, $i9, $i10, $i11, i14, i16, i17, i19, i20, $i21, i22;
        com.android.internal.os.BatteryStatsImpl$Uid r3;
        com.android.internal.os.KernelCpuSpeedReader[] $r4, r26;
        byte $b4;
        com.android.internal.os.PowerProfile $r5;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] $r6, $r7, $r9, $r12, $r18, $r20, $r28;
        long[] $r8, $r14, $r22, $r23, $r24, $r25;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r10, $r11, $r19, r29;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r13, $r15, $r16;
        long $l6, $l7, $l8, $l12, l13, l15, l18;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r17;
        com.android.internal.os.KernelCpuSpeedReader $r21;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.util.SparseLongArray;

        z0 := @parameter1: boolean;

        l13 = 0L;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders>;

        $i2 = lengthof $r4;

        r2 = newarray (long[])[$i2];

        i14 = 0;

     label01:
        r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders>;

        $i3 = lengthof r26;

        if i14 >= $i3 goto label04;

        $r21 = r26[i14];

        $r22 = virtualinvoke $r21.<com.android.internal.os.KernelCpuSpeedReader: long[] readDelta()>();

        r2[i14] = $r22;

        l15 = l13;

        $r23 = r2[i14];

        if $r23 == null goto label03;

        $r24 = r2[i14];

        $i11 = lengthof $r24;

        i16 = $i11 - 1;

     label02:
        l15 = l13;

        if i16 < 0 goto label03;

        $r25 = r2[i14];

        $l12 = $r25[i16];

        l13 = l13 + $l12;

        i16 = i16 + -1;

        goto label02;

     label03:
        i14 = i14 + 1;

        l13 = l15;

        goto label01;

     label04:
        $b4 = l13 cmp 0L;

        if $b4 == 0 goto label16;

        i0 = virtualinvoke r1.<android.util.SparseLongArray: int size()>();

        i17 = 0;

     label05:
        if i17 >= i0 goto label15;

        $i5 = virtualinvoke r1.<android.util.SparseLongArray: int keyAt(int)>(i17);

        r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i5);

        l18 = virtualinvoke r1.<android.util.SparseLongArray: long valueAt(int)>(i17);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        i19 = virtualinvoke $r5.<com.android.internal.os.PowerProfile: int getNumCpuClusters()>();

        $r6 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        if $r6 == null goto label06;

        $r20 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $i10 = lengthof $r20;

        if $i10 == i19 goto label07;

     label06:
        $r7 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[])[i19];

        r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs> = $r7;

     label07:
        i20 = 0;

     label08:
        $i21 = lengthof r2;

        if i20 >= $i21 goto label14;

        $r8 = r2[i20];

        i1 = lengthof $r8;

        $r9 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r10 = $r9[i20];

        if $r10 == null goto label09;

        $r18 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r19 = $r18[i20];

        $i9 = lengthof $r19;

        if i1 == $i9 goto label10;

     label09:
        $r12 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $r11 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[i1];

        $r12[i20] = $r11;

     label10:
        $r28 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        r29 = $r28[i20];

        i22 = 0;

     label11:
        if i22 >= i1 goto label13;

        $r13 = r29[i22];

        if $r13 != null goto label12;

        $r16 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r16.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r17);

        r29[i22] = $r16;

     label12:
        $r15 = r29[i22];

        $r14 = r2[i20];

        $l6 = $r14[i22];

        $l7 = $l6 * l18;

        $l8 = $l7 / l13;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long,boolean)>($l8, z0);

        i22 = i22 + 1;

        goto label11;

     label13:
        i20 = i20 + 1;

        goto label08;

     label14:
        i17 = i17 + 1;

        goto label05;

     label15:
        goto label16;

     label16:
        return;
    }

    public void updateCpuTimeLocked(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        long[] $r1, $r22;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r2;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader $r3, $r7, $r21;
        android.util.SparseLongArray $r4, r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        com.android.internal.os.BatteryStatsImpl$Constants $r5, $r8;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader $r6;
        com.android.internal.os.KernelCpuSpeedReader[] $r9, $r10;
        com.android.internal.os.KernelCpuSpeedReader $r11;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader $r13;
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader $r14;
        java.util.ArrayList $r15, $r16, $r17, r24;
        java.lang.Object $r18;
        com.android.internal.os.BatteryStatsImpl$Uid $r19, $r20;
        com.android.internal.os.PowerProfile r23;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r26;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        if r23 != null goto label01;

        return;

     label01:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs>;

        if $r1 != null goto label02;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $r22 = virtualinvoke $r21.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: long[] readFreqs(com.android.internal.os.PowerProfile)>(r23);

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mCpuFreqs> = $r22;

     label02:
        r24 = null;

        if z1 == 0 goto label05;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $i9 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        i11 = $i9 - 1;

     label03:
        r24 = $r15;

        if i11 < 0 goto label05;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r26 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r18;

        $z5 = r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z5 == 0 goto label04;

        $r19 = r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if $r19 == null goto label04;

        $r20 = r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        $i10 = $r20.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i10 == 1000 goto label04;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r26);

     label04:
        i11 = i11 + -1;

        goto label03;

     label05:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void markPartialTimersAsEligible()>();

        r27 = null;

        if z0 != 0 goto label09;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader mCpuUidUserSysTimeReader>;

        virtualinvoke $r6.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(null);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        virtualinvoke $r7.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(null);

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads>;

        $i5 = $i4 + 2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads> = $i5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $z4 = $r8.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_ACTIVE_CLUSTER_TIME>;

        if $z4 == 0 goto label06;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader mCpuUidActiveTimeReader>;

        virtualinvoke $r13.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(null);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader mCpuUidClusterTimeReader>;

        virtualinvoke $r14.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void readDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(null);

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads>;

        $i8 = $i7 + 2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads> = $i8;

     label06:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders>;

        $i6 = lengthof $r9;

        i12 = $i6 - 1;

     label07:
        if i12 < 0 goto label08;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuSpeedReader[] mKernelCpuSpeedReaders>;

        $r11 = $r10[i12];

        virtualinvoke $r11.<com.android.internal.os.KernelCpuSpeedReader: long[] readDelta()>();

        i12 = i12 + -1;

        goto label07;

     label08:
        return;

     label09:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserInfoProvider>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$UserInfoProvider: void refreshUserIds()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader mCpuUidFreqTimeReader>;

        $z2 = virtualinvoke $r3.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader: boolean perClusterTimesAvailable()>();

        if $z2 == 0 goto label10;

        goto label11;

     label10:
        $r4 = new android.util.SparseLongArray;

        specialinvoke $r4.<android.util.SparseLongArray: void <init>()>();

        r27 = $r4;

     label11:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readKernelUidCpuTimesLocked(java.util.ArrayList,android.util.SparseLongArray,boolean)>(r24, r27, z0);

        if r27 == null goto label12;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateClusterSpeedTimes(android.util.SparseLongArray,boolean)>(r27, z0);

     label12:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readKernelUidCpuFreqTimesLocked(java.util.ArrayList,boolean,boolean)>(r24, z0, z1);

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads>;

        $i1 = $i0 + 2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads> = $i1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $z3 = $r5.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_ACTIVE_CLUSTER_TIME>;

        if $z3 == 0 goto label13;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readKernelUidCpuActiveTimesLocked(boolean)>(z0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readKernelUidCpuClusterTimesLocked(boolean)>(z0);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads>;

        $i3 = $i2 + 2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumAllUidCpuTimeReads> = $i3;

     label13:
        return;
    }

    public void updateDailyDeadlineLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l3, $l4;
        java.util.Calendar r1;
        int $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime> = l0;

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6);

        $i2 = $i1 + 1;

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(6, $i2);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 1);

        $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline> = $l3;

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 3);

        $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline> = $l4;

        return;
    }

    void updateDischargeScreenLevelsLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateOldDischargeScreenLevelLocked(int)>(i0);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNewDischargeScreenLevelLocked(int)>(i1);

        return;
    }

    public void updateKernelMemoryBandwidthLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.LongSparseLongArray r1;
        int i0, i1, i5;
        com.android.internal.os.KernelMemoryBandwidthStats $r2, $r3;
        android.util.LongSparseArray $r4, $r8, $r9;
        long $l2, $l3, $l4;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r5, r11;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;
        com.android.internal.os.BatteryStatsImpl$Clocks $r7;
        java.lang.Object $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats>;

        virtualinvoke $r2.<com.android.internal.os.KernelMemoryBandwidthStats: void updateStats()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelMemoryBandwidthStats mKernelMemoryBandwidthStats>;

        r1 = virtualinvoke $r3.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray getBandwidthEntries()>();

        i0 = virtualinvoke r1.<android.util.LongSparseLongArray: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label4;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $l2 = virtualinvoke r1.<android.util.LongSparseLongArray: long keyAt(int)>(i5);

        i1 = virtualinvoke $r4.<android.util.LongSparseArray: int indexOfKey(long)>($l2);

        if i1 < 0 goto label2;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r10 = virtualinvoke $r9.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i1);

        r11 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r10;

        goto label3;

     label2:
        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r7, $r6);

        r11 = $r5;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $l3 = virtualinvoke r1.<android.util.LongSparseLongArray: long keyAt(int)>(i5);

        virtualinvoke $r8.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l3, $r5);

     label3:
        $l4 = virtualinvoke r1.<android.util.LongSparseLongArray: long valueAt(int)>(i5);

        virtualinvoke r11.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l4, 1);

        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    public void updateKernelWakelocksLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.KernelWakelockStats r1, $r5;
        java.util.Iterator r2, r31;
        java.lang.String r3, $r14;
        com.android.internal.os.KernelWakelockStats$Entry r4;
        com.android.internal.os.KernelWakelockReader $r6;
        java.util.Set $r7, $r9;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r8, $r10, $r21, $r26;
        int $i0, $i1, $i4, $i5, $i6, $i8, i10, i11;
        java.lang.StringBuilder $r11;
        java.lang.Object $r15, $r17, $r18, $r19, $r20, $r22;
        java.util.Map$Entry $r16, r28;
        long $l7;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r23, r29, r30, r32;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r24;
        com.android.internal.os.BatteryStatsImpl$Clocks $r25;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockReader mKernelWakelockReader>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelWakelockStats mTmpWakelockStats>;

        r1 = virtualinvoke $r6.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats readKernelWakelockStats(com.android.internal.os.KernelWakelockStats)>($r5);

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Couldn\'t get kernel wake lock stats");

        return;

     label1:
        $r7 = virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r19;

        $r20 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.internal.os.KernelWakelockStats$Entry) $r20;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r29 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r22;

        r30 = r29;

        if r29 != null goto label3;

        $r23 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r23.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$TimeBase)>($r25, $r24);

        r30 = $r23;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r23);

     label3:
        $l7 = r4.<com.android.internal.os.KernelWakelockStats$Entry: long mTotalTime>;

        $i6 = r4.<com.android.internal.os.KernelWakelockStats$Entry: int mCount>;

        virtualinvoke r30.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l7, $i6);

        $i8 = r4.<com.android.internal.os.KernelWakelockStats$Entry: int mVersion>;

        virtualinvoke r30.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setUpdateVersion(int)>($i8);

        goto label2;

     label4:
        i10 = 0;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.util.Set entrySet()>();

        r31 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r15 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        r32 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r17;

        i11 = i10;

        $i4 = virtualinvoke r32.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>();

        $i5 = r1.<com.android.internal.os.KernelWakelockStats: int kernelWakelockVersion>;

        if $i4 == $i5 goto label6;

        virtualinvoke r32.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void endSample()>();

        i11 = i10 + 1;

     label6:
        i10 = i11;

        goto label5;

     label7:
        $z2 = virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: boolean isEmpty()>();

        if $z2 == 0 goto label8;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", "All kernel wakelocks had time of zero");

     label8:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i0 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if i10 != $i0 goto label9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All kernel wakelocks were set stale. new version=");

        $i1 = r1.<com.android.internal.os.KernelWakelockStats: int kernelWakelockVersion>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r14);

     label9:
        return;
    }

    public void updateMobileRadioState(android.telephony.ModemActivityInfo)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21;
        int i0, i1, $i5, $i6, $i16, $i24, $i29, $i40, $i42, $i44, $i47, $i48, $i49, $i50, $i51, $i52, $i57, $i58, i60, i61, i68, i69, i71, i84;
        com.android.internal.os.BatteryStatsImpl$Uid r1, r118;
        java.lang.String[] $r2;
        byte $b2, $b3, $b4, $b9, $b11, $b14, $b19, $b21, $b39, $b46, $b83;
        android.util.Pools$Pool $r3, $r47, $r48, $r53;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r4, $r5, $r10, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r31, $r34, $r43;
        long $l7, $l8, $l10, $l12, $l13, $l15, $l17, $l18, $l20, $l22, $l23, $l25, $l26, $l27, $l28, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l41, $l43, $l45, $l53, $l54, $l55, $l56, $l59, l62, l63, $l64, l65, l66, l67, l70, l73, l74, l75, l76, l77, l78, l80, l81, l82, l85, l86, l87;
        java.util.List $r6, $r44, r80;
        java.lang.Object $r7, $r38, $r45, $r50, r67;
        android.telephony.ModemActivityInfo$TransmitPower $r8, $r39, $r46;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r9, $r12, $r14, $r16, $r18, $r42;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r20, $r22, $r24, $r30, $r33, $r41, r124;
        com.android.internal.os.PowerProfile $r26, $r27, $r28, $r29, $r40;
        com.android.internal.os.RailStats $r32, $r37;
        com.android.internal.os.BatteryStatsImpl$Clocks $r35, $r36, $r92;
        android.net.NetworkStats $r49, $r51, $r52, r66, r68;
        java.lang.Throwable $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, r69, r91;
        android.telephony.ModemActivityInfo r63, r65;
        android.os.BatteryStats$HistoryItem r87;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r93, $r94;
        android.net.NetworkStats$Entry r95;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r63 := @parameter0: android.telephony.ModemActivityInfo;

        r65 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: android.telephony.ModemActivityInfo getDeltaModemActivityInfo(android.telephony.ModemActivityInfo)>(r63);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addModemTxPowerToHistory(android.telephony.ModemActivityInfo)>(r65);

        r66 = null;

        r67 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mModemNetworkLock>;

        entermonitor r67;

     label001:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mModemIfaces>;

        r68 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats readNetworkStatsLocked(java.lang.String[])>($r2);

     label002:
        if r68 == null goto label006;

     label003:
        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats>;

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        $r50 = interfaceinvoke $r48.<android.util.Pools$Pool: java.lang.Object acquire()>();

        $r51 = (android.net.NetworkStats) $r50;

        r66 = staticinvoke <android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats$NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>(r68, $r49, null, null, $r51);

        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats>;

        interfaceinvoke $r53.<android.util.Pools$Pool: boolean release(java.lang.Object)>($r52);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastModemNetworkStats> = r68;

     label004:
        goto label006;

     label005:
        $r57 := @caughtexception;

        r69 = $r57;

        goto label112;

     label006:
        exitmonitor r67;

     label007:
        entermonitor r0;

     label008:
        z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

     label009:
        if z0 != 0 goto label013;

        if r66 == null goto label011;

     label010:
        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        interfaceinvoke $r47.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r66);

     label011:
        exitmonitor r0;

     label012:
        return;

     label013:
        if r65 == null goto label041;

     label014:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting> = 1;

     label015:
        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r21 = virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getIdleTimeCounter()>();

        $i40 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getIdleTimeMillis()>();

        $l41 = (long) $i40;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l41);

     label016:
        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r23 = virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getSleepTimeCounter()>();

        $i42 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getSleepTimeMillis()>();

        $l43 = (long) $i42;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l43);

     label017:
        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r25 = virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        $i44 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>();

        $l45 = (long) $i44;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l45);

     label018:
        i60 = 0;

     label019:
        if i60 >= 5 goto label022;

     label020:
        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r42 = virtualinvoke $r41.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r43 = $r42[i60];

        $r44 = virtualinvoke r65.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

        $r45 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(i60);

        $r46 = (android.telephony.ModemActivityInfo$TransmitPower) $r45;

        $i58 = virtualinvoke $r46.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        $l59 = (long) $i58;

        virtualinvoke $r43.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l59);

     label021:
        i60 = i60 + 1;

        goto label019;

     label022:
        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d1 = virtualinvoke $r26.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("modem.controller.voltage");

        d0 = $d1 / 1000.0;

     label023:
        $b46 = d0 cmpl 0.0;

        if $b46 == 0 goto label038;

     label024:
        $i47 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getSleepTimeMillis()>();

        $d2 = (double) $i47;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d3 = virtualinvoke $r27.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("modem.controller.sleep");

        $d4 = $d2 * $d3;

        $i48 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getIdleTimeMillis()>();

        $d5 = (double) $i48;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d6 = virtualinvoke $r28.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("modem.controller.idle");

        $d7 = $d5 * $d6;

        $d8 = $d4 + $d7;

        $i49 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>();

        $d9 = (double) $i49;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d10 = virtualinvoke $r29.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("modem.controller.rx");

        $d11 = $d9 * $d10;

        d21 = $d8 + $d11;

     label025:
        r80 = virtualinvoke r65.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

     label026:
        i61 = 0;

     label027:
        $i50 = interfaceinvoke r80.<java.util.List: int size()>();

        $i51 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        $i52 = staticinvoke <java.lang.Math: int min(int,int)>($i50, $i51);

        if i61 >= $i52 goto label030;

     label028:
        $r38 = interfaceinvoke r80.<java.util.List: java.lang.Object get(int)>(i61);

        $r39 = (android.telephony.ModemActivityInfo$TransmitPower) $r38;

        $i57 = virtualinvoke $r39.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

        $d18 = (double) $i57;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d19 = virtualinvoke $r40.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>("modem.controller.tx", i61);

        $d20 = $d18 * $d19;

        d21 = d21 + $d20;

     label029:
        i61 = i61 + 1;

        goto label027;

     label030:
        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r31 = virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getPowerCounter()>();

        $l53 = (long) d21;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l53);

     label031:
        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        $l54 = virtualinvoke $r32.<com.android.internal.os.RailStats: long getCellularTotalEnergyUseduWs()>();

        $d12 = (double) $l54;

        $d13 = $d12 / d0;

        l62 = (long) $d13;

     label032:
        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        $r34 = virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getMonitoredRailChargeConsumedMaMs()>();

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l62);

     label033:
        r87 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

     label034:
        $d16 = r87.<android.os.BatteryStats$HistoryItem: double modemRailChargeMah>;

        $d14 = (double) l62;

        $d15 = $d14 / 3600000.0;

        $d17 = $d16 + $d15;

        r87.<android.os.BatteryStats$HistoryItem: double modemRailChargeMah> = $d17;

     label035:
        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l55 = interfaceinvoke $r35.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l56 = interfaceinvoke $r36.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>($l55, $l56);

     label036:
        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        virtualinvoke $r37.<com.android.internal.os.RailStats: void resetCellularTotalEnergyUsed()>();

     label037:
        goto label041;

     label038:
        goto label041;

     label039:
        $r54 := @caughtexception;

        r91 = $r54;

     label040:
        goto label108;

     label041:
        $r92 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l63 = interfaceinvoke $r92.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r93 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        $l64 = 1000L * l63;

        l65 = virtualinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTimeSinceMarkLocked(long)>($l64);

        $r94 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r94.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setMark(long)>(l63);

     label042:
        l66 = 0L;

        l67 = 0L;

        if r66 == null goto label105;

     label043:
        r95 = new android.net.NetworkStats$Entry;

        specialinvoke r95.<android.net.NetworkStats$Entry: void <init>()>();

        i0 = virtualinvoke r66.<android.net.NetworkStats: int size()>();

     label044:
        i68 = 0;

     label045:
        if i68 >= i0 goto label065;

     label046:
        r95 = virtualinvoke r66.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i68, r95);

     label047:
        $l20 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        $b21 = $l20 cmp 0L;

        if $b21 != 0 goto label050;

     label048:
        $l38 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        $b39 = $l38 cmp 0L;

        if $b39 != 0 goto label050;

     label049:
        goto label063;

     label050:
        $l22 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        l66 = l66 + $l22;

     label051:
        $l23 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        l67 = l67 + $l23;

     label052:
        i69 = r95.<android.net.NetworkStats$Entry: int uid>;

     label053:
        $i24 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i69);

        r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i24);

     label054:
        $l26 = r95.<android.net.NetworkStats$Entry: long rxBytes>;

        $l25 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(0, $l26, $l25);

     label055:
        $l28 = r95.<android.net.NetworkStats$Entry: long txBytes>;

        $l27 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(1, $l28, $l27);

     label056:
        $i29 = r95.<android.net.NetworkStats$Entry: int set>;

        if $i29 != 0 goto label059;

     label057:
        $l35 = r95.<android.net.NetworkStats$Entry: long rxBytes>;

        $l34 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(6, $l35, $l34);

     label058:
        $l37 = r95.<android.net.NetworkStats$Entry: long txBytes>;

        $l36 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(7, $l37, $l36);

     label059:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r13 = $r12[0];

        $l30 = r95.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l30);

     label060:
        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r15 = $r14[1];

        $l31 = r95.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l31);

     label061:
        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r17 = $r16[0];

        $l32 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l32);

     label062:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r19 = $r18[1];

        $l33 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l33);

     label063:
        i68 = i68 + 1;

        goto label045;

     label064:
        $r55 := @caughtexception;

        r91 = $r55;

        goto label040;

     label065:
        l70 = l66 + l67;

        $b2 = l70 cmp 0L;

        if $b2 <= 0 goto label100;

        i71 = 0;

        l73 = l67;

        l74 = l65;

        l75 = l70;

     label066:
        if i71 >= i0 goto label099;

     label067:
        r95 = virtualinvoke r66.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i71, r95);

     label068:
        l76 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

     label069:
        $b4 = l76 cmp 0L;

        if $b4 != 0 goto label072;

     label070:
        l77 = r95.<android.net.NetworkStats$Entry: long txPackets>;

     label071:
        $b19 = l77 cmp 0L;

        if $b19 != 0 goto label072;

        goto label097;

     label072:
        $i5 = r95.<android.net.NetworkStats$Entry: int uid>;

        $i6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i5);

        r118 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

     label073:
        l78 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

     label074:
        $l7 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        l80 = l78 + $l7;

     label075:
        $l8 = l74 * l80;

        l81 = $l8 / l75;

     label076:
        virtualinvoke r118.<com.android.internal.os.BatteryStatsImpl$Uid: void noteMobileRadioActiveTimeLocked(long)>(l81);

     label077:
        l74 = l74 - l81;

        l75 = l75 - l80;

        if r65 == null goto label097;

     label078:
        r124 = virtualinvoke r118.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateModemControllerActivityLocked()>();

     label079:
        $b9 = l66 cmp 0L;

        if $b9 <= 0 goto label085;

     label080:
        $l13 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        $b14 = $l13 cmp 0L;

        if $b14 <= 0 goto label084;

     label081:
        $l15 = r95.<android.net.NetworkStats$Entry: long rxPackets>;

        $i16 = virtualinvoke r65.<android.telephony.ModemActivityInfo: int getReceiveTimeMillis()>();

        $l17 = (long) $i16;

        $l18 = $l15 * $l17;

        l82 = $l18 / l66;

     label082:
        $r11 = virtualinvoke r124.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l82);

     label083:
        goto label085;

     label084:
        goto label085;

     label085:
        $b83 = l73 cmp 0L;

        if $b83 <= 0 goto label096;

     label086:
        $l10 = r95.<android.net.NetworkStats$Entry: long txPackets>;

        $b11 = $l10 cmp 0L;

        if $b11 <= 0 goto label096;

     label087:
        i84 = 0;

     label088:
        if i84 >= 5 goto label095;

     label089:
        l85 = r95.<android.net.NetworkStats$Entry: long txPackets>;

     label090:
        $r6 = virtualinvoke r65.<android.telephony.ModemActivityInfo: java.util.List getTransmitPowerInfo()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i84);

        $r8 = (android.telephony.ModemActivityInfo$TransmitPower) $r7;

        i1 = virtualinvoke $r8.<android.telephony.ModemActivityInfo$TransmitPower: int getTimeInMillis()>();

     label091:
        l86 = (long) i1;

     label092:
        $l12 = l85 * l86;

        l87 = $l12 / l73;

        $r9 = virtualinvoke r124.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r10 = $r9[i84];

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l87);

     label093:
        i84 = i84 + 1;

        goto label088;

     label094:
        $r61 := @caughtexception;

        r91 = $r61;

        goto label108;

     label095:
        goto label097;

     label096:
        goto label097;

     label097:
        i71 = i71 + 1;

        goto label066;

     label098:
        $r58 := @caughtexception;

        r91 = $r58;

        goto label108;

     label099:
        l65 = l74;

        goto label100;

     label100:
        $b3 = l65 cmp 0L;

        if $b3 <= 0 goto label103;

     label101:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l65);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(1L);

     label102:
        goto label103;

     label103:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        interfaceinvoke $r3.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r66);

     label104:
        goto label105;

     label105:
        exitmonitor r0;

     label106:
        return;

     label107:
        $r56 := @caughtexception;

        r91 = $r56;

     label108:
        exitmonitor r0;

     label109:
        throw r91;

     label110:
        $r60 := @caughtexception;

        r91 = $r60;

        goto label108;

     label111:
        $r59 := @caughtexception;

        r69 = $r59;

     label112:
        exitmonitor r67;

     label113:
        throw r69;

     label114:
        $r62 := @caughtexception;

        r69 = $r62;

        goto label112;

        catch java.lang.Throwable from label001 to label002 with label111;
        catch java.lang.Throwable from label003 to label004 with label005;
        catch java.lang.Throwable from label006 to label007 with label111;
        catch java.lang.Throwable from label008 to label009 with label107;
        catch java.lang.Throwable from label010 to label011 with label039;
        catch java.lang.Throwable from label011 to label012 with label039;
        catch java.lang.Throwable from label014 to label015 with label039;
        catch java.lang.Throwable from label015 to label016 with label039;
        catch java.lang.Throwable from label016 to label017 with label039;
        catch java.lang.Throwable from label017 to label018 with label039;
        catch java.lang.Throwable from label020 to label021 with label039;
        catch java.lang.Throwable from label022 to label023 with label039;
        catch java.lang.Throwable from label024 to label025 with label039;
        catch java.lang.Throwable from label025 to label026 with label039;
        catch java.lang.Throwable from label027 to label028 with label039;
        catch java.lang.Throwable from label028 to label029 with label039;
        catch java.lang.Throwable from label030 to label031 with label039;
        catch java.lang.Throwable from label031 to label032 with label039;
        catch java.lang.Throwable from label032 to label033 with label039;
        catch java.lang.Throwable from label033 to label034 with label039;
        catch java.lang.Throwable from label034 to label035 with label039;
        catch java.lang.Throwable from label035 to label036 with label039;
        catch java.lang.Throwable from label036 to label037 with label039;
        catch java.lang.Throwable from label041 to label042 with label107;
        catch java.lang.Throwable from label043 to label044 with label107;
        catch java.lang.Throwable from label046 to label047 with label039;
        catch java.lang.Throwable from label047 to label048 with label064;
        catch java.lang.Throwable from label048 to label049 with label064;
        catch java.lang.Throwable from label050 to label051 with label064;
        catch java.lang.Throwable from label051 to label052 with label064;
        catch java.lang.Throwable from label052 to label053 with label064;
        catch java.lang.Throwable from label053 to label054 with label039;
        catch java.lang.Throwable from label054 to label055 with label039;
        catch java.lang.Throwable from label055 to label056 with label039;
        catch java.lang.Throwable from label056 to label057 with label039;
        catch java.lang.Throwable from label057 to label058 with label039;
        catch java.lang.Throwable from label058 to label059 with label039;
        catch java.lang.Throwable from label059 to label060 with label039;
        catch java.lang.Throwable from label060 to label061 with label039;
        catch java.lang.Throwable from label061 to label062 with label039;
        catch java.lang.Throwable from label062 to label063 with label039;
        catch java.lang.Throwable from label067 to label068 with label098;
        catch java.lang.Throwable from label068 to label069 with label098;
        catch java.lang.Throwable from label070 to label071 with label039;
        catch java.lang.Throwable from label072 to label073 with label098;
        catch java.lang.Throwable from label073 to label074 with label098;
        catch java.lang.Throwable from label074 to label075 with label098;
        catch java.lang.Throwable from label075 to label076 with label098;
        catch java.lang.Throwable from label076 to label077 with label098;
        catch java.lang.Throwable from label078 to label079 with label098;
        catch java.lang.Throwable from label080 to label081 with label064;
        catch java.lang.Throwable from label081 to label082 with label064;
        catch java.lang.Throwable from label082 to label083 with label064;
        catch java.lang.Throwable from label086 to label087 with label098;
        catch java.lang.Throwable from label089 to label090 with label098;
        catch java.lang.Throwable from label090 to label091 with label098;
        catch java.lang.Throwable from label092 to label093 with label094;
        catch java.lang.Throwable from label101 to label102 with label110;
        catch java.lang.Throwable from label103 to label104 with label110;
        catch java.lang.Throwable from label105 to label106 with label110;
        catch java.lang.Throwable from label108 to label109 with label110;
        catch java.lang.Throwable from label112 to label113 with label114;
    }

    public void updateProcStateCpuTimes(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, $z2, $z3, $z4;
        android.util.SparseIntArray r1, $r4, $r5, $r6, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        com.android.internal.os.BatteryStatsImpl$Constants $r3;
        android.util.IntArray $r7, $r8, $r12;
        com.android.internal.os.KernelSingleUidTimeReader $r9, $r10;
        long[] $r11, r19, r20;
        java.lang.Throwable $r14, $r15, $r16;
        int[] r17, r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Constants mConstants>;

        $z2 = $r3.<com.android.internal.os.BatteryStatsImpl$Constants: boolean TRACK_CPU_TIMES_BY_PROC_STATE>;

        if $z2 != 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        $z3 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean initKernelSingleUidTimeReaderLocked()>();

        if $z3 != 0 goto label05;

        exitmonitor r0;

     label04:
        return;

     label05:
        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIsPerProcessStateCpuDataStale>;

        if $z4 == 0 goto label07;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        virtualinvoke $r13.<android.util.SparseIntArray: void clear()>();

        exitmonitor r0;

     label06:
        return;

     label07:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        $i2 = virtualinvoke $r4.<android.util.SparseIntArray: int size()>();

        if $i2 != 0 goto label09;

        exitmonitor r0;

     label08:
        return;

     label09:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        r1 = virtualinvoke $r5.<android.util.SparseIntArray: android.util.SparseIntArray clone()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mPendingUids>;

        virtualinvoke $r6.<android.util.SparseIntArray: void clear()>();

        exitmonitor r0;

     label10:
        $i3 = virtualinvoke r1.<android.util.SparseIntArray: int size()>();

        i8 = $i3 - 1;

     label11:
        if i8 < 0 goto label35;

        i0 = virtualinvoke r1.<android.util.SparseIntArray: int keyAt(int)>(i8);

        i1 = virtualinvoke r1.<android.util.SparseIntArray: int valueAt(int)>(i8);

        entermonitor r0;

     label12:
        r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getAvailableUidStatsLocked(int)>(i0);

     label13:
        if r2 != null goto label16;

     label14:
        exitmonitor r0;

     label15:
        goto label31;

     label16:
        $r7 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.IntArray mChildUids>;

        if $r7 != null goto label18;

     label17:
        r17 = null;

        goto label22;

     label18:
        $r8 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.IntArray mChildUids>;

        r18 = virtualinvoke $r8.<android.util.IntArray: int[] toArray()>();

        $i4 = lengthof r18;

        i9 = $i4 - 1;

     label19:
        r17 = r18;

        if i9 < 0 goto label22;

     label20:
        $r12 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.IntArray mChildUids>;

        $i7 = virtualinvoke $r12.<android.util.IntArray: int get(int)>(i9);

        r18[i9] = $i7;

     label21:
        i9 = i9 + -1;

        goto label19;

     label22:
        exitmonitor r0;

     label23:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        r19 = virtualinvoke $r9.<com.android.internal.os.KernelSingleUidTimeReader: long[] readDeltaMs(int)>(i0);

        r20 = r19;

        if r17 == null goto label25;

        $i5 = lengthof r17;

        i10 = $i5 - 1;

     label24:
        r20 = r19;

        if i10 < 0 goto label25;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.KernelSingleUidTimeReader mKernelSingleUidTimeReader>;

        $i6 = r17[i10];

        $r11 = virtualinvoke $r10.<com.android.internal.os.KernelSingleUidTimeReader: long[] readDeltaMs(int)>($i6);

        r19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long[] addCpuTimes(long[],long[])>(r19, $r11);

        i10 = i10 + -1;

        goto label24;

     label25:
        if z0 == 0 goto label31;

        if r20 == null goto label31;

        entermonitor r0;

     label26:
        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: void access$200(com.android.internal.os.BatteryStatsImpl$Uid,int,long[],boolean)>(r2, i1, r20, z0);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: void access$300(com.android.internal.os.BatteryStatsImpl$Uid,int,long[],boolean)>(r2, i1, r20, z1);

        exitmonitor r0;

     label27:
        goto label31;

     label28:
        $r15 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        throw $r15;

     label31:
        i8 = i8 + -1;

        goto label11;

     label32:
        $r16 := @caughtexception;

     label33:
        exitmonitor r0;

     label34:
        throw $r16;

     label35:
        return;

     label36:
        $r14 := @caughtexception;

     label37:
        exitmonitor r0;

     label38:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.lang.Throwable from label07 to label08 with label36;
        catch java.lang.Throwable from label09 to label10 with label36;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label18 to label19 with label32;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    public void updateRailStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback $r1, $r4;
        com.android.internal.os.RailStats $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        $z0 = virtualinvoke $r2.<com.android.internal.os.RailStats: boolean isRailStatsAvailable()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback mRailEnergyDataCallback>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback: void fillRailDataStats(com.android.internal.os.RailStats)>($r3);

        return;

     label2:
        return;
    }

    public void updateRpmStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback $r1, $r50;
        long $l0, $l1, $l3, $l4, $l5, l6, l7, l9, l11;
        byte $b2;
        com.android.internal.os.RpmStats $r2, $r5, $r49;
        java.util.Map $r3, $r6, $r12, $r35;
        java.util.Set $r4, $r7, $r13, $r36;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9, $r10, $r14, $r18, $r21, $r23, $r26, $r27, $r28, $r30, $r33, $r37, $r41, $r44, $r46;
        com.android.internal.os.RpmStats$PowerStateSubsystem $r11;
        java.lang.StringBuilder $r15, $r38;
        java.lang.String $r19, $r42, r53, r57, r60, r64;
        com.android.internal.os.RpmStats$PowerStateElement $r22, $r24, $r45, $r47;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r25, $r32, $r48;
        com.android.internal.os.RpmStats$PowerStatePlatformSleepState $r29, $r31, $r34;
        java.util.Iterator r51, r54, r58, r61;
        java.util.Map$Entry r52, r55, r59, r62;
        int i8, i10, i12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback>;

        if $r1 != null goto label01;

        return;

     label01:
        l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastRpmStatsUpdateTimeMs>;

        $l1 = l6 - $l0;

        $b2 = $l1 cmp 1000L;

        if $b2 < 0 goto label02;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback>;

        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats>;

        interfaceinvoke $r50.<com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback: void fillLowPowerStats(com.android.internal.os.RpmStats)>($r49);

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRpmStatsUpdateTimeMs> = l6;

     label02:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats>;

        $r3 = $r2.<com.android.internal.os.RpmStats: java.util.Map mPlatformLowPowerStats>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r51 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r26 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getKey()>();

        r53 = (java.lang.String) $r27;

        $r28 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (com.android.internal.os.RpmStats$PowerStatePlatformSleepState) $r28;

        l7 = $r29.<com.android.internal.os.RpmStats$PowerStatePlatformSleepState: long mTimeMs>;

        $r30 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (com.android.internal.os.RpmStats$PowerStatePlatformSleepState) $r30;

        i8 = $r31.<com.android.internal.os.RpmStats$PowerStatePlatformSleepState: int mCount>;

        $r32 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)>(r53);

        $l4 = l7 * 1000L;

        virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l4, i8);

        $r33 = interfaceinvoke r52.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r34 = (com.android.internal.os.RpmStats$PowerStatePlatformSleepState) $r33;

        $r35 = $r34.<com.android.internal.os.RpmStats$PowerStatePlatformSleepState: java.util.Map mVoters>;

        $r36 = interfaceinvoke $r35.<java.util.Map: java.util.Set entrySet()>();

        r54 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r37 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r37;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r41 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = (java.lang.String) $r41;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        r57 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (com.android.internal.os.RpmStats$PowerStateElement) $r44;

        l9 = $r45.<com.android.internal.os.RpmStats$PowerStateElement: long mTimeMs>;

        $r46 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r47 = (com.android.internal.os.RpmStats$PowerStateElement) $r46;

        i10 = $r47.<com.android.internal.os.RpmStats$PowerStateElement: int mCount>;

        $r48 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)>(r57);

        $l5 = l9 * 1000L;

        virtualinvoke $r48.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l5, i10);

        goto label04;

     label05:
        goto label03;

     label06:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RpmStats mTmpRpmStats>;

        $r6 = $r5.<com.android.internal.os.RpmStats: java.util.Map mSubsystemLowPowerStats>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r58 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getKey()>();

        r60 = (java.lang.String) $r9;

        $r10 = interfaceinvoke r59.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (com.android.internal.os.RpmStats$PowerStateSubsystem) $r10;

        $r12 = $r11.<com.android.internal.os.RpmStats$PowerStateSubsystem: java.util.Map mStates>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        r61 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r14 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (java.util.Map$Entry) $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r18 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r18;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r64 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (com.android.internal.os.RpmStats$PowerStateElement) $r21;

        l11 = $r22.<com.android.internal.os.RpmStats$PowerStateElement: long mTimeMs>;

        $r23 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (com.android.internal.os.RpmStats$PowerStateElement) $r23;

        i12 = $r24.<com.android.internal.os.RpmStats$PowerStateElement: int mCount>;

        $r25 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getRpmTimerLocked(java.lang.String)>(r64);

        $l3 = l11 * 1000L;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void update(long,int)>($l3, i12);

        goto label08;

     label09:
        goto label07;

     label10:
        return;
    }

    public void updateTimeBasesLocked(boolean, int, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean z0, $z1, $z2, z7, z8, z9, $z10, z11, z12;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1, $r2, $r3, $r11;
        android.util.SparseArray $r4, $r7, $r8, $r12;
        java.lang.Object $r5, $r9;
        com.android.internal.os.BatteryStatsImpl$Uid $r6, $r10;
        int $i2, i3, i4, $i5, i6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z7 := @parameter0: boolean;

        i3 := @parameter1: int;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn(int)>(i3);

        z0 = $z1 ^ 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if z7 == $z2 goto label01;

        z8 = 1;

        goto label02;

     label01:
        z8 = 0;

     label02:
        if z7 == 0 goto label03;

        if z0 == 0 goto label03;

        z9 = 1;

        goto label04;

     label03:
        z9 = 0;

     label04:
        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z10 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if z9 == $z10 goto label05;

        z11 = 1;

        goto label06;

     label05:
        z11 = 0;

     label06:
        if z11 != 0 goto label07;

        if z8 == 0 goto label15;

     label07:
        if z11 == 0 goto label08;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateBatteryPropertiesLocked()>();

     label08:
        if z8 == 0 goto label09;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateRpmStatsLocked()>();

     label09:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean setRunning(boolean,long,long)>(z7, l0, l1);

        if z8 == 0 goto label11;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        i4 = $i2 - 1;

     label10:
        if i4 < 0 goto label11;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r10 = (com.android.internal.os.BatteryStatsImpl$Uid) $r9;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$Uid: boolean updateOnBatteryBgTimeBase(long,long)>(l0, l1);

        i4 = i4 + -1;

        goto label10;

     label11:
        if z11 == 0 goto label15;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        if z7 == 0 goto label12;

        if z0 == 0 goto label12;

        z12 = 1;

        goto label13;

     label12:
        z12 = 0;

     label13:
        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean setRunning(boolean,long,long)>(z12, l0, l1);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        i6 = $i5 - 1;

     label14:
        if i6 < 0 goto label15;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r6 = (com.android.internal.os.BatteryStatsImpl$Uid) $r5;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: boolean updateOnBatteryScreenOffBgTimeBase(long,long)>(l0, l1);

        i6 = i6 + -1;

        goto label14;

     label15:
        return;
    }

    public void updateWifiState(android.os.connectivity.WifiActivityEnergyInfo)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseLongArray r1, r2;
        long l0, l1, l2, $l6, $l7, $l8, $l9, $l11, $l12, $l13, $l14, $l15, $l17, $l18, $l20, $l21, $l22, $l23, $l25, $l26, $l28, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l43, $l45, $l47, $l48, $l50, $l51, $l53, $l54, $l55, $l56, $l57, $l58, $l60, $l61, $l63, $l64, $l65, $l66, $l67, l69, l70, l71, l74, l75, l77, l78, l80, l82, l83, l84, l85, l90, l91, l92, l93, l95, l97, l98;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.String[] $r3;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Clocks $r4, $r19, $r20;
        android.util.SparseArray $r5, $r29, $r40;
        int $i4, $i5, $i16, $i19, $i41, $i42, $i49, $i52, $i59, $i62, i72, i73, i86, i87, i89, i94, i96;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r6, $r8, $r11, $r13, $r17, $r22, $r24, $r26, $r34, r84;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r7, $r10, $r12, $r14, $r18, $r23, $r25, $r28, $r35, $r37, $r39, $r46, $r48, $r50, $r52;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r9, $r27, $r38, $r45, $r47, $r49, $r51;
        com.android.internal.os.PowerProfile $r15;
        byte $b10, $b24, $b27, $b29, $b30, $b40, $b44, $b46, $b68;
        com.android.internal.os.RailStats $r16, $r21;
        java.lang.Object $r30, $r41, $r56, r66;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r31, $r36, $r42;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r32, $r33, $r43;
        android.util.Pools$Pool $r44, $r53, $r54, $r59;
        android.net.NetworkStats $r55, $r57, $r58, r65, r67;
        java.lang.Throwable $r60, $r61, $r62, $r63, r115;
        android.os.connectivity.WifiActivityEnergyInfo r64;
        android.net.NetworkStats$Entry r68;
        com.android.internal.os.BatteryStatsImpl$Uid r69, r72, r77, r93, r98;
        android.os.BatteryStats$HistoryItem r110;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r64 := @parameter0: android.os.connectivity.WifiActivityEnergyInfo;

        r65 = null;

        r66 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.Object mWifiNetworkLock>;

        entermonitor r66;

     label01:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        r67 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats readNetworkStatsLocked(java.lang.String[])>($r3);

     label02:
        if r67 == null goto label04;

     label03:
        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats>;

        $r54 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        $r56 = interfaceinvoke $r54.<android.util.Pools$Pool: java.lang.Object acquire()>();

        $r57 = (android.net.NetworkStats) $r56;

        r65 = staticinvoke <android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats$NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>(r67, $r55, null, null, $r57);

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats>;

        interfaceinvoke $r59.<android.util.Pools$Pool: boolean release(java.lang.Object)>($r58);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiNetworkStats> = r67;

     label04:
        exitmonitor r66;

     label05:
        entermonitor r0;

     label06:
        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 != 0 goto label11;

     label07:
        if r65 == null goto label09;

     label08:
        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        interfaceinvoke $r53.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r65);

     label09:
        exitmonitor r0;

     label10:
        return;

     label11:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        l69 = interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        r1 = new android.util.SparseLongArray;

        specialinvoke r1.<android.util.SparseLongArray: void <init>()>();

        r2 = new android.util.SparseLongArray;

        specialinvoke r2.<android.util.SparseLongArray: void <init>()>();

     label12:
        l70 = 0L;

        l71 = 0L;

        if r65 == null goto label28;

     label13:
        r68 = new android.net.NetworkStats$Entry;

        specialinvoke r68.<android.net.NetworkStats$Entry: void <init>()>();

        i72 = virtualinvoke r65.<android.net.NetworkStats: int size()>();

     label14:
        i73 = 0;

        l74 = 0L;

        l75 = 0L;

     label15:
        if i73 >= i72 goto label26;

     label16:
        r68 = virtualinvoke r65.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i73, r68);

        $l39 = r68.<android.net.NetworkStats$Entry: long rxBytes>;

        $b40 = $l39 cmp 0L;

        if $b40 != 0 goto label18;

        $l67 = r68.<android.net.NetworkStats$Entry: long txBytes>;

        $b68 = $l67 cmp 0L;

        if $b68 != 0 goto label18;

     label17:
        l77 = l75;

        l78 = l74;

        goto label25;

     label18:
        $i41 = r68.<android.net.NetworkStats$Entry: int uid>;

        $i42 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i41);

        r69 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i42);

        $l43 = r68.<android.net.NetworkStats$Entry: long rxBytes>;

        $b44 = $l43 cmp 0L;

        if $b44 == 0 goto label21;

        $l58 = r68.<android.net.NetworkStats$Entry: long rxBytes>;

        $l57 = r68.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(2, $l58, $l57);

        $i59 = r68.<android.net.NetworkStats$Entry: int set>;

        if $i59 != 0 goto label19;

        $l66 = r68.<android.net.NetworkStats$Entry: long rxBytes>;

        $l65 = r68.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(8, $l66, $l65);

     label19:
        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r50 = $r49[2];

        $l60 = r68.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r50.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l60);

        $r51 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r52 = $r51[2];

        $l61 = r68.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke $r52.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l61);

        $i62 = virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>();

        $l63 = r68.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r1.<android.util.SparseLongArray: void put(int,long)>($i62, $l63);

        $l64 = r68.<android.net.NetworkStats$Entry: long rxPackets>;

        l74 = l74 + $l64;

     label20:
        goto label21;

     label21:
        l77 = l75;

        l78 = l74;

     label22:
        $l45 = r68.<android.net.NetworkStats$Entry: long txBytes>;

        $b46 = $l45 cmp 0L;

        if $b46 == 0 goto label25;

        $l48 = r68.<android.net.NetworkStats$Entry: long txBytes>;

        $l47 = r68.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(3, $l48, $l47);

        $i49 = r68.<android.net.NetworkStats$Entry: int set>;

        if $i49 != 0 goto label23;

        $l56 = r68.<android.net.NetworkStats$Entry: long txBytes>;

        $l55 = r68.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(9, $l56, $l55);

     label23:
        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r46 = $r45[3];

        $l50 = r68.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r46.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l50);

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r48 = $r47[3];

        $l51 = r68.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke $r48.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l51);

        $i52 = virtualinvoke r69.<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>();

        $l53 = r68.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r2.<android.util.SparseLongArray: void put(int,long)>($i52, $l53);

        $l54 = r68.<android.net.NetworkStats$Entry: long txPackets>;

        l77 = l75 + $l54;

     label24:
        l78 = l74;

     label25:
        i73 = i73 + 1;

        l75 = l77;

        l74 = l78;

        goto label15;

     label26:
        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.Pools$Pool mNetworkStatsPool>;

        interfaceinvoke $r44.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r65);

     label27:
        l70 = l75;

        l71 = l74;

        l80 = l69;

        goto label29;

     label28:
        l80 = l69;

     label29:
        if r64 == null goto label89;

     label30:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting> = 1;

        l0 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerTxDurationMillis()>();

        l1 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerRxDurationMillis()>();

        virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerScanDurationMillis()>();

        l2 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerIdleDurationMillis()>();

     label31:
        l82 = l1;

        l83 = l0;

        l84 = 0L;

        l85 = 0L;

     label32:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i86 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label33:
        i87 = 0;

     label34:
        if i87 >= i86 goto label39;

     label35:
        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r41 = virtualinvoke $r40.<android.util.SparseArray: java.lang.Object valueAt(int)>(i87);

        r72 = (com.android.internal.os.BatteryStatsImpl$Uid) $r41;

     label36:
        $r42 = r72.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        $l33 = l80 * 1000L;

        $l34 = virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$DualTimer: long getTimeSinceMarkLocked(long)>($l33);

        $l35 = $l34 / 1000L;

        l85 = l85 + $l35;

     label37:
        $r43 = r72.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        $l36 = l80 * 1000L;

        $l37 = virtualinvoke $r43.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTimeSinceMarkLocked(long)>($l36);

        $l38 = $l37 / 1000L;

        l84 = l84 + $l38;

     label38:
        i87 = i87 + 1;

        goto label34;

     label39:
        i89 = 0;

     label40:
        if i89 >= i86 goto label62;

     label41:
        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r30 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object valueAt(int)>(i89);

        r77 = (com.android.internal.os.BatteryStatsImpl$Uid) $r30;

     label42:
        $r31 = r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        $l22 = l80 * 1000L;

        $l23 = virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$DualTimer: long getTimeSinceMarkLocked(long)>($l22);

        l90 = $l23 / 1000L;

     label43:
        $b24 = l90 cmp 0L;

        if $b24 <= 0 goto label56;

     label44:
        $r36 = r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        virtualinvoke $r36.<com.android.internal.os.BatteryStatsImpl$DualTimer: void setMark(long)>(l80);

     label45:
        $b29 = l85 cmp l1;

        if $b29 <= 0 goto label48;

     label46:
        $l32 = l1 * l90;

        l91 = $l32 / l85;

     label47:
        goto label49;

     label48:
        l91 = l90;

     label49:
        $b30 = l85 cmp l0;

        if $b30 <= 0 goto label52;

     label50:
        $l31 = l0 * l90;

        l90 = $l31 / l85;

     label51:
        goto label52;

     label52:
        r84 = virtualinvoke r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()>();

     label53:
        $r37 = virtualinvoke r84.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l91);

     label54:
        $r38 = virtualinvoke r84.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r39 = $r38[0];

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l90);

     label55:
        l82 = l82 - l91;

        l83 = l83 - l90;

        goto label56;

     label56:
        $r32 = r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        $l25 = l80 * 1000L;

        $l26 = virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTimeSinceMarkLocked(long)>($l25);

        l92 = $l26 / 1000L;

     label57:
        $b27 = l92 cmp 0L;

        if $b27 <= 0 goto label61;

     label58:
        $r33 = r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setMark(long)>(l80);

     label59:
        $l28 = l92 * l2;

        l93 = $l28 / l84;

     label60:
        $r34 = virtualinvoke r77.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()>();

        $r35 = virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getIdleTimeCounter()>();

        virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l93);

     label61:
        i89 = i89 + 1;

        goto label40;

     label62:
        i94 = 0;

     label63:
        $i4 = virtualinvoke r2.<android.util.SparseLongArray: int size()>();

        if i94 >= $i4 goto label68;

     label64:
        $i19 = virtualinvoke r2.<android.util.SparseLongArray: int keyAt(int)>(i94);

        r93 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i19);

     label65:
        $l20 = virtualinvoke r2.<android.util.SparseLongArray: long valueAt(int)>(i94);

        $l21 = $l20 * l83;

        l95 = $l21 / l70;

     label66:
        $r26 = virtualinvoke r93.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()>();

        $r27 = virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r28 = $r27[0];

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l95);

     label67:
        i94 = i94 + 1;

        goto label63;

     label68:
        i96 = 0;

     label69:
        $i5 = virtualinvoke r1.<android.util.SparseLongArray: int size()>();

        if i96 >= $i5 goto label74;

     label70:
        $i16 = virtualinvoke r1.<android.util.SparseLongArray: int keyAt(int)>(i96);

        r98 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i16);

     label71:
        $l17 = virtualinvoke r1.<android.util.SparseLongArray: long valueAt(int)>(i96);

        $l18 = $l17 * l82;

        l97 = $l18 / l71;

     label72:
        $r24 = virtualinvoke r98.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl getOrCreateWifiControllerActivityLocked()>();

        $r25 = virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l97);

     label73:
        i96 = i96 + 1;

        goto label69;

     label74:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r7 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getRxTimeCounter()>();

        $l6 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerRxDurationMillis()>();

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l6);

     label75:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r9 = virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] getTxTimeCounters()>();

        $r10 = $r9[0];

        $l7 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerTxDurationMillis()>();

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l7);

     label76:
        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r12 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getScanTimeCounter()>();

        $l8 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerScanDurationMillis()>();

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l8);

     label77:
        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r14 = virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getIdleTimeCounter()>();

        $l9 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerIdleDurationMillis()>();

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l9);

     label78:
        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.PowerProfile mPowerProfile>;

        $d1 = virtualinvoke $r15.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("wifi.controller.voltage");

        d0 = $d1 / 1000.0;

     label79:
        $b10 = d0 cmpl 0.0;

        if $b10 == 0 goto label81;

     label80:
        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r23 = virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getPowerCounter()>();

        $l14 = virtualinvoke r64.<android.os.connectivity.WifiActivityEnergyInfo: long getControllerEnergyUsedMicroJoules()>();

        $d8 = (double) $l14;

        $d9 = $d8 / d0;

        $l15 = (long) $d9;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l15);

     label81:
        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        $l11 = virtualinvoke $r16.<com.android.internal.os.RailStats: long getWifiTotalEnergyUseduWs()>();

        $d2 = (double) $l11;

        $d3 = $d2 / d0;

        l98 = (long) $d3;

     label82:
        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        $r18 = virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter getMonitoredRailChargeConsumedMaMs()>();

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l98);

     label83:
        r110 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

     label84:
        $d6 = r110.<android.os.BatteryStats$HistoryItem: double wifiRailChargeMah>;

        $d4 = (double) l98;

        $d5 = $d4 / 3600000.0;

        $d7 = $d6 + $d5;

        r110.<android.os.BatteryStats$HistoryItem: double wifiRailChargeMah> = $d7;

     label85:
        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l12 = interfaceinvoke $r19.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l13 = interfaceinvoke $r20.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>($l12, $l13);

     label86:
        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.RailStats mTmpRailStats>;

        virtualinvoke $r21.<com.android.internal.os.RailStats: void resetWifiTotalEnergyUsed()>();

     label87:
        goto label89;

     label88:
        $r63 := @caughtexception;

        r115 = $r63;

        goto label93;

     label89:
        exitmonitor r0;

     label90:
        return;

     label91:
        $r61 := @caughtexception;

        r115 = $r61;

        goto label93;

     label92:
        $r62 := @caughtexception;

        r115 = $r62;

     label93:
        exitmonitor r0;

     label94:
        throw r115;

     label95:
        $r60 := @caughtexception;

     label96:
        exitmonitor r66;

     label97:
        throw $r60;

        catch java.lang.Throwable from label01 to label02 with label95;
        catch java.lang.Throwable from label03 to label04 with label95;
        catch java.lang.Throwable from label04 to label05 with label95;
        catch java.lang.Throwable from label06 to label07 with label92;
        catch java.lang.Throwable from label08 to label09 with label92;
        catch java.lang.Throwable from label09 to label10 with label92;
        catch java.lang.Throwable from label11 to label12 with label92;
        catch java.lang.Throwable from label13 to label14 with label92;
        catch java.lang.Throwable from label16 to label17 with label92;
        catch java.lang.Throwable from label18 to label19 with label92;
        catch java.lang.Throwable from label19 to label20 with label92;
        catch java.lang.Throwable from label22 to label23 with label92;
        catch java.lang.Throwable from label23 to label24 with label92;
        catch java.lang.Throwable from label26 to label27 with label92;
        catch java.lang.Throwable from label30 to label31 with label88;
        catch java.lang.Throwable from label32 to label33 with label88;
        catch java.lang.Throwable from label35 to label36 with label91;
        catch java.lang.Throwable from label36 to label37 with label91;
        catch java.lang.Throwable from label37 to label38 with label91;
        catch java.lang.Throwable from label41 to label42 with label91;
        catch java.lang.Throwable from label42 to label43 with label91;
        catch java.lang.Throwable from label44 to label45 with label91;
        catch java.lang.Throwable from label46 to label47 with label91;
        catch java.lang.Throwable from label50 to label51 with label91;
        catch java.lang.Throwable from label52 to label53 with label91;
        catch java.lang.Throwable from label53 to label54 with label91;
        catch java.lang.Throwable from label54 to label55 with label91;
        catch java.lang.Throwable from label56 to label57 with label91;
        catch java.lang.Throwable from label58 to label59 with label91;
        catch java.lang.Throwable from label59 to label60 with label91;
        catch java.lang.Throwable from label60 to label61 with label91;
        catch java.lang.Throwable from label63 to label64 with label91;
        catch java.lang.Throwable from label64 to label65 with label91;
        catch java.lang.Throwable from label65 to label66 with label91;
        catch java.lang.Throwable from label66 to label67 with label91;
        catch java.lang.Throwable from label69 to label70 with label91;
        catch java.lang.Throwable from label70 to label71 with label91;
        catch java.lang.Throwable from label71 to label72 with label91;
        catch java.lang.Throwable from label72 to label73 with label91;
        catch java.lang.Throwable from label74 to label75 with label91;
        catch java.lang.Throwable from label75 to label76 with label91;
        catch java.lang.Throwable from label76 to label77 with label91;
        catch java.lang.Throwable from label77 to label78 with label91;
        catch java.lang.Throwable from label78 to label79 with label91;
        catch java.lang.Throwable from label80 to label81 with label91;
        catch java.lang.Throwable from label81 to label82 with label91;
        catch java.lang.Throwable from label82 to label83 with label91;
        catch java.lang.Throwable from label83 to label84 with label91;
        catch java.lang.Throwable from label84 to label85 with label91;
        catch java.lang.Throwable from label85 to label86 with label91;
        catch java.lang.Throwable from label86 to label87 with label91;
        catch java.lang.Throwable from label89 to label90 with label91;
        catch java.lang.Throwable from label93 to label94 with label92;
        catch java.lang.Throwable from label96 to label97 with label95;
    }

    public void writeAsyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeStatsLocked(boolean)>(0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryLocked(boolean)>(0);

        return;
    }

    void writeHistoryBuffer(android.os.Parcel, boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, r2, $r3;
        boolean z0, z1;
        long $l0, $l1, $l2;
        int $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(186);

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime>;

        $l2 = $l1 + $l0;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        if z0 != 0 goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i3 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i4 = virtualinvoke r2.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r2, 0, $i4);

        if z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeOldHistory(android.os.Parcel)>(r1);

     label2:
        return;
    }

    public void writeHistoryDelta(android.os.Parcel, android.os.BatteryStats$HistoryItem, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.os.BatteryStats$HistoryItem r2, r23;
        long l0, $l4, $l5;
        int i1, i2, $i7, $i8, $i9, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i26, i27, i28, $i29, $i30, i31, $i35, i36, i37, i38, i39, i40, $i41, i42, i43, i44, $i45, i46;
        byte $b3, $b6, $b13, $b14, $b15, $b16, $b24, $b25, $b32, $b33, b34;
        android.os.BatteryStats$HistoryTag $r3, $r4, $r5, $r6, $r17, $r18, $r19, $r20, $r21;
        double $d0, $d1;
        android.os.BatteryStats$HistoryStepDetails $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r22;
        java.lang.String $r13, $r16;
        com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback $r14, r24;
        boolean z0, z1, z2, z3, z4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.BatteryStats$HistoryItem;

        r23 := @parameter2: android.os.BatteryStats$HistoryItem;

        if r23 == null goto label44;

        $b3 = r2.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b3 == 0 goto label01;

        goto label44;

     label01:
        $l5 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l4 = r23.<android.os.BatteryStats$HistoryItem: long time>;

        l0 = $l5 - $l4;

        i26 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)>(r23);

        i27 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildStateInt(android.os.BatteryStats$HistoryItem)>(r23);

        $b6 = l0 cmp 0L;

        if $b6 < 0 goto label04;

        $b24 = l0 cmp 2147483647L;

        if $b24 <= 0 goto label02;

        goto label04;

     label02:
        $b25 = l0 cmp 524285L;

        if $b25 < 0 goto label03;

        i28 = 524286;

        goto label05;

     label03:
        i28 = (int) l0;

        goto label05;

     label04:
        i28 = 524287;

     label05:
        $i29 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i30 = $i29 & -33554432;

        i31 = $i30 | i28;

        $b32 = r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel>;

        $b33 = r2.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b32 <= $b33 goto label06;

        b34 = 1;

        goto label07;

     label06:
        b34 = 0;

     label07:
        if b34 != 0 goto label09;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails>;

        if $r22 != null goto label08;

        goto label09;

     label08:
        z0 = 0;

        goto label10;

     label09:
        z0 = 1;

     label10:
        $i35 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)>(r2);

        i1 = $i35 | b34;

        if i1 == i26 goto label11;

        z1 = 1;

        goto label12;

     label11:
        z1 = 0;

     label12:
        i36 = i31;

        if z1 == 0 goto label13;

        i36 = i31 | 524288;

     label13:
        i2 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildStateInt(android.os.BatteryStats$HistoryItem)>(r2);

        if i2 == i27 goto label14;

        z2 = 1;

        goto label15;

     label14:
        z2 = 0;

     label15:
        i37 = i36;

        if z2 == 0 goto label16;

        i37 = i36 | 1048576;

     label16:
        $i8 = r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = r23.<android.os.BatteryStats$HistoryItem: int states2>;

        if $i8 == $i7 goto label17;

        z3 = 1;

        goto label18;

     label17:
        z3 = 0;

     label18:
        i38 = i37;

        if z3 == 0 goto label19;

        i38 = i37 | 2097152;

     label19:
        $r3 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r3 != null goto label20;

        i39 = i38;

        $r21 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r21 == null goto label21;

     label20:
        i39 = i38 | 4194304;

     label21:
        i40 = i39;

        $i41 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i41 == 0 goto label22;

        i40 = i39 | 8388608;

     label22:
        $i10 = r2.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        $i9 = r23.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        if $i10 == $i9 goto label23;

        z4 = 1;

        goto label24;

     label23:
        z4 = 0;

     label24:
        i42 = i40;

        if z4 == 0 goto label25;

        i42 = i40 | 16777216;

     label25:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i42);

        if i28 < 524286 goto label27;

        if i28 != 524286 goto label26;

        $i23 = (int) l0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        goto label27;

     label26:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label27:
        if z1 == 0 goto label28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label28:
        if z2 == 0 goto label29;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label29:
        if z3 == 0 goto label30;

        $i22 = r2.<android.os.BatteryStats$HistoryItem: int states2>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

     label30:
        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r4 != null goto label31;

        $r20 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r20 == null goto label36;

     label31:
        $r5 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r5 == null goto label32;

        $r19 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        i43 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r19);

        goto label33;

     label32:
        i43 = 65535;

     label33:
        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r6 == null goto label34;

        $r18 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        i44 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r18);

        goto label35;

     label34:
        i44 = 65535;

     label35:
        $i11 = i44 << 16;

        $i12 = $i11 | i43;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

     label36:
        $i45 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i45 == 0 goto label37;

        $r17 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        i46 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r17);

        $i18 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        $i20 = $i18 & 65535;

        $i19 = i46 << 16;

        $i21 = $i20 | $i19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

     label37:
        if z0 == 0 goto label40;

        r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback>;

        if r24 == null goto label38;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        $r13 = interfaceinvoke r24.<com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback: java.lang.String getPlatformLowPowerStats()>();

        $r12.<android.os.BatteryStats$HistoryStepDetails: java.lang.String statPlatformIdleState> = $r13;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback mPlatformIdleStateCallback>;

        $r16 = interfaceinvoke $r14.<com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback: java.lang.String getSubsystemLowPowerStats()>();

        $r15.<android.os.BatteryStats$HistoryStepDetails: java.lang.String statSubsystemPowerState> = $r16;

     label38:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void computeHistoryStepDetails(android.os.BatteryStats$HistoryStepDetails,android.os.BatteryStats$HistoryStepDetails)>($r8, $r7);

        if b34 == 0 goto label39;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        virtualinvoke $r11.<android.os.BatteryStats$HistoryStepDetails: void writeToParcel(android.os.Parcel)>(r1);

     label39:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails> = $r9;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mCurHistoryStepDetails>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = $r10;

        goto label41;

     label40:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryStepDetails stepDetails> = null;

     label41:
        $b14 = r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel>;

        $b13 = r2.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b14 >= $b13 goto label42;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryStepDetails mLastHistoryStepDetails> = null;

     label42:
        $b15 = r2.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $b16 = (byte) $b15;

        r0.<com.android.internal.os.BatteryStatsImpl: byte mLastHistoryStepLevel> = $b16;

        if z4 == 0 goto label43;

        $i17 = r2.<android.os.BatteryStats$HistoryItem: int batteryChargeUAh>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

     label43:
        $d0 = r2.<android.os.BatteryStats$HistoryItem: double modemRailChargeMah>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $d1 = r2.<android.os.BatteryStats$HistoryItem: double wifiRailChargeMah>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        return;

     label44:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(524285);

        virtualinvoke r2.<android.os.BatteryStats$HistoryItem: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        return;
    }

    void writeHistoryLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        com.android.internal.os.BatteryStatsHistory $r2, $r4;
        android.util.AtomicFile $r3, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()>();

        if $r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "writeHistoryLocked: no history file associated with this instance");

        return;

     label1:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryBuffer(android.os.Parcel,boolean,boolean)>(r1, 1, 1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        $r5 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsHistory: android.util.AtomicFile getActiveFile()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeParcelToFileLocked(android.os.Parcel,android.util.AtomicFile,boolean)>(r1, $r5, z0);

        return;
    }

    void writeOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    void writeParcelToFileLocked(android.os.Parcel, android.util.AtomicFile, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.util.AtomicFile r2;
        boolean z0;
        android.os.Handler $r3;
        com.android.internal.os.BatteryStatsImpl$5 $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.util.AtomicFile;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk(android.os.Parcel,android.util.AtomicFile)>(r1, r2);

        goto label2;

     label1:
        $r3 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r4 = new com.android.internal.os.BatteryStatsImpl$5;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$5: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Parcel,android.util.AtomicFile)>(r0, r1, r2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label2:
        return;
    }

    void writeStatsLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.util.AtomicFile $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$Clocks $r3;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "writeStatsLocked: no file associated with this instance");

        return;

     label1:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel,boolean)>(r1, 0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l1 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mStatsFile>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeParcelToFileLocked(android.os.Parcel,android.util.AtomicFile,boolean)>(r1, $r4, z0);

        return;
    }

    public void writeSummaryToParcel(android.os.Parcel, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        long l0, l1, $l3, $l4, $l7, $l8, $l9, $l22, $l23, $l24, $l25, $l26, $l39, $l40, $l43, $l44, $l45, $l54, $l55;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        java.util.HashMap $r4, $r5, $r45, $r46, $r48, $r49, $r51, $r52, $r54, $r55;
        int $i5, $i6, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i41, $i42, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i56, $i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i95, i96, i97, i98, i99, i100, i101, i102, i103;
        java.util.Set $r6, $r47, $r50, $r53, $r56, $r107;
        java.lang.String $r7, $r8, $r110, $r116, $r122, $r128, $r141, $r145, $r149, $r202, $r206, $r210, $r214, $r235, $r240;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r9, $r10, $r63, $r64, $r119;
        android.os.BatteryStats$LevelStepTracker $r11, $r12, $r13, $r14;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r15, $r16, $r17, $r18, $r19, $r32, $r33, $r34, $r83, $r84, $r85, $r86, $r90, $r94, $r95, $r101, $r159, $r160, $r167, $r169, $r224, $r226, r265;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r38, $r42, $r43, $r44, $r65, $r66, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r151, $r153, $r154, $r155, $r156, $r158, $r174, $r176, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r190, $r192, $r194, $r195, $r216, $r218, $r220, $r222, $r228, $r230, $r232;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r39, $r40, $r41;
        android.util.LongSparseArray $r57, $r58, $r196, $r198;
        android.util.SparseArray $r59, $r60, $r61, $r103, $r131, $r132;
        java.lang.Object $r62, $r108, $r109, $r111, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r140, $r142, $r144, $r146, $r148, $r150, $r197, $r199, $r200, $r201, $r203, $r204, $r205, $r207, $r208, $r209, $r211, $r212, $r213, $r234, $r236, $r237, $r238;
        com.android.internal.os.BatteryStatsImpl$DualTimer $r67, $r75, $r76, $r77, $r134, $r135, $r143, $r147, $r152, $r157, $r179, $r180, $r181, $r193;
        com.android.internal.os.BatteryStatsImpl$Counter $r78, $r79, $r99, $r100, $r125, $r137, $r139, $r171, $r177, $r178;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r80, $r172;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r81, $r136, $r138, $r170;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r82, $r166, $r168, $r223, $r225, r264;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] $r87, $r165, r263;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray $r88, $r89, $r91, $r162, $r164;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] $r92, $r93, $r161, $r163, r266, r267;
        com.android.internal.os.BatteryStatsImpl$OverflowArrayMap $r96, $r97, $r98;
        long[] $r102;
        android.util.ArrayMap $r104, $r105, $r106, $r112, $r113, $r114, $r117, $r120, $r123, $r126, $r129, r268, r270, r271;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r173, $r175, $r189, $r191, $r215, $r217, $r219, $r221, $r227, $r229, $r231;
        java.util.ArrayList $r233, r246;
        java.lang.Integer $r239;
        com.android.internal.os.BatteryStatsHistory $r241;
        java.util.Iterator r243, r248, r251, r254, r257, r275;
        java.util.Map$Entry r244, r249, r252, r255, r258, r276;
        android.os.BatteryStats$HistoryTag r245;
        android.os.BatteryStats$PackageChange r247;
        com.android.internal.os.BatteryStatsImpl$Timer r250, r253, r256, r260;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r259;
        com.android.internal.os.BatteryStatsImpl$Uid r262;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock r269;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r272;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r274;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r277;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r278;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l3 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l0 = $l3 * 1000L;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l4 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        l1 = $l4 * 1000L;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(186);

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>(z0);

        if z0 == 0 goto label001;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryBuffer(android.os.Parcel,boolean,boolean)>(r1, 1, 1);

        $r241 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r241.<com.android.internal.os.BatteryStatsHistory: void writeToParcel(android.os.Parcel)>(r1);

     label001:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i5 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set entrySet()>();

        r243 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label002:
        $z10 = interfaceinvoke r243.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label003;

        $r236 = interfaceinvoke r243.<java.util.Iterator: java.lang.Object next()>();

        r244 = (java.util.Map$Entry) $r236;

        $r237 = interfaceinvoke r244.<java.util.Map$Entry: java.lang.Object getKey()>();

        r245 = (android.os.BatteryStats$HistoryTag) $r237;

        $r238 = interfaceinvoke r244.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r239 = (java.lang.Integer) $r238;

        $i56 = virtualinvoke $r239.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i56);

        $r240 = r245.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r240);

        $i57 = r245.<android.os.BatteryStats$HistoryTag: int uid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i57);

        goto label002;

     label003:
        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $l7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>(l0, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $l8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>(l1, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l8);

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l9);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $i13 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i16 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i17 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $i18 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $i19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i20 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i21 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenDozeSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r11.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r12.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyDischargeStepTracker>;

        virtualinvoke $r13.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDailyChargeStepTracker>;

        virtualinvoke $r14.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r246 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        if r246 == null goto label006;

        i58 = virtualinvoke r246.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i58);

        i59 = 0;

     label004:
        if i59 >= i58 goto label005;

        $r233 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mDailyPackageChanges>;

        $r234 = virtualinvoke $r233.<java.util.ArrayList: java.lang.Object get(int)>(i59);

        r247 = (android.os.BatteryStats$PackageChange) $r234;

        $r235 = r247.<android.os.BatteryStats$PackageChange: java.lang.String mPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r235);

        $z9 = r247.<android.os.BatteryStats$PackageChange: boolean mUpdate>;

        i100 = (int) $z9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i100);

        $l55 = r247.<android.os.BatteryStats$PackageChange: long mVersionCode>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l55);

        i59 = i59 + 1;

        goto label004;

     label005:
        goto label007;

     label006:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label007:
        $l22 = r0.<com.android.internal.os.BatteryStatsImpl: long mDailyStartTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l22);

        $l23 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMinDailyDeadline>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l23);

        $l24 = r0.<com.android.internal.os.BatteryStatsImpl: long mNextMaxDailyDeadline>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l24);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i60 = 0;

     label008:
        if i60 >= 5 goto label009;

        $r231 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r232 = $r231[i60];

        virtualinvoke $r232.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i60 = i60 + 1;

        goto label008;

     label009:
        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $l25 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l25);

        $l26 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l26);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i61 = 0;

     label010:
        $i27 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i61 >= $i27 goto label011;

        $r229 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r230 = $r229[i61];

        virtualinvoke $r230.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i61 = i61 + 1;

        goto label010;

     label011:
        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i62 = 0;

     label012:
        $i28 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i62 >= $i28 goto label013;

        $r227 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r228 = $r227[i62];

        virtualinvoke $r228.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i62 = i62 + 1;

        goto label012;

     label013:
        i63 = 0;

     label014:
        if i63 >= 10 goto label015;

        $r223 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r224 = $r223[i63];

        virtualinvoke $r224.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r225 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r226 = $r225[i63];

        virtualinvoke $r226.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i63 = i63 + 1;

        goto label014;

     label015:
        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r36.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i64 = 0;

     label016:
        if i64 >= 8 goto label017;

        $r221 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r222 = $r221[i64];

        virtualinvoke $r222.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i64 = i64 + 1;

        goto label016;

     label017:
        i65 = 0;

     label018:
        if i65 >= 13 goto label019;

        $r219 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r220 = $r219[i65];

        virtualinvoke $r220.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i65 = i65 + 1;

        goto label018;

     label019:
        i66 = 0;

     label020:
        if i66 >= 5 goto label021;

        $r217 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r218 = $r217[i66];

        virtualinvoke $r218.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i66 = i66 + 1;

        goto label020;

     label021:
        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        virtualinvoke $r38.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeSummaryToParcel(android.os.Parcel)>(r1);

        i67 = 0;

     label022:
        if i67 >= 2 goto label023;

        $r215 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r216 = $r215[i67];

        virtualinvoke $r216.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i67 = i67 + 1;

        goto label022;

     label023:
        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        virtualinvoke $r40.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeSummaryToParcel(android.os.Parcel)>(r1);

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        virtualinvoke $r41.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeSummaryToParcel(android.os.Parcel)>(r1);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting>;

        i101 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i101);

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting>;

        i102 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i102);

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting>;

        i103 = (int) $z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i103);

        $i29 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r43.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r44.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $i30 = virtualinvoke $r45.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $r47 = virtualinvoke $r46.<java.util.HashMap: java.util.Set entrySet()>();

        r248 = interfaceinvoke $r47.<java.util.Set: java.util.Iterator iterator()>();

     label024:
        $z4 = interfaceinvoke r248.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label027;

        $r211 = interfaceinvoke r248.<java.util.Iterator: java.lang.Object next()>();

        r249 = (java.util.Map$Entry) $r211;

        $r212 = interfaceinvoke r249.<java.util.Map$Entry: java.lang.Object getValue()>();

        r250 = (com.android.internal.os.BatteryStatsImpl$Timer) $r212;

        if r250 == null goto label025;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r213 = interfaceinvoke r249.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r214 = (java.lang.String) $r213;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r214);

        virtualinvoke r250.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label026;

     label025:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label026:
        goto label024;

     label027:
        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $i31 = virtualinvoke $r48.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $r50 = virtualinvoke $r49.<java.util.HashMap: java.util.Set entrySet()>();

        r251 = interfaceinvoke $r50.<java.util.Set: java.util.Iterator iterator()>();

     label028:
        $z5 = interfaceinvoke r251.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label031;

        $r207 = interfaceinvoke r251.<java.util.Iterator: java.lang.Object next()>();

        r252 = (java.util.Map$Entry) $r207;

        $r208 = interfaceinvoke r252.<java.util.Map$Entry: java.lang.Object getValue()>();

        r253 = (com.android.internal.os.BatteryStatsImpl$Timer) $r208;

        if r253 == null goto label029;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r209 = interfaceinvoke r252.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r210 = (java.lang.String) $r209;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r210);

        virtualinvoke r253.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label030;

     label029:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label030:
        goto label028;

     label031:
        $r51 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i32 = virtualinvoke $r51.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r53 = virtualinvoke $r52.<java.util.HashMap: java.util.Set entrySet()>();

        r254 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>();

     label032:
        $z6 = interfaceinvoke r254.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label035;

        $r203 = interfaceinvoke r254.<java.util.Iterator: java.lang.Object next()>();

        r255 = (java.util.Map$Entry) $r203;

        $r204 = interfaceinvoke r255.<java.util.Map$Entry: java.lang.Object getValue()>();

        r256 = (com.android.internal.os.BatteryStatsImpl$Timer) $r204;

        if r256 == null goto label033;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r205 = interfaceinvoke r255.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r206 = (java.lang.String) $r205;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r206);

        virtualinvoke r256.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label034;

     label033:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label034:
        goto label032;

     label035:
        $r54 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i33 = virtualinvoke $r54.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r56 = virtualinvoke $r55.<java.util.HashMap: java.util.Set entrySet()>();

        r257 = interfaceinvoke $r56.<java.util.Set: java.util.Iterator iterator()>();

     label036:
        $z7 = interfaceinvoke r257.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label039;

        $r199 = interfaceinvoke r257.<java.util.Iterator: java.lang.Object next()>();

        r258 = (java.util.Map$Entry) $r199;

        $r200 = interfaceinvoke r258.<java.util.Map$Entry: java.lang.Object getValue()>();

        r259 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r200;

        if r259 == null goto label037;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r201 = interfaceinvoke r258.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r202 = (java.lang.String) $r201;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r202);

        virtualinvoke r259.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label038;

     label037:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label038:
        goto label036;

     label039:
        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i34 = virtualinvoke $r57.<android.util.LongSparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i34);

        i68 = 0;

     label040:
        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i35 = virtualinvoke $r58.<android.util.LongSparseArray: int size()>();

        if i68 >= $i35 goto label043;

        $r196 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r197 = virtualinvoke $r196.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i68);

        r260 = (com.android.internal.os.BatteryStatsImpl$Timer) $r197;

        if r260 == null goto label041;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r198 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $l54 = virtualinvoke $r198.<android.util.LongSparseArray: long keyAt(int)>(i68);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l54);

        virtualinvoke r260.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label042;

     label041:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label042:
        i68 = i68 + 1;

        goto label040;

     label043:
        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i69 = virtualinvoke $r59.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i69);

        i70 = 0;

     label044:
        if i70 >= i69 goto label141;

        $r60 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i36 = virtualinvoke $r60.<android.util.SparseArray: int keyAt(int)>(i70);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i36);

        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r62 = virtualinvoke $r61.<android.util.SparseArray: java.lang.Object valueAt(int)>(i70);

        r262 = (com.android.internal.os.BatteryStatsImpl$Uid) $r62;

        $r63 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryBackgroundTimeBase>;

        virtualinvoke $r63.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $r64 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffBackgroundTimeBase>;

        virtualinvoke $r64.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $r65 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        if $r65 == null goto label045;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r195 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r195.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label046;

     label045:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label046:
        $r66 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        if $r66 == null goto label047;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r194 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r194.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label048;

     label047:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label048:
        $r67 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        if $r67 == null goto label049;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r193 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mWifiScanTimer>;

        virtualinvoke $r193.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label050;

     label049:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label050:
        i71 = 0;

     label051:
        if i71 >= 5 goto label054;

        $r189 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r190 = $r189[i71];

        if $r190 == null goto label052;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r191 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r192 = $r191[i71];

        virtualinvoke $r192.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label053;

     label052:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label053:
        i71 = i71 + 1;

        goto label051;

     label054:
        $r68 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        if $r68 == null goto label055;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r188 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r188.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label056;

     label055:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label056:
        $r69 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        if $r69 == null goto label057;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r187 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        virtualinvoke $r187.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label058;

     label057:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label058:
        $r70 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        if $r70 == null goto label059;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r186 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        virtualinvoke $r186.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label060;

     label059:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label060:
        $r71 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightTurnedOnTimer>;

        if $r71 == null goto label061;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r185 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightTurnedOnTimer>;

        virtualinvoke $r185.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label062;

     label061:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label062:
        $r72 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraTurnedOnTimer>;

        if $r72 == null goto label063;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r184 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraTurnedOnTimer>;

        virtualinvoke $r184.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label064;

     label063:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label064:
        $r73 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        if $r73 == null goto label065;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r183 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        virtualinvoke $r183.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label066;

     label065:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label066:
        $r74 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundServiceTimer>;

        if $r74 == null goto label067;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r182 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundServiceTimer>;

        virtualinvoke $r182.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label068;

     label067:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label068:
        $r75 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mAggregatedPartialWakelockTimer>;

        if $r75 == null goto label069;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r181 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mAggregatedPartialWakelockTimer>;

        virtualinvoke $r181.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label070;

     label069:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label070:
        $r76 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        if $r76 == null goto label071;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r180 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothScanTimer>;

        virtualinvoke $r180.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label072;

     label071:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label072:
        $r77 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothUnoptimizedScanTimer>;

        if $r77 == null goto label073;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r179 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$DualTimer mBluetoothUnoptimizedScanTimer>;

        virtualinvoke $r179.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label074;

     label073:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label074:
        $r78 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mBluetoothScanResultCounter>;

        if $r78 == null goto label075;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r178 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mBluetoothScanResultCounter>;

        virtualinvoke $r178.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label076;

     label075:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label076:
        $r79 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mBluetoothScanResultBgCounter>;

        if $r79 == null goto label077;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r177 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mBluetoothScanResultBgCounter>;

        virtualinvoke $r177.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label078;

     label077:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label078:
        i72 = 0;

     label079:
        if i72 >= 7 goto label082;

        $r173 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r174 = $r173[i72];

        if $r174 == null goto label080;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r175 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r176 = $r175[i72];

        virtualinvoke $r176.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label081;

     label080:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label081:
        i72 = i72 + 1;

        goto label079;

     label082:
        $r80 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        if $r80 == null goto label083;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r172 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        virtualinvoke $r172.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label084;

     label083:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label084:
        $r81 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r81 != null goto label085;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label087;

     label085:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i73 = 0;

     label086:
        $i37 = <com.android.internal.os.BatteryStatsImpl$Uid: int NUM_USER_ACTIVITY_TYPES>;

        if i73 >= $i37 goto label087;

        $r170 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r171 = $r170[i73];

        virtualinvoke $r171.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i73 = i73 + 1;

        goto label086;

     label087:
        $r82 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        if $r82 != null goto label088;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label091;

     label088:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i74 = 0;

     label089:
        if i74 >= 10 goto label090;

        $r166 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r167 = $r166[i74];

        virtualinvoke $r167.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r168 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r169 = $r168[i74];

        virtualinvoke $r169.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i74 = i74 + 1;

        goto label089;

     label090:
        $r83 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveTime>;

        virtualinvoke $r83.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r84 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveCount>;

        virtualinvoke $r84.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label091:
        $r85 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mUserCpuTime>;

        virtualinvoke $r85.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r86 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mSystemCpuTime>;

        virtualinvoke $r86.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r87 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        if $r87 == null goto label098;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r165 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        $i52 = lengthof $r165;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i52);

        r263 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[][] mCpuClusterSpeedTimesUs>;

        i75 = lengthof r263;

        i76 = 0;

     label092:
        if i76 >= i75 goto label099;

        r264 = r263[i76];

        if r264 == null goto label096;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $i53 = lengthof r264;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i53);

        i77 = lengthof r264;

        i78 = 0;

     label093:
        if i78 >= i77 goto label097;

        r265 = r264[i78];

        if r265 == null goto label094;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r265.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label095;

     label094:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label095:
        i78 = i78 + 1;

        goto label093;

     label096:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label097:
        i76 = i76 + 1;

        goto label092;

     label098:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label099:
        $r88 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)>(r1, $r88);

        $r89 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mScreenOffCpuFreqTimeMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)>(r1, $r89);

        $r90 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mCpuActiveTimeMs>;

        virtualinvoke $r90.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r91 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray mCpuClusterTimesMs>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void access$2600(com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray,android.os.Parcel)>($r91, r1);

        $r92 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        if $r92 == null goto label101;

        $r163 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        $i51 = lengthof $r163;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i51);

        r266 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateTimeMs>;

        i79 = lengthof r266;

        i80 = 0;

     label100:
        if i80 >= i79 goto label102;

        $r164 = r266[i80];

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)>(r1, $r164);

        i80 = i80 + 1;

        goto label100;

     label101:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label102:
        $r93 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        if $r93 == null goto label104;

        $r161 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        $i50 = lengthof $r161;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i50);

        r267 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray[] mProcStateScreenOffTimeMs>;

        i81 = lengthof r267;

        i82 = 0;

     label103:
        if i82 >= i81 goto label105;

        $r162 = r267[i82];

        staticinvoke <com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray: void writeSummaryToParcelLocked(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$LongSamplingCounterArray)>(r1, $r162);

        i82 = i82 + 1;

        goto label103;

     label104:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label105:
        $r94 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2400(com.android.internal.os.BatteryStatsImpl$Uid)>(r262);

        if $r94 == null goto label106;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r160 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2400(com.android.internal.os.BatteryStatsImpl$Uid)>(r262);

        virtualinvoke $r160.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label107;

     label106:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label107:
        $r95 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2500(com.android.internal.os.BatteryStatsImpl$Uid)>(r262);

        if $r95 == null goto label108;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r159 = staticinvoke <com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter access$2500(com.android.internal.os.BatteryStatsImpl$Uid)>(r262);

        virtualinvoke $r159.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label109;

     label108:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label109:
        $r96 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mWakelockStats>;

        r268 = virtualinvoke $r96.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i83 = virtualinvoke r268.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i83);

        i84 = 0;

     label110:
        if i84 >= i83 goto label119;

        $r148 = virtualinvoke r268.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i84);

        $r149 = (java.lang.String) $r148;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r149);

        $r150 = virtualinvoke r268.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i84);

        r269 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r150;

        $r151 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        if $r151 == null goto label111;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r158 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        virtualinvoke $r158.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label112;

     label111:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label112:
        $r152 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$DualTimer mTimerPartial>;

        if $r152 == null goto label113;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r157 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$DualTimer mTimerPartial>;

        virtualinvoke $r157.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label114;

     label113:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label114:
        $r153 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        if $r153 == null goto label115;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r156 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        virtualinvoke $r156.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label116;

     label115:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label116:
        $r154 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerDraw>;

        if $r154 == null goto label117;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r155 = r269.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerDraw>;

        virtualinvoke $r155.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label118;

     label117:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label118:
        i84 = i84 + 1;

        goto label110;

     label119:
        $r97 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mSyncStats>;

        r270 = virtualinvoke $r97.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i85 = virtualinvoke r270.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i85);

        i86 = 0;

     label120:
        if i86 >= i85 goto label121;

        $r144 = virtualinvoke r270.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i86);

        $r145 = (java.lang.String) $r144;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r145);

        $r146 = virtualinvoke r270.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i86);

        $r147 = (com.android.internal.os.BatteryStatsImpl$DualTimer) $r146;

        virtualinvoke $r147.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i86 = i86 + 1;

        goto label120;

     label121:
        $r98 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mJobStats>;

        r271 = virtualinvoke $r98.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i87 = virtualinvoke r271.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i87);

        i88 = 0;

     label122:
        if i88 >= i87 goto label123;

        $r140 = virtualinvoke r271.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i88);

        $r141 = (java.lang.String) $r140;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r141);

        $r142 = virtualinvoke r271.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i88);

        $r143 = (com.android.internal.os.BatteryStatsImpl$DualTimer) $r142;

        virtualinvoke $r143.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        i88 = i88 + 1;

        goto label122;

     label123:
        virtualinvoke r262.<com.android.internal.os.BatteryStatsImpl$Uid: void writeJobCompletionsToParcelLocked(android.os.Parcel)>(r1);

        $r99 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mJobsDeferredEventCount>;

        virtualinvoke $r99.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r100 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter mJobsDeferredCount>;

        virtualinvoke $r100.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r101 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mJobsFreshnessTimeMs>;

        virtualinvoke $r101.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i89 = 0;

     label124:
        $r102 = <com.android.internal.os.BatteryStatsImpl: long[] JOB_FRESHNESS_BUCKETS>;

        $i38 = lengthof $r102;

        if i89 >= $i38 goto label127;

        $r136 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mJobsFreshnessBuckets>;

        $r137 = $r136[i89];

        if $r137 == null goto label125;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r138 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mJobsFreshnessBuckets>;

        $r139 = $r138[i89];

        virtualinvoke $r139.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label126;

     label125:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label126:
        i89 = i89 + 1;

        goto label124;

     label127:
        $r103 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        i90 = virtualinvoke $r103.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i90);

        i91 = 0;

     label128:
        if i91 >= i90 goto label131;

        $r131 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        $i49 = virtualinvoke $r131.<android.util.SparseArray: int keyAt(int)>(i91);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i49);

        $r132 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        $r133 = virtualinvoke $r132.<android.util.SparseArray: java.lang.Object valueAt(int)>(i91);

        r272 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r133;

        $r134 = r272.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        if $r134 == null goto label129;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r135 = r272.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$DualTimer mTimer>;

        virtualinvoke $r135.<com.android.internal.os.BatteryStatsImpl$DualTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l1);

        goto label130;

     label129:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label130:
        i91 = i91 + 1;

        goto label128;

     label131:
        $r104 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        i92 = virtualinvoke $r104.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i92);

        i93 = 0;

     label132:
        if i93 >= i92 goto label133;

        $r126 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $r127 = virtualinvoke $r126.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i93);

        $r128 = (java.lang.String) $r127;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r128);

        $r129 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $r130 = virtualinvoke $r129.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i93);

        r274 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r130;

        $l43 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l43);

        $l44 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l44);

        $l45 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l45);

        $i46 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i46);

        $i47 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumCrashes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i47);

        $i48 = r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mNumAnrs>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i48);

        virtualinvoke r274.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>(r1);

        i93 = i93 + 1;

        goto label132;

     label133:
        $r105 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mPackageStats>;

        i95 = virtualinvoke $r105.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i95);

        if i95 <= 0 goto label140;

        $r106 = r262.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mPackageStats>;

        $r107 = virtualinvoke $r106.<android.util.ArrayMap: java.util.Set entrySet()>();

        r275 = interfaceinvoke $r107.<java.util.Set: java.util.Iterator iterator()>();

     label134:
        $z8 = interfaceinvoke r275.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label139;

        $r108 = interfaceinvoke r275.<java.util.Iterator: java.lang.Object next()>();

        r276 = (java.util.Map$Entry) $r108;

        $r109 = interfaceinvoke r276.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r110 = (java.lang.String) $r109;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r110);

        $r111 = interfaceinvoke r276.<java.util.Map$Entry: java.lang.Object getValue()>();

        r277 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r111;

        $r112 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mWakeupAlarms>;

        i96 = virtualinvoke $r112.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i96);

        i97 = 0;

     label135:
        if i97 >= i96 goto label136;

        $r120 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mWakeupAlarms>;

        $r121 = virtualinvoke $r120.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i97);

        $r122 = (java.lang.String) $r121;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r122);

        $r123 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mWakeupAlarms>;

        $r124 = virtualinvoke $r123.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i97);

        $r125 = (com.android.internal.os.BatteryStatsImpl$Counter) $r124;

        virtualinvoke $r125.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i97 = i97 + 1;

        goto label135;

     label136:
        $r113 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mServiceStats>;

        i98 = virtualinvoke $r113.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i98);

        i99 = 0;

     label137:
        if i99 >= i98 goto label138;

        $r114 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mServiceStats>;

        $r115 = virtualinvoke $r114.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i99);

        $r116 = (java.lang.String) $r115;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r116);

        $r117 = r277.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: android.util.ArrayMap mServiceStats>;

        $r118 = virtualinvoke $r117.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i99);

        r278 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv) $r118;

        $r119 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l39 = virtualinvoke $r119.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>(l0);

        $l40 = virtualinvoke r278.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>($l39);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l40);

        $i41 = r278.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i41);

        $i42 = r278.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i42);

        i99 = i99 + 1;

        goto label137;

     label138:
        goto label134;

     label139:
        goto label140;

     label140:
        i70 = i70 + 1;

        goto label044;

     label141:
        return;
    }

    public void writeSyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeStatsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryLocked(boolean)>(1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 1, i0);

        return;
    }

    void writeToParcelLocked(android.os.Parcel, boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long l0, l1, $l4, $l5, $l9, $l10, $l11, $l12, $l13, $l17, $l18, $l34, $l39;
        int i2, $i8, $i14, $i15, $i16, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, $i52, i53, i54, i55, i56, i57;
        com.android.internal.os.BatteryStatsImpl$Clocks $r2, $r3;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r4, $r5, $r9, $r10;
        com.android.internal.os.BatteryStatsHistory $r6;
        java.lang.String $r7, $r8, $r67, $r71, $r75, $r79;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r33, $r34, $r35, $r81, $r83, $r85, $r87, $r93, $r95, $r97;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r23, $r24, $r25, $r38, $r39, $r40, $r41, $r42, $r89, $r91;
        com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl $r30, $r31, $r32;
        android.os.BatteryStats$LevelStepTracker $r36, $r37;
        java.util.HashMap $r43, $r44, $r46, $r47, $r58, $r59, $r61, $r62;
        java.util.Set $r45, $r48, $r60, $r63;
        android.util.LongSparseArray $r49, $r55, $r57, $r110;
        android.util.SparseArray $r50, $r51, $r52;
        java.lang.Object $r53, $r56, $r64, $r65, $r66, $r68, $r69, $r70, $r72, $r73, $r74, $r76, $r77, $r78;
        com.android.internal.os.BatteryStatsImpl$Uid $r54;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r80, $r82, $r84, $r86, $r92, $r94, $r96;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r88, $r90;
        java.util.Iterator r98, r101, r104, r107;
        java.util.Map$Entry r99, r102, r105, r108;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r100, r103, r106, r109, r111;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        i42 := @parameter2: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l4 = interfaceinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Clocks: long uptimeMillis()>();

        l0 = $l4 * 1000L;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Clocks mClocks>;

        $l5 = interfaceinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Clocks: long elapsedRealtime()>();

        l1 = $l5 * 1000L;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l1);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1166707595);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryBuffer(android.os.Parcel,boolean,boolean)>(r1, 1, 0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsHistory mBatteryStatsHistory>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsHistory: void writeToParcel(android.os.Parcel)>(r1);

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l9);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $l10 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l10);

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l11);

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l12);

        $l13 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l13);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        i54 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i54);

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mEstimatedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinLearnedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i16 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxLearnedBatteryCapacity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeToParcel(android.os.Parcel,long,long)>(r1, l0, l1);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenDozeTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i43 = 0;

     label01:
        if i43 >= 5 goto label02;

        $r96 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r97 = $r96[i43];

        virtualinvoke $r97.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i43 = i43 + 1;

        goto label01;

     label02:
        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPowerSaveModeEnabledTimer>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $l17 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestLightIdleTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l17);

        $l18 = r0.<com.android.internal.os.BatteryStatsImpl: long mLongestFullIdleTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l18);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeLightTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdleModeFullTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceLightIdlingTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mDeviceIdlingTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i44 = 0;

     label03:
        $i19 = staticinvoke <android.telephony.CellSignalStrength: int getNumSignalStrengthLevels()>();

        if i44 >= $i19 goto label04;

        $r94 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r95 = $r94[i44];

        virtualinvoke $r95.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i44 = i44 + 1;

        goto label03;

     label04:
        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i45 = 0;

     label05:
        $i20 = <com.android.internal.os.BatteryStatsImpl: int NUM_DATA_CONNECTION_TYPES>;

        if i45 >= $i20 goto label06;

        $r92 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r93 = $r92[i45];

        virtualinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i45 = i45 + 1;

        goto label05;

     label06:
        i46 = 0;

     label07:
        if i46 >= 10 goto label08;

        $r88 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r89 = $r88[i46];

        virtualinvoke $r89.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r90 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r91 = $r90[i46];

        virtualinvoke $r91.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        i46 = i46 + 1;

        goto label07;

     label08:
        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastWakelockTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i47 = 0;

     label09:
        if i47 >= 8 goto label10;

        $r86 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r87 = $r86[i47];

        virtualinvoke $r87.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i47 = i47 + 1;

        goto label09;

     label10:
        i48 = 0;

     label11:
        if i48 >= 13 goto label12;

        $r84 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r85 = $r84[i48];

        virtualinvoke $r85.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i48 = i48 + 1;

        goto label11;

     label12:
        i49 = 0;

     label13:
        if i49 >= 5 goto label14;

        $r82 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r83 = $r82[i49];

        virtualinvoke $r83.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i49 = i49 + 1;

        goto label13;

     label14:
        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiActiveTimer>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mWifiActivity>;

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        i50 = 0;

     label15:
        if i50 >= 2 goto label16;

        $r80 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mGpsSignalQualityTimer>;

        $r81 = $r80[i50];

        virtualinvoke $r81.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i50 = i50 + 1;

        goto label15;

     label16:
        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mBluetoothActivity>;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl mModemActivity>;

        virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasWifiReporting>;

        i55 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasBluetoothReporting>;

        i56 = (int) $z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i56);

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHasModemReporting>;

        i57 = (int) $z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i57);

        $i21 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumConnectivityChange>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mCameraOnTimer>;

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothScanTimer>;

        virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        $i22 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i25 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $i26 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $i27 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $i29 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $i30 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $i32 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDoze>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $i33 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenDozeSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mDischargeStepTracker>;

        virtualinvoke $r36.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$LevelStepTracker mChargeStepTracker>;

        virtualinvoke $r37.<android.os.BatteryStats$LevelStepTracker: void writeToParcel(android.os.Parcel)>(r1);

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeCounter>;

        virtualinvoke $r38.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r39 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenOffCounter>;

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeScreenDozeCounter>;

        virtualinvoke $r40.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeLightDozeCounter>;

        virtualinvoke $r41.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mDischargeDeepDozeCounter>;

        virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $l34 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l34);

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $i35 = virtualinvoke $r43.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i35);

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mRpmStats>;

        $r45 = virtualinvoke $r44.<java.util.HashMap: java.util.Set entrySet()>();

        r98 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label20;

        $r76 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        r99 = (java.util.Map$Entry) $r76;

        $r77 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getValue()>();

        r100 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r77;

        if r100 == null goto label18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r78 = interfaceinvoke r99.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r79 = (java.lang.String) $r78;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r79);

        virtualinvoke r100.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label19;

     label18:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        goto label17;

     label20:
        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $i36 = virtualinvoke $r46.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i36);

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mScreenOffRpmStats>;

        $r48 = virtualinvoke $r47.<java.util.HashMap: java.util.Set entrySet()>();

        r101 = interfaceinvoke $r48.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z6 = interfaceinvoke r101.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label24;

        $r72 = interfaceinvoke r101.<java.util.Iterator: java.lang.Object next()>();

        r102 = (java.util.Map$Entry) $r72;

        $r73 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getValue()>();

        r103 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r73;

        if r103 == null goto label22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r74 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r75 = (java.lang.String) $r74;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r75);

        virtualinvoke r103.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label23;

     label22:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label23:
        goto label21;

     label24:
        if z0 == 0 goto label33;

        $r58 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i40 = virtualinvoke $r58.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i40);

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r60 = virtualinvoke $r59.<java.util.HashMap: java.util.Set entrySet()>();

        r104 = interfaceinvoke $r60.<java.util.Set: java.util.Iterator iterator()>();

     label25:
        $z7 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label28;

        $r68 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        r105 = (java.util.Map$Entry) $r68;

        $r69 = interfaceinvoke r105.<java.util.Map$Entry: java.lang.Object getValue()>();

        r106 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r69;

        if r106 == null goto label26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r70 = interfaceinvoke r105.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r71 = (java.lang.String) $r70;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r71);

        virtualinvoke r106.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label27;

     label26:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label27:
        goto label25;

     label28:
        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i41 = virtualinvoke $r61.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i41);

        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r63 = virtualinvoke $r62.<java.util.HashMap: java.util.Set entrySet()>();

        r107 = interfaceinvoke $r63.<java.util.Set: java.util.Iterator iterator()>();

     label29:
        $z8 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label32;

        $r64 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>();

        r108 = (java.util.Map$Entry) $r64;

        $r65 = interfaceinvoke r108.<java.util.Map$Entry: java.lang.Object getValue()>();

        r109 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r65;

        if r109 == null goto label30;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r66 = interfaceinvoke r108.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r67 = (java.lang.String) $r66;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r67);

        virtualinvoke r109.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label31;

     label30:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label31:
        goto label29;

     label32:
        goto label34;

     label33:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label34:
        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i37 = virtualinvoke $r49.<android.util.LongSparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i37);

        i51 = 0;

     label35:
        $r110 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $i52 = virtualinvoke $r110.<android.util.LongSparseArray: int size()>();

        if i51 >= $i52 goto label38;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $r56 = virtualinvoke $r55.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i51);

        r111 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r56;

        if r111 == null goto label36;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.LongSparseArray mKernelMemoryStats>;

        $l39 = virtualinvoke $r57.<android.util.LongSparseArray: long keyAt(int)>(i51);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l39);

        virtualinvoke r111.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label37;

     label36:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label37:
        i51 = i51 + 1;

        goto label35;

     label38:
        if z0 == 0 goto label41;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i2 = virtualinvoke $r50.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        i53 = 0;

     label39:
        if i53 >= i2 goto label40;

        $r51 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i38 = virtualinvoke $r51.<android.util.SparseArray: int keyAt(int)>(i53);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i38);

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r53 = virtualinvoke $r52.<android.util.SparseArray: java.lang.Object valueAt(int)>(i53);

        $r54 = (com.android.internal.os.BatteryStatsImpl$Uid) $r53;

        virtualinvoke $r54.<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long,long)>(r1, l0, l1);

        i53 = i53 + 1;

        goto label39;

     label40:
        goto label42;

     label41:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label42:
        return;
    }

    public void writeToParcelWithoutUids(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 0, i0);

        return;
    }
}
