public class com.android.internal.os.BinderCallsStats extends java.lang.Object implements com.android.internal.os.BinderInternal$Observer
{
    private static final int CALL_SESSIONS_POOL_SIZE;
    private static final java.lang.String DEBUG_ENTRY_PREFIX;
    public static final boolean DEFAULT_TRACK_DIRECT_CALLING_UID;
    public static final boolean DEFAULT_TRACK_SCREEN_INTERACTIVE;
    public static final boolean DETAILED_TRACKING_DEFAULT;
    public static final boolean ENABLED_DEFAULT;
    private static final java.lang.String EXCEPTION_COUNT_OVERFLOW_NAME;
    public static final int MAX_BINDER_CALL_STATS_COUNT_DEFAULT;
    private static final int MAX_EXCEPTION_COUNT_SIZE;
    private static final java.lang.Class OVERFLOW_BINDER;
    private static final int OVERFLOW_DIRECT_CALLING_UID;
    private static final boolean OVERFLOW_SCREEN_INTERACTIVE;
    private static final int OVERFLOW_TRANSACTION_CODE;
    public static final int PERIODIC_SAMPLING_INTERVAL_DEFAULT;
    private static final java.lang.String TAG;
    private boolean mAddDebugEntries;
    private com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch;
    private final java.util.Queue mCallSessionsPool;
    private long mCallStatsCount;
    private boolean mDetailedTracking;
    private com.android.internal.os.CachedDeviceState$Readonly mDeviceState;
    private final android.util.ArrayMap mExceptionCounts;
    private final java.lang.Object mLock;
    private int mMaxBinderCallStatsCount;
    private int mPeriodicSamplingInterval;
    private final java.util.Random mRandom;
    private long mStartCurrentTime;
    private long mStartElapsedTime;
    private boolean mTrackDirectCallingUid;
    private boolean mTrackScreenInteractive;
    private final android.util.SparseArray mUidEntries;

    static void <clinit>()
    {
        <com.android.internal.os.BinderCallsStats: java.lang.String TAG> = "BinderCallsStats";

        <com.android.internal.os.BinderCallsStats: int PERIODIC_SAMPLING_INTERVAL_DEFAULT> = 1000;

        <com.android.internal.os.BinderCallsStats: int OVERFLOW_TRANSACTION_CODE> = -1;

        <com.android.internal.os.BinderCallsStats: boolean OVERFLOW_SCREEN_INTERACTIVE> = 0;

        <com.android.internal.os.BinderCallsStats: int OVERFLOW_DIRECT_CALLING_UID> = -1;

        <com.android.internal.os.BinderCallsStats: int MAX_EXCEPTION_COUNT_SIZE> = 50;

        <com.android.internal.os.BinderCallsStats: int MAX_BINDER_CALL_STATS_COUNT_DEFAULT> = 1500;

        <com.android.internal.os.BinderCallsStats: java.lang.String EXCEPTION_COUNT_OVERFLOW_NAME> = "overflow";

        <com.android.internal.os.BinderCallsStats: boolean ENABLED_DEFAULT> = 1;

        <com.android.internal.os.BinderCallsStats: boolean DETAILED_TRACKING_DEFAULT> = 1;

        <com.android.internal.os.BinderCallsStats: boolean DEFAULT_TRACK_SCREEN_INTERACTIVE> = 0;

        <com.android.internal.os.BinderCallsStats: boolean DEFAULT_TRACK_DIRECT_CALLING_UID> = 1;

        <com.android.internal.os.BinderCallsStats: java.lang.String DEBUG_ENTRY_PREFIX> = "__DEBUG_";

        <com.android.internal.os.BinderCallsStats: int CALL_SESSIONS_POOL_SIZE> = 100;

        <com.android.internal.os.BinderCallsStats: java.lang.Class OVERFLOW_BINDER> = class "Lcom/android/internal/os/BinderCallsStats$OverflowBinder;";

        return;
    }

    public void <init>(com.android.internal.os.BinderCallsStats$Injector)
    {
        com.android.internal.os.BinderCallsStats r0;
        com.android.internal.os.BinderCallsStats$Injector r1;
        android.util.SparseArray $r2;
        android.util.ArrayMap $r3;
        java.util.concurrent.ConcurrentLinkedQueue $r4;
        java.lang.Object $r5;
        long $l0, $l1;
        java.util.Random $r6;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: com.android.internal.os.BinderCallsStats$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking> = 1;

        r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval> = 1000;

        r0.<com.android.internal.os.BinderCallsStats: int mMaxBinderCallStatsCount> = 1500;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts> = $r3;

        $r4 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.android.internal.os.BinderCallsStats: java.util.Queue mCallSessionsPool> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock> = $r5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BinderCallsStats: long mStartCurrentTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.BinderCallsStats: long mStartElapsedTime> = $l1;

        r0.<com.android.internal.os.BinderCallsStats: long mCallStatsCount> = 0L;

        r0.<com.android.internal.os.BinderCallsStats: boolean mAddDebugEntries> = 0;

        r0.<com.android.internal.os.BinderCallsStats: boolean mTrackDirectCallingUid> = 1;

        r0.<com.android.internal.os.BinderCallsStats: boolean mTrackScreenInteractive> = 0;

        $r6 = virtualinvoke r1.<com.android.internal.os.BinderCallsStats$Injector: java.util.Random getRandomGenerator()>();

        r0.<com.android.internal.os.BinderCallsStats: java.util.Random mRandom> = $r6;

        return;
    }

    static java.lang.Class access$100()
    {
        java.lang.Class $r0;

        $r0 = <com.android.internal.os.BinderCallsStats: java.lang.Class OVERFLOW_BINDER>;

        return $r0;
    }

    private static int compareByBinderClassAndCode(com.android.internal.os.BinderCallsStats$ExportedCallStat, com.android.internal.os.BinderCallsStats$ExportedCallStat)
    {
        com.android.internal.os.BinderCallsStats$ExportedCallStat r0, r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, i2;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        r1 := @parameter1: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        $r3 = r0.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String className>;

        $r2 = r1.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String className>;

        i2 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if i2 == 0 goto label1;

        goto label2;

     label1:
        $i1 = r0.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int transactionCode>;

        $i0 = r1.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int transactionCode>;

        i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

     label2:
        return i2;
    }

    private static int compareByCpuDesc(com.android.internal.os.BinderCallsStats$ExportedCallStat, com.android.internal.os.BinderCallsStats$ExportedCallStat)
    {
        com.android.internal.os.BinderCallsStats$ExportedCallStat r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        r1 := @parameter1: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        $l1 = r1.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long cpuTimeMicros>;

        $l0 = r0.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long cpuTimeMicros>;

        $i2 = staticinvoke <java.lang.Long: int compare(long,long)>($l1, $l0);

        return $i2;
    }

    private com.android.internal.os.BinderCallsStats$ExportedCallStat createDebugEntry(java.lang.String, long)
    {
        com.android.internal.os.BinderCallsStats r0;
        java.lang.String r1, $r8;
        long l0;
        int i1;
        com.android.internal.os.BinderCallsStats$ExportedCallStat $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 = staticinvoke <android.os.Process: int myUid()>();

        $r4 = new com.android.internal.os.BinderCallsStats$ExportedCallStat;

        specialinvoke $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: void <init>()>();

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String className> = "";

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int workSourceUid> = i1;

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int callingUid> = i1;

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long recordedCallCount> = 1L;

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long callCount> = 1L;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__DEBUG_");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String methodName> = $r8;

        $r4.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long latencyMicros> = l0;

        return $r4;
    }

    private void dumpLocked(java.io.PrintWriter, com.android.internal.os.AppIdToPackageMap, boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9;
        int i0, $i2, $i3, $i4, $i9, $i10, i24;
        long $l1, $l5, $l6, $l7, $l8, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, l20, l21, l23, l25, l27, l28, l29;
        java.lang.CharSequence $r3;
        java.lang.String $r7, $r18, $r24, $r30, $r41, $r48, $r50, $r52, $r55, $r58, $r61, r91, r104;
        android.util.SparseArray $r9, $r83;
        com.android.internal.os.'-$$Lambda$BinderCallsStats$iPOmTqbqUiHzgsAugINuZgf9tls' $r10;
        java.util.Comparator $r11, $r12, r116, r119;
        com.android.internal.os.'-$$Lambda$BinderCallsStats$233x_Qux4c_AiqShYaWwvFplEXs' $r19;
        com.android.internal.os.'-$$Lambda$BinderCallsStats$xI0E0RpviGYsokEB7ojNx8LEbUc' $r25;
        java.lang.Object[] $r26, $r38, $r43;
        java.lang.Long $r27, $r28, $r44, $r46, $r47;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.Double $r29, $r45;
        android.util.ArrayMap $r32;
        java.util.Set $r33;
        java.util.Iterator $r34, r95, r99, r106;
        com.android.internal.os.'-$$Lambda$BinderCallsStats$-YP-7pwoNn8TN0iTmo5Q1r2lQz0' $r36;
        java.lang.Object $r37, $r39, $r40, $r42, $r49, $r84, r98;
        com.android.internal.os.AppIdToPackageMap r85;
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r87;
        com.android.internal.os.BinderCallsStats$UidEntry r89, r103;
        java.util.ArrayList r94, r109, r113;
        com.android.internal.os.BinderCallsStats$ExportedCallStat r96;
        android.util.Pair r107;
        java.lang.StringBuilder r108, r110, r111, r112;
        com.android.internal.os._$$Lambda$BinderCallsStats$Vota0PqfoPWckjXH35wE48myGdk r114;
        java.util.function.ToDoubleFunction r115, r117;
        java.util.List r118;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: java.io.PrintWriter;

        r85 := @parameter1: com.android.internal.os.AppIdToPackageMap;

        z0 := @parameter2: boolean;

        l20 = 0L;

        l21 = 0L;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Start time: ");

        $l1 = r0.<com.android.internal.os.BinderCallsStats: long mStartCurrentTime>;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd HH:mm:ss", $l1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("On battery time (ms): ");

        r87 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        if r87 == null goto label01;

        l23 = virtualinvoke r87.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long getMillis()>();

        goto label02;

     label01:
        l23 = 0L;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l23);

        r108 = new java.lang.StringBuilder;

        specialinvoke r108.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sampling interval period: ");

        $i2 = r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval>;

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r109 = new java.util.ArrayList;

        specialinvoke r109.<java.util.ArrayList: void <init>()>();

        $r9 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        i0 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i24 = 0;

        l25 = 0L;

     label03:
        if i24 >= i0 goto label04;

        $r83 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        $r84 = virtualinvoke $r83.<android.util.SparseArray: java.lang.Object valueAt(int)>(i24);

        r89 = (com.android.internal.os.BinderCallsStats$UidEntry) $r84;

        interfaceinvoke r109.<java.util.List: boolean add(java.lang.Object)>(r89);

        $l17 = r89.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        l25 = l25 + $l17;

        $l18 = r89.<com.android.internal.os.BinderCallsStats$UidEntry: long recordedCallCount>;

        l21 = l21 + $l18;

        $l19 = r89.<com.android.internal.os.BinderCallsStats$UidEntry: long callCount>;

        l20 = l20 + $l19;

        i24 = i24 + 1;

        goto label03;

     label04:
        $r10 = <com.android.internal.os._$$Lambda$BinderCallsStats$iPOmTqbqUiHzgsAugINuZgf9tls: com.android.internal.os.'-$$Lambda$BinderCallsStats$iPOmTqbqUiHzgsAugINuZgf9tls' INSTANCE>;

        r115 = (java.util.function.ToDoubleFunction) $r10;

        $r11 = staticinvoke <java.util.Comparator: java.util.Comparator comparingDouble(java.util.function.ToDoubleFunction)>(r115);

        $r12 = interfaceinvoke $r11.<java.util.Comparator: java.util.Comparator reversed()>();

        interfaceinvoke r109.<java.util.List: void sort(java.util.Comparator)>($r12);

        if z0 == 0 goto label05;

        r91 = "";

        goto label06;

     label05:
        r91 = "(top 90% by cpu time) ";

     label06:
        r110 = new java.lang.StringBuilder;

        specialinvoke r110.<java.lang.StringBuilder: void <init>()>();

        r111 = new java.lang.StringBuilder;

        specialinvoke r111.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Per-UID raw data ");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(package/uid, worksource, call_desc, screen_interactive, cpu_time_micros, max_cpu_time_micros, latency_time_micros, max_latency_time_micros, exception_count, max_request_size_bytes, max_reply_size_bytes, recorded_call_count, call_count):");

        $r18 = virtualinvoke r111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        r94 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: java.util.ArrayList getExportedCallStats()>();

        $r19 = <com.android.internal.os._$$Lambda$BinderCallsStats$233x_Qux4c_AiqShYaWwvFplEXs: com.android.internal.os.'-$$Lambda$BinderCallsStats$233x_Qux4c_AiqShYaWwvFplEXs' INSTANCE>;

        r116 = (java.util.Comparator) $r19;

        interfaceinvoke r94.<java.util.List: void sort(java.util.Comparator)>(r116);

        r95 = interfaceinvoke r94.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z8 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r49 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        r96 = (com.android.internal.os.BinderCallsStats$ExportedCallStat) $r49;

        $r50 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String methodName>;

        $z2 = virtualinvoke $r50.<java.lang.String: boolean startsWith(java.lang.String)>("__DEBUG_");

        if $z2 == 0 goto label08;

        goto label07;

     label08:
        virtualinvoke r110.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $i9 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int callingUid>;

        $r52 = virtualinvoke r85.<com.android.internal.os.AppIdToPackageMap: java.lang.String mapUid(int)>($i9);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i10 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int workSourceUid>;

        $r55 = virtualinvoke r85.<com.android.internal.os.AppIdToPackageMap: java.lang.String mapUid(int)>($i10);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r58 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String className>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r61 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String methodName>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $z3 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: boolean screenInteractive>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l11 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long cpuTimeMicros>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l12 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxCpuTimeMicros>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l13 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long latencyMicros>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l14 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxLatencyMicros>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $z4 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if $z4 == 0 goto label09;

        l27 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long exceptionCount>;

        goto label10;

     label09:
        l27 = 95L;

     label10:
        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l27);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $z5 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if $z5 == 0 goto label11;

        l28 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxRequestSizeBytes>;

        goto label12;

     label11:
        l28 = 95L;

     label12:
        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l28);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $z6 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if $z6 == 0 goto label13;

        l29 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxReplySizeBytes>;

        goto label14;

     label13:
        l29 = 95L;

     label14:
        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l15 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long recordedCallCount>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l16 = r96.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long callCount>;

        virtualinvoke r110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r110);

        goto label07;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        r112 = new java.lang.StringBuilder;

        specialinvoke r112.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Per-UID Summary ");

        virtualinvoke r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        virtualinvoke r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(cpu_time, % of total cpu_time, recorded_call_count, call_count, package/uid):");

        $r24 = virtualinvoke r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        if z0 == 0 goto label16;

        r98 = r109;

        goto label17;

     label16:
        $r25 = <com.android.internal.os._$$Lambda$BinderCallsStats$xI0E0RpviGYsokEB7ojNx8LEbUc: com.android.internal.os.'-$$Lambda$BinderCallsStats$xI0E0RpviGYsokEB7ojNx8LEbUc' INSTANCE>;

        r117 = (java.util.function.ToDoubleFunction) $r25;

        r98 = staticinvoke <com.android.internal.os.BinderCallsStats: java.util.List getHighestValues(java.util.List,java.util.function.ToDoubleFunction,double)>(r109, r117, 0.9);

     label17:
        r118 = (java.util.List) r98;

        r99 = interfaceinvoke r118.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z9 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label19;

        $r42 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>();

        r103 = (com.android.internal.os.BinderCallsStats$UidEntry) $r42;

        $i4 = r103.<com.android.internal.os.BinderCallsStats$UidEntry: int workSourceUid>;

        r104 = virtualinvoke r85.<com.android.internal.os.AppIdToPackageMap: java.lang.String mapUid(int)>($i4);

        $r43 = newarray (java.lang.Object)[5];

        $l5 = r103.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r43[0] = $r44;

        $l6 = r103.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        $d3 = (double) $l6;

        $d5 = $d3 * 100.0;

        $d4 = (double) l25;

        $d6 = $d5 / $d4;

        $r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r43[1] = $r45;

        $l7 = r103.<com.android.internal.os.BinderCallsStats$UidEntry: long recordedCallCount>;

        $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r43[2] = $r46;

        $l8 = r103.<com.android.internal.os.BinderCallsStats$UidEntry: long callCount>;

        $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        $r43[3] = $r47;

        $r43[4] = r104;

        $r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %10d %3.0f%% %8d %8d %s", $r43);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        goto label18;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r26 = newarray (java.lang.Object)[3];

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l25);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l20);

        $r26[1] = $r28;

        $d1 = (double) l25;

        $d0 = (double) l21;

        $d2 = $d1 / $d0;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r26[2] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Summary: total_cpu_time=%d, calls_count=%d, avg_call_cpu_time=%.0f", $r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Exceptions thrown (exception_count, class_name):");

        r113 = new java.util.ArrayList;

        specialinvoke r113.<java.util.ArrayList: void <init>()>();

        $r32 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        $r33 = virtualinvoke $r32.<android.util.ArrayMap: java.util.Set entrySet()>();

        $r34 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

        r114 = new com.android.internal.os._$$Lambda$BinderCallsStats$Vota0PqfoPWckjXH35wE48myGdk;

        specialinvoke r114.<com.android.internal.os._$$Lambda$BinderCallsStats$Vota0PqfoPWckjXH35wE48myGdk: void <init>(java.util.List)>(r113);

        interfaceinvoke $r34.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>(r114);

        $r36 = <com.android.internal.os._$$Lambda$BinderCallsStats$_YP_7pwoNn8TN0iTmo5Q1r2lQz0: com.android.internal.os.'-$$Lambda$BinderCallsStats$-YP-7pwoNn8TN0iTmo5Q1r2lQz0' INSTANCE>;

        r119 = (java.util.Comparator) $r36;

        interfaceinvoke r113.<java.util.List: void sort(java.util.Comparator)>(r119);

        r106 = interfaceinvoke r113.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z1 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r37 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>();

        r107 = (android.util.Pair) $r37;

        $r38 = newarray (java.lang.Object)[2];

        $r39 = r107.<android.util.Pair: java.lang.Object second>;

        $r38[0] = $r39;

        $r40 = r107.<android.util.Pair: java.lang.Object first>;

        $r38[1] = $r40;

        $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %6d %s", $r38);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        goto label20;

     label21:
        $i3 = r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval>;

        if $i3 == 1 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("/!\\ Displayed data is sampled. See sampling interval at the top.");

     label22:
        return;
    }

    private java.lang.reflect.Method getDefaultTransactionNameMethod(java.lang.Class)
    {
        com.android.internal.os.BinderCallsStats r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2, r4;
        java.lang.Throwable $r3;
        java.lang.reflect.Method r5;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r4 := @parameter0: java.lang.Class;

     label1:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[0] = $r2;

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDefaultTransactionName", $r1);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public static java.util.List getHighestValues(java.util.List, java.util.function.ToDoubleFunction, double)
    {
        java.util.function.ToDoubleFunction r0;
        double d0, $d1, $d2, $d3, d4, d5;
        java.util.Iterator r1, r9;
        java.util.ArrayList $r2, $r5;
        java.util.Comparator $r3, $r4;
        boolean $z0, $z1;
        byte $b0;
        java.lang.Object $r6, r11;
        java.util.List r7;

        r7 := @parameter0: java.util.List;

        r0 := @parameter1: java.util.function.ToDoubleFunction;

        d0 := @parameter2: double;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r7);

        $r3 = staticinvoke <java.util.Comparator: java.util.Comparator comparingDouble(java.util.function.ToDoubleFunction)>(r0);

        $r4 = interfaceinvoke $r3.<java.util.Comparator: java.util.Comparator reversed()>();

        interfaceinvoke $r2.<java.util.List: void sort(java.util.Comparator)>($r4);

        d4 = 0.0;

        r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $d3 = interfaceinvoke r0.<java.util.function.ToDoubleFunction: double applyAsDouble(java.lang.Object)>($r6);

        d4 = d4 + $d3;

        goto label1;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        d5 = 0.0;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $d1 = d0 * d4;

        $b0 = d5 cmpl $d1;

        if $b0 <= 0 goto label4;

        goto label5;

     label4:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        $d2 = interfaceinvoke r0.<java.util.function.ToDoubleFunction: double applyAsDouble(java.lang.Object)>(r11);

        d5 = d5 + $d2;

        goto label3;

     label5:
        return $r5;
    }

    private com.android.internal.os.BinderCallsStats$UidEntry getUidEntry(int)
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0;
        com.android.internal.os.BinderCallsStats$UidEntry r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BinderCallsStats$UidEntry) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.internal.os.BinderCallsStats$UidEntry;

        specialinvoke $r4.<com.android.internal.os.BinderCallsStats$UidEntry: void <init>(int)>(i0);

        r6 = $r4;

        $r5 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    public static int lambda$233x_Qux4c_AiqShYaWwvFplEXs(com.android.internal.os.BinderCallsStats$ExportedCallStat, com.android.internal.os.BinderCallsStats$ExportedCallStat)
    {
        com.android.internal.os.BinderCallsStats$ExportedCallStat r0, r1;
        int $i0;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        r1 := @parameter1: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        $i0 = staticinvoke <com.android.internal.os.BinderCallsStats: int compareByCpuDesc(com.android.internal.os.BinderCallsStats$ExportedCallStat,com.android.internal.os.BinderCallsStats$ExportedCallStat)>(r0, r1);

        return $i0;
    }

    static double lambda$dumpLocked$0(com.android.internal.os.BinderCallsStats$UidEntry)
    {
        com.android.internal.os.BinderCallsStats$UidEntry r0;
        long $l0;
        double $d0;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$UidEntry;

        $l0 = r0.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        $d0 = (double) $l0;

        return $d0;
    }

    static double lambda$dumpLocked$1(com.android.internal.os.BinderCallsStats$UidEntry)
    {
        com.android.internal.os.BinderCallsStats$UidEntry r0;
        long $l0;
        double $d0;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$UidEntry;

        $l0 = r0.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        $d0 = (double) $l0;

        return $d0;
    }

    static void lambda$dumpLocked$2(java.util.List, java.util.Map$Entry)
    {
        java.util.List r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        java.lang.Integer $r5;
        android.util.Pair $r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.Integer) $r4;

        $r6 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r3, $r5);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    static int lambda$dumpLocked$3(android.util.Pair, android.util.Pair)
    {
        android.util.Pair r0, r1;
        java.lang.Object $r2, $r4;
        java.lang.Integer $r3, $r5;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.util.Pair;

        r1 := @parameter1: android.util.Pair;

        $r2 = r1.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = r0.<android.util.Pair: java.lang.Object second>;

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i0, $i1);

        return $i2;
    }

    public static int lambda$sqXweH5BoxhmZvI188ctqYiACRk(com.android.internal.os.BinderCallsStats$ExportedCallStat, com.android.internal.os.BinderCallsStats$ExportedCallStat)
    {
        com.android.internal.os.BinderCallsStats$ExportedCallStat r0, r1;
        int $i0;

        r0 := @parameter0: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        r1 := @parameter1: com.android.internal.os.BinderCallsStats$ExportedCallStat;

        $i0 = staticinvoke <com.android.internal.os.BinderCallsStats: int compareByBinderClassAndCode(com.android.internal.os.BinderCallsStats$ExportedCallStat,com.android.internal.os.BinderCallsStats$ExportedCallStat)>(r0, r1);

        return $i0;
    }

    private com.android.internal.os.BinderInternal$CallSession obtainCallSession()
    {
        com.android.internal.os.BinderCallsStats r0;
        java.util.Queue $r1;
        java.lang.Object $r2;
        com.android.internal.os.BinderInternal$CallSession $r3, r4;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $r1 = r0.<com.android.internal.os.BinderCallsStats: java.util.Queue mCallSessionsPool>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        r4 = (com.android.internal.os.BinderInternal$CallSession) $r2;

        if r4 != null goto label1;

        $r3 = new com.android.internal.os.BinderInternal$CallSession;

        specialinvoke $r3.<com.android.internal.os.BinderInternal$CallSession: void <init>()>();

        r4 = $r3;

        goto label1;

     label1:
        return r4;
    }

    private void processCallEnded(com.android.internal.os.BinderInternal$CallSession, int, int, int)
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0, i1, $i6, i37, i40, i42, i44;
        com.android.internal.os.BinderCallsStats$UidEntry r1;
        long $l3, $l5, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, l38, l39, l41, l43, l45, l46, l47, l48, l49, l50, l51;
        byte $b4, $b14, $b15;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8;
        com.android.internal.os.CachedDeviceState$Readonly $r2, $r3, $r5;
        java.lang.Class $r4, r14;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, r17;
        com.android.internal.os.BinderInternal$CallSession r12;
        java.lang.Object r13, r15;
        com.android.internal.os.BinderCallsStats$CallStat r16, r19;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r12 := @parameter0: com.android.internal.os.BinderInternal$CallSession;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i37 := @parameter3: int;

        $l3 = r12.<com.android.internal.os.BinderInternal$CallSession: long cpuTimeStarted>;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label01;

        z5 = 1;

        goto label02;

     label01:
        z5 = 0;

     label02:
        if z5 == 0 goto label03;

        $l33 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: long getThreadTimeMicro()>();

        $l34 = r12.<com.android.internal.os.BinderInternal$CallSession: long cpuTimeStarted>;

        l38 = $l33 - $l34;

        $l35 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: long getElapsedRealtimeMicro()>();

        $l36 = r12.<com.android.internal.os.BinderInternal$CallSession: long timeStarted>;

        l39 = $l35 - $l36;

        goto label04;

     label03:
        l38 = 0L;

        l39 = 0L;

     label04:
        $z0 = r0.<com.android.internal.os.BinderCallsStats: boolean mTrackScreenInteractive>;

        if $z0 == 0 goto label05;

        $r5 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$Readonly mDeviceState>;

        z6 = virtualinvoke $r5.<com.android.internal.os.CachedDeviceState$Readonly: boolean isScreenInteractive()>();

        goto label06;

     label05:
        z6 = 0;

     label06:
        $z1 = r0.<com.android.internal.os.BinderCallsStats: boolean mTrackDirectCallingUid>;

        if $z1 == 0 goto label07;

        i40 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: int getCallingUid()>();

        goto label08;

     label07:
        i40 = -1;

     label08:
        r13 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r13;

     label09:
        $r2 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$Readonly mDeviceState>;

        if $r2 == null goto label46;

        $r3 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$Readonly mDeviceState>;

        $z2 = virtualinvoke $r3.<com.android.internal.os.CachedDeviceState$Readonly: boolean isCharging()>();

        if $z2 == 0 goto label11;

     label10:
        goto label46;

     label11:
        r1 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderCallsStats$UidEntry getUidEntry(int)>(i37);

        l41 = r1.<com.android.internal.os.BinderCallsStats$UidEntry: long callCount>;

     label12:
        $l5 = l41 + 1L;

        r1.<com.android.internal.os.BinderCallsStats$UidEntry: long callCount> = $l5;

     label13:
        if z5 == 0 goto label39;

     label14:
        $l9 = r1.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros>;

        $l10 = $l9 + l38;

        r1.<com.android.internal.os.BinderCallsStats$UidEntry: long cpuTimeMicros> = $l10;

        $l11 = r1.<com.android.internal.os.BinderCallsStats$UidEntry: long recordedCallCount>;

        $l12 = $l11 + 1L;

        r1.<com.android.internal.os.BinderCallsStats$UidEntry: long recordedCallCount> = $l12;

        r14 = r12.<com.android.internal.os.BinderInternal$CallSession: java.lang.Class binderClass>;

        i42 = r12.<com.android.internal.os.BinderInternal$CallSession: int transactionCode>;

        l43 = r0.<com.android.internal.os.BinderCallsStats: long mCallStatsCount>;

     label15:
        i44 = r0.<com.android.internal.os.BinderCallsStats: int mMaxBinderCallStatsCount>;

     label16:
        $l13 = (long) i44;

        $b14 = l43 cmp $l13;

        if $b14 < 0 goto label17;

        z7 = 1;

        goto label18;

     label17:
        z7 = 0;

     label18:
        r15 = r13;

     label19:
        r16 = virtualinvoke r1.<com.android.internal.os.BinderCallsStats$UidEntry: com.android.internal.os.BinderCallsStats$CallStat getOrCreate(int,java.lang.Class,int,boolean,boolean)>(i40, r14, i42, z6, z7);

        l45 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long callCount>;

     label20:
        $b15 = l45 cmp 0L;

        if $b15 != 0 goto label21;

        z8 = 1;

        goto label22;

     label21:
        z8 = 0;

     label22:
        if z8 == 0 goto label26;

     label23:
        $l31 = r0.<com.android.internal.os.BinderCallsStats: long mCallStatsCount>;

        $l32 = $l31 + 1L;

        r0.<com.android.internal.os.BinderCallsStats: long mCallStatsCount> = $l32;

     label24:
        goto label26;

     label25:
        $r8 := @caughtexception;

        r17 = $r8;

        r13 = r15;

        goto label50;

     label26:
        $l16 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long callCount>;

        $l17 = $l16 + 1L;

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long callCount> = $l17;

        $l18 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long recordedCallCount>;

        $l19 = $l18 + 1L;

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long recordedCallCount> = $l19;

        $l20 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long cpuTimeMicros>;

        $l21 = $l20 + l38;

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long cpuTimeMicros> = $l21;

        $l22 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxCpuTimeMicros>;

        $l23 = staticinvoke <java.lang.Math: long max(long,long)>($l22, l38);

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxCpuTimeMicros> = $l23;

        $l24 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long latencyMicros>;

        $l25 = $l24 + l39;

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long latencyMicros> = $l25;

        $l26 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxLatencyMicros>;

        $l27 = staticinvoke <java.lang.Math: long max(long,long)>($l26, l39);

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxLatencyMicros> = $l27;

        $z3 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if $z3 == 0 goto label36;

        l46 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long exceptionCount>;

        $z4 = r12.<com.android.internal.os.BinderInternal$CallSession: boolean exceptionThrown>;

        if $z4 == 0 goto label28;

     label27:
        l47 = 1L;

        goto label29;

     label28:
        l47 = 0L;

     label29:
        $l28 = l46 + l47;

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long exceptionCount> = $l28;

        l48 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxRequestSizeBytes>;

     label30:
        l49 = (long) i0;

     label31:
        $l29 = staticinvoke <java.lang.Math: long max(long,long)>(l48, l49);

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxRequestSizeBytes> = $l29;

        l50 = r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxReplySizeBytes>;

     label32:
        l51 = (long) i1;

     label33:
        $l30 = staticinvoke <java.lang.Math: long max(long,long)>(l50, l51);

        r16.<com.android.internal.os.BinderCallsStats$CallStat: long maxReplySizeBytes> = $l30;

     label34:
        goto label36;

     label35:
        $r10 := @caughtexception;

        r17 = $r10;

        r13 = r15;

        goto label50;

     label36:
        goto label43;

     label37:
        $r7 := @caughtexception;

        r17 = $r7;

        r13 = r15;

        goto label50;

     label38:
        $r6 := @caughtexception;

        r17 = $r6;

        goto label50;

     label39:
        r15 = r13;

     label40:
        $r4 = r12.<com.android.internal.os.BinderInternal$CallSession: java.lang.Class binderClass>;

        $i6 = r12.<com.android.internal.os.BinderInternal$CallSession: int transactionCode>;

        r19 = virtualinvoke r1.<com.android.internal.os.BinderCallsStats$UidEntry: com.android.internal.os.BinderCallsStats$CallStat get(int,java.lang.Class,int,boolean)>(i40, $r4, $i6, z6);

     label41:
        if r19 == null goto label43;

        r15 = r13;

     label42:
        $l7 = r19.<com.android.internal.os.BinderCallsStats$CallStat: long callCount>;

        $l8 = $l7 + 1L;

        r19.<com.android.internal.os.BinderCallsStats$CallStat: long callCount> = $l8;

     label43:
        r15 = r13;

     label44:
        exitmonitor r13;

     label45:
        return;

     label46:
        r15 = r13;

     label47:
        exitmonitor r13;

     label48:
        return;

     label49:
        $r11 := @caughtexception;

        r17 = $r11;

     label50:
        r15 = r13;

     label51:
        exitmonitor r13;

     label52:
        throw r17;

     label53:
        $r9 := @caughtexception;

        r17 = $r9;

        r13 = r15;

        goto label50;

        catch java.lang.Throwable from label09 to label10 with label49;
        catch java.lang.Throwable from label11 to label12 with label49;
        catch java.lang.Throwable from label12 to label13 with label49;
        catch java.lang.Throwable from label14 to label15 with label49;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.lang.Throwable from label19 to label20 with label37;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label37;
        catch java.lang.Throwable from label29 to label30 with label37;
        catch java.lang.Throwable from label31 to label32 with label35;
        catch java.lang.Throwable from label33 to label34 with label53;
        catch java.lang.Throwable from label40 to label41 with label53;
        catch java.lang.Throwable from label42 to label43 with label53;
        catch java.lang.Throwable from label44 to label45 with label53;
        catch java.lang.Throwable from label47 to label48 with label53;
        catch java.lang.Throwable from label51 to label52 with label53;
    }

    private java.lang.String resolveTransactionCode(java.lang.reflect.Method, int)
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        java.lang.reflect.Method r6;
        java.lang.String r7;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r6 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        if r6 != null goto label1;

        return null;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        r7 = (java.lang.String) $r3;

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void callEnded(com.android.internal.os.BinderInternal$CallSession, int, int, int)
    {
        com.android.internal.os.BinderCallsStats r0;
        com.android.internal.os.BinderInternal$CallSession r1;
        int i0, i1, i2, $i3;
        java.util.Queue $r2, $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: com.android.internal.os.BinderInternal$CallSession;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.internal.os.BinderCallsStats: void processCallEnded(com.android.internal.os.BinderInternal$CallSession,int,int,int)>(r1, i0, i1, i2);

        $r2 = r0.<com.android.internal.os.BinderCallsStats: java.util.Queue mCallSessionsPool>;

        $i3 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if $i3 >= 100 goto label2;

        $r3 = r0.<com.android.internal.os.BinderCallsStats: java.util.Queue mCallSessionsPool>;

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    public com.android.internal.os.BinderInternal$CallSession callStarted(android.os.Binder, int, int)
    {
        com.android.internal.os.BinderCallsStats r0;
        android.os.Binder r1;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.Class $r2;
        long $l2, $l3;
        com.android.internal.os.CachedDeviceState$Readonly r3;
        com.android.internal.os.BinderInternal$CallSession r4;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: android.os.Binder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$Readonly mDeviceState>;

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<com.android.internal.os.CachedDeviceState$Readonly: boolean isCharging()>();

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        r4 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderInternal$CallSession obtainCallSession()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r4.<com.android.internal.os.BinderInternal$CallSession: java.lang.Class binderClass> = $r2;

        r4.<com.android.internal.os.BinderInternal$CallSession: int transactionCode> = i0;

        r4.<com.android.internal.os.BinderInternal$CallSession: boolean exceptionThrown> = 0;

        r4.<com.android.internal.os.BinderInternal$CallSession: long cpuTimeStarted> = -1L;

        r4.<com.android.internal.os.BinderInternal$CallSession: long timeStarted> = -1L;

        $z1 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: boolean shouldRecordDetailedData()>();

        if $z1 == 0 goto label2;

        $l2 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: long getThreadTimeMicro()>();

        r4.<com.android.internal.os.BinderInternal$CallSession: long cpuTimeStarted> = $l2;

        $l3 = virtualinvoke r0.<com.android.internal.os.BinderCallsStats: long getElapsedRealtimeMicro()>();

        r4.<com.android.internal.os.BinderInternal$CallSession: long timeStarted> = $l3;

     label2:
        return r4;

     label3:
        return null;
    }

    public void callThrewException(com.android.internal.os.BinderInternal$CallSession, java.lang.Exception)
    {
        com.android.internal.os.BinderCallsStats r0;
        java.lang.Integer r1, $r7;
        android.util.ArrayMap r2, $r4, $r5;
        java.lang.Class $r3;
        int $i0, $i1, i3;
        java.lang.Object $r6, r14;
        java.lang.RuntimeException $r9;
        java.lang.Throwable $r10;
        com.android.internal.os.BinderInternal$CallSession r11;
        java.lang.Exception r12;
        java.lang.String r13;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r11 := @parameter0: com.android.internal.os.BinderInternal$CallSession;

        r12 := @parameter1: java.lang.Exception;

        if r11 != null goto label01;

        return;

     label01:
        i3 = 1;

        r11.<com.android.internal.os.BinderInternal$CallSession: boolean exceptionThrown> = 1;

     label02:
        $r3 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        r13 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        r14 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r14;

     label03:
        $r4 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i0 < 50 goto label05;

     label04:
        r13 = "overflow";

     label05:
        $r5 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r1 = (java.lang.Integer) $r6;

        r2 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

     label06:
        if r1 != null goto label07;

        goto label08;

     label07:
        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        i3 = 1 + $i1;

     label08:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r7);

     label09:
        exitmonitor r14;

     label10:
        goto label15;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r14;

     label13:
        throw $r10;

     label14:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BinderCallsStats", "Unexpected exception while updating mExceptionCounts");

     label15:
        return;

        catch java.lang.RuntimeException from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.RuntimeException from label13 to label14 with label14;
    }

    public void dump(java.io.PrintWriter, com.android.internal.os.AppIdToPackageMap, boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        com.android.internal.os.AppIdToPackageMap r1;
        boolean z0;
        java.lang.Object r2;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r4 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.os.AppIdToPackageMap;

        z0 := @parameter2: boolean;

        r2 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.internal.os.BinderCallsStats: void dumpLocked(java.io.PrintWriter,com.android.internal.os.AppIdToPackageMap,boolean)>(r4, r1, z0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected int getCallingUid()
    {
        com.android.internal.os.BinderCallsStats r0;
        int $i0;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        return $i0;
    }

    protected long getElapsedRealtimeMicro()
    {
        com.android.internal.os.BinderCallsStats r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l1 = $l0 / 1000L;

        return $l1;
    }

    public android.util.ArrayMap getExceptionCounts()
    {
        com.android.internal.os.BinderCallsStats r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $r1 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        return $r1;
    }

    public java.util.ArrayList getExportedCallStats()
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0, $i4, $i6, $i7, $i8, $i9, $i10, i20;
        boolean $z0, $z1, $z2, $z7, $z8;
        android.util.SparseArray $r3, $r15;
        com.android.internal.os.'-$$Lambda$BinderCallsStats$sqXweH5BoxhmZvI188ctqYiACRk' $r4;
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch $r5, $r8;
        long $l1, $l2, $l3, $l5, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19;
        com.android.internal.os.BinderCallsStats$ExportedCallStat $r6, $r7, $r9, $r10, r32, r37;
        java.lang.Object $r11, $r16, $r18, r24;
        java.lang.Class $r13, $r19, $r21;
        java.util.Collection $r17;
        java.lang.String $r20, r30;
        java.lang.Throwable $r23;
        com.android.internal.os.BinderCallsStats$UidEntry r25;
        java.util.Iterator r26, r31;
        com.android.internal.os.BinderCallsStats$CallStat r27;
        java.lang.reflect.Method r29;
        java.util.ArrayList r35, r36;
        java.util.Comparator r40;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $z0 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if $z0 != 0 goto label01;

        r35 = new java.util.ArrayList;

        specialinvoke r35.<java.util.ArrayList: void <init>()>();

        return r35;

     label01:
        r36 = new java.util.ArrayList;

        specialinvoke r36.<java.util.ArrayList: void <init>()>();

        r24 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r24;

     label02:
        $r3 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

     label03:
        i20 = 0;

     label04:
        if i20 >= i0 goto label09;

     label05:
        $r15 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i20);

        r25 = (com.android.internal.os.BinderCallsStats$UidEntry) $r16;

        $r17 = virtualinvoke r25.<com.android.internal.os.BinderCallsStats$UidEntry: java.util.Collection getCallStatsList()>();

        r26 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z7 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label08;

        $r18 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (com.android.internal.os.BinderCallsStats$CallStat) $r18;

        r37 = new com.android.internal.os.BinderCallsStats$ExportedCallStat;

        specialinvoke r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: void <init>()>();

        $i8 = r25.<com.android.internal.os.BinderCallsStats$UidEntry: int workSourceUid>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int workSourceUid> = $i8;

        $i9 = r27.<com.android.internal.os.BinderCallsStats$CallStat: int callingUid>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int callingUid> = $i9;

        $r19 = r27.<com.android.internal.os.BinderCallsStats$CallStat: java.lang.Class binderClass>;

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String className> = $r20;

        $r21 = r27.<com.android.internal.os.BinderCallsStats$CallStat: java.lang.Class binderClass>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.Class binderClass> = $r21;

        $i10 = r27.<com.android.internal.os.BinderCallsStats$CallStat: int transactionCode>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int transactionCode> = $i10;

        $z8 = r27.<com.android.internal.os.BinderCallsStats$CallStat: boolean screenInteractive>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: boolean screenInteractive> = $z8;

        $l11 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long cpuTimeMicros>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long cpuTimeMicros> = $l11;

        $l12 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long maxCpuTimeMicros>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxCpuTimeMicros> = $l12;

        $l13 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long latencyMicros>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long latencyMicros> = $l13;

        $l14 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long maxLatencyMicros>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxLatencyMicros> = $l14;

        $l15 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long recordedCallCount>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long recordedCallCount> = $l15;

        $l16 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long callCount>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long callCount> = $l16;

        $l17 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long maxRequestSizeBytes>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxRequestSizeBytes> = $l17;

        $l18 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long maxReplySizeBytes>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long maxReplySizeBytes> = $l18;

        $l19 = r27.<com.android.internal.os.BinderCallsStats$CallStat: long exceptionCount>;

        r37.<com.android.internal.os.BinderCallsStats$ExportedCallStat: long exceptionCount> = $l19;

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r37);

     label07:
        goto label06;

     label08:
        i20 = i20 + 1;

        goto label04;

     label09:
        exitmonitor r24;

     label10:
        $r4 = <com.android.internal.os._$$Lambda$BinderCallsStats$sqXweH5BoxhmZvI188ctqYiACRk: com.android.internal.os.'-$$Lambda$BinderCallsStats$sqXweH5BoxhmZvI188ctqYiACRk' INSTANCE>;

        r40 = (java.util.Comparator) $r4;

        virtualinvoke r36.<java.util.ArrayList: void sort(java.util.Comparator)>(r40);

        r31 = virtualinvoke r36.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r11 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.android.internal.os.BinderCallsStats$ExportedCallStat) $r11;

        goto label12;

     label12:
        $r13 = r32.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.Class binderClass>;

        r29 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: java.lang.reflect.Method getDefaultTransactionNameMethod(java.lang.Class)>($r13);

        goto label13;

     label13:
        goto label14;

     label14:
        $i6 = r32.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int transactionCode>;

        r30 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: java.lang.String resolveTransactionCode(java.lang.reflect.Method,int)>(r29, $i6);

        if r30 != null goto label15;

        $i7 = r32.<com.android.internal.os.BinderCallsStats$ExportedCallStat: int transactionCode>;

        r30 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);

        goto label15;

     label15:
        r32.<com.android.internal.os.BinderCallsStats$ExportedCallStat: java.lang.String methodName> = r30;

        goto label11;

     label16:
        $z2 = r0.<com.android.internal.os.BinderCallsStats: boolean mAddDebugEntries>;

        if $z2 == 0 goto label17;

        $r5 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        if $r5 == null goto label17;

        $l1 = r0.<com.android.internal.os.BinderCallsStats: long mStartElapsedTime>;

        $r6 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderCallsStats$ExportedCallStat createDebugEntry(java.lang.String,long)>("start_time_millis", $l1);

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r7 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderCallsStats$ExportedCallStat createDebugEntry(java.lang.String,long)>("end_time_millis", $l2);

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        $l3 = virtualinvoke $r8.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long getMillis()>();

        $r9 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderCallsStats$ExportedCallStat createDebugEntry(java.lang.String,long)>("battery_time_millis", $l3);

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $i4 = r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval>;

        $l5 = (long) $i4;

        $r10 = specialinvoke r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.BinderCallsStats$ExportedCallStat createDebugEntry(java.lang.String,long)>("sampling_interval", $l5);

        virtualinvoke r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label17:
        return r36;

     label18:
        $r23 := @caughtexception;

     label19:
        exitmonitor r24;

     label20:
        throw $r23;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public android.util.ArrayMap getExportedExceptionStats()
    {
        com.android.internal.os.BinderCallsStats r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r4 = new android.util.ArrayMap;

        $r2 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        specialinvoke r4.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected long getThreadTimeMicro()
    {
        com.android.internal.os.BinderCallsStats r0;
        long $l0;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $l0 = staticinvoke <android.os.SystemClock: long currentThreadTimeMicro()>();

        return $l0;
    }

    public android.util.SparseArray getUidEntries()
    {
        com.android.internal.os.BinderCallsStats r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $r1 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        return $r1;
    }

    public void reset()
    {
        com.android.internal.os.BinderCallsStats r0;
        java.lang.Object r1;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r4;
        long $l0, $l1;
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.os.BinderCallsStats: long mCallStatsCount> = 0L;

        $r3 = r0.<com.android.internal.os.BinderCallsStats: android.util.SparseArray mUidEntries>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.internal.os.BinderCallsStats: android.util.ArrayMap mExceptionCounts>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BinderCallsStats: long mStartCurrentTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.BinderCallsStats: long mStartElapsedTime> = $l1;

        $r5 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        virtualinvoke $r6.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: void reset()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setAddDebugEntries(boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BinderCallsStats: boolean mAddDebugEntries> = z0;

        return;
    }

    public void setDetailedTracking(boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking>;

        if z0 == $z1 goto label2;

        r0.<com.android.internal.os.BinderCallsStats: boolean mDetailedTracking> = z0;

        virtualinvoke r0.<com.android.internal.os.BinderCallsStats: void reset()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setDeviceState(com.android.internal.os.CachedDeviceState$Readonly)
    {
        com.android.internal.os.BinderCallsStats r0;
        com.android.internal.os.CachedDeviceState$Readonly r1;
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r2, $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        r1 := @parameter0: com.android.internal.os.CachedDeviceState$Readonly;

        r2 = r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: void close()>();

     label1:
        r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$Readonly mDeviceState> = r1;

        $r3 = virtualinvoke r1.<com.android.internal.os.CachedDeviceState$Readonly: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch createTimeOnBatteryStopwatch()>();

        r0.<com.android.internal.os.BinderCallsStats: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch mBatteryStopwatch> = $r3;

        return;
    }

    public void setMaxBinderCallStats(int)
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.Object r8;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored invalid max value (value must be positive): ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BinderCallsStats", $r5);

        return;

     label1:
        r8 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r8;

     label2:
        $i1 = r0.<com.android.internal.os.BinderCallsStats: int mMaxBinderCallStatsCount>;

        if i0 == $i1 goto label3;

        r0.<com.android.internal.os.BinderCallsStats: int mMaxBinderCallStatsCount> = i0;

        virtualinvoke r0.<com.android.internal.os.BinderCallsStats: void reset()>();

     label3:
        exitmonitor r8;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setSamplingInterval(int)
    {
        com.android.internal.os.BinderCallsStats r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        java.lang.Object r8;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored invalid sampling interval (value must be positive): ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BinderCallsStats", $r5);

        return;

     label1:
        r8 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r8;

     label2:
        $i1 = r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval>;

        if i0 == $i1 goto label3;

        r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval> = i0;

        virtualinvoke r0.<com.android.internal.os.BinderCallsStats: void reset()>();

     label3:
        exitmonitor r8;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r8;

     label7:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setTrackDirectCallerUid(boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.internal.os.BinderCallsStats: boolean mTrackDirectCallingUid>;

        if z0 == $z1 goto label2;

        r0.<com.android.internal.os.BinderCallsStats: boolean mTrackDirectCallingUid> = z0;

        virtualinvoke r0.<com.android.internal.os.BinderCallsStats: void reset()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setTrackScreenInteractive(boolean)
    {
        com.android.internal.os.BinderCallsStats r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.internal.os.BinderCallsStats: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.internal.os.BinderCallsStats: boolean mTrackScreenInteractive>;

        if z0 == $z1 goto label2;

        r0.<com.android.internal.os.BinderCallsStats: boolean mTrackScreenInteractive> = z0;

        virtualinvoke r0.<com.android.internal.os.BinderCallsStats: void reset()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected boolean shouldRecordDetailedData()
    {
        com.android.internal.os.BinderCallsStats r0;
        java.util.Random $r1;
        int $i0, $i1, $i2;
        boolean z0;

        r0 := @this: com.android.internal.os.BinderCallsStats;

        $r1 = r0.<com.android.internal.os.BinderCallsStats: java.util.Random mRandom>;

        $i0 = virtualinvoke $r1.<java.util.Random: int nextInt()>();

        $i1 = r0.<com.android.internal.os.BinderCallsStats: int mPeriodicSamplingInterval>;

        $i2 = $i0 % $i1;

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
