public class com.android.internal.os.BinderInternal extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate sBinderProxyLimitListenerDelegate;
    static java.lang.ref.WeakReference sGcWatcher;
    static java.util.ArrayList sGcWatchers;
    static long sLastGcTime;
    static java.lang.Runnable[] sTmpWatchers;

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;
        com.android.internal.os.BinderInternal$GcWatcher $r1;
        java.util.ArrayList $r2;
        java.lang.Runnable[] $r3;
        com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate $r4;

        <com.android.internal.os.BinderInternal: java.lang.String TAG> = "BinderInternal";

        $r0 = new java.lang.ref.WeakReference;

        $r1 = new com.android.internal.os.BinderInternal$GcWatcher;

        specialinvoke $r1.<com.android.internal.os.BinderInternal$GcWatcher: void <init>()>();

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        <com.android.internal.os.BinderInternal: java.lang.ref.WeakReference sGcWatcher> = $r0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers> = $r2;

        $r3 = newarray (java.lang.Runnable)[1];

        <com.android.internal.os.BinderInternal: java.lang.Runnable[] sTmpWatchers> = $r3;

        $r4 = new com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate;

        specialinvoke $r4.<com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate: void <init>(com.android.internal.os.BinderInternal$1)>(null);

        <com.android.internal.os.BinderInternal: com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate sBinderProxyLimitListenerDelegate> = $r4;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.BinderInternal r0;

        r0 := @this: com.android.internal.os.BinderInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addGcWatcher(java.lang.Runnable)
    {
        java.util.ArrayList r0, $r1;
        java.lang.Throwable $r2;
        java.lang.Runnable r3;

        r3 := @parameter0: java.lang.Runnable;

        r0 = <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers>;

        entermonitor r0;

     label1:
        $r1 = <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void binderProxyLimitCallbackFromNative(int)
    {
        int i0;
        com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate $r0;

        i0 := @parameter0: int;

        $r0 = <com.android.internal.os.BinderInternal: com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate sBinderProxyLimitListenerDelegate>;

        virtualinvoke $r0.<com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate: void notifyClient(int)>(i0);

        return;
    }

    public static void clearBinderProxyCountCallback()
    {
        com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate $r0;

        $r0 = <com.android.internal.os.BinderInternal: com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate sBinderProxyLimitListenerDelegate>;

        virtualinvoke $r0.<com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate: void setListener(com.android.internal.os.BinderInternal$BinderProxyLimitListener,android.os.Handler)>(null, null);

        return;
    }

    public static final native void disableBackgroundScheduling(boolean);

    static void forceBinderGc()
    {
        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("Binder");

        return;
    }

    public static void forceGc(java.lang.String)
    {
        java.lang.String r0;
        dalvik.system.VMRuntime $r1;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2741, r0);

        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r1.<dalvik.system.VMRuntime: void requestConcurrentGC()>();

        return;
    }

    public static final native android.os.IBinder getContextObject();

    public static long getLastGcTime()
    {
        long $l0;

        $l0 = <com.android.internal.os.BinderInternal: long sLastGcTime>;

        return $l0;
    }

    static final native void handleGc();

    public static final native void joinThreadPool();

    public static final native int nGetBinderProxyCount(int);

    public static final native android.util.SparseIntArray nGetBinderProxyPerUidCounts();

    public static final native void nSetBinderProxyCountEnabled(boolean);

    public static final native void nSetBinderProxyCountWatermarks(int, int);

    public static void setBinderProxyCountCallback(com.android.internal.os.BinderInternal$BinderProxyLimitListener, android.os.Handler)
    {
        com.android.internal.os.BinderInternal$BinderProxyLimitListener r0;
        android.os.Handler r1;
        com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate $r3;

        r0 := @parameter0: com.android.internal.os.BinderInternal$BinderProxyLimitListener;

        r1 := @parameter1: android.os.Handler;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Must provide NonNull Handler to setBinderProxyCountCallback when setting BinderProxyLimitListener");

        $r3 = <com.android.internal.os.BinderInternal: com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate sBinderProxyLimitListenerDelegate>;

        virtualinvoke $r3.<com.android.internal.os.BinderInternal$BinderProxyLimitListenerDelegate: void setListener(com.android.internal.os.BinderInternal$BinderProxyLimitListener,android.os.Handler)>(r0, r1);

        return;
    }

    public static final native void setMaxThreads(int);
}
