public class com.android.internal.os.BluetoothPowerCalculator extends com.android.internal.os.PowerCalculator
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private double mAppTotalPowerMah;
    private long mAppTotalTimeMs;
    private final double mIdleMa;
    private final double mRxMa;
    private final double mTxMa;

    public void <init>(com.android.internal.os.PowerProfile)
    {
        com.android.internal.os.BluetoothPowerCalculator r0;
        com.android.internal.os.PowerProfile r1;
        double $d0, $d1, $d2;

        r0 := @this: com.android.internal.os.BluetoothPowerCalculator;

        r1 := @parameter0: com.android.internal.os.PowerProfile;

        specialinvoke r0.<com.android.internal.os.PowerCalculator: void <init>()>();

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mAppTotalPowerMah> = 0.0;

        r0.<com.android.internal.os.BluetoothPowerCalculator: long mAppTotalTimeMs> = 0L;

        $d0 = virtualinvoke r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("bluetooth.controller.idle");

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mIdleMa> = $d0;

        $d1 = virtualinvoke r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("bluetooth.controller.rx");

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mRxMa> = $d1;

        $d2 = virtualinvoke r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("bluetooth.controller.tx");

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mTxMa> = $d2;

        return;
    }

    public void calculateApp(com.android.internal.os.BatterySipper, android.os.BatteryStats$Uid, long, long, int)
    {
        com.android.internal.os.BluetoothPowerCalculator r0;
        com.android.internal.os.BatterySipper r1;
        android.os.BatteryStats$Uid r2;
        int i0;
        android.os.BatteryStats$ControllerActivityCounter r3;
        long l1, l2, $l3, $l4, $l6, $l7, $l8, $l9, l10, l11, l12, l13;
        android.os.BatteryStats$LongCounter $r4, $r5, $r7, $r8;
        android.os.BatteryStats$LongCounter[] $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14;
        byte $b5;

        r0 := @this: com.android.internal.os.BluetoothPowerCalculator;

        r1 := @parameter0: com.android.internal.os.BatterySipper;

        r2 := @parameter1: android.os.BatteryStats$Uid;

        l10 := @parameter2: long;

        l11 := @parameter3: long;

        i0 := @parameter4: int;

        r3 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()>();

        if r3 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r3.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        l1 = virtualinvoke $r4.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $r5 = virtualinvoke r3.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        l12 = virtualinvoke $r5.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $r6 = virtualinvoke r3.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        $r7 = $r6[0];

        l13 = virtualinvoke $r7.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $l3 = l1 + l13;

        l2 = $l3 + l12;

        $r8 = virtualinvoke r3.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        $l4 = virtualinvoke $r8.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $d0 = (double) $l4;

        d14 = $d0 / 3600000.0;

        $b5 = d14 cmpl 0.0;

        if $b5 != 0 goto label2;

        $d4 = (double) l1;

        $d3 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mIdleMa>;

        $d8 = $d4 * $d3;

        $d6 = (double) l12;

        $d5 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mRxMa>;

        $d7 = $d6 * $d5;

        $d12 = $d8 + $d7;

        $d10 = (double) l13;

        $d9 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mTxMa>;

        $d11 = $d10 * $d9;

        $d13 = $d12 + $d11;

        d14 = $d13 / 3600000.0;

        goto label2;

     label2:
        r1.<com.android.internal.os.BatterySipper: double bluetoothPowerMah> = d14;

        r1.<com.android.internal.os.BatterySipper: long bluetoothRunningTimeMs> = l2;

        $l6 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(4, i0);

        r1.<com.android.internal.os.BatterySipper: long btRxBytes> = $l6;

        $l7 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(5, i0);

        r1.<com.android.internal.os.BatterySipper: long btTxBytes> = $l7;

        $d1 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mAppTotalPowerMah>;

        $d2 = $d1 + d14;

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mAppTotalPowerMah> = $d2;

        $l8 = r0.<com.android.internal.os.BluetoothPowerCalculator: long mAppTotalTimeMs>;

        $l9 = $l8 + l2;

        r0.<com.android.internal.os.BluetoothPowerCalculator: long mAppTotalTimeMs> = $l9;

        return;
    }

    public void calculateRemaining(com.android.internal.os.BatterySipper, android.os.BatteryStats, long, long, int)
    {
        com.android.internal.os.BluetoothPowerCalculator r0;
        com.android.internal.os.BatterySipper r1;
        int i0;
        long l1, $l2, $l4, $l5, $l6, $l7, $l8, l9, l10, l11, l12;
        android.os.BatteryStats$LongCounter $r2, $r4, $r5, $r6;
        android.os.BatteryStats$LongCounter[] $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;
        byte $b3;
        android.os.BatteryStats r7;
        android.os.BatteryStats$ControllerActivityCounter r8;

        r0 := @this: com.android.internal.os.BluetoothPowerCalculator;

        r1 := @parameter0: com.android.internal.os.BatterySipper;

        r7 := @parameter1: android.os.BatteryStats;

        l9 := @parameter2: long;

        l10 := @parameter3: long;

        i0 := @parameter4: int;

        r8 = virtualinvoke r7.<android.os.BatteryStats: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()>();

        $r2 = virtualinvoke r8.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        l11 = virtualinvoke $r2.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $r3 = virtualinvoke r8.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        $r4 = $r3[0];

        l1 = virtualinvoke $r4.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $r5 = virtualinvoke r8.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        l12 = virtualinvoke $r5.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $r6 = virtualinvoke r8.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        $l2 = virtualinvoke $r6.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(i0);

        $d0 = (double) $l2;

        d15 = $d0 / 3600000.0;

        $b3 = d15 cmpl 0.0;

        if $b3 != 0 goto label1;

        $d5 = (double) l11;

        $d4 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mIdleMa>;

        $d9 = $d5 * $d4;

        $d7 = (double) l12;

        $d6 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mRxMa>;

        $d8 = $d7 * $d6;

        $d13 = $d9 + $d8;

        $d11 = (double) l1;

        $d10 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mTxMa>;

        $d12 = $d11 * $d10;

        $d14 = $d13 + $d12;

        d15 = $d14 / 3600000.0;

        goto label1;

     label1:
        $d1 = r0.<com.android.internal.os.BluetoothPowerCalculator: double mAppTotalPowerMah>;

        $d2 = d15 - $d1;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d2);

        r1.<com.android.internal.os.BatterySipper: double bluetoothPowerMah> = $d3;

        $l4 = l11 + l1;

        $l6 = $l4 + l12;

        $l5 = r0.<com.android.internal.os.BluetoothPowerCalculator: long mAppTotalTimeMs>;

        $l7 = $l6 - $l5;

        $l8 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l7);

        r1.<com.android.internal.os.BatterySipper: long bluetoothRunningTimeMs> = $l8;

        return;
    }

    public void reset()
    {
        com.android.internal.os.BluetoothPowerCalculator r0;

        r0 := @this: com.android.internal.os.BluetoothPowerCalculator;

        r0.<com.android.internal.os.BluetoothPowerCalculator: double mAppTotalPowerMah> = 0.0;

        r0.<com.android.internal.os.BluetoothPowerCalculator: long mAppTotalTimeMs> = 0L;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.BluetoothPowerCalculator: java.lang.String TAG> = "BluetoothPowerCalculator";

        <com.android.internal.os.BluetoothPowerCalculator: boolean DEBUG> = 0;

        return;
    }
}
