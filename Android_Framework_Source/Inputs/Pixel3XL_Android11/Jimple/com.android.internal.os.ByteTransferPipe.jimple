public class com.android.internal.os.ByteTransferPipe extends com.android.internal.os.TransferPipe
{
    static final java.lang.String TAG;
    private java.io.ByteArrayOutputStream mOutputStream;

    public void <init>() throws java.io.IOException
    {
        com.android.internal.os.ByteTransferPipe r0;

        r0 := @this: com.android.internal.os.ByteTransferPipe;

        specialinvoke r0.<com.android.internal.os.TransferPipe: void <init>()>();

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        com.android.internal.os.ByteTransferPipe r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.os.ByteTransferPipe;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.os.TransferPipe: void <init>(java.lang.String,java.lang.String)>(r1, "ByteTransferPipe");

        return;
    }

    public byte[] get() throws java.io.IOException
    {
        com.android.internal.os.ByteTransferPipe r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;

        r0 := @this: com.android.internal.os.ByteTransferPipe;

        virtualinvoke r0.<com.android.internal.os.ByteTransferPipe: void go(java.io.FileDescriptor)>(null);

        $r1 = r0.<com.android.internal.os.ByteTransferPipe: java.io.ByteArrayOutputStream mOutputStream>;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    protected java.io.OutputStream getNewOutputStream()
    {
        com.android.internal.os.ByteTransferPipe r0;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: com.android.internal.os.ByteTransferPipe;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.internal.os.ByteTransferPipe: java.io.ByteArrayOutputStream mOutputStream> = $r2;

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.ByteTransferPipe: java.lang.String TAG> = "ByteTransferPipe";

        return;
    }
}
