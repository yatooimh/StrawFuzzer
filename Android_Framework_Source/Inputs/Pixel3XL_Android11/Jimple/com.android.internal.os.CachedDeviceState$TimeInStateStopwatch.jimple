public class com.android.internal.os.CachedDeviceState$TimeInStateStopwatch extends java.lang.Object implements java.lang.AutoCloseable
{
    private final java.lang.Object mLock;
    private long mStartTimeMillis;
    private long mTotalTimeMillis;
    final com.android.internal.os.CachedDeviceState this$0;

    public void <init>(com.android.internal.os.CachedDeviceState)
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        com.android.internal.os.CachedDeviceState r1;
        java.lang.Object $r2;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        r1 := @parameter0: com.android.internal.os.CachedDeviceState;

        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: com.android.internal.os.CachedDeviceState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: java.lang.Object mLock> = $r2;

        return;
    }

    static void access$000(com.android.internal.os.CachedDeviceState$TimeInStateStopwatch)
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;

        r0 := @parameter0: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        specialinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: void start()>();

        return;
    }

    static void access$100(com.android.internal.os.CachedDeviceState$TimeInStateStopwatch)
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;

        r0 := @parameter0: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        specialinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: void stop()>();

        return;
    }

    private long elapsedTime()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        boolean $z0;
        long $l0, $l1, l2;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        $z0 = virtualinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mStartTimeMillis>;

        l2 = $l0 - $l1;

        goto label2;

     label1:
        l2 = 0L;

     label2:
        return l2;
    }

    private void start()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        java.lang.Object r1;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        r1 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: boolean isRunning()>();

        if $z0 != 0 goto label2;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mStartTimeMillis> = $l0;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void stop()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        java.lang.Object r1;
        boolean $z0;
        long $l0, $l1, $l2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        r1 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $l0 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mTotalTimeMillis>;

        $l1 = specialinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long elapsedTime()>();

        $l2 = $l0 + $l1;

        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mTotalTimeMillis> = $l2;

        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mStartTimeMillis> = 0L;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void close()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        java.lang.Object r1;
        com.android.internal.os.CachedDeviceState $r3, $r4;
        java.util.ArrayList $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        $r3 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: com.android.internal.os.CachedDeviceState this$0>;

        r1 = staticinvoke <com.android.internal.os.CachedDeviceState: java.lang.Object access$400(com.android.internal.os.CachedDeviceState)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: com.android.internal.os.CachedDeviceState this$0>;

        $r5 = staticinvoke <com.android.internal.os.CachedDeviceState: java.util.ArrayList access$500(com.android.internal.os.CachedDeviceState)>($r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getMillis()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        java.lang.Object r1;
        long l0, l1, $l2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        r1 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        l0 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mTotalTimeMillis>;

        l1 = specialinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long elapsedTime()>();

        exitmonitor r1;

     label2:
        $l2 = l0 + l1;

        return $l2;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isRunning()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        $l0 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mStartTimeMillis>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void reset()
    {
        com.android.internal.os.CachedDeviceState$TimeInStateStopwatch r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r3;
        long l0;

        r0 := @this: com.android.internal.os.CachedDeviceState$TimeInStateStopwatch;

        r1 = r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: java.lang.Object mLock>;

        entermonitor r1;

        l0 = 0L;

     label1:
        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mTotalTimeMillis> = 0L;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: boolean isRunning()>();

        if $z0 == 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label3:
        r0.<com.android.internal.os.CachedDeviceState$TimeInStateStopwatch: long mStartTimeMillis> = l0;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
