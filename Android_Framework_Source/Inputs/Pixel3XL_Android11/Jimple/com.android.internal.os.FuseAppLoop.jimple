public class com.android.internal.os.FuseAppLoop extends java.lang.Object implements android.os.Handler$Callback
{
    private static final int ARGS_POOL_SIZE;
    private static final boolean DEBUG;
    private static final int FUSE_FSYNC;
    private static final int FUSE_GETATTR;
    private static final int FUSE_LOOKUP;
    private static final int FUSE_MAX_WRITE;
    private static final int FUSE_OK;
    private static final int FUSE_OPEN;
    private static final int FUSE_READ;
    private static final int FUSE_RELEASE;
    private static final int FUSE_WRITE;
    private static final int MIN_INODE;
    public static final int ROOT_INODE;
    private static final java.lang.String TAG;
    private static final java.util.concurrent.ThreadFactory sDefaultThreadFactory;
    private final java.util.LinkedList mArgsPool;
    private final com.android.internal.os.FuseAppLoop$BytesMap mBytesMap;
    private final android.util.SparseArray mCallbackMap;
    private long mInstance;
    private final java.lang.Object mLock;
    private final int mMountPointId;
    private int mNextInode;
    private final java.lang.Thread mThread;

    static void <clinit>()
    {
        boolean $z0;
        com.android.internal.os.FuseAppLoop$1 $r0;

        <com.android.internal.os.FuseAppLoop: java.lang.String TAG> = "FuseAppLoop";

        <com.android.internal.os.FuseAppLoop: int ROOT_INODE> = 1;

        <com.android.internal.os.FuseAppLoop: int MIN_INODE> = 2;

        <com.android.internal.os.FuseAppLoop: int FUSE_WRITE> = 16;

        <com.android.internal.os.FuseAppLoop: int FUSE_RELEASE> = 18;

        <com.android.internal.os.FuseAppLoop: int FUSE_READ> = 15;

        <com.android.internal.os.FuseAppLoop: int FUSE_OPEN> = 14;

        <com.android.internal.os.FuseAppLoop: int FUSE_OK> = 0;

        <com.android.internal.os.FuseAppLoop: int FUSE_MAX_WRITE> = 131072;

        <com.android.internal.os.FuseAppLoop: int FUSE_LOOKUP> = 1;

        <com.android.internal.os.FuseAppLoop: int FUSE_GETATTR> = 3;

        <com.android.internal.os.FuseAppLoop: int FUSE_FSYNC> = 20;

        <com.android.internal.os.FuseAppLoop: int ARGS_POOL_SIZE> = 50;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("FuseAppLoop", 3);

        <com.android.internal.os.FuseAppLoop: boolean DEBUG> = $z0;

        $r0 = new com.android.internal.os.FuseAppLoop$1;

        specialinvoke $r0.<com.android.internal.os.FuseAppLoop$1: void <init>()>();

        <com.android.internal.os.FuseAppLoop: java.util.concurrent.ThreadFactory sDefaultThreadFactory> = $r0;

        return;
    }

    public void <init>(int, android.os.ParcelFileDescriptor, java.util.concurrent.ThreadFactory)
    {
        com.android.internal.os.FuseAppLoop r0;
        int i0, $i1;
        java.util.concurrent.ThreadFactory r1, r8;
        java.lang.Object $r2;
        android.util.SparseArray $r3;
        com.android.internal.os.FuseAppLoop$BytesMap $r4;
        java.util.LinkedList $r5;
        long $l2;
        com.android.internal.os._$$Lambda$FuseAppLoop$e9Yru2f_btesWlxIgerkPnHibpg $r6;
        android.os.ParcelFileDescriptor r7;
        java.lang.Thread r9;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.ParcelFileDescriptor;

        r1 := @parameter2: java.util.concurrent.ThreadFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap> = $r3;

        $r4 = new com.android.internal.os.FuseAppLoop$BytesMap;

        specialinvoke $r4.<com.android.internal.os.FuseAppLoop$BytesMap: void <init>(com.android.internal.os.FuseAppLoop$1)>(null);

        r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$BytesMap mBytesMap> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<com.android.internal.os.FuseAppLoop: java.util.LinkedList mArgsPool> = $r5;

        r0.<com.android.internal.os.FuseAppLoop: int mNextInode> = 2;

        r0.<com.android.internal.os.FuseAppLoop: int mMountPointId> = i0;

        r8 = r1;

        if r1 != null goto label1;

        r8 = <com.android.internal.os.FuseAppLoop: java.util.concurrent.ThreadFactory sDefaultThreadFactory>;

     label1:
        $i1 = virtualinvoke r7.<android.os.ParcelFileDescriptor: int detachFd()>();

        $l2 = virtualinvoke r0.<com.android.internal.os.FuseAppLoop: long native_new(int)>($i1);

        r0.<com.android.internal.os.FuseAppLoop: long mInstance> = $l2;

        $r6 = new com.android.internal.os._$$Lambda$FuseAppLoop$e9Yru2f_btesWlxIgerkPnHibpg;

        specialinvoke $r6.<com.android.internal.os._$$Lambda$FuseAppLoop$e9Yru2f_btesWlxIgerkPnHibpg: void <init>(com.android.internal.os.FuseAppLoop)>(r0);

        r9 = interfaceinvoke r8.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r6);

        r0.<com.android.internal.os.FuseAppLoop: java.lang.Thread mThread> = r9;

        virtualinvoke r9.<java.lang.Thread: void start()>();

        return;
    }

    private static int checkInode(long)
    {
        long l0;
        int $i2;

        l0 := @parameter0: long;

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)>(l0, 2L, 2147483647L, "checkInode");

        $i2 = (int) l0;

        return $i2;
    }

    private com.android.internal.os.FuseAppLoop$CallbackEntry getCallbackEntryOrThrowLocked(long) throws android.system.ErrnoException
    {
        com.android.internal.os.FuseAppLoop r0;
        long l0;
        com.android.internal.os.FuseAppLoop$CallbackEntry r1;
        android.util.SparseArray $r2;
        int $i1, $i2;
        java.lang.Object $r3;
        android.system.ErrnoException r5;
        java.lang.Throwable r6;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap>;

        $i1 = staticinvoke <com.android.internal.os.FuseAppLoop: int checkInode(long)>(l0);

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r1 = (com.android.internal.os.FuseAppLoop$CallbackEntry) $r3;

        if r1 == null goto label1;

        return r1;

     label1:
        r5 = new android.system.ErrnoException;

        $i2 = <android.system.OsConstants: int ENOENT>;

        specialinvoke r5.<android.system.ErrnoException: void <init>(java.lang.String,int)>("getCallbackEntryOrThrowLocked", $i2);

        r6 = (java.lang.Throwable) r5;

        throw r6;
    }

    private static int getError(java.lang.Exception)
    {
        java.lang.Exception r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.system.ErrnoException $r1;

        r0 := @parameter0: java.lang.Exception;

        $z0 = r0 instanceof android.system.ErrnoException;

        if $z0 == 0 goto label1;

        $r1 = (android.system.ErrnoException) r0;

        i0 = $r1.<android.system.ErrnoException: int errno>;

        $i3 = <android.system.OsConstants: int ENOSYS>;

        if i0 == $i3 goto label1;

        $i4 = neg i0;

        return $i4;

     label1:
        $i1 = <android.system.OsConstants: int EBADF>;

        $i2 = neg $i1;

        return $i2;
    }

    private void onCommand(int, long, long, long, int, byte[])
    {
        com.android.internal.os.FuseAppLoop r0;
        int i0, i4, $i5, $i6, $i7;
        long l1, l2, l3;
        java.lang.Object r1, $r4;
        java.util.LinkedList $r2, $r3;
        com.android.internal.os.FuseAppLoop$CallbackEntry $r5, $r6, $r7;
        android.os.Handler $r8, $r9;
        android.os.Message $r10;
        boolean $z0;
        java.lang.Exception $r11;
        java.lang.Throwable $r12, r20;
        byte[] r13;
        com.android.internal.os.FuseAppLoop$Args r14, r18;
        android.system.ErrnoException r19;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        r13 := @parameter5: byte[];

        r1 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.internal.os.FuseAppLoop: java.util.LinkedList mArgsPool>;

        $i5 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i5 != 0 goto label03;

        r18 = new com.android.internal.os.FuseAppLoop$Args;

        r14 = r18;

        specialinvoke r18.<com.android.internal.os.FuseAppLoop$Args: void <init>(com.android.internal.os.FuseAppLoop$1)>(null);

     label02:
        goto label04;

     label03:
        $r3 = r0.<com.android.internal.os.FuseAppLoop: java.util.LinkedList mArgsPool>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object pop()>();

        r14 = (com.android.internal.os.FuseAppLoop$Args) $r4;

     label04:
        r14.<com.android.internal.os.FuseAppLoop$Args: long unique> = l1;

        r14.<com.android.internal.os.FuseAppLoop$Args: long inode> = l2;

        r14.<com.android.internal.os.FuseAppLoop$Args: long offset> = l3;

        r14.<com.android.internal.os.FuseAppLoop$Args: int size> = i4;

        r14.<com.android.internal.os.FuseAppLoop$Args: byte[] data> = r13;

        $r5 = specialinvoke r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$CallbackEntry getCallbackEntryOrThrowLocked(long)>(l2);

        r14.<com.android.internal.os.FuseAppLoop$Args: com.android.internal.os.FuseAppLoop$CallbackEntry entry> = $r5;

        $r6 = r14.<com.android.internal.os.FuseAppLoop$Args: com.android.internal.os.FuseAppLoop$CallbackEntry entry>;

        $r9 = $r6.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.Handler handler>;

        $r7 = r14.<com.android.internal.os.FuseAppLoop$Args: com.android.internal.os.FuseAppLoop$CallbackEntry entry>;

        $r8 = $r7.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.Handler handler>;

        $r10 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>($r8, i0, 0, 0, r14);

        $z0 = virtualinvoke $r9.<android.os.Handler: boolean sendMessage(android.os.Message)>($r10);

        if $z0 == 0 goto label06;

     label05:
        goto label10;

     label06:
        r19 = new android.system.ErrnoException;

        $i6 = <android.system.OsConstants: int EBADF>;

        specialinvoke r19.<android.system.ErrnoException: void <init>(java.lang.String,int)>("onCommand", $i6);

        r20 = (java.lang.Throwable) r19;

        throw r20;

     label07:
        $r12 := @caughtexception;

        goto label12;

     label08:
        $r11 := @caughtexception;

     label09:
        $i7 = staticinvoke <com.android.internal.os.FuseAppLoop: int getError(java.lang.Exception)>($r11);

        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void replySimpleLocked(long,int)>(l1, $i7);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        exitmonitor r1;

     label13:
        throw $r12;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
    }

    private byte[] onOpen(long, long)
    {
        com.android.internal.os.FuseAppLoop r0;
        long l0, l1, $l3, $l5;
        java.lang.Object r1;
        boolean $z0;
        int $i2, $i6;
        byte $b4;
        com.android.internal.os.FuseAppLoop$BytesMap $r2;
        java.lang.Throwable $r3, $r4, r11;
        com.android.internal.os.FuseAppLoop$CallbackEntry r5;
        byte[] r6;
        android.system.ErrnoException r10;
        java.lang.Exception r12;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r5 = specialinvoke r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$CallbackEntry getCallbackEntryOrThrowLocked(long)>(l1);

        $z0 = r5.<com.android.internal.os.FuseAppLoop$CallbackEntry: boolean opened>;

        if $z0 != 0 goto label05;

        $l3 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label04;

        $l5 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replyOpen(long,long,long)>($l5, l0, l1);

        r5.<com.android.internal.os.FuseAppLoop$CallbackEntry: boolean opened> = 1;

        $r2 = r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$BytesMap mBytesMap>;

        r6 = virtualinvoke $r2.<com.android.internal.os.FuseAppLoop$BytesMap: byte[] startUsing(long)>(l1);

     label02:
        exitmonitor r1;

     label03:
        return r6;

     label04:
        goto label09;

     label05:
        r10 = new android.system.ErrnoException;

        $i2 = <android.system.OsConstants: int EMFILE>;

        specialinvoke r10.<android.system.ErrnoException: void <init>(java.lang.String,int)>("onOpen", $i2);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label06:
        $r4 := @caughtexception;

        goto label11;

     label07:
        $r3 := @caughtexception;

     label08:
        r12 = (java.lang.Exception) $r3;

        $i6 = staticinvoke <com.android.internal.os.FuseAppLoop: int getError(java.lang.Exception)>(r12);

        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void replySimpleLocked(long,int)>(l0, $i6);

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        exitmonitor r1;

     label12:
        throw $r4;

        catch android.system.ErrnoException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch android.system.ErrnoException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    private void recycleLocked(com.android.internal.os.FuseAppLoop$Args)
    {
        com.android.internal.os.FuseAppLoop r0;
        com.android.internal.os.FuseAppLoop$Args r1;
        java.util.LinkedList $r2, $r3;
        int $i0;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        r1 := @parameter0: com.android.internal.os.FuseAppLoop$Args;

        $r2 = r0.<com.android.internal.os.FuseAppLoop: java.util.LinkedList mArgsPool>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 >= 50 goto label1;

        $r3 = r0.<com.android.internal.os.FuseAppLoop: java.util.LinkedList mArgsPool>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    private void replySimpleLocked(long, int)
    {
        com.android.internal.os.FuseAppLoop r0;
        long l0, l2;
        int i1;
        byte $b3;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b3 = l2 cmp 0L;

        if $b3 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replySimple(long,long,int)>(l2, l0, i1);

     label1:
        return;
    }

    public int getMountPointId()
    {
        com.android.internal.os.FuseAppLoop r0;
        int $i0;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        $i0 = r0.<com.android.internal.os.FuseAppLoop: int mMountPointId>;

        return $i0;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.internal.os.FuseAppLoop r0;
        com.android.internal.os.FuseAppLoop$Args r1;
        int i0, $i13, i19, i21, i32, i41;
        long l1, $l2, $l4, $l7, $l8, $l10, $l11, $l14, l17, l18, l20, l22, l33, l34, l36, l37, l38, l39, l40;
        java.lang.Object $r2, r39, r40, r56, r57, r59, r61, r63, r66, r67, r70, r71, r74;
        android.os.ProxyFileDescriptorCallback $r3, $r4, $r5, $r6, $r10, r55;
        byte $b3, $b5, $b6, $b9, $b12, $b15;
        java.lang.String $r9;
        java.lang.Throwable $r11, $r16, $r17, $r18, $r19, $r20, $r21, $r24, $r26, $r27, $r29, $r31, $r34, $r35, r43, r60, r64, r69, r73, r75;
        java.lang.Exception $r12, $r13, $r14, $r15, $r22, $r23, $r25, $r28, $r30, $r32, $r33, r44;
        android.os.Message r36;
        com.android.internal.os.FuseAppLoop$CallbackEntry r37;
        byte[] r38;
        boolean z0, z2, z3;
        java.lang.IllegalArgumentException r47;
        java.lang.StringBuilder r49;
        com.android.internal.os.FuseAppLoop$BytesMap r65;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        r36 := @parameter0: android.os.Message;

        $r2 = r36.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.internal.os.FuseAppLoop$Args) $r2;

        r37 = r1.<com.android.internal.os.FuseAppLoop$Args: com.android.internal.os.FuseAppLoop$CallbackEntry entry>;

        l17 = r1.<com.android.internal.os.FuseAppLoop$Args: long inode>;

        l18 = r1.<com.android.internal.os.FuseAppLoop$Args: long unique>;

        i19 = r1.<com.android.internal.os.FuseAppLoop$Args: int size>;

        l20 = r1.<com.android.internal.os.FuseAppLoop$Args: long offset>;

        r38 = r1.<com.android.internal.os.FuseAppLoop$Args: byte[] data>;

     label001:
        i0 = r36.<android.os.Message: int what>;

     label002:
        if i0 == 1 goto label099;

        if i0 == 3 goto label080;

        if i0 == 18 goto label062;

        if i0 == 20 goto label054;

        if i0 == 15 goto label035;

        if i0 != 16 goto label020;

     label003:
        $r10 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

        i21 = virtualinvoke $r10.<android.os.ProxyFileDescriptorCallback: int onWrite(long,int,byte[])>(l20, i19, r38);

        r39 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r39;

     label004:
        $l14 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label008;

        l22 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

     label005:
        r40 = r39;

        z0 = 1;

     label006:
        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replyWrite(long,long,int)>(l22, l18, i21);

     label007:
        goto label008;

     label008:
        r40 = r39;

        z0 = 1;

     label009:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

     label010:
        r40 = r39;

        z0 = 1;

     label011:
        exitmonitor r39;

     label012:
        goto label113;

     label013:
        $r20 := @caughtexception;

        z2 = 1;

        r43 = $r20;

     label014:
        r40 = r39;

        z0 = z2;

     label015:
        exitmonitor r39;

     label016:
        z3 = z2;

     label017:
        throw r43;

     label018:
        $r26 := @caughtexception;

        r43 = $r26;

        r39 = r40;

        z2 = z0;

        goto label014;

     label019:
        $r23 := @caughtexception;

        r44 = $r23;

        z3 = 1;

        goto label122;

     label020:
        z3 = 1;

     label021:
        r47 = new java.lang.IllegalArgumentException;

     label022:
        z3 = 1;

     label023:
        r49 = new java.lang.StringBuilder;

     label024:
        z3 = 1;

     label025:
        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

     label026:
        z3 = 1;

     label027:
        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown FUSE command: ");

     label028:
        z3 = 1;

     label029:
        $i13 = r36.<android.os.Message: int what>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

     label030:
        z3 = 1;

     label031:
        $r9 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

     label032:
        z3 = 1;

     label033:
        throw r47;

     label034:
        $r33 := @caughtexception;

        r44 = $r33;

        goto label122;

     label035:
        z3 = 1;

     label036:
        r55 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

     label037:
        i32 = virtualinvoke r55.<android.os.ProxyFileDescriptorCallback: int onRead(long,int,byte[])>(l20, i19, r38);

        r56 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r56;

     label038:
        $l11 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label042;

        l33 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

     label039:
        r57 = r56;

     label040:
        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replyRead(long,long,int,byte[])>(l33, l18, i32, r38);

     label041:
        goto label042;

     label042:
        r57 = r56;

     label043:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

     label044:
        r57 = r56;

     label045:
        exitmonitor r56;

     label046:
        goto label113;

     label047:
        $r18 := @caughtexception;

        r59 = r56;

        r60 = $r18;

     label048:
        r57 = r59;

     label049:
        exitmonitor r59;

     label050:
        throw r60;

     label051:
        $r19 := @caughtexception;

        r60 = $r19;

        r59 = r57;

        goto label048;

     label052:
        $r28 := @caughtexception;

        r44 = $r28;

        goto label122;

     label053:
        $r30 := @caughtexception;

        r44 = $r30;

        goto label122;

     label054:
        $r6 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

        virtualinvoke $r6.<android.os.ProxyFileDescriptorCallback: void onFsync()>();

        r61 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r61;

     label055:
        $l8 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label056;

        $l10 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replySimple(long,long,int)>($l10, l18, 0);

     label056:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

        exitmonitor r61;

     label057:
        goto label113;

     label058:
        $r16 := @caughtexception;

     label059:
        exitmonitor r61;

     label060:
        throw $r16;

     label061:
        $r14 := @caughtexception;

        z3 = 1;

        r44 = $r14;

        goto label122;

     label062:
        z3 = 1;

     label063:
        $r5 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

        virtualinvoke $r5.<android.os.ProxyFileDescriptorCallback: void onRelease()>();

        r63 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r63;

     label064:
        l34 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

     label065:
        $b6 = l34 cmp 0L;

        if $b6 == 0 goto label069;

     label066:
        $l7 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replySimple(long,long,int)>($l7, l18, 0);

     label067:
        goto label069;

     label068:
        $r11 := @caughtexception;

        r64 = $r11;

        goto label075;

     label069:
        r65 = r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$BytesMap mBytesMap>;

     label070:
        virtualinvoke r65.<com.android.internal.os.FuseAppLoop$BytesMap: void stopUsing(long)>(l17);

     label071:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

     label072:
        exitmonitor r63;

     label073:
        goto label113;

     label074:
        $r17 := @caughtexception;

        r64 = $r17;

     label075:
        exitmonitor r63;

     label076:
        throw r64;

     label077:
        $r13 := @caughtexception;

        r44 = $r13;

        goto label122;

     label078:
        $r27 := @caughtexception;

        r64 = $r27;

        goto label075;

     label079:
        $r15 := @caughtexception;

        r44 = $r15;

        goto label122;

     label080:
        z3 = 1;

     label081:
        $r4 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

        l1 = virtualinvoke $r4.<android.os.ProxyFileDescriptorCallback: long onGetSize()>();

     label082:
        r66 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r66;

     label083:
        $l4 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label087;

        l36 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

     label084:
        r67 = r66;

        l37 = l18;

     label085:
        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replyGetAttr(long,long,long,long)>(l36, l18, l17, l1);

     label086:
        goto label087;

     label087:
        r67 = r66;

        l37 = l18;

     label088:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

     label089:
        r67 = r66;

        l37 = l18;

     label090:
        exitmonitor r66;

     label091:
        goto label113;

     label092:
        $r29 := @caughtexception;

        r69 = $r29;

     label093:
        r67 = r66;

        l37 = l18;

     label094:
        exitmonitor r66;

     label095:
        throw r69;

     label096:
        $r34 := @caughtexception;

        r69 = $r34;

        r66 = r67;

        l18 = l37;

        goto label093;

     label097:
        $r32 := @caughtexception;

        r44 = $r32;

        goto label122;

     label098:
        $r22 := @caughtexception;

        r44 = $r22;

        goto label122;

     label099:
        l38 = l18;

     label100:
        $r3 = r37.<com.android.internal.os.FuseAppLoop$CallbackEntry: android.os.ProxyFileDescriptorCallback callback>;

        l39 = virtualinvoke $r3.<android.os.ProxyFileDescriptorCallback: long onGetSize()>();

     label101:
        l18 = l38;

     label102:
        r70 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

     label103:
        l18 = l38;

     label104:
        entermonitor r70;

     label105:
        $l2 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label109;

        l40 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

     label106:
        r71 = r70;

     label107:
        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_replyLookup(long,long,long,long)>(l40, l38, l17, l39);

     label108:
        goto label109;

     label109:
        r71 = r70;

     label110:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

     label111:
        r71 = r70;

     label112:
        exitmonitor r70;

     label113:
        z3 = 1;

        goto label125;

     label114:
        $r21 := @caughtexception;

        r73 = $r21;

     label115:
        r71 = r70;

     label116:
        exitmonitor r70;

     label117:
        l18 = l38;

     label118:
        throw r73;

     label119:
        $r24 := @caughtexception;

        r73 = $r24;

        r70 = r71;

        goto label115;

     label120:
        $r25 := @caughtexception;

        z3 = 1;

        r44 = $r25;

        goto label122;

     label121:
        $r12 := @caughtexception;

        r44 = $r12;

        z3 = 1;

     label122:
        r74 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r74;

     label123:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FuseAppLoop", "", r44);

        i41 = staticinvoke <com.android.internal.os.FuseAppLoop: int getError(java.lang.Exception)>(r44);

     label124:
        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void replySimpleLocked(long,int)>(l18, i41);

        specialinvoke r0.<com.android.internal.os.FuseAppLoop: void recycleLocked(com.android.internal.os.FuseAppLoop$Args)>(r1);

        exitmonitor r74;

     label125:
        return z3;

     label126:
        $r31 := @caughtexception;

        r75 = $r31;

     label127:
        exitmonitor r74;

     label128:
        throw r75;

     label129:
        $r35 := @caughtexception;

        r75 = $r35;

        goto label127;

        catch java.lang.Exception from label001 to label002 with label121;
        catch java.lang.Exception from label003 to label004 with label019;
        catch java.lang.Throwable from label004 to label005 with label013;
        catch java.lang.Throwable from label006 to label007 with label018;
        catch java.lang.Throwable from label009 to label010 with label018;
        catch java.lang.Throwable from label011 to label012 with label018;
        catch java.lang.Throwable from label015 to label016 with label018;
        catch java.lang.Exception from label017 to label018 with label034;
        catch java.lang.Exception from label021 to label022 with label034;
        catch java.lang.Exception from label023 to label024 with label034;
        catch java.lang.Exception from label025 to label026 with label034;
        catch java.lang.Exception from label027 to label028 with label034;
        catch java.lang.Exception from label029 to label030 with label034;
        catch java.lang.Exception from label031 to label032 with label034;
        catch java.lang.Exception from label033 to label034 with label034;
        catch java.lang.Exception from label036 to label037 with label053;
        catch java.lang.Exception from label037 to label038 with label052;
        catch java.lang.Throwable from label038 to label039 with label047;
        catch java.lang.Throwable from label040 to label041 with label051;
        catch java.lang.Throwable from label043 to label044 with label051;
        catch java.lang.Throwable from label045 to label046 with label051;
        catch java.lang.Throwable from label049 to label050 with label051;
        catch java.lang.Exception from label050 to label051 with label061;
        catch java.lang.Exception from label054 to label055 with label061;
        catch java.lang.Throwable from label055 to label056 with label058;
        catch java.lang.Throwable from label056 to label057 with label058;
        catch java.lang.Throwable from label059 to label060 with label058;
        catch java.lang.Exception from label060 to label061 with label061;
        catch java.lang.Exception from label063 to label064 with label079;
        catch java.lang.Throwable from label064 to label065 with label074;
        catch java.lang.Throwable from label066 to label067 with label068;
        catch java.lang.Throwable from label069 to label070 with label074;
        catch java.lang.Throwable from label070 to label071 with label078;
        catch java.lang.Throwable from label071 to label072 with label078;
        catch java.lang.Throwable from label072 to label073 with label078;
        catch java.lang.Throwable from label075 to label076 with label078;
        catch java.lang.Exception from label076 to label077 with label077;
        catch java.lang.Exception from label081 to label082 with label098;
        catch java.lang.Exception from label082 to label083 with label097;
        catch java.lang.Throwable from label083 to label084 with label092;
        catch java.lang.Throwable from label085 to label086 with label096;
        catch java.lang.Throwable from label088 to label089 with label096;
        catch java.lang.Throwable from label090 to label091 with label096;
        catch java.lang.Throwable from label094 to label095 with label096;
        catch java.lang.Exception from label095 to label096 with label120;
        catch java.lang.Exception from label100 to label101 with label120;
        catch java.lang.Exception from label102 to label103 with label120;
        catch java.lang.Exception from label104 to label105 with label120;
        catch java.lang.Throwable from label105 to label106 with label114;
        catch java.lang.Throwable from label107 to label108 with label119;
        catch java.lang.Throwable from label110 to label111 with label119;
        catch java.lang.Throwable from label112 to label113 with label119;
        catch java.lang.Throwable from label116 to label117 with label119;
        catch java.lang.Exception from label118 to label119 with label120;
        catch java.lang.Throwable from label123 to label124 with label126;
        catch java.lang.Throwable from label124 to label125 with label129;
        catch java.lang.Throwable from label127 to label128 with label129;
    }

    public void lambda$new$0$FuseAppLoop()
    {
        com.android.internal.os.FuseAppLoop r0;
        java.lang.Object r1;
        long $l0, $l1;
        com.android.internal.os.FuseAppLoop$BytesMap $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        $l0 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_start(long)>($l0);

        r1 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $l1 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        virtualinvoke r0.<com.android.internal.os.FuseAppLoop: void native_delete(long)>($l1);

        r0.<com.android.internal.os.FuseAppLoop: long mInstance> = 0L;

        $r3 = r0.<com.android.internal.os.FuseAppLoop: com.android.internal.os.FuseAppLoop$BytesMap mBytesMap>;

        virtualinvoke $r3.<com.android.internal.os.FuseAppLoop$BytesMap: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    native void native_delete(long);

    native long native_new(int);

    native void native_replyGetAttr(long, long, long, long);

    native void native_replyLookup(long, long, long, long);

    native void native_replyOpen(long, long, long);

    native void native_replyRead(long, long, int, byte[]);

    native void native_replySimple(long, long, int);

    native void native_replyWrite(long, long, int);

    native void native_start(long);

    public int registerCallback(android.os.ProxyFileDescriptorCallback, android.os.Handler) throws com.android.internal.os.FuseUnavailableMountException
    {
        com.android.internal.os.FuseAppLoop r0;
        android.os.Handler r1, r5;
        java.lang.Object r2, $r13;
        int i0, $i6, $i7, i8, i9;
        android.util.SparseArray r3, $r8, $r12;
        com.android.internal.os.FuseAppLoop$CallbackEntry r4;
        java.lang.Thread $r9, $r11;
        long $l1, $l2, $l4;
        android.os.Looper $r10, $r14;
        byte $b3, $b5;
        java.lang.Throwable $r15;
        android.os.ProxyFileDescriptorCallback r16;
        boolean z1, z2;
        com.android.internal.os.FuseUnavailableMountException r17;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        r16 := @parameter0: android.os.ProxyFileDescriptorCallback;

        r1 := @parameter1: android.os.Handler;

        r2 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r8 = r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap>;

        i8 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

     label02:
        if i8 >= 2147483645 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>(z1, "Too many opened files.");

     label05:
        z2 = 0;

     label06:
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l1 = virtualinvoke $r9.<java.lang.Thread: long getId()>();

        $r10 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r11 = virtualinvoke $r10.<android.os.Looper: java.lang.Thread getThread()>();

        $l2 = virtualinvoke $r11.<java.lang.Thread: long getId()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label08;

     label07:
        z2 = 1;

     label08:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "Handler must be different from the current thread");

        $l4 = r0.<com.android.internal.os.FuseAppLoop: long mInstance>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label15;

     label09:
        i9 = r0.<com.android.internal.os.FuseAppLoop: int mNextInode>;

        $i7 = r0.<com.android.internal.os.FuseAppLoop: int mNextInode>;

        i0 = $i7 + 1;

        r0.<com.android.internal.os.FuseAppLoop: int mNextInode> = i0;

     label10:
        if i0 >= 0 goto label12;

     label11:
        r0.<com.android.internal.os.FuseAppLoop: int mNextInode> = 2;

     label12:
        $r12 = r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i9);

        if $r13 != null goto label09;

     label13:
        r3 = r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap>;

        r4 = new com.android.internal.os.FuseAppLoop$CallbackEntry;

        r5 = new android.os.Handler;

        $r14 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r5.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r14, r0);

        specialinvoke r4.<com.android.internal.os.FuseAppLoop$CallbackEntry: void <init>(android.os.ProxyFileDescriptorCallback,android.os.Handler)>(r16, r5);

        virtualinvoke r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i9, r4);

        exitmonitor r2;

     label14:
        return i9;

     label15:
        r17 = new com.android.internal.os.FuseUnavailableMountException;

        $i6 = r0.<com.android.internal.os.FuseAppLoop: int mMountPointId>;

        specialinvoke r17.<com.android.internal.os.FuseUnavailableMountException: void <init>(int)>($i6);

        throw r17;

     label16:
        $r15 := @caughtexception;

     label17:
        exitmonitor r2;

     label18:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void unregisterCallback(int)
    {
        com.android.internal.os.FuseAppLoop r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.internal.os.FuseAppLoop;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.os.FuseAppLoop: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.os.FuseAppLoop: android.util.SparseArray mCallbackMap>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
