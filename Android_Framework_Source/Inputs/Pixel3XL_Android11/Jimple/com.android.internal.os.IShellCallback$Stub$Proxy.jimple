class com.android.internal.os.IShellCallback$Stub$Proxy extends java.lang.Object implements com.android.internal.os.IShellCallback
{
    public static com.android.internal.os.IShellCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.os.IShellCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.os.IShellCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.os.IShellCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.os.IShellCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.os.IShellCallback$Stub$Proxy;

        $r1 = r0.<com.android.internal.os.IShellCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.os.IShellCallback$Stub$Proxy r0;

        r0 := @this: com.android.internal.os.IShellCallback$Stub$Proxy;

        return "com.android.internal.os.IShellCallback";
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.os.IShellCallback$Stub$Proxy r0;
        java.lang.String r1, r2, r11;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        com.android.internal.os.IShellCallback $r8, $r9;
        java.lang.Throwable $r10;
        android.os.ParcelFileDescriptor r12, r13;

        r0 := @this: com.android.internal.os.IShellCallback$Stub$Proxy;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.os.IShellCallback");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<com.android.internal.os.IShellCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r8 = staticinvoke <com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback getDefaultImpl()>();

        if $r8 == null goto label3;

        $r9 = staticinvoke <com.android.internal.os.IShellCallback$Stub: com.android.internal.os.IShellCallback getDefaultImpl()>();

        r12 = interfaceinvoke $r9.<com.android.internal.os.IShellCallback: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,java.lang.String)>(r11, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r12;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r6 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r13 = (android.os.ParcelFileDescriptor) $r7;

     label4:
        goto label6;

     label5:
        r13 = null;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r13;

     label7:
        $r10 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }
}
