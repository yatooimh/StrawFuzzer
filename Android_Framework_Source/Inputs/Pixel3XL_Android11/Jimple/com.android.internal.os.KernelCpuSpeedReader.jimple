public class com.android.internal.os.KernelCpuSpeedReader extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final long[] mDeltaSpeedTimesMs;
    private final long mJiffyMillis;
    private final long[] mLastSpeedTimesMs;
    private final int mNumSpeedSteps;
    private final java.lang.String mProcFile;

    public void <init>(int, int)
    {
        com.android.internal.os.KernelCpuSpeedReader r0;
        int i0, i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        long[] $r4, $r5;
        long $l3, $l4;

        r0 := @this: com.android.internal.os.KernelCpuSpeedReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/sys/devices/system/cpu/cpu%d/cpufreq/stats/time_in_state", $r1);

        r0.<com.android.internal.os.KernelCpuSpeedReader: java.lang.String mProcFile> = $r3;

        r0.<com.android.internal.os.KernelCpuSpeedReader: int mNumSpeedSteps> = i1;

        $r4 = newarray (long)[i1];

        r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mLastSpeedTimesMs> = $r4;

        $r5 = newarray (long)[i1];

        r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mDeltaSpeedTimesMs> = $r5;

        $i2 = <android.system.OsConstants: int _SC_CLK_TCK>;

        $l3 = staticinvoke <android.system.Os: long sysconf(int)>($i2);

        $l4 = 1000L / $l3;

        r0.<com.android.internal.os.KernelCpuSpeedReader: long mJiffyMillis> = $l4;

        return;
    }

    public long[] readAbsolute()
    {
        com.android.internal.os.KernelCpuSpeedReader r0;
        android.os.StrictMode$ThreadPolicy r1;
        java.lang.String r2, $r3, $r5, $r11, $r13;
        int $i0, $i1, i6;
        long $l2, $l3, $l4;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        long[] r14;
        java.io.FileReader r23;
        java.io.BufferedReader r24;
        android.text.TextUtils$SimpleStringSplitter r25;
        java.lang.StringBuilder r26;
        java.io.IOException r27;

        r0 := @this: com.android.internal.os.KernelCpuSpeedReader;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $i0 = r0.<com.android.internal.os.KernelCpuSpeedReader: int mNumSpeedSteps>;

        r14 = newarray (long)[$i0];

     label01:
        r24 = new java.io.BufferedReader;

        r23 = new java.io.FileReader;

        $r3 = r0.<com.android.internal.os.KernelCpuSpeedReader: java.lang.String mProcFile>;

        specialinvoke r23.<java.io.FileReader: void <init>(java.lang.String)>($r3);

        specialinvoke r24.<java.io.BufferedReader: void <init>(java.io.Reader)>(r23);

     label02:
        r25 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke r25.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(32);

     label03:
        i6 = 0;

     label04:
        $i1 = r0.<com.android.internal.os.KernelCpuSpeedReader: int mNumSpeedSteps>;

        if i6 >= $i1 goto label08;

        r2 = virtualinvoke r24.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if r2 == null goto label08;

     label06:
        virtualinvoke r25.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r2);

        virtualinvoke r25.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r5 = virtualinvoke r25.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $l3 = r0.<com.android.internal.os.KernelCpuSpeedReader: long mJiffyMillis>;

        $l4 = $l2 * $l3;

        r14[i6] = $l4;

     label07:
        i6 = i6 + 1;

        goto label04;

     label08:
        virtualinvoke r24.<java.io.BufferedReader: void close()>();

     label09:
        goto label19;

     label10:
        $r7 := @caughtexception;

     label11:
        virtualinvoke r24.<java.io.BufferedReader: void close()>();

     label12:
        goto label15;

     label13:
        $r8 := @caughtexception;

     label14:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label15:
        throw $r7;

     label16:
        $r6 := @caughtexception;

        goto label20;

     label17:
        $r9 := @caughtexception;

     label18:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read cpu-freq: ");

        r27 = (java.io.IOException) $r9;

        $r11 = virtualinvoke r27.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KernelCpuSpeedReader", $r13);

        staticinvoke <java.util.Arrays: void fill(long[],long)>(r14, 0L);

     label19:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        return r14;

     label20:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw $r6;

        catch java.io.IOException from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }

    public long[] readDelta()
    {
        com.android.internal.os.KernelCpuSpeedReader r0;
        android.os.StrictMode$ThreadPolicy r1;
        long l0, $l2, $l3, $l4, $l6, $l7;
        java.lang.String $r3, $r7, $r18, $r20, r24;
        long[] $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r21;
        int $i1, i9;
        byte $b5;
        java.lang.Throwable $r13, $r14, $r15, $r16;
        java.io.FileReader r30;
        java.io.BufferedReader r31;
        android.text.TextUtils$SimpleStringSplitter r32;
        java.lang.StringBuilder r33;
        java.io.IOException r34;

        r0 := @this: com.android.internal.os.KernelCpuSpeedReader;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label01:
        r31 = new java.io.BufferedReader;

        r30 = new java.io.FileReader;

        $r3 = r0.<com.android.internal.os.KernelCpuSpeedReader: java.lang.String mProcFile>;

        specialinvoke r30.<java.io.FileReader: void <init>(java.lang.String)>($r3);

        specialinvoke r31.<java.io.BufferedReader: void <init>(java.io.Reader)>(r30);

     label02:
        r32 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke r32.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(32);

     label03:
        i9 = 0;

     label04:
        $r4 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mLastSpeedTimesMs>;

        $i1 = lengthof $r4;

        if i9 >= $i1 goto label11;

        r24 = virtualinvoke r31.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if r24 == null goto label11;

     label06:
        virtualinvoke r32.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r24);

        virtualinvoke r32.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r7 = virtualinvoke r32.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        $l3 = r0.<com.android.internal.os.KernelCpuSpeedReader: long mJiffyMillis>;

        l0 = $l2 * $l3;

        $r8 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mLastSpeedTimesMs>;

        $l4 = $r8[i9];

        $b5 = l0 cmp $l4;

        if $b5 >= 0 goto label08;

        $r12 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mDeltaSpeedTimesMs>;

        $r12[i9] = l0;

     label07:
        goto label09;

     label08:
        $r10 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mDeltaSpeedTimesMs>;

        $r9 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mLastSpeedTimesMs>;

        $l6 = $r9[i9];

        $l7 = l0 - $l6;

        $r10[i9] = $l7;

     label09:
        $r11 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mLastSpeedTimesMs>;

        $r11[i9] = l0;

     label10:
        i9 = i9 + 1;

        goto label04;

     label11:
        virtualinvoke r31.<java.io.BufferedReader: void close()>();

     label12:
        goto label22;

     label13:
        $r13 := @caughtexception;

     label14:
        virtualinvoke r31.<java.io.BufferedReader: void close()>();

     label15:
        goto label18;

     label16:
        $r15 := @caughtexception;

     label17:
        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

     label18:
        throw $r13;

     label19:
        $r14 := @caughtexception;

        goto label23;

     label20:
        $r16 := @caughtexception;

     label21:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read cpu-freq: ");

        r34 = (java.io.IOException) $r16;

        $r18 = virtualinvoke r34.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KernelCpuSpeedReader", $r20);

        $r21 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mDeltaSpeedTimesMs>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r21, 0L);

     label22:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        $r5 = r0.<com.android.internal.os.KernelCpuSpeedReader: long[] mDeltaSpeedTimesMs>;

        return $r5;

     label23:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw $r14;

        catch java.io.IOException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label21 to label22 with label19;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.KernelCpuSpeedReader: java.lang.String TAG> = "KernelCpuSpeedReader";

        return;
    }
}
