public class com.android.internal.os.KernelCpuThreadReaderSettingsObserver extends android.database.ContentObserver
{
    private static final java.lang.String COLLECTED_UIDS_DEFAULT;
    private static final java.lang.String COLLECTED_UIDS_SETTINGS_KEY;
    private static final int MINIMUM_TOTAL_CPU_USAGE_MILLIS_DEFAULT;
    private static final java.lang.String MINIMUM_TOTAL_CPU_USAGE_MILLIS_SETTINGS_KEY;
    private static final int NUM_BUCKETS_DEFAULT;
    private static final java.lang.String NUM_BUCKETS_SETTINGS_KEY;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.internal.os.KernelCpuThreadReader mKernelCpuThreadReader;
    private final com.android.internal.os.KernelCpuThreadReaderDiff mKernelCpuThreadReaderDiff;

    private void <init>(android.content.Context)
    {
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver r0;
        android.os.Handler $r1;
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate $r2;
        com.android.internal.os.KernelCpuThreadReaderDiff $r3, r6;
        android.content.Context r4;
        com.android.internal.os.KernelCpuThreadReader r5;

        r0 := @this: com.android.internal.os.KernelCpuThreadReaderSettingsObserver;

        r4 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r1);

        r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: android.content.Context mContext> = r4;

        $r2 = staticinvoke <com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate: com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate fromString(java.lang.String)>("0-0;1000-1000");

        r5 = staticinvoke <com.android.internal.os.KernelCpuThreadReader: com.android.internal.os.KernelCpuThreadReader create(int,java.util.function.Predicate)>(8, $r2);

        r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReader mKernelCpuThreadReader> = r5;

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        $r3 = new com.android.internal.os.KernelCpuThreadReaderDiff;

        specialinvoke $r3.<com.android.internal.os.KernelCpuThreadReaderDiff: void <init>(com.android.internal.os.KernelCpuThreadReader,int)>(r5, 10000);

        r6 = $r3;

     label2:
        r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReaderDiff mKernelCpuThreadReaderDiff> = r6;

        return;
    }

    public static com.android.internal.os.KernelCpuThreadReaderDiff getSettingsModifiedReader(android.content.Context)
    {
        android.content.Context r0;
        android.net.Uri r2;
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver $r3;
        android.content.ContentResolver $r4;
        com.android.internal.os.KernelCpuThreadReaderDiff $r5;

        r0 := @parameter0: android.content.Context;

        $r3 = new com.android.internal.os.KernelCpuThreadReaderSettingsObserver;

        specialinvoke $r3.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: void <init>(android.content.Context)>(r0);

        r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("kernel_cpu_thread_reader");

        $r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>(r2, 0, $r3, 0);

        $r5 = $r3.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReaderDiff mKernelCpuThreadReaderDiff>;

        return $r5;
    }

    private void updateReader()
    {
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver r0;
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate r1;
        com.android.internal.os.KernelCpuThreadReader $r2, $r8, $r9;
        android.util.KeyValueListParser $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6, $r7;
        int $i0, $i1;
        com.android.internal.os.KernelCpuThreadReaderDiff $r10;
        java.lang.Throwable $r11, $r12;

        r0 := @this: com.android.internal.os.KernelCpuThreadReaderSettingsObserver;

        $r2 = r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReader mKernelCpuThreadReader>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new android.util.KeyValueListParser;

        specialinvoke $r3.<android.util.KeyValueListParser: void <init>(char)>(44);

     label2:
        $r4 = r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, "kernel_cpu_thread_reader");

        virtualinvoke $r3.<android.util.KeyValueListParser: void setString(java.lang.String)>($r6);

     label3:
        $r7 = virtualinvoke $r3.<android.util.KeyValueListParser: java.lang.String getString(java.lang.String,java.lang.String)>("collected_uids", "0-0;1000-1000");

        r1 = staticinvoke <com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate: com.android.internal.os.KernelCpuThreadReaderSettingsObserver$UidPredicate fromString(java.lang.String)>($r7);

     label4:
        $r8 = r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReader mKernelCpuThreadReader>;

        $i0 = virtualinvoke $r3.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("num_buckets", 8);

        virtualinvoke $r8.<com.android.internal.os.KernelCpuThreadReader: void setNumBuckets(int)>($i0);

        $r9 = r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReader mKernelCpuThreadReader>;

        virtualinvoke $r9.<com.android.internal.os.KernelCpuThreadReader: void setUidPredicate(java.util.function.Predicate)>(r1);

        $r10 = r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: com.android.internal.os.KernelCpuThreadReaderDiff mKernelCpuThreadReaderDiff>;

        $i1 = virtualinvoke $r3.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("minimum_total_cpu_usage_millis", 10000);

        virtualinvoke $r10.<com.android.internal.os.KernelCpuThreadReaderDiff: void setMinimumTotalCpuUsageMillis(int)>($i1);

        return;

     label5:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("KernelCpuThreadReaderSettingsObserver", "Failed to get UID predicate", $r11);

        return;

     label6:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("KernelCpuThreadReaderSettingsObserver", "Bad settings", $r12);

        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public void onChange(boolean, java.util.Collection, int, int)
    {
        com.android.internal.os.KernelCpuThreadReaderSettingsObserver r0;
        boolean z0;
        java.util.Collection r1;
        int i0, i1;

        r0 := @this: com.android.internal.os.KernelCpuThreadReaderSettingsObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.Collection;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.internal.os.KernelCpuThreadReaderSettingsObserver: void updateReader()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: java.lang.String TAG> = "KernelCpuThreadReaderSettingsObserver";

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: java.lang.String NUM_BUCKETS_SETTINGS_KEY> = "num_buckets";

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: int NUM_BUCKETS_DEFAULT> = 8;

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: java.lang.String MINIMUM_TOTAL_CPU_USAGE_MILLIS_SETTINGS_KEY> = "minimum_total_cpu_usage_millis";

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: int MINIMUM_TOTAL_CPU_USAGE_MILLIS_DEFAULT> = 10000;

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: java.lang.String COLLECTED_UIDS_SETTINGS_KEY> = "collected_uids";

        <com.android.internal.os.KernelCpuThreadReaderSettingsObserver: java.lang.String COLLECTED_UIDS_DEFAULT> = "0-0;1000-1000";

        return;
    }
}
