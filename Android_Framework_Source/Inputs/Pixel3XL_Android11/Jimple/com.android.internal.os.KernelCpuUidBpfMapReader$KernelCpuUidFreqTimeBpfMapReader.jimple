public class com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader extends com.android.internal.os.KernelCpuUidBpfMapReader
{

    public void <init>()
    {
        com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader r0;

        r0 := @this: com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidBpfMapReader: void <init>()>();

        return;
    }

    private final native boolean removeUidRange(int, int);

    public final native long[] getDataDimensions();

    protected final native boolean readBpfData();

    public void removeUidsInRange(int, int)
    {
        com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader r0;
        int i0, i1;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r1, $r2;

        r0 := @this: com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock mWriteLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        specialinvoke r0.<com.android.internal.os.KernelCpuUidBpfMapReader: void removeUidsInRange(int,int)>(i0, i1);

        specialinvoke r0.<com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader: boolean removeUidRange(int,int)>(i0, i1);

        $r2 = r0.<com.android.internal.os.KernelCpuUidBpfMapReader$KernelCpuUidFreqTimeBpfMapReader: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock mWriteLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        return;
    }
}
