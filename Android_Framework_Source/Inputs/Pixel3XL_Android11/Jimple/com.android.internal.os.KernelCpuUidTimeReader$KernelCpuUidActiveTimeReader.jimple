public class com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader extends com.android.internal.os.KernelCpuUidTimeReader
{
    private long[] mBuffer;
    private int mCores;

    public void <init>(com.android.internal.os.KernelCpuProcStringReader, com.android.internal.os.KernelCpuUidBpfMapReader, boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        com.android.internal.os.KernelCpuProcStringReader r1;
        com.android.internal.os.KernelCpuUidBpfMapReader r2;
        boolean z0;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r1 := @parameter0: com.android.internal.os.KernelCpuProcStringReader;

        r2 := @parameter1: com.android.internal.os.KernelCpuUidBpfMapReader;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,com.android.internal.os.KernelCpuUidBpfMapReader,boolean)>(r1, r2, z0);

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores> = 0;

        return;
    }

    public void <init>(boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        boolean z0;
        com.android.internal.os.KernelCpuProcStringReader $r1;
        com.android.internal.os.KernelCpuUidBpfMapReader $r2;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getActiveTimeReaderInstance()>();

        $r2 = staticinvoke <com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getActiveTimeReaderInstance()>();

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,com.android.internal.os.KernelCpuUidBpfMapReader,boolean)>($r1, $r2, z0);

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores> = 0;

        return;
    }

    private boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2, $r3, $r8, $r12, $r13, r16, r17, r19;
        long[] $r4;
        java.lang.StringBuilder $r5, $r9;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r14;
        java.nio.CharBuffer r15;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r14 := @parameter0: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator;

        if r14 == null goto label6;

        $z0 = virtualinvoke r14.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: boolean hasNextLine()>();

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        r15 = virtualinvoke r14.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

        $i1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores>;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r15.<java.nio.CharBuffer: java.lang.String toString()>();

        r16 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r16.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r13 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r13, "Empty uid_concurrent_active_time");

        return 0;

     label3:
        $z2 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("cpus:");

        if $z2 != 0 goto label4;

        r17 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed uid_concurrent_active_time line: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r17, $r12);

        return 0;

     label4:
        $r2 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(5);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 10);

        if i0 > 0 goto label5;

        r19 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed uid_concurrent_active_time line: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r19, $r8);

        return 0;

     label5:
        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores> = i0;

        $i2 = i0 + 1;

        $r4 = newarray (long)[$i2];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer> = $r4;

        return 1;

     label6:
        return 0;
    }

    private boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        int i0, $i1, $i2, $i4;
        com.android.internal.os.KernelCpuUidBpfMapReader $r1;
        long $l3;
        long[] $r2, r4;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r3;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r3 := @parameter0: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator;

        if r3 != null goto label1;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable> = 0;

        return 0;

     label1:
        $i1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores>;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        $r1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        r4 = virtualinvoke $r1.<com.android.internal.os.KernelCpuUidBpfMapReader: long[] getDataDimensions()>();

        if r4 == null goto label4;

        $i2 = lengthof r4;

        if $i2 >= 1 goto label3;

        goto label4;

     label3:
        $l3 = r4[0];

        i0 = (int) $l3;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: int mCores> = i0;

        $i4 = i0 + 1;

        $r2 = newarray (long)[$i4];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer> = $r2;

        return 1;

     label4:
        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable> = 0;

        return 0;
    }

    private void processUidAbsolute(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r1;
        long[] r2, $r3;
        long l0, $l2;
        boolean $z0;
        byte $b1;
        int $i3;
        java.lang.Long $r4;
        double d0;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r1 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $z0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable>;

        if $z0 == 0 goto label1;

        d0 = 1.0;

        goto label2;

     label1:
        d0 = 10.0;

     label2:
        l0 = staticinvoke <com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long sumActiveTime(long[],double)>(r2, d0);

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label3;

        $r3 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $l2 = $r3[0];

        $i3 = (int) $l2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke r1.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>($i3, $r4);

     label3:
        return;
    }

    private void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        int i0;
        long l1, l2, $l3, $l5;
        boolean $z0;
        byte $b4, $b6, $b7;
        android.util.SparseArray $r1, $r9;
        java.lang.Long $r2, $r4, $r10, $r11;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r14;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r12;
        long[] r13;
        double d0;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r12 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        r13 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $l3 = r13[0];

        i0 = (int) $l3;

        $z0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable>;

        if $z0 == 0 goto label1;

        d0 = 1.0;

        goto label2;

     label1:
        d0 = 10.0;

     label2:
        l1 = staticinvoke <com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long sumActiveTime(long[],double)>(r13, d0);

        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label4;

        $r1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: android.util.SparseArray mLastTimes>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r3 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>(i0, $r2);

        $r4 = (java.lang.Long) $r3;

        $l5 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        l2 = l1 - $l5;

        $b6 = l2 cmp 0L;

        if $b6 <= 0 goto label3;

        $r9 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: android.util.SparseArray mLastTimes>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r10);

        if r12 == null goto label4;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        interfaceinvoke r12.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>(i0, $r11);

        goto label4;

     label3:
        $b7 = l2 cmp 0L;

        if $b7 >= 0 goto label4;

        r14 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative delta from active time proc: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r14, $r8);

     label4:
        return;
    }

    private static long sumActiveTime(long[], double)
    {
        long[] r0;
        double d0, $d1, $d2, $d3, $d4, d5;
        int $i0, i3;
        long $l1, $l2;

        r0 := @parameter0: long[];

        d0 := @parameter1: double;

        d5 = 0.0;

        i3 = 1;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label2;

        $l2 = r0[i3];

        $d1 = (double) $l2;

        $d3 = $d1 * d0;

        $d2 = (double) i3;

        $d4 = $d3 / $d2;

        d5 = d5 + $d4;

        i3 = i3 + 1;

        goto label1;

     label2:
        $l1 = (long) d5;

        return $l1;
    }

    void readAbsoluteImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.nio.CharBuffer r1;
        java.lang.String r2, $r7, $r9;
        java.lang.StringBuilder r3;
        long[] $r4, $r5, $r11;
        int $i0, $i1;
        com.android.internal.os.KernelCpuUidBpfMapReader $r10;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r16;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r17;
        com.android.internal.os.KernelCpuProcStringReader $r20;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r21;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r16 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $z1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable>;

        if $z1 == 0 goto label12;

        $r10 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        $z2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mThrottle>;

        $z3 = $z2 ^ 1;

        r17 = virtualinvoke $r10.<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator open(boolean)>($z3);

     label01:
        $z4 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)>(r17);

        if $z4 == 0 goto label06;

     label02:
        $r11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $z5 = virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])>($r11);

        if $z5 == 0 goto label04;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void processUidAbsolute(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label03:
        goto label02;

     label04:
        if r17 == null goto label05;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label05:
        return;

     label06:
        if r17 == null goto label12;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

        goto label12;

     label07:
        $r13 := @caughtexception;

        if r17 == null goto label11;

     label08:
        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

     label11:
        throw $r13;

     label12:
        $r20 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mThrottle>;

        $z7 = $z6 ^ 1;

        r21 = virtualinvoke $r20.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z7);

     label13:
        z0 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)>(r21);

     label14:
        if z0 != 0 goto label16;

        if r21 == null goto label15;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label15:
        return;

     label16:
        r1 = virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label17:
        if r1 == null goto label22;

     label18:
        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $i0 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r1, $r4);

        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label20;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r7 = virtualinvoke r1.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r2, $r9);

     label19:
        goto label16;

     label20:
        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void processUidAbsolute(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label21:
        goto label16;

     label22:
        if r21 == null goto label23;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label23:
        return;

     label24:
        $r14 := @caughtexception;

        if r21 == null goto label28;

     label25:
        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label26:
        goto label28;

     label27:
        $r12 := @caughtexception;

        virtualinvoke $r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label28:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    void readDeltaImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.nio.CharBuffer r1;
        java.lang.String r2, $r7, $r9;
        java.lang.StringBuilder r3;
        long[] $r4, $r5, $r11;
        int $i0, $i1;
        com.android.internal.os.KernelCpuUidBpfMapReader $r10;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r16;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r17;
        com.android.internal.os.KernelCpuProcStringReader $r20;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r21;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

        r16 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $z1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mBpfTimesAvailable>;

        if $z1 == 0 goto label12;

        $r10 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        $z2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mThrottle>;

        $z3 = $z2 ^ 1;

        r17 = virtualinvoke $r10.<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator open(boolean)>($z3);

     label01:
        $z4 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)>(r17);

        if $z4 == 0 goto label06;

     label02:
        $r11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $z5 = virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])>($r11);

        if $z5 == 0 goto label04;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label03:
        goto label02;

     label04:
        if r17 == null goto label05;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label05:
        return;

     label06:
        if r17 == null goto label12;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

        goto label12;

     label07:
        $r13 := @caughtexception;

        if r17 == null goto label11;

     label08:
        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

     label11:
        throw $r13;

     label12:
        $r20 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean mThrottle>;

        $z7 = $z6 ^ 1;

        r21 = virtualinvoke $r20.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z7);

     label13:
        z0 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)>(r21);

     label14:
        if z0 != 0 goto label16;

        if r21 == null goto label15;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label15:
        return;

     label16:
        r1 = virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label17:
        if r1 == null goto label22;

     label18:
        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $i0 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r1, $r4);

        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: long[] mBuffer>;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label20;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: java.lang.String mTag>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r7 = virtualinvoke r1.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r2, $r9);

     label19:
        goto label16;

     label20:
        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader: void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label21:
        goto label16;

     label22:
        if r21 == null goto label23;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label23:
        return;

     label24:
        $r12 := @caughtexception;

        if r21 == null goto label28;

     label25:
        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label26:
        goto label28;

     label27:
        $r14 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label28:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
    }
}
