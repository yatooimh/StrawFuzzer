public class com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader extends com.android.internal.os.KernelCpuUidTimeReader
{
    private long[] mBuffer;
    private int[] mCoresOnClusters;
    private long[] mCurTime;
    private long[] mDeltaTime;
    private int mNumClusters;
    private int mNumCores;

    public void <init>(com.android.internal.os.KernelCpuProcStringReader, com.android.internal.os.KernelCpuUidBpfMapReader, boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        com.android.internal.os.KernelCpuProcStringReader r1;
        com.android.internal.os.KernelCpuUidBpfMapReader r2;
        boolean z0;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r1 := @parameter0: com.android.internal.os.KernelCpuProcStringReader;

        r2 := @parameter1: com.android.internal.os.KernelCpuUidBpfMapReader;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,com.android.internal.os.KernelCpuUidBpfMapReader,boolean)>(r1, r2, z0);

        return;
    }

    public void <init>(boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        boolean z0;
        com.android.internal.os.KernelCpuProcStringReader $r1;
        com.android.internal.os.KernelCpuUidBpfMapReader $r2;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getClusterTimeReaderInstance()>();

        $r2 = staticinvoke <com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader getClusterTimeReaderInstance()>();

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,com.android.internal.os.KernelCpuUidBpfMapReader,boolean)>($r1, $r2, z0);

        return;
    }

    private boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i15, i16, i17;
        java.lang.String $r1, $r5, $r6, $r10, $r14, $r15, r18, r20, r23;
        long[] $r2, $r3, $r4;
        java.lang.StringBuilder $r7, $r11;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r16;
        java.nio.CharBuffer r17;
        java.lang.String[] r19;
        int[] r22;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r16 := @parameter0: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator;

        if r16 == null goto label8;

        $z0 = virtualinvoke r16.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: boolean hasNextLine()>();

        if $z0 != 0 goto label1;

        goto label8;

     label1:
        r17 = virtualinvoke r16.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

        $i0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r17.<java.nio.CharBuffer: java.lang.String toString()>();

        r18 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r18.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r15 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r15, "Empty uid_concurrent_policy_time");

        return 0;

     label3:
        r19 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i1 = lengthof r19;

        $i2 = $i1 % 2;

        if $i2 == 0 goto label4;

        r20 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed uid_concurrent_policy_time line: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r20, $r14);

        return 0;

     label4:
        $i3 = lengthof r19;

        $i4 = $i3 / 2;

        r22 = newarray (int)[$i4];

        i15 = 0;

        i16 = 0;

     label5:
        $i5 = lengthof r22;

        if i16 >= $i5 goto label7;

        $i7 = i16 * 2;

        $r5 = r19[$i7];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("policy");

        if $z2 != 0 goto label6;

        r23 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed uid_concurrent_policy_time line: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r23, $r10);

        return 0;

     label6:
        $i8 = i16 * 2;

        $i9 = $i8 + 1;

        $r6 = r19[$i9];

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 10);

        r22[i16] = $i10;

        $i11 = r22[i16];

        i15 = i15 + $i11;

        i16 = i16 + 1;

        goto label5;

     label7:
        i17 = lengthof r22;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters> = i17;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumCores> = i15;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int[] mCoresOnClusters> = r22;

        $i6 = i15 + 1;

        $r2 = newarray (long)[$i6];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer> = $r2;

        $r3 = newarray (long)[i17];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime> = $r3;

        $r4 = newarray (long)[i17];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime> = $r4;

        return 1;

     label8:
        return 0;
    }

    private boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        int i0, $i1, $i2, $i3, $i5, $i6, i7, i8, i9;
        int[] r1, $r3;
        com.android.internal.os.KernelCpuUidBpfMapReader $r2;
        long[] $r4, $r5, $r6, r8;
        long $l4;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r7;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r7 := @parameter0: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator;

        if r7 != null goto label1;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mBpfTimesAvailable> = 0;

        return 0;

     label1:
        $i1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        r8 = virtualinvoke $r2.<com.android.internal.os.KernelCpuUidBpfMapReader: long[] getDataDimensions()>();

        if r8 == null goto label6;

        $i2 = lengthof r8;

        if $i2 >= 1 goto label3;

        goto label6;

     label3:
        i7 = lengthof r8;

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters> = i7;

        $r3 = newarray (int)[i7];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int[] mCoresOnClusters> = $r3;

        i8 = 0;

        i9 = 0;

     label4:
        i0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        if i9 >= i0 goto label5;

        r1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int[] mCoresOnClusters>;

        $l4 = r8[i9];

        $i5 = (int) $l4;

        r1[i9] = $i5;

        $i6 = r1[i9];

        i8 = i8 + $i6;

        i9 = i9 + 1;

        goto label4;

     label5:
        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumCores> = i8;

        $i3 = i8 + 1;

        $r4 = newarray (long)[$i3];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer> = $r4;

        $r5 = newarray (long)[i0];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime> = $r5;

        $r6 = newarray (long)[i0];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime> = $r6;

        return 1;

     label6:
        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mBpfTimesAvailable> = 0;

        return 0;
    }

    private void sumClusterTime()
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        boolean $z0;
        int[] $r1;
        int $i0, i3, i4, $i5, i6;
        long $l1, $l2;
        long[] $r2, $r3;
        double $d0, $d1, $d2, $d3, d4, d5;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        $z0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mBpfTimesAvailable>;

        if $z0 == 0 goto label1;

        d4 = 1.0;

        goto label2;

     label1:
        d4 = 10.0;

     label2:
        i3 = 1;

        i4 = 0;

     label3:
        $i5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        if i4 >= $i5 goto label6;

        d5 = 0.0;

        i6 = 1;

     label4:
        $r1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int[] mCoresOnClusters>;

        $i0 = $r1[i4];

        if i6 > $i0 goto label5;

        $r3 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $l2 = $r3[i3];

        $d0 = (double) $l2;

        $d2 = $d0 * d4;

        $d1 = (double) i6;

        $d3 = $d2 / $d1;

        d5 = d5 + $d3;

        i6 = i6 + 1;

        i3 = i3 + 1;

        goto label4;

     label5:
        $r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime>;

        $l1 = (long) d5;

        $r2[i4] = $l1;

        i4 = i4 + 1;

        goto label3;

     label6:
        return;
    }

    void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r1;
        int i0, $i11, i12, i13;
        java.lang.String r2, $r14;
        long[] $r3, $r6, $r7, $r8, $r9, $r12, r16, r17, r18;
        long $l1, $l2, $l3, $l4, $l5, $l7, $l9;
        android.util.SparseArray $r4, $r15;
        java.lang.Object $r5;
        byte $b6, $b8;
        java.lang.StringBuilder $r10;
        boolean z0, z1, z2;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r1 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $r3 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $l1 = $r3[0];

        i0 = (int) $l1;

        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: android.util.SparseArray mLastTimes>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r16 = (long[]) $r5;

        r17 = r16;

        if r16 != null goto label1;

        $i11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        r17 = newarray (long)[$i11];

        $r15 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: android.util.SparseArray mLastTimes>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r17);

     label1:
        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void sumClusterTime()>();

        z0 = 1;

        z1 = 0;

        i12 = 0;

     label2:
        i13 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: int mNumClusters>;

        if i12 >= i13 goto label6;

        r18 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime>;

        $r8 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime>;

        $l3 = $r8[i12];

        $l2 = r17[i12];

        $l4 = $l3 - $l2;

        r18[i12] = $l4;

        $l5 = r18[i12];

        $b6 = $l5 cmp 0L;

        if $b6 >= 0 goto label3;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative delta from cluster time proc: ");

        $r12 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime>;

        $l9 = $r12[i12];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r2, $r14);

        z0 = 0;

     label3:
        $r9 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime>;

        $l7 = $r9[i12];

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        z1 = z1 | z2;

        i12 = i12 + 1;

        goto label2;

     label6:
        if z1 == 0 goto label7;

        if z0 == 0 goto label7;

        $r6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r17, 0, i13);

        if r1 == null goto label7;

        $r7 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mDeltaTime>;

        interfaceinvoke r1.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>(i0, $r7);

     label7:
        return;
    }

    void readAbsoluteImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.nio.CharBuffer r1;
        java.lang.String r2, $r9, $r11;
        java.lang.StringBuilder r3;
        long[] $r4, $r5, $r6, $r7, $r13, $r14, $r15;
        int $i0, $i1, $i3, $i6;
        long $l2, $l5;
        com.android.internal.os.KernelCpuUidBpfMapReader $r12;
        java.lang.Throwable $r16, $r17, $r18, $r19;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r20;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r21;
        com.android.internal.os.KernelCpuProcStringReader $r24;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r25;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r20 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $z1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mBpfTimesAvailable>;

        if $z1 == 0 goto label12;

        $r12 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        $z2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mThrottle>;

        $z3 = $z2 ^ 1;

        r21 = virtualinvoke $r12.<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator open(boolean)>($z3);

     label01:
        $z4 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)>(r21);

        if $z4 == 0 goto label06;

     label02:
        $r13 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $z5 = virtualinvoke r21.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])>($r13);

        if $z5 == 0 goto label04;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void sumClusterTime()>();

        $r14 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $l5 = $r14[0];

        $i6 = (int) $l5;

        $r15 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime>;

        interfaceinvoke r20.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>($i6, $r15);

     label03:
        goto label02;

     label04:
        if r21 == null goto label05;

        virtualinvoke r21.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label05:
        return;

     label06:
        if r21 == null goto label12;

        virtualinvoke r21.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

        goto label12;

     label07:
        $r17 := @caughtexception;

        if r21 == null goto label11;

     label08:
        virtualinvoke r21.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        virtualinvoke $r17.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r19);

     label11:
        throw $r17;

     label12:
        $r24 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mThrottle>;

        $z7 = $z6 ^ 1;

        r25 = virtualinvoke $r24.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z7);

     label13:
        z0 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)>(r25);

     label14:
        if z0 != 0 goto label16;

        if r25 == null goto label15;

        virtualinvoke r25.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label15:
        return;

     label16:
        r1 = virtualinvoke r25.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label17:
        if r1 == null goto label22;

     label18:
        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $i0 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r1, $r4);

        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label20;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r9 = virtualinvoke r1.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r2, $r11);

     label19:
        goto label16;

     label20:
        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void sumClusterTime()>();

        $r6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $l2 = $r6[0];

        $i3 = (int) $l2;

        $r7 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mCurTime>;

        interfaceinvoke r20.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>($i3, $r7);

     label21:
        goto label16;

     label22:
        if r25 == null goto label23;

        virtualinvoke r25.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label23:
        return;

     label24:
        $r16 := @caughtexception;

        if r25 == null goto label28;

     label25:
        virtualinvoke r25.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label26:
        goto label28;

     label27:
        $r18 := @caughtexception;

        virtualinvoke $r16.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r18);

     label28:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    void readDeltaImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.nio.CharBuffer r1;
        java.lang.String r2, $r7, $r9;
        java.lang.StringBuilder r3;
        long[] $r4, $r5, $r11;
        int $i0, $i1;
        com.android.internal.os.KernelCpuUidBpfMapReader $r10;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r16;
        com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator r17;
        com.android.internal.os.KernelCpuProcStringReader $r20;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r21;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

        r16 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $z1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mBpfTimesAvailable>;

        if $z1 == 0 goto label12;

        $r10 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: com.android.internal.os.KernelCpuUidBpfMapReader mBpfReader>;

        $z2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mThrottle>;

        $z3 = $z2 ^ 1;

        r17 = virtualinvoke $r10.<com.android.internal.os.KernelCpuUidBpfMapReader: com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator open(boolean)>($z3);

     label01:
        $z4 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator)>(r17);

        if $z4 == 0 goto label06;

     label02:
        $r11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $z5 = virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: boolean getNextUid(long[])>($r11);

        if $z5 == 0 goto label04;

        virtualinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label03:
        goto label02;

     label04:
        if r17 == null goto label05;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label05:
        return;

     label06:
        if r17 == null goto label12;

        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

        goto label12;

     label07:
        $r13 := @caughtexception;

        if r17 == null goto label11;

     label08:
        virtualinvoke r17.<com.android.internal.os.KernelCpuUidBpfMapReader$BpfMapIterator: void close()>();

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

     label11:
        throw $r13;

     label12:
        $r20 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean mThrottle>;

        $z7 = $z6 ^ 1;

        r21 = virtualinvoke $r20.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z7);

     label13:
        z0 = specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: boolean checkPrecondition(com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator)>(r21);

     label14:
        if z0 != 0 goto label16;

        if r21 == null goto label15;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label15:
        return;

     label16:
        r1 = virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label17:
        if r1 == null goto label22;

     label18:
        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $i0 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r1, $r4);

        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: long[] mBuffer>;

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label20;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: java.lang.String mTag>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r7 = virtualinvoke r1.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r2, $r9);

     label19:
        goto label16;

     label20:
        virtualinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader: void processUidDelta(com.android.internal.os.KernelCpuUidTimeReader$Callback)>(r16);

     label21:
        goto label16;

     label22:
        if r21 == null goto label23;

        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label23:
        return;

     label24:
        $r12 := @caughtexception;

        if r21 == null goto label28;

     label25:
        virtualinvoke r21.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label26:
        goto label28;

     label27:
        $r14 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label28:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
    }
}
