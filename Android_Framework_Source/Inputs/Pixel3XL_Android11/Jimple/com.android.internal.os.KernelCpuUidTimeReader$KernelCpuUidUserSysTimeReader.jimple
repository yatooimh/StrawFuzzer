public class com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader extends com.android.internal.os.KernelCpuUidTimeReader
{
    private static final java.lang.String REMOVE_UID_PROC_FILE;
    private final long[] mBuffer;
    private final long[] mUsrSysTime;

    public void <init>(com.android.internal.os.KernelCpuProcStringReader, boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        com.android.internal.os.KernelCpuProcStringReader r1;
        boolean z0;
        long[] $r2, $r3;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        r1 := @parameter0: com.android.internal.os.KernelCpuProcStringReader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,boolean)>(r1, z0);

        $r2 = newarray (long)[4];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer> = $r2;

        $r3 = newarray (long)[2];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime> = $r3;

        return;
    }

    public void <init>(boolean)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        boolean z0;
        com.android.internal.os.KernelCpuProcStringReader $r1;
        long[] $r2, $r3;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader getUserSysTimeReaderInstance()>();

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void <init>(com.android.internal.os.KernelCpuProcStringReader,boolean)>($r1, z0);

        $r2 = newarray (long)[4];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer> = $r2;

        $r3 = newarray (long)[2];

        r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime> = $r3;

        return;
    }

    private void removeUidsFromKernelModule(int, int)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        int i0, i1, i2;
        java.lang.String r1, $r7, $r11, $r21, r22;
        java.lang.StringBuilder $r2, r25, r30;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        java.io.FileWriter r24;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r22 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String mTag>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing uids ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r22, $r7);

        i2 = staticinvoke <android.os.StrictMode: int allowThreadDiskWritesMask()>();

     label01:
        r24 = new java.io.FileWriter;

        specialinvoke r24.<java.io.FileWriter: void <init>(java.lang.String)>("/proc/uid_cputime/remove_uid_range");

     label02:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.FileWriter: void write(java.lang.String)>($r11);

        virtualinvoke r24.<java.io.FileWriter: void flush()>();

     label03:
        virtualinvoke r24.<java.io.FileWriter: void close()>();

     label04:
        goto label14;

     label05:
        $r12 := @caughtexception;

     label06:
        virtualinvoke r24.<java.io.FileWriter: void close()>();

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

     label09:
        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label10:
        throw $r12;

     label11:
        $r13 := @caughtexception;

        goto label15;

     label12:
        $r15 := @caughtexception;

     label13:
        r1 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String mTag>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to remove uids ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from uid_cputime module");

        $r21 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r1, $r21, $r15);

     label14:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i2);

        return;

     label15:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i2);

        throw $r13;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
    }

    void readAbsoluteImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        java.nio.CharBuffer r1;
        java.lang.String r2, $r13, $r15;
        java.lang.StringBuilder r3;
        boolean $z0, $z1;
        com.android.internal.os.KernelCpuProcStringReader $r4;
        long[] $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i4;
        long $l1, $l2, $l3;
        java.lang.Throwable $r16, $r17;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r18;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r19;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        r18 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: boolean mThrottle>;

        $z1 = $z0 ^ 1;

        r19 = virtualinvoke $r4.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z1);

        if r19 != null goto label02;

        if r19 == null goto label01;

        virtualinvoke r19.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label01:
        return;

     label02:
        r1 = virtualinvoke r19.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label03:
        if r1 == null goto label08;

     label04:
        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $i0 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r1, $r5);

        if $i0 >= 3 goto label06;

        r2 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String mTag>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r13 = virtualinvoke r1.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r2, $r15);

     label05:
        goto label02;

     label06:
        $r7 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $r6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $l1 = $r6[1];

        $r7[0] = $l1;

        $r9 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $r8 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $l2 = $r8[2];

        $r9[1] = $l2;

        $r10 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $l3 = $r10[0];

        $i4 = (int) $l3;

        $r11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        interfaceinvoke r18.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>($i4, $r11);

     label07:
        goto label02;

     label08:
        if r19 == null goto label09;

        virtualinvoke r19.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label09:
        return;

     label10:
        $r16 := @caughtexception;

        if r19 == null goto label14;

     label11:
        virtualinvoke r19.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label12:
        goto label14;

     label13:
        $r17 := @caughtexception;

        virtualinvoke $r16.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r17);

     label14:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    void readDeltaImpl(com.android.internal.os.KernelCpuUidTimeReader$Callback)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator r1;
        int i0, $i3;
        long[] r2, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r24, $r25, $r26, $r27, r42;
        long l1, l2, $l4, $l5, $l6, $l7, $l8, $l9, $l11, $l12, $l14, $l16, $l18;
        boolean $z0, $z1;
        com.android.internal.os.KernelCpuProcStringReader $r3;
        android.util.SparseArray $r6, $r28;
        java.lang.Object $r7;
        byte $b10, $b15, $b17, $b19;
        java.lang.String $r23, $r30, $r32, r40, r43;
        java.lang.Throwable $r33, $r34;
        com.android.internal.os.KernelCpuUidTimeReader$Callback r35;
        java.nio.CharBuffer r39;
        java.lang.StringBuilder r41, r44;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        r35 := @parameter0: com.android.internal.os.KernelCpuUidTimeReader$Callback;

        $r3 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: com.android.internal.os.KernelCpuProcStringReader mReader>;

        $z0 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: boolean mThrottle>;

        $z1 = $z0 ^ 1;

        r1 = virtualinvoke $r3.<com.android.internal.os.KernelCpuProcStringReader: com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator open(boolean)>($z1);

        if r1 != null goto label02;

        if r1 == null goto label01;

        virtualinvoke r1.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label01:
        return;

     label02:
        r39 = virtualinvoke r1.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: java.nio.CharBuffer nextLine()>();

     label03:
        if r39 == null goto label20;

     label04:
        $r4 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $i3 = staticinvoke <com.android.internal.os.KernelCpuProcStringReader: int asLongs(java.nio.CharBuffer,long[])>(r39, $r4);

        if $i3 >= 3 goto label06;

        r40 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String mTag>;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid line: ");

        $r30 = virtualinvoke r39.<java.nio.CharBuffer: java.lang.String toString()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r40, $r32);

     label05:
        goto label02;

     label06:
        $r5 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        $l4 = $r5[0];

        i0 = (int) $l4;

        $r6 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: android.util.SparseArray mLastTimes>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (long[]) $r7;

     label07:
        r42 = r2;

        if r2 != null goto label09;

     label08:
        r42 = newarray (long)[2];

        $r28 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: android.util.SparseArray mLastTimes>;

        virtualinvoke $r28.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r42);

     label09:
        $r8 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        l1 = $r8[1];

        $r9 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mBuffer>;

        l2 = $r9[2];

        $r10 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l5 = r42[0];

        $l6 = l1 - $l5;

        $r10[0] = $l6;

        $r11 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l7 = r42[1];

        $l8 = l2 - $l7;

        $r11[1] = $l8;

        $r12 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l9 = $r12[0];

        $b10 = $l9 cmp 0L;

        if $b10 < 0 goto label18;

        $r24 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l14 = $r24[1];

        $b15 = $l14 cmp 0L;

        if $b15 >= 0 goto label11;

     label10:
        goto label18;

     label11:
        $r25 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l16 = $r25[0];

        $b17 = $l16 cmp 0L;

        if $b17 > 0 goto label14;

        $r27 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        $l18 = $r27[1];

        $b19 = $l18 cmp 0L;

        if $b19 <= 0 goto label13;

     label12:
        goto label14;

     label13:
        goto label19;

     label14:
        if r35 == null goto label17;

     label15:
        $r26 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: long[] mUsrSysTime>;

        interfaceinvoke r35.<com.android.internal.os.KernelCpuUidTimeReader$Callback: void onUidCpuTime(int,java.lang.Object)>(i0, $r26);

     label16:
        goto label19;

     label17:
        goto label19;

     label18:
        r43 = r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String mTag>;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative user/sys time delta for UID=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPrev times: u=");

        $l11 = r42[0];

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=");

        $l12 = r42[1];

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Curr times: u=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r23 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r43, $r23);

     label19:
        r42[0] = l1;

        r42[1] = l2;

        goto label02;

     label20:
        if r1 == null goto label21;

        virtualinvoke r1.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label21:
        return;

     label22:
        $r33 := @caughtexception;

        if r1 == null goto label26;

     label23:
        virtualinvoke r1.<com.android.internal.os.KernelCpuProcStringReader$ProcFileIterator: void close()>();

     label24:
        goto label26;

     label25:
        $r34 := @caughtexception;

        virtualinvoke $r33.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r34);

     label26:
        throw $r33;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public void removeUid(int)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        int i0;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void removeUid(int)>(i0);

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void removeUidsFromKernelModule(int,int)>(i0, i0);

        return;
    }

    public void removeUidsInRange(int, int)
    {
        com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader r0;
        int i0, i1;

        r0 := @this: com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader: void removeUidsInRange(int,int)>(i0, i1);

        specialinvoke r0.<com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: void removeUidsFromKernelModule(int,int)>(i0, i1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader: java.lang.String REMOVE_UID_PROC_FILE> = "/proc/uid_cputime/remove_uid_range";

        return;
    }
}
