public class com.android.internal.os.KernelMemoryBandwidthStats extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private static final java.lang.String mSysfsFile;
    protected final android.util.LongSparseLongArray mBandwidthEntries;
    private boolean mStatsDoNotExist;

    public void <init>()
    {
        com.android.internal.os.KernelMemoryBandwidthStats r0;
        android.util.LongSparseLongArray $r1;

        r0 := @this: com.android.internal.os.KernelMemoryBandwidthStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.LongSparseLongArray;

        specialinvoke $r1.<android.util.LongSparseLongArray: void <init>()>();

        r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries> = $r1;

        r0.<com.android.internal.os.KernelMemoryBandwidthStats: boolean mStatsDoNotExist> = 0;

        return;
    }

    public android.util.LongSparseLongArray getBandwidthEntries()
    {
        com.android.internal.os.KernelMemoryBandwidthStats r0;
        android.util.LongSparseLongArray $r1;

        r0 := @this: com.android.internal.os.KernelMemoryBandwidthStats;

        $r1 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        return $r1;
    }

    public void parseStats(java.io.BufferedReader) throws java.io.IOException
    {
        com.android.internal.os.KernelMemoryBandwidthStats r0;
        java.io.BufferedReader r1;
        int i0, i10;
        android.text.TextUtils$SimpleStringSplitter $r3;
        android.util.LongSparseLongArray $r4, $r6, $r7, r11;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        java.lang.String $r8, $r9, r10;
        boolean $z0;

        r0 := @this: com.android.internal.os.KernelMemoryBandwidthStats;

        r1 := @parameter0: java.io.BufferedReader;

        $r3 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(32);

        $r4 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        virtualinvoke $r4.<android.util.LongSparseLongArray: void clear()>();

     label1:
        r10 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        if r10 == null goto label5;

        virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r10);

        virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        i10 = 0;

     label2:
        $r6 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        $l1 = (long) i10;

        i0 = virtualinvoke $r6.<android.util.LongSparseLongArray: int indexOfKey(long)>($l1);

        if i0 < 0 goto label3;

        r11 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        $l5 = (long) i10;

        $l6 = virtualinvoke r11.<android.util.LongSparseLongArray: long valueAt(int)>(i0);

        $r9 = virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $l8 = $l7 / 1000000L;

        $l9 = $l6 + $l8;

        virtualinvoke r11.<android.util.LongSparseLongArray: void put(long,long)>($l5, $l9);

        goto label4;

     label3:
        $r7 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        $l2 = (long) i10;

        $r8 = virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $l4 = $l3 / 1000000L;

        virtualinvoke $r7.<android.util.LongSparseLongArray: void put(long,long)>($l2, $l4);

     label4:
        i10 = i10 + 1;

        $z0 = virtualinvoke $r3.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label1;

     label5:
        return;
    }

    public void updateStats()
    {
        com.android.internal.os.KernelMemoryBandwidthStats r0;
        boolean $z0;
        java.lang.String $r5, $r13, $r15;
        java.lang.Throwable $r6, $r7, $r9, $r10, $r11;
        android.util.LongSparseLongArray $r8, $r16;
        long l3, $l4, l5;
        android.os.StrictMode$ThreadPolicy r17;
        byte $b6;
        java.io.FileReader r27;
        java.io.BufferedReader r28;
        java.lang.StringBuilder r29, r30;
        java.io.IOException r31;

        r0 := @this: com.android.internal.os.KernelMemoryBandwidthStats;

        $z0 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: boolean mStatsDoNotExist>;

        if $z0 == 0 goto label01;

        return;

     label01:
        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r17 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label02:
        r28 = new java.io.BufferedReader;

        r27 = new java.io.FileReader;

        specialinvoke r27.<java.io.FileReader: void <init>(java.lang.String)>("/sys/kernel/memory_state_time/show_stat");

        specialinvoke r28.<java.io.BufferedReader: void <init>(java.io.Reader)>(r27);

     label03:
        virtualinvoke r0.<com.android.internal.os.KernelMemoryBandwidthStats: void parseStats(java.io.BufferedReader)>(r28);

     label04:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label05:
        goto label18;

     label06:
        $r10 := @caughtexception;

     label07:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

     label10:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label11:
        throw $r10;

     label12:
        $r6 := @caughtexception;

        goto label20;

     label13:
        $r11 := @caughtexception;

     label14:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read memory bandwidth: ");

        r31 = (java.io.IOException) $r11;

        $r13 = virtualinvoke r31.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KernelMemoryBandwidthStats", $r15);

        $r16 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        virtualinvoke $r16.<android.util.LongSparseLongArray: void clear()>();

     label15:
        goto label18;

     label16:
        $r7 := @caughtexception;

     label17:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KernelMemoryBandwidthStats", "No kernel memory bandwidth stats available");

        $r8 = r0.<com.android.internal.os.KernelMemoryBandwidthStats: android.util.LongSparseLongArray mBandwidthEntries>;

        virtualinvoke $r8.<android.util.LongSparseLongArray: void clear()>();

        r0.<com.android.internal.os.KernelMemoryBandwidthStats: boolean mStatsDoNotExist> = 1;

     label18:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r17);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l5 = $l4 - l3;

        $b6 = l5 cmp 100L;

        if $b6 <= 0 goto label19;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading memory bandwidth file took ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r5 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KernelMemoryBandwidthStats", $r5);

     label19:
        return;

     label20:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r17);

        throw $r6;

        catch java.io.FileNotFoundException from label02 to label03 with label16;
        catch java.io.IOException from label02 to label03 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.io.FileNotFoundException from label04 to label05 with label16;
        catch java.io.IOException from label04 to label05 with label13;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label10 to label11 with label16;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.FileNotFoundException from label11 to label12 with label16;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.KernelMemoryBandwidthStats: java.lang.String mSysfsFile> = "/sys/kernel/memory_state_time/show_stat";

        <com.android.internal.os.KernelMemoryBandwidthStats: java.lang.String TAG> = "KernelMemoryBandwidthStats";

        <com.android.internal.os.KernelMemoryBandwidthStats: boolean DEBUG> = 0;

        return;
    }
}
