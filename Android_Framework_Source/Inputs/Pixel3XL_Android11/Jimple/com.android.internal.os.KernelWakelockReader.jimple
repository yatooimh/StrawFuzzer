public class com.android.internal.os.KernelWakelockReader extends java.lang.Object
{
    private static final int[] PROC_WAKELOCKS_FORMAT;
    private static final java.lang.String TAG;
    private static final int[] WAKEUP_SOURCES_FORMAT;
    private static int sKernelWakelockUpdateVersion;
    private static final java.lang.String sSysClassWakeupDir;
    private static final java.lang.String sWakelockFile;
    private static final java.lang.String sWakeupSourceFile;
    private byte[] mKernelWakelockBuffer;
    private final long[] mProcWakelocksData;
    private final java.lang.String[] mProcWakelocksName;
    private android.system.suspend.ISuspendControlService mSuspendControlService;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <com.android.internal.os.KernelWakelockReader: java.lang.String sWakeupSourceFile> = "/d/wakeup_sources";

        <com.android.internal.os.KernelWakelockReader: java.lang.String sWakelockFile> = "/proc/wakelocks";

        <com.android.internal.os.KernelWakelockReader: java.lang.String sSysClassWakeupDir> = "/sys/class/wakeup";

        <com.android.internal.os.KernelWakelockReader: java.lang.String TAG> = "KernelWakelockReader";

        <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion> = 0;

        $r0 = newarray (int)[6];

        $r0[0] = 5129;

        $r0[1] = 8201;

        $r0[2] = 9;

        $r0[3] = 9;

        $r0[4] = 9;

        $r0[5] = 8201;

        <com.android.internal.os.KernelWakelockReader: int[] PROC_WAKELOCKS_FORMAT> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = 4105;

        $r1[1] = 8457;

        $r1[2] = 265;

        $r1[3] = 265;

        $r1[4] = 265;

        $r1[5] = 265;

        $r1[6] = 8457;

        <com.android.internal.os.KernelWakelockReader: int[] WAKEUP_SOURCES_FORMAT> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.KernelWakelockReader r0;
        java.lang.String[] $r1;
        long[] $r2;
        byte[] $r3;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.KernelWakelockReader: java.lang.String[] mProcWakelocksName> = $r1;

        $r2 = newarray (long)[3];

        r0.<com.android.internal.os.KernelWakelockReader: long[] mProcWakelocksData> = $r2;

        r0.<com.android.internal.os.KernelWakelockReader: android.system.suspend.ISuspendControlService mSuspendControlService> = null;

        $r3 = newarray (byte)[32768];

        r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer> = $r3;

        return;
    }

    private com.android.internal.os.KernelWakelockStats getWakelockStatsFromSystemSuspend(com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        android.system.suspend.ISuspendControlService $r1, $r2, $r6;
        android.system.suspend.WakeLockInfo[] $r3;
        android.os.IBinder $r5;
        android.os.RemoteException $r7;
        android.os.ServiceManager$ServiceNotFoundException $r8;
        com.android.internal.os.KernelWakelockStats r9;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r9 := @parameter0: com.android.internal.os.KernelWakelockStats;

        $r1 = r0.<com.android.internal.os.KernelWakelockReader: android.system.suspend.ISuspendControlService mSuspendControlService>;

        if $r1 != null goto label4;

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("suspend_control");

        $r6 = staticinvoke <android.system.suspend.ISuspendControlService$Stub: android.system.suspend.ISuspendControlService asInterface(android.os.IBinder)>($r5);

        r0.<com.android.internal.os.KernelWakelockReader: android.system.suspend.ISuspendControlService mSuspendControlService> = $r6;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("KernelWakelockReader", "Required service suspend_control not available", $r8);

        return null;

     label4:
        $r2 = r0.<com.android.internal.os.KernelWakelockReader: android.system.suspend.ISuspendControlService mSuspendControlService>;

        $r3 = interfaceinvoke $r2.<android.system.suspend.ISuspendControlService: android.system.suspend.WakeLockInfo[] getWakeLockStats()>();

        virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats updateWakelockStats(android.system.suspend.WakeLockInfo[],com.android.internal.os.KernelWakelockStats)>($r3, r9);

     label5:
        return r9;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("KernelWakelockReader", "Failed to obtain wakelock stats from ISuspendControlService", $r7);

        return null;

        catch android.os.ServiceManager$ServiceNotFoundException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public com.android.internal.os.KernelWakelockStats parseProcWakelocks(byte[], int, boolean, com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        int i0, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i14, i24, i25, i26, $i28, i30, i31;
        boolean z0, z1, $z2;
        com.android.internal.os.KernelWakelockStats r1;
        java.lang.String[] r2;
        java.lang.String $r3, $r6, r15, r19;
        long $l1, $l2, $l3, $l12, $l13, $l15, l32;
        java.lang.Object $r7;
        byte $b16, $b18, $b19, $b20, $b21, $b22;
        short $s17;
        java.lang.Throwable $r9, $r11, r21;
        java.lang.Exception $r10;
        byte[] r12;
        long[] r13;
        int[] r14;
        com.android.internal.os.KernelWakelockStats$Entry r16, r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r12 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: com.android.internal.os.KernelWakelockStats;

        i24 = 0;

     label01:
        if i24 >= i0 goto label02;

        $b21 = r12[i24];

        if $b21 == 10 goto label02;

        $b22 = r12[i24];

        if $b22 == 0 goto label02;

        i24 = i24 + 1;

        goto label01;

     label02:
        i25 = i24 + 1;

        i26 = i25;

        entermonitor r0;

     label03:
        if i26 >= i0 goto label30;

        i26 = i25;

     label04:
        if i26 >= i0 goto label05;

        $b19 = r12[i26];

        if $b19 == 10 goto label05;

        $b20 = r12[i26];

        if $b20 == 0 goto label05;

        i26 = i26 + 1;

        goto label04;

     label05:
        $i28 = i0 - 1;

        if i26 <= $i28 goto label06;

        goto label30;

     label06:
        r2 = r0.<com.android.internal.os.KernelWakelockReader: java.lang.String[] mProcWakelocksName>;

        r13 = r0.<com.android.internal.os.KernelWakelockReader: long[] mProcWakelocksData>;

     label07:
        i30 = i25;

     label08:
        if i30 >= i26 goto label10;

        $b16 = r12[i30];

        $s17 = $b16 & 128;

        if $s17 == 0 goto label09;

        $b18 = (byte) 63;

        r12[i30] = $b18;

     label09:
        i30 = i30 + 1;

        goto label08;

     label10:
        if z0 == 0 goto label13;

     label11:
        r14 = <com.android.internal.os.KernelWakelockReader: int[] WAKEUP_SOURCES_FORMAT>;

     label12:
        goto label14;

     label13:
        r14 = <com.android.internal.os.KernelWakelockReader: int[] PROC_WAKELOCKS_FORMAT>;

     label14:
        z1 = staticinvoke <android.os.Process: boolean parseProcLine(byte[],int,int,int[],java.lang.String[],long[],float[])>(r12, i25, i26, r14, r2, r13, null);

        $r3 = r2[0];

        r15 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label15:
        $l1 = r13[1];

        i31 = (int) $l1;

        if z0 == 0 goto label16;

        $l15 = r13[2];

        l32 = $l15 * 1000L;

        goto label17;

     label16:
        $l2 = r13[2];

        $l3 = $l2 + 500L;

        l32 = $l3 / 1000L;

     label17:
        if z1 == 0 goto label24;

     label18:
        $i6 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i6 <= 0 goto label24;

        $z2 = virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: boolean containsKey(java.lang.Object)>(r15);

        if $z2 != 0 goto label20;

        r16 = new com.android.internal.os.KernelWakelockStats$Entry;

        $i14 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        specialinvoke r16.<com.android.internal.os.KernelWakelockStats$Entry: void <init>(int,long,int)>(i31, l32, $i14);

        virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r16);

     label19:
        goto label29;

     label20:
        $r7 = virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: java.lang.Object get(java.lang.Object)>(r15);

        r17 = (com.android.internal.os.KernelWakelockStats$Entry) $r7;

        $i8 = r17.<com.android.internal.os.KernelWakelockStats$Entry: int mVersion>;

        $i7 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        if $i8 != $i7 goto label22;

        $i10 = r17.<com.android.internal.os.KernelWakelockStats$Entry: int mCount>;

        $i11 = $i10 + i31;

        r17.<com.android.internal.os.KernelWakelockStats$Entry: int mCount> = $i11;

        $l12 = r17.<com.android.internal.os.KernelWakelockStats$Entry: long mTotalTime>;

        $l13 = $l12 + l32;

        r17.<com.android.internal.os.KernelWakelockStats$Entry: long mTotalTime> = $l13;

     label21:
        goto label23;

     label22:
        r17.<com.android.internal.os.KernelWakelockStats$Entry: int mCount> = i31;

        r17.<com.android.internal.os.KernelWakelockStats$Entry: long mTotalTime> = l32;

        $i9 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        r17.<com.android.internal.os.KernelWakelockStats$Entry: int mVersion> = $i9;

     label23:
        goto label29;

     label24:
        if z1 != 0 goto label29;

     label25:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse proc line: ");

        r19 = new java.lang.String;

        $i4 = i26 - i25;

        specialinvoke r19.<java.lang.String: void <init>(byte[],int,int)>(r12, i25, $i4);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r6 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("KernelWakelockReader", $r6);

     label26:
        goto label29;

     label27:
        $r10 := @caughtexception;

     label28:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("KernelWakelockReader", "Failed to parse proc line!");

     label29:
        i25 = i26 + 1;

        goto label03;

     label30:
        exitmonitor r0;

     label31:
        return r1;

     label32:
        $r9 := @caughtexception;

        r21 = $r9;

     label33:
        exitmonitor r0;

     label34:
        throw r21;

     label35:
        $r11 := @caughtexception;

        r21 = $r11;

        goto label33;

        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.lang.Throwable from label13 to label14 with label35;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label16 to label17 with label35;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch java.lang.Throwable from label28 to label29 with label35;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label35;
    }

    public final com.android.internal.os.KernelWakelockStats readKernelWakelockStats(com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        java.io.File $r1;
        boolean $z0, z1;
        byte[] $r2, $r4, $r7, $r8, $r11, $r32, $r33;
        long $l0, l12, l17;
        byte $b1, $b4;
        com.android.internal.os.KernelWakelockStats $r6, $r20, $r21, r27, $r36;
        int $i3, $i5, i11, i13, $i14, $i15, i16, i18, i19;
        java.lang.StringBuilder $r9, $r14;
        java.lang.String $r13, $r18;
        java.lang.Throwable $r22, $r23, $r24, $r26;
        java.io.FileInputStream $r25, r28;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r27 := @parameter0: com.android.internal.os.KernelWakelockStats;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/sys/class/wakeup");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats updateVersion(com.android.internal.os.KernelWakelockStats)>(r27);

        $r20 = specialinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats getWakelockStatsFromSystemSuspend(com.android.internal.os.KernelWakelockStats)>(r27);

        if $r20 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KernelWakelockReader", "Failed to get wakelock stats from SystemSuspend");

        return null;

     label01:
        $r21 = virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats removeOldStats(com.android.internal.os.KernelWakelockStats)>(r27);

        return $r21;

     label02:
        $r2 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, 0);

        i11 = 0;

        l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i13 = staticinvoke <android.os.StrictMode: int allowThreadDiskReadsMask()>();

     label03:
        r28 = new java.io.FileInputStream;

        specialinvoke r28.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/wakelocks");

     label04:
        z1 = 0;

        goto label10;

     label05:
        $r22 := @caughtexception;

        goto label25;

     label06:
        $r26 := @caughtexception;

        goto label23;

     label07:
        $r24 := @caughtexception;

     label08:
        $r25 = new java.io.FileInputStream;

        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.lang.String)>("/d/wakeup_sources");

        r28 = $r25;

     label09:
        z1 = 1;

     label10:
        $r32 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        $r33 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        $i14 = lengthof $r33;

        $i15 = $i14 - i11;

        i16 = virtualinvoke r28.<java.io.FileInputStream: int read(byte[],int,int)>($r32, i11, $i15);

     label11:
        if i16 <= 0 goto label12;

        i11 = i11 + i16;

        goto label10;

     label12:
        virtualinvoke r28.<java.io.FileInputStream: void close()>();

     label13:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i13);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l17 = $l0 - l12;

        $b1 = l17 cmp 100L;

        if $b1 <= 0 goto label14;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading wakelock stats took ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KernelWakelockReader", $r18);

     label14:
        i18 = i11;

        if i11 <= 0 goto label18;

        $r7 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        $i3 = lengthof $r7;

        if i11 < $i3 goto label15;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kernel wake locks exceeded mKernelWakelockBuffer size ");

        $r11 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        $i5 = lengthof $r11;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("KernelWakelockReader", $r13);

     label15:
        i19 = 0;

     label16:
        i18 = i11;

        if i19 >= i11 goto label18;

        $r8 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        $b4 = $r8[i19];

        if $b4 != 0 goto label17;

        i18 = i19;

        goto label18;

     label17:
        i19 = i19 + 1;

        goto label16;

     label18:
        virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats updateVersion(com.android.internal.os.KernelWakelockStats)>(r27);

        $r36 = specialinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats getWakelockStatsFromSystemSuspend(com.android.internal.os.KernelWakelockStats)>(r27);

        if $r36 != null goto label19;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KernelWakelockReader", "Failed to get Native wakelock stats from SystemSuspend");

     label19:
        $r4 = r0.<com.android.internal.os.KernelWakelockReader: byte[] mKernelWakelockBuffer>;

        virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats parseProcWakelocks(byte[],int,boolean,com.android.internal.os.KernelWakelockStats)>($r4, i18, z1, r27);

        $r6 = virtualinvoke r0.<com.android.internal.os.KernelWakelockReader: com.android.internal.os.KernelWakelockStats removeOldStats(com.android.internal.os.KernelWakelockStats)>(r27);

        return $r6;

     label20:
        $r23 := @caughtexception;

     label21:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("KernelWakelockReader", "neither /proc/wakelocks nor /d/wakeup_sources exists");

     label22:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i13);

        return null;

     label23:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("KernelWakelockReader", "failed to read kernel wakelocks", $r26);

     label24:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i13);

        return null;

     label25:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i13);

        throw $r22;

        catch java.io.FileNotFoundException from label03 to label04 with label07;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label08 to label09 with label20;
        catch java.io.IOException from label08 to label09 with label06;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.io.IOException from label10 to label11 with label06;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.io.IOException from label12 to label13 with label06;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.io.IOException from label21 to label22 with label06;
        catch java.lang.Throwable from label21 to label22 with label05;
        catch java.lang.Throwable from label23 to label24 with label05;
    }

    public com.android.internal.os.KernelWakelockStats removeOldStats(com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        com.android.internal.os.KernelWakelockStats r1;
        java.util.Iterator r2;
        java.util.Collection $r3;
        java.lang.Object $r4;
        com.android.internal.os.KernelWakelockStats$Entry $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r1 := @parameter0: com.android.internal.os.KernelWakelockStats;

        $r3 = virtualinvoke r1.<com.android.internal.os.KernelWakelockStats: java.util.Collection values()>();

        r2 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.os.KernelWakelockStats$Entry) $r4;

        $i1 = $r5.<com.android.internal.os.KernelWakelockStats$Entry: int mVersion>;

        $i0 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        if $i1 == $i0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return r1;
    }

    public com.android.internal.os.KernelWakelockStats updateVersion(com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        com.android.internal.os.KernelWakelockStats r1;
        int i0, $i1;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r1 := @parameter0: com.android.internal.os.KernelWakelockStats;

        $i1 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        i0 = $i1 + 1;

        <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion> = i0;

        r1.<com.android.internal.os.KernelWakelockStats: int kernelWakelockVersion> = i0;

        return r1;
    }

    public com.android.internal.os.KernelWakelockStats updateWakelockStats(android.system.suspend.WakeLockInfo[], com.android.internal.os.KernelWakelockStats)
    {
        com.android.internal.os.KernelWakelockReader r0;
        android.system.suspend.WakeLockInfo[] r1;
        com.android.internal.os.KernelWakelockStats r2;
        int i0, $i2, $i5, $i8, $i10, i11;
        android.system.suspend.WakeLockInfo r3;
        com.android.internal.os.KernelWakelockStats$Entry r4, $r8;
        java.lang.String $r5, $r6, $r9;
        boolean $z0;
        java.lang.Object $r7;
        long $l1, $l3, $l4, $l6, $l7, $l9;

        r0 := @this: com.android.internal.os.KernelWakelockReader;

        r1 := @parameter0: android.system.suspend.WakeLockInfo[];

        r2 := @parameter1: com.android.internal.os.KernelWakelockStats;

        i0 = lengthof r1;

        i11 = 0;

     label1:
        if i11 >= i0 goto label4;

        r3 = r1[i11];

        $r5 = r3.<android.system.suspend.WakeLockInfo: java.lang.String name>;

        $z0 = virtualinvoke r2.<com.android.internal.os.KernelWakelockStats: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r9 = r3.<android.system.suspend.WakeLockInfo: java.lang.String name>;

        $r8 = new com.android.internal.os.KernelWakelockStats$Entry;

        $l6 = r3.<android.system.suspend.WakeLockInfo: long activeCount>;

        $i10 = (int) $l6;

        $l7 = r3.<android.system.suspend.WakeLockInfo: long totalTime>;

        $l9 = $l7 * 1000L;

        $i8 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        specialinvoke $r8.<com.android.internal.os.KernelWakelockStats$Entry: void <init>(int,long,int)>($i10, $l9, $i8);

        virtualinvoke r2.<com.android.internal.os.KernelWakelockStats: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        goto label3;

     label2:
        $r6 = r3.<android.system.suspend.WakeLockInfo: java.lang.String name>;

        $r7 = virtualinvoke r2.<com.android.internal.os.KernelWakelockStats: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (com.android.internal.os.KernelWakelockStats$Entry) $r7;

        $l1 = r3.<android.system.suspend.WakeLockInfo: long activeCount>;

        $i2 = (int) $l1;

        r4.<com.android.internal.os.KernelWakelockStats$Entry: int mCount> = $i2;

        $l3 = r3.<android.system.suspend.WakeLockInfo: long totalTime>;

        $l4 = $l3 * 1000L;

        r4.<com.android.internal.os.KernelWakelockStats$Entry: long mTotalTime> = $l4;

        $i5 = <com.android.internal.os.KernelWakelockReader: int sKernelWakelockUpdateVersion>;

        r4.<com.android.internal.os.KernelWakelockStats$Entry: int mVersion> = $i5;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        return r2;
    }
}
