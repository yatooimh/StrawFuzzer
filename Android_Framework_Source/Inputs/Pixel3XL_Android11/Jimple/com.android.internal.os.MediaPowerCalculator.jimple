public class com.android.internal.os.MediaPowerCalculator extends com.android.internal.os.PowerCalculator
{
    private static final int MS_IN_HR;
    private final double mAudioAveragePowerMa;
    private final double mVideoAveragePowerMa;

    public void <init>(com.android.internal.os.PowerProfile)
    {
        com.android.internal.os.MediaPowerCalculator r0;
        com.android.internal.os.PowerProfile r1;
        double $d0, $d1;

        r0 := @this: com.android.internal.os.MediaPowerCalculator;

        r1 := @parameter0: com.android.internal.os.PowerProfile;

        specialinvoke r0.<com.android.internal.os.PowerCalculator: void <init>()>();

        $d0 = virtualinvoke r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("audio");

        r0.<com.android.internal.os.MediaPowerCalculator: double mAudioAveragePowerMa> = $d0;

        $d1 = virtualinvoke r1.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("video");

        r0.<com.android.internal.os.MediaPowerCalculator: double mVideoAveragePowerMa> = $d1;

        return;
    }

    public void calculateApp(com.android.internal.os.BatterySipper, android.os.BatteryStats$Uid, long, long, int)
    {
        com.android.internal.os.MediaPowerCalculator r0;
        com.android.internal.os.BatterySipper r1;
        int i0;
        android.os.BatteryStats$Timer r2, r4;
        long $l1, $l2, l3, l4, l5, l6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.os.BatteryStats$Uid r3;

        r0 := @this: com.android.internal.os.MediaPowerCalculator;

        r1 := @parameter0: com.android.internal.os.BatterySipper;

        r3 := @parameter1: android.os.BatteryStats$Uid;

        l3 := @parameter2: long;

        l4 := @parameter3: long;

        i0 := @parameter4: int;

        r2 = virtualinvoke r3.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getAudioTurnedOnTimer()>();

        if r2 != null goto label1;

        r1.<com.android.internal.os.BatterySipper: long audioTimeMs> = 0L;

        r1.<com.android.internal.os.BatterySipper: double audioPowerMah> = 0.0;

        goto label2;

     label1:
        $l1 = virtualinvoke r2.<android.os.BatteryStats$Timer: long getTotalTimeLocked(long,int)>(l3, i0);

        l5 = $l1 / 1000L;

        r1.<com.android.internal.os.BatterySipper: long audioTimeMs> = l5;

        $d1 = (double) l5;

        $d0 = r0.<com.android.internal.os.MediaPowerCalculator: double mAudioAveragePowerMa>;

        $d2 = $d1 * $d0;

        $d3 = $d2 / 3600000.0;

        r1.<com.android.internal.os.BatterySipper: double audioPowerMah> = $d3;

     label2:
        r4 = virtualinvoke r3.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getVideoTurnedOnTimer()>();

        if r4 != null goto label3;

        r1.<com.android.internal.os.BatterySipper: long videoTimeMs> = 0L;

        r1.<com.android.internal.os.BatterySipper: double videoPowerMah> = 0.0;

        goto label4;

     label3:
        $l2 = virtualinvoke r4.<android.os.BatteryStats$Timer: long getTotalTimeLocked(long,int)>(l3, i0);

        l6 = $l2 / 1000L;

        r1.<com.android.internal.os.BatterySipper: long videoTimeMs> = l6;

        $d5 = (double) l6;

        $d4 = r0.<com.android.internal.os.MediaPowerCalculator: double mVideoAveragePowerMa>;

        $d6 = $d5 * $d4;

        $d7 = $d6 / 3600000.0;

        r1.<com.android.internal.os.BatterySipper: double videoPowerMah> = $d7;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.MediaPowerCalculator: int MS_IN_HR> = 3600000;

        return;
    }
}
